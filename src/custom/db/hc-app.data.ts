export const hcApp = '(()=>{"use strict";var e,r={},n={};function t(e){var o=n[e];if(void 0!==o)return o.exports;var a=n[e]={exports:{}};return r[e](a,a.exports,t),a.exports}t.m=r,e=[],t.O=(r,n,o,a)=>{if(!n){var l=1/0;for(u=0;u<e.length;u++){for(var[n,o,a]=e[u],s=!0,p=0;p<n.length;p++)(!1&a||l>=a)&&Object.keys(t.O).every(e=>t.O[e](n[p]))?n.splice(p--,1):(s=!1,a<l&&(l=a));s&&(e.splice(u--,1),r=o())}return r}a=a||0;for(var u=e.length;u>0&&e[u-1][2]>a;u--)e[u]=e[u-1];e[u]=[n,o,a]},t.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return t.d(r,{a:r}),r},t.d=(e,r)=>{for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},t.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),(()=>{var e={666:0};t.O.j=r=>0===e[r];var r=(r,n)=>{var o,a,[l,s,p]=n,u=0;for(o in s)t.o(s,o)&&(t.m[o]=s[o]);if(p)var f=p(t);for(r&&r(n);u<l.length;u++)t.o(e,a=l[u])&&e[a]&&e[a][0](),e[l[u]]=0;return t.O(f)},n=self.webpackChunkng_elements_example=self.webpackChunkng_elements_example||[];n.forEach(r.bind(null,0)),n.push=r.bind(null,n.push.bind(n))})()})();(self.webpackChunkng_elements_example=self.webpackChunkng_elements_example||[]).push([[429],{22:()=>{!function(e,t){"use strict";function n(){var e=M.splice(0,M.length);for(Ke=0;e.length;)e.shift().call(null,e.shift())}function o(e,t){for(var n=0,o=e.length;n<o;n++)d(e[n],t)}function r(e){return function(t){Ie(t)&&(d(t,e),ae.length&&o(t.querySelectorAll(ae),e))}}function a(e){var t=Ve.call(e,"is"),n=e.nodeName.toUpperCase(),o=se.call(oe,t?ee+t.toUpperCase():Q+n);return t&&-1<o&&!i(n,t)?-1:o}function i(e,t){return-1<ae.indexOf(e+'[is="'+t+'"]')}function s(e){var t=e.currentTarget,n=e.attrChange,o=e.attrName,r=e.target,a=e[$]||2,i=e[X]||3;!ot||r&&r!==t||!t[V]||"style"===o||e.prevValue===e.newValue&&(""!==e.newValue||n!==a&&n!==i)||t[V](o,n===a?null:e.prevValue,n===i?null:e.newValue)}function c(e){var t=r(e);return function(e){M.push(t,e.target),Ke&&clearTimeout(Ke),Ke=setTimeout(n,1)}}function l(e){nt&&(nt=!1,e.currentTarget.removeEventListener(K,l)),ae.length&&o((e.target||E).querySelectorAll(ae),e.detail===x?x:j),Ne&&function(){for(var e,t=0,n=Ae.length;t<n;t++)ie.contains(e=Ae[t])||(n--,Ae.splice(t--,1),d(e,x))}()}function u(e,t){var n=this;Be.call(n,e,t),L.call(n,{target:n})}function h(e,t,n){var o=t.apply(e,n),r=a(o);return-1<r&&Z(o,re[r]),n.pop()&&ae.length&&function(e){for(var t,n=0,o=e.length;n<o;n++)Z(t=e[n],re[a(t)])}(o.querySelectorAll(ae)),o}function p(e,t){De(e,t),O?O.observe(e,Xe):(tt&&(e.setAttribute=u,e[I]=S(e),e[A](J,L)),e[A](Y,s)),e[G]&&ot&&(e.created=!0,e[G](),e.created=!1)}function f(e){throw new Error("A "+e+" type is already registered")}function d(e,t){var n,o,r=a(e);-1<r&&!xe.call(e,"TEMPLATE")&&(H(e,re[r]),r=0,t!==j||e[j]?t!==x||e[x]||(e[j]=!1,e[x]=!0,o="disconnected",r=1):(e[x]=!1,e[j]=!0,o="connected",r=1,Ne&&se.call(Ae,e)<0&&Ae.push(e)),r&&(n=e[t+R]||e[o+R])&&n.call(e))}function m(){}function g(e,t,n){var o=n&&n[F]||"",r=t.prototype,a=Oe(r),i=t.observedAttributes||pe,s={prototype:a};ze(a,G,{value:function(){if(we)we=!1;else if(!this[ye]){this[ye]=!0,new t(this),r[G]&&r[G].call(this);var e=Me[Ce.get(t)];(!ve||e.create.length>1)&&_(this)}}}),ze(a,V,{value:function(e){-1<se.call(i,e)&&r[V]&&r[V].apply(this,arguments)}}),r[q]&&ze(a,U,{value:r[q]}),r[B]&&ze(a,W,{value:r[B]}),o&&(s[F]=o),e=e.toUpperCase(),Me[e]={constructor:t,create:o?[o,Se(e)]:[e]},Ce.set(t,e),E[N](e.toLowerCase(),s),v(e),Le[e].r()}function T(e){var t=Me[e.toUpperCase()];return t&&t.constructor}function y(e){return"string"==typeof e?e:e&&e.is||""}function _(e){for(var t,n=e[V],o=n?e.attributes:pe,r=o.length;r--;)n.call(e,(t=o[r]).name||t.nodeName,null,t.value||t.nodeValue)}function v(e){return(e=e.toUpperCase())in Le||(Le[e]={},Le[e].p=new be(function(t){Le[e].r=t})),Le[e].p}function k(){_e&&delete e.customElements,he(e,"customElements",{configurable:!0,value:new m}),he(e,"CustomElementRegistry",{configurable:!0,value:m});for(var t=w.get(/^HTML[A-Z]*[a-z]/),n=t.length;n--;function(t){var n=e[t];if(n){e[t]=function(e){var t,o;return e||(e=this),e[ye]||(we=!0,t=Me[Ce.get(e.constructor)],(e=(o=ve&&1===t.create.length)?Reflect.construct(n,pe,t.constructor):E.createElement.apply(E,t.create))[ye]=!0,we=!1,o||_(e)),e},e[t].prototype=n.prototype;try{n.prototype.constructor=e[t]}catch(o){he(n,ye,{value:e[t]})}}}(t[n]));E.createElement=function(e,t){var n=y(t);return n?$e.call(this,e,Se(n)):$e.call(this,e)},Je||(et=!0,E[N](""))}var E=e.document,b=e.Object,w=function(e){var t,n,o,r,a=/^[A-Z]+[a-z]/,i=function(e,t){(t=t.toLowerCase())in s||(s[e]=(s[e]||[]).concat(t),s[t]=s[t.toUpperCase()]=e)},s=(b.create||b)(null),c={};for(n in e)for(r in e[n])for(s[r]=o=e[n][r],t=0;t<o.length;t++)s[o[t].toLowerCase()]=s[o[t].toUpperCase()]=r;return c.get=function(e){return"string"==typeof e?s[e]||(a.test(e)?[]:""):function(e){var t,n=[];for(t in s)e.test(t)&&n.push(t);return n}(e)},c.set=function(e,t){return a.test(e)?i(e,t):i(t,e),c},c}({collections:{HTMLAllCollection:["all"],HTMLCollection:["forms"],HTMLFormControlsCollection:["elements"],HTMLOptionsCollection:["options"]},elements:{Element:["element"],HTMLAnchorElement:["a"],HTMLAppletElement:["applet"],HTMLAreaElement:["area"],HTMLAttachmentElement:["attachment"],HTMLAudioElement:["audio"],HTMLBRElement:["br"],HTMLBaseElement:["base"],HTMLBodyElement:["body"],HTMLButtonElement:["button"],HTMLCanvasElement:["canvas"],HTMLContentElement:["content"],HTMLDListElement:["dl"],HTMLDataElement:["data"],HTMLDataListElement:["datalist"],HTMLDetailsElement:["details"],HTMLDialogElement:["dialog"],HTMLDirectoryElement:["dir"],HTMLDivElement:["div"],HTMLDocument:["document"],HTMLElement:["element","abbr","address","article","aside","b","bdi","bdo","cite","code","command","dd","dfn","dt","em","figcaption","figure","footer","header","i","kbd","mark","nav","noscript","rp","rt","ruby","s","samp","section","small","strong","sub","summary","sup","u","var","wbr"],HTMLEmbedElement:["embed"],HTMLFieldSetElement:["fieldset"],HTMLFontElement:["font"],HTMLFormElement:["form"],HTMLFrameElement:["frame"],HTMLFrameSetElement:["frameset"],HTMLHRElement:["hr"],HTMLHeadElement:["head"],HTMLHeadingElement:["h1","h2","h3","h4","h5","h6"],HTMLHtmlElement:["html"],HTMLIFrameElement:["iframe"],HTMLImageElement:["img"],HTMLInputElement:["input"],HTMLKeygenElement:["keygen"],HTMLLIElement:["li"],HTMLLabelElement:["label"],HTMLLegendElement:["legend"],HTMLLinkElement:["link"],HTMLMapElement:["map"],HTMLMarqueeElement:["marquee"],HTMLMediaElement:["media"],HTMLMenuElement:["menu"],HTMLMenuItemElement:["menuitem"],HTMLMetaElement:["meta"],HTMLMeterElement:["meter"],HTMLModElement:["del","ins"],HTMLOListElement:["ol"],HTMLObjectElement:["object"],HTMLOptGroupElement:["optgroup"],HTMLOptionElement:["option"],HTMLOutputElement:["output"],HTMLParagraphElement:["p"],HTMLParamElement:["param"],HTMLPictureElement:["picture"],HTMLPreElement:["pre"],HTMLProgressElement:["progress"],HTMLQuoteElement:["blockquote","q","quote"],HTMLScriptElement:["script"],HTMLSelectElement:["select"],HTMLShadowElement:["shadow"],HTMLSlotElement:["slot"],HTMLSourceElement:["source"],HTMLSpanElement:["span"],HTMLStyleElement:["style"],HTMLTableCaptionElement:["caption"],HTMLTableCellElement:["td","th"],HTMLTableColElement:["col","colgroup"],HTMLTableElement:["table"],HTMLTableRowElement:["tr"],HTMLTableSectionElement:["thead","tbody","tfoot"],HTMLTemplateElement:["template"],HTMLTextAreaElement:["textarea"],HTMLTimeElement:["time"],HTMLTitleElement:["title"],HTMLTrackElement:["track"],HTMLUListElement:["ul"],HTMLUnknownElement:["unknown","vhgroupv","vkeygen"],HTMLVideoElement:["video"]},nodes:{Attr:["node"],Audio:["audio"],CDATASection:["node"],CharacterData:["node"],Comment:["#comment"],Document:["#document"],DocumentFragment:["#document-fragment"],DocumentType:["node"],HTMLDocument:["#document"],Image:["img"],Option:["option"],ProcessingInstruction:["node"],ShadowRoot:["#shadow-root"],Text:["#text"],XMLDocument:["xml"]}});"object"!=typeof t&&(t={type:t||"auto"});var M,L,C,S,O,D,H,Z,P,N="registerElement",z=1e5*e.Math.random()>>0,I="__"+N+z,A="addEventListener",j="attached",R="Callback",x="detached",F="extends",V="attributeChanged"+R,U=j+R,q="connected"+R,B="disconnected"+R,G="created"+R,W=x+R,$="ADDITION",X="REMOVAL",Y="DOMAttrModified",K="DOMContentLoaded",J="DOMSubtreeModified",Q="<",ee="=",te=/^[A-Z][._A-Z0-9]*-[-._A-Z0-9]*$/,ne=["ANNOTATION-XML","COLOR-PROFILE","FONT-FACE","FONT-FACE-SRC","FONT-FACE-URI","FONT-FACE-FORMAT","FONT-FACE-NAME","MISSING-GLYPH"],oe=[],re=[],ae="",ie=E.documentElement,se=oe.indexOf||function(e){for(var t=this.length;t--&&this[t]!==e;);return t},ce=b.prototype,le=ce.hasOwnProperty,ue=ce.isPrototypeOf,he=b.defineProperty,pe=[],fe=b.getOwnPropertyDescriptor,de=b.getOwnPropertyNames,me=b.getPrototypeOf,ge=b.setPrototypeOf,Te=!!b.__proto__,ye="__dreCEv1",_e=e.customElements,ve=!/^force/.test(t.type)&&!!(_e&&_e.define&&_e.get&&_e.whenDefined),ke=b.create||b,Ee=e.Map||function(){var e,t=[],n=[];return{get:function(e){return n[se.call(t,e)]},set:function(o,r){(e=se.call(t,o))<0?n[t.push(o)-1]=r:n[e]=r}}},be=e.Promise||function(e){function t(e){for(o=!0;n.length;)n.shift()(e)}var n=[],o=!1,r={catch:function(){return r},then:function(e){return n.push(e),o&&setTimeout(t,1),r}};return e(t),r},we=!1,Me=ke(null),Le=ke(null),Ce=new Ee,Se=function(e){return e.toLowerCase()},Oe=b.create||function e(t){return t?(e.prototype=t,new e):this},De=ge||(Te?function(e,t){return e.__proto__=t,e}:de&&fe?function(){function e(e,t){for(var n,o=de(t),r=0,a=o.length;r<a;r++)le.call(e,n=o[r])||he(e,n,fe(t,n))}return function(t,n){do{e(t,n)}while((n=me(n))&&!ue.call(n,t));return t}}():function(e,t){for(var n in t)e[n]=t[n];return e}),He=e.MutationObserver||e.WebKitMutationObserver,Ze=e.HTMLAnchorElement,Pe=(e.HTMLElement||e.Element||e.Node).prototype,Ne=!ue.call(Pe,ie),ze=Ne?function(e,t,n){return e[t]=n.value,e}:he,Ie=Ne?function(e){return 1===e.nodeType}:function(e){return ue.call(Pe,e)},Ae=Ne&&[],je=Pe.attachShadow,Re=Pe.cloneNode,xe=Pe.closest||function(e){for(var t=this;t&&t.nodeName!==e;)t=t.parentNode;return t},Fe=Pe.dispatchEvent,Ve=Pe.getAttribute,Ue=Pe.hasAttribute,qe=Pe.removeAttribute,Be=Pe.setAttribute,Ge=E.createElement,We=E.importNode,$e=Ge,Xe=He&&{attributes:!0,characterData:!0,attributeOldValue:!0},Ye=He||function(e){tt=!1,ie.removeEventListener(Y,Ye)},Ke=0,Je=N in E&&!/^force-all/.test(t.type),Qe=!0,et=!1,tt=!0,nt=!0,ot=!0;if(He&&((P=E.createElement("div")).innerHTML="<div><div></div></div>",new He(function(e,t){if(e[0]&&"childList"==e[0].type&&!e[0].removedNodes[0].childNodes.length){var n=(P=fe(Pe,"innerHTML"))&&P.set;n&&he(Pe,"innerHTML",{set:function(e){for(;this.lastChild;)this.removeChild(this.lastChild);n.call(this,e)}})}t.disconnect(),P=null}).observe(P,{childList:!0,subtree:!0}),P.innerHTML=""),Je||(ge||Te?(H=function(e,t){ue.call(t,e)||p(e,t)},Z=p):Z=H=function(e,t){e[I]||(e[I]=b(!0),p(e,t))},Ne?(tt=!1,function(){var e=fe(Pe,A),t=e.value,n=function(e){var t=new CustomEvent(Y,{bubbles:!0});t.attrName=e,t.prevValue=Ve.call(this,e),t.newValue=null,t[X]=t.attrChange=2,qe.call(this,e),Fe.call(this,t)},o=function(e,t){var n=Ue.call(this,e),o=n&&Ve.call(this,e),r=new CustomEvent(Y,{bubbles:!0});Be.call(this,e,t),r.attrName=e,r.prevValue=n?o:null,r.newValue=t,n?r.MODIFICATION=r.attrChange=1:r[$]=r.attrChange=0,Fe.call(this,r)},r=function(e){var t,n=e.currentTarget,o=n[I],r=e.propertyName;o.hasOwnProperty(r)&&(o=o[r],(t=new CustomEvent(Y,{bubbles:!0})).attrName=o.name,t.prevValue=o.value||null,t.newValue=o.value=n[r]||null,null==t.prevValue?t[$]=t.attrChange=0:t.MODIFICATION=t.attrChange=1,Fe.call(n,t))};e.value=function(e,a,i){e===Y&&this[V]&&this.setAttribute!==o&&(this[I]={className:{name:"class",value:this.className}},this.setAttribute=o,this.removeAttribute=n,t.call(this,"propertychange",r)),t.call(this,e,a,i)},he(Pe,A,e)}()):He||(ie[A](Y,Ye),ie.setAttribute(I,1),ie.removeAttribute(I),tt&&(L=function(e){var t,n,o,r=this;if(r===e.target){for(o in t=r[I],r[I]=n=S(r),n){if(!(o in t))return C(0,r,o,t[o],n[o],$);if(n[o]!==t[o])return C(1,r,o,t[o],n[o],"MODIFICATION")}for(o in t)if(!(o in n))return C(2,r,o,t[o],n[o],X)}},C=function(e,t,n,o,r,a){var i={attrChange:e,currentTarget:t,attrName:n,prevValue:o,newValue:r};i[a]=e,s(i)},S=function(e){for(var t,n,o={},r=e.attributes,a=0,i=r.length;a<i;a++)"setAttribute"!==(n=(t=r[a]).name)&&(o[n]=t.value);return o})),E[N]=function(e,t){if(n=e.toUpperCase(),Qe&&(Qe=!1,He?(O=function(e,t){function n(e,t){for(var n=0,o=e.length;n<o;t(e[n++]));}return new He(function(o){for(var r,a,i,s=0,c=o.length;s<c;s++)"childList"===(r=o[s]).type?(n(r.addedNodes,e),n(r.removedNodes,t)):(a=r.target,ot&&a[V]&&"style"!==r.attributeName&&(i=Ve.call(a,r.attributeName))!==r.oldValue&&a[V](r.attributeName,r.oldValue,i))})}(r(j),r(x)),(D=function(e){return O.observe(e,{childList:!0,subtree:!0}),e})(E),je&&(Pe.attachShadow=function(){return D(je.apply(this,arguments))})):(M=[],E[A]("DOMNodeInserted",c(j)),E[A]("DOMNodeRemoved",c(x))),E[A](K,l),E[A]("readystatechange",l),E.importNode=function(e,t){switch(e.nodeType){case 1:return h(E,We,[e,!!t]);case 11:for(var n=E.createDocumentFragment(),o=e.childNodes,r=o.length,a=0;a<r;a++)n.appendChild(E.importNode(o[a],!!t));return n;default:return Re.call(e,!!t)}},Pe.cloneNode=function(e){return h(this,Re,[!!e])}),et)return et=!1;if(-2<se.call(oe,ee+n)+se.call(oe,Q+n)&&f(e),!te.test(n)||-1<se.call(ne,n))throw new Error("The type "+e+" is invalid");var n,a,i=function(){return u?E.createElement(p,n):E.createElement(p)},s=t||ce,u=le.call(s,F),p=u?t[F].toUpperCase():n;return u&&-1<se.call(oe,Q+p)&&f(p),a=oe.push((u?ee:Q)+n)-1,ae=ae.concat(ae.length?",":"",u?p+'[is="'+e.toLowerCase()+'"]':p),i.prototype=re[a]=le.call(s,"prototype")?s.prototype:Oe(Pe),ae.length&&o(E.querySelectorAll(ae),j),i},E.createElement=$e=function(e,t){var n=y(t),o=n?Ge.call(E,e,Se(n)):Ge.call(E,e),r=""+e,a=se.call(oe,(n?ee:Q)+(n||r).toUpperCase()),s=-1<a;return n&&(o.setAttribute("is",n=n.toLowerCase()),s&&(s=i(r.toUpperCase(),n))),ot=!E.createElement.innerHTMLHelper,s&&Z(o,re[a]),o}),addEventListener("beforeunload",function(){delete E.createElement,delete E.importNode,delete E[N]},!1),m.prototype={constructor:m,define:ve?function(e,t,n){if(n)g(e,t,n);else{var o=e.toUpperCase();Me[o]={constructor:t,create:[o]},Ce.set(t,o),_e.define(e,t)}}:g,get:ve?function(e){return _e.get(e)||T(e)}:T,whenDefined:ve?function(e){return be.race([_e.whenDefined(e),v(e)])}:v},!_e||/^force/.test(t.type))k();else if(!t.noBuiltIn)try{!function(t,n,o){var r=new RegExp("^<a\\s+is=('|\")"+o+"\\1></a>$");if(n[F]="a",(t.prototype=Oe(Ze.prototype)).constructor=t,e.customElements.define(o,t,n),!r.test(E.createElement("a",{is:o}).outerHTML)||!r.test((new t).outerHTML))throw n}(function e(){return Reflect.construct(Ze,[],e)},{},"document-register-element-a"+z)}catch(rt){k()}if(!t.noBuiltIn)try{if(Ge.call(E,"a","a").outerHTML.indexOf("is")<0)throw{}}catch(at){Se=function(e){return{is:e.toLowerCase()}}}}(window)},167:()=>{"use strict";!function(e){const t=e.performance;function n(e){t&&t.mark&&t.mark(e)}function o(e,n){t&&t.measure&&t.measure(e,n)}n("Zone");const r=e.__Zone_symbol_prefix||"__zone_symbol__";function a(e){return r+e}const i=!0===e[a("forceDuplicateZoneCheck")];if(e.Zone){if(i||"function"!=typeof e.Zone.__symbol__)throw new Error("Zone already loaded.");return e.Zone}class s{constructor(e,t){this._parent=e,this._name=t?t.name||"unnamed":"<root>",this._properties=t&&t.properties||{},this._zoneDelegate=new l(this,this._parent&&this._parent._zoneDelegate,t)}static assertZonePatched(){if(e.Promise!==O.ZoneAwarePromise)throw new Error("Zone.js has detected that ZoneAwarePromise `(window|global).Promise` has been overwritten.\nMost likely cause is that a Promise polyfill has been loaded after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. If you must load one, do so before loading zone.js.)")}static get root(){let e=s.current;for(;e.parent;)e=e.parent;return e}static get current(){return H.zone}static get currentTask(){return Z}static __load_patch(t,r,a=!1){if(O.hasOwnProperty(t)){if(!a&&i)throw Error("Already loaded patch: "+t)}else if(!e["__Zone_disable_"+t]){const a="Zone:"+t;n(a),O[t]=r(e,s,D),o(a,a)}}get parent(){return this._parent}get name(){return this._name}get(e){const t=this.getZoneWith(e);if(t)return t._properties[e]}getZoneWith(e){let t=this;for(;t;){if(t._properties.hasOwnProperty(e))return t;t=t._parent}return null}fork(e){if(!e)throw new Error("ZoneSpec required!");return this._zoneDelegate.fork(this,e)}wrap(e,t){if("function"!=typeof e)throw new Error("Expecting function got: "+e);const n=this._zoneDelegate.intercept(this,e,t),o=this;return function(){return o.runGuarded(n,this,arguments,t)}}run(e,t,n,o){H={parent:H,zone:this};try{return this._zoneDelegate.invoke(this,e,t,n,o)}finally{H=H.parent}}runGuarded(e,t=null,n,o){H={parent:H,zone:this};try{try{return this._zoneDelegate.invoke(this,e,t,n,o)}catch(r){if(this._zoneDelegate.handleError(this,r))throw r}}finally{H=H.parent}}runTask(e,t,n){if(e.zone!=this)throw new Error("A task can only be run in the zone of creation! (Creation: "+(e.zone||_).name+"; Execution: "+this.name+")");if(e.state===v&&(e.type===S||e.type===C))return;const o=e.state!=b;o&&e._transitionTo(b,E),e.runCount++;const r=Z;Z=e,H={parent:H,zone:this};try{e.type==C&&e.data&&!e.data.isPeriodic&&(e.cancelFn=void 0);try{return this._zoneDelegate.invokeTask(this,e,t,n)}catch(a){if(this._zoneDelegate.handleError(this,a))throw a}}finally{e.state!==v&&e.state!==M&&(e.type==S||e.data&&e.data.isPeriodic?o&&e._transitionTo(E,b):(e.runCount=0,this._updateTaskCount(e,-1),o&&e._transitionTo(v,b,v))),H=H.parent,Z=r}}scheduleTask(e){if(e.zone&&e.zone!==this){let t=this;for(;t;){if(t===e.zone)throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${e.zone.name}`);t=t.parent}}e._transitionTo(k,v);const t=[];e._zoneDelegates=t,e._zone=this;try{e=this._zoneDelegate.scheduleTask(this,e)}catch(n){throw e._transitionTo(M,k,v),this._zoneDelegate.handleError(this,n),n}return e._zoneDelegates===t&&this._updateTaskCount(e,1),e.state==k&&e._transitionTo(E,k),e}scheduleMicroTask(e,t,n,o){return this.scheduleTask(new u(L,e,t,n,o,void 0))}scheduleMacroTask(e,t,n,o,r){return this.scheduleTask(new u(C,e,t,n,o,r))}scheduleEventTask(e,t,n,o,r){return this.scheduleTask(new u(S,e,t,n,o,r))}cancelTask(e){if(e.zone!=this)throw new Error("A task can only be cancelled in the zone of creation! (Creation: "+(e.zone||_).name+"; Execution: "+this.name+")");e._transitionTo(w,E,b);try{this._zoneDelegate.cancelTask(this,e)}catch(t){throw e._transitionTo(M,w),this._zoneDelegate.handleError(this,t),t}return this._updateTaskCount(e,-1),e._transitionTo(v,w),e.runCount=0,e}_updateTaskCount(e,t){const n=e._zoneDelegates;-1==t&&(e._zoneDelegates=null);for(let o=0;o<n.length;o++)n[o]._updateTaskCount(e.type,t)}}s.__symbol__=a;const c={name:"",onHasTask:(e,t,n,o)=>e.hasTask(n,o),onScheduleTask:(e,t,n,o)=>e.scheduleTask(n,o),onInvokeTask:(e,t,n,o,r,a)=>e.invokeTask(n,o,r,a),onCancelTask:(e,t,n,o)=>e.cancelTask(n,o)};class l{constructor(e,t,n){this._taskCounts={microTask:0,macroTask:0,eventTask:0},this.zone=e,this._parentDelegate=t,this._forkZS=n&&(n&&n.onFork?n:t._forkZS),this._forkDlgt=n&&(n.onFork?t:t._forkDlgt),this._forkCurrZone=n&&(n.onFork?this.zone:t._forkCurrZone),this._interceptZS=n&&(n.onIntercept?n:t._interceptZS),this._interceptDlgt=n&&(n.onIntercept?t:t._interceptDlgt),this._interceptCurrZone=n&&(n.onIntercept?this.zone:t._interceptCurrZone),this._invokeZS=n&&(n.onInvoke?n:t._invokeZS),this._invokeDlgt=n&&(n.onInvoke?t:t._invokeDlgt),this._invokeCurrZone=n&&(n.onInvoke?this.zone:t._invokeCurrZone),this._handleErrorZS=n&&(n.onHandleError?n:t._handleErrorZS),this._handleErrorDlgt=n&&(n.onHandleError?t:t._handleErrorDlgt),this._handleErrorCurrZone=n&&(n.onHandleError?this.zone:t._handleErrorCurrZone),this._scheduleTaskZS=n&&(n.onScheduleTask?n:t._scheduleTaskZS),this._scheduleTaskDlgt=n&&(n.onScheduleTask?t:t._scheduleTaskDlgt),this._scheduleTaskCurrZone=n&&(n.onScheduleTask?this.zone:t._scheduleTaskCurrZone),this._invokeTaskZS=n&&(n.onInvokeTask?n:t._invokeTaskZS),this._invokeTaskDlgt=n&&(n.onInvokeTask?t:t._invokeTaskDlgt),this._invokeTaskCurrZone=n&&(n.onInvokeTask?this.zone:t._invokeTaskCurrZone),this._cancelTaskZS=n&&(n.onCancelTask?n:t._cancelTaskZS),this._cancelTaskDlgt=n&&(n.onCancelTask?t:t._cancelTaskDlgt),this._cancelTaskCurrZone=n&&(n.onCancelTask?this.zone:t._cancelTaskCurrZone),this._hasTaskZS=null,this._hasTaskDlgt=null,this._hasTaskDlgtOwner=null,this._hasTaskCurrZone=null;const o=n&&n.onHasTask;(o||t&&t._hasTaskZS)&&(this._hasTaskZS=o?n:c,this._hasTaskDlgt=t,this._hasTaskDlgtOwner=this,this._hasTaskCurrZone=e,n.onScheduleTask||(this._scheduleTaskZS=c,this._scheduleTaskDlgt=t,this._scheduleTaskCurrZone=this.zone),n.onInvokeTask||(this._invokeTaskZS=c,this._invokeTaskDlgt=t,this._invokeTaskCurrZone=this.zone),n.onCancelTask||(this._cancelTaskZS=c,this._cancelTaskDlgt=t,this._cancelTaskCurrZone=this.zone))}fork(e,t){return this._forkZS?this._forkZS.onFork(this._forkDlgt,this.zone,e,t):new s(e,t)}intercept(e,t,n){return this._interceptZS?this._interceptZS.onIntercept(this._interceptDlgt,this._interceptCurrZone,e,t,n):t}invoke(e,t,n,o,r){return this._invokeZS?this._invokeZS.onInvoke(this._invokeDlgt,this._invokeCurrZone,e,t,n,o,r):t.apply(n,o)}handleError(e,t){return!this._handleErrorZS||this._handleErrorZS.onHandleError(this._handleErrorDlgt,this._handleErrorCurrZone,e,t)}scheduleTask(e,t){let n=t;if(this._scheduleTaskZS)this._hasTaskZS&&n._zoneDelegates.push(this._hasTaskDlgtOwner),n=this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt,this._scheduleTaskCurrZone,e,t),n||(n=t);else if(t.scheduleFn)t.scheduleFn(t);else{if(t.type!=L)throw new Error("Task is missing scheduleFn.");T(t)}return n}invokeTask(e,t,n,o){return this._invokeTaskZS?this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt,this._invokeTaskCurrZone,e,t,n,o):t.callback.apply(n,o)}cancelTask(e,t){let n;if(this._cancelTaskZS)n=this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt,this._cancelTaskCurrZone,e,t);else{if(!t.cancelFn)throw Error("Task is not cancelable");n=t.cancelFn(t)}return n}hasTask(e,t){try{this._hasTaskZS&&this._hasTaskZS.onHasTask(this._hasTaskDlgt,this._hasTaskCurrZone,e,t)}catch(n){this.handleError(e,n)}}_updateTaskCount(e,t){const n=this._taskCounts,o=n[e],r=n[e]=o+t;if(r<0)throw new Error("More tasks executed then were scheduled.");0!=o&&0!=r||this.hasTask(this.zone,{microTask:n.microTask>0,macroTask:n.macroTask>0,eventTask:n.eventTask>0,change:e})}}class u{constructor(t,n,o,r,a,i){if(this._zone=null,this.runCount=0,this._zoneDelegates=null,this._state="notScheduled",this.type=t,this.source=n,this.data=r,this.scheduleFn=a,this.cancelFn=i,!o)throw new Error("callback is not defined");this.callback=o;const s=this;this.invoke=t===S&&r&&r.useG?u.invokeTask:function(){return u.invokeTask.call(e,s,this,arguments)}}static invokeTask(e,t,n){e||(e=this),P++;try{return e.runCount++,e.zone.runTask(e,t,n)}finally{1==P&&y(),P--}}get zone(){return this._zone}get state(){return this._state}cancelScheduleRequest(){this._transitionTo(v,k)}_transitionTo(e,t,n){if(this._state!==t&&this._state!==n)throw new Error(`${this.type} '${this.source}': can not transition to '${e}', expecting state '${t}'${n?" or '"+n+"'":""}, was '${this._state}'.`);this._state=e,e==v&&(this._zoneDelegates=null)}toString(){return this.data&&void 0!==this.data.handleId?this.data.handleId.toString():Object.prototype.toString.call(this)}toJSON(){return{type:this.type,state:this.state,source:this.source,zone:this.zone.name,runCount:this.runCount}}}const h=a("setTimeout"),p=a("Promise"),f=a("then");let d,m=[],g=!1;function T(t){if(0===P&&0===m.length)if(d||e[p]&&(d=e[p].resolve(0)),d){let e=d[f];e||(e=d.then),e.call(d,y)}else e[h](y,0);t&&m.push(t)}function y(){if(!g){for(g=!0;m.length;){const t=m;m=[];for(let n=0;n<t.length;n++){const o=t[n];try{o.zone.runTask(o,null,null)}catch(e){D.onUnhandledError(e)}}}D.microtaskDrainDone(),g=!1}}const _={name:"NO ZONE"},v="notScheduled",k="scheduling",E="scheduled",b="running",w="canceling",M="unknown",L="microTask",C="macroTask",S="eventTask",O={},D={symbol:a,currentZoneFrame:()=>H,onUnhandledError:N,microtaskDrainDone:N,scheduleMicroTask:T,showUncaughtError:()=>!s[a("ignoreConsoleErrorUncaughtError")],patchEventTarget:()=>[],patchOnProperties:N,patchMethod:()=>N,bindArguments:()=>[],patchThen:()=>N,patchMacroTask:()=>N,patchEventPrototype:()=>N,isIEOrEdge:()=>!1,getGlobalObjects:()=>{},ObjectDefineProperty:()=>N,ObjectGetOwnPropertyDescriptor:()=>{},ObjectCreate:()=>{},ArraySlice:()=>[],patchClass:()=>N,wrapWithCurrentZone:()=>N,filterProperties:()=>[],attachOriginToPatched:()=>N,_redefineProperty:()=>N,patchCallbacks:()=>N};let H={parent:null,zone:new s(null,null)},Z=null,P=0;function N(){}o("Zone","Zone"),e.Zone=s}("undefined"!=typeof window&&window||"undefined"!=typeof self&&self||global);const e=Object.getOwnPropertyDescriptor,t=Object.defineProperty,n=Object.getPrototypeOf,o=Object.create,r=Array.prototype.slice,a="addEventListener",i="removeEventListener",s=Zone.__symbol__(a),c=Zone.__symbol__(i),l="true",u="false",h=Zone.__symbol__("");function p(e,t){return Zone.current.wrap(e,t)}function f(e,t,n,o,r){return Zone.current.scheduleMacroTask(e,t,n,o,r)}const d=Zone.__symbol__,m="undefined"!=typeof window,g=m?window:void 0,T=m&&g||"object"==typeof self&&self||global,y=[null];function _(e,t){for(let n=e.length-1;n>=0;n--)"function"==typeof e[n]&&(e[n]=p(e[n],t+"_"+n));return e}function v(e){return!e||!1!==e.writable&&!("function"==typeof e.get&&void 0===e.set)}const k="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope,E=!("nw"in T)&&void 0!==T.process&&"[object process]"==={}.toString.call(T.process),b=!E&&!k&&!(!m||!g.HTMLElement),w=void 0!==T.process&&"[object process]"==={}.toString.call(T.process)&&!k&&!(!m||!g.HTMLElement),M={},L=function(e){if(!(e=e||T.event))return;let t=M[e.type];t||(t=M[e.type]=d("ON_PROPERTY"+e.type));const n=this||e.target||T,o=n[t];let r;if(b&&n===g&&"error"===e.type){const t=e;r=o&&o.call(this,t.message,t.filename,t.lineno,t.colno,t.error),!0===r&&e.preventDefault()}else r=o&&o.apply(this,arguments),null==r||r||e.preventDefault();return r};function C(n,o,r){let a=e(n,o);if(!a&&r&&e(r,o)&&(a={enumerable:!0,configurable:!0}),!a||!a.configurable)return;const i=d("on"+o+"patched");if(n.hasOwnProperty(i)&&n[i])return;delete a.writable,delete a.value;const s=a.get,c=a.set,l=o.substr(2);let u=M[l];u||(u=M[l]=d("ON_PROPERTY"+l)),a.set=function(e){let t=this;t||n!==T||(t=T),t&&(t[u]&&t.removeEventListener(l,L),c&&c.apply(t,y),"function"==typeof e?(t[u]=e,t.addEventListener(l,L,!1)):t[u]=null)},a.get=function(){let e=this;if(e||n!==T||(e=T),!e)return null;const t=e[u];if(t)return t;if(s){let t=s&&s.call(this);if(t)return a.set.call(this,t),"function"==typeof e.removeAttribute&&e.removeAttribute(o),t}return null},t(n,o,a),n[i]=!0}function S(e,t,n){if(t)for(let o=0;o<t.length;o++)C(e,"on"+t[o],n);else{const t=[];for(const n in e)"on"==n.substr(0,2)&&t.push(n);for(let o=0;o<t.length;o++)C(e,t[o],n)}}const O=d("originalInstance");function D(e){const n=T[e];if(!n)return;T[d(e)]=n,T[e]=function(){const t=_(arguments,e);switch(t.length){case 0:this[O]=new n;break;case 1:this[O]=new n(t[0]);break;case 2:this[O]=new n(t[0],t[1]);break;case 3:this[O]=new n(t[0],t[1],t[2]);break;case 4:this[O]=new n(t[0],t[1],t[2],t[3]);break;default:throw new Error("Arg list too long.")}},P(T[e],n);const o=new n(function(){});let r;for(r in o)"XMLHttpRequest"===e&&"responseBlob"===r||function(n){"function"==typeof o[n]?T[e].prototype[n]=function(){return this[O][n].apply(this[O],arguments)}:t(T[e].prototype,n,{set:function(t){"function"==typeof t?(this[O][n]=p(t,e+"."+n),P(this[O][n],t)):this[O][n]=t},get:function(){return this[O][n]}})}(r);for(r in n)"prototype"!==r&&n.hasOwnProperty(r)&&(T[e][r]=n[r])}function H(t,o,r){let a=t;for(;a&&!a.hasOwnProperty(o);)a=n(a);!a&&t[o]&&(a=t);const i=d(o);let s=null;if(a&&(!(s=a[i])||!a.hasOwnProperty(i))&&(s=a[i]=a[o],v(a&&e(a,o)))){const e=r(s,i,o);a[o]=function(){return e(this,arguments)},P(a[o],s)}return s}function Z(e,t,n){let o=null;function r(e){const t=e.data;return t.args[t.cbIdx]=function(){e.invoke.apply(this,arguments)},o.apply(t.target,t.args),e}o=H(e,t,e=>function(t,o){const a=n(t,o);return a.cbIdx>=0&&"function"==typeof o[a.cbIdx]?f(a.name,o[a.cbIdx],a,r):e.apply(t,o)})}function P(e,t){e[d("OriginalDelegate")]=t}let N=!1,z=!1;function I(){try{const e=g.navigator.userAgent;if(-1!==e.indexOf("MSIE ")||-1!==e.indexOf("Trident/"))return!0}catch(e){}return!1}function A(){if(N)return z;N=!0;try{const e=g.navigator.userAgent;-1===e.indexOf("MSIE ")&&-1===e.indexOf("Trident/")&&-1===e.indexOf("Edge/")||(z=!0)}catch(e){}return z}Zone.__load_patch("ZoneAwarePromise",(e,t,n)=>{const o=Object.getOwnPropertyDescriptor,r=Object.defineProperty,a=n.symbol,i=[],s=!0===e[a("DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION")],c=a("Promise"),l=a("then");n.onUnhandledError=e=>{if(n.showUncaughtError()){const t=e&&e.rejection;t?console.error("Unhandled Promise rejection:",t instanceof Error?t.message:t,"; Zone:",e.zone.name,"; Task:",e.task&&e.task.source,"; Value:",t,t instanceof Error?t.stack:void 0):console.error(e)}},n.microtaskDrainDone=()=>{for(;i.length;){const t=i.shift();try{t.zone.runGuarded(()=>{if(t.throwOriginal)throw t.rejection;throw t})}catch(e){h(e)}}};const u=a("unhandledPromiseRejectionHandler");function h(e){n.onUnhandledError(e);try{const n=t[u];"function"==typeof n&&n.call(this,e)}catch(o){}}function p(e){return e&&e.then}function f(e){return e}function d(e){return D.reject(e)}const m=a("state"),g=a("value"),T=a("finally"),y=a("parentPromiseValue"),_=a("parentPromiseState"),v=null,k=!0,E=!1;function b(e,t){return n=>{try{M(e,t,n)}catch(o){M(e,!1,o)}}}const w=a("currentTaskTrace");function M(e,o,a){const c=function(){let e=!1;return function(t){return function(){e||(e=!0,t.apply(null,arguments))}}}();if(e===a)throw new TypeError("Promise resolved with itself");if(e[m]===v){let h=null;try{"object"!=typeof a&&"function"!=typeof a||(h=a&&a.then)}catch(u){return c(()=>{M(e,!1,u)})(),e}if(o!==E&&a instanceof D&&a.hasOwnProperty(m)&&a.hasOwnProperty(g)&&a[m]!==v)C(a),M(e,a[m],a[g]);else if(o!==E&&"function"==typeof h)try{h.call(a,c(b(e,o)),c(b(e,!1)))}catch(u){c(()=>{M(e,!1,u)})()}else{e[m]=o;const c=e[g];if(e[g]=a,e[T]===T&&o===k&&(e[m]=e[_],e[g]=e[y]),o===E&&a instanceof Error){const e=t.currentTask&&t.currentTask.data&&t.currentTask.data.__creationTrace__;e&&r(a,w,{configurable:!0,enumerable:!1,writable:!0,value:e})}for(let t=0;t<c.length;)S(e,c[t++],c[t++],c[t++],c[t++]);if(0==c.length&&o==E){e[m]=0;let o=a;try{throw new Error("Uncaught (in promise): "+((l=a)&&l.toString===Object.prototype.toString?(l.constructor&&l.constructor.name||"")+": "+JSON.stringify(l):l?l.toString():Object.prototype.toString.call(l))+(a&&a.stack?"\n"+a.stack:""))}catch(u){o=u}s&&(o.throwOriginal=!0),o.rejection=a,o.promise=e,o.zone=t.current,o.task=t.currentTask,i.push(o),n.scheduleMicroTask()}}}var l;return e}const L=a("rejectionHandledHandler");function C(e){if(0===e[m]){try{const n=t[L];n&&"function"==typeof n&&n.call(this,{rejection:e[g],promise:e})}catch(n){}e[m]=E;for(let t=0;t<i.length;t++)e===i[t].promise&&i.splice(t,1)}}function S(e,t,n,o,r){C(e);const a=e[m],i=a?"function"==typeof o?o:f:"function"==typeof r?r:d;t.scheduleMicroTask("Promise.then",()=>{try{const o=e[g],r=!!n&&T===n[T];r&&(n[y]=o,n[_]=a);const s=t.run(i,void 0,r&&i!==d&&i!==f?[]:[o]);M(n,!0,s)}catch(o){M(n,!1,o)}},n)}const O=function(){};class D{static toString(){return"function ZoneAwarePromise() { [native code] }"}static resolve(e){return M(new this(null),k,e)}static reject(e){return M(new this(null),E,e)}static race(e){let t,n,o=new this((e,o)=>{t=e,n=o});function r(e){t(e)}function a(e){n(e)}for(let i of e)p(i)||(i=this.resolve(i)),i.then(r,a);return o}static all(e){return D.allWithCallback(e)}static allSettled(e){return(this&&this.prototype instanceof D?this:D).allWithCallback(e,{thenCallback:e=>({status:"fulfilled",value:e}),errorCallback:e=>({status:"rejected",reason:e})})}static allWithCallback(e,t){let n,o,r=new this((e,t)=>{n=e,o=t}),a=2,i=0;const s=[];for(let l of e){p(l)||(l=this.resolve(l));const e=i;try{l.then(o=>{s[e]=t?t.thenCallback(o):o,a--,0===a&&n(s)},r=>{t?(s[e]=t.errorCallback(r),a--,0===a&&n(s)):o(r)})}catch(c){o(c)}a++,i++}return a-=2,0===a&&n(s),r}constructor(e){const t=this;if(!(t instanceof D))throw new Error("Must be an instanceof Promise.");t[m]=v,t[g]=[];try{e&&e(b(t,k),b(t,E))}catch(n){M(t,!1,n)}}get[Symbol.toStringTag](){return"Promise"}get[Symbol.species](){return D}then(e,n){let o=this.constructor[Symbol.species];o&&"function"==typeof o||(o=this.constructor||D);const r=new o(O),a=t.current;return this[m]==v?this[g].push(a,r,e,n):S(this,a,r,e,n),r}catch(e){return this.then(null,e)}finally(e){let n=this.constructor[Symbol.species];n&&"function"==typeof n||(n=D);const o=new n(O);o[T]=T;const r=t.current;return this[m]==v?this[g].push(r,o,e,e):S(this,r,o,e,e),o}}D.resolve=D.resolve,D.reject=D.reject,D.race=D.race,D.all=D.all;const Z=e[c]=e.Promise;e.Promise=D;const P=a("thenPatched");function N(e){const t=e.prototype,n=o(t,"then");if(n&&(!1===n.writable||!n.configurable))return;const r=t.then;t[l]=r,e.prototype.then=function(e,t){return new D((e,t)=>{r.call(this,e,t)}).then(e,t)},e[P]=!0}return n.patchThen=N,Z&&(N(Z),H(e,"fetch",e=>{return t=e,function(e,n){let o=t.apply(e,n);if(o instanceof D)return o;let r=o.constructor;return r[P]||N(r),o};var t})),Promise[t.__symbol__("uncaughtPromiseErrors")]=i,D}),Zone.__load_patch("toString",e=>{const t=Function.prototype.toString,n=d("OriginalDelegate"),o=d("Promise"),r=d("Error"),a=function(){if("function"==typeof this){const a=this[n];if(a)return"function"==typeof a?t.call(a):Object.prototype.toString.call(a);if(this===Promise){const n=e[o];if(n)return t.call(n)}if(this===Error){const n=e[r];if(n)return t.call(n)}}return t.call(this)};a[n]=t,Function.prototype.toString=a;const i=Object.prototype.toString;Object.prototype.toString=function(){return"function"==typeof Promise&&this instanceof Promise?"[object Promise]":i.call(this)}});let j=!1;if("undefined"!=typeof window)try{const e=Object.defineProperty({},"passive",{get:function(){j=!0}});window.addEventListener("test",e,e),window.removeEventListener("test",e,e)}catch(he){j=!1}const R={useG:!0},x={},F={},V=new RegExp("^"+h+"(\\w+)(true|false)$"),U=d("propagationStopped");function q(e,t){const n=(t?t(e):e)+u,o=(t?t(e):e)+l,r=h+n,a=h+o;x[e]={},x[e].false=r,x[e].true=a}function B(e,t,o){const r=o&&o.add||a,s=o&&o.rm||i,c=o&&o.listeners||"eventListeners",p=o&&o.rmAll||"removeAllListeners",f=d(r),m="."+r+":",g=function(e,t,n){if(e.isRemoved)return;const o=e.callback;"object"==typeof o&&o.handleEvent&&(e.callback=e=>o.handleEvent(e),e.originalDelegate=o),e.invoke(e,t,[n]);const r=e.options;r&&"object"==typeof r&&r.once&&t[s].call(t,n.type,e.originalDelegate?e.originalDelegate:e.callback,r)},T=function(t){if(!(t=t||e.event))return;const n=this||t.target||e,o=n[x[t.type].false];if(o)if(1===o.length)g(o[0],n,t);else{const e=o.slice();for(let o=0;o<e.length&&(!t||!0!==t[U]);o++)g(e[o],n,t)}},y=function(t){if(!(t=t||e.event))return;const n=this||t.target||e,o=n[x[t.type].true];if(o)if(1===o.length)g(o[0],n,t);else{const e=o.slice();for(let o=0;o<e.length&&(!t||!0!==t[U]);o++)g(e[o],n,t)}};function _(t,o){if(!t)return!1;let a=!0;o&&void 0!==o.useG&&(a=o.useG);const i=o&&o.vh;let g=!0;o&&void 0!==o.chkDup&&(g=o.chkDup);let _=!1;o&&void 0!==o.rt&&(_=o.rt);let v=t;for(;v&&!v.hasOwnProperty(r);)v=n(v);if(!v&&t[r]&&(v=t),!v)return!1;if(v[f])return!1;const k=o&&o.eventNameToString,b={},w=v[f]=v[r],M=v[d(s)]=v[s],L=v[d(c)]=v[c],C=v[d(p)]=v[p];let S;function O(e,t){return!j&&"object"==typeof e&&e?!!e.capture:j&&t?"boolean"==typeof e?{capture:e,passive:!0}:e?"object"==typeof e&&!1!==e.passive?Object.assign(Object.assign({},e),{passive:!0}):e:{passive:!0}:e}o&&o.prepend&&(S=v[d(o.prepend)]=v[o.prepend]);const D=a?function(e){if(!b.isExisting)return w.call(b.target,b.eventName,b.capture?y:T,b.options)}:function(e){return w.call(b.target,b.eventName,e.invoke,b.options)},H=a?function(e){if(!e.isRemoved){const t=x[e.eventName];let n;t&&(n=t[e.capture?l:u]);const o=n&&e.target[n];if(o)for(let r=0;r<o.length;r++)if(o[r]===e){o.splice(r,1),e.isRemoved=!0,0===o.length&&(e.allRemoved=!0,e.target[n]=null);break}}if(e.allRemoved)return M.call(e.target,e.eventName,e.capture?y:T,e.options)}:function(e){return M.call(e.target,e.eventName,e.invoke,e.options)},Z=o&&o.diff?o.diff:function(e,t){const n=typeof t;return"function"===n&&e.callback===t||"object"===n&&e.originalDelegate===t},N=Zone[d("UNPATCHED_EVENTS")],z=e[d("PASSIVE_EVENTS")],I=function(t,n,r,s,c=!1,h=!1){return function(){const p=this||e;let f=arguments[0];o&&o.transferEventName&&(f=o.transferEventName(f));let d=arguments[1];if(!d)return t.apply(this,arguments);if(E&&"uncaughtException"===f)return t.apply(this,arguments);let m=!1;if("function"!=typeof d){if(!d.handleEvent)return t.apply(this,arguments);m=!0}if(i&&!i(t,d,p,arguments))return;const T=j&&!!z&&-1!==z.indexOf(f),y=O(arguments[2],T);if(N)for(let e=0;e<N.length;e++)if(f===N[e])return T?t.call(p,f,d,y):t.apply(this,arguments);const _=!!y&&("boolean"==typeof y||y.capture),v=!(!y||"object"!=typeof y)&&y.once,w=Zone.current;let M=x[f];M||(q(f,k),M=x[f]);const L=M[_?l:u];let C,S=p[L],D=!1;if(S){if(D=!0,g)for(let e=0;e<S.length;e++)if(Z(S[e],d))return}else S=p[L]=[];const H=p.constructor.name,P=F[H];P&&(C=P[f]),C||(C=H+n+(k?k(f):f)),b.options=y,v&&(b.options.once=!1),b.target=p,b.capture=_,b.eventName=f,b.isExisting=D;const I=a?R:void 0;I&&(I.taskData=b);const A=w.scheduleEventTask(C,d,I,r,s);return b.target=null,I&&(I.taskData=null),v&&(y.once=!0),(j||"boolean"!=typeof A.options)&&(A.options=y),A.target=p,A.capture=_,A.eventName=f,m&&(A.originalDelegate=d),h?S.unshift(A):S.push(A),c?p:void 0}};return v[r]=I(w,m,D,H,_),S&&(v.prependListener=I(S,".prependListener:",function(e){return S.call(b.target,b.eventName,e.invoke,b.options)},H,_,!0)),v[s]=function(){const t=this||e;let n=arguments[0];o&&o.transferEventName&&(n=o.transferEventName(n));const r=arguments[2],a=!!r&&("boolean"==typeof r||r.capture),s=arguments[1];if(!s)return M.apply(this,arguments);if(i&&!i(M,s,t,arguments))return;const c=x[n];let p;c&&(p=c[a?l:u]);const f=p&&t[p];if(f)for(let e=0;e<f.length;e++){const o=f[e];if(Z(o,s))return f.splice(e,1),o.isRemoved=!0,0===f.length&&(o.allRemoved=!0,t[p]=null,"string"==typeof n)&&(t[h+"ON_PROPERTY"+n]=null),o.zone.cancelTask(o),_?t:void 0}return M.apply(this,arguments)},v[c]=function(){const t=this||e;let n=arguments[0];o&&o.transferEventName&&(n=o.transferEventName(n));const r=[],a=G(t,k?k(n):n);for(let e=0;e<a.length;e++){const t=a[e];r.push(t.originalDelegate?t.originalDelegate:t.callback)}return r},v[p]=function(){const t=this||e;let n=arguments[0];if(n){o&&o.transferEventName&&(n=o.transferEventName(n));const e=x[n];if(e){const o=t[e.false],r=t[e.true];if(o){const e=o.slice();for(let t=0;t<e.length;t++){const o=e[t];this[s].call(this,n,o.originalDelegate?o.originalDelegate:o.callback,o.options)}}if(r){const e=r.slice();for(let t=0;t<e.length;t++){const o=e[t];this[s].call(this,n,o.originalDelegate?o.originalDelegate:o.callback,o.options)}}}}else{const e=Object.keys(t);for(let t=0;t<e.length;t++){const n=V.exec(e[t]);let o=n&&n[1];o&&"removeListener"!==o&&this[p].call(this,o)}this[p].call(this,"removeListener")}if(_)return this},P(v[r],w),P(v[s],M),C&&P(v[p],C),L&&P(v[c],L),!0}let v=[];for(let n=0;n<t.length;n++)v[n]=_(t[n],o);return v}function G(e,t){if(!t){const n=[];for(let o in e){const r=V.exec(o);let a=r&&r[1];if(a&&(!t||a===t)){const t=e[o];if(t)for(let e=0;e<t.length;e++)n.push(t[e])}}return n}let n=x[t];n||(q(t),n=x[t]);const o=e[n.false],r=e[n.true];return o?r?o.concat(r):o.slice():r?r.slice():[]}function W(e,t){const n=e.Event;n&&n.prototype&&t.patchMethod(n.prototype,"stopImmediatePropagation",e=>function(t,n){t[U]=!0,e&&e.apply(t,n)})}function $(e,t,n,o,r){const a=Zone.__symbol__(o);if(t[a])return;const i=t[a]=t[o];t[o]=function(a,s,c){return s&&s.prototype&&r.forEach(function(t){const r=`${n}.${o}::`+t,a=s.prototype;if(a.hasOwnProperty(t)){const n=e.ObjectGetOwnPropertyDescriptor(a,t);n&&n.value?(n.value=e.wrapWithCurrentZone(n.value,r),e._redefineProperty(s.prototype,t,n)):a[t]&&(a[t]=e.wrapWithCurrentZone(a[t],r))}else a[t]&&(a[t]=e.wrapWithCurrentZone(a[t],r))}),i.call(t,a,s,c)},e.attachOriginToPatched(t[o],i)}const X=["absolutedeviceorientation","afterinput","afterprint","appinstalled","beforeinstallprompt","beforeprint","beforeunload","devicelight","devicemotion","deviceorientation","deviceorientationabsolute","deviceproximity","hashchange","languagechange","message","mozbeforepaint","offline","online","paint","pageshow","pagehide","popstate","rejectionhandled","storage","unhandledrejection","unload","userproximity","vrdisplayconnected","vrdisplaydisconnected","vrdisplaypresentchange"],Y=["encrypted","waitingforkey","msneedkey","mozinterruptbegin","mozinterruptend"],K=["load"],J=["blur","error","focus","load","resize","scroll","messageerror"],Q=["bounce","finish","start"],ee=["loadstart","progress","abort","error","load","progress","timeout","loadend","readystatechange"],te=["upgradeneeded","complete","abort","success","error","blocked","versionchange","close"],ne=["close","error","open","message"],oe=["error","message"],re=["abort","animationcancel","animationend","animationiteration","auxclick","beforeinput","blur","cancel","canplay","canplaythrough","change","compositionstart","compositionupdate","compositionend","cuechange","click","close","contextmenu","curechange","dblclick","drag","dragend","dragenter","dragexit","dragleave","dragover","drop","durationchange","emptied","ended","error","focus","focusin","focusout","gotpointercapture","input","invalid","keydown","keypress","keyup","load","loadstart","loadeddata","loadedmetadata","lostpointercapture","mousedown","mouseenter","mouseleave","mousemove","mouseout","mouseover","mouseup","mousewheel","orientationchange","pause","play","playing","pointercancel","pointerdown","pointerenter","pointerleave","pointerlockchange","mozpointerlockchange","webkitpointerlockerchange","pointerlockerror","mozpointerlockerror","webkitpointerlockerror","pointermove","pointout","pointerover","pointerup","progress","ratechange","reset","resize","scroll","seeked","seeking","select","selectionchange","selectstart","show","sort","stalled","submit","suspend","timeupdate","volumechange","touchcancel","touchmove","touchstart","touchend","transitioncancel","transitionend","waiting","wheel"].concat(["webglcontextrestored","webglcontextlost","webglcontextcreationerror"],["autocomplete","autocompleteerror"],["toggle"],["afterscriptexecute","beforescriptexecute","DOMContentLoaded","freeze","fullscreenchange","mozfullscreenchange","webkitfullscreenchange","msfullscreenchange","fullscreenerror","mozfullscreenerror","webkitfullscreenerror","msfullscreenerror","readystatechange","visibilitychange","resume"],X,["beforecopy","beforecut","beforepaste","copy","cut","paste","dragstart","loadend","animationstart","search","transitionrun","transitionstart","webkitanimationend","webkitanimationiteration","webkitanimationstart","webkittransitionend"],["activate","afterupdate","ariarequest","beforeactivate","beforedeactivate","beforeeditfocus","beforeupdate","cellchange","controlselect","dataavailable","datasetchanged","datasetcomplete","errorupdate","filterchange","layoutcomplete","losecapture","move","moveend","movestart","propertychange","resizeend","resizestart","rowenter","rowexit","rowsdelete","rowsinserted","command","compassneedscalibration","deactivate","help","mscontentzoom","msmanipulationstatechanged","msgesturechange","msgesturedoubletap","msgestureend","msgesturehold","msgesturestart","msgesturetap","msgotpointercapture","msinertiastart","mslostpointercapture","mspointercancel","mspointerdown","mspointerenter","mspointerhover","mspointerleave","mspointermove","mspointerout","mspointerover","mspointerup","pointerout","mssitemodejumplistitemremoved","msthumbnailclick","stop","storagecommit"]);function ae(e,t,n){if(!n||0===n.length)return t;const o=n.filter(t=>t.target===e);if(!o||0===o.length)return t;const r=o[0].ignoreProperties;return t.filter(e=>-1===r.indexOf(e))}function ie(e,t,n,o){e&&S(e,ae(e,t,n),o)}function se(e,t){if(E&&!w)return;if(Zone[e.symbol("patchEvents")])return;const o="undefined"!=typeof WebSocket,r=t.__Zone_ignore_on_properties;if(b){const e=window,t=I()?[{target:e,ignoreProperties:["error"]}]:[];ie(e,re.concat(["messageerror"]),r?r.concat(t):r,n(e)),ie(Document.prototype,re,r),void 0!==e.SVGElement&&ie(e.SVGElement.prototype,re,r),ie(Element.prototype,re,r),ie(HTMLElement.prototype,re,r),ie(HTMLMediaElement.prototype,Y,r),ie(HTMLFrameSetElement.prototype,X.concat(J),r),ie(HTMLBodyElement.prototype,X.concat(J),r),ie(HTMLFrameElement.prototype,K,r),ie(HTMLIFrameElement.prototype,K,r);const o=e.HTMLMarqueeElement;o&&ie(o.prototype,Q,r);const a=e.Worker;a&&ie(a.prototype,oe,r)}const a=t.XMLHttpRequest;a&&ie(a.prototype,ee,r);const i=t.XMLHttpRequestEventTarget;i&&ie(i&&i.prototype,ee,r),"undefined"!=typeof IDBIndex&&(ie(IDBIndex.prototype,te,r),ie(IDBRequest.prototype,te,r),ie(IDBOpenDBRequest.prototype,te,r),ie(IDBDatabase.prototype,te,r),ie(IDBTransaction.prototype,te,r),ie(IDBCursor.prototype,te,r)),o&&ie(WebSocket.prototype,ne,r)}Zone.__load_patch("util",(n,s,c)=>{c.patchOnProperties=S,c.patchMethod=H,c.bindArguments=_,c.patchMacroTask=Z;const f=s.__symbol__("BLACK_LISTED_EVENTS"),d=s.__symbol__("UNPATCHED_EVENTS");n[d]&&(n[f]=n[d]),n[f]&&(s[f]=s[d]=n[f]),c.patchEventPrototype=W,c.patchEventTarget=B,c.isIEOrEdge=A,c.ObjectDefineProperty=t,c.ObjectGetOwnPropertyDescriptor=e,c.ObjectCreate=o,c.ArraySlice=r,c.patchClass=D,c.wrapWithCurrentZone=p,c.filterProperties=ae,c.attachOriginToPatched=P,c._redefineProperty=Object.defineProperty,c.patchCallbacks=$,c.getGlobalObjects=()=>({globalSources:F,zoneSymbolEventNames:x,eventNames:re,isBrowser:b,isMix:w,isNode:E,TRUE_STR:l,FALSE_STR:u,ZONE_SYMBOL_PREFIX:h,ADD_EVENT_LISTENER_STR:a,REMOVE_EVENT_LISTENER_STR:i})});const ce=d("zoneTask");function le(e,t,n,o){let r=null,a=null;n+=o;const i={};function s(t){const n=t.data;return n.args[0]=function(){return t.invoke.apply(this,arguments)},n.handleId=r.apply(e,n.args),t}function c(t){return a.call(e,t.data.handleId)}r=H(e,t+=o,n=>function(r,a){if("function"==typeof a[0]){const e={isPeriodic:"Interval"===o,delay:"Timeout"===o||"Interval"===o?a[1]||0:void 0,args:a},n=a[0];a[0]=function(){try{return n.apply(this,arguments)}finally{e.isPeriodic||("number"==typeof e.handleId?delete i[e.handleId]:e.handleId&&(e.handleId[ce]=null))}};const r=f(t,a[0],e,s,c);if(!r)return r;const l=r.data.handleId;return"number"==typeof l?i[l]=r:l&&(l[ce]=r),l&&l.ref&&l.unref&&"function"==typeof l.ref&&"function"==typeof l.unref&&(r.ref=l.ref.bind(l),r.unref=l.unref.bind(l)),"number"==typeof l||l?l:r}return n.apply(e,a)}),a=H(e,n,t=>function(n,o){const r=o[0];let a;"number"==typeof r?a=i[r]:(a=r&&r[ce],a||(a=r)),a&&"string"==typeof a.type?"notScheduled"!==a.state&&(a.cancelFn&&a.data.isPeriodic||0===a.runCount)&&("number"==typeof r?delete i[r]:r&&(r[ce]=null),a.zone.cancelTask(a)):t.apply(e,o)})}function ue(e,t){if(Zone[t.symbol("patchEventTarget")])return;const{eventNames:n,zoneSymbolEventNames:o,TRUE_STR:r,FALSE_STR:a,ZONE_SYMBOL_PREFIX:i}=t.getGlobalObjects();for(let c=0;c<n.length;c++){const e=n[c],t=i+(e+a),s=i+(e+r);o[e]={},o[e][a]=t,o[e][r]=s}const s=e.EventTarget;return s&&s.prototype?(t.patchEventTarget(e,[s&&s.prototype]),!0):void 0}Zone.__load_patch("legacy",e=>{const t=e[Zone.__symbol__("legacyPatch")];t&&t()}),Zone.__load_patch("queueMicrotask",(e,t,n)=>{n.patchMethod(e,"queueMicrotask",e=>function(e,n){t.current.scheduleMicroTask("queueMicrotask",n[0])})}),Zone.__load_patch("timers",e=>{const t="set",n="clear";le(e,t,n,"Timeout"),le(e,t,n,"Interval"),le(e,t,n,"Immediate")}),Zone.__load_patch("requestAnimationFrame",e=>{le(e,"request","cancel","AnimationFrame"),le(e,"mozRequest","mozCancel","AnimationFrame"),le(e,"webkitRequest","webkitCancel","AnimationFrame")}),Zone.__load_patch("blocking",(e,t)=>{const n=["alert","prompt","confirm"];for(let o=0;o<n.length;o++)H(e,n[o],(n,o,r)=>function(o,a){return t.current.run(n,e,a,r)})}),Zone.__load_patch("EventTarget",(e,t,n)=>{!function(e,t){t.patchEventPrototype(e,t)}(e,n),ue(e,n);const o=e.XMLHttpRequestEventTarget;o&&o.prototype&&n.patchEventTarget(e,[o.prototype])}),Zone.__load_patch("MutationObserver",(e,t,n)=>{D("MutationObserver"),D("WebKitMutationObserver")}),Zone.__load_patch("IntersectionObserver",(e,t,n)=>{D("IntersectionObserver")}),Zone.__load_patch("FileReader",(e,t,n)=>{D("FileReader")}),Zone.__load_patch("on_property",(e,t,n)=>{se(n,e)}),Zone.__load_patch("customElements",(e,t,n)=>{!function(e,t){const{isBrowser:n,isMix:o}=t.getGlobalObjects();(n||o)&&e.customElements&&"customElements"in e&&t.patchCallbacks(t,e.customElements,"customElements","define",["connectedCallback","disconnectedCallback","adoptedCallback","attributeChangedCallback"])}(e,n)}),Zone.__load_patch("XHR",(e,t)=>{!function(e){const u=e.XMLHttpRequest;if(!u)return;const h=u.prototype;let p=h[s],m=h[c];if(!p){const t=e.XMLHttpRequestEventTarget;if(t){const e=t.prototype;p=e[s],m=e[c]}}const g="readystatechange",T="scheduled";function y(e){const o=e.data,i=o.target;i[a]=!1,i[l]=!1;const u=i[r];p||(p=i[s],m=i[c]),u&&m.call(i,g,u);const h=i[r]=()=>{if(i.readyState===i.DONE)if(!o.aborted&&i[a]&&e.state===T){const n=i[t.__symbol__("loadfalse")];if(0!==i.status&&n&&n.length>0){const r=e.invoke;e.invoke=function(){const n=i[t.__symbol__("loadfalse")];for(let t=0;t<n.length;t++)n[t]===e&&n.splice(t,1);o.aborted||e.state!==T||r.call(e)},n.push(e)}else e.invoke()}else o.aborted||!1!==i[a]||(i[l]=!0)};return p.call(i,g,h),i[n]||(i[n]=e),w.apply(i,o.args),i[a]=!0,e}function _(){}function v(e){const t=e.data;return t.aborted=!0,M.apply(t.target,t.args)}const k=H(h,"open",()=>function(e,t){return e[o]=0==t[2],e[i]=t[1],k.apply(e,t)}),E=d("fetchTaskAborting"),b=d("fetchTaskScheduling"),w=H(h,"send",()=>function(e,n){if(!0===t.current[b])return w.apply(e,n);if(e[o])return w.apply(e,n);{const t={target:e,url:e[i],isPeriodic:!1,args:n,aborted:!1},o=f("XMLHttpRequest.send",_,t,y,v);e&&!0===e[l]&&!t.aborted&&o.state===T&&o.invoke()}}),M=H(h,"abort",()=>function(e,o){const r=e[n];if(r&&"string"==typeof r.type){if(null==r.cancelFn||r.data&&r.data.aborted)return;r.zone.cancelTask(r)}else if(!0===t.current[E])return M.apply(e,o)})}(e);const n=d("xhrTask"),o=d("xhrSync"),r=d("xhrListener"),a=d("xhrScheduled"),i=d("xhrURL"),l=d("xhrErrorBeforeScheduled")}),Zone.__load_patch("geolocation",t=>{t.navigator&&t.navigator.geolocation&&function(t,n){const o=t.constructor.name;for(let r=0;r<n.length;r++){const a=n[r],i=t[a];if(i){if(!v(e(t,a)))continue;t[a]=(e=>{const t=function(){return e.apply(this,_(arguments,o+"."+a))};return P(t,e),t})(i)}}}(t.navigator.geolocation,["getCurrentPosition","watchPosition"])}),Zone.__load_patch("PromiseRejectionEvent",(e,t)=>{function n(t){return function(n){G(e,t).forEach(o=>{const r=e.PromiseRejectionEvent;if(r){const e=new r(t,{promise:n.promise,reason:n.rejection});o.invoke(e)}})}}e.PromiseRejectionEvent&&(t[d("unhandledPromiseRejectionHandler")]=n("unhandledrejection"),t[d("rejectionHandledHandler")]=n("rejectionhandled"))})},408:(e,t,n)=>{"use strict";n(167),n(22)}},e=>{"use strict";e(e.s=408)}]);(self.webpackChunkng_elements_example=self.webpackChunkng_elements_example||[]).push([[179],{636:(t,e,n)=>{"use strict";function r(t){return"function"==typeof t}let s=!1;const i={Promise:void 0,set useDeprecatedSynchronousErrorHandling(t){if(t){const t=new Error;console.warn("DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n"+t.stack)}else s&&console.log("RxJS: Back to a better error behavior. Thank you. <3");s=t},get useDeprecatedSynchronousErrorHandling(){return s}};function o(t){setTimeout(()=>{throw t},0)}const a={closed:!0,next(t){},error(t){if(i.useDeprecatedSynchronousErrorHandling)throw t;o(t)},complete(){}},l=(()=>Array.isArray||(t=>t&&"number"==typeof t.length))();function u(t){return null!==t&&"object"==typeof t}const c=(()=>{function t(t){return Error.call(this),this.message=t?`${t.length} errors occurred during unsubscription:\n${t.map((t,e)=>`${e+1}) ${t.toString()}`).join("\n  ")}`:"",this.name="UnsubscriptionError",this.errors=t,this}return t.prototype=Object.create(Error.prototype),t})();let h=(()=>{class t{constructor(t){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,t&&(this._ctorUnsubscribe=!0,this._unsubscribe=t)}unsubscribe(){let e;if(this.closed)return;let{_parentOrParents:n,_ctorUnsubscribe:s,_unsubscribe:i,_subscriptions:o}=this;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,n instanceof t)n.remove(this);else if(null!==n)for(let t=0;t<n.length;++t)n[t].remove(this);if(r(i)){s&&(this._unsubscribe=void 0);try{i.call(this)}catch(a){e=a instanceof c?d(a.errors):[a]}}if(l(o)){let t=-1,n=o.length;for(;++t<n;){const n=o[t];if(u(n))try{n.unsubscribe()}catch(a){e=e||[],a instanceof c?e=e.concat(d(a.errors)):e.push(a)}}}if(e)throw new c(e)}add(e){let n=e;if(!e)return t.EMPTY;switch(typeof e){case"function":n=new t(e);case"object":if(n===this||n.closed||"function"!=typeof n.unsubscribe)return n;if(this.closed)return n.unsubscribe(),n;if(!(n instanceof t)){const e=n;n=new t,n._subscriptions=[e]}break;default:throw new Error("unrecognized teardown "+e+" added to Subscription.")}let{_parentOrParents:r}=n;if(null===r)n._parentOrParents=this;else if(r instanceof t){if(r===this)return n;n._parentOrParents=[r,this]}else{if(-1!==r.indexOf(this))return n;r.push(this)}const s=this._subscriptions;return null===s?this._subscriptions=[n]:s.push(n),n}remove(t){const e=this._subscriptions;if(e){const n=e.indexOf(t);-1!==n&&e.splice(n,1)}}}return t.EMPTY=function(t){return t.closed=!0,t}(new t),t})();function d(t){return t.reduce((t,e)=>t.concat(e instanceof c?e.errors:e),[])}const p=(()=>"function"==typeof Symbol?Symbol("rxSubscriber"):"@@rxSubscriber_"+Math.random())();class f extends h{constructor(t,e,n){switch(super(),this.syncErrorValue=null,this.syncErrorThrown=!1,this.syncErrorThrowable=!1,this.isStopped=!1,arguments.length){case 0:this.destination=a;break;case 1:if(!t){this.destination=a;break}if("object"==typeof t){t instanceof f?(this.syncErrorThrowable=t.syncErrorThrowable,this.destination=t,t.add(this)):(this.syncErrorThrowable=!0,this.destination=new g(this,t));break}default:this.syncErrorThrowable=!0,this.destination=new g(this,t,e,n)}}[p](){return this}static create(t,e,n){const r=new f(t,e,n);return r.syncErrorThrowable=!1,r}next(t){this.isStopped||this._next(t)}error(t){this.isStopped||(this.isStopped=!0,this._error(t))}complete(){this.isStopped||(this.isStopped=!0,this._complete())}unsubscribe(){this.closed||(this.isStopped=!0,super.unsubscribe())}_next(t){this.destination.next(t)}_error(t){this.destination.error(t),this.unsubscribe()}_complete(){this.destination.complete(),this.unsubscribe()}_unsubscribeAndRecycle(){const{_parentOrParents:t}=this;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=t,this}}class g extends f{constructor(t,e,n,s){let i;super(),this._parentSubscriber=t;let o=this;r(e)?i=e:e&&(i=e.next,n=e.error,s=e.complete,e!==a&&(o=Object.create(e),r(o.unsubscribe)&&this.add(o.unsubscribe.bind(o)),o.unsubscribe=this.unsubscribe.bind(this))),this._context=o,this._next=i,this._error=n,this._complete=s}next(t){if(!this.isStopped&&this._next){const{_parentSubscriber:e}=this;i.useDeprecatedSynchronousErrorHandling&&e.syncErrorThrowable?this.__tryOrSetError(e,this._next,t)&&this.unsubscribe():this.__tryOrUnsub(this._next,t)}}error(t){if(!this.isStopped){const{_parentSubscriber:e}=this,{useDeprecatedSynchronousErrorHandling:n}=i;if(this._error)n&&e.syncErrorThrowable?(this.__tryOrSetError(e,this._error,t),this.unsubscribe()):(this.__tryOrUnsub(this._error,t),this.unsubscribe());else if(e.syncErrorThrowable)n?(e.syncErrorValue=t,e.syncErrorThrown=!0):o(t),this.unsubscribe();else{if(this.unsubscribe(),n)throw t;o(t)}}}complete(){if(!this.isStopped){const{_parentSubscriber:t}=this;if(this._complete){const e=()=>this._complete.call(this._context);i.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?(this.__tryOrSetError(t,e),this.unsubscribe()):(this.__tryOrUnsub(e),this.unsubscribe())}else this.unsubscribe()}}__tryOrUnsub(t,e){try{t.call(this._context,e)}catch(n){if(this.unsubscribe(),i.useDeprecatedSynchronousErrorHandling)throw n;o(n)}}__tryOrSetError(t,e,n){if(!i.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{e.call(this._context,n)}catch(r){return i.useDeprecatedSynchronousErrorHandling?(t.syncErrorValue=r,t.syncErrorThrown=!0,!0):(o(r),!0)}return!1}_unsubscribe(){const{_parentSubscriber:t}=this;this._context=null,this._parentSubscriber=null,t.unsubscribe()}}const m=(()=>"function"==typeof Symbol&&Symbol.observable||"@@observable")();function y(t){return t}let v=(()=>{class t{constructor(t){this._isScalar=!1,t&&(this._subscribe=t)}lift(e){const n=new t;return n.source=this,n.operator=e,n}subscribe(t,e,n){const{operator:r}=this,s=function(t,e,n){if(t){if(t instanceof f)return t;if(t[p])return t[p]()}return t||e||n?new f(t,e,n):new f(a)}(t,e,n);if(s.add(r?r.call(s,this.source):this.source||i.useDeprecatedSynchronousErrorHandling&&!s.syncErrorThrowable?this._subscribe(s):this._trySubscribe(s)),i.useDeprecatedSynchronousErrorHandling&&s.syncErrorThrowable&&(s.syncErrorThrowable=!1,s.syncErrorThrown))throw s.syncErrorValue;return s}_trySubscribe(t){try{return this._subscribe(t)}catch(e){i.useDeprecatedSynchronousErrorHandling&&(t.syncErrorThrown=!0,t.syncErrorValue=e),function(t){for(;t;){const{closed:e,destination:n,isStopped:r}=t;if(e||r)return!1;t=n&&n instanceof f?n:null}return!0}(t)?t.error(e):console.warn(e)}}forEach(t,e){return new(e=b(e))((e,n)=>{let r;r=this.subscribe(e=>{try{t(e)}catch(s){n(s),r&&r.unsubscribe()}},n,e)})}_subscribe(t){const{source:e}=this;return e&&e.subscribe(t)}[m](){return this}pipe(...t){return 0===t.length?this:(0===(e=t).length?y:1===e.length?e[0]:function(t){return e.reduce((t,e)=>e(t),t)})(this);var e}toPromise(t){return new(t=b(t))((t,e)=>{let n;this.subscribe(t=>n=t,t=>e(t),()=>t(n))})}}return t.create=e=>new t(e),t})();function b(t){if(t||(t=i.Promise||Promise),!t)throw new Error("no Promise impl found");return t}const _=(()=>{function t(){return Error.call(this),this.message="object unsubscribed",this.name="ObjectUnsubscribedError",this}return t.prototype=Object.create(Error.prototype),t})();class w extends h{constructor(t,e){super(),this.subject=t,this.subscriber=e,this.closed=!1}unsubscribe(){if(this.closed)return;this.closed=!0;const t=this.subject,e=t.observers;if(this.subject=null,!e||0===e.length||t.isStopped||t.closed)return;const n=e.indexOf(this.subscriber);-1!==n&&e.splice(n,1)}}class C extends f{constructor(t){super(t),this.destination=t}}let E=(()=>{class t extends v{constructor(){super(),this.observers=[],this.closed=!1,this.isStopped=!1,this.hasError=!1,this.thrownError=null}[p](){return new C(this)}lift(t){const e=new D(this,this);return e.operator=t,e}next(t){if(this.closed)throw new _;if(!this.isStopped){const{observers:e}=this,n=e.length,r=e.slice();for(let s=0;s<n;s++)r[s].next(t)}}error(t){if(this.closed)throw new _;this.hasError=!0,this.thrownError=t,this.isStopped=!0;const{observers:e}=this,n=e.length,r=e.slice();for(let s=0;s<n;s++)r[s].error(t);this.observers.length=0}complete(){if(this.closed)throw new _;this.isStopped=!0;const{observers:t}=this,e=t.length,n=t.slice();for(let r=0;r<e;r++)n[r].complete();this.observers.length=0}unsubscribe(){this.isStopped=!0,this.closed=!0,this.observers=null}_trySubscribe(t){if(this.closed)throw new _;return super._trySubscribe(t)}_subscribe(t){if(this.closed)throw new _;return this.hasError?(t.error(this.thrownError),h.EMPTY):this.isStopped?(t.complete(),h.EMPTY):(this.observers.push(t),new w(this,t))}asObservable(){const t=new v;return t.source=this,t}}return t.create=(t,e)=>new D(t,e),t})();class D extends E{constructor(t,e){super(),this.destination=t,this.source=e}next(t){const{destination:e}=this;e&&e.next&&e.next(t)}error(t){const{destination:e}=this;e&&e.error&&this.destination.error(t)}complete(){const{destination:t}=this;t&&t.complete&&this.destination.complete()}_subscribe(t){const{source:e}=this;return e?this.source.subscribe(t):h.EMPTY}}function A(t){return t&&"function"==typeof t.schedule}function S(t,e){return function(n){if("function"!=typeof t)throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");return n.lift(new x(t,e))}}class x{constructor(t,e){this.project=t,this.thisArg=e}call(t,e){return e.subscribe(new k(t,this.project,this.thisArg))}}class k extends f{constructor(t,e,n){super(t),this.project=e,this.count=0,this.thisArg=n||this}_next(t){let e;try{e=this.project.call(this.thisArg,t,this.count++)}catch(n){return void this.destination.error(n)}this.destination.next(e)}}const T=t=>e=>{for(let n=0,r=t.length;n<r&&!e.closed;n++)e.next(t[n]);e.complete()};function O(){return"function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator"}const F=O(),P=t=>t&&"number"==typeof t.length&&"function"!=typeof t;function I(t){return!!t&&"function"!=typeof t.subscribe&&"function"==typeof t.then}const R=t=>{if(t&&"function"==typeof t[m])return n=t,t=>{const e=n[m]();if("function"!=typeof e.subscribe)throw new TypeError("Provided object does not correctly implement Symbol.observable");return e.subscribe(t)};if(P(t))return T(t);if(I(t))return(t=>e=>(t.then(t=>{e.closed||(e.next(t),e.complete())},t=>e.error(t)).then(null,o),e))(t);if(t&&"function"==typeof t[F])return e=t,t=>{const n=e[F]();for(;;){let e;try{e=n.next()}catch(r){return t.error(r),t}if(e.done){t.complete();break}if(t.next(e.value),t.closed)break}return"function"==typeof n.return&&t.add(()=>{n.return&&n.return()}),t};{const e=u(t)?"an invalid object":`'${t}'`;throw new TypeError(`You provided ${e} where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.`)}var e,n};function M(t,e){return new v(n=>{const r=new h;let s=0;return r.add(e.schedule(function(){s!==t.length?(n.next(t[s++]),n.closed||r.add(this.schedule())):n.complete()})),r})}function V(t,e){return e?function(t,e){if(null!=t){if(function(t){return t&&"function"==typeof t[m]}(t))return function(t,e){return new v(n=>{const r=new h;return r.add(e.schedule(()=>{const s=t[m]();r.add(s.subscribe({next(t){r.add(e.schedule(()=>n.next(t)))},error(t){r.add(e.schedule(()=>n.error(t)))},complete(){r.add(e.schedule(()=>n.complete()))}}))})),r})}(t,e);if(I(t))return function(t,e){return new v(n=>{const r=new h;return r.add(e.schedule(()=>t.then(t=>{r.add(e.schedule(()=>{n.next(t),r.add(e.schedule(()=>n.complete()))}))},t=>{r.add(e.schedule(()=>n.error(t)))}))),r})}(t,e);if(P(t))return M(t,e);if(function(t){return t&&"function"==typeof t[F]}(t)||"string"==typeof t)return function(t,e){if(!t)throw new Error("Iterable cannot be null");return new v(n=>{const r=new h;let s;return r.add(()=>{s&&"function"==typeof s.return&&s.return()}),r.add(e.schedule(()=>{s=t[F](),r.add(e.schedule(function(){if(n.closed)return;let t,e;try{const n=s.next();t=n.value,e=n.done}catch(r){return void n.error(r)}e?n.complete():(n.next(t),this.schedule())}))})),r})}(t,e)}throw new TypeError((null!==t&&typeof t||t)+" is not observable")}(t,e):t instanceof v?t:new v(R(t))}class j extends f{constructor(t){super(),this.parent=t}_next(t){this.parent.notifyNext(t)}_error(t){this.parent.notifyError(t),this.unsubscribe()}_complete(){this.parent.notifyComplete(),this.unsubscribe()}}class N extends f{notifyNext(t){this.destination.next(t)}notifyError(t){this.destination.error(t)}notifyComplete(){this.destination.complete()}}function L(t,e){if(e.closed)return;if(t instanceof v)return t.subscribe(e);let n;try{n=R(t)(e)}catch(r){e.error(r)}return n}function B(t,e,n=Number.POSITIVE_INFINITY){return"function"==typeof e?r=>r.pipe(B((n,r)=>V(t(n,r)).pipe(S((t,s)=>e(n,t,r,s))),n)):("number"==typeof e&&(n=e),e=>e.lift(new U(t,n)))}class U{constructor(t,e=Number.POSITIVE_INFINITY){this.project=t,this.concurrent=e}call(t,e){return e.subscribe(new H(t,this.project,this.concurrent))}}class H extends N{constructor(t,e,n=Number.POSITIVE_INFINITY){super(t),this.project=e,this.concurrent=n,this.hasCompleted=!1,this.buffer=[],this.active=0,this.index=0}_next(t){this.active<this.concurrent?this._tryNext(t):this.buffer.push(t)}_tryNext(t){let e;const n=this.index++;try{e=this.project(t,n)}catch(r){return void this.destination.error(r)}this.active++,this._innerSub(e)}_innerSub(t){const e=new j(this),n=this.destination;n.add(e);const r=L(t,e);r!==e&&n.add(r)}_complete(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&this.destination.complete(),this.unsubscribe()}notifyNext(t){this.destination.next(t)}notifyComplete(){const t=this.buffer;this.active--,t.length>0?this._next(t.shift()):0===this.active&&this.hasCompleted&&this.destination.complete()}}function $(t=Number.POSITIVE_INFINITY){return B(y,t)}function z(t,e){return e?M(t,e):new v(T(t))}function q(...t){let e=Number.POSITIVE_INFINITY,n=null,r=t[t.length-1];return A(r)?(n=t.pop(),t.length>1&&"number"==typeof t[t.length-1]&&(e=t.pop())):"number"==typeof r&&(e=t.pop()),null===n&&1===t.length&&t[0]instanceof v?t[0]:$(e)(z(t,n))}function W(){return function(t){return t.lift(new G(t))}}class G{constructor(t){this.connectable=t}call(t,e){const{connectable:n}=this;n._refCount++;const r=new Z(t,n),s=e.subscribe(r);return r.closed||(r.connection=n.connect()),s}}class Z extends f{constructor(t,e){super(t),this.connectable=e}_unsubscribe(){const{connectable:t}=this;if(!t)return void(this.connection=null);this.connectable=null;const e=t._refCount;if(e<=0)return void(this.connection=null);if(t._refCount=e-1,e>1)return void(this.connection=null);const{connection:n}=this,r=t._connection;this.connection=null,!r||n&&r!==n||r.unsubscribe()}}class K extends v{constructor(t,e){super(),this.source=t,this.subjectFactory=e,this._refCount=0,this._isComplete=!1}_subscribe(t){return this.getSubject().subscribe(t)}getSubject(){const t=this._subject;return t&&!t.isStopped||(this._subject=this.subjectFactory()),this._subject}connect(){let t=this._connection;return t||(this._isComplete=!1,t=this._connection=new h,t.add(this.source.subscribe(new Q(this.getSubject(),this))),t.closed&&(this._connection=null,t=h.EMPTY)),t}refCount(){return W()(this)}}const Y=(()=>{const t=K.prototype;return{operator:{value:null},_refCount:{value:0,writable:!0},_subject:{value:null,writable:!0},_connection:{value:null,writable:!0},_subscribe:{value:t._subscribe},_isComplete:{value:t._isComplete,writable:!0},getSubject:{value:t.getSubject},connect:{value:t.connect},refCount:{value:t.refCount}}})();class Q extends C{constructor(t,e){super(t),this.connectable=e}_error(t){this._unsubscribe(),super._error(t)}_complete(){this.connectable._isComplete=!0,this._unsubscribe(),super._complete()}_unsubscribe(){const t=this.connectable;if(t){this.connectable=null;const e=t._connection;t._refCount=0,t._subject=null,t._connection=null,e&&e.unsubscribe()}}}function X(){return new E}function J(t){for(let e in t)if(t[e]===J)return e;throw Error("Could not find renamed property on target object.")}function tt(t,e){for(const n in e)e.hasOwnProperty(n)&&!t.hasOwnProperty(n)&&(t[n]=e[n])}function et(t){if("string"==typeof t)return t;if(Array.isArray(t))return"["+t.map(et).join(", ")+"]";if(null==t)return""+t;if(t.overriddenName)return`${t.overriddenName}`;if(t.name)return`${t.name}`;const e=t.toString();if(null==e)return""+e;const n=e.indexOf("\n");return-1===n?e:e.substring(0,n)}function nt(t,e){return null==t||""===t?null===e?"":e:null==e||""===e?t:t+" "+e}const rt=J({__forward_ref__:J});function st(t){return t.__forward_ref__=st,t.toString=function(){return et(this())},t}function it(t){return ot(t)?t():t}function ot(t){return"function"==typeof t&&t.hasOwnProperty(rt)&&t.__forward_ref__===st}class at extends Error{constructor(t,e){super(function(t,e){return`${t?`NG0${t}: `:""}${e}`}(t,e)),this.code=t}}function lt(t){return"string"==typeof t?t:null==t?"":String(t)}function ut(t){return"function"==typeof t?t.name||t.toString():"object"==typeof t&&null!=t&&"function"==typeof t.type?t.type.name||t.type.toString():lt(t)}function ct(t,e){const n=e?` in ${e}`:"";throw new at("201",`No provider for ${ut(t)} found${n}`)}function ht(t){return{token:t.token,providedIn:t.providedIn||null,factory:t.factory,value:void 0}}function dt(t){return{providers:t.providers||[],imports:t.imports||[]}}function pt(t){return ft(t,mt)||ft(t,vt)}function ft(t,e){return t.hasOwnProperty(e)?t[e]:null}function gt(t){return t&&(t.hasOwnProperty(yt)||t.hasOwnProperty(bt))?t[yt]:null}const mt=J({"\u0275prov":J}),yt=J({"\u0275inj":J}),vt=J({ngInjectableDef:J}),bt=J({ngInjectorDef:J});var _t=function(t){return t[t.Default=0]="Default",t[t.Host=1]="Host",t[t.Self=2]="Self",t[t.SkipSelf=4]="SkipSelf",t[t.Optional=8]="Optional",t}({});let wt;function Ct(t){const e=wt;return wt=t,e}function Et(t,e,n){const r=pt(t);return r&&"root"==r.providedIn?void 0===r.value?r.value=r.factory():r.value:n&_t.Optional?null:void 0!==e?e:void ct(et(t),"Injector")}function Dt(t){return{toString:t}.toString()}var At=function(t){return t[t.OnPush=0]="OnPush",t[t.Default=1]="Default",t}({}),St=function(t){return t[t.Emulated=0]="Emulated",t[t.None=2]="None",t[t.ShadowDom=3]="ShadowDom",t}({});const xt="undefined"!=typeof globalThis&&globalThis,kt="undefined"!=typeof window&&window,Tt="undefined"!=typeof self&&"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,Ot="undefined"!=typeof global&&global,Ft=xt||Ot||kt||Tt,Pt={},It=[],Rt=J({"\u0275cmp":J}),Mt=J({"\u0275dir":J}),Vt=J({"\u0275pipe":J}),jt=J({"\u0275mod":J}),Nt=J({"\u0275loc":J}),Lt=J({"\u0275fac":J}),Bt=J({__NG_ELEMENT_ID__:J});let Ut=0;function Ht(t){return Dt(()=>{const e={},n={type:t.type,providersResolver:null,decls:t.decls,vars:t.vars,factory:null,template:t.template||null,consts:t.consts||null,ngContentSelectors:t.ngContentSelectors,hostBindings:t.hostBindings||null,hostVars:t.hostVars||0,hostAttrs:t.hostAttrs||null,contentQueries:t.contentQueries||null,declaredInputs:e,inputs:null,outputs:null,exportAs:t.exportAs||null,onPush:t.changeDetection===At.OnPush,directiveDefs:null,pipeDefs:null,selectors:t.selectors||It,viewQuery:t.viewQuery||null,features:t.features||null,data:t.data||{},encapsulation:t.encapsulation||St.Emulated,id:"c",styles:t.styles||It,_:null,setInput:null,schemas:t.schemas||null,tView:null},r=t.directives,s=t.features,i=t.pipes;return n.id+=Ut++,n.inputs=Gt(t.inputs,e),n.outputs=Gt(t.outputs),s&&s.forEach(t=>t(n)),n.directiveDefs=r?()=>("function"==typeof r?r():r).map($t):null,n.pipeDefs=i?()=>("function"==typeof i?i():i).map(zt):null,n})}function $t(t){return Yt(t)||function(t){return t[Mt]||null}(t)}function zt(t){return function(t){return t[Vt]||null}(t)}const qt={};function Wt(t){return Dt(()=>{const e={type:t.type,bootstrap:t.bootstrap||It,declarations:t.declarations||It,imports:t.imports||It,exports:t.exports||It,transitiveCompileScopes:null,schemas:t.schemas||null,id:t.id||null};return null!=t.id&&(qt[t.id]=t.type),e})}function Gt(t,e){if(null==t)return Pt;const n={};for(const r in t)if(t.hasOwnProperty(r)){let s=t[r],i=s;Array.isArray(s)&&(i=s[1],s=s[0]),n[s]=r,e&&(e[s]=i)}return n}const Zt=Ht;function Kt(t){return{type:t.type,name:t.name,factory:null,pure:!1!==t.pure,onDestroy:t.type.prototype.ngOnDestroy||null}}function Yt(t){return t[Rt]||null}function Qt(t,e){const n=t[jt]||null;if(!n&&!0===e)throw new Error(`Type ${et(t)} does not have '\u0275mod' property.`);return n}const Xt=20,Jt=10;function te(t){return Array.isArray(t)&&"object"==typeof t[1]}function ee(t){return Array.isArray(t)&&!0===t[1]}function ne(t){return 0!=(8&t.flags)}function re(t){return 2==(2&t.flags)}function se(t){return 1==(1&t.flags)}function ie(t){return null!==t.template}function oe(t,e){return t.hasOwnProperty(Lt)?t[Lt]:null}class ae{constructor(t,e,n){this.previousValue=t,this.currentValue=e,this.firstChange=n}isFirstChange(){return this.firstChange}}function le(){return ue}function ue(t){return t.type.prototype.ngOnChanges&&(t.setInput=he),ce}function ce(){const t=de(this),e=null==t?void 0:t.current;if(e){const n=t.previous;if(n===Pt)t.previous=e;else for(let t in e)n[t]=e[t];t.current=null,this.ngOnChanges(e)}}function he(t,e,n,r){const s=de(t)||function(t,e){return t.__ngSimpleChanges__=e}(t,{previous:Pt,current:null}),i=s.current||(s.current={}),o=s.previous,a=this.declaredInputs[n],l=o[a];i[a]=new ae(l&&l.currentValue,e,o===Pt),t[r]=e}function de(t){return t.__ngSimpleChanges__||null}let pe;function fe(){return void 0!==pe?pe:"undefined"!=typeof document?document:void 0}function ge(t){return!!t.listen}le.ngInherit=!0;const me={createRenderer:(t,e)=>fe()};function ye(t){for(;Array.isArray(t);)t=t[0];return t}function ve(t,e){return ye(e[t])}function be(t,e){return ye(e[t.index])}function _e(t,e){return t.data[e]}function we(t,e){const n=e[t];return te(n)?n:n[0]}function Ce(t){return 4==(4&t[2])}function Ee(t){return 128==(128&t[2])}function De(t,e){return null==e?null:t[e]}function Ae(t){t[18]=0}function Se(t,e){t[5]+=e;let n=t,r=t[3];for(;null!==r&&(1===e&&1===n[5]||-1===e&&0===n[5]);)r[5]+=e,n=r,r=r[3]}const xe={lFrame:Ye(null),bindingsEnabled:!0,isInCheckNoChangesMode:!1};function ke(){return xe.bindingsEnabled}function Te(){return xe.lFrame.lView}function Oe(){return xe.lFrame.tView}function Fe(t){return xe.lFrame.contextLView=t,t[8]}function Pe(){let t=Ie();for(;null!==t&&64===t.type;)t=t.parent;return t}function Ie(){return xe.lFrame.currentTNode}function Re(t,e){const n=xe.lFrame;n.currentTNode=t,n.isParent=e}function Me(){return xe.lFrame.isParent}function Ve(){xe.lFrame.isParent=!1}function je(){return xe.isInCheckNoChangesMode}function Ne(t){xe.isInCheckNoChangesMode=t}function Le(){const t=xe.lFrame;let e=t.bindingRootIndex;return-1===e&&(e=t.bindingRootIndex=t.tView.bindingStartIndex),e}function Be(){return xe.lFrame.bindingIndex++}function Ue(t){const e=xe.lFrame,n=e.bindingIndex;return e.bindingIndex=e.bindingIndex+t,n}function He(t,e){const n=xe.lFrame;n.bindingIndex=n.bindingRootIndex=t,$e(e)}function $e(t){xe.lFrame.currentDirectiveIndex=t}function ze(){return xe.lFrame.currentQueryIndex}function qe(t){xe.lFrame.currentQueryIndex=t}function We(t){const e=t[1];return 2===e.type?e.declTNode:1===e.type?t[6]:null}function Ge(t,e,n){if(n&_t.SkipSelf){let r=e,s=t;for(;r=r.parent,!(null!==r||n&_t.Host||(r=We(s),null===r)||(s=s[15],10&r.type)););if(null===r)return!1;e=r,t=s}const r=xe.lFrame=Ke();return r.currentTNode=e,r.lView=t,!0}function Ze(t){const e=Ke(),n=t[1];xe.lFrame=e,e.currentTNode=n.firstChild,e.lView=t,e.tView=n,e.contextLView=t,e.bindingIndex=n.bindingStartIndex,e.inI18n=!1}function Ke(){const t=xe.lFrame,e=null===t?null:t.child;return null===e?Ye(t):e}function Ye(t){const e={currentTNode:null,isParent:!0,lView:null,tView:null,selectedIndex:-1,contextLView:null,elementDepthCount:0,currentNamespace:null,currentDirectiveIndex:-1,bindingRootIndex:-1,bindingIndex:-1,currentQueryIndex:0,parent:t,child:null,inI18n:!1};return null!==t&&(t.child=e),e}function Qe(){const t=xe.lFrame;return xe.lFrame=t.parent,t.currentTNode=null,t.lView=null,t}const Xe=Qe;function Je(){const t=Qe();t.isParent=!0,t.tView=null,t.selectedIndex=-1,t.contextLView=null,t.elementDepthCount=0,t.currentDirectiveIndex=-1,t.currentNamespace=null,t.bindingRootIndex=-1,t.bindingIndex=-1,t.currentQueryIndex=0}function tn(){return xe.lFrame.selectedIndex}function en(t){xe.lFrame.selectedIndex=t}function nn(){const t=xe.lFrame;return _e(t.tView,t.selectedIndex)}function rn(t,e){for(let n=e.directiveStart,r=e.directiveEnd;n<r;n++){const e=t.data[n].type.prototype,{ngAfterContentInit:r,ngAfterContentChecked:s,ngAfterViewInit:i,ngAfterViewChecked:o,ngOnDestroy:a}=e;r&&(t.contentHooks||(t.contentHooks=[])).push(-n,r),s&&((t.contentHooks||(t.contentHooks=[])).push(n,s),(t.contentCheckHooks||(t.contentCheckHooks=[])).push(n,s)),i&&(t.viewHooks||(t.viewHooks=[])).push(-n,i),o&&((t.viewHooks||(t.viewHooks=[])).push(n,o),(t.viewCheckHooks||(t.viewCheckHooks=[])).push(n,o)),null!=a&&(t.destroyHooks||(t.destroyHooks=[])).push(n,a)}}function sn(t,e,n){ln(t,e,3,n)}function on(t,e,n,r){(3&t[2])===n&&ln(t,e,n,r)}function an(t,e){let n=t[2];(3&n)===e&&(n&=2047,n+=1,t[2]=n)}function ln(t,e,n,r){const s=null!=r?r:-1,i=e.length-1;let o=0;for(let a=void 0!==r?65535&t[18]:0;a<i;a++)if("number"==typeof e[a+1]){if(o=e[a],null!=r&&o>=r)break}else e[a]<0&&(t[18]+=65536),(o<s||-1==s)&&(un(t,n,e,a),t[18]=(4294901760&t[18])+a+2),a++}function un(t,e,n,r){const s=n[r]<0,i=n[r+1],o=t[s?-n[r]:n[r]];if(s){if(t[2]>>11<t[18]>>16&&(3&t[2])===e){t[2]+=2048;try{i.call(o)}finally{}}}else try{i.call(o)}finally{}}const cn=-1;class hn{constructor(t,e,n){this.factory=t,this.resolving=!1,this.canSeeViewProviders=e,this.injectImpl=n}}function dn(t,e,n){const r=ge(t);let s=0;for(;s<n.length;){const i=n[s];if("number"==typeof i){if(0!==i)break;s++;const o=n[s++],a=n[s++],l=n[s++];r?t.setAttribute(e,a,l,o):e.setAttributeNS(o,a,l)}else{const o=i,a=n[++s];fn(o)?r&&t.setProperty(e,o,a):r?t.setAttribute(e,o,a):e.setAttribute(o,a),s++}}return s}function pn(t){return 3===t||4===t||6===t}function fn(t){return 64===t.charCodeAt(0)}function gn(t,e){if(null===e||0===e.length);else if(null===t||0===t.length)t=e.slice();else{let n=-1;for(let r=0;r<e.length;r++){const s=e[r];"number"==typeof s?n=s:0===n||mn(t,n,s,null,-1===n||2===n?e[++r]:null)}}return t}function mn(t,e,n,r,s){let i=0,o=t.length;if(-1===e)o=-1;else for(;i<t.length;){const n=t[i++];if("number"==typeof n){if(n===e){o=-1;break}if(n>e){o=i-1;break}}}for(;i<t.length;){const e=t[i];if("number"==typeof e)break;if(e===n){if(null===r)return void(null!==s&&(t[i+1]=s));if(r===t[i+1])return void(t[i+2]=s)}i++,null!==r&&i++,null!==s&&i++}-1!==o&&(t.splice(o,0,e),i=o+1),t.splice(i++,0,n),null!==r&&t.splice(i++,0,r),null!==s&&t.splice(i++,0,s)}function yn(t){return t!==cn}function vn(t){return 32767&t}function bn(t,e){let n=t>>16,r=e;for(;n>0;)r=r[15],n--;return r}let _n=!0;function wn(t){const e=_n;return _n=t,e}let Cn=0;function En(t,e){const n=An(t,e);if(-1!==n)return n;const r=e[1];r.firstCreatePass&&(t.injectorIndex=e.length,Dn(r.data,t),Dn(e,null),Dn(r.blueprint,null));const s=Sn(t,e),i=t.injectorIndex;if(yn(s)){const t=vn(s),n=bn(s,e),r=n[1].data;for(let s=0;s<8;s++)e[i+s]=n[t+s]|r[t+s]}return e[i+8]=s,i}function Dn(t,e){t.push(0,0,0,0,0,0,0,0,e)}function An(t,e){return-1===t.injectorIndex||t.parent&&t.parent.injectorIndex===t.injectorIndex||null===e[t.injectorIndex+8]?-1:t.injectorIndex}function Sn(t,e){if(t.parent&&-1!==t.parent.injectorIndex)return t.parent.injectorIndex;let n=0,r=null,s=e;for(;null!==s;){const t=s[1],e=t.type;if(r=2===e?t.declTNode:1===e?s[6]:null,null===r)return cn;if(n++,s=s[15],-1!==r.injectorIndex)return r.injectorIndex|n<<16}return cn}function xn(t,e,n){!function(t,e,n){let r;"string"==typeof n?r=n.charCodeAt(0)||0:n.hasOwnProperty(Bt)&&(r=n[Bt]),null==r&&(r=n[Bt]=Cn++);const s=255&r;e.data[t+(s>>5)]|=1<<s}(t,e,n)}function kn(t,e,n){if(n&_t.Optional)return t;ct(e,"NodeInjector")}function Tn(t,e,n,r){if(n&_t.Optional&&void 0===r&&(r=null),0==(n&(_t.Self|_t.Host))){const s=t[9],i=Ct(void 0);try{return s?s.get(e,r,n&_t.Optional):Et(e,r,n&_t.Optional)}finally{Ct(i)}}return kn(r,e,n)}function On(t,e,n,r=_t.Default,s){if(null!==t){const i=function(t){if("string"==typeof t)return t.charCodeAt(0)||0;const e=t.hasOwnProperty(Bt)?t[Bt]:void 0;return"number"==typeof e?e>=0?255&e:Pn:e}(n);if("function"==typeof i){if(!Ge(e,t,r))return r&_t.Host?kn(s,n,r):Tn(e,n,r,s);try{const t=i(r);if(null!=t||r&_t.Optional)return t;ct(n)}finally{Xe()}}else if("number"==typeof i){let s=null,o=An(t,e),a=cn,l=r&_t.Host?e[16][6]:null;for((-1===o||r&_t.SkipSelf)&&(a=-1===o?Sn(t,e):e[o+8],a!==cn&&jn(r,!1)?(s=e[1],o=vn(a),e=bn(a,e)):o=-1);-1!==o;){const t=e[1];if(Vn(i,o,t.data)){const t=In(o,e,n,s,r,l);if(t!==Fn)return t}a=e[o+8],a!==cn&&jn(r,e[1].data[o+8]===l)&&Vn(i,o,e)?(s=t,o=vn(a),e=bn(a,e)):o=-1}}}return Tn(e,n,r,s)}const Fn={};function Pn(){return new Nn(Pe(),Te())}function In(t,e,n,r,s,i){const o=e[1],a=o.data[t+8],l=Rn(a,o,n,null==r?re(a)&&_n:r!=o&&0!=(3&a.type),s&_t.Host&&i===a);return null!==l?Mn(e,o,l,a):Fn}function Rn(t,e,n,r,s){const i=t.providerIndexes,o=e.data,a=1048575&i,l=t.directiveStart,u=i>>20,c=s?a+u:t.directiveEnd;for(let h=r?a:a+u;h<c;h++){const t=o[h];if(h<l&&n===t||h>=l&&t.type===n)return h}if(s){const t=o[l];if(t&&ie(t)&&t.type===n)return l}return null}function Mn(t,e,n,r){let s=t[n];const i=e.data;if(s instanceof hn){const o=s;o.resolving&&function(t,e){throw new at("200",`Circular dependency in DI detected for ${t}`)}(ut(i[n]));const a=wn(o.canSeeViewProviders);o.resolving=!0;const l=o.injectImpl?Ct(o.injectImpl):null;Ge(t,r,_t.Default);try{s=t[n]=o.factory(void 0,i,t,r),e.firstCreatePass&&n>=r.directiveStart&&function(t,e,n){const{ngOnChanges:r,ngOnInit:s,ngDoCheck:i}=e.type.prototype;if(r){const r=ue(e);(n.preOrderHooks||(n.preOrderHooks=[])).push(t,r),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(t,r)}s&&(n.preOrderHooks||(n.preOrderHooks=[])).push(0-t,s),i&&((n.preOrderHooks||(n.preOrderHooks=[])).push(t,i),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(t,i))}(n,i[n],e)}finally{null!==l&&Ct(l),wn(a),o.resolving=!1,Xe()}}return s}function Vn(t,e,n){return!!(n[e+(t>>5)]&1<<t)}function jn(t,e){return!(t&_t.Self||t&_t.Host&&e)}class Nn{constructor(t,e){this._tNode=t,this._lView=e}get(t,e){return On(this._tNode,this._lView,t,void 0,e)}}function Ln(t){return Dt(()=>{const e=t.prototype.constructor,n=e[Lt]||Bn(e),r=Object.prototype;let s=Object.getPrototypeOf(t.prototype).constructor;for(;s&&s!==r;){const t=s[Lt]||Bn(s);if(t&&t!==n)return t;s=Object.getPrototypeOf(s)}return t=>new t})}function Bn(t){return ot(t)?()=>{const e=Bn(it(t));return e&&e()}:oe(t)}const Un="__parameters__";function Hn(t,e,n){return Dt(()=>{const r=function(t){return function(...e){if(t){const n=t(...e);for(const t in n)this[t]=n[t]}}}(e);function s(...t){if(this instanceof s)return r.apply(this,t),this;const e=new s(...t);return n.annotation=e,n;function n(t,n,r){const s=t.hasOwnProperty(Un)?t[Un]:Object.defineProperty(t,Un,{value:[]})[Un];for(;s.length<=r;)s.push(null);return(s[r]=s[r]||[]).push(e),t}}return n&&(s.prototype=Object.create(n.prototype)),s.prototype.ngMetadataName=t,s.annotationCls=s,s})}class $n{constructor(t,e){this._desc=t,this.ngMetadataName="InjectionToken",this.\u0275prov=void 0,"number"==typeof e?this.__NG_ELEMENT_ID__=e:void 0!==e&&(this.\u0275prov=ht({token:this,providedIn:e.providedIn||"root",factory:e.factory}))}toString(){return`InjectionToken ${this._desc}`}}const zn=new $n("AnalyzeForEntryComponents"),qn=Function;function Wn(t,e){void 0===e&&(e=t);for(let n=0;n<t.length;n++){let r=t[n];Array.isArray(r)?(e===t&&(e=t.slice(0,n)),Wn(r,e)):e!==t&&e.push(r)}return e}function Gn(t,e){t.forEach(t=>Array.isArray(t)?Gn(t,e):e(t))}function Zn(t,e,n){e>=t.length?t.push(n):t.splice(e,0,n)}function Kn(t,e){return e>=t.length-1?t.pop():t.splice(e,1)[0]}function Yn(t,e){const n=[];for(let r=0;r<t;r++)n.push(e);return n}function Qn(t,e,n){let r=Jn(t,e);return r>=0?t[1|r]=n:(r=~r,function(t,e,n,r){let s=t.length;if(s==e)t.push(n,r);else if(1===s)t.push(r,t[0]),t[0]=n;else{for(s--,t.push(t[s-1],t[s]);s>e;)t[s]=t[s-2],s--;t[e]=n,t[e+1]=r}}(t,r,e,n)),r}function Xn(t,e){const n=Jn(t,e);if(n>=0)return t[1|n]}function Jn(t,e){return function(t,e,n){let r=0,s=t.length>>1;for(;s!==r;){const n=r+(s-r>>1),i=t[n<<1];if(e===i)return n<<1;i>e?s=n:r=n+1}return~(s<<1)}(t,e)}const tr={},er=/\n/gm,nr="__source",rr=J({provide:String,useValue:J});let sr;function ir(t){const e=sr;return sr=t,e}function or(t,e=_t.Default){if(void 0===sr)throw new Error("inject() must be called from an injection context");return null===sr?Et(t,void 0,e):sr.get(t,e&_t.Optional?null:void 0,e)}function ar(t,e=_t.Default){return(wt||or)(it(t),e)}function lr(t){const e=[];for(let n=0;n<t.length;n++){const r=it(t[n]);if(Array.isArray(r)){if(0===r.length)throw new Error("Arguments array must have arguments.");let t,n=_t.Default;for(let e=0;e<r.length;e++){const s=r[e],i=s.__NG_DI_FLAG__;"number"==typeof i?-1===i?t=s.token:n|=i:t=s}e.push(ar(t,n))}else e.push(ar(r))}return e}function ur(t,e){return t.__NG_DI_FLAG__=e,t.prototype.__NG_DI_FLAG__=e,t}const cr=ur(Hn("Inject",t=>({token:t})),-1),hr=ur(Hn("Optional"),8),dr=ur(Hn("SkipSelf"),4);let pr,fr;function gr(t){var e;return(null===(e=function(){if(void 0===pr&&(pr=null,Ft.trustedTypes))try{pr=Ft.trustedTypes.createPolicy("angular",{createHTML:t=>t,createScript:t=>t,createScriptURL:t=>t})}catch(e){}return pr}())||void 0===e?void 0:e.createHTML(t))||t}function mr(t){var e;return(null===(e=function(){if(void 0===fr&&(fr=null,Ft.trustedTypes))try{fr=Ft.trustedTypes.createPolicy("angular#unsafe-bypass",{createHTML:t=>t,createScript:t=>t,createScriptURL:t=>t})}catch(e){}return fr}())||void 0===e?void 0:e.createHTML(t))||t}class yr{constructor(t){this.changingThisBreaksApplicationSecurity=t}toString(){return`SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`}}function vr(t){return t instanceof yr?t.changingThisBreaksApplicationSecurity:t}class br{constructor(t){this.inertDocumentHelper=t}getInertBodyElement(t){t="<body><remove></remove>"+t;try{const e=(new window.DOMParser).parseFromString(gr(t),"text/html").body;return null===e?this.inertDocumentHelper.getInertBodyElement(t):(e.removeChild(e.firstChild),e)}catch(e){return null}}}class _r{constructor(t){if(this.defaultDoc=t,this.inertDocument=this.defaultDoc.implementation.createHTMLDocument("sanitization-inert"),null==this.inertDocument.body){const t=this.inertDocument.createElement("html");this.inertDocument.appendChild(t);const e=this.inertDocument.createElement("body");t.appendChild(e)}}getInertBodyElement(t){const e=this.inertDocument.createElement("template");if("content"in e)return e.innerHTML=gr(t),e;const n=this.inertDocument.createElement("body");return n.innerHTML=gr(t),this.defaultDoc.documentMode&&this.stripCustomNsAttrs(n),n}stripCustomNsAttrs(t){const e=t.attributes;for(let r=e.length-1;0<r;r--){const n=e.item(r).name;"xmlns:ns1"!==n&&0!==n.indexOf("ns1:")||t.removeAttribute(n)}let n=t.firstChild;for(;n;)n.nodeType===Node.ELEMENT_NODE&&this.stripCustomNsAttrs(n),n=n.nextSibling}}const wr=/^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,Cr=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;function Er(t){return(t=String(t)).match(wr)||t.match(Cr)?t:"unsafe:"+t}function Dr(t){const e={};for(const n of t.split(","))e[n]=!0;return e}function Ar(...t){const e={};for(const n of t)for(const t in n)n.hasOwnProperty(t)&&(e[t]=!0);return e}const Sr=Dr("area,br,col,hr,img,wbr"),xr=Dr("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),kr=Dr("rp,rt"),Tr=Ar(kr,xr),Or=Ar(Sr,Ar(xr,Dr("address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul")),Ar(kr,Dr("a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video")),Tr),Fr=Dr("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),Pr=Dr("srcset"),Ir=Ar(Fr,Pr,Dr("abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"),Dr("aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext")),Rr=Dr("script,style,template");class Mr{constructor(){this.sanitizedSomething=!1,this.buf=[]}sanitizeChildren(t){let e=t.firstChild,n=!0;for(;e;)if(e.nodeType===Node.ELEMENT_NODE?n=this.startElement(e):e.nodeType===Node.TEXT_NODE?this.chars(e.nodeValue):this.sanitizedSomething=!0,n&&e.firstChild)e=e.firstChild;else for(;e;){e.nodeType===Node.ELEMENT_NODE&&this.endElement(e);let t=this.checkClobberedElement(e,e.nextSibling);if(t){e=t;break}e=this.checkClobberedElement(e,e.parentNode)}return this.buf.join("")}startElement(t){const e=t.nodeName.toLowerCase();if(!Or.hasOwnProperty(e))return this.sanitizedSomething=!0,!Rr.hasOwnProperty(e);this.buf.push("<"),this.buf.push(e);const n=t.attributes;for(let s=0;s<n.length;s++){const t=n.item(s),e=t.name,i=e.toLowerCase();if(!Ir.hasOwnProperty(i)){this.sanitizedSomething=!0;continue}let o=t.value;Fr[i]&&(o=Er(o)),Pr[i]&&(r=o,o=(r=String(r)).split(",").map(t=>Er(t.trim())).join(", ")),this.buf.push(" ",e,'="',Nr(o),'"')}var r;return this.buf.push(">"),!0}endElement(t){const e=t.nodeName.toLowerCase();Or.hasOwnProperty(e)&&!Sr.hasOwnProperty(e)&&(this.buf.push("</"),this.buf.push(e),this.buf.push(">"))}chars(t){this.buf.push(Nr(t))}checkClobberedElement(t,e){if(e&&(t.compareDocumentPosition(e)&Node.DOCUMENT_POSITION_CONTAINED_BY)===Node.DOCUMENT_POSITION_CONTAINED_BY)throw new Error(`Failed to sanitize html because the element is clobbered: ${t.outerHTML}`);return e}}const Vr=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,jr=/([^\#-~ |!])/g;function Nr(t){return t.replace(/&/g,"&amp;").replace(Vr,function(t){return"&#"+(1024*(t.charCodeAt(0)-55296)+(t.charCodeAt(1)-56320)+65536)+";"}).replace(jr,function(t){return"&#"+t.charCodeAt(0)+";"}).replace(/</g,"&lt;").replace(/>/g,"&gt;")}let Lr;function Br(t){return"content"in t&&function(t){return t.nodeType===Node.ELEMENT_NODE&&"TEMPLATE"===t.nodeName}(t)?t.content:null}var Ur=function(t){return t[t.NONE=0]="NONE",t[t.HTML=1]="HTML",t[t.STYLE=2]="STYLE",t[t.SCRIPT=3]="SCRIPT",t[t.URL=4]="URL",t[t.RESOURCE_URL=5]="RESOURCE_URL",t}({});function Hr(t){const e=function(){const t=Te();return t&&t[12]}();return e?mr(e.sanitize(Ur.HTML,t)||""):function(t,e){const n=function(t){return t instanceof yr&&t.getTypeName()||null}(t);if(null!=n&&n!==e){if("ResourceURL"===n&&"URL"===e)return!0;throw new Error(`Required a safe ${e}, got a ${n} (see https://g.co/ng/security#xss)`)}return n===e}(t,"HTML")?mr(vr(t)):function(t,e){let n=null;try{Lr=Lr||function(t){const e=new _r(t);return function(){try{return!!(new window.DOMParser).parseFromString(gr(""),"text/html")}catch(t){return!1}}()?new br(e):e}(t);let r=e?String(e):"";n=Lr.getInertBodyElement(r);let s=5,i=r;do{if(0===s)throw new Error("Failed to sanitize html because the input is unstable");s--,r=i,i=n.innerHTML,n=Lr.getInertBodyElement(r)}while(r!==i);return gr((new Mr).sanitizeChildren(Br(n)||n))}finally{if(n){const t=Br(n)||n;for(;t.firstChild;)t.removeChild(t.firstChild)}}}(fe(),lt(t))}function $r(t,e){t.__ngContext__=e}function zr(t){const e=function(t){return t.__ngContext__||null}(t);return e?Array.isArray(e)?e:e.lView:null}function qr(t){return t.ngDebugContext}function Wr(t){return t.ngOriginalError}function Gr(t,...e){t.error(...e)}class Zr{constructor(){this._console=console}handleError(t){const e=this._findOriginalError(t),n=this._findContext(t),r=function(t){return t.ngErrorLogger||Gr}(t);r(this._console,"ERROR",t),e&&r(this._console,"ORIGINAL ERROR",e),n&&r(this._console,"ERROR CONTEXT",n)}_findContext(t){return t?qr(t)?qr(t):this._findContext(Wr(t)):null}_findOriginalError(t){let e=Wr(t);for(;e&&Wr(e);)e=Wr(e);return e}}const Kr=(()=>("undefined"!=typeof requestAnimationFrame&&requestAnimationFrame||setTimeout).bind(Ft))();function Yr(t){return t instanceof Function?t():t}var Qr=function(t){return t[t.Important=1]="Important",t[t.DashCase=2]="DashCase",t}({});function Xr(t,e){return(void 0)(t,e)}function Jr(t){const e=t[3];return ee(e)?e[3]:e}function ts(t){return ns(t[13])}function es(t){return ns(t[4])}function ns(t){for(;null!==t&&!ee(t);)t=t[4];return t}function rs(t,e,n,r,s){if(null!=r){let i,o=!1;ee(r)?i=r:te(r)&&(o=!0,r=r[0]);const a=ye(r);0===t&&null!==n?null==s?hs(e,n,a):cs(e,n,a,s||null,!0):1===t&&null!==n?cs(e,n,a,s||null,!0):2===t?function(t,e,n){const r=ps(t,e);r&&function(t,e,n,r){ge(t)?t.removeChild(e,n,r):e.removeChild(n)}(t,r,e,n)}(e,a,o):3===t&&e.destroyNode(a),null!=i&&function(t,e,n,r,s){const i=n[7];i!==ye(n)&&rs(e,t,r,i,s);for(let o=Jt;o<n.length;o++){const s=n[o];ws(s[1],s,t,e,r,i)}}(e,t,i,n,s)}}function ss(t,e,n){return ge(t)?t.createElement(e,n):null===n?t.createElement(e):t.createElementNS(n,e)}function is(t,e){const n=t[9],r=n.indexOf(e),s=e[3];1024&e[2]&&(e[2]&=-1025,Se(s,-1)),n.splice(r,1)}function os(t,e){if(t.length<=Jt)return;const n=Jt+e,r=t[n];if(r){const i=r[17];null!==i&&i!==t&&is(i,r),e>0&&(t[n-1][4]=r[4]);const o=Kn(t,Jt+e);ws(r[1],s=r,s[11],2,null,null),s[0]=null,s[6]=null;const a=o[19];null!==a&&a.detachView(o[1]),r[3]=null,r[4]=null,r[2]&=-129}var s;return r}function as(t,e){if(!(256&e[2])){const n=e[11];ge(n)&&n.destroyNode&&ws(t,e,n,3,null,null),function(t){let e=t[13];if(!e)return ls(t[1],t);for(;e;){let n=null;if(te(e))n=e[13];else{const t=e[10];t&&(n=t)}if(!n){for(;e&&!e[4]&&e!==t;)te(e)&&ls(e[1],e),e=e[3];null===e&&(e=t),te(e)&&ls(e[1],e),n=e&&e[4]}e=n}}(e)}}function ls(t,e){if(!(256&e[2])){e[2]&=-129,e[2]|=256,function(t,e){let n;if(null!=t&&null!=(n=t.destroyHooks))for(let r=0;r<n.length;r+=2){const t=e[n[r]];if(!(t instanceof hn)){const e=n[r+1];if(Array.isArray(e))for(let n=0;n<e.length;n+=2){const r=t[e[n]],s=e[n+1];try{s.call(r)}finally{}}else try{e.call(t)}finally{}}}}(t,e),function(t,e){const n=t.cleanup,r=e[7];let s=-1;if(null!==n)for(let i=0;i<n.length-1;i+=2)if("string"==typeof n[i]){const t=n[i+1],o="function"==typeof t?t(e):ye(e[t]),a=r[s=n[i+2]],l=n[i+3];"boolean"==typeof l?o.removeEventListener(n[i],a,l):l>=0?r[s=l]():r[s=-l].unsubscribe(),i+=2}else{const t=r[s=n[i+1]];n[i].call(t)}if(null!==r){for(let t=s+1;t<r.length;t++)(0,r[t])();e[7]=null}}(t,e),1===e[1].type&&ge(e[11])&&e[11].destroy();const n=e[17];if(null!==n&&ee(e[3])){n!==e[3]&&is(n,e);const r=e[19];null!==r&&r.detachView(t)}}}function us(t,e,n){return function(t,e,n){let r=e;for(;null!==r&&40&r.type;)r=(e=r).parent;if(null===r)return n[0];if(2&r.flags){const e=t.data[r.directiveStart].encapsulation;if(e===St.None||e===St.Emulated)return null}return be(r,n)}(t,e.parent,n)}function cs(t,e,n,r,s){ge(t)?t.insertBefore(e,n,r,s):e.insertBefore(n,r,s)}function hs(t,e,n){ge(t)?t.appendChild(e,n):e.appendChild(n)}function ds(t,e,n,r,s){null!==r?cs(t,e,n,r,s):hs(t,e,n)}function ps(t,e){return ge(t)?t.parentNode(e):e.parentNode}function fs(t,e,n){return gs(t,e,n)}let gs=function(t,e,n){return 40&t.type?be(t,n):null};function ms(t,e,n,r){const s=us(t,r,e),i=e[11],o=fs(r.parent||e[6],r,e);if(null!=s)if(Array.isArray(n))for(let a=0;a<n.length;a++)ds(i,s,n[a],o,!1);else ds(i,s,n,o,!1)}function ys(t,e){if(null!==e){const n=e.type;if(3&n)return be(e,t);if(4&n)return bs(-1,t[e.index]);if(8&n){const n=e.child;if(null!==n)return ys(t,n);{const n=t[e.index];return ee(n)?bs(-1,n):ye(n)}}if(32&n)return Xr(e,t)()||ye(t[e.index]);{const n=vs(t,e);return null!==n?Array.isArray(n)?n[0]:ys(Jr(t[16]),n):ys(t,e.next)}}return null}function vs(t,e){return null!==e?t[16][6].projection[e.projection]:null}function bs(t,e){const n=Jt+t+1;if(n<e.length){const t=e[n],r=t[1].firstChild;if(null!==r)return ys(t,r)}return e[7]}function _s(t,e,n,r,s,i,o){for(;null!=n;){const a=r[n.index],l=n.type;if(o&&0===e&&(a&&$r(ye(a),r),n.flags|=4),64!=(64&n.flags))if(8&l)_s(t,e,n.child,r,s,i,!1),rs(e,t,s,a,i);else if(32&l){const o=Xr(n,r);let l;for(;l=o();)rs(e,t,s,l,i);rs(e,t,s,a,i)}else 16&l?Cs(t,e,r,n,s,i):rs(e,t,s,a,i);n=o?n.projectionNext:n.next}}function ws(t,e,n,r,s,i){_s(n,r,t.firstChild,e,s,i,!1)}function Cs(t,e,n,r,s,i){const o=n[16],a=o[6].projection[r.projection];if(Array.isArray(a))for(let l=0;l<a.length;l++)rs(e,t,s,a[l],i);else _s(t,e,a,o[3],s,i,!0)}function Es(t,e,n){ge(t)?t.setAttribute(e,"style",n):e.style.cssText=n}function Ds(t,e,n){ge(t)?""===n?t.removeAttribute(e,"class"):t.setAttribute(e,"class",n):e.className=n}function As(t,e,n){let r=t.length;for(;;){const s=t.indexOf(e,n);if(-1===s)return s;if(0===s||t.charCodeAt(s-1)<=32){const n=e.length;if(s+n===r||t.charCodeAt(s+n)<=32)return s}n=s+1}}const Ss="ng-template";function xs(t,e,n){let r=0;for(;r<t.length;){let s=t[r++];if(n&&"class"===s){if(s=t[r],-1!==As(s.toLowerCase(),e,0))return!0}else if(1===s){for(;r<t.length&&"string"==typeof(s=t[r++]);)if(s.toLowerCase()===e)return!0;return!1}}return!1}function ks(t){return 4===t.type&&t.value!==Ss}function Ts(t,e,n){return e===(4!==t.type||n?t.value:Ss)}function Os(t,e,n){let r=4;const s=t.attrs||[],i=function(t){for(let e=0;e<t.length;e++)if(pn(t[e]))return e;return t.length}(s);let o=!1;for(let a=0;a<e.length;a++){const l=e[a];if("number"!=typeof l){if(!o)if(4&r){if(r=2|1&r,""!==l&&!Ts(t,l,n)||""===l&&1===e.length){if(Fs(r))return!1;o=!0}}else{const u=8&r?l:e[++a];if(8&r&&null!==t.attrs){if(!xs(t.attrs,u,n)){if(Fs(r))return!1;o=!0}continue}const c=Ps(8&r?"class":l,s,ks(t),n);if(-1===c){if(Fs(r))return!1;o=!0;continue}if(""!==u){let t;t=c>i?"":s[c+1].toLowerCase();const e=8&r?t:null;if(e&&-1!==As(e,u,0)||2&r&&u!==t){if(Fs(r))return!1;o=!0}}}}else{if(!o&&!Fs(r)&&!Fs(l))return!1;if(o&&Fs(l))continue;o=!1,r=l|1&r}}return Fs(r)||o}function Fs(t){return 0==(1&t)}function Ps(t,e,n,r){if(null===e)return-1;let s=0;if(r||!n){let n=!1;for(;s<e.length;){const r=e[s];if(r===t)return s;if(3===r||6===r)n=!0;else{if(1===r||2===r){let t=e[++s];for(;"string"==typeof t;)t=e[++s];continue}if(4===r)break;if(0===r){s+=4;continue}}s+=n?1:2}return-1}return function(t,e){let n=t.indexOf(4);if(n>-1)for(n++;n<t.length;){const r=t[n];if("number"==typeof r)return-1;if(r===e)return n;n++}return-1}(e,t)}function Is(t,e,n=!1){for(let r=0;r<e.length;r++)if(Os(t,e[r],n))return!0;return!1}function Rs(t,e){t:for(let n=0;n<e.length;n++){const r=e[n];if(t.length===r.length){for(let e=0;e<t.length;e++)if(t[e]!==r[e])continue t;return!0}}return!1}function Ms(t,e){return t?":not("+e.trim()+")":e}function Vs(t){let e=t[0],n=1,r=2,s="",i=!1;for(;n<t.length;){let o=t[n];if("string"==typeof o)if(2&r){const e=t[++n];s+="["+o+(e.length>0?'="'+e+'"':"")+"]"}else 8&r?s+="."+o:4&r&&(s+=" "+o);else""===s||Fs(o)||(e+=Ms(i,s),s=""),r=o,i=i||!Fs(r);n++}return""!==s&&(e+=Ms(i,s)),e}const js={};function Ns(t){Ls(Oe(),Te(),tn()+t,je())}function Ls(t,e,n,r){if(!r)if(3==(3&e[2])){const r=t.preOrderCheckHooks;null!==r&&sn(e,r,n)}else{const r=t.preOrderHooks;null!==r&&on(e,r,0,n)}en(n)}function Bs(t,e){return t<<17|e<<2}function Us(t){return t>>17&32767}function Hs(t){return 2|t}function $s(t){return(131068&t)>>2}function zs(t,e){return-131069&t|e<<2}function qs(t){return 1|t}function Ws(t,e){const n=t.contentQueries;if(null!==n)for(let r=0;r<n.length;r+=2){const s=n[r],i=n[r+1];if(-1!==i){const n=t.data[i];qe(s),n.contentQueries(2,e[i],i)}}}function Gs(t,e,n,r,s,i,o,a,l,u){const c=e.blueprint.slice();return c[0]=s,c[2]=140|r,Ae(c),c[3]=c[15]=t,c[8]=n,c[10]=o||t&&t[10],c[11]=a||t&&t[11],c[12]=l||t&&t[12]||null,c[9]=u||t&&t[9]||null,c[6]=i,c[16]=2==e.type?t[16]:c,c}function Zs(t,e,n,r,s){let i=t.data[e];if(null===i)i=function(t,e,n,r,s){const i=Ie(),o=Me(),a=t.data[e]=function(t,e,n,r,s,i){return{type:n,index:r,insertBeforeIndex:null,injectorIndex:e?e.injectorIndex:-1,directiveStart:-1,directiveEnd:-1,directiveStylingLast:-1,propertyBindings:null,flags:0,providerIndexes:0,value:s,attrs:i,mergedAttrs:null,localNames:null,initialInputs:void 0,inputs:null,outputs:null,tViews:null,next:null,projectionNext:null,child:null,parent:e,projection:null,styles:null,stylesWithoutHost:null,residualStyles:void 0,classes:null,classesWithoutHost:null,residualClasses:void 0,classBindings:0,styleBindings:0}}(0,o?i:i&&i.parent,n,e,r,s);return null===t.firstChild&&(t.firstChild=a),null!==i&&(o?null==i.child&&null!==a.parent&&(i.child=a):null===i.next&&(i.next=a)),a}(t,e,n,r,s),xe.lFrame.inI18n&&(i.flags|=64);else if(64&i.type){i.type=n,i.value=r,i.attrs=s;const t=function(){const t=xe.lFrame,e=t.currentTNode;return t.isParent?e:e.parent}();i.injectorIndex=null===t?-1:t.injectorIndex}return Re(i,!0),i}function Ks(t,e,n,r){if(0===n)return-1;const s=e.length;for(let i=0;i<n;i++)e.push(r),t.blueprint.push(r),t.data.push(null);return s}function Ys(t,e,n){Ze(e);try{const r=t.viewQuery;null!==r&&Ai(1,r,n);const s=t.template;null!==s&&Js(t,e,s,1,n),t.firstCreatePass&&(t.firstCreatePass=!1),t.staticContentQueries&&Ws(t,e),t.staticViewQueries&&Ai(2,t.viewQuery,n);const i=t.components;null!==i&&function(t,e){for(let n=0;n<e.length;n++)_i(t,e[n])}(e,i)}catch(r){throw t.firstCreatePass&&(t.incompleteFirstPass=!0),r}finally{e[2]&=-5,Je()}}function Qs(t,e,n,r){const s=e[2];if(256==(256&s))return;Ze(e);const i=je();try{Ae(e),xe.lFrame.bindingIndex=t.bindingStartIndex,null!==n&&Js(t,e,n,2,r);const o=3==(3&s);if(!i)if(o){const n=t.preOrderCheckHooks;null!==n&&sn(e,n,null)}else{const n=t.preOrderHooks;null!==n&&on(e,n,0,null),an(e,0)}if(function(t){for(let e=ts(t);null!==e;e=es(e)){if(!e[2])continue;const t=e[9];for(let e=0;e<t.length;e++){const n=t[e],r=n[3];0==(1024&n[2])&&Se(r,1),n[2]|=1024}}}(e),function(t){for(let e=ts(t);null!==e;e=es(e))for(let t=Jt;t<e.length;t++){const n=e[t],r=n[1];Ee(n)&&Qs(r,n,r.template,n[8])}}(e),null!==t.contentQueries&&Ws(t,e),!i)if(o){const n=t.contentCheckHooks;null!==n&&sn(e,n)}else{const n=t.contentHooks;null!==n&&on(e,n,1),an(e,1)}!function(t,e){const n=t.hostBindingOpCodes;if(null!==n)try{for(let t=0;t<n.length;t++){const r=n[t];if(r<0)en(~r);else{const s=r,i=n[++t],o=n[++t];He(i,s),o(2,e[s])}}}finally{en(-1)}}(t,e);const a=t.components;null!==a&&function(t,e){for(let n=0;n<e.length;n++)vi(t,e[n])}(e,a);const l=t.viewQuery;if(null!==l&&Ai(2,l,r),!i)if(o){const n=t.viewCheckHooks;null!==n&&sn(e,n)}else{const n=t.viewHooks;null!==n&&on(e,n,2),an(e,2)}!0===t.firstUpdatePass&&(t.firstUpdatePass=!1),i||(e[2]&=-73),1024&e[2]&&(e[2]&=-1025,Se(e[3],-1))}finally{Je()}}function Xs(t,e,n,r){const s=e[10],i=!je(),o=Ce(e);try{i&&!o&&s.begin&&s.begin(),o&&Ys(t,e,r),Qs(t,e,n,r)}finally{i&&!o&&s.end&&s.end()}}function Js(t,e,n,r,s){const i=tn(),o=2&r;try{en(-1),o&&e.length>Xt&&Ls(t,e,Xt,je()),n(r,s)}finally{en(i)}}function ti(t,e,n){if(ne(e)){const r=e.directiveEnd;for(let s=e.directiveStart;s<r;s++){const e=t.data[s];e.contentQueries&&e.contentQueries(1,n[s],s)}}}function ei(t,e,n){ke()&&(function(t,e,n,r){const s=n.directiveStart,i=n.directiveEnd;t.firstCreatePass||En(n,e),$r(r,e);const o=n.initialInputs;for(let a=s;a<i;a++){const r=t.data[a],i=ie(r);i&&fi(e,n,r);const l=Mn(e,t,a,n);$r(l,e),null!==o&&gi(0,a-s,l,r,0,o),i&&(we(n.index,e)[8]=l)}}(t,e,n,be(n,e)),128==(128&n.flags)&&function(t,e,n){const r=n.directiveStart,s=n.directiveEnd,i=n.index,o=xe.lFrame.currentDirectiveIndex;try{en(i);for(let n=r;n<s;n++){const r=t.data[n],s=e[n];$e(n),null===r.hostBindings&&0===r.hostVars&&null===r.hostAttrs||ui(r,s)}}finally{en(-1),$e(o)}}(t,e,n))}function ni(t,e,n=be){const r=e.localNames;if(null!==r){let s=e.index+1;for(let i=0;i<r.length;i+=2){const o=r[i+1],a=-1===o?n(e,t):t[o];t[s++]=a}}}function ri(t){const e=t.tView;return null===e||e.incompleteFirstPass?t.tView=si(1,null,t.template,t.decls,t.vars,t.directiveDefs,t.pipeDefs,t.viewQuery,t.schemas,t.consts):e}function si(t,e,n,r,s,i,o,a,l,u){const c=Xt+r,h=c+s,d=function(t,e){const n=[];for(let r=0;r<e;r++)n.push(r<t?null:js);return n}(c,h),p="function"==typeof u?u():u;return d[1]={type:t,blueprint:d,template:n,queries:null,viewQuery:a,declTNode:e,data:d.slice().fill(null,c),bindingStartIndex:c,expandoStartIndex:h,hostBindingOpCodes:null,firstCreatePass:!0,firstUpdatePass:!0,staticViewQueries:!1,staticContentQueries:!1,preOrderHooks:null,preOrderCheckHooks:null,contentHooks:null,contentCheckHooks:null,viewHooks:null,viewCheckHooks:null,destroyHooks:null,cleanup:null,contentQueries:null,components:null,directiveRegistry:"function"==typeof i?i():i,pipeRegistry:"function"==typeof o?o():o,firstChild:null,schemas:l,consts:p,incompleteFirstPass:!1}}function ii(t,e,n,r){const s=xi(e);null===n?s.push(r):(s.push(n),t.firstCreatePass&&ki(t).push(r,s.length-1))}function oi(t,e,n){for(let r in t)if(t.hasOwnProperty(r)){const s=t[r];(n=null===n?{}:n).hasOwnProperty(r)?n[r].push(e,s):n[r]=[e,s]}return n}function ai(t,e,n,r){let s=!1;if(ke()){const i=function(t,e,n){const r=t.directiveRegistry;let s=null;if(r)for(let i=0;i<r.length;i++){const o=r[i];Is(n,o.selectors,!1)&&(s||(s=[]),xn(En(n,e),t,o.type),ie(o)?(ci(t,n),s.unshift(o)):s.push(o))}return s}(t,e,n),o=null===r?null:{"":-1};if(null!==i){s=!0,di(n,t.data.length,i.length);for(let t=0;t<i.length;t++){const e=i[t];e.providersResolver&&e.providersResolver(e)}let r=!1,a=!1,l=Ks(t,e,i.length,null);for(let s=0;s<i.length;s++){const u=i[s];n.mergedAttrs=gn(n.mergedAttrs,u.hostAttrs),pi(t,n,e,l,u),hi(l,u,o),null!==u.contentQueries&&(n.flags|=8),null===u.hostBindings&&null===u.hostAttrs&&0===u.hostVars||(n.flags|=128);const c=u.type.prototype;!r&&(c.ngOnChanges||c.ngOnInit||c.ngDoCheck)&&((t.preOrderHooks||(t.preOrderHooks=[])).push(n.index),r=!0),a||!c.ngOnChanges&&!c.ngDoCheck||((t.preOrderCheckHooks||(t.preOrderCheckHooks=[])).push(n.index),a=!0),l++}!function(t,e){const n=e.directiveEnd,r=t.data,s=e.attrs,i=[];let o=null,a=null;for(let l=e.directiveStart;l<n;l++){const t=r[l],n=t.inputs,u=null===s||ks(e)?null:mi(n,s);i.push(u),o=oi(n,l,o),a=oi(t.outputs,l,a)}null!==o&&(o.hasOwnProperty("class")&&(e.flags|=16),o.hasOwnProperty("style")&&(e.flags|=32)),e.initialInputs=i,e.inputs=o,e.outputs=a}(t,n)}o&&function(t,e,n){if(e){const r=t.localNames=[];for(let t=0;t<e.length;t+=2){const s=n[e[t+1]];if(null==s)throw new at("301",`Export of name '${e[t+1]}' not found!`);r.push(e[t],s)}}}(n,r,o)}return n.mergedAttrs=gn(n.mergedAttrs,n.attrs),s}function li(t,e,n,r,s,i){const o=i.hostBindings;if(o){let n=t.hostBindingOpCodes;null===n&&(n=t.hostBindingOpCodes=[]);const i=~e.index;(function(t){let e=t.length;for(;e>0;){const n=t[--e];if("number"==typeof n&&n<0)return n}return 0})(n)!=i&&n.push(i),n.push(r,s,o)}}function ui(t,e){null!==t.hostBindings&&t.hostBindings(1,e)}function ci(t,e){e.flags|=2,(t.components||(t.components=[])).push(e.index)}function hi(t,e,n){if(n){if(e.exportAs)for(let r=0;r<e.exportAs.length;r++)n[e.exportAs[r]]=t;ie(e)&&(n[""]=t)}}function di(t,e,n){t.flags|=1,t.directiveStart=e,t.directiveEnd=e+n,t.providerIndexes=e}function pi(t,e,n,r,s){t.data[r]=s;const i=s.factory||(s.factory=oe(s.type)),o=new hn(i,ie(s),null);t.blueprint[r]=o,n[r]=o,li(t,e,0,r,Ks(t,n,s.hostVars,js),s)}function fi(t,e,n){const r=be(e,t),s=ri(n),i=t[10],o=wi(t,Gs(t,s,null,n.onPush?64:16,r,e,i,i.createRenderer(r,n),null,null));t[e.index]=o}function gi(t,e,n,r,s,i){const o=i[e];if(null!==o){const t=r.setInput;for(let e=0;e<o.length;){const s=o[e++],i=o[e++],a=o[e++];null!==t?r.setInput(n,a,s,i):n[i]=a}}}function mi(t,e){let n=null,r=0;for(;r<e.length;){const s=e[r];if(0!==s)if(5!==s){if("number"==typeof s)break;t.hasOwnProperty(s)&&(null===n&&(n=[]),n.push(s,t[s],e[r+1])),r+=2}else r+=2;else r+=4}return n}function yi(t,e,n,r){return new Array(t,!0,!1,e,null,0,r,n,null,null)}function vi(t,e){const n=we(e,t);if(Ee(n)){const t=n[1];80&n[2]?Qs(t,n,t.template,n[8]):n[5]>0&&bi(n)}}function bi(t){for(let n=ts(t);null!==n;n=es(n))for(let t=Jt;t<n.length;t++){const e=n[t];if(1024&e[2]){const t=e[1];Qs(t,e,t.template,e[8])}else e[5]>0&&bi(e)}const e=t[1].components;if(null!==e)for(let n=0;n<e.length;n++){const r=we(e[n],t);Ee(r)&&r[5]>0&&bi(r)}}function _i(t,e){const n=we(e,t),r=n[1];!function(t,e){for(let n=e.length;n<t.blueprint.length;n++)e.push(t.blueprint[n])}(r,n),Ys(r,n,n[8])}function wi(t,e){return t[13]?t[14][4]=e:t[13]=e,t[14]=e,e}function Ci(t){for(;t;){t[2]|=64;const e=Jr(t);if(0!=(512&t[2])&&!e)return t;t=e}return null}function Ei(t,e,n){const r=e[10];r.begin&&r.begin();try{Qs(t,e,t.template,n)}catch(s){throw Ti(e,s),s}finally{r.end&&r.end()}}function Di(t){!function(t){for(let e=0;e<t.components.length;e++){const n=t.components[e],r=zr(n),s=r[1];Xs(s,r,s.template,n)}}(t[8])}function Ai(t,e,n){qe(0),e(t,n)}const Si=(()=>Promise.resolve(null))();function xi(t){return t[7]||(t[7]=[])}function ki(t){return t.cleanup||(t.cleanup=[])}function Ti(t,e){const n=t[9],r=n?n.get(Zr,null):null;r&&r.handleError(e)}function Oi(t,e,n,r,s){for(let i=0;i<n.length;){const o=n[i++],a=n[i++],l=e[o],u=t.data[o];null!==u.setInput?u.setInput(l,s,r,a):l[a]=s}}function Fi(t,e,n){let r=n?t.styles:null,s=n?t.classes:null,i=0;if(null!==e)for(let o=0;o<e.length;o++){const t=e[o];"number"==typeof t?i=t:1==i?s=nt(s,t):2==i&&(r=nt(r,t+": "+e[++o]+";"))}n?t.styles=r:t.stylesWithoutHost=r,n?t.classes=s:t.classesWithoutHost=s}const Pi=new $n("INJECTOR",-1);class Ii{get(t,e=tr){if(e===tr){const e=new Error(`NullInjectorError: No provider for ${et(t)}!`);throw e.name="NullInjectorError",e}return e}}const Ri=new $n("Set Injector scope."),Mi={},Vi={};let ji;function Ni(){return void 0===ji&&(ji=new Ii),ji}function Li(t,e=null,n=null,r){return new Bi(t,n,e||Ni(),r)}class Bi{constructor(t,e,n,r=null){this.parent=n,this.records=new Map,this.injectorDefTypes=new Set,this.onDestroy=new Set,this._destroyed=!1;const s=[];e&&Gn(e,n=>this.processProvider(n,t,e)),Gn([t],t=>this.processInjectorType(t,[],s)),this.records.set(Pi,$i(void 0,this));const i=this.records.get(Ri);this.scope=null!=i?i.value:null,this.source=r||("object"==typeof t?null:et(t))}get destroyed(){return this._destroyed}destroy(){this.assertNotDestroyed(),this._destroyed=!0;try{this.onDestroy.forEach(t=>t.ngOnDestroy())}finally{this.records.clear(),this.onDestroy.clear(),this.injectorDefTypes.clear()}}get(t,e=tr,n=_t.Default){this.assertNotDestroyed();const r=ir(this);try{if(!(n&_t.SkipSelf)){let e=this.records.get(t);if(void 0===e){const n=("function"==typeof(s=t)||"object"==typeof s&&s instanceof $n)&&pt(t);e=n&&this.injectableDefInScope(n)?$i(Ui(t),Mi):null,this.records.set(t,e)}if(null!=e)return this.hydrate(t,e)}return(n&_t.Self?Ni():this.parent).get(t,e=n&_t.Optional&&e===tr?null:e)}catch(i){if("NullInjectorError"===i.name){if((i.ngTempTokenPath=i.ngTempTokenPath||[]).unshift(et(t)),r)throw i;return function(t,e,n,r){const s=t.ngTempTokenPath;throw e[nr]&&s.unshift(e[nr]),t.message=function(t,e,n,r=null){t=t&&"\n"===t.charAt(0)&&"\u0275"==t.charAt(1)?t.substr(2):t;let s=et(e);if(Array.isArray(e))s=e.map(et).join(" -> ");else if("object"==typeof e){let t=[];for(let n in e)if(e.hasOwnProperty(n)){let r=e[n];t.push(n+":"+("string"==typeof r?JSON.stringify(r):et(r)))}s=`{${t.join(", ")}}`}return`${n}${r?"("+r+")":""}[${s}]: ${t.replace(er,"\n  ")}`}("\n"+t.message,s,n,r),t.ngTokenPath=s,t.ngTempTokenPath=null,t}(i,t,"R3InjectorError",this.source)}throw i}finally{ir(r)}var s}_resolveInjectorDefTypes(){this.injectorDefTypes.forEach(t=>this.get(t))}toString(){const t=[];return this.records.forEach((e,n)=>t.push(et(n))),`R3Injector[${t.join(", ")}]`}assertNotDestroyed(){if(this._destroyed)throw new Error("Injector has already been destroyed.")}processInjectorType(t,e,n){if(!(t=it(t)))return!1;let r=gt(t);const s=null==r&&t.ngModule||void 0,i=void 0===s?t:s,o=-1!==n.indexOf(i);if(void 0!==s&&(r=gt(s)),null==r)return!1;if(null!=r.imports&&!o){let t;n.push(i);try{Gn(r.imports,r=>{this.processInjectorType(r,e,n)&&(void 0===t&&(t=[]),t.push(r))})}finally{}if(void 0!==t)for(let e=0;e<t.length;e++){const{ngModule:n,providers:r}=t[e];Gn(r,t=>this.processProvider(t,n,r||It))}}this.injectorDefTypes.add(i);const a=oe(i)||(()=>new i);this.records.set(i,$i(a,Mi));const l=r.providers;if(null!=l&&!o){const e=t;Gn(l,t=>this.processProvider(t,e,l))}return void 0!==s&&void 0!==t.providers}processProvider(t,e,n){let r=qi(t=it(t))?t:it(t&&t.provide);const s=function(t,e,n){return zi(t)?$i(void 0,t.useValue):$i(Hi(t),Mi)}(t);if(qi(t)||!0!==t.multi)this.records.get(r);else{let e=this.records.get(r);e||(e=$i(void 0,Mi,!0),e.factory=()=>lr(e.multi),this.records.set(r,e)),r=t,e.multi.push(t)}this.records.set(r,s)}hydrate(t,e){var n;return e.value===Mi&&(e.value=Vi,e.value=e.factory()),"object"==typeof e.value&&e.value&&null!==(n=e.value)&&"object"==typeof n&&"function"==typeof n.ngOnDestroy&&this.onDestroy.add(e.value),e.value}injectableDefInScope(t){if(!t.providedIn)return!1;const e=it(t.providedIn);return"string"==typeof e?"any"===e||e===this.scope:this.injectorDefTypes.has(e)}}function Ui(t){const e=pt(t),n=null!==e?e.factory:oe(t);if(null!==n)return n;if(t instanceof $n)throw new Error(`Token ${et(t)} is missing a \u0275prov definition.`);if(t instanceof Function)return function(t){const e=t.length;if(e>0){const n=Yn(e,"?");throw new Error(`Can't resolve all parameters for ${et(t)}: (${n.join(", ")}).`)}const n=function(t){const e=t&&(t[mt]||t[vt]);if(e){const n=function(t){if(t.hasOwnProperty("name"))return t.name;const e=(""+t).match(/^function\s*([^\s(]+)/);return null===e?"":e[1]}(t);return console.warn(`DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${n}" class.`),e}return null}(t);return null!==n?()=>n.factory(t):()=>new t}(t);throw new Error("unreachable")}function Hi(t,e,n){let r;if(qi(t)){const e=it(t);return oe(e)||Ui(e)}if(zi(t))r=()=>it(t.useValue);else if((s=t)&&s.useFactory)r=()=>t.useFactory(...lr(t.deps||[]));else if(function(t){return!(!t||!t.useExisting)}(t))r=()=>ar(it(t.useExisting));else{const e=it(t&&(t.useClass||t.provide));if(!function(t){return!!t.deps}(t))return oe(e)||Ui(e);r=()=>new e(...lr(t.deps))}var s;return r}function $i(t,e,n=!1){return{factory:t,value:e,multi:n?[]:void 0}}function zi(t){return null!==t&&"object"==typeof t&&rr in t}function qi(t){return"function"==typeof t}const Wi=function(t,e,n){return function(t,e=null,n=null,r){const s=Li(t,e,n,r);return s._resolveInjectorDefTypes(),s}({name:n},e,t,n)};let Gi=(()=>{class t{static create(t,e){return Array.isArray(t)?Wi(t,e,""):Wi(t.providers,t.parent,t.name||"")}}return t.THROW_IF_NOT_FOUND=tr,t.NULL=new Ii,t.\u0275prov=ht({token:t,providedIn:"any",factory:()=>ar(Pi)}),t.__NG_ELEMENT_ID__=-1,t})();function Zi(t,e){rn(zr(t)[1],Pe())}function Ki(t){let e=Object.getPrototypeOf(t.type.prototype).constructor,n=!0;const r=[t];for(;e;){let s;if(ie(t))s=e.\u0275cmp||e.\u0275dir;else{if(e.\u0275cmp)throw new Error("Directives cannot inherit Components");s=e.\u0275dir}if(s){if(n){r.push(s);const e=t;e.inputs=Yi(t.inputs),e.declaredInputs=Yi(t.declaredInputs),e.outputs=Yi(t.outputs);const n=s.hostBindings;n&&Ji(t,n);const i=s.viewQuery,o=s.contentQueries;if(i&&Qi(t,i),o&&Xi(t,o),tt(t.inputs,s.inputs),tt(t.declaredInputs,s.declaredInputs),tt(t.outputs,s.outputs),ie(s)&&s.data.animation){const e=t.data;e.animation=(e.animation||[]).concat(s.data.animation)}}const e=s.features;if(e)for(let r=0;r<e.length;r++){const s=e[r];s&&s.ngInherit&&s(t),s===Ki&&(n=!1)}}e=Object.getPrototypeOf(e)}!function(t){let e=0,n=null;for(let r=t.length-1;r>=0;r--){const s=t[r];s.hostVars=e+=s.hostVars,s.hostAttrs=gn(s.hostAttrs,n=gn(n,s.hostAttrs))}}(r)}function Yi(t){return t===Pt?{}:t===It?[]:t}function Qi(t,e){const n=t.viewQuery;t.viewQuery=n?(t,r)=>{e(t,r),n(t,r)}:e}function Xi(t,e){const n=t.contentQueries;t.contentQueries=n?(t,r,s)=>{e(t,r,s),n(t,r,s)}:e}function Ji(t,e){const n=t.hostBindings;t.hostBindings=n?(t,r)=>{e(t,r),n(t,r)}:e}let to=null;function eo(){if(!to){const t=Ft.Symbol;if(t&&t.iterator)to=t.iterator;else{const t=Object.getOwnPropertyNames(Map.prototype);for(let e=0;e<t.length;++e){const n=t[e];"entries"!==n&&"size"!==n&&Map.prototype[n]===Map.prototype.entries&&(to=n)}}}return to}function no(t){return!!ro(t)&&(Array.isArray(t)||!(t instanceof Map)&&eo()in t)}function ro(t){return null!==t&&("function"==typeof t||"object"==typeof t)}function so(t,e,n){return t[e]=n}function io(t,e,n){return!Object.is(t[e],n)&&(t[e]=n,!0)}function oo(t,e,n,r){const s=io(t,e,n);return io(t,e+1,r)||s}function ao(t,e,n,r){const s=Te();return io(s,Be(),e)&&(Oe(),function(t,e,n,r,s,i){const o=be(t,e);!function(t,e,n,r,s,i,o){if(null==i)ge(t)?t.removeAttribute(e,s,n):e.removeAttribute(s);else{const a=null==o?lt(i):o(i,r||"",s);ge(t)?t.setAttribute(e,s,a,n):n?e.setAttributeNS(n,s,a):e.setAttribute(s,a)}}(e[11],o,i,t.value,n,r,s)}(nn(),s,t,e,n,r)),ao}function lo(t,e,n,r){return io(t,Be(),n)?e+lt(n)+r:js}function uo(t,e,n,r,s,i,o,a){const l=Te(),u=Oe(),c=t+Xt,h=u.firstCreatePass?function(t,e,n,r,s,i,o,a,l){const u=e.consts,c=Zs(e,t,4,o||null,De(u,a));ai(e,n,c,De(u,l)),rn(e,c);const h=c.tViews=si(2,c,r,s,i,e.directiveRegistry,e.pipeRegistry,null,e.schemas,u);return null!==e.queries&&(e.queries.template(e,c),h.queries=e.queries.embeddedTView(c)),c}(c,u,l,e,n,r,s,i,o):u.data[c];Re(h,!1);const d=l[11].createComment("");ms(u,l,d,h),$r(d,l),wi(l,l[c]=yi(d,l,d,h)),se(h)&&ei(u,l,h),null!=o&&ni(l,h,a)}function co(t){return function(t,e){return t[e]}(xe.lFrame.contextLView,Xt+t)}function ho(t,e=_t.Default){const n=Te();return null===n?ar(t,e):On(Pe(),n,it(t),e)}function po(t,e,n){const r=Te();return io(r,Be(),e)&&function(t,e,n,r,s,i,o,a){const l=be(e,n);let u,c=e.inputs;var h;null!=c&&(u=c[r])?(Oi(t,n,u,r,s),re(e)&&function(t,e){const n=we(e,t);16&n[2]||(n[2]|=64)}(n,e.index)):3&e.type&&(r="class"===(h=r)?"className":"for"===h?"htmlFor":"formaction"===h?"formAction":"innerHtml"===h?"innerHTML":"readonly"===h?"readOnly":"tabindex"===h?"tabIndex":h,s=null!=o?o(s,e.value||"",r):s,ge(i)?i.setProperty(l,r,s):fn(r)||(l.setProperty?l.setProperty(r,s):l[r]=s))}(Oe(),nn(),r,t,e,r[11],n),po}function fo(t,e,n,r,s){const i=s?"class":"style";Oi(t,n,e.inputs[i],i,r)}function go(t,e,n,r){const s=Te(),i=Oe(),o=Xt+t,a=s[11],l=s[o]=ss(a,e,xe.lFrame.currentNamespace),u=i.firstCreatePass?function(t,e,n,r,s,i,o){const a=e.consts,l=Zs(e,t,2,s,De(a,i));return ai(e,n,l,De(a,o)),null!==l.attrs&&Fi(l,l.attrs,!1),null!==l.mergedAttrs&&Fi(l,l.mergedAttrs,!0),null!==e.queries&&e.queries.elementStart(e,l),l}(o,i,s,0,e,n,r):i.data[o];Re(u,!0);const c=u.mergedAttrs;null!==c&&dn(a,l,c);const h=u.classes;null!==h&&Ds(a,l,h);const d=u.styles;null!==d&&Es(a,l,d),64!=(64&u.flags)&&ms(i,s,l,u),0===xe.lFrame.elementDepthCount&&$r(l,s),xe.lFrame.elementDepthCount++,se(u)&&(ei(i,s,u),ti(i,u,s)),null!==r&&ni(s,u)}function mo(){let t=Pe();Me()?Ve():(t=t.parent,Re(t,!1));const e=t;xe.lFrame.elementDepthCount--;const n=Oe();n.firstCreatePass&&(rn(n,t),ne(t)&&n.queries.elementEnd(t)),null!=e.classesWithoutHost&&function(t){return 0!=(16&t.flags)}(e)&&fo(n,e,Te(),e.classesWithoutHost,!0),null!=e.stylesWithoutHost&&function(t){return 0!=(32&t.flags)}(e)&&fo(n,e,Te(),e.stylesWithoutHost,!1)}function yo(t,e,n,r){go(t,e,n,r),mo()}function vo(t,e,n){(function(t,e,n){const r=Te(),s=Oe(),i=t+Xt,o=s.firstCreatePass?function(t,e,n,r,s){const i=e.consts,o=De(i,r),a=Zs(e,t,8,"ng-container",o);return null!==o&&Fi(a,o,!0),ai(e,n,a,De(i,s)),null!==e.queries&&e.queries.elementStart(e,a),a}(i,s,r,e,n):s.data[i];Re(o,!0);const a=r[i]=r[11].createComment("");ms(s,r,a,o),$r(a,r),se(o)&&(ei(s,r,o),ti(s,o,r)),null!=n&&ni(r,o)})(t,e,n),function(){let t=Pe();const e=Oe();Me()?Ve():(t=t.parent,Re(t,!1)),e.firstCreatePass&&(rn(e,t),ne(t)&&e.queries.elementEnd(t))}()}function bo(){return Te()}function _o(t){return!!t&&"function"==typeof t.then}const wo=function(t){return!!t&&"function"==typeof t.subscribe};function Co(t,e,n,r){const s=Te(),i=Oe(),o=Pe();return function(t,e,n,r,s,i,o,a){const l=se(r),u=t.firstCreatePass&&ki(t),c=xi(e);let h=!0;if(3&r.type||a){const d=be(r,e),p=a?a(d):d,f=c.length,g=a?t=>a(ye(t[r.index])):r.index;if(ge(n)){let o=null;if(!a&&l&&(o=function(t,e,n,r){const s=t.cleanup;if(null!=s)for(let i=0;i<s.length-1;i+=2){const t=s[i];if(t===n&&s[i+1]===r){const t=e[7],n=s[i+2];return t.length>n?t[n]:null}"string"==typeof t&&(i+=2)}return null}(t,e,s,r.index)),null!==o)(o.__ngLastListenerFn__||o).__ngNextListenerFn__=i,o.__ngLastListenerFn__=i,h=!1;else{i=Do(r,e,0,i,!1);const t=n.listen(p,s,i);c.push(i,t),u&&u.push(s,g,f,f+1)}}else i=Do(r,e,0,i,!0),p.addEventListener(s,i,o),c.push(i),u&&u.push(s,g,f,o)}else i=Do(r,e,0,i,!1);const d=r.outputs;let p;if(h&&null!==d&&(p=d[s])){const t=p.length;if(t)for(let n=0;n<t;n+=2){const t=e[p[n]][p[n+1]].subscribe(i),o=c.length;c.push(i,t),u&&u.push(s,r.index,o,-(o+1))}}}(i,s,s[11],o,t,e,!!n,r),Co}function Eo(t,e,n,r){try{return!1!==n(r)}catch(s){return Ti(t,s),!1}}function Do(t,e,n,r,s){return function n(i){if(i===Function)return r;const o=2&t.flags?we(t.index,e):e;0==(32&e[2])&&Ci(o);let a=Eo(e,0,r,i),l=n.__ngNextListenerFn__;for(;l;)a=Eo(e,0,l,i)&&a,l=l.__ngNextListenerFn__;return s&&!1===a&&(i.preventDefault(),i.returnValue=!1),a}}function Ao(t=1){return function(t){return(xe.lFrame.contextLView=function(t,e){for(;t>0;)e=e[15],t--;return e}(t,xe.lFrame.contextLView))[8]}(t)}function So(t,e){let n=null;const r=function(t){const e=t.attrs;if(null!=e){const t=e.indexOf(5);if(0==(1&t))return e[t+1]}return null}(t);for(let s=0;s<e.length;s++){const i=e[s];if("*"!==i){if(null===r?Is(t,i,!0):Rs(r,i))return s}else n=s}return n}function xo(t){const e=Te()[16][6];if(!e.projection){const n=e.projection=Yn(t?t.length:1,null),r=n.slice();let s=e.child;for(;null!==s;){const e=t?So(s,t):0;null!==e&&(r[e]?r[e].projectionNext=s:n[e]=s,r[e]=s),s=s.next}}}function ko(t,e=0,n){const r=Te(),s=Oe(),i=Zs(s,Xt+t,16,null,n||null);null===i.projection&&(i.projection=e),Ve(),64!=(64&i.flags)&&function(t,e,n){Cs(e[11],0,e,n,us(t,n,e),fs(n.parent||e[6],n,e))}(s,r,i)}function To(t,e,n,r,s){const i=t[n+1],o=null===e;let a=r?Us(i):$s(i),l=!1;for(;0!==a&&(!1===l||o);){const n=t[a+1];Oo(t[a],e)&&(l=!0,t[a+1]=r?qs(n):Hs(n)),a=r?Us(n):$s(n)}l&&(t[n+1]=r?Hs(i):qs(i))}function Oo(t,e){return null===t||null==e||(Array.isArray(t)?t[1]:t)===e||!(!Array.isArray(t)||"string"!=typeof e)&&Jn(t,e)>=0}const Fo={textEnd:0,key:0,keyEnd:0,value:0,valueEnd:0};function Po(t){return t.substring(Fo.key,Fo.keyEnd)}function Io(t,e){const n=Fo.textEnd;return n===e?-1:(e=Fo.keyEnd=function(t,e,n){for(;e<n&&t.charCodeAt(e)>32;)e++;return e}(t,Fo.key=e,n),Ro(t,e,n))}function Ro(t,e,n){for(;e<n&&t.charCodeAt(e)<=32;)e++;return e}function Mo(t,e){return function(t,e,n,r){const s=Te(),i=Oe(),o=Ue(2);i.firstUpdatePass&&Lo(i,t,o,true),e!==js&&io(s,o,e)&&Ho(i,i.data[tn()],s,s[11],t,s[o+1]=function(t,e){return null==t||"object"==typeof t&&(t=et(vr(t))),t}(e),true,o)}(t,e),Mo}function Vo(t,e){for(let n=function(t){return function(t){Fo.key=0,Fo.keyEnd=0,Fo.value=0,Fo.valueEnd=0,Fo.textEnd=t.length}(t),Io(t,Ro(t,0,Fo.textEnd))}(e);n>=0;n=Io(e,n))Qn(t,Po(e),!0)}function jo(t,e,n,r){const s=Oe(),i=Ue(2);s.firstUpdatePass&&Lo(s,null,i,r);const o=Te();if(n!==js&&io(o,i,n)){const a=s.data[tn()];if(qo(a,r)&&!No(s,i)){let t=r?a.classesWithoutHost:a.stylesWithoutHost;null!==t&&(n=nt(t,n||"")),fo(s,a,o,n,r)}else!function(t,e,n,r,s,i,o,a){s===js&&(s=It);let l=0,u=0,c=0<s.length?s[0]:null,h=0<i.length?i[0]:null;for(;null!==c||null!==h;){const d=l<s.length?s[l+1]:void 0,p=u<i.length?i[u+1]:void 0;let f,g=null;c===h?(l+=2,u+=2,d!==p&&(g=h,f=p)):null===h||null!==c&&c<h?(l+=2,g=c):(u+=2,g=h,f=p),null!==g&&Ho(t,e,n,r,g,f,o,a),c=l<s.length?s[l]:null,h=u<i.length?i[u]:null}}(s,a,o,o[11],o[i+1],o[i+1]=function(t,e,n){if(null==n||""===n)return It;const r=[],s=vr(n);if(Array.isArray(s))for(let i=0;i<s.length;i++)t(r,s[i],!0);else if("object"==typeof s)for(const i in s)s.hasOwnProperty(i)&&t(r,i,s[i]);else"string"==typeof s&&e(r,s);return r}(t,e,n),r,i)}}function No(t,e){return e>=t.expandoStartIndex}function Lo(t,e,n,r){const s=t.data;if(null===s[n+1]){const i=s[tn()],o=No(t,n);qo(i,r)&&null===e&&!o&&(e=!1),e=function(t,e,n,r){const s=function(t){const e=xe.lFrame.currentDirectiveIndex;return-1===e?null:t[e]}(t);let i=r?e.residualClasses:e.residualStyles;if(null===s)0===(r?e.classBindings:e.styleBindings)&&(n=Uo(n=Bo(null,t,e,n,r),e.attrs,r),i=null);else{const o=e.directiveStylingLast;if(-1===o||t[o]!==s)if(n=Bo(s,t,e,n,r),null===i){let n=function(t,e,n){const r=n?e.classBindings:e.styleBindings;if(0!==$s(r))return t[Us(r)]}(t,e,r);void 0!==n&&Array.isArray(n)&&(n=Bo(null,t,e,n[1],r),n=Uo(n,e.attrs,r),function(t,e,n,r){t[Us(n?e.classBindings:e.styleBindings)]=r}(t,e,r,n))}else i=function(t,e,n){let r;const s=e.directiveEnd;for(let i=1+e.directiveStylingLast;i<s;i++)r=Uo(r,t[i].hostAttrs,n);return Uo(r,e.attrs,n)}(t,e,r)}return void 0!==i&&(r?e.residualClasses=i:e.residualStyles=i),n}(s,i,e,r),function(t,e,n,r,s,i){let o=i?e.classBindings:e.styleBindings,a=Us(o),l=$s(o);t[r]=n;let u,c=!1;if(Array.isArray(n)){const t=n;u=t[1],(null===u||Jn(t,u)>0)&&(c=!0)}else u=n;if(s)if(0!==l){const e=Us(t[a+1]);t[r+1]=Bs(e,a),0!==e&&(t[e+1]=zs(t[e+1],r)),t[a+1]=131071&t[a+1]|r<<17}else t[r+1]=Bs(a,0),0!==a&&(t[a+1]=zs(t[a+1],r)),a=r;else t[r+1]=Bs(l,0),0===a?a=r:t[l+1]=zs(t[l+1],r),l=r;c&&(t[r+1]=Hs(t[r+1])),To(t,u,r,!0),To(t,u,r,!1),function(t,e,n,r,s){const i=s?t.residualClasses:t.residualStyles;null!=i&&"string"==typeof e&&Jn(i,e)>=0&&(n[r+1]=qs(n[r+1]))}(e,u,t,r,i),o=Bs(a,l),i?e.classBindings=o:e.styleBindings=o}(s,i,e,n,o,r)}}function Bo(t,e,n,r,s){let i=null;const o=n.directiveEnd;let a=n.directiveStylingLast;for(-1===a?a=n.directiveStart:a++;a<o&&(i=e[a],r=Uo(r,i.hostAttrs,s),i!==t);)a++;return null!==t&&(n.directiveStylingLast=a),r}function Uo(t,e,n){const r=n?1:2;let s=-1;if(null!==e)for(let i=0;i<e.length;i++){const o=e[i];"number"==typeof o?s=o:s===r&&(Array.isArray(t)||(t=void 0===t?[]:["",t]),Qn(t,o,!!n||e[++i]))}return void 0===t?null:t}function Ho(t,e,n,r,s,i,o,a){if(!(3&e.type))return;const l=t.data,u=l[a+1];zo(1==(1&u)?$o(l,e,n,s,$s(u),o):void 0)||(zo(i)||2==(2&u)&&(i=$o(l,null,n,s,a,o)),function(t,e,n,r,s){const i=ge(t);if(e)s?i?t.addClass(n,r):n.classList.add(r):i?t.removeClass(n,r):n.classList.remove(r);else{let e=-1===r.indexOf("-")?void 0:Qr.DashCase;if(null==s)i?t.removeStyle(n,r,e):n.style.removeProperty(r);else{const o="string"==typeof s&&s.endsWith("!important");o&&(s=s.slice(0,-10),e|=Qr.Important),i?t.setStyle(n,r,s,e):n.style.setProperty(r,s,o?"important":"")}}}(r,o,ve(tn(),n),s,i))}function $o(t,e,n,r,s,i){const o=null===e;let a;for(;s>0;){const e=t[s],i=Array.isArray(e),l=i?e[1]:e,u=null===l;let c=n[s+1];c===js&&(c=u?It:void 0);let h=u?Xn(c,r):l===r?c:void 0;if(i&&!zo(h)&&(h=Xn(e,r)),zo(h)&&(a=h,o))return a;const d=t[s+1];s=o?Us(d):$s(d)}if(null!==e){let t=i?e.residualClasses:e.residualStyles;null!=t&&(a=Xn(t,r))}return a}function zo(t){return void 0!==t}function qo(t,e){return 0!=(t.flags&(e?16:32))}function Wo(t,e=""){const n=Te(),r=Oe(),s=t+Xt,i=r.firstCreatePass?Zs(r,s,1,e,null):r.data[s],o=n[s]=function(t,e){return ge(t)?t.createText(e):t.createTextNode(e)}(n[11],e);ms(r,n,o,i),Re(i,!1)}function Go(t){return Zo("",t,""),Go}function Zo(t,e,n){const r=Te(),s=lo(r,t,e,n);return s!==js&&function(t,e,n){const r=ve(e,t);!function(t,e,n){ge(t)?t.setValue(e,n):e.textContent=n}(t[11],r,n)}(r,tn(),s),Zo}function Ko(t,e,n){jo(Qn,Vo,lo(Te(),t,e,n),!0)}const Yo=void 0;var Qo=["en",[["a","p"],["AM","PM"],Yo],[["AM","PM"],Yo,Yo],[["S","M","T","W","T","F","S"],["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],["Su","Mo","Tu","We","Th","Fr","Sa"]],Yo,[["J","F","M","A","M","J","J","A","S","O","N","D"],["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],["January","February","March","April","May","June","July","August","September","October","November","December"]],Yo,[["B","A"],["BC","AD"],["Before Christ","Anno Domini"]],0,[6,0],["M/d/yy","MMM d, y","MMMM d, y","EEEE, MMMM d, y"],["h:mm a","h:mm:ss a","h:mm:ss a z","h:mm:ss a zzzz"],["{1}, {0}",Yo,"{1} 'at' {0}",Yo],[".",",",";","%","+","-","E","\xd7","\u2030","\u221e","NaN",":"],["#,##0.###","#,##0%","\xa4#,##0.00","#E0"],"USD","$","US Dollar",{},"ltr",function(t){let e=Math.floor(Math.abs(t)),n=t.toString().replace(/^[^.]*\.?/,"").length;return 1===e&&0===n?1:5}];let Xo={};function Jo(t){const e=function(t){return t.toLowerCase().replace(/_/g,"-")}(t);let n=ta(e);if(n)return n;const r=e.split("-")[0];if(n=ta(r),n)return n;if("en"===r)return Qo;throw new Error(`Missing locale data for the locale "${t}".`)}function ta(t){return t in Xo||(Xo[t]=Ft.ng&&Ft.ng.common&&Ft.ng.common.locales&&Ft.ng.common.locales[t]),Xo[t]}var ea=function(t){return t[t.LocaleId=0]="LocaleId",t[t.DayPeriodsFormat=1]="DayPeriodsFormat",t[t.DayPeriodsStandalone=2]="DayPeriodsStandalone",t[t.DaysFormat=3]="DaysFormat",t[t.DaysStandalone=4]="DaysStandalone",t[t.MonthsFormat=5]="MonthsFormat",t[t.MonthsStandalone=6]="MonthsStandalone",t[t.Eras=7]="Eras",t[t.FirstDayOfWeek=8]="FirstDayOfWeek",t[t.WeekendRange=9]="WeekendRange",t[t.DateFormat=10]="DateFormat",t[t.TimeFormat=11]="TimeFormat",t[t.DateTimeFormat=12]="DateTimeFormat",t[t.NumberSymbols=13]="NumberSymbols",t[t.NumberFormats=14]="NumberFormats",t[t.CurrencyCode=15]="CurrencyCode",t[t.CurrencySymbol=16]="CurrencySymbol",t[t.CurrencyName=17]="CurrencyName",t[t.Currencies=18]="Currencies",t[t.Directionality=19]="Directionality",t[t.PluralCase=20]="PluralCase",t[t.ExtraData=21]="ExtraData",t}({});const na="en-US";let ra=na;function sa(t){var e,n;n="Expected localeId to be defined",null==(e=t)&&function(t,e,n,r){throw new Error(`ASSERTION ERROR: ${t} [Expected=> null != ${e} <=Actual]`)}(n,e),"string"==typeof t&&(ra=t.toLowerCase().replace(/_/g,"-"))}function ia(t,e,n,r,s){if(t=it(t),Array.isArray(t))for(let i=0;i<t.length;i++)ia(t[i],e,n,r,s);else{const i=Oe(),o=Te();let a=qi(t)?t:it(t.provide),l=Hi(t);const u=Pe(),c=1048575&u.providerIndexes,h=u.directiveStart,d=u.providerIndexes>>20;if(qi(t)||!t.multi){const r=new hn(l,s,ho),p=la(a,e,s?c:c+d,h);-1===p?(xn(En(u,o),i,a),oa(i,t,e.length),e.push(a),u.directiveStart++,u.directiveEnd++,s&&(u.providerIndexes+=1048576),n.push(r),o.push(r)):(n[p]=r,o[p]=r)}else{const p=la(a,e,c+d,h),f=la(a,e,c,c+d),g=p>=0&&n[p],m=f>=0&&n[f];if(s&&!m||!s&&!g){xn(En(u,o),i,a);const c=function(t,e,n,r,s){const i=new hn(t,n,ho);return i.multi=[],i.index=e,i.componentProviders=0,aa(i,s,r&&!n),i}(s?ca:ua,n.length,s,r,l);!s&&m&&(n[f].providerFactory=c),oa(i,t,e.length,0),e.push(a),u.directiveStart++,u.directiveEnd++,s&&(u.providerIndexes+=1048576),n.push(c),o.push(c)}else oa(i,t,p>-1?p:f,aa(n[s?f:p],l,!s&&r));!s&&r&&m&&n[f].componentProviders++}}}function oa(t,e,n,r){const s=qi(e);if(s||e.useClass){const i=(e.useClass||e).prototype.ngOnDestroy;if(i){const o=t.destroyHooks||(t.destroyHooks=[]);if(!s&&e.multi){const t=o.indexOf(n);-1===t?o.push(n,[r,i]):o[t+1].push(r,i)}else o.push(n,i)}}}function aa(t,e,n){return n&&t.componentProviders++,t.multi.push(e)-1}function la(t,e,n,r){for(let s=n;s<r;s++)if(e[s]===t)return s;return-1}function ua(t,e,n,r){return ha(this.multi,[])}function ca(t,e,n,r){const s=this.multi;let i;if(this.providerFactory){const t=this.providerFactory.componentProviders,e=Mn(n,n[1],this.providerFactory.index,r);i=e.slice(0,t),ha(s,i);for(let n=t;n<e.length;n++)i.push(e[n])}else i=[],ha(s,i);return i}function ha(t,e){for(let n=0;n<t.length;n++)e.push((0,t[n])());return e}function da(t,e=[]){return n=>{n.providersResolver=(n,r)=>function(t,e,n){const r=Oe();if(r.firstCreatePass){const s=ie(t);ia(n,r.data,r.blueprint,s,!0),ia(e,r.data,r.blueprint,s,!1)}}(n,r?r(t):t,e)}}class pa{}class fa{resolveComponentFactory(t){throw function(t){const e=Error(`No component factory found for ${et(t)}. Did you add it to @NgModule.entryComponents?`);return e.ngComponent=t,e}(t)}}let ga=(()=>{class t{}return t.NULL=new fa,t})();function ma(...t){}function ya(t,e){return new ba(be(t,e))}const va=function(){return ya(Pe(),Te())};let ba=(()=>{class t{constructor(t){this.nativeElement=t}}return t.__NG_ELEMENT_ID__=va,t})();function _a(t){return t instanceof ba?t.nativeElement:t}class wa{}let Ca=(()=>{class t{}return t.__NG_ELEMENT_ID__=()=>Ea(),t})();const Ea=function(){const t=Te(),e=we(Pe().index,t);return function(t){return t[11]}(te(e)?e:t)};let Da=(()=>{class t{}return t.\u0275prov=ht({token:t,providedIn:"root",factory:()=>null}),t})();class Aa{constructor(t){this.full=t,this.major=t.split(".")[0],this.minor=t.split(".")[1],this.patch=t.split(".").slice(2).join(".")}}const Sa=new Aa("12.0.5");class xa{constructor(){}supports(t){return no(t)}create(t){return new Ta(t)}}const ka=(t,e)=>e;class Ta{constructor(t){this.length=0,this._linkedRecords=null,this._unlinkedRecords=null,this._previousItHead=null,this._itHead=null,this._itTail=null,this._additionsHead=null,this._additionsTail=null,this._movesHead=null,this._movesTail=null,this._removalsHead=null,this._removalsTail=null,this._identityChangesHead=null,this._identityChangesTail=null,this._trackByFn=t||ka}forEachItem(t){let e;for(e=this._itHead;null!==e;e=e._next)t(e)}forEachOperation(t){let e=this._itHead,n=this._removalsHead,r=0,s=null;for(;e||n;){const i=!n||e&&e.currentIndex<Ia(n,r,s)?e:n,o=Ia(i,r,s),a=i.currentIndex;if(i===n)r--,n=n._nextRemoved;else if(e=e._next,null==i.previousIndex)r++;else{s||(s=[]);const t=o-r,e=a-r;if(t!=e){for(let n=0;n<t;n++){const r=n<s.length?s[n]:s[n]=0,i=r+n;e<=i&&i<t&&(s[n]=r+1)}s[i.previousIndex]=e-t}}o!==a&&t(i,o,a)}}forEachPreviousItem(t){let e;for(e=this._previousItHead;null!==e;e=e._nextPrevious)t(e)}forEachAddedItem(t){let e;for(e=this._additionsHead;null!==e;e=e._nextAdded)t(e)}forEachMovedItem(t){let e;for(e=this._movesHead;null!==e;e=e._nextMoved)t(e)}forEachRemovedItem(t){let e;for(e=this._removalsHead;null!==e;e=e._nextRemoved)t(e)}forEachIdentityChange(t){let e;for(e=this._identityChangesHead;null!==e;e=e._nextIdentityChange)t(e)}diff(t){if(null==t&&(t=[]),!no(t))throw new Error(`Error trying to diff '${et(t)}'. Only arrays and iterables are allowed`);return this.check(t)?this:null}onDestroy(){}check(t){this._reset();let e,n,r,s=this._itHead,i=!1;if(Array.isArray(t)){this.length=t.length;for(let e=0;e<this.length;e++)n=t[e],r=this._trackByFn(e,n),null!==s&&Object.is(s.trackById,r)?(i&&(s=this._verifyReinsertion(s,n,r,e)),Object.is(s.item,n)||this._addIdentityChange(s,n)):(s=this._mismatch(s,n,r,e),i=!0),s=s._next}else e=0,function(t,e){if(Array.isArray(t))for(let n=0;n<t.length;n++)e(t[n]);else{const n=t[eo()]();let r;for(;!(r=n.next()).done;)e(r.value)}}(t,t=>{r=this._trackByFn(e,t),null!==s&&Object.is(s.trackById,r)?(i&&(s=this._verifyReinsertion(s,t,r,e)),Object.is(s.item,t)||this._addIdentityChange(s,t)):(s=this._mismatch(s,t,r,e),i=!0),s=s._next,e++}),this.length=e;return this._truncate(s),this.collection=t,this.isDirty}get isDirty(){return null!==this._additionsHead||null!==this._movesHead||null!==this._removalsHead||null!==this._identityChangesHead}_reset(){if(this.isDirty){let t;for(t=this._previousItHead=this._itHead;null!==t;t=t._next)t._nextPrevious=t._next;for(t=this._additionsHead;null!==t;t=t._nextAdded)t.previousIndex=t.currentIndex;for(this._additionsHead=this._additionsTail=null,t=this._movesHead;null!==t;t=t._nextMoved)t.previousIndex=t.currentIndex;this._movesHead=this._movesTail=null,this._removalsHead=this._removalsTail=null,this._identityChangesHead=this._identityChangesTail=null}}_mismatch(t,e,n,r){let s;return null===t?s=this._itTail:(s=t._prev,this._remove(t)),null!==(t=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null))?(Object.is(t.item,e)||this._addIdentityChange(t,e),this._reinsertAfter(t,s,r)):null!==(t=null===this._linkedRecords?null:this._linkedRecords.get(n,r))?(Object.is(t.item,e)||this._addIdentityChange(t,e),this._moveAfter(t,s,r)):t=this._addAfter(new Oa(e,n),s,r),t}_verifyReinsertion(t,e,n,r){let s=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null);return null!==s?t=this._reinsertAfter(s,t._prev,r):t.currentIndex!=r&&(t.currentIndex=r,this._addToMoves(t,r)),t}_truncate(t){for(;null!==t;){const e=t._next;this._addToRemovals(this._unlink(t)),t=e}null!==this._unlinkedRecords&&this._unlinkedRecords.clear(),null!==this._additionsTail&&(this._additionsTail._nextAdded=null),null!==this._movesTail&&(this._movesTail._nextMoved=null),null!==this._itTail&&(this._itTail._next=null),null!==this._removalsTail&&(this._removalsTail._nextRemoved=null),null!==this._identityChangesTail&&(this._identityChangesTail._nextIdentityChange=null)}_reinsertAfter(t,e,n){null!==this._unlinkedRecords&&this._unlinkedRecords.remove(t);const r=t._prevRemoved,s=t._nextRemoved;return null===r?this._removalsHead=s:r._nextRemoved=s,null===s?this._removalsTail=r:s._prevRemoved=r,this._insertAfter(t,e,n),this._addToMoves(t,n),t}_moveAfter(t,e,n){return this._unlink(t),this._insertAfter(t,e,n),this._addToMoves(t,n),t}_addAfter(t,e,n){return this._insertAfter(t,e,n),this._additionsTail=null===this._additionsTail?this._additionsHead=t:this._additionsTail._nextAdded=t,t}_insertAfter(t,e,n){const r=null===e?this._itHead:e._next;return t._next=r,t._prev=e,null===r?this._itTail=t:r._prev=t,null===e?this._itHead=t:e._next=t,null===this._linkedRecords&&(this._linkedRecords=new Pa),this._linkedRecords.put(t),t.currentIndex=n,t}_remove(t){return this._addToRemovals(this._unlink(t))}_unlink(t){null!==this._linkedRecords&&this._linkedRecords.remove(t);const e=t._prev,n=t._next;return null===e?this._itHead=n:e._next=n,null===n?this._itTail=e:n._prev=e,t}_addToMoves(t,e){return t.previousIndex===e||(this._movesTail=null===this._movesTail?this._movesHead=t:this._movesTail._nextMoved=t),t}_addToRemovals(t){return null===this._unlinkedRecords&&(this._unlinkedRecords=new Pa),this._unlinkedRecords.put(t),t.currentIndex=null,t._nextRemoved=null,null===this._removalsTail?(this._removalsTail=this._removalsHead=t,t._prevRemoved=null):(t._prevRemoved=this._removalsTail,this._removalsTail=this._removalsTail._nextRemoved=t),t}_addIdentityChange(t,e){return t.item=e,this._identityChangesTail=null===this._identityChangesTail?this._identityChangesHead=t:this._identityChangesTail._nextIdentityChange=t,t}}class Oa{constructor(t,e){this.item=t,this.trackById=e,this.currentIndex=null,this.previousIndex=null,this._nextPrevious=null,this._prev=null,this._next=null,this._prevDup=null,this._nextDup=null,this._prevRemoved=null,this._nextRemoved=null,this._nextAdded=null,this._nextMoved=null,this._nextIdentityChange=null}}class Fa{constructor(){this._head=null,this._tail=null}add(t){null===this._head?(this._head=this._tail=t,t._nextDup=null,t._prevDup=null):(this._tail._nextDup=t,t._prevDup=this._tail,t._nextDup=null,this._tail=t)}get(t,e){let n;for(n=this._head;null!==n;n=n._nextDup)if((null===e||e<=n.currentIndex)&&Object.is(n.trackById,t))return n;return null}remove(t){const e=t._prevDup,n=t._nextDup;return null===e?this._head=n:e._nextDup=n,null===n?this._tail=e:n._prevDup=e,null===this._head}}class Pa{constructor(){this.map=new Map}put(t){const e=t.trackById;let n=this.map.get(e);n||(n=new Fa,this.map.set(e,n)),n.add(t)}get(t,e){const n=this.map.get(t);return n?n.get(t,e):null}remove(t){const e=t.trackById;return this.map.get(e).remove(t)&&this.map.delete(e),t}get isEmpty(){return 0===this.map.size}clear(){this.map.clear()}}function Ia(t,e,n){const r=t.previousIndex;if(null===r)return r;let s=0;return n&&r<n.length&&(s=n[r]),r+e+s}class Ra{constructor(){}supports(t){return t instanceof Map||ro(t)}create(){return new Ma}}class Ma{constructor(){this._records=new Map,this._mapHead=null,this._appendAfter=null,this._previousMapHead=null,this._changesHead=null,this._changesTail=null,this._additionsHead=null,this._additionsTail=null,this._removalsHead=null,this._removalsTail=null}get isDirty(){return null!==this._additionsHead||null!==this._changesHead||null!==this._removalsHead}forEachItem(t){let e;for(e=this._mapHead;null!==e;e=e._next)t(e)}forEachPreviousItem(t){let e;for(e=this._previousMapHead;null!==e;e=e._nextPrevious)t(e)}forEachChangedItem(t){let e;for(e=this._changesHead;null!==e;e=e._nextChanged)t(e)}forEachAddedItem(t){let e;for(e=this._additionsHead;null!==e;e=e._nextAdded)t(e)}forEachRemovedItem(t){let e;for(e=this._removalsHead;null!==e;e=e._nextRemoved)t(e)}diff(t){if(t){if(!(t instanceof Map||ro(t)))throw new Error(`Error trying to diff '${et(t)}'. Only maps and objects are allowed`)}else t=new Map;return this.check(t)?this:null}onDestroy(){}check(t){this._reset();let e=this._mapHead;if(this._appendAfter=null,this._forEach(t,(t,n)=>{if(e&&e.key===n)this._maybeAddToChanges(e,t),this._appendAfter=e,e=e._next;else{const r=this._getOrCreateRecordForKey(n,t);e=this._insertBeforeOrAppend(e,r)}}),e){e._prev&&(e._prev._next=null),this._removalsHead=e;for(let t=e;null!==t;t=t._nextRemoved)t===this._mapHead&&(this._mapHead=null),this._records.delete(t.key),t._nextRemoved=t._next,t.previousValue=t.currentValue,t.currentValue=null,t._prev=null,t._next=null}return this._changesTail&&(this._changesTail._nextChanged=null),this._additionsTail&&(this._additionsTail._nextAdded=null),this.isDirty}_insertBeforeOrAppend(t,e){if(t){const n=t._prev;return e._next=t,e._prev=n,t._prev=e,n&&(n._next=e),t===this._mapHead&&(this._mapHead=e),this._appendAfter=t,t}return this._appendAfter?(this._appendAfter._next=e,e._prev=this._appendAfter):this._mapHead=e,this._appendAfter=e,null}_getOrCreateRecordForKey(t,e){if(this._records.has(t)){const n=this._records.get(t);this._maybeAddToChanges(n,e);const r=n._prev,s=n._next;return r&&(r._next=s),s&&(s._prev=r),n._next=null,n._prev=null,n}const n=new Va(t);return this._records.set(t,n),n.currentValue=e,this._addToAdditions(n),n}_reset(){if(this.isDirty){let t;for(this._previousMapHead=this._mapHead,t=this._previousMapHead;null!==t;t=t._next)t._nextPrevious=t._next;for(t=this._changesHead;null!==t;t=t._nextChanged)t.previousValue=t.currentValue;for(t=this._additionsHead;null!=t;t=t._nextAdded)t.previousValue=t.currentValue;this._changesHead=this._changesTail=null,this._additionsHead=this._additionsTail=null,this._removalsHead=null}}_maybeAddToChanges(t,e){Object.is(e,t.currentValue)||(t.previousValue=t.currentValue,t.currentValue=e,this._addToChanges(t))}_addToAdditions(t){null===this._additionsHead?this._additionsHead=this._additionsTail=t:(this._additionsTail._nextAdded=t,this._additionsTail=t)}_addToChanges(t){null===this._changesHead?this._changesHead=this._changesTail=t:(this._changesTail._nextChanged=t,this._changesTail=t)}_forEach(t,e){t instanceof Map?t.forEach(e):Object.keys(t).forEach(n=>e(t[n],n))}}class Va{constructor(t){this.key=t,this.previousValue=null,this.currentValue=null,this._nextPrevious=null,this._next=null,this._prev=null,this._nextAdded=null,this._nextRemoved=null,this._nextChanged=null}}function ja(){return new Na([new xa])}let Na=(()=>{class t{constructor(t){this.factories=t}static create(e,n){if(null!=n){const t=n.factories.slice();e=e.concat(t)}return new t(e)}static extend(e){return{provide:t,useFactory:n=>t.create(e,n||ja()),deps:[[t,new dr,new hr]]}}find(t){const e=this.factories.find(e=>e.supports(t));if(null!=e)return e;throw new Error(`Cannot find a differ supporting object '${t}' of type '${n=t,n.name||typeof n}'`);var n}}return t.\u0275prov=ht({token:t,providedIn:"root",factory:ja}),t})();function La(){return new Ba([new Ra])}let Ba=(()=>{class t{constructor(t){this.factories=t}static create(e,n){if(n){const t=n.factories.slice();e=e.concat(t)}return new t(e)}static extend(e){return{provide:t,useFactory:n=>t.create(e,n||La()),deps:[[t,new dr,new hr]]}}find(t){const e=this.factories.find(e=>e.supports(t));if(e)return e;throw new Error(`Cannot find a differ supporting object '${t}'`)}}return t.\u0275prov=ht({token:t,providedIn:"root",factory:La}),t})();function Ua(t,e,n,r,s=!1){for(;null!==n;){const i=e[n.index];if(null!==i&&r.push(ye(i)),ee(i))for(let t=Jt;t<i.length;t++){const e=i[t],n=e[1].firstChild;null!==n&&Ua(e[1],e,n,r)}const o=n.type;if(8&o)Ua(t,e,n.child,r);else if(32&o){const t=Xr(n,e);let s;for(;s=t();)r.push(s)}else if(16&o){const t=vs(e,n);if(Array.isArray(t))r.push(...t);else{const n=Jr(e[16]);Ua(n[1],n,t,r,!0)}}n=s?n.projectionNext:n.next}return r}class Ha{constructor(t,e){this._lView=t,this._cdRefInjectingView=e,this._appRef=null,this._attachedToViewContainer=!1}get rootNodes(){const t=this._lView,e=t[1];return Ua(e,t,e.firstChild,[])}get context(){return this._lView[8]}set context(t){this._lView[8]=t}get destroyed(){return 256==(256&this._lView[2])}destroy(){if(this._appRef)this._appRef.detachView(this);else if(this._attachedToViewContainer){const t=this._lView[3];if(ee(t)){const e=t[8],n=e?e.indexOf(this):-1;n>-1&&(os(t,n),Kn(e,n))}this._attachedToViewContainer=!1}as(this._lView[1],this._lView)}onDestroy(t){ii(this._lView[1],this._lView,null,t)}markForCheck(){Ci(this._cdRefInjectingView||this._lView)}detach(){this._lView[2]&=-129}reattach(){this._lView[2]|=128}detectChanges(){Ei(this._lView[1],this._lView,this.context)}checkNoChanges(){!function(t,e,n){Ne(!0);try{Ei(t,e,n)}finally{Ne(!1)}}(this._lView[1],this._lView,this.context)}attachToViewContainerRef(){if(this._appRef)throw new Error("This view is already attached directly to the ApplicationRef!");this._attachedToViewContainer=!0}detachFromAppRef(){var t;this._appRef=null,ws(this._lView[1],t=this._lView,t[11],2,null,null)}attachToAppRef(t){if(this._attachedToViewContainer)throw new Error("This view is already attached to a ViewContainer!");this._appRef=t}}class $a extends Ha{constructor(t){super(t),this._view=t}detectChanges(){Di(this._view)}checkNoChanges(){!function(t){Ne(!0);try{Di(t)}finally{Ne(!1)}}(this._view)}get context(){return null}}const za=function(t){return function(t,e,n){if(re(t)&&!n){const n=we(t.index,e);return new Ha(n,n)}return 47&t.type?new Ha(e[16],e):null}(Pe(),Te(),16==(16&t))};let qa=(()=>{class t{}return t.__NG_ELEMENT_ID__=za,t})();const Wa=[new Ra],Ga=new Na([new xa]),Za=new Ba(Wa),Ka=function(){return Ja(Pe(),Te())};let Ya=(()=>{class t{}return t.__NG_ELEMENT_ID__=Ka,t})();const Qa=Ya,Xa=class extends Qa{constructor(t,e,n){super(),this._declarationLView=t,this._declarationTContainer=e,this.elementRef=n}createEmbeddedView(t){const e=this._declarationTContainer.tViews,n=Gs(this._declarationLView,e,t,16,null,e.declTNode,null,null,null,null);n[17]=this._declarationLView[this._declarationTContainer.index];const r=this._declarationLView[19];return null!==r&&(n[19]=r.createEmbeddedView(e)),Ys(e,n,t),new Ha(n)}};function Ja(t,e){return 4&t.type?new Xa(e,t,ya(t,e)):null}class tl{}class el{}const nl=function(){return ll(Pe(),Te())};let rl=(()=>{class t{}return t.__NG_ELEMENT_ID__=nl,t})();const sl=rl,il=class extends sl{constructor(t,e,n){super(),this._lContainer=t,this._hostTNode=e,this._hostLView=n}get element(){return ya(this._hostTNode,this._hostLView)}get injector(){return new Nn(this._hostTNode,this._hostLView)}get parentInjector(){const t=Sn(this._hostTNode,this._hostLView);if(yn(t)){const e=bn(t,this._hostLView),n=vn(t);return new Nn(e[1].data[n+8],e)}return new Nn(null,this._hostLView)}clear(){for(;this.length>0;)this.remove(this.length-1)}get(t){const e=ol(this._lContainer);return null!==e&&e[t]||null}get length(){return this._lContainer.length-Jt}createEmbeddedView(t,e,n){const r=t.createEmbeddedView(e||{});return this.insert(r,n),r}createComponent(t,e,n,r,s){const i=n||this.parentInjector;if(!s&&null==t.ngModule&&i){const t=i.get(tl,null);t&&(s=t)}const o=t.create(i,r,void 0,s);return this.insert(o.hostView,e),o}insert(t,e){const n=t._lView,r=n[1];if(ee(n[3])){const e=this.indexOf(t);if(-1!==e)this.detach(e);else{const e=n[3],r=new il(e,e[6],e[3]);r.detach(r.indexOf(t))}}const s=this._adjustIndex(e),i=this._lContainer;!function(t,e,n,r){const s=Jt+r,i=n.length;r>0&&(n[s-1][4]=e),r<i-Jt?(e[4]=n[s],Zn(n,Jt+r,e)):(n.push(e),e[4]=null),e[3]=n;const o=e[17];null!==o&&n!==o&&function(t,e){const n=t[9];e[16]!==e[3][3][16]&&(t[2]=!0),null===n?t[9]=[e]:n.push(e)}(o,e);const a=e[19];null!==a&&a.insertView(t),e[2]|=128}(r,n,i,s);const o=bs(s,i),a=n[11],l=ps(a,i[7]);return null!==l&&function(t,e,n,r,s,i){r[0]=s,r[6]=e,ws(t,r,n,1,s,i)}(r,i[6],a,n,l,o),t.attachToViewContainerRef(),Zn(al(i),s,t),t}move(t,e){return this.insert(t,e)}indexOf(t){const e=ol(this._lContainer);return null!==e?e.indexOf(t):-1}remove(t){const e=this._adjustIndex(t,-1),n=os(this._lContainer,e);n&&(Kn(al(this._lContainer),e),as(n[1],n))}detach(t){const e=this._adjustIndex(t,-1),n=os(this._lContainer,e);return n&&null!=Kn(al(this._lContainer),e)?new Ha(n):null}_adjustIndex(t,e=0){return null==t?this.length+e:t}};function ol(t){return t[8]}function al(t){return t[8]||(t[8]=[])}function ll(t,e){let n;const r=e[t.index];if(ee(r))n=r;else{let s;if(8&t.type)s=ye(r);else{const n=e[11];s=n.createComment("");const r=be(t,e);cs(n,ps(n,r),s,function(t,e){return ge(t)?t.nextSibling(e):e.nextSibling}(n,r),!1)}e[t.index]=n=yi(r,e,s,t),wi(e,n)}return new il(n,t,e)}const ul={};class cl extends ga{constructor(t){super(),this.ngModule=t}resolveComponentFactory(t){const e=Yt(t);return new pl(e,this.ngModule)}}function hl(t){const e=[];for(let n in t)t.hasOwnProperty(n)&&e.push({propName:t[n],templateName:n});return e}const dl=new $n("SCHEDULER_TOKEN",{providedIn:"root",factory:()=>Kr});class pl extends pa{constructor(t,e){super(),this.componentDef=t,this.ngModule=e,this.componentType=t.type,this.selector=t.selectors.map(Vs).join(","),this.ngContentSelectors=t.ngContentSelectors?t.ngContentSelectors:[],this.isBoundToModule=!!e}get inputs(){return hl(this.componentDef.inputs)}get outputs(){return hl(this.componentDef.outputs)}create(t,e,n,r){const s=(r=r||this.ngModule)?function(t,e){return{get:(n,r,s)=>{const i=t.get(n,ul,s);return i!==ul||r===ul?i:e.get(n,r,s)}}}(t,r.injector):t,i=s.get(wa,me),o=s.get(Da,null),a=i.createRenderer(null,this.componentDef),l=this.componentDef.selectors[0][0]||"div",u=n?function(t,e,n){if(ge(t))return t.selectRootElement(e,n===St.ShadowDom);let r="string"==typeof e?t.querySelector(e):e;return r.textContent="",r}(a,n,this.componentDef.encapsulation):ss(i.createRenderer(null,this.componentDef),l,function(t){const e=t.toLowerCase();return"svg"===e?"http://www.w3.org/2000/svg":"math"===e?"http://www.w3.org/1998/MathML/":null}(l)),c=this.componentDef.onPush?576:528,h={components:[],scheduler:Kr,clean:Si,playerHandler:null,flags:0},d=si(0,null,null,1,0,null,null,null,null,null),p=Gs(null,d,h,c,null,null,i,a,o,s);let f,g;Ze(p);try{const t=function(t,e,n,r,s,i){const o=n[1];n[20]=t;const a=Zs(o,20,2,"#host",null),l=a.mergedAttrs=e.hostAttrs;null!==l&&(Fi(a,l,!0),null!==t&&(dn(s,t,l),null!==a.classes&&Ds(s,t,a.classes),null!==a.styles&&Es(s,t,a.styles)));const u=r.createRenderer(t,e),c=Gs(n,ri(e),null,e.onPush?64:16,n[20],a,r,u,null,null);return o.firstCreatePass&&(xn(En(a,n),o,e.type),ci(o,a),di(a,n.length,1)),wi(n,c),n[20]=c}(u,this.componentDef,p,i,a);if(u)if(n)dn(a,u,["ng-version",Sa.full]);else{const{attrs:t,classes:e}=function(t){const e=[],n=[];let r=1,s=2;for(;r<t.length;){let i=t[r];if("string"==typeof i)2===s?""!==i&&e.push(i,t[++r]):8===s&&n.push(i);else{if(!Fs(s))break;s=i}r++}return{attrs:e,classes:n}}(this.componentDef.selectors[0]);t&&dn(a,u,t),e&&e.length>0&&Ds(a,u,e.join(" "))}if(g=_e(d,Xt),void 0!==e){const t=g.projection=[];for(let n=0;n<this.ngContentSelectors.length;n++){const r=e[n];t.push(null!=r?Array.from(r):null)}}f=function(t,e,n,r,s){const i=n[1],o=function(t,e,n){const r=Pe();t.firstCreatePass&&(n.providersResolver&&n.providersResolver(n),pi(t,r,e,Ks(t,e,1,null),n));const s=Mn(e,t,r.directiveStart,r);$r(s,e);const i=be(r,e);return i&&$r(i,e),s}(i,n,e);if(r.components.push(o),t[8]=o,s&&s.forEach(t=>t(o,e)),e.contentQueries){const t=Pe();e.contentQueries(1,o,t.directiveStart)}const a=Pe();return!i.firstCreatePass||null===e.hostBindings&&null===e.hostAttrs||(en(a.index),li(n[1],a,0,a.directiveStart,a.directiveEnd,e),ui(e,o)),o}(t,this.componentDef,p,h,[Zi]),Ys(d,p,null)}finally{Je()}return new fl(this.componentType,f,ya(g,p),p,g)}}class fl extends class{}{constructor(t,e,n,r,s){super(),this.location=n,this._rootLView=r,this._tNode=s,this.instance=e,this.hostView=this.changeDetectorRef=new $a(r),this.componentType=t}get injector(){return new Nn(this._tNode,this._rootLView)}destroy(){this.hostView.destroy()}onDestroy(t){this.hostView.onDestroy(t)}}const gl=new Map;class ml extends tl{constructor(t,e){super(),this._parent=e,this._bootstrapComponents=[],this.injector=this,this.destroyCbs=[],this.componentFactoryResolver=new cl(this);const n=Qt(t),r=t[Nt]||null;r&&sa(r),this._bootstrapComponents=Yr(n.bootstrap),this._r3Injector=Li(t,e,[{provide:tl,useValue:this},{provide:ga,useValue:this.componentFactoryResolver}],et(t)),this._r3Injector._resolveInjectorDefTypes(),this.instance=this.get(t)}get(t,e=Gi.THROW_IF_NOT_FOUND,n=_t.Default){return t===Gi||t===tl||t===Pi?this:this._r3Injector.get(t,e,n)}destroy(){const t=this._r3Injector;!t.destroyed&&t.destroy(),this.destroyCbs.forEach(t=>t()),this.destroyCbs=null}onDestroy(t){this.destroyCbs.push(t)}}class yl extends el{constructor(t){super(),this.moduleType=t,null!==Qt(t)&&function(t){const e=new Set;!function t(n){const r=Qt(n,!0),s=r.id;null!==s&&(function(t,e,n){if(e&&e!==n)throw new Error(`Duplicate module registered for ${t} - ${et(e)} vs ${et(e.name)}`)}(s,gl.get(s),n),gl.set(s,n));const i=Yr(r.imports);for(const o of i)e.has(o)||(e.add(o),t(o))}(t)}(t)}create(t){return new ml(this.moduleType,t)}}function vl(t,e,n){const r=Le()+t,s=Te();return s[r]===js?so(s,r,n?e.call(n):e()):function(t,e){return t[e]}(s,r)}function bl(t,e,n,r){return function(t,e,n,r,s,i){const o=e+n;return io(t,o,s)?so(t,o+1,i?r.call(i,s):r(s)):wl(t,o+1)}(Te(),Le(),t,e,n,r)}function _l(t,e,n,r,s){return function(t,e,n,r,s,i,o){const a=e+n;return oo(t,a,s,i)?so(t,a+2,o?r.call(o,s,i):r(s,i)):wl(t,a+2)}(Te(),Le(),t,e,n,r,s)}function wl(t,e){const n=t[e];return n===js?void 0:n}function Cl(t){return e=>{setTimeout(t,void 0,e)}}const El=class extends E{constructor(t=!1){super(),this.__isAsync=t}emit(t){super.next(t)}subscribe(t,e,n){var r,s,i;let o=t,a=e||(()=>null),l=n;if(t&&"object"==typeof t){const e=t;o=null===(r=e.next)||void 0===r?void 0:r.bind(e),a=null===(s=e.error)||void 0===s?void 0:s.bind(e),l=null===(i=e.complete)||void 0===i?void 0:i.bind(e)}this.__isAsync&&(a=Cl(a),o&&(o=Cl(o)),l&&(l=Cl(l)));const u=super.subscribe({next:o,error:a,complete:l});return t instanceof h&&t.add(u),u}};function Dl(){return this._results[eo()]()}class Al{constructor(t=!1){this._emitDistinctChangesOnly=t,this.dirty=!0,this._results=[],this._changesDetected=!1,this._changes=null,this.length=0,this.first=void 0,this.last=void 0;const e=eo(),n=Al.prototype;n[e]||(n[e]=Dl)}get changes(){return this._changes||(this._changes=new El)}get(t){return this._results[t]}map(t){return this._results.map(t)}filter(t){return this._results.filter(t)}find(t){return this._results.find(t)}reduce(t,e){return this._results.reduce(t,e)}forEach(t){this._results.forEach(t)}some(t){return this._results.some(t)}toArray(){return this._results.slice()}toString(){return this._results.toString()}reset(t,e){const n=this;n.dirty=!1;const r=Wn(t);(this._changesDetected=!function(t,e,n){if(t.length!==e.length)return!1;for(let r=0;r<t.length;r++){let s=t[r],i=e[r];if(n&&(s=n(s),i=n(i)),i!==s)return!1}return!0}(n._results,r,e))&&(n._results=r,n.length=r.length,n.last=r[this.length-1],n.first=r[0])}notifyOnChanges(){!this._changes||!this._changesDetected&&this._emitDistinctChangesOnly||this._changes.emit(this)}setDirty(){this.dirty=!0}destroy(){this.changes.complete(),this.changes.unsubscribe()}}class Sl{constructor(t){this.queryList=t,this.matches=null}clone(){return new Sl(this.queryList)}setDirty(){this.queryList.setDirty()}}class xl{constructor(t=[]){this.queries=t}createEmbeddedView(t){const e=t.queries;if(null!==e){const n=null!==t.contentQueries?t.contentQueries[0]:e.length,r=[];for(let t=0;t<n;t++){const n=e.getByIndex(t);r.push(this.queries[n.indexInDeclarationView].clone())}return new xl(r)}return null}insertView(t){this.dirtyQueriesWithMatches(t)}detachView(t){this.dirtyQueriesWithMatches(t)}dirtyQueriesWithMatches(t){for(let e=0;e<this.queries.length;e++)null!==Ul(t,e).matches&&this.queries[e].setDirty()}}class kl{constructor(t,e,n=null){this.predicate=t,this.flags=e,this.read=n}}class Tl{constructor(t=[]){this.queries=t}elementStart(t,e){for(let n=0;n<this.queries.length;n++)this.queries[n].elementStart(t,e)}elementEnd(t){for(let e=0;e<this.queries.length;e++)this.queries[e].elementEnd(t)}embeddedTView(t){let e=null;for(let n=0;n<this.length;n++){const r=null!==e?e.length:0,s=this.getByIndex(n).embeddedTView(t,r);s&&(s.indexInDeclarationView=n,null!==e?e.push(s):e=[s])}return null!==e?new Tl(e):null}template(t,e){for(let n=0;n<this.queries.length;n++)this.queries[n].template(t,e)}getByIndex(t){return this.queries[t]}get length(){return this.queries.length}track(t){this.queries.push(t)}}class Ol{constructor(t,e=-1){this.metadata=t,this.matches=null,this.indexInDeclarationView=-1,this.crossesNgTemplate=!1,this._appliesToNextNode=!0,this._declarationNodeIndex=e}elementStart(t,e){this.isApplyingToNode(e)&&this.matchTNode(t,e)}elementEnd(t){this._declarationNodeIndex===t.index&&(this._appliesToNextNode=!1)}template(t,e){this.elementStart(t,e)}embeddedTView(t,e){return this.isApplyingToNode(t)?(this.crossesNgTemplate=!0,this.addMatch(-t.index,e),new Ol(this.metadata)):null}isApplyingToNode(t){if(this._appliesToNextNode&&1!=(1&this.metadata.flags)){const e=this._declarationNodeIndex;let n=t.parent;for(;null!==n&&8&n.type&&n.index!==e;)n=n.parent;return e===(null!==n?n.index:-1)}return this._appliesToNextNode}matchTNode(t,e){const n=this.metadata.predicate;if(Array.isArray(n))for(let r=0;r<n.length;r++){const s=n[r];this.matchTNodeWithReadOption(t,e,Fl(e,s)),this.matchTNodeWithReadOption(t,e,Rn(e,t,s,!1,!1))}else n===Ya?4&e.type&&this.matchTNodeWithReadOption(t,e,-1):this.matchTNodeWithReadOption(t,e,Rn(e,t,n,!1,!1))}matchTNodeWithReadOption(t,e,n){if(null!==n){const r=this.metadata.read;if(null!==r)if(r===ba||r===rl||r===Ya&&4&e.type)this.addMatch(e.index,-2);else{const n=Rn(e,t,r,!1,!1);null!==n&&this.addMatch(e.index,n)}else this.addMatch(e.index,n)}}addMatch(t,e){null===this.matches?this.matches=[t,e]:this.matches.push(t,e)}}function Fl(t,e){const n=t.localNames;if(null!==n)for(let r=0;r<n.length;r+=2)if(n[r]===e)return n[r+1];return null}function Pl(t,e,n,r){return-1===n?function(t,e){return 11&t.type?ya(t,e):4&t.type?Ja(t,e):null}(e,t):-2===n?function(t,e,n){return n===ba?ya(e,t):n===Ya?Ja(e,t):n===rl?ll(e,t):void 0}(t,e,r):Mn(t,t[1],n,e)}function Il(t,e,n,r){const s=e[19].queries[r];if(null===s.matches){const r=t.data,i=n.matches,o=[];for(let t=0;t<i.length;t+=2){const s=i[t];o.push(s<0?null:Pl(e,r[s],i[t+1],n.metadata.read))}s.matches=o}return s.matches}function Rl(t,e,n,r){const s=t.queries.getByIndex(n),i=s.matches;if(null!==i){const o=Il(t,e,s,n);for(let t=0;t<i.length;t+=2){const n=i[t];if(n>0)r.push(o[t/2]);else{const s=i[t+1],o=e[-n];for(let t=Jt;t<o.length;t++){const e=o[t];e[17]===e[3]&&Rl(e[1],e,s,r)}if(null!==o[9]){const t=o[9];for(let e=0;e<t.length;e++){const n=t[e];Rl(n[1],n,s,r)}}}}}return r}function Ml(t){const e=Te(),n=Oe(),r=ze();qe(r+1);const s=Ul(n,r);if(t.dirty&&Ce(e)===(2==(2&s.metadata.flags))){if(null===s.matches)t.reset([]);else{const i=s.crossesNgTemplate?Rl(n,e,r,[]):Il(n,e,s,r);t.reset(i,_a),t.notifyOnChanges()}return!0}return!1}function Vl(t,e,n){const r=Oe();r.firstCreatePass&&(Bl(r,new kl(t,e,n),-1),2==(2&e)&&(r.staticViewQueries=!0)),Ll(r,Te(),e)}function jl(t,e,n,r){const s=Oe();if(s.firstCreatePass){const i=Pe();Bl(s,new kl(e,n,r),i.index),function(t,e){const n=t.contentQueries||(t.contentQueries=[]);e!==(n.length?n[n.length-1]:-1)&&n.push(t.queries.length-1,e)}(s,t),2==(2&n)&&(s.staticContentQueries=!0)}Ll(s,Te(),n)}function Nl(){return t=Te(),e=ze(),t[19].queries[e].queryList;var t,e}function Ll(t,e,n){const r=new Al(4==(4&n));ii(t,e,r,r.destroy),null===e[19]&&(e[19]=new xl),e[19].queries.push(new Sl(r))}function Bl(t,e,n){null===t.queries&&(t.queries=new Tl),t.queries.track(new Ol(e,n))}function Ul(t,e){return t.queries.getByIndex(e)}function Hl(t,e){return Ja(t,e)}const $l=new $n("Application Initializer");let zl=(()=>{class t{constructor(t){this.appInits=t,this.resolve=ma,this.reject=ma,this.initialized=!1,this.done=!1,this.donePromise=new Promise((t,e)=>{this.resolve=t,this.reject=e})}runInitializers(){if(this.initialized)return;const t=[],e=()=>{this.done=!0,this.resolve()};if(this.appInits)for(let n=0;n<this.appInits.length;n++){const e=this.appInits[n]();if(_o(e))t.push(e);else if(wo(e)){const n=new Promise((t,n)=>{e.subscribe({complete:t,error:n})});t.push(n)}}Promise.all(t).then(()=>{e()}).catch(t=>{this.reject(t)}),0===t.length&&e(),this.initialized=!0}}return t.\u0275fac=function(e){return new(e||t)(ar($l,8))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const ql=new $n("AppId"),Wl={provide:ql,useFactory:function(){return`${Gl()}${Gl()}${Gl()}`},deps:[]};function Gl(){return String.fromCharCode(97+Math.floor(25*Math.random()))}const Zl=new $n("Platform Initializer"),Kl=new $n("Platform ID"),Yl=new $n("appBootstrapListener");let Ql=(()=>{class t{log(t){console.log(t)}warn(t){console.warn(t)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const Xl=new $n("LocaleId"),Jl=new $n("DefaultCurrencyCode");class tu{constructor(t,e){this.ngModuleFactory=t,this.componentFactories=e}}const eu=function(t){return new yl(t)},nu=eu,ru=function(t){return Promise.resolve(eu(t))},su=function(t){const e=eu(t),n=Yr(Qt(t).declarations).reduce((t,e)=>{const n=Yt(e);return n&&t.push(new pl(n)),t},[]);return new tu(e,n)},iu=su,ou=function(t){return Promise.resolve(su(t))};let au=(()=>{class t{constructor(){this.compileModuleSync=nu,this.compileModuleAsync=ru,this.compileModuleAndAllComponentsSync=iu,this.compileModuleAndAllComponentsAsync=ou}clearCache(){}clearCacheFor(t){}getModuleId(t){}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const lu=(()=>Promise.resolve(0))();function uu(t){"undefined"==typeof Zone?lu.then(()=>{t&&t.apply(null,null)}):Zone.current.scheduleMicroTask("scheduleMicrotask",t)}class cu{constructor({enableLongStackTrace:t=!1,shouldCoalesceEventChangeDetection:e=!1,shouldCoalesceRunChangeDetection:n=!1}){if(this.hasPendingMacrotasks=!1,this.hasPendingMicrotasks=!1,this.isStable=!0,this.onUnstable=new El(!1),this.onMicrotaskEmpty=new El(!1),this.onStable=new El(!1),this.onError=new El(!1),"undefined"==typeof Zone)throw new Error("In this configuration Angular requires Zone.js");Zone.assertZonePatched();const r=this;r._nesting=0,r._outer=r._inner=Zone.current,Zone.TaskTrackingZoneSpec&&(r._inner=r._inner.fork(new Zone.TaskTrackingZoneSpec)),t&&Zone.longStackTraceZoneSpec&&(r._inner=r._inner.fork(Zone.longStackTraceZoneSpec)),r.shouldCoalesceEventChangeDetection=!n&&e,r.shouldCoalesceRunChangeDetection=n,r.lastRequestAnimationFrameId=-1,r.nativeRequestAnimationFrame=function(){let t=Ft.requestAnimationFrame,e=Ft.cancelAnimationFrame;if("undefined"!=typeof Zone&&t&&e){const n=t[Zone.__symbol__("OriginalDelegate")];n&&(t=n);const r=e[Zone.__symbol__("OriginalDelegate")];r&&(e=r)}return{nativeRequestAnimationFrame:t,nativeCancelAnimationFrame:e}}().nativeRequestAnimationFrame,function(t){const e=()=>{!function(t){t.isCheckStableRunning||-1!==t.lastRequestAnimationFrameId||(t.lastRequestAnimationFrameId=t.nativeRequestAnimationFrame.call(Ft,()=>{t.fakeTopEventTask||(t.fakeTopEventTask=Zone.root.scheduleEventTask("fakeTopEventTask",()=>{t.lastRequestAnimationFrameId=-1,pu(t),t.isCheckStableRunning=!0,du(t),t.isCheckStableRunning=!1},void 0,()=>{},()=>{})),t.fakeTopEventTask.invoke()}),pu(t))}(t)};t._inner=t._inner.fork({name:"angular",properties:{isAngularZone:!0},onInvokeTask:(n,r,s,i,o,a)=>{try{return fu(t),n.invokeTask(s,i,o,a)}finally{(t.shouldCoalesceEventChangeDetection&&"eventTask"===i.type||t.shouldCoalesceRunChangeDetection)&&e(),gu(t)}},onInvoke:(n,r,s,i,o,a,l)=>{try{return fu(t),n.invoke(s,i,o,a,l)}finally{t.shouldCoalesceRunChangeDetection&&e(),gu(t)}},onHasTask:(e,n,r,s)=>{e.hasTask(r,s),n===r&&("microTask"==s.change?(t._hasPendingMicrotasks=s.microTask,pu(t),du(t)):"macroTask"==s.change&&(t.hasPendingMacrotasks=s.macroTask))},onHandleError:(e,n,r,s)=>(e.handleError(r,s),t.runOutsideAngular(()=>t.onError.emit(s)),!1)})}(r)}static isInAngularZone(){return!0===Zone.current.get("isAngularZone")}static assertInAngularZone(){if(!cu.isInAngularZone())throw new Error("Expected to be in Angular Zone, but it is not!")}static assertNotInAngularZone(){if(cu.isInAngularZone())throw new Error("Expected to not be in Angular Zone, but it is!")}run(t,e,n){return this._inner.run(t,e,n)}runTask(t,e,n,r){const s=this._inner,i=s.scheduleEventTask("NgZoneEvent: "+r,t,hu,ma,ma);try{return s.runTask(i,e,n)}finally{s.cancelTask(i)}}runGuarded(t,e,n){return this._inner.runGuarded(t,e,n)}runOutsideAngular(t){return this._outer.run(t)}}const hu={};function du(t){if(0==t._nesting&&!t.hasPendingMicrotasks&&!t.isStable)try{t._nesting++,t.onMicrotaskEmpty.emit(null)}finally{if(t._nesting--,!t.hasPendingMicrotasks)try{t.runOutsideAngular(()=>t.onStable.emit(null))}finally{t.isStable=!0}}}function pu(t){t.hasPendingMicrotasks=!!(t._hasPendingMicrotasks||(t.shouldCoalesceEventChangeDetection||t.shouldCoalesceRunChangeDetection)&&-1!==t.lastRequestAnimationFrameId)}function fu(t){t._nesting++,t.isStable&&(t.isStable=!1,t.onUnstable.emit(null))}function gu(t){t._nesting--,du(t)}class mu{constructor(){this.hasPendingMicrotasks=!1,this.hasPendingMacrotasks=!1,this.isStable=!0,this.onUnstable=new El,this.onMicrotaskEmpty=new El,this.onStable=new El,this.onError=new El}run(t,e,n){return t.apply(e,n)}runGuarded(t,e,n){return t.apply(e,n)}runOutsideAngular(t){return t()}runTask(t,e,n,r){return t.apply(e,n)}}let yu=(()=>{class t{constructor(t){this._ngZone=t,this._pendingCount=0,this._isZoneStable=!0,this._didWork=!1,this._callbacks=[],this.taskTrackingZone=null,this._watchAngularEvents(),t.run(()=>{this.taskTrackingZone="undefined"==typeof Zone?null:Zone.current.get("TaskTrackingZone")})}_watchAngularEvents(){this._ngZone.onUnstable.subscribe({next:()=>{this._didWork=!0,this._isZoneStable=!1}}),this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.subscribe({next:()=>{cu.assertNotInAngularZone(),uu(()=>{this._isZoneStable=!0,this._runCallbacksIfReady()})}})})}increasePendingRequestCount(){return this._pendingCount+=1,this._didWork=!0,this._pendingCount}decreasePendingRequestCount(){if(this._pendingCount-=1,this._pendingCount<0)throw new Error("pending async requests below zero");return this._runCallbacksIfReady(),this._pendingCount}isStable(){return this._isZoneStable&&0===this._pendingCount&&!this._ngZone.hasPendingMacrotasks}_runCallbacksIfReady(){if(this.isStable())uu(()=>{for(;0!==this._callbacks.length;){let t=this._callbacks.pop();clearTimeout(t.timeoutId),t.doneCb(this._didWork)}this._didWork=!1});else{let t=this.getPendingTasks();this._callbacks=this._callbacks.filter(e=>!e.updateCb||!e.updateCb(t)||(clearTimeout(e.timeoutId),!1)),this._didWork=!0}}getPendingTasks(){return this.taskTrackingZone?this.taskTrackingZone.macroTasks.map(t=>({source:t.source,creationLocation:t.creationLocation,data:t.data})):[]}addCallback(t,e,n){let r=-1;e&&e>0&&(r=setTimeout(()=>{this._callbacks=this._callbacks.filter(t=>t.timeoutId!==r),t(this._didWork,this.getPendingTasks())},e)),this._callbacks.push({doneCb:t,timeoutId:r,updateCb:n})}whenStable(t,e,n){if(n&&!this.taskTrackingZone)throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?');this.addCallback(t,e,n),this._runCallbacksIfReady()}getPendingRequestCount(){return this._pendingCount}findProviders(t,e,n){return[]}}return t.\u0275fac=function(e){return new(e||t)(ar(cu))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),vu=(()=>{class t{constructor(){this._applications=new Map,wu.addToWindow(this)}registerApplication(t,e){this._applications.set(t,e)}unregisterApplication(t){this._applications.delete(t)}unregisterAllApplications(){this._applications.clear()}getTestability(t){return this._applications.get(t)||null}getAllTestabilities(){return Array.from(this._applications.values())}getAllRootElements(){return Array.from(this._applications.keys())}findTestabilityInTree(t,e=!0){return wu.findTestabilityInTree(this,t,e)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();class bu{addToWindow(t){}findTestabilityInTree(t,e,n){return null}}let _u,wu=new bu,Cu=!0,Eu=!1;const Du=new $n("AllowMultipleToken");class Au{constructor(t,e){this.name=t,this.token=e}}function Su(t,e,n=[]){const r=`Platform: ${e}`,s=new $n(r);return(e=[])=>{let i=xu();if(!i||i.injector.get(Du,!1))if(t)t(n.concat(e).concat({provide:s,useValue:!0}));else{const t=n.concat(e).concat({provide:s,useValue:!0},{provide:Ri,useValue:"platform"});!function(t){if(_u&&!_u.destroyed&&!_u.injector.get(Du,!1))throw new Error("There can be only one platform. Destroy the previous one to create a new one.");_u=t.get(ku);const e=t.get(Zl,null);e&&e.forEach(t=>t())}(Gi.create({providers:t,name:r}))}return function(t){const e=xu();if(!e)throw new Error("No platform exists!");if(!e.injector.get(t,null))throw new Error("A platform with a different configuration has been created. Please destroy it first.");return e}(s)}}function xu(){return _u&&!_u.destroyed?_u:null}let ku=(()=>{class t{constructor(t){this._injector=t,this._modules=[],this._destroyListeners=[],this._destroyed=!1}bootstrapModuleFactory(t,e){const n=function(t,e){let n;return n="noop"===t?new mu:("zone.js"===t?void 0:t)||new cu({enableLongStackTrace:(Eu=!0,Cu),shouldCoalesceEventChangeDetection:!!(null==e?void 0:e.ngZoneEventCoalescing),shouldCoalesceRunChangeDetection:!!(null==e?void 0:e.ngZoneRunCoalescing)}),n}(e?e.ngZone:void 0,{ngZoneEventCoalescing:e&&e.ngZoneEventCoalescing||!1,ngZoneRunCoalescing:e&&e.ngZoneRunCoalescing||!1}),r=[{provide:cu,useValue:n}];return n.run(()=>{const e=Gi.create({providers:r,parent:this.injector,name:t.moduleType.name}),s=t.create(e),i=s.injector.get(Zr,null);if(!i)throw new Error("No ErrorHandler. Is platform module (BrowserModule) included?");return n.runOutsideAngular(()=>{const t=n.onError.subscribe({next:t=>{i.handleError(t)}});s.onDestroy(()=>{Fu(this._modules,s),t.unsubscribe()})}),function(t,e,n){try{const r=n();return _o(r)?r.catch(n=>{throw e.runOutsideAngular(()=>t.handleError(n)),n}):r}catch(r){throw e.runOutsideAngular(()=>t.handleError(r)),r}}(i,n,()=>{const t=s.injector.get(zl);return t.runInitializers(),t.donePromise.then(()=>(sa(s.injector.get(Xl,na)||na),this._moduleDoBootstrap(s),s))})})}bootstrapModule(t,e=[]){const n=Tu({},e);return function(t,e,n){const r=new yl(n);return Promise.resolve(r)}(0,0,t).then(t=>this.bootstrapModuleFactory(t,n))}_moduleDoBootstrap(t){const e=t.injector.get(Ou);if(t._bootstrapComponents.length>0)t._bootstrapComponents.forEach(t=>e.bootstrap(t));else{if(!t.instance.ngDoBootstrap)throw new Error(`The module ${et(t.instance.constructor)} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.`);t.instance.ngDoBootstrap(e)}this._modules.push(t)}onDestroy(t){this._destroyListeners.push(t)}get injector(){return this._injector}destroy(){if(this._destroyed)throw new Error("The platform has already been destroyed!");this._modules.slice().forEach(t=>t.destroy()),this._destroyListeners.forEach(t=>t()),this._destroyed=!0}get destroyed(){return this._destroyed}}return t.\u0275fac=function(e){return new(e||t)(ar(Gi))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function Tu(t,e){return Array.isArray(e)?e.reduce(Tu,t):Object.assign(Object.assign({},t),e)}let Ou=(()=>{class t{constructor(t,e,n,r,s){this._zone=t,this._injector=e,this._exceptionHandler=n,this._componentFactoryResolver=r,this._initStatus=s,this._bootstrapListeners=[],this._views=[],this._runningTick=!1,this._stable=!0,this.componentTypes=[],this.components=[],this._onMicrotaskEmptySubscription=this._zone.onMicrotaskEmpty.subscribe({next:()=>{this._zone.run(()=>{this.tick()})}});const i=new v(t=>{this._stable=this._zone.isStable&&!this._zone.hasPendingMacrotasks&&!this._zone.hasPendingMicrotasks,this._zone.runOutsideAngular(()=>{t.next(this._stable),t.complete()})}),o=new v(t=>{let e;this._zone.runOutsideAngular(()=>{e=this._zone.onStable.subscribe(()=>{cu.assertNotInAngularZone(),uu(()=>{this._stable||this._zone.hasPendingMacrotasks||this._zone.hasPendingMicrotasks||(this._stable=!0,t.next(!0))})})});const n=this._zone.onUnstable.subscribe(()=>{cu.assertInAngularZone(),this._stable&&(this._stable=!1,this._zone.runOutsideAngular(()=>{t.next(!1)}))});return()=>{e.unsubscribe(),n.unsubscribe()}});this.isStable=q(i,o.pipe(t=>{return W()((e=X,function(t){let n;n="function"==typeof e?e:function(){return e};const r=Object.create(t,Y);return r.source=t,r.subjectFactory=n,r})(t));var e}))}bootstrap(t,e){if(!this._initStatus.done)throw new Error("Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.");let n;n=t instanceof pa?t:this._componentFactoryResolver.resolveComponentFactory(t),this.componentTypes.push(n.componentType);const r=n.isBoundToModule?void 0:this._injector.get(tl),s=n.create(Gi.NULL,[],e||n.selector,r),i=s.location.nativeElement,o=s.injector.get(yu,null),a=o&&s.injector.get(vu);return o&&a&&a.registerApplication(i,o),s.onDestroy(()=>{this.detachView(s.hostView),Fu(this.components,s),a&&a.unregisterApplication(i)}),this._loadComponent(s),s}tick(){if(this._runningTick)throw new Error("ApplicationRef.tick is called recursively");try{this._runningTick=!0;for(let t of this._views)t.detectChanges()}catch(t){this._zone.runOutsideAngular(()=>this._exceptionHandler.handleError(t))}finally{this._runningTick=!1}}attachView(t){const e=t;this._views.push(e),e.attachToAppRef(this)}detachView(t){const e=t;Fu(this._views,e),e.detachFromAppRef()}_loadComponent(t){this.attachView(t.hostView),this.tick(),this.components.push(t),this._injector.get(Yl,[]).concat(this._bootstrapListeners).forEach(e=>e(t))}ngOnDestroy(){this._views.slice().forEach(t=>t.destroy()),this._onMicrotaskEmptySubscription.unsubscribe()}get viewCount(){return this._views.length}}return t.\u0275fac=function(e){return new(e||t)(ar(cu),ar(Gi),ar(Zr),ar(ga),ar(zl))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function Fu(t,e){const n=t.indexOf(e);n>-1&&t.splice(n,1)}class Pu{}class Iu{}const Ru={factoryPathPrefix:"",factoryPathSuffix:".ngfactory"};let Mu=(()=>{class t{constructor(t,e){this._compiler=t,this._config=e||Ru}load(t){return this.loadAndCompile(t)}loadAndCompile(t){let[e,r]=t.split("#");return void 0===r&&(r="default"),n(221)(e).then(t=>t[r]).then(t=>Vu(t,e,r)).then(t=>this._compiler.compileModuleAsync(t))}loadFactory(t){let[e,r]=t.split("#"),s="NgFactory";return void 0===r&&(r="default",s=""),n(221)(this._config.factoryPathPrefix+e+this._config.factoryPathSuffix).then(t=>t[r+s]).then(t=>Vu(t,e,r))}}return t.\u0275fac=function(e){return new(e||t)(ar(au),ar(Iu,8))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function Vu(t,e,n){if(!t)throw new Error(`Cannot find '${n}' in '${e}'`);return t}const ju=Su(null,"core",[{provide:Kl,useValue:"unknown"},{provide:ku,deps:[Gi]},{provide:vu,deps:[]},{provide:Ql,deps:[]}]),Nu=[{provide:Ou,useClass:Ou,deps:[cu,Gi,Zr,ga,zl]},{provide:dl,deps:[cu],useFactory:function(t){let e=[];return t.onStable.subscribe(()=>{for(;e.length;)e.pop()()}),function(t){e.push(t)}}},{provide:zl,useClass:zl,deps:[[new hr,$l]]},{provide:au,useClass:au,deps:[]},Wl,{provide:Na,useFactory:function(){return Ga},deps:[]},{provide:Ba,useFactory:function(){return Za},deps:[]},{provide:Xl,useFactory:function(t){return sa(t=t||"undefined"!=typeof $localize&&$localize.locale||na),t},deps:[[new cr(Xl),new hr,new dr]]},{provide:Jl,useValue:"USD"}];let Lu=(()=>{class t{constructor(t){}}return t.\u0275fac=function(e){return new(e||t)(ar(Ou))},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:Nu}),t})(),Bu=null;function Uu(){return Bu}const Hu=new $n("DocumentToken");let $u=(()=>{class t{historyGo(t){throw new Error("Not implemented")}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:zu,token:t,providedIn:"platform"}),t})();function zu(){return ar(Wu)}const qu=new $n("Location Initialized");let Wu=(()=>{class t extends $u{constructor(t){super(),this._doc=t,this._init()}_init(){this.location=window.location,this._history=window.history}getBaseHrefFromDOM(){return Uu().getBaseHref(this._doc)}onPopState(t){const e=Uu().getGlobalEventTarget(this._doc,"window");return e.addEventListener("popstate",t,!1),()=>e.removeEventListener("popstate",t)}onHashChange(t){const e=Uu().getGlobalEventTarget(this._doc,"window");return e.addEventListener("hashchange",t,!1),()=>e.removeEventListener("hashchange",t)}get href(){return this.location.href}get protocol(){return this.location.protocol}get hostname(){return this.location.hostname}get port(){return this.location.port}get pathname(){return this.location.pathname}get search(){return this.location.search}get hash(){return this.location.hash}set pathname(t){this.location.pathname=t}pushState(t,e,n){Gu()?this._history.pushState(t,e,n):this.location.hash=n}replaceState(t,e,n){Gu()?this._history.replaceState(t,e,n):this.location.hash=n}forward(){this._history.forward()}back(){this._history.back()}historyGo(t=0){this._history.go(t)}getState(){return this._history.state}}return t.\u0275fac=function(e){return new(e||t)(ar(Hu))},t.\u0275prov=ht({factory:Zu,token:t,providedIn:"platform"}),t})();function Gu(){return!!window.history.pushState}function Zu(){return new Wu(ar(Hu))}function Ku(t,e){if(0==t.length)return e;if(0==e.length)return t;let n=0;return t.endsWith("/")&&n++,e.startsWith("/")&&n++,2==n?t+e.substring(1):1==n?t+e:t+"/"+e}function Yu(t){const e=t.match(/#|\?|$/),n=e&&e.index||t.length;return t.slice(0,n-("/"===t[n-1]?1:0))+t.slice(n)}function Qu(t){return t&&"?"!==t[0]?"?"+t:t}let Xu=(()=>{class t{historyGo(t){throw new Error("Not implemented")}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:Ju,token:t,providedIn:"root"}),t})();function Ju(t){const e=ar(Hu).location;return new ec(ar($u),e&&e.origin||"")}const tc=new $n("appBaseHref");let ec=(()=>{class t extends Xu{constructor(t,e){if(super(),this._platformLocation=t,this._removeListenerFns=[],null==e&&(e=this._platformLocation.getBaseHrefFromDOM()),null==e)throw new Error("No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.");this._baseHref=e}ngOnDestroy(){for(;this._removeListenerFns.length;)this._removeListenerFns.pop()()}onPopState(t){this._removeListenerFns.push(this._platformLocation.onPopState(t),this._platformLocation.onHashChange(t))}getBaseHref(){return this._baseHref}prepareExternalUrl(t){return Ku(this._baseHref,t)}path(t=!1){const e=this._platformLocation.pathname+Qu(this._platformLocation.search),n=this._platformLocation.hash;return n&&t?`${e}${n}`:e}pushState(t,e,n,r){const s=this.prepareExternalUrl(n+Qu(r));this._platformLocation.pushState(t,e,s)}replaceState(t,e,n,r){const s=this.prepareExternalUrl(n+Qu(r));this._platformLocation.replaceState(t,e,s)}forward(){this._platformLocation.forward()}back(){this._platformLocation.back()}historyGo(t=0){var e,n;null===(n=(e=this._platformLocation).historyGo)||void 0===n||n.call(e,t)}}return t.\u0275fac=function(e){return new(e||t)(ar($u),ar(tc,8))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),nc=(()=>{class t extends Xu{constructor(t,e){super(),this._platformLocation=t,this._baseHref="",this._removeListenerFns=[],null!=e&&(this._baseHref=e)}ngOnDestroy(){for(;this._removeListenerFns.length;)this._removeListenerFns.pop()()}onPopState(t){this._removeListenerFns.push(this._platformLocation.onPopState(t),this._platformLocation.onHashChange(t))}getBaseHref(){return this._baseHref}path(t=!1){let e=this._platformLocation.hash;return null==e&&(e="#"),e.length>0?e.substring(1):e}prepareExternalUrl(t){const e=Ku(this._baseHref,t);return e.length>0?"#"+e:e}pushState(t,e,n,r){let s=this.prepareExternalUrl(n+Qu(r));0==s.length&&(s=this._platformLocation.pathname),this._platformLocation.pushState(t,e,s)}replaceState(t,e,n,r){let s=this.prepareExternalUrl(n+Qu(r));0==s.length&&(s=this._platformLocation.pathname),this._platformLocation.replaceState(t,e,s)}forward(){this._platformLocation.forward()}back(){this._platformLocation.back()}historyGo(t=0){var e,n;null===(n=(e=this._platformLocation).historyGo)||void 0===n||n.call(e,t)}}return t.\u0275fac=function(e){return new(e||t)(ar($u),ar(tc,8))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),rc=(()=>{class t{constructor(t,e){this._subject=new El,this._urlChangeListeners=[],this._platformStrategy=t;const n=this._platformStrategy.getBaseHref();this._platformLocation=e,this._baseHref=Yu(ic(n)),this._platformStrategy.onPopState(t=>{this._subject.emit({url:this.path(!0),pop:!0,state:t.state,type:t.type})})}path(t=!1){return this.normalize(this._platformStrategy.path(t))}getState(){return this._platformLocation.getState()}isCurrentPathEqualTo(t,e=""){return this.path()==this.normalize(t+Qu(e))}normalize(e){return t.stripTrailingSlash(function(t,e){return t&&e.startsWith(t)?e.substring(t.length):e}(this._baseHref,ic(e)))}prepareExternalUrl(t){return t&&"/"!==t[0]&&(t="/"+t),this._platformStrategy.prepareExternalUrl(t)}go(t,e="",n=null){this._platformStrategy.pushState(n,"",t,e),this._notifyUrlChangeListeners(this.prepareExternalUrl(t+Qu(e)),n)}replaceState(t,e="",n=null){this._platformStrategy.replaceState(n,"",t,e),this._notifyUrlChangeListeners(this.prepareExternalUrl(t+Qu(e)),n)}forward(){this._platformStrategy.forward()}back(){this._platformStrategy.back()}historyGo(t=0){var e,n;null===(n=(e=this._platformStrategy).historyGo)||void 0===n||n.call(e,t)}onUrlChange(t){this._urlChangeListeners.push(t),this._urlChangeSubscription||(this._urlChangeSubscription=this.subscribe(t=>{this._notifyUrlChangeListeners(t.url,t.state)}))}_notifyUrlChangeListeners(t="",e){this._urlChangeListeners.forEach(n=>n(t,e))}subscribe(t,e,n){return this._subject.subscribe({next:t,error:e,complete:n})}}return t.\u0275fac=function(e){return new(e||t)(ar(Xu),ar($u))},t.normalizeQueryParams=Qu,t.joinWithSlash=Ku,t.stripTrailingSlash=Yu,t.\u0275prov=ht({factory:sc,token:t,providedIn:"root"}),t})();function sc(){return new rc(ar(Xu),ar($u))}function ic(t){return t.replace(/\/index.html$/,"")}const oc={ADP:[void 0,void 0,0],AFN:[void 0,void 0,0],ALL:[void 0,void 0,0],AMD:[void 0,void 0,2],AOA:[void 0,"Kz"],ARS:[void 0,"$"],AUD:["A$","$"],BAM:[void 0,"KM"],BBD:[void 0,"$"],BDT:[void 0,"\u09f3"],BHD:[void 0,void 0,3],BIF:[void 0,void 0,0],BMD:[void 0,"$"],BND:[void 0,"$"],BOB:[void 0,"Bs"],BRL:["R$"],BSD:[void 0,"$"],BWP:[void 0,"P"],BYN:[void 0,"\u0440.",2],BYR:[void 0,void 0,0],BZD:[void 0,"$"],CAD:["CA$","$",2],CHF:[void 0,void 0,2],CLF:[void 0,void 0,4],CLP:[void 0,"$",0],CNY:["CN\xa5","\xa5"],COP:[void 0,"$",2],CRC:[void 0,"\u20a1",2],CUC:[void 0,"$"],CUP:[void 0,"$"],CZK:[void 0,"K\u010d",2],DJF:[void 0,void 0,0],DKK:[void 0,"kr",2],DOP:[void 0,"$"],EGP:[void 0,"E\xa3"],ESP:[void 0,"\u20a7",0],EUR:["\u20ac"],FJD:[void 0,"$"],FKP:[void 0,"\xa3"],GBP:["\xa3"],GEL:[void 0,"\u20be"],GIP:[void 0,"\xa3"],GNF:[void 0,"FG",0],GTQ:[void 0,"Q"],GYD:[void 0,"$",2],HKD:["HK$","$"],HNL:[void 0,"L"],HRK:[void 0,"kn"],HUF:[void 0,"Ft",2],IDR:[void 0,"Rp",2],ILS:["\u20aa"],INR:["\u20b9"],IQD:[void 0,void 0,0],IRR:[void 0,void 0,0],ISK:[void 0,"kr",0],ITL:[void 0,void 0,0],JMD:[void 0,"$"],JOD:[void 0,void 0,3],JPY:["\xa5",void 0,0],KHR:[void 0,"\u17db"],KMF:[void 0,"CF",0],KPW:[void 0,"\u20a9",0],KRW:["\u20a9",void 0,0],KWD:[void 0,void 0,3],KYD:[void 0,"$"],KZT:[void 0,"\u20b8"],LAK:[void 0,"\u20ad",0],LBP:[void 0,"L\xa3",0],LKR:[void 0,"Rs"],LRD:[void 0,"$"],LTL:[void 0,"Lt"],LUF:[void 0,void 0,0],LVL:[void 0,"Ls"],LYD:[void 0,void 0,3],MGA:[void 0,"Ar",0],MGF:[void 0,void 0,0],MMK:[void 0,"K",0],MNT:[void 0,"\u20ae",2],MRO:[void 0,void 0,0],MUR:[void 0,"Rs",2],MXN:["MX$","$"],MYR:[void 0,"RM"],NAD:[void 0,"$"],NGN:[void 0,"\u20a6"],NIO:[void 0,"C$"],NOK:[void 0,"kr",2],NPR:[void 0,"Rs"],NZD:["NZ$","$"],OMR:[void 0,void 0,3],PHP:[void 0,"\u20b1"],PKR:[void 0,"Rs",2],PLN:[void 0,"z\u0142"],PYG:[void 0,"\u20b2",0],RON:[void 0,"lei"],RSD:[void 0,void 0,0],RUB:[void 0,"\u20bd"],RUR:[void 0,"\u0440."],RWF:[void 0,"RF",0],SBD:[void 0,"$"],SEK:[void 0,"kr",2],SGD:[void 0,"$"],SHP:[void 0,"\xa3"],SLL:[void 0,void 0,0],SOS:[void 0,void 0,0],SRD:[void 0,"$"],SSP:[void 0,"\xa3"],STD:[void 0,void 0,0],STN:[void 0,"Db"],SYP:[void 0,"\xa3",0],THB:[void 0,"\u0e3f"],TMM:[void 0,void 0,0],TND:[void 0,void 0,3],TOP:[void 0,"T$"],TRL:[void 0,void 0,0],TRY:[void 0,"\u20ba"],TTD:[void 0,"$"],TWD:["NT$","$",2],TZS:[void 0,void 0,2],UAH:[void 0,"\u20b4"],UGX:[void 0,void 0,0],USD:["$"],UYI:[void 0,void 0,0],UYU:[void 0,"$"],UYW:[void 0,void 0,4],UZS:[void 0,void 0,2],VEF:[void 0,"Bs",2],VND:["\u20ab",void 0,0],VUV:[void 0,void 0,0],XAF:["FCFA",void 0,0],XCD:["EC$","$"],XOF:["CFA",void 0,0],XPF:["CFPF",void 0,0],XXX:["\xa4"],YER:[void 0,void 0,0],ZAR:[void 0,"R"],ZMK:[void 0,void 0,0],ZMW:[void 0,"ZK"],ZWD:[void 0,void 0,0]};var ac=function(t){return t[t.Decimal=0]="Decimal",t[t.Percent=1]="Percent",t[t.Currency=2]="Currency",t[t.Scientific=3]="Scientific",t}({}),lc=function(t){return t[t.Zero=0]="Zero",t[t.One=1]="One",t[t.Two=2]="Two",t[t.Few=3]="Few",t[t.Many=4]="Many",t[t.Other=5]="Other",t}({}),uc=function(t){return t[t.Format=0]="Format",t[t.Standalone=1]="Standalone",t}({}),cc=function(t){return t[t.Narrow=0]="Narrow",t[t.Abbreviated=1]="Abbreviated",t[t.Wide=2]="Wide",t[t.Short=3]="Short",t}({}),hc=function(t){return t[t.Short=0]="Short",t[t.Medium=1]="Medium",t[t.Long=2]="Long",t[t.Full=3]="Full",t}({}),dc=function(t){return t[t.Decimal=0]="Decimal",t[t.Group=1]="Group",t[t.List=2]="List",t[t.PercentSign=3]="PercentSign",t[t.PlusSign=4]="PlusSign",t[t.MinusSign=5]="MinusSign",t[t.Exponential=6]="Exponential",t[t.SuperscriptingExponent=7]="SuperscriptingExponent",t[t.PerMille=8]="PerMille",t[t[1/0]=9]="Infinity",t[t.NaN=10]="NaN",t[t.TimeSeparator=11]="TimeSeparator",t[t.CurrencyDecimal=12]="CurrencyDecimal",t[t.CurrencyGroup=13]="CurrencyGroup",t}({});function pc(t,e){return bc(Jo(t)[ea.DateFormat],e)}function fc(t,e){return bc(Jo(t)[ea.TimeFormat],e)}function gc(t,e){return bc(Jo(t)[ea.DateTimeFormat],e)}function mc(t,e){const n=Jo(t),r=n[ea.NumberSymbols][e];if(void 0===r){if(e===dc.CurrencyDecimal)return n[ea.NumberSymbols][dc.Decimal];if(e===dc.CurrencyGroup)return n[ea.NumberSymbols][dc.Group]}return r}function yc(t,e){return Jo(t)[ea.NumberFormats][e]}function vc(t){if(!t[ea.ExtraData])throw new Error(`Missing extra locale data for the locale "${t[ea.LocaleId]}". Use "registerLocaleData" to load new data. See the "I18n guide" on angular.io to know more.`)}function bc(t,e){for(let n=e;n>-1;n--)if(void 0!==t[n])return t[n];throw new Error("Locale data API: locale data undefined")}function _c(t){const[e,n]=t.split(":");return{hours:+e,minutes:+n}}const wc=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/,Cc={},Ec=/((?:[^BEGHLMOSWYZabcdhmswyz']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|Y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|c{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\s\S]*)/;var Dc=function(t){return t[t.Short=0]="Short",t[t.ShortGMT=1]="ShortGMT",t[t.Long=2]="Long",t[t.Extended=3]="Extended",t}({}),Ac=function(t){return t[t.FullYear=0]="FullYear",t[t.Month=1]="Month",t[t.Date=2]="Date",t[t.Hours=3]="Hours",t[t.Minutes=4]="Minutes",t[t.Seconds=5]="Seconds",t[t.FractionalSeconds=6]="FractionalSeconds",t[t.Day=7]="Day",t}({}),Sc=function(t){return t[t.DayPeriods=0]="DayPeriods",t[t.Days=1]="Days",t[t.Months=2]="Months",t[t.Eras=3]="Eras",t}({});function xc(t,e,n,r){let s=function(t){if(Bc(t))return t;if("number"==typeof t&&!isNaN(t))return new Date(t);if("string"==typeof t){if(t=t.trim(),/^(\d{4}(-\d{1,2}(-\d{1,2})?)?)$/.test(t)){const[e,n=1,r=1]=t.split("-").map(t=>+t);return kc(e,n-1,r)}const e=parseFloat(t);if(!isNaN(t-e))return new Date(e);let n;if(n=t.match(wc))return function(t){const e=new Date(0);let n=0,r=0;const s=t[8]?e.setUTCFullYear:e.setFullYear,i=t[8]?e.setUTCHours:e.setHours;t[9]&&(n=Number(t[9]+t[10]),r=Number(t[9]+t[11])),s.call(e,Number(t[1]),Number(t[2])-1,Number(t[3]));const o=Number(t[4]||0)-n,a=Number(t[5]||0)-r,l=Number(t[6]||0),u=Math.floor(1e3*parseFloat("0."+(t[7]||0)));return i.call(e,o,a,l,u),e}(n)}const e=new Date(t);if(!Bc(e))throw new Error(`Unable to convert "${t}" into a date`);return e}(t);e=Tc(n,e)||e;let i,o=[];for(;e;){if(i=Ec.exec(e),!i){o.push(e);break}{o=o.concat(i.slice(1));const t=o.pop();if(!t)break;e=t}}let a=s.getTimezoneOffset();r&&(a=Lc(r,a),s=function(t,e,n){const r=t.getTimezoneOffset();return function(t,e){return(t=new Date(t.getTime())).setMinutes(t.getMinutes()+e),t}(t,-1*(Lc(e,r)-r))}(s,r));let l="";return o.forEach(t=>{const e=function(t){if(Nc[t])return Nc[t];let e;switch(t){case"G":case"GG":case"GGG":e=Ic(Sc.Eras,cc.Abbreviated);break;case"GGGG":e=Ic(Sc.Eras,cc.Wide);break;case"GGGGG":e=Ic(Sc.Eras,cc.Narrow);break;case"y":e=Pc(Ac.FullYear,1,0,!1,!0);break;case"yy":e=Pc(Ac.FullYear,2,0,!0,!0);break;case"yyy":e=Pc(Ac.FullYear,3,0,!1,!0);break;case"yyyy":e=Pc(Ac.FullYear,4,0,!1,!0);break;case"Y":e=jc(1);break;case"YY":e=jc(2,!0);break;case"YYY":e=jc(3);break;case"YYYY":e=jc(4);break;case"M":case"L":e=Pc(Ac.Month,1,1);break;case"MM":case"LL":e=Pc(Ac.Month,2,1);break;case"MMM":e=Ic(Sc.Months,cc.Abbreviated);break;case"MMMM":e=Ic(Sc.Months,cc.Wide);break;case"MMMMM":e=Ic(Sc.Months,cc.Narrow);break;case"LLL":e=Ic(Sc.Months,cc.Abbreviated,uc.Standalone);break;case"LLLL":e=Ic(Sc.Months,cc.Wide,uc.Standalone);break;case"LLLLL":e=Ic(Sc.Months,cc.Narrow,uc.Standalone);break;case"w":e=Vc(1);break;case"ww":e=Vc(2);break;case"W":e=Vc(1,!0);break;case"d":e=Pc(Ac.Date,1);break;case"dd":e=Pc(Ac.Date,2);break;case"c":case"cc":e=Pc(Ac.Day,1);break;case"ccc":e=Ic(Sc.Days,cc.Abbreviated,uc.Standalone);break;case"cccc":e=Ic(Sc.Days,cc.Wide,uc.Standalone);break;case"ccccc":e=Ic(Sc.Days,cc.Narrow,uc.Standalone);break;case"cccccc":e=Ic(Sc.Days,cc.Short,uc.Standalone);break;case"E":case"EE":case"EEE":e=Ic(Sc.Days,cc.Abbreviated);break;case"EEEE":e=Ic(Sc.Days,cc.Wide);break;case"EEEEE":e=Ic(Sc.Days,cc.Narrow);break;case"EEEEEE":e=Ic(Sc.Days,cc.Short);break;case"a":case"aa":case"aaa":e=Ic(Sc.DayPeriods,cc.Abbreviated);break;case"aaaa":e=Ic(Sc.DayPeriods,cc.Wide);break;case"aaaaa":e=Ic(Sc.DayPeriods,cc.Narrow);break;case"b":case"bb":case"bbb":e=Ic(Sc.DayPeriods,cc.Abbreviated,uc.Standalone,!0);break;case"bbbb":e=Ic(Sc.DayPeriods,cc.Wide,uc.Standalone,!0);break;case"bbbbb":e=Ic(Sc.DayPeriods,cc.Narrow,uc.Standalone,!0);break;case"B":case"BB":case"BBB":e=Ic(Sc.DayPeriods,cc.Abbreviated,uc.Format,!0);break;case"BBBB":e=Ic(Sc.DayPeriods,cc.Wide,uc.Format,!0);break;case"BBBBB":e=Ic(Sc.DayPeriods,cc.Narrow,uc.Format,!0);break;case"h":e=Pc(Ac.Hours,1,-12);break;case"hh":e=Pc(Ac.Hours,2,-12);break;case"H":e=Pc(Ac.Hours,1);break;case"HH":e=Pc(Ac.Hours,2);break;case"m":e=Pc(Ac.Minutes,1);break;case"mm":e=Pc(Ac.Minutes,2);break;case"s":e=Pc(Ac.Seconds,1);break;case"ss":e=Pc(Ac.Seconds,2);break;case"S":e=Pc(Ac.FractionalSeconds,1);break;case"SS":e=Pc(Ac.FractionalSeconds,2);break;case"SSS":e=Pc(Ac.FractionalSeconds,3);break;case"Z":case"ZZ":case"ZZZ":e=Rc(Dc.Short);break;case"ZZZZZ":e=Rc(Dc.Extended);break;case"O":case"OO":case"OOO":case"z":case"zz":case"zzz":e=Rc(Dc.ShortGMT);break;case"OOOO":case"ZZZZ":case"zzzz":e=Rc(Dc.Long);break;default:return null}return Nc[t]=e,e}(t);l+=e?e(s,n,a):"''"===t?"'":t.replace(/(^'|'$)/g,"").replace(/''/g,"'")}),l}function kc(t,e,n){const r=new Date(0);return r.setFullYear(t,e,n),r.setHours(0,0,0),r}function Tc(t,e){const n=function(t){return Jo(t)[ea.LocaleId]}(t);if(Cc[n]=Cc[n]||{},Cc[n][e])return Cc[n][e];let r="";switch(e){case"shortDate":r=pc(t,hc.Short);break;case"mediumDate":r=pc(t,hc.Medium);break;case"longDate":r=pc(t,hc.Long);break;case"fullDate":r=pc(t,hc.Full);break;case"shortTime":r=fc(t,hc.Short);break;case"mediumTime":r=fc(t,hc.Medium);break;case"longTime":r=fc(t,hc.Long);break;case"fullTime":r=fc(t,hc.Full);break;case"short":const e=Tc(t,"shortTime"),n=Tc(t,"shortDate");r=Oc(gc(t,hc.Short),[e,n]);break;case"medium":const s=Tc(t,"mediumTime"),i=Tc(t,"mediumDate");r=Oc(gc(t,hc.Medium),[s,i]);break;case"long":const o=Tc(t,"longTime"),a=Tc(t,"longDate");r=Oc(gc(t,hc.Long),[o,a]);break;case"full":const l=Tc(t,"fullTime"),u=Tc(t,"fullDate");r=Oc(gc(t,hc.Full),[l,u])}return r&&(Cc[n][e]=r),r}function Oc(t,e){return e&&(t=t.replace(/\{([^}]+)}/g,function(t,n){return null!=e&&n in e?e[n]:t})),t}function Fc(t,e,n="-",r,s){let i="";(t<0||s&&t<=0)&&(s?t=1-t:(t=-t,i=n));let o=String(t);for(;o.length<e;)o="0"+o;return r&&(o=o.substr(o.length-e)),i+o}function Pc(t,e,n=0,r=!1,s=!1){return function(i,o){let a=function(t,e){switch(t){case Ac.FullYear:return e.getFullYear();case Ac.Month:return e.getMonth();case Ac.Date:return e.getDate();case Ac.Hours:return e.getHours();case Ac.Minutes:return e.getMinutes();case Ac.Seconds:return e.getSeconds();case Ac.FractionalSeconds:return e.getMilliseconds();case Ac.Day:return e.getDay();default:throw new Error(`Unknown DateType value "${t}".`)}}(t,i);if((n>0||a>-n)&&(a+=n),t===Ac.Hours)0===a&&-12===n&&(a=12);else if(t===Ac.FractionalSeconds)return l=e,Fc(a,3).substr(0,l);var l;const u=mc(o,dc.MinusSign);return Fc(a,e,u,r,s)}}function Ic(t,e,n=uc.Format,r=!1){return function(s,i){return function(t,e,n,r,s,i){switch(n){case Sc.Months:return function(t,e,n){const r=Jo(t),s=bc([r[ea.MonthsFormat],r[ea.MonthsStandalone]],e);return bc(s,n)}(e,s,r)[t.getMonth()];case Sc.Days:return function(t,e,n){const r=Jo(t),s=bc([r[ea.DaysFormat],r[ea.DaysStandalone]],e);return bc(s,n)}(e,s,r)[t.getDay()];case Sc.DayPeriods:const o=t.getHours(),a=t.getMinutes();if(i){const t=function(t){const e=Jo(t);return vc(e),(e[ea.ExtraData][2]||[]).map(t=>"string"==typeof t?_c(t):[_c(t[0]),_c(t[1])])}(e),n=function(t,e,n){const r=Jo(t);vc(r);const s=bc([r[ea.ExtraData][0],r[ea.ExtraData][1]],e)||[];return bc(s,n)||[]}(e,s,r),i=t.findIndex(t=>{if(Array.isArray(t)){const[e,n]=t,r=o>=e.hours&&a>=e.minutes,s=o<n.hours||o===n.hours&&a<n.minutes;if(e.hours<n.hours){if(r&&s)return!0}else if(r||s)return!0}else if(t.hours===o&&t.minutes===a)return!0;return!1});if(-1!==i)return n[i]}return function(t,e,n){const r=Jo(t),s=bc([r[ea.DayPeriodsFormat],r[ea.DayPeriodsStandalone]],e);return bc(s,n)}(e,s,r)[o<12?0:1];case Sc.Eras:return function(t,e){return bc(Jo(t)[ea.Eras],e)}(e,r)[t.getFullYear()<=0?0:1];default:throw new Error(`unexpected translation type ${n}`)}}(s,i,t,e,n,r)}}function Rc(t){return function(e,n,r){const s=-1*r,i=mc(n,dc.MinusSign),o=s>0?Math.floor(s/60):Math.ceil(s/60);switch(t){case Dc.Short:return(s>=0?"+":"")+Fc(o,2,i)+Fc(Math.abs(s%60),2,i);case Dc.ShortGMT:return"GMT"+(s>=0?"+":"")+Fc(o,1,i);case Dc.Long:return"GMT"+(s>=0?"+":"")+Fc(o,2,i)+":"+Fc(Math.abs(s%60),2,i);case Dc.Extended:return 0===r?"Z":(s>=0?"+":"")+Fc(o,2,i)+":"+Fc(Math.abs(s%60),2,i);default:throw new Error(`Unknown zone width "${t}"`)}}}function Mc(t){return kc(t.getFullYear(),t.getMonth(),t.getDate()+(4-t.getDay()))}function Vc(t,e=!1){return function(n,r){let s;if(e){const t=new Date(n.getFullYear(),n.getMonth(),1).getDay()-1,e=n.getDate();s=1+Math.floor((e+t)/7)}else{const t=Mc(n),e=function(t){const e=kc(t,0,1).getDay();return kc(t,0,1+(e<=4?4:11)-e)}(t.getFullYear()),r=t.getTime()-e.getTime();s=1+Math.round(r/6048e5)}return Fc(s,t,mc(r,dc.MinusSign))}}function jc(t,e=!1){return function(n,r){return Fc(Mc(n).getFullYear(),t,mc(r,dc.MinusSign),e)}}const Nc={};function Lc(t,e){t=t.replace(/:/g,"");const n=Date.parse("Jan 01, 1970 00:00:00 "+t)/6e4;return isNaN(n)?e:n}function Bc(t){return t instanceof Date&&!isNaN(t.valueOf())}const Uc=/^(\d+)?\.((\d+)(-(\d+))?)?$/,Hc=".",$c="0";function zc(t,e,n,r,s,i,o=!1){let a="",l=!1;if(isFinite(t)){let u=function(t){let e,n,r,s,i,o=Math.abs(t)+"",a=0;for((n=o.indexOf(Hc))>-1&&(o=o.replace(Hc,"")),(r=o.search(/e/i))>0?(n<0&&(n=r),n+=+o.slice(r+1),o=o.substring(0,r)):n<0&&(n=o.length),r=0;o.charAt(r)===$c;r++);if(r===(i=o.length))e=[0],n=1;else{for(i--;o.charAt(i)===$c;)i--;for(n-=r,e=[],s=0;r<=i;r++,s++)e[s]=Number(o.charAt(r))}return n>22&&(e=e.splice(0,21),a=n-1,n=1),{digits:e,exponent:a,integerLen:n}}(t);o&&(u=function(t){if(0===t.digits[0])return t;const e=t.digits.length-t.integerLen;return t.exponent?t.exponent+=2:(0===e?t.digits.push(0,0):1===e&&t.digits.push(0),t.integerLen+=2),t}(u));let c=e.minInt,h=e.minFrac,d=e.maxFrac;if(i){const t=i.match(Uc);if(null===t)throw new Error(`${i} is not a valid digit info`);const e=t[1],n=t[3],r=t[5];null!=e&&(c=Wc(e)),null!=n&&(h=Wc(n)),null!=r?d=Wc(r):null!=n&&h>d&&(d=h)}!function(t,e,n){if(e>n)throw new Error(`The minimum number of digits after fraction (${e}) is higher than the maximum (${n}).`);let r=t.digits,s=r.length-t.integerLen;const i=Math.min(Math.max(e,s),n);let o=i+t.integerLen,a=r[o];if(o>0){r.splice(Math.max(t.integerLen,o));for(let t=o;t<r.length;t++)r[t]=0}else{s=Math.max(0,s),t.integerLen=1,r.length=Math.max(1,o=i+1),r[0]=0;for(let t=1;t<o;t++)r[t]=0}if(a>=5)if(o-1<0){for(let e=0;e>o;e--)r.unshift(0),t.integerLen++;r.unshift(1),t.integerLen++}else r[o-1]++;for(;s<Math.max(0,i);s++)r.push(0);let l=0!==i;const u=e+t.integerLen,c=r.reduceRight(function(t,e,n,r){return r[n]=(e+=t)<10?e:e-10,l&&(0===r[n]&&n>=u?r.pop():l=!1),e>=10?1:0},0);c&&(r.unshift(c),t.integerLen++)}(u,h,d);let p=u.digits,f=u.integerLen;const g=u.exponent;let m=[];for(l=p.every(t=>!t);f<c;f++)p.unshift(0);for(;f<0;f++)p.unshift(0);f>0?m=p.splice(f,p.length):(m=p,p=[0]);const y=[];for(p.length>=e.lgSize&&y.unshift(p.splice(-e.lgSize,p.length).join(""));p.length>e.gSize;)y.unshift(p.splice(-e.gSize,p.length).join(""));p.length&&y.unshift(p.join("")),a=y.join(mc(n,r)),m.length&&(a+=mc(n,s)+m.join("")),g&&(a+=mc(n,dc.Exponential)+"+"+g)}else a=mc(n,dc.Infinity);return a=t<0&&!l?e.negPre+a+e.negSuf:e.posPre+a+e.posSuf,a}function qc(t,e="-"){const n={minInt:1,minFrac:0,maxFrac:0,posPre:"",posSuf:"",negPre:"",negSuf:"",gSize:0,lgSize:0},r=t.split(";"),s=r[0],i=r[1],o=-1!==s.indexOf(Hc)?s.split(Hc):[s.substring(0,s.lastIndexOf($c)+1),s.substring(s.lastIndexOf($c)+1)],a=o[0],l=o[1]||"";n.posPre=a.substr(0,a.indexOf("#"));for(let c=0;c<l.length;c++){const t=l.charAt(c);t===$c?n.minFrac=n.maxFrac=c+1:"#"===t?n.maxFrac=c+1:n.posSuf+=t}const u=a.split(",");if(n.gSize=u[1]?u[1].length:0,n.lgSize=u[2]||u[1]?(u[2]||u[1]).length:0,i){const t=s.length-n.posPre.length-n.posSuf.length,e=i.indexOf("#");n.negPre=i.substr(0,e).replace(/'/g,""),n.negSuf=i.substr(e+t).replace(/'/g,"")}else n.negPre=e+n.posPre,n.negSuf=n.posSuf;return n}function Wc(t){const e=parseInt(t);if(isNaN(e))throw new Error("Invalid integer literal when parsing "+t);return e}class Gc{}let Zc=(()=>{class t extends Gc{constructor(t){super(),this.locale=t}getPluralCategory(t,e){switch(function(t){return Jo(t)[ea.PluralCase]}(e||this.locale)(t)){case lc.Zero:return"zero";case lc.One:return"one";case lc.Two:return"two";case lc.Few:return"few";case lc.Many:return"many";default:return"other"}}}return t.\u0275fac=function(e){return new(e||t)(ar(Xl))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function Kc(t,e){e=encodeURIComponent(e);for(const n of t.split(";")){const t=n.indexOf("="),[r,s]=-1==t?[n,""]:[n.slice(0,t),n.slice(t+1)];if(r.trim()===e)return decodeURIComponent(s)}return null}let Yc=(()=>{class t{constructor(t,e,n,r){this._iterableDiffers=t,this._keyValueDiffers=e,this._ngEl=n,this._renderer=r,this._iterableDiffer=null,this._keyValueDiffer=null,this._initialClasses=[],this._rawClass=null}set klass(t){this._removeClasses(this._initialClasses),this._initialClasses="string"==typeof t?t.split(/\s+/):[],this._applyClasses(this._initialClasses),this._applyClasses(this._rawClass)}set ngClass(t){this._removeClasses(this._rawClass),this._applyClasses(this._initialClasses),this._iterableDiffer=null,this._keyValueDiffer=null,this._rawClass="string"==typeof t?t.split(/\s+/):t,this._rawClass&&(no(this._rawClass)?this._iterableDiffer=this._iterableDiffers.find(this._rawClass).create():this._keyValueDiffer=this._keyValueDiffers.find(this._rawClass).create())}ngDoCheck(){if(this._iterableDiffer){const t=this._iterableDiffer.diff(this._rawClass);t&&this._applyIterableChanges(t)}else if(this._keyValueDiffer){const t=this._keyValueDiffer.diff(this._rawClass);t&&this._applyKeyValueChanges(t)}}_applyKeyValueChanges(t){t.forEachAddedItem(t=>this._toggleClass(t.key,t.currentValue)),t.forEachChangedItem(t=>this._toggleClass(t.key,t.currentValue)),t.forEachRemovedItem(t=>{t.previousValue&&this._toggleClass(t.key,!1)})}_applyIterableChanges(t){t.forEachAddedItem(t=>{if("string"!=typeof t.item)throw new Error(`NgClass can only toggle CSS classes expressed as strings, got ${et(t.item)}`);this._toggleClass(t.item,!0)}),t.forEachRemovedItem(t=>this._toggleClass(t.item,!1))}_applyClasses(t){t&&(Array.isArray(t)||t instanceof Set?t.forEach(t=>this._toggleClass(t,!0)):Object.keys(t).forEach(e=>this._toggleClass(e,!!t[e])))}_removeClasses(t){t&&(Array.isArray(t)||t instanceof Set?t.forEach(t=>this._toggleClass(t,!1)):Object.keys(t).forEach(t=>this._toggleClass(t,!1)))}_toggleClass(t,e){(t=t.trim())&&t.split(/\s+/g).forEach(t=>{e?this._renderer.addClass(this._ngEl.nativeElement,t):this._renderer.removeClass(this._ngEl.nativeElement,t)})}}return t.\u0275fac=function(e){return new(e||t)(ho(Na),ho(Ba),ho(ba),ho(Ca))},t.\u0275dir=Zt({type:t,selectors:[["","ngClass",""]],inputs:{klass:["class","klass"],ngClass:"ngClass"}}),t})();class Qc{constructor(t,e,n,r){this.$implicit=t,this.ngForOf=e,this.index=n,this.count=r}get first(){return 0===this.index}get last(){return this.index===this.count-1}get even(){return this.index%2==0}get odd(){return!this.even}}let Xc=(()=>{class t{constructor(t,e,n){this._viewContainer=t,this._template=e,this._differs=n,this._ngForOf=null,this._ngForOfDirty=!0,this._differ=null}set ngForOf(t){this._ngForOf=t,this._ngForOfDirty=!0}set ngForTrackBy(t){this._trackByFn=t}get ngForTrackBy(){return this._trackByFn}set ngForTemplate(t){t&&(this._template=t)}ngDoCheck(){if(this._ngForOfDirty){this._ngForOfDirty=!1;const n=this._ngForOf;if(!this._differ&&n)try{this._differ=this._differs.find(n).create(this.ngForTrackBy)}catch(e){throw new Error(`Cannot find a differ supporting object '${n}' of type '${t=n,t.name||typeof t}'. NgFor only supports binding to Iterables such as Arrays.`)}}var t;if(this._differ){const t=this._differ.diff(this._ngForOf);t&&this._applyChanges(t)}}_applyChanges(t){const e=[];t.forEachOperation((t,n,r)=>{if(null==t.previousIndex){const n=this._viewContainer.createEmbeddedView(this._template,new Qc(null,this._ngForOf,-1,-1),null===r?void 0:r),s=new Jc(t,n);e.push(s)}else if(null==r)this._viewContainer.remove(null===n?void 0:n);else if(null!==n){const s=this._viewContainer.get(n);this._viewContainer.move(s,r);const i=new Jc(t,s);e.push(i)}});for(let n=0;n<e.length;n++)this._perViewChange(e[n].view,e[n].record);for(let n=0,r=this._viewContainer.length;n<r;n++){const t=this._viewContainer.get(n);t.context.index=n,t.context.count=r,t.context.ngForOf=this._ngForOf}t.forEachIdentityChange(t=>{this._viewContainer.get(t.currentIndex).context.$implicit=t.item})}_perViewChange(t,e){t.context.$implicit=e.item}static ngTemplateContextGuard(t,e){return!0}}return t.\u0275fac=function(e){return new(e||t)(ho(rl),ho(Ya),ho(Na))},t.\u0275dir=Zt({type:t,selectors:[["","ngFor","","ngForOf",""]],inputs:{ngForOf:"ngForOf",ngForTrackBy:"ngForTrackBy",ngForTemplate:"ngForTemplate"}}),t})();class Jc{constructor(t,e){this.record=t,this.view=e}}let th=(()=>{class t{constructor(t,e){this._viewContainer=t,this._context=new eh,this._thenTemplateRef=null,this._elseTemplateRef=null,this._thenViewRef=null,this._elseViewRef=null,this._thenTemplateRef=e}set ngIf(t){this._context.$implicit=this._context.ngIf=t,this._updateView()}set ngIfThen(t){nh("ngIfThen",t),this._thenTemplateRef=t,this._thenViewRef=null,this._updateView()}set ngIfElse(t){nh("ngIfElse",t),this._elseTemplateRef=t,this._elseViewRef=null,this._updateView()}_updateView(){this._context.$implicit?this._thenViewRef||(this._viewContainer.clear(),this._elseViewRef=null,this._thenTemplateRef&&(this._thenViewRef=this._viewContainer.createEmbeddedView(this._thenTemplateRef,this._context))):this._elseViewRef||(this._viewContainer.clear(),this._thenViewRef=null,this._elseTemplateRef&&(this._elseViewRef=this._viewContainer.createEmbeddedView(this._elseTemplateRef,this._context)))}static ngTemplateContextGuard(t,e){return!0}}return t.\u0275fac=function(e){return new(e||t)(ho(rl),ho(Ya))},t.\u0275dir=Zt({type:t,selectors:[["","ngIf",""]],inputs:{ngIf:"ngIf",ngIfThen:"ngIfThen",ngIfElse:"ngIfElse"}}),t})();class eh{constructor(){this.$implicit=null,this.ngIf=null}}function nh(t,e){if(e&&!e.createEmbeddedView)throw new Error(`${t} must be a TemplateRef, but received '${et(e)}'.`)}let rh=(()=>{class t{constructor(t){this._viewContainerRef=t,this._viewRef=null,this.ngTemplateOutletContext=null,this.ngTemplateOutlet=null}ngOnChanges(t){if(t.ngTemplateOutlet){const t=this._viewContainerRef;this._viewRef&&t.remove(t.indexOf(this._viewRef)),this._viewRef=this.ngTemplateOutlet?t.createEmbeddedView(this.ngTemplateOutlet,this.ngTemplateOutletContext):null}else this._viewRef&&t.ngTemplateOutletContext&&this.ngTemplateOutletContext&&(this._viewRef.context=this.ngTemplateOutletContext)}}return t.\u0275fac=function(e){return new(e||t)(ho(rl))},t.\u0275dir=Zt({type:t,selectors:[["","ngTemplateOutlet",""]],inputs:{ngTemplateOutletContext:"ngTemplateOutletContext",ngTemplateOutlet:"ngTemplateOutlet"},features:[le]}),t})();function sh(t,e){return Error(`InvalidPipeArgument: '${e}' for pipe '${et(t)}'`)}const ih=/(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D])\S*/g;let oh=(()=>{class t{transform(e){if(null==e)return null;if("string"!=typeof e)throw sh(t,e);return e.replace(ih,t=>t[0].toUpperCase()+t.substr(1).toLowerCase())}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275pipe=Kt({name:"titlecase",type:t,pure:!0}),t})(),ah=(()=>{class t{constructor(t){this.locale=t}transform(e,n="mediumDate",r,s){if(null==e||""===e||e!=e)return null;try{return xc(e,n,s||this.locale,r)}catch(i){throw sh(t,i.message)}}}return t.\u0275fac=function(e){return new(e||t)(ho(Xl,16))},t.\u0275pipe=Kt({name:"date",type:t,pure:!0}),t})(),lh=(()=>{class t{constructor(t){this._locale=t}transform(e,n,r){if(!ch(e))return null;r=r||this._locale;try{return function(t,e,n){return zc(t,qc(yc(e,ac.Decimal),mc(e,dc.MinusSign)),e,dc.Group,dc.Decimal,n)}(hh(e),r,n)}catch(s){throw sh(t,s.message)}}}return t.\u0275fac=function(e){return new(e||t)(ho(Xl,16))},t.\u0275pipe=Kt({name:"number",type:t,pure:!0}),t})(),uh=(()=>{class t{constructor(t,e="USD"){this._locale=t,this._defaultCurrencyCode=e}transform(e,n=this._defaultCurrencyCode,r="symbol",s,i){if(!ch(e))return null;i=i||this._locale,"boolean"==typeof r&&(r=r?"symbol":"code");let o=n||this._defaultCurrencyCode;"code"!==r&&(o="symbol"===r||"symbol-narrow"===r?function(t,e,n="en"){const r=function(t){return Jo(t)[ea.Currencies]}(n)[t]||oc[t]||[],s=r[1];return"narrow"===e&&"string"==typeof s?s:r[0]||t}(o,"symbol"===r?"wide":"narrow",i):r);try{return function(t,e,n,r,s){const i=qc(yc(e,ac.Currency),mc(e,dc.MinusSign));return i.minFrac=function(t){let e;const n=oc[t];return n&&(e=n[2]),"number"==typeof e?e:2}(r),i.maxFrac=i.minFrac,zc(t,i,e,dc.CurrencyGroup,dc.CurrencyDecimal,s).replace("\xa4",n).replace("\xa4","").trim()}(hh(e),i,o,n,s)}catch(a){throw sh(t,a.message)}}}return t.\u0275fac=function(e){return new(e||t)(ho(Xl,16),ho(Jl,16))},t.\u0275pipe=Kt({name:"currency",type:t,pure:!0}),t})();function ch(t){return!(null==t||""===t||t!=t)}function hh(t){if("string"==typeof t&&!isNaN(Number(t)-parseFloat(t)))return Number(t);if("number"!=typeof t)throw new Error(`${t} is not a number`);return t}let dh=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[{provide:Gc,useClass:Zc}]}),t})(),ph=(()=>{class t{}return t.\u0275prov=ht({token:t,providedIn:"root",factory:()=>new fh(ar(Hu),window)}),t})();class fh{constructor(t,e){this.document=t,this.window=e,this.offset=()=>[0,0]}setOffset(t){this.offset=Array.isArray(t)?()=>t:t}getScrollPosition(){return this.supportsScrolling()?[this.window.pageXOffset,this.window.pageYOffset]:[0,0]}scrollToPosition(t){this.supportsScrolling()&&this.window.scrollTo(t[0],t[1])}scrollToAnchor(t){if(!this.supportsScrolling())return;const e=function(t,e){const n=t.getElementById(e)||t.getElementsByName(e)[0];if(n)return n;if("function"==typeof t.createTreeWalker&&t.body&&(t.body.createShadowRoot||t.body.attachShadow)){const n=t.createTreeWalker(t.body,NodeFilter.SHOW_ELEMENT);let r=n.currentNode;for(;r;){const t=r.shadowRoot;if(t){const n=t.getElementById(e)||t.querySelector(`[name="${e}"]`);if(n)return n}r=n.nextNode()}}return null}(this.document,t);e&&(this.scrollToElement(e),this.attemptFocus(e))}setHistoryScrollRestoration(t){if(this.supportScrollRestoration()){const e=this.window.history;e&&e.scrollRestoration&&(e.scrollRestoration=t)}}scrollToElement(t){const e=t.getBoundingClientRect(),n=e.left+this.window.pageXOffset,r=e.top+this.window.pageYOffset,s=this.offset();this.window.scrollTo(n-s[0],r-s[1])}attemptFocus(t){return t.focus(),this.document.activeElement===t}supportScrollRestoration(){try{if(!this.supportsScrolling())return!1;const t=gh(this.window.history)||gh(Object.getPrototypeOf(this.window.history));return!(!t||!t.writable&&!t.set)}catch(t){return!1}}supportsScrolling(){try{return!!this.window&&!!this.window.scrollTo&&"pageXOffset"in this.window}catch(t){return!1}}}function gh(t){return Object.getOwnPropertyDescriptor(t,"scrollRestoration")}class mh{}class yh extends class extends class{}{constructor(){super(...arguments),this.supportsDOMEvents=!0}}{static makeCurrent(){var t;t=new yh,Bu||(Bu=t)}onAndCancel(t,e,n){return t.addEventListener(e,n,!1),()=>{t.removeEventListener(e,n,!1)}}dispatchEvent(t,e){t.dispatchEvent(e)}remove(t){t.parentNode&&t.parentNode.removeChild(t)}createElement(t,e){return(e=e||this.getDefaultDocument()).createElement(t)}createHtmlDocument(){return document.implementation.createHTMLDocument("fakeTitle")}getDefaultDocument(){return document}isElementNode(t){return t.nodeType===Node.ELEMENT_NODE}isShadowRoot(t){return t instanceof DocumentFragment}getGlobalEventTarget(t,e){return"window"===e?window:"document"===e?t:"body"===e?t.body:null}getBaseHref(t){const e=(bh=bh||document.querySelector("base"),bh?bh.getAttribute("href"):null);return null==e?null:function(t){vh=vh||document.createElement("a"),vh.setAttribute("href",t);const e=vh.pathname;return"/"===e.charAt(0)?e:`/${e}`}(e)}resetBaseElement(){bh=null}getUserAgent(){return window.navigator.userAgent}getCookie(t){return Kc(document.cookie,t)}}let vh,bh=null;const _h=new $n("TRANSITION_ID"),wh=[{provide:$l,useFactory:function(t,e,n){return()=>{n.get(zl).donePromise.then(()=>{const n=Uu();Array.prototype.slice.apply(e.querySelectorAll("style[ng-transition]")).filter(e=>e.getAttribute("ng-transition")===t).forEach(t=>n.remove(t))})}},deps:[_h,Hu,Gi],multi:!0}];class Ch{static init(){!function(t){wu=t}(new Ch)}addToWindow(t){Ft.getAngularTestability=(e,n=!0)=>{const r=t.findTestabilityInTree(e,n);if(null==r)throw new Error("Could not find testability for element.");return r},Ft.getAllAngularTestabilities=()=>t.getAllTestabilities(),Ft.getAllAngularRootElements=()=>t.getAllRootElements(),Ft.frameworkStabilizers||(Ft.frameworkStabilizers=[]),Ft.frameworkStabilizers.push(t=>{const e=Ft.getAllAngularTestabilities();let n=e.length,r=!1;const s=function(e){r=r||e,n--,0==n&&t(r)};e.forEach(function(t){t.whenStable(s)})})}findTestabilityInTree(t,e,n){if(null==e)return null;const r=t.getTestability(e);return null!=r?r:n?Uu().isShadowRoot(e)?this.findTestabilityInTree(t,e.host,!0):this.findTestabilityInTree(t,e.parentElement,!0):null}}let Eh=(()=>{class t{build(){return new XMLHttpRequest}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const Dh=new $n("EventManagerPlugins");let Ah=(()=>{class t{constructor(t,e){this._zone=e,this._eventNameToPlugin=new Map,t.forEach(t=>t.manager=this),this._plugins=t.slice().reverse()}addEventListener(t,e,n){return this._findPluginFor(e).addEventListener(t,e,n)}addGlobalEventListener(t,e,n){return this._findPluginFor(e).addGlobalEventListener(t,e,n)}getZone(){return this._zone}_findPluginFor(t){const e=this._eventNameToPlugin.get(t);if(e)return e;const n=this._plugins;for(let r=0;r<n.length;r++){const e=n[r];if(e.supports(t))return this._eventNameToPlugin.set(t,e),e}throw new Error(`No event manager plugin found for event ${t}`)}}return t.\u0275fac=function(e){return new(e||t)(ar(Dh),ar(cu))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();class Sh{constructor(t){this._doc=t}addGlobalEventListener(t,e,n){const r=Uu().getGlobalEventTarget(this._doc,t);if(!r)throw new Error(`Unsupported event target ${r} for event ${e}`);return this.addEventListener(r,e,n)}}let xh=(()=>{class t{constructor(){this._stylesSet=new Set}addStyles(t){const e=new Set;t.forEach(t=>{this._stylesSet.has(t)||(this._stylesSet.add(t),e.add(t))}),this.onStylesAdded(e)}onStylesAdded(t){}getAllStyles(){return Array.from(this._stylesSet)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),kh=(()=>{class t extends xh{constructor(t){super(),this._doc=t,this._hostNodes=new Map,this._hostNodes.set(t.head,[])}_addStylesToHost(t,e,n){t.forEach(t=>{const r=this._doc.createElement("style");r.textContent=t,n.push(e.appendChild(r))})}addHost(t){const e=[];this._addStylesToHost(this._stylesSet,t,e),this._hostNodes.set(t,e)}removeHost(t){const e=this._hostNodes.get(t);e&&e.forEach(Th),this._hostNodes.delete(t)}onStylesAdded(t){this._hostNodes.forEach((e,n)=>{this._addStylesToHost(t,n,e)})}ngOnDestroy(){this._hostNodes.forEach(t=>t.forEach(Th))}}return t.\u0275fac=function(e){return new(e||t)(ar(Hu))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function Th(t){Uu().remove(t)}const Oh={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},Fh=/%COMP%/g;function Ph(t,e,n){for(let r=0;r<e.length;r++){let s=e[r];Array.isArray(s)?Ph(t,s,n):(s=s.replace(Fh,t),n.push(s))}return n}function Ih(t){return e=>{if("__ngUnwrap__"===e)return t;!1===t(e)&&(e.preventDefault(),e.returnValue=!1)}}let Rh=(()=>{class t{constructor(t,e,n){this.eventManager=t,this.sharedStylesHost=e,this.appId=n,this.rendererByCompId=new Map,this.defaultRenderer=new Mh(t)}createRenderer(t,e){if(!t||!e)return this.defaultRenderer;switch(e.encapsulation){case St.Emulated:{let n=this.rendererByCompId.get(e.id);return n||(n=new Vh(this.eventManager,this.sharedStylesHost,e,this.appId),this.rendererByCompId.set(e.id,n)),n.applyToHost(t),n}case 1:case St.ShadowDom:return new jh(this.eventManager,this.sharedStylesHost,t,e);default:if(!this.rendererByCompId.has(e.id)){const t=Ph(e.id,e.styles,[]);this.sharedStylesHost.addStyles(t),this.rendererByCompId.set(e.id,this.defaultRenderer)}return this.defaultRenderer}}begin(){}end(){}}return t.\u0275fac=function(e){return new(e||t)(ar(Ah),ar(kh),ar(ql))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();class Mh{constructor(t){this.eventManager=t,this.data=Object.create(null)}destroy(){}createElement(t,e){return e?document.createElementNS(Oh[e]||e,t):document.createElement(t)}createComment(t){return document.createComment(t)}createText(t){return document.createTextNode(t)}appendChild(t,e){t.appendChild(e)}insertBefore(t,e,n){t&&t.insertBefore(e,n)}removeChild(t,e){t&&t.removeChild(e)}selectRootElement(t,e){let n="string"==typeof t?document.querySelector(t):t;if(!n)throw new Error(`The selector "${t}" did not match any elements`);return e||(n.textContent=""),n}parentNode(t){return t.parentNode}nextSibling(t){return t.nextSibling}setAttribute(t,e,n,r){if(r){e=r+":"+e;const s=Oh[r];s?t.setAttributeNS(s,e,n):t.setAttribute(e,n)}else t.setAttribute(e,n)}removeAttribute(t,e,n){if(n){const r=Oh[n];r?t.removeAttributeNS(r,e):t.removeAttribute(`${n}:${e}`)}else t.removeAttribute(e)}addClass(t,e){t.classList.add(e)}removeClass(t,e){t.classList.remove(e)}setStyle(t,e,n,r){r&(Qr.DashCase|Qr.Important)?t.style.setProperty(e,n,r&Qr.Important?"important":""):t.style[e]=n}removeStyle(t,e,n){n&Qr.DashCase?t.style.removeProperty(e):t.style[e]=""}setProperty(t,e,n){t[e]=n}setValue(t,e){t.nodeValue=e}listen(t,e,n){return"string"==typeof t?this.eventManager.addGlobalEventListener(t,e,Ih(n)):this.eventManager.addEventListener(t,e,Ih(n))}}class Vh extends Mh{constructor(t,e,n,r){super(t),this.component=n;const s=Ph(r+"-"+n.id,n.styles,[]);e.addStyles(s),this.contentAttr="_ngcontent-%COMP%".replace(Fh,r+"-"+n.id),this.hostAttr="_nghost-%COMP%".replace(Fh,r+"-"+n.id)}applyToHost(t){super.setAttribute(t,this.hostAttr,"")}createElement(t,e){const n=super.createElement(t,e);return super.setAttribute(n,this.contentAttr,""),n}}class jh extends Mh{constructor(t,e,n,r){super(t),this.sharedStylesHost=e,this.hostEl=n,this.shadowRoot=n.attachShadow({mode:"open"}),this.sharedStylesHost.addHost(this.shadowRoot);const s=Ph(r.id,r.styles,[]);for(let i=0;i<s.length;i++){const t=document.createElement("style");t.textContent=s[i],this.shadowRoot.appendChild(t)}}nodeOrShadowRoot(t){return t===this.hostEl?this.shadowRoot:t}destroy(){this.sharedStylesHost.removeHost(this.shadowRoot)}appendChild(t,e){return super.appendChild(this.nodeOrShadowRoot(t),e)}insertBefore(t,e,n){return super.insertBefore(this.nodeOrShadowRoot(t),e,n)}removeChild(t,e){return super.removeChild(this.nodeOrShadowRoot(t),e)}parentNode(t){return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(t)))}}let Nh=(()=>{class t extends Sh{constructor(t){super(t)}supports(t){return!0}addEventListener(t,e,n){return t.addEventListener(e,n,!1),()=>this.removeEventListener(t,e,n)}removeEventListener(t,e,n){return t.removeEventListener(e,n)}}return t.\u0275fac=function(e){return new(e||t)(ar(Hu))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const Lh=["alt","control","meta","shift"],Bh={"\b":"Backspace","\t":"Tab","\x7f":"Delete","\x1b":"Escape",Del:"Delete",Esc:"Escape",Left:"ArrowLeft",Right:"ArrowRight",Up:"ArrowUp",Down:"ArrowDown",Menu:"ContextMenu",Scroll:"ScrollLock",Win:"OS"},Uh={A:"1",B:"2",C:"3",D:"4",E:"5",F:"6",G:"7",H:"8",I:"9",J:"*",K:"+",M:"-",N:".",O:"/","`":"0","\x90":"NumLock"},Hh={alt:t=>t.altKey,control:t=>t.ctrlKey,meta:t=>t.metaKey,shift:t=>t.shiftKey};let $h=(()=>{class t extends Sh{constructor(t){super(t)}supports(e){return null!=t.parseEventName(e)}addEventListener(e,n,r){const s=t.parseEventName(n),i=t.eventCallback(s.fullKey,r,this.manager.getZone());return this.manager.getZone().runOutsideAngular(()=>Uu().onAndCancel(e,s.domEventName,i))}static parseEventName(e){const n=e.toLowerCase().split("."),r=n.shift();if(0===n.length||"keydown"!==r&&"keyup"!==r)return null;const s=t._normalizeKey(n.pop());let i="";if(Lh.forEach(t=>{const e=n.indexOf(t);e>-1&&(n.splice(e,1),i+=t+".")}),i+=s,0!=n.length||0===s.length)return null;const o={};return o.domEventName=r,o.fullKey=i,o}static getEventFullKey(t){let e="",n=function(t){let e=t.key;if(null==e){if(e=t.keyIdentifier,null==e)return"Unidentified";e.startsWith("U+")&&(e=String.fromCharCode(parseInt(e.substring(2),16)),3===t.location&&Uh.hasOwnProperty(e)&&(e=Uh[e]))}return Bh[e]||e}(t);return n=n.toLowerCase()," "===n?n="space":"."===n&&(n="dot"),Lh.forEach(r=>{r!=n&&(0,Hh[r])(t)&&(e+=r+".")}),e+=n,e}static eventCallback(e,n,r){return s=>{t.getEventFullKey(s)===e&&r.runGuarded(()=>n(s))}}static _normalizeKey(t){switch(t){case"esc":return"escape";default:return t}}}return t.\u0275fac=function(e){return new(e||t)(ar(Hu))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const zh=Su(ju,"browser",[{provide:Kl,useValue:"browser"},{provide:Zl,useValue:function(){yh.makeCurrent(),Ch.init()},multi:!0},{provide:Hu,useFactory:function(){return function(t){pe=t}(document),document},deps:[]}]),qh=[[],{provide:Ri,useValue:"root"},{provide:Zr,useFactory:function(){return new Zr},deps:[]},{provide:Dh,useClass:Nh,multi:!0,deps:[Hu,cu,Kl]},{provide:Dh,useClass:$h,multi:!0,deps:[Hu]},[],{provide:Rh,useClass:Rh,deps:[Ah,kh,ql]},{provide:wa,useExisting:Rh},{provide:xh,useExisting:kh},{provide:kh,useClass:kh,deps:[Hu]},{provide:yu,useClass:yu,deps:[cu]},{provide:Ah,useClass:Ah,deps:[Dh,cu]},{provide:mh,useClass:Eh,deps:[]},[]];let Wh=(()=>{class t{constructor(t){if(t)throw new Error("BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.")}static withServerTransition(e){return{ngModule:t,providers:[{provide:ql,useValue:e.appId},{provide:_h,useExisting:ql},wh]}}}return t.\u0275fac=function(e){return new(e||t)(ar(t,12))},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:qh,imports:[dh,Lu]}),t})();"undefined"!=typeof window&&window;class Gh extends h{constructor(t,e){super()}schedule(t,e=0){return this}}class Zh extends Gh{constructor(t,e){super(t,e),this.scheduler=t,this.work=e,this.pending=!1}schedule(t,e=0){if(this.closed)return this;this.state=t;const n=this.id,r=this.scheduler;return null!=n&&(this.id=this.recycleAsyncId(r,n,e)),this.pending=!0,this.delay=e,this.id=this.id||this.requestAsyncId(r,this.id,e),this}requestAsyncId(t,e,n=0){return setInterval(t.flush.bind(t,this),n)}recycleAsyncId(t,e,n=0){if(null!==n&&this.delay===n&&!1===this.pending)return e;clearInterval(e)}execute(t,e){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;const n=this._execute(t,e);if(n)return n;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))}_execute(t,e){let n,r=!1;try{this.work(t)}catch(s){r=!0,n=!!s&&s||new Error(s)}if(r)return this.unsubscribe(),n}_unsubscribe(){const t=this.id,e=this.scheduler,n=e.actions,r=n.indexOf(this);this.work=null,this.state=null,this.pending=!1,this.scheduler=null,-1!==r&&n.splice(r,1),null!=t&&(this.id=this.recycleAsyncId(e,t,null)),this.delay=null}}class Kh extends Zh{constructor(t,e){super(t,e),this.scheduler=t,this.work=e}schedule(t,e=0){return e>0?super.schedule(t,e):(this.delay=e,this.state=t,this.scheduler.flush(this),this)}execute(t,e){return e>0||this.closed?super.execute(t,e):this._execute(t,e)}requestAsyncId(t,e,n=0){return null!==n&&n>0||null===n&&this.delay>0?super.requestAsyncId(t,e,n):t.flush(this)}}let Yh=(()=>{class t{constructor(e,n=t.now){this.SchedulerAction=e,this.now=n}schedule(t,e=0,n){return new this.SchedulerAction(this,t).schedule(n,e)}}return t.now=()=>Date.now(),t})();class Qh extends Yh{constructor(t,e=Yh.now){super(t,()=>Qh.delegate&&Qh.delegate!==this?Qh.delegate.now():e()),this.actions=[],this.active=!1,this.scheduled=void 0}schedule(t,e=0,n){return Qh.delegate&&Qh.delegate!==this?Qh.delegate.schedule(t,e,n):super.schedule(t,e,n)}flush(t){const{actions:e}=this;if(this.active)return void e.push(t);let n;this.active=!0;do{if(n=t.execute(t.state,t.delay))break}while(t=e.shift());if(this.active=!1,n){for(;t=e.shift();)t.unsubscribe();throw n}}}class Xh extends Qh{}const Jh=new Xh(Kh),td=new v(t=>t.complete());function ed(t){return t?function(t){return new v(e=>t.schedule(()=>e.complete()))}(t):td}function nd(...t){let e=t[t.length-1];return A(e)?(t.pop(),M(t,e)):z(t)}function rd(t,e){return new v(e?n=>e.schedule(sd,0,{error:t,subscriber:n}):e=>e.error(t))}function sd({error:t,subscriber:e}){e.error(t)}let id=(()=>{class t{constructor(t,e,n){this.kind=t,this.value=e,this.error=n,this.hasValue="N"===t}observe(t){switch(this.kind){case"N":return t.next&&t.next(this.value);case"E":return t.error&&t.error(this.error);case"C":return t.complete&&t.complete()}}do(t,e,n){switch(this.kind){case"N":return t&&t(this.value);case"E":return e&&e(this.error);case"C":return n&&n()}}accept(t,e,n){return t&&"function"==typeof t.next?this.observe(t):this.do(t,e,n)}toObservable(){switch(this.kind){case"N":return nd(this.value);case"E":return rd(this.error);case"C":return ed()}throw new Error("unexpected notification kind value")}static createNext(e){return void 0!==e?new t("N",e):t.undefinedValueNotification}static createError(e){return new t("E",void 0,e)}static createComplete(){return t.completeNotification}}return t.completeNotification=new t("C"),t.undefinedValueNotification=new t("N",void 0),t})();class od extends f{constructor(t,e,n=0){super(t),this.scheduler=e,this.delay=n}static dispatch(t){const{notification:e,destination:n}=t;e.observe(n),this.unsubscribe()}scheduleMessage(t){this.destination.add(this.scheduler.schedule(od.dispatch,this.delay,new ad(t,this.destination)))}_next(t){this.scheduleMessage(id.createNext(t))}_error(t){this.scheduleMessage(id.createError(t)),this.unsubscribe()}_complete(){this.scheduleMessage(id.createComplete()),this.unsubscribe()}}class ad{constructor(t,e){this.notification=t,this.destination=e}}class ld extends E{constructor(t=Number.POSITIVE_INFINITY,e=Number.POSITIVE_INFINITY,n){super(),this.scheduler=n,this._events=[],this._infiniteTimeWindow=!1,this._bufferSize=t<1?1:t,this._windowTime=e<1?1:e,e===Number.POSITIVE_INFINITY?(this._infiniteTimeWindow=!0,this.next=this.nextInfiniteTimeWindow):this.next=this.nextTimeWindow}nextInfiniteTimeWindow(t){if(!this.isStopped){const e=this._events;e.push(t),e.length>this._bufferSize&&e.shift()}super.next(t)}nextTimeWindow(t){this.isStopped||(this._events.push(new ud(this._getNow(),t)),this._trimBufferThenGetEvents()),super.next(t)}_subscribe(t){const e=this._infiniteTimeWindow,n=e?this._events:this._trimBufferThenGetEvents(),r=this.scheduler,s=n.length;let i;if(this.closed)throw new _;if(this.isStopped||this.hasError?i=h.EMPTY:(this.observers.push(t),i=new w(this,t)),r&&t.add(t=new od(t,r)),e)for(let o=0;o<s&&!t.closed;o++)t.next(n[o]);else for(let o=0;o<s&&!t.closed;o++)t.next(n[o].value);return this.hasError?t.error(this.thrownError):this.isStopped&&t.complete(),i}_getNow(){return(this.scheduler||Jh).now()}_trimBufferThenGetEvents(){const t=this._getNow(),e=this._bufferSize,n=this._windowTime,r=this._events,s=r.length;let i=0;for(;i<s&&!(t-r[i].time<n);)i++;return s>e&&(i=Math.max(i,s-e)),i>0&&r.splice(0,i),r}}class ud{constructor(t,e){this.time=t,this.value=e}}function cd(t,e){return"function"==typeof e?n=>n.pipe(cd((n,r)=>V(t(n,r)).pipe(S((t,s)=>e(n,t,r,s))))):e=>e.lift(new hd(t))}class hd{constructor(t){this.project=t}call(t,e){return e.subscribe(new dd(t,this.project))}}class dd extends N{constructor(t,e){super(t),this.project=e,this.index=0}_next(t){let e;const n=this.index++;try{e=this.project(t,n)}catch(r){return void this.destination.error(r)}this._innerSub(e)}_innerSub(t){const e=this.innerSubscription;e&&e.unsubscribe();const n=new j(this),r=this.destination;r.add(n),this.innerSubscription=L(t,n),this.innerSubscription!==n&&r.add(this.innerSubscription)}_complete(){const{innerSubscription:t}=this;t&&!t.closed||super._complete(),this.unsubscribe()}_unsubscribe(){this.innerSubscription=void 0}notifyComplete(){this.innerSubscription=void 0,this.isStopped&&super._complete()}notifyNext(t){this.destination.next(t)}}const pd={schedule(t,e){const n=setTimeout(t,e);return()=>clearTimeout(n)},scheduleBeforeRender(t){if("undefined"==typeof window)return pd.schedule(t,0);if(void 0===window.requestAnimationFrame)return pd.schedule(t,16);const e=window.requestAnimationFrame(t);return()=>window.cancelAnimationFrame(e)}};let fd;function gd(t,e,n){let r=n;return function(t){return!!t&&t.nodeType===Node.ELEMENT_NODE}(t)&&e.some((e,n)=>!("*"===e||!function(t,e){if(!fd){const t=Element.prototype;fd=t.matches||t.matchesSelector||t.mozMatchesSelector||t.msMatchesSelector||t.oMatchesSelector||t.webkitMatchesSelector}return t.nodeType===Node.ELEMENT_NODE&&fd.call(t,e)}(t,e)||(r=n,0))),r}class md{constructor(t,e){this.componentFactory=e.get(ga).resolveComponentFactory(t)}create(t){return new yd(this.componentFactory,t)}}class yd{constructor(t,e){this.componentFactory=t,this.injector=e,this.eventEmitters=new ld(1),this.events=this.eventEmitters.pipe(cd(t=>q(...t))),this.componentRef=null,this.viewChangeDetectorRef=null,this.inputChanges=null,this.hasInputChanges=!1,this.implementsOnChanges=!1,this.scheduledChangeDetectionFn=null,this.scheduledDestroyFn=null,this.initialInputValues=new Map,this.unchangedInputs=new Set(this.componentFactory.inputs.map(({propName:t})=>t)),this.ngZone=this.injector.get(cu),this.elementZone="undefined"==typeof Zone?null:this.ngZone.run(()=>Zone.current)}connect(t){this.runInZone(()=>{if(null!==this.scheduledDestroyFn)return this.scheduledDestroyFn(),void(this.scheduledDestroyFn=null);null===this.componentRef&&this.initializeComponent(t)})}disconnect(){this.runInZone(()=>{null!==this.componentRef&&null===this.scheduledDestroyFn&&(this.scheduledDestroyFn=pd.schedule(()=>{null!==this.componentRef&&(this.componentRef.destroy(),this.componentRef=null,this.viewChangeDetectorRef=null)},10))})}getInputValue(t){return this.runInZone(()=>null===this.componentRef?this.initialInputValues.get(t):this.componentRef.instance[t])}setInputValue(t,e){this.runInZone(()=>{var n,r;null!==this.componentRef?((n=e)!==(r=this.getInputValue(t))&&(n==n||r==r)||void 0===e&&this.unchangedInputs.has(t))&&(this.recordInputChange(t,e),this.unchangedInputs.delete(t),this.hasInputChanges=!0,this.componentRef.instance[t]=e,this.scheduleDetectChanges()):this.initialInputValues.set(t,e)})}initializeComponent(t){const e=Gi.create({providers:[],parent:this.injector}),n=function(t,e){const n=t.childNodes,r=e.map(()=>[]);let s=-1;e.some((t,e)=>"*"===t&&(s=e,!0));for(let i=0,o=n.length;i<o;++i){const t=n[i],o=gd(t,e,s);-1!==o&&r[o].push(t)}return r}(t,this.componentFactory.ngContentSelectors);this.componentRef=this.componentFactory.create(e,n,t),this.viewChangeDetectorRef=this.componentRef.injector.get(qa),this.implementsOnChanges="function"==typeof this.componentRef.instance.ngOnChanges,this.initializeInputs(),this.initializeOutputs(this.componentRef),this.detectChanges(),this.injector.get(Ou).attachView(this.componentRef.hostView)}initializeInputs(){this.componentFactory.inputs.forEach(({propName:t})=>{this.initialInputValues.has(t)&&this.setInputValue(t,this.initialInputValues.get(t))}),this.initialInputValues.clear()}initializeOutputs(t){const e=this.componentFactory.outputs.map(({propName:e,templateName:n})=>t.instance[e].pipe(S(t=>({name:n,value:t}))));this.eventEmitters.next(e)}callNgOnChanges(t){if(!this.implementsOnChanges||null===this.inputChanges)return;const e=this.inputChanges;this.inputChanges=null,t.instance.ngOnChanges(e)}markViewForCheck(t){this.hasInputChanges&&(this.hasInputChanges=!1,t.markForCheck())}scheduleDetectChanges(){this.scheduledChangeDetectionFn||(this.scheduledChangeDetectionFn=pd.scheduleBeforeRender(()=>{this.scheduledChangeDetectionFn=null,this.detectChanges()}))}recordInputChange(t,e){if(!this.implementsOnChanges)return;null===this.inputChanges&&(this.inputChanges={});const n=this.inputChanges[t];if(n)return void(n.currentValue=e);const r=this.unchangedInputs.has(t),s=r?void 0:this.getInputValue(t);this.inputChanges[t]=new ae(s,e,r)}detectChanges(){null!==this.componentRef&&(this.callNgOnChanges(this.componentRef),this.markViewForCheck(this.viewChangeDetectorRef),this.componentRef.changeDetectorRef.detectChanges())}runInZone(t){return this.elementZone&&Zone.current!==this.elementZone?this.ngZone.run(t):t()}}class vd extends HTMLElement{constructor(){super(...arguments),this.ngElementEventsSubscription=null}}function bd(t,e){return new v(n=>{const r=t.length;if(0===r)return void n.complete();const s=new Array(r);let i=0,o=0;for(let a=0;a<r;a++){const l=V(t[a]);let u=!1;n.add(l.subscribe({next:t=>{u||(u=!0,o++),s[a]=t},error:t=>n.error(t),complete:()=>{i++,i!==r&&u||(o===r&&n.next(e?e.reduce((t,e,n)=>(t[e]=s[n],t),{}):s),n.complete())}}))}})}new Aa("12.0.5");let _d=(()=>{class t{constructor(t,e){this._renderer=t,this._elementRef=e,this.onChange=t=>{},this.onTouched=()=>{}}setProperty(t,e){this._renderer.setProperty(this._elementRef.nativeElement,t,e)}registerOnTouched(t){this.onTouched=t}registerOnChange(t){this.onChange=t}setDisabledState(t){this.setProperty("disabled",t)}}return t.\u0275fac=function(e){return new(e||t)(ho(Ca),ho(ba))},t.\u0275dir=Zt({type:t}),t})(),wd=(()=>{class t extends _d{}return t.\u0275fac=function(){let e;return function(n){return(e||(e=Ln(t)))(n||t)}}(),t.\u0275dir=Zt({type:t,features:[Ki]}),t})();const Cd=new $n("NgValueAccessor"),Ed={provide:Cd,useExisting:st(()=>Ad),multi:!0},Dd=new $n("CompositionEventMode");let Ad=(()=>{class t extends _d{constructor(t,e,n){super(t,e),this._compositionMode=n,this._composing=!1,null==this._compositionMode&&(this._compositionMode=!function(){const t=Uu()?Uu().getUserAgent():"";return/android (\d+)/.test(t.toLowerCase())}())}writeValue(t){this.setProperty("value",null==t?"":t)}_handleInput(t){(!this._compositionMode||this._compositionMode&&!this._composing)&&this.onChange(t)}_compositionStart(){this._composing=!0}_compositionEnd(t){this._composing=!1,this._compositionMode&&this.onChange(t)}}return t.\u0275fac=function(e){return new(e||t)(ho(Ca),ho(ba),ho(Dd,8))},t.\u0275dir=Zt({type:t,selectors:[["input","formControlName","",3,"type","checkbox"],["textarea","formControlName",""],["input","formControl","",3,"type","checkbox"],["textarea","formControl",""],["input","ngModel","",3,"type","checkbox"],["textarea","ngModel",""],["","ngDefaultControl",""]],hostBindings:function(t,e){1&t&&Co("input",function(t){return e._handleInput(t.target.value)})("blur",function(){return e.onTouched()})("compositionstart",function(){return e._compositionStart()})("compositionend",function(t){return e._compositionEnd(t.target.value)})},features:[da([Ed]),Ki]}),t})();const Sd=new $n("NgValidators"),xd=new $n("NgAsyncValidators");function kd(t){return null!=t}function Td(t){const e=_o(t)?V(t):t;return wo(e),e}function Od(t){let e={};return t.forEach(t=>{e=null!=t?Object.assign(Object.assign({},e),t):e}),0===Object.keys(e).length?null:e}function Fd(t,e){return e.map(e=>e(t))}function Pd(t){return t.map(t=>function(t){return!t.validate}(t)?t:e=>t.validate(e))}function Id(t){return null!=t?function(t){if(!t)return null;const e=t.filter(kd);return 0==e.length?null:function(t){return Od(Fd(t,e))}}(Pd(t)):null}function Rd(t){return null!=t?function(t){if(!t)return null;const e=t.filter(kd);return 0==e.length?null:function(t){return function(...t){if(1===t.length){const e=t[0];if(l(e))return bd(e,null);if(u(e)&&Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);return bd(t.map(t=>e[t]),t)}}if("function"==typeof t[t.length-1]){const e=t.pop();return bd(t=1===t.length&&l(t[0])?t[0]:t,null).pipe(S(t=>e(...t)))}return bd(t,null)}(Fd(t,e).map(Td)).pipe(S(Od))}}(Pd(t)):null}function Md(t,e){return null===t?[e]:Array.isArray(t)?[...t,e]:[t,e]}let Vd=(()=>{class t{constructor(){this._rawValidators=[],this._rawAsyncValidators=[],this._onDestroyCallbacks=[]}get value(){return this.control?this.control.value:null}get valid(){return this.control?this.control.valid:null}get invalid(){return this.control?this.control.invalid:null}get pending(){return this.control?this.control.pending:null}get disabled(){return this.control?this.control.disabled:null}get enabled(){return this.control?this.control.enabled:null}get errors(){return this.control?this.control.errors:null}get pristine(){return this.control?this.control.pristine:null}get dirty(){return this.control?this.control.dirty:null}get touched(){return this.control?this.control.touched:null}get status(){return this.control?this.control.status:null}get untouched(){return this.control?this.control.untouched:null}get statusChanges(){return this.control?this.control.statusChanges:null}get valueChanges(){return this.control?this.control.valueChanges:null}get path(){return null}_setValidators(t){this._rawValidators=t||[],this._composedValidatorFn=Id(this._rawValidators)}_setAsyncValidators(t){this._rawAsyncValidators=t||[],this._composedAsyncValidatorFn=Rd(this._rawAsyncValidators)}get validator(){return this._composedValidatorFn||null}get asyncValidator(){return this._composedAsyncValidatorFn||null}_registerOnDestroy(t){this._onDestroyCallbacks.push(t)}_invokeOnDestroyCallbacks(){this._onDestroyCallbacks.forEach(t=>t()),this._onDestroyCallbacks=[]}reset(t){this.control&&this.control.reset(t)}hasError(t,e){return!!this.control&&this.control.hasError(t,e)}getError(t,e){return this.control?this.control.getError(t,e):null}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Zt({type:t}),t})(),jd=(()=>{class t extends Vd{get formDirective(){return null}get path(){return null}}return t.\u0275fac=function(){let e;return function(n){return(e||(e=Ln(t)))(n||t)}}(),t.\u0275dir=Zt({type:t,features:[Ki]}),t})();class Nd extends Vd{constructor(){super(...arguments),this._parent=null,this.name=null,this.valueAccessor=null}}let Ld=(()=>{class t extends class{constructor(t){this._cd=t}is(t){var e,n;return!!(null===(n=null===(e=this._cd)||void 0===e?void 0:e.control)||void 0===n?void 0:n[t])}}{constructor(t){super(t)}}return t.\u0275fac=function(e){return new(e||t)(ho(Nd,2))},t.\u0275dir=Zt({type:t,selectors:[["","formControlName",""],["","ngModel",""],["","formControl",""]],hostVars:14,hostBindings:function(t,e){2&t&&Mo("ng-untouched",e.is("untouched"))("ng-touched",e.is("touched"))("ng-pristine",e.is("pristine"))("ng-dirty",e.is("dirty"))("ng-valid",e.is("valid"))("ng-invalid",e.is("invalid"))("ng-pending",e.is("pending"))},features:[Ki]}),t})();function Bd(t,e){t.forEach(t=>{t.registerOnValidatorChange&&t.registerOnValidatorChange(e)})}function Ud(t,e){t._pendingDirty&&t.markAsDirty(),t.setValue(t._pendingValue,{emitModelToViewChange:!1}),e.viewToModelUpdate(t._pendingValue),t._pendingChange=!1}function Hd(t,e){const n=t.indexOf(e);n>-1&&t.splice(n,1)}const $d="VALID",zd="INVALID",qd="PENDING",Wd="DISABLED";function Gd(t){return(Qd(t)?t.validators:t)||null}function Zd(t){return Array.isArray(t)?Id(t):t||null}function Kd(t,e){return(Qd(e)?e.asyncValidators:t)||null}function Yd(t){return Array.isArray(t)?Rd(t):t||null}function Qd(t){return null!=t&&!Array.isArray(t)&&"object"==typeof t}class Xd{constructor(t,e){this._hasOwnPendingAsyncValidator=!1,this._onCollectionChange=()=>{},this._parent=null,this.pristine=!0,this.touched=!1,this._onDisabledChange=[],this._rawValidators=t,this._rawAsyncValidators=e,this._composedValidatorFn=Zd(this._rawValidators),this._composedAsyncValidatorFn=Yd(this._rawAsyncValidators)}get validator(){return this._composedValidatorFn}set validator(t){this._rawValidators=this._composedValidatorFn=t}get asyncValidator(){return this._composedAsyncValidatorFn}set asyncValidator(t){this._rawAsyncValidators=this._composedAsyncValidatorFn=t}get parent(){return this._parent}get valid(){return this.status===$d}get invalid(){return this.status===zd}get pending(){return this.status==qd}get disabled(){return this.status===Wd}get enabled(){return this.status!==Wd}get dirty(){return!this.pristine}get untouched(){return!this.touched}get updateOn(){return this._updateOn?this._updateOn:this.parent?this.parent.updateOn:"change"}setValidators(t){this._rawValidators=t,this._composedValidatorFn=Zd(t)}setAsyncValidators(t){this._rawAsyncValidators=t,this._composedAsyncValidatorFn=Yd(t)}clearValidators(){this.validator=null}clearAsyncValidators(){this.asyncValidator=null}markAsTouched(t={}){this.touched=!0,this._parent&&!t.onlySelf&&this._parent.markAsTouched(t)}markAllAsTouched(){this.markAsTouched({onlySelf:!0}),this._forEachChild(t=>t.markAllAsTouched())}markAsUntouched(t={}){this.touched=!1,this._pendingTouched=!1,this._forEachChild(t=>{t.markAsUntouched({onlySelf:!0})}),this._parent&&!t.onlySelf&&this._parent._updateTouched(t)}markAsDirty(t={}){this.pristine=!1,this._parent&&!t.onlySelf&&this._parent.markAsDirty(t)}markAsPristine(t={}){this.pristine=!0,this._pendingDirty=!1,this._forEachChild(t=>{t.markAsPristine({onlySelf:!0})}),this._parent&&!t.onlySelf&&this._parent._updatePristine(t)}markAsPending(t={}){this.status=qd,!1!==t.emitEvent&&this.statusChanges.emit(this.status),this._parent&&!t.onlySelf&&this._parent.markAsPending(t)}disable(t={}){const e=this._parentMarkedDirty(t.onlySelf);this.status=Wd,this.errors=null,this._forEachChild(e=>{e.disable(Object.assign(Object.assign({},t),{onlySelf:!0}))}),this._updateValue(),!1!==t.emitEvent&&(this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._updateAncestors(Object.assign(Object.assign({},t),{skipPristineCheck:e})),this._onDisabledChange.forEach(t=>t(!0))}enable(t={}){const e=this._parentMarkedDirty(t.onlySelf);this.status=$d,this._forEachChild(e=>{e.enable(Object.assign(Object.assign({},t),{onlySelf:!0}))}),this.updateValueAndValidity({onlySelf:!0,emitEvent:t.emitEvent}),this._updateAncestors(Object.assign(Object.assign({},t),{skipPristineCheck:e})),this._onDisabledChange.forEach(t=>t(!1))}_updateAncestors(t){this._parent&&!t.onlySelf&&(this._parent.updateValueAndValidity(t),t.skipPristineCheck||this._parent._updatePristine(),this._parent._updateTouched())}setParent(t){this._parent=t}updateValueAndValidity(t={}){this._setInitialStatus(),this._updateValue(),this.enabled&&(this._cancelExistingSubscription(),this.errors=this._runValidator(),this.status=this._calculateStatus(),this.status!==$d&&this.status!==qd||this._runAsyncValidator(t.emitEvent)),!1!==t.emitEvent&&(this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._parent&&!t.onlySelf&&this._parent.updateValueAndValidity(t)}_updateTreeValidity(t={emitEvent:!0}){this._forEachChild(e=>e._updateTreeValidity(t)),this.updateValueAndValidity({onlySelf:!0,emitEvent:t.emitEvent})}_setInitialStatus(){this.status=this._allControlsDisabled()?Wd:$d}_runValidator(){return this.validator?this.validator(this):null}_runAsyncValidator(t){if(this.asyncValidator){this.status=qd,this._hasOwnPendingAsyncValidator=!0;const e=Td(this.asyncValidator(this));this._asyncValidationSubscription=e.subscribe(e=>{this._hasOwnPendingAsyncValidator=!1,this.setErrors(e,{emitEvent:t})})}}_cancelExistingSubscription(){this._asyncValidationSubscription&&(this._asyncValidationSubscription.unsubscribe(),this._hasOwnPendingAsyncValidator=!1)}setErrors(t,e={}){this.errors=t,this._updateControlsErrors(!1!==e.emitEvent)}get(t){return function(t,e,n){if(null==e)return null;if(Array.isArray(e)||(e=e.split(".")),Array.isArray(e)&&0===e.length)return null;let r=t;return e.forEach(t=>{r=r instanceof tp?r.controls.hasOwnProperty(t)?r.controls[t]:null:r instanceof ep&&r.at(t)||null}),r}(this,t)}getError(t,e){const n=e?this.get(e):this;return n&&n.errors?n.errors[t]:null}hasError(t,e){return!!this.getError(t,e)}get root(){let t=this;for(;t._parent;)t=t._parent;return t}_updateControlsErrors(t){this.status=this._calculateStatus(),t&&this.statusChanges.emit(this.status),this._parent&&this._parent._updateControlsErrors(t)}_initObservables(){this.valueChanges=new El,this.statusChanges=new El}_calculateStatus(){return this._allControlsDisabled()?Wd:this.errors?zd:this._hasOwnPendingAsyncValidator||this._anyControlsHaveStatus(qd)?qd:this._anyControlsHaveStatus(zd)?zd:$d}_anyControlsHaveStatus(t){return this._anyControls(e=>e.status===t)}_anyControlsDirty(){return this._anyControls(t=>t.dirty)}_anyControlsTouched(){return this._anyControls(t=>t.touched)}_updatePristine(t={}){this.pristine=!this._anyControlsDirty(),this._parent&&!t.onlySelf&&this._parent._updatePristine(t)}_updateTouched(t={}){this.touched=this._anyControlsTouched(),this._parent&&!t.onlySelf&&this._parent._updateTouched(t)}_isBoxedValue(t){return"object"==typeof t&&null!==t&&2===Object.keys(t).length&&"value"in t&&"disabled"in t}_registerOnCollectionChange(t){this._onCollectionChange=t}_setUpdateStrategy(t){Qd(t)&&null!=t.updateOn&&(this._updateOn=t.updateOn)}_parentMarkedDirty(t){return!t&&!(!this._parent||!this._parent.dirty)&&!this._parent._anyControlsDirty()}}class Jd extends Xd{constructor(t=null,e,n){super(Gd(e),Kd(n,e)),this._onChange=[],this._applyFormState(t),this._setUpdateStrategy(e),this._initObservables(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!this.asyncValidator})}setValue(t,e={}){this.value=this._pendingValue=t,this._onChange.length&&!1!==e.emitModelToViewChange&&this._onChange.forEach(t=>t(this.value,!1!==e.emitViewToModelChange)),this.updateValueAndValidity(e)}patchValue(t,e={}){this.setValue(t,e)}reset(t=null,e={}){this._applyFormState(t),this.markAsPristine(e),this.markAsUntouched(e),this.setValue(this.value,e),this._pendingChange=!1}_updateValue(){}_anyControls(t){return!1}_allControlsDisabled(){return this.disabled}registerOnChange(t){this._onChange.push(t)}_unregisterOnChange(t){Hd(this._onChange,t)}registerOnDisabledChange(t){this._onDisabledChange.push(t)}_unregisterOnDisabledChange(t){Hd(this._onDisabledChange,t)}_forEachChild(t){}_syncPendingControls(){return!("submit"!==this.updateOn||(this._pendingDirty&&this.markAsDirty(),this._pendingTouched&&this.markAsTouched(),!this._pendingChange)||(this.setValue(this._pendingValue,{onlySelf:!0,emitModelToViewChange:!1}),0))}_applyFormState(t){this._isBoxedValue(t)?(this.value=this._pendingValue=t.value,t.disabled?this.disable({onlySelf:!0,emitEvent:!1}):this.enable({onlySelf:!0,emitEvent:!1})):this.value=this._pendingValue=t}}class tp extends Xd{constructor(t,e,n){super(Gd(e),Kd(n,e)),this.controls=t,this._initObservables(),this._setUpdateStrategy(e),this._setUpControls(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!this.asyncValidator})}registerControl(t,e){return this.controls[t]?this.controls[t]:(this.controls[t]=e,e.setParent(this),e._registerOnCollectionChange(this._onCollectionChange),e)}addControl(t,e,n={}){this.registerControl(t,e),this.updateValueAndValidity({emitEvent:n.emitEvent}),this._onCollectionChange()}removeControl(t,e={}){this.controls[t]&&this.controls[t]._registerOnCollectionChange(()=>{}),delete this.controls[t],this.updateValueAndValidity({emitEvent:e.emitEvent}),this._onCollectionChange()}setControl(t,e,n={}){this.controls[t]&&this.controls[t]._registerOnCollectionChange(()=>{}),delete this.controls[t],e&&this.registerControl(t,e),this.updateValueAndValidity({emitEvent:n.emitEvent}),this._onCollectionChange()}contains(t){return this.controls.hasOwnProperty(t)&&this.controls[t].enabled}setValue(t,e={}){this._checkAllValuesPresent(t),Object.keys(t).forEach(n=>{this._throwIfControlMissing(n),this.controls[n].setValue(t[n],{onlySelf:!0,emitEvent:e.emitEvent})}),this.updateValueAndValidity(e)}patchValue(t,e={}){null!=t&&(Object.keys(t).forEach(n=>{this.controls[n]&&this.controls[n].patchValue(t[n],{onlySelf:!0,emitEvent:e.emitEvent})}),this.updateValueAndValidity(e))}reset(t={},e={}){this._forEachChild((n,r)=>{n.reset(t[r],{onlySelf:!0,emitEvent:e.emitEvent})}),this._updatePristine(e),this._updateTouched(e),this.updateValueAndValidity(e)}getRawValue(){return this._reduceChildren({},(t,e,n)=>(t[n]=e instanceof Jd?e.value:e.getRawValue(),t))}_syncPendingControls(){let t=this._reduceChildren(!1,(t,e)=>!!e._syncPendingControls()||t);return t&&this.updateValueAndValidity({onlySelf:!0}),t}_throwIfControlMissing(t){if(!Object.keys(this.controls).length)throw new Error("\n        There are no form controls registered with this group yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ");if(!this.controls[t])throw new Error(`Cannot find form control with name: ${t}.`)}_forEachChild(t){Object.keys(this.controls).forEach(e=>{const n=this.controls[e];n&&t(n,e)})}_setUpControls(){this._forEachChild(t=>{t.setParent(this),t._registerOnCollectionChange(this._onCollectionChange)})}_updateValue(){this.value=this._reduceValue()}_anyControls(t){for(const e of Object.keys(this.controls)){const n=this.controls[e];if(this.contains(e)&&t(n))return!0}return!1}_reduceValue(){return this._reduceChildren({},(t,e,n)=>((e.enabled||this.disabled)&&(t[n]=e.value),t))}_reduceChildren(t,e){let n=t;return this._forEachChild((t,r)=>{n=e(n,t,r)}),n}_allControlsDisabled(){for(const t of Object.keys(this.controls))if(this.controls[t].enabled)return!1;return Object.keys(this.controls).length>0||this.disabled}_checkAllValuesPresent(t){this._forEachChild((e,n)=>{if(void 0===t[n])throw new Error(`Must supply a value for form control with name: '${n}'.`)})}}class ep extends Xd{constructor(t,e,n){super(Gd(e),Kd(n,e)),this.controls=t,this._initObservables(),this._setUpdateStrategy(e),this._setUpControls(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!this.asyncValidator})}at(t){return this.controls[t]}push(t,e={}){this.controls.push(t),this._registerControl(t),this.updateValueAndValidity({emitEvent:e.emitEvent}),this._onCollectionChange()}insert(t,e,n={}){this.controls.splice(t,0,e),this._registerControl(e),this.updateValueAndValidity({emitEvent:n.emitEvent})}removeAt(t,e={}){this.controls[t]&&this.controls[t]._registerOnCollectionChange(()=>{}),this.controls.splice(t,1),this.updateValueAndValidity({emitEvent:e.emitEvent})}setControl(t,e,n={}){this.controls[t]&&this.controls[t]._registerOnCollectionChange(()=>{}),this.controls.splice(t,1),e&&(this.controls.splice(t,0,e),this._registerControl(e)),this.updateValueAndValidity({emitEvent:n.emitEvent}),this._onCollectionChange()}get length(){return this.controls.length}setValue(t,e={}){this._checkAllValuesPresent(t),t.forEach((t,n)=>{this._throwIfControlMissing(n),this.at(n).setValue(t,{onlySelf:!0,emitEvent:e.emitEvent})}),this.updateValueAndValidity(e)}patchValue(t,e={}){null!=t&&(t.forEach((t,n)=>{this.at(n)&&this.at(n).patchValue(t,{onlySelf:!0,emitEvent:e.emitEvent})}),this.updateValueAndValidity(e))}reset(t=[],e={}){this._forEachChild((n,r)=>{n.reset(t[r],{onlySelf:!0,emitEvent:e.emitEvent})}),this._updatePristine(e),this._updateTouched(e),this.updateValueAndValidity(e)}getRawValue(){return this.controls.map(t=>t instanceof Jd?t.value:t.getRawValue())}clear(t={}){this.controls.length<1||(this._forEachChild(t=>t._registerOnCollectionChange(()=>{})),this.controls.splice(0),this.updateValueAndValidity({emitEvent:t.emitEvent}))}_syncPendingControls(){let t=this.controls.reduce((t,e)=>!!e._syncPendingControls()||t,!1);return t&&this.updateValueAndValidity({onlySelf:!0}),t}_throwIfControlMissing(t){if(!this.controls.length)throw new Error("\n        There are no form controls registered with this array yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ");if(!this.at(t))throw new Error(`Cannot find form control at index ${t}`)}_forEachChild(t){this.controls.forEach((e,n)=>{t(e,n)})}_updateValue(){this.value=this.controls.filter(t=>t.enabled||this.disabled).map(t=>t.value)}_anyControls(t){return this.controls.some(e=>e.enabled&&t(e))}_setUpControls(){this._forEachChild(t=>this._registerControl(t))}_checkAllValuesPresent(t){this._forEachChild((e,n)=>{if(void 0===t[n])throw new Error(`Must supply a value for form control at index: ${n}.`)})}_allControlsDisabled(){for(const t of this.controls)if(t.enabled)return!1;return this.controls.length>0||this.disabled}_registerControl(t){t.setParent(this),t._registerOnCollectionChange(this._onCollectionChange)}}const np={provide:Nd,useExisting:st(()=>sp)},rp=(()=>Promise.resolve(null))();let sp=(()=>{class t extends Nd{constructor(t,e,n,r){super(),this.control=new Jd,this._registered=!1,this.update=new El,this._parent=t,this._setValidators(e),this._setAsyncValidators(n),this.valueAccessor=function(t,e){if(!e)return null;let n,r,s;return Array.isArray(e),e.forEach(t=>{t.constructor===Ad?n=t:Object.getPrototypeOf(t.constructor)===wd?r=t:s=t}),s||r||n||null}(0,r)}ngOnChanges(t){this._checkForErrors(),this._registered||this._setUpControl(),"isDisabled"in t&&this._updateDisabled(t),function(t,e){if(!t.hasOwnProperty("model"))return!1;const n=t.model;return!!n.isFirstChange()||!Object.is(e,n.currentValue)}(t,this.viewModel)&&(this._updateValue(this.model),this.viewModel=this.model)}ngOnDestroy(){this.formDirective&&this.formDirective.removeControl(this)}get path(){return this._parent?[...this._parent.path,this.name]:[this.name]}get formDirective(){return this._parent?this._parent.formDirective:null}viewToModelUpdate(t){this.viewModel=t,this.update.emit(t)}_setUpControl(){this._setUpdateStrategy(),this._isStandalone()?this._setUpStandalone():this.formDirective.addControl(this),this._registered=!0}_setUpdateStrategy(){this.options&&null!=this.options.updateOn&&(this.control._updateOn=this.options.updateOn)}_isStandalone(){return!this._parent||!(!this.options||!this.options.standalone)}_setUpStandalone(){var t,e;(function(t,e){const n=function(t){return t._rawValidators}(t);null!==e.validator?t.setValidators(Md(n,e.validator)):"function"==typeof n&&t.setValidators([n]);const r=function(t){return t._rawAsyncValidators}(t);null!==e.asyncValidator?t.setAsyncValidators(Md(r,e.asyncValidator)):"function"==typeof r&&t.setAsyncValidators([r]);const s=()=>t.updateValueAndValidity();Bd(e._rawValidators,s),Bd(e._rawAsyncValidators,s)})(t=this.control,e=this),e.valueAccessor.writeValue(t.value),function(t,e){e.valueAccessor.registerOnChange(n=>{t._pendingValue=n,t._pendingChange=!0,t._pendingDirty=!0,"change"===t.updateOn&&Ud(t,e)})}(t,e),function(t,e){const n=(t,n)=>{e.valueAccessor.writeValue(t),n&&e.viewToModelUpdate(t)};t.registerOnChange(n),e._registerOnDestroy(()=>{t._unregisterOnChange(n)})}(t,e),function(t,e){e.valueAccessor.registerOnTouched(()=>{t._pendingTouched=!0,"blur"===t.updateOn&&t._pendingChange&&Ud(t,e),"submit"!==t.updateOn&&t.markAsTouched()})}(t,e),function(t,e){if(e.valueAccessor.setDisabledState){const n=t=>{e.valueAccessor.setDisabledState(t)};t.registerOnDisabledChange(n),e._registerOnDestroy(()=>{t._unregisterOnDisabledChange(n)})}}(t,e),this.control.updateValueAndValidity({emitEvent:!1})}_checkForErrors(){this._isStandalone()||this._checkParentType(),this._checkName()}_checkParentType(){}_checkName(){this.options&&this.options.name&&(this.name=this.options.name),this._isStandalone()}_updateValue(t){rp.then(()=>{this.control.setValue(t,{emitViewToModelChange:!1})})}_updateDisabled(t){const e=t.isDisabled.currentValue,n=""===e||e&&"false"!==e;rp.then(()=>{n&&!this.control.disabled?this.control.disable():!n&&this.control.disabled&&this.control.enable()})}}return t.\u0275fac=function(e){return new(e||t)(ho(jd,9),ho(Sd,10),ho(xd,10),ho(Cd,10))},t.\u0275dir=Zt({type:t,selectors:[["","ngModel","",3,"formControlName","",3,"formControl",""]],inputs:{name:"name",isDisabled:["disabled","isDisabled"],model:["ngModel","model"],options:["ngModelOptions","options"]},outputs:{update:"ngModelChange"},exportAs:["ngModel"],features:[da([np]),Ki,le]}),t})(),ip=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({}),t})();const op={provide:Cd,useExisting:st(()=>lp),multi:!0};function ap(t,e){return null==t?`${e}`:(e&&"object"==typeof e&&(e="Object"),`${t}: ${e}`.slice(0,50))}let lp=(()=>{class t extends wd{constructor(){super(...arguments),this._optionMap=new Map,this._idCounter=0,this._compareWith=Object.is}set compareWith(t){this._compareWith=t}writeValue(t){this.value=t;const e=this._getOptionId(t);null==e&&this.setProperty("selectedIndex",-1);const n=ap(e,t);this.setProperty("value",n)}registerOnChange(t){this.onChange=e=>{this.value=this._getOptionValue(e),t(this.value)}}_registerOption(){return(this._idCounter++).toString()}_getOptionId(t){for(const e of Array.from(this._optionMap.keys()))if(this._compareWith(this._optionMap.get(e),t))return e;return null}_getOptionValue(t){const e=function(t){return t.split(":")[0]}(t);return this._optionMap.has(e)?this._optionMap.get(e):t}}return t.\u0275fac=function(){let e;return function(n){return(e||(e=Ln(t)))(n||t)}}(),t.\u0275dir=Zt({type:t,selectors:[["select","formControlName","",3,"multiple",""],["select","formControl","",3,"multiple",""],["select","ngModel","",3,"multiple",""]],hostBindings:function(t,e){1&t&&Co("change",function(t){return e.onChange(t.target.value)})("blur",function(){return e.onTouched()})},inputs:{compareWith:"compareWith"},features:[da([op]),Ki]}),t})(),up=(()=>{class t{constructor(t,e,n){this._element=t,this._renderer=e,this._select=n,this._select&&(this.id=this._select._registerOption())}set ngValue(t){null!=this._select&&(this._select._optionMap.set(this.id,t),this._setElementValue(ap(this.id,t)),this._select.writeValue(this._select.value))}set value(t){this._setElementValue(t),this._select&&this._select.writeValue(this._select.value)}_setElementValue(t){this._renderer.setProperty(this._element.nativeElement,"value",t)}ngOnDestroy(){this._select&&(this._select._optionMap.delete(this.id),this._select.writeValue(this._select.value))}}return t.\u0275fac=function(e){return new(e||t)(ho(ba),ho(Ca),ho(lp,9))},t.\u0275dir=Zt({type:t,selectors:[["option"]],inputs:{ngValue:"ngValue",value:"value"}}),t})();const cp={provide:Cd,useExisting:st(()=>dp),multi:!0};function hp(t,e){return null==t?`${e}`:("string"==typeof e&&(e=`'${e}'`),e&&"object"==typeof e&&(e="Object"),`${t}: ${e}`.slice(0,50))}let dp=(()=>{class t extends wd{constructor(){super(...arguments),this._optionMap=new Map,this._idCounter=0,this._compareWith=Object.is}set compareWith(t){this._compareWith=t}writeValue(t){let e;if(this.value=t,Array.isArray(t)){const n=t.map(t=>this._getOptionId(t));e=(t,e)=>{t._setSelected(n.indexOf(e.toString())>-1)}}else e=(t,e)=>{t._setSelected(!1)};this._optionMap.forEach(e)}registerOnChange(t){this.onChange=e=>{const n=[];if(void 0!==e.selectedOptions){const t=e.selectedOptions;for(let e=0;e<t.length;e++){const r=t.item(e),s=this._getOptionValue(r.value);n.push(s)}}else{const t=e.options;for(let e=0;e<t.length;e++){const r=t.item(e);if(r.selected){const t=this._getOptionValue(r.value);n.push(t)}}}this.value=n,t(n)}}_registerOption(t){const e=(this._idCounter++).toString();return this._optionMap.set(e,t),e}_getOptionId(t){for(const e of Array.from(this._optionMap.keys()))if(this._compareWith(this._optionMap.get(e)._value,t))return e;return null}_getOptionValue(t){const e=function(t){return t.split(":")[0]}(t);return this._optionMap.has(e)?this._optionMap.get(e)._value:t}}return t.\u0275fac=function(){let e;return function(n){return(e||(e=Ln(t)))(n||t)}}(),t.\u0275dir=Zt({type:t,selectors:[["select","multiple","","formControlName",""],["select","multiple","","formControl",""],["select","multiple","","ngModel",""]],hostBindings:function(t,e){1&t&&Co("change",function(t){return e.onChange(t.target)})("blur",function(){return e.onTouched()})},inputs:{compareWith:"compareWith"},features:[da([cp]),Ki]}),t})(),pp=(()=>{class t{constructor(t,e,n){this._element=t,this._renderer=e,this._select=n,this._select&&(this.id=this._select._registerOption(this))}set ngValue(t){null!=this._select&&(this._value=t,this._setElementValue(hp(this.id,t)),this._select.writeValue(this._select.value))}set value(t){this._select?(this._value=t,this._setElementValue(hp(this.id,t)),this._select.writeValue(this._select.value)):this._setElementValue(t)}_setElementValue(t){this._renderer.setProperty(this._element.nativeElement,"value",t)}_setSelected(t){this._renderer.setProperty(this._element.nativeElement,"selected",t)}ngOnDestroy(){this._select&&(this._select._optionMap.delete(this.id),this._select.writeValue(this._select.value))}}return t.\u0275fac=function(e){return new(e||t)(ho(ba),ho(Ca),ho(dp,9))},t.\u0275dir=Zt({type:t,selectors:[["option"]],inputs:{ngValue:"ngValue",value:"value"}}),t})(),fp=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[ip]]}),t})(),gp=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[fp]}),t})();const mp=new Qh(Zh);function yp(t){return!l(t)&&t-parseFloat(t)+1>=0}function vp(t){const{index:e,period:n,subscriber:r}=t;if(r.next(e),!r.closed){if(-1===n)return r.complete();t.index=e+1,this.schedule(t,n)}}function bp(t,e=null){return{type:4,styles:e,timings:t}}function _p(t){return{type:6,styles:t,offset:null}}function wp(t,e,n=null){return{type:1,expr:t,animation:e,options:n}}class Cp extends E{constructor(t){super(),this._value=t}get value(){return this.getValue()}_subscribe(t){const e=super._subscribe(t);return e&&!e.closed&&t.next(this._value),e}getValue(){if(this.hasError)throw this.thrownError;if(this.closed)throw new _;return this._value}next(t){super.next(this._value=t)}}class Ep extends f{notifyNext(t,e,n,r,s){this.destination.next(e)}notifyError(t,e){this.destination.error(t)}notifyComplete(t){this.destination.complete()}}class Dp extends f{constructor(t,e,n){super(),this.parent=t,this.outerValue=e,this.outerIndex=n,this.index=0}_next(t){this.parent.notifyNext(this.outerValue,t,this.outerIndex,this.index++,this)}_error(t){this.parent.notifyError(t,this),this.unsubscribe()}_complete(){this.parent.notifyComplete(this),this.unsubscribe()}}function Ap(t,e,n,r,s=new Dp(t,n,r)){if(!s.closed)return e instanceof v?e.subscribe(s):R(e)(s)}const Sp={};class xp{constructor(t){this.resultSelector=t}call(t,e){return e.subscribe(new kp(t,this.resultSelector))}}class kp extends Ep{constructor(t,e){super(t),this.resultSelector=e,this.active=0,this.values=[],this.observables=[]}_next(t){this.values.push(Sp),this.observables.push(t)}_complete(){const t=this.observables,e=t.length;if(0===e)this.destination.complete();else{this.active=e,this.toRespond=e;for(let n=0;n<e;n++)this.add(Ap(this,t[n],void 0,n))}}notifyComplete(t){0==(this.active-=1)&&this.destination.complete()}notifyNext(t,e,n){const r=this.values,s=this.toRespond?r[n]===Sp?--this.toRespond:this.toRespond:0;r[n]=e,0===s&&(this.resultSelector?this._tryResultSelector(r):this.destination.next(r.slice()))}_tryResultSelector(t){let e;try{e=this.resultSelector.apply(this,t)}catch(n){return void this.destination.error(n)}this.destination.next(e)}}const Tp=(()=>{function t(){return Error.call(this),this.message="no elements in sequence",this.name="EmptyError",this}return t.prototype=Object.create(Error.prototype),t})();function Op(...t){return $(1)(nd(...t))}function Fp(t){return new v(e=>{let n;try{n=t()}catch(r){return void e.error(r)}return(n?V(n):ed()).subscribe(e)})}const Pp=(()=>{function t(){return Error.call(this),this.message="argument out of range",this.name="ArgumentOutOfRangeError",this}return t.prototype=Object.create(Error.prototype),t})();function Ip(t){return e=>0===t?ed():e.lift(new Rp(t))}class Rp{constructor(t){if(this.total=t,this.total<0)throw new Pp}call(t,e){return e.subscribe(new Mp(t,this.total))}}class Mp extends f{constructor(t,e){super(t),this.total=e,this.count=0}_next(t){const e=this.total,n=++this.count;n<=e&&(this.destination.next(t),n===e&&(this.destination.complete(),this.unsubscribe()))}}function Vp(t,e){let n=!1;return arguments.length>=2&&(n=!0),function(r){return r.lift(new jp(t,e,n))}}class jp{constructor(t,e,n=!1){this.accumulator=t,this.seed=e,this.hasSeed=n}call(t,e){return e.subscribe(new Np(t,this.accumulator,this.seed,this.hasSeed))}}class Np extends f{constructor(t,e,n,r){super(t),this.accumulator=e,this._seed=n,this.hasSeed=r,this.index=0}get seed(){return this._seed}set seed(t){this.hasSeed=!0,this._seed=t}_next(t){if(this.hasSeed)return this._tryNext(t);this.seed=t,this.destination.next(t)}_tryNext(t){const e=this.index++;let n;try{n=this.accumulator(this.seed,t,e)}catch(r){this.destination.error(r)}this.seed=n,this.destination.next(n)}}function Lp(t,e){return function(n){return n.lift(new Bp(t,e))}}class Bp{constructor(t,e){this.predicate=t,this.thisArg=e}call(t,e){return e.subscribe(new Up(t,this.predicate,this.thisArg))}}class Up extends f{constructor(t,e,n){super(t),this.predicate=e,this.thisArg=n,this.count=0}_next(t){let e;try{e=this.predicate.call(this.thisArg,t,this.count++)}catch(n){return void this.destination.error(n)}e&&this.destination.next(t)}}function Hp(t){return function(e){const n=new $p(t),r=e.lift(n);return n.caught=r}}class $p{constructor(t){this.selector=t}call(t,e){return e.subscribe(new zp(t,this.selector,this.caught))}}class zp extends N{constructor(t,e,n){super(t),this.selector=e,this.caught=n}error(t){if(!this.isStopped){let n;try{n=this.selector(t,this.caught)}catch(e){return void super.error(e)}this._unsubscribeAndRecycle();const r=new j(this);this.add(r);const s=L(n,r);s!==r&&this.add(s)}}}function qp(t,e){return B(t,e,1)}function Wp(t){return function(e){return 0===t?ed():e.lift(new Gp(t))}}class Gp{constructor(t){if(this.total=t,this.total<0)throw new Pp}call(t,e){return e.subscribe(new Zp(t,this.total))}}class Zp extends f{constructor(t,e){super(t),this.total=e,this.ring=new Array,this.count=0}_next(t){const e=this.ring,n=this.total,r=this.count++;e.length<n?e.push(t):e[r%n]=t}_complete(){const t=this.destination;let e=this.count;if(e>0){const n=this.count>=this.total?this.total:this.count,r=this.ring;for(let s=0;s<n;s++){const s=e++%n;t.next(r[s])}}t.complete()}}function Kp(t=Xp){return e=>e.lift(new Yp(t))}class Yp{constructor(t){this.errorFactory=t}call(t,e){return e.subscribe(new Qp(t,this.errorFactory))}}class Qp extends f{constructor(t,e){super(t),this.errorFactory=e,this.hasValue=!1}_next(t){this.hasValue=!0,this.destination.next(t)}_complete(){if(this.hasValue)return this.destination.complete();{let e;try{e=this.errorFactory()}catch(t){e=t}this.destination.error(e)}}}function Xp(){return new Tp}function Jp(t=null){return e=>e.lift(new tf(t))}class tf{constructor(t){this.defaultValue=t}call(t,e){return e.subscribe(new ef(t,this.defaultValue))}}class ef extends f{constructor(t,e){super(t),this.defaultValue=e,this.isEmpty=!0}_next(t){this.isEmpty=!1,this.destination.next(t)}_complete(){this.isEmpty&&this.destination.next(this.defaultValue),this.destination.complete()}}function nf(t,e){const n=arguments.length>=2;return r=>r.pipe(t?Lp((e,n)=>t(e,n,r)):y,Ip(1),n?Jp(e):Kp(()=>new Tp))}function rf(){}function sf(t,e,n){return function(r){return r.lift(new of(t,e,n))}}class of{constructor(t,e,n){this.nextOrObserver=t,this.error=e,this.complete=n}call(t,e){return e.subscribe(new af(t,this.nextOrObserver,this.error,this.complete))}}class af extends f{constructor(t,e,n,s){super(t),this._tapNext=rf,this._tapError=rf,this._tapComplete=rf,this._tapError=n||rf,this._tapComplete=s||rf,r(e)?(this._context=this,this._tapNext=e):e&&(this._context=e,this._tapNext=e.next||rf,this._tapError=e.error||rf,this._tapComplete=e.complete||rf)}_next(t){try{this._tapNext.call(this._context,t)}catch(e){return void this.destination.error(e)}this.destination.next(t)}_error(t){try{this._tapError.call(this._context,t)}catch(t){return void this.destination.error(t)}this.destination.error(t)}_complete(){try{this._tapComplete.call(this._context)}catch(t){return void this.destination.error(t)}return this.destination.complete()}}class lf{constructor(t){this.callback=t}call(t,e){return e.subscribe(new uf(t,this.callback))}}class uf extends f{constructor(t,e){super(t),this.add(new h(e))}}class cf{constructor(t,e){this.id=t,this.url=e}}class hf extends cf{constructor(t,e,n="imperative",r=null){super(t,e),this.navigationTrigger=n,this.restoredState=r}toString(){return`NavigationStart(id: ${this.id}, url: '${this.url}')`}}class df extends cf{constructor(t,e,n){super(t,e),this.urlAfterRedirects=n}toString(){return`NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`}}class pf extends cf{constructor(t,e,n){super(t,e),this.reason=n}toString(){return`NavigationCancel(id: ${this.id}, url: '${this.url}')`}}class ff extends cf{constructor(t,e,n){super(t,e),this.error=n}toString(){return`NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`}}class gf extends cf{constructor(t,e,n,r){super(t,e),this.urlAfterRedirects=n,this.state=r}toString(){return`RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class mf extends cf{constructor(t,e,n,r){super(t,e),this.urlAfterRedirects=n,this.state=r}toString(){return`GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class yf extends cf{constructor(t,e,n,r,s){super(t,e),this.urlAfterRedirects=n,this.state=r,this.shouldActivate=s}toString(){return`GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`}}class vf extends cf{constructor(t,e,n,r){super(t,e),this.urlAfterRedirects=n,this.state=r}toString(){return`ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class bf extends cf{constructor(t,e,n,r){super(t,e),this.urlAfterRedirects=n,this.state=r}toString(){return`ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class _f{constructor(t){this.route=t}toString(){return`RouteConfigLoadStart(path: ${this.route.path})`}}class wf{constructor(t){this.route=t}toString(){return`RouteConfigLoadEnd(path: ${this.route.path})`}}class Cf{constructor(t){this.snapshot=t}toString(){return`ChildActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class Ef{constructor(t){this.snapshot=t}toString(){return`ChildActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class Df{constructor(t){this.snapshot=t}toString(){return`ActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class Af{constructor(t){this.snapshot=t}toString(){return`ActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class Sf{constructor(t,e,n){this.routerEvent=t,this.position=e,this.anchor=n}toString(){return`Scroll(anchor: '${this.anchor}', position: '${this.position?`${this.position[0]}, ${this.position[1]}`:null}')`}}const xf="primary";class kf{constructor(t){this.params=t||{}}has(t){return Object.prototype.hasOwnProperty.call(this.params,t)}get(t){if(this.has(t)){const e=this.params[t];return Array.isArray(e)?e[0]:e}return null}getAll(t){if(this.has(t)){const e=this.params[t];return Array.isArray(e)?e:[e]}return[]}get keys(){return Object.keys(this.params)}}function Tf(t){return new kf(t)}function Of(t){const e=Error("NavigationCancelingError: "+t);return e.ngNavigationCancelingError=!0,e}function Ff(t,e,n){const r=n.path.split("/");if(r.length>t.length)return null;if("full"===n.pathMatch&&(e.hasChildren()||r.length<t.length))return null;const s={};for(let i=0;i<r.length;i++){const e=r[i],n=t[i];if(e.startsWith(":"))s[e.substring(1)]=n;else if(e!==n.path)return null}return{consumed:t.slice(0,r.length),posParams:s}}function Pf(t,e){const n=t?Object.keys(t):void 0,r=e?Object.keys(e):void 0;if(!n||!r||n.length!=r.length)return!1;let s;for(let i=0;i<n.length;i++)if(s=n[i],!If(t[s],e[s]))return!1;return!0}function If(t,e){if(Array.isArray(t)&&Array.isArray(e)){if(t.length!==e.length)return!1;const n=[...t].sort(),r=[...e].sort();return n.every((t,e)=>r[e]===t)}return t===e}function Rf(t){return Array.prototype.concat.apply([],t)}function Mf(t){return t.length>0?t[t.length-1]:null}function Vf(t,e){for(const n in t)t.hasOwnProperty(n)&&e(t[n],n)}function jf(t){return wo(t)?t:_o(t)?V(Promise.resolve(t)):nd(t)}const Nf={exact:function t(e,n,r){if(!Gf(e.segments,n.segments))return!1;if(!$f(e.segments,n.segments,r))return!1;if(e.numberOfChildren!==n.numberOfChildren)return!1;for(const s in n.children){if(!e.children[s])return!1;if(!t(e.children[s],n.children[s],r))return!1}return!0},subset:Uf},Lf={exact:function(t,e){return Pf(t,e)},subset:function(t,e){return Object.keys(e).length<=Object.keys(t).length&&Object.keys(e).every(n=>If(t[n],e[n]))},ignored:()=>!0};function Bf(t,e,n){return Nf[n.paths](t.root,e.root,n.matrixParams)&&Lf[n.queryParams](t.queryParams,e.queryParams)&&!("exact"===n.fragment&&t.fragment!==e.fragment)}function Uf(t,e,n){return Hf(t,e,e.segments,n)}function Hf(t,e,n,r){if(t.segments.length>n.length){const s=t.segments.slice(0,n.length);return!!Gf(s,n)&&!e.hasChildren()&&!!$f(s,n,r)}if(t.segments.length===n.length){if(!Gf(t.segments,n))return!1;if(!$f(t.segments,n,r))return!1;for(const n in e.children){if(!t.children[n])return!1;if(!Uf(t.children[n],e.children[n],r))return!1}return!0}{const s=n.slice(0,t.segments.length),i=n.slice(t.segments.length);return!!Gf(t.segments,s)&&!!$f(t.segments,s,r)&&!!t.children.primary&&Hf(t.children.primary,e,i,r)}}function $f(t,e,n){return e.every((e,r)=>Lf[n](t[r].parameters,e.parameters))}class zf{constructor(t,e,n){this.root=t,this.queryParams=e,this.fragment=n}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=Tf(this.queryParams)),this._queryParamMap}toString(){return Yf.serialize(this)}}class qf{constructor(t,e){this.segments=t,this.children=e,this.parent=null,Vf(e,(t,e)=>t.parent=this)}hasChildren(){return this.numberOfChildren>0}get numberOfChildren(){return Object.keys(this.children).length}toString(){return Qf(this)}}class Wf{constructor(t,e){this.path=t,this.parameters=e}get parameterMap(){return this._parameterMap||(this._parameterMap=Tf(this.parameters)),this._parameterMap}toString(){return sg(this)}}function Gf(t,e){return t.length===e.length&&t.every((t,n)=>t.path===e[n].path)}class Zf{}class Kf{parse(t){const e=new ug(t);return new zf(e.parseRootSegment(),e.parseQueryParams(),e.parseFragment())}serialize(t){var e;return`/${Xf(t.root,!0)}${function(t){const e=Object.keys(t).map(e=>{const n=t[e];return Array.isArray(n)?n.map(t=>`${tg(e)}=${tg(t)}`).join("&"):`${tg(e)}=${tg(n)}`}).filter(t=>!!t);return e.length?`?${e.join("&")}`:""}(t.queryParams)}${"string"==typeof t.fragment?`#${e=t.fragment,encodeURI(e)}`:""}`}}const Yf=new Kf;function Qf(t){return t.segments.map(t=>sg(t)).join("/")}function Xf(t,e){if(!t.hasChildren())return Qf(t);if(e){const e=t.children.primary?Xf(t.children.primary,!1):"",n=[];return Vf(t.children,(t,e)=>{e!==xf&&n.push(`${e}:${Xf(t,!1)}`)}),n.length>0?`${e}(${n.join("//")})`:e}{const e=function(t,e){let n=[];return Vf(t.children,(t,r)=>{r===xf&&(n=n.concat(e(t,r)))}),Vf(t.children,(t,r)=>{r!==xf&&(n=n.concat(e(t,r)))}),n}(t,(e,n)=>n===xf?[Xf(t.children.primary,!1)]:[`${n}:${Xf(e,!1)}`]);return 1===Object.keys(t.children).length&&null!=t.children.primary?`${Qf(t)}/${e[0]}`:`${Qf(t)}/(${e.join("//")})`}}function Jf(t){return encodeURIComponent(t).replace(/%40/g,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",")}function tg(t){return Jf(t).replace(/%3B/gi,";")}function eg(t){return Jf(t).replace(/\(/g,"%28").replace(/\)/g,"%29").replace(/%26/gi,"&")}function ng(t){return decodeURIComponent(t)}function rg(t){return ng(t.replace(/\+/g,"%20"))}function sg(t){return`${eg(t.path)}${e=t.parameters,Object.keys(e).map(t=>`;${eg(t)}=${eg(e[t])}`).join("")}`;var e}const ig=/^[^\/()?;=#]+/;function og(t){const e=t.match(ig);return e?e[0]:""}const ag=/^[^=?&#]+/,lg=/^[^?&#]+/;class ug{constructor(t){this.url=t,this.remaining=t}parseRootSegment(){return this.consumeOptional("/"),""===this.remaining||this.peekStartsWith("?")||this.peekStartsWith("#")?new qf([],{}):new qf([],this.parseChildren())}parseQueryParams(){const t={};if(this.consumeOptional("?"))do{this.parseQueryParam(t)}while(this.consumeOptional("&"));return t}parseFragment(){return this.consumeOptional("#")?decodeURIComponent(this.remaining):null}parseChildren(){if(""===this.remaining)return{};this.consumeOptional("/");const t=[];for(this.peekStartsWith("(")||t.push(this.parseSegment());this.peekStartsWith("/")&&!this.peekStartsWith("//")&&!this.peekStartsWith("/(");)this.capture("/"),t.push(this.parseSegment());let e={};this.peekStartsWith("/(")&&(this.capture("/"),e=this.parseParens(!0));let n={};return this.peekStartsWith("(")&&(n=this.parseParens(!1)),(t.length>0||Object.keys(e).length>0)&&(n.primary=new qf(t,e)),n}parseSegment(){const t=og(this.remaining);if(""===t&&this.peekStartsWith(";"))throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);return this.capture(t),new Wf(ng(t),this.parseMatrixParams())}parseMatrixParams(){const t={};for(;this.consumeOptional(";");)this.parseParam(t);return t}parseParam(t){const e=og(this.remaining);if(!e)return;this.capture(e);let n="";if(this.consumeOptional("=")){const t=og(this.remaining);t&&(n=t,this.capture(n))}t[ng(e)]=ng(n)}parseQueryParam(t){const e=function(t){const e=t.match(ag);return e?e[0]:""}(this.remaining);if(!e)return;this.capture(e);let n="";if(this.consumeOptional("=")){const t=function(t){const e=t.match(lg);return e?e[0]:""}(this.remaining);t&&(n=t,this.capture(n))}const r=rg(e),s=rg(n);if(t.hasOwnProperty(r)){let e=t[r];Array.isArray(e)||(e=[e],t[r]=e),e.push(s)}else t[r]=s}parseParens(t){const e={};for(this.capture("(");!this.consumeOptional(")")&&this.remaining.length>0;){const n=og(this.remaining),r=this.remaining[n.length];if("/"!==r&&")"!==r&&";"!==r)throw new Error(`Cannot parse url '${this.url}'`);let s;n.indexOf(":")>-1?(s=n.substr(0,n.indexOf(":")),this.capture(s),this.capture(":")):t&&(s=xf);const i=this.parseChildren();e[s]=1===Object.keys(i).length?i.primary:new qf([],i),this.consumeOptional("//")}return e}peekStartsWith(t){return this.remaining.startsWith(t)}consumeOptional(t){return!!this.peekStartsWith(t)&&(this.remaining=this.remaining.substring(t.length),!0)}capture(t){if(!this.consumeOptional(t))throw new Error(`Expected "${t}".`)}}class cg{constructor(t){this._root=t}get root(){return this._root.value}parent(t){const e=this.pathFromRoot(t);return e.length>1?e[e.length-2]:null}children(t){const e=hg(t,this._root);return e?e.children.map(t=>t.value):[]}firstChild(t){const e=hg(t,this._root);return e&&e.children.length>0?e.children[0].value:null}siblings(t){const e=dg(t,this._root);return e.length<2?[]:e[e.length-2].children.map(t=>t.value).filter(e=>e!==t)}pathFromRoot(t){return dg(t,this._root).map(t=>t.value)}}function hg(t,e){if(t===e.value)return e;for(const n of e.children){const e=hg(t,n);if(e)return e}return null}function dg(t,e){if(t===e.value)return[e];for(const n of e.children){const r=dg(t,n);if(r.length)return r.unshift(e),r}return[]}class pg{constructor(t,e){this.value=t,this.children=e}toString(){return`TreeNode(${this.value})`}}function fg(t){const e={};return t&&t.children.forEach(t=>e[t.value.outlet]=t),e}class gg extends cg{constructor(t,e){super(t),this.snapshot=e,wg(this,t)}toString(){return this.snapshot.toString()}}function mg(t,e){const n=function(t,e){const n=new bg([],{},{},"",{},xf,e,null,t.root,-1,{});return new _g("",new pg(n,[]))}(t,e),r=new Cp([new Wf("",{})]),s=new Cp({}),i=new Cp({}),o=new Cp({}),a=new Cp(""),l=new yg(r,s,o,a,i,xf,e,n.root);return l.snapshot=n.root,new gg(new pg(l,[]),n)}class yg{constructor(t,e,n,r,s,i,o,a){this.url=t,this.params=e,this.queryParams=n,this.fragment=r,this.data=s,this.outlet=i,this.component=o,this._futureSnapshot=a}get routeConfig(){return this._futureSnapshot.routeConfig}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=this.params.pipe(S(t=>Tf(t)))),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=this.queryParams.pipe(S(t=>Tf(t)))),this._queryParamMap}toString(){return this.snapshot?this.snapshot.toString():`Future(${this._futureSnapshot})`}}function vg(t,e="emptyOnly"){const n=t.pathFromRoot;let r=0;if("always"!==e)for(r=n.length-1;r>=1;){const t=n[r],e=n[r-1];if(t.routeConfig&&""===t.routeConfig.path)r--;else{if(e.component)break;r--}}return function(t){return t.reduce((t,e)=>({params:Object.assign(Object.assign({},t.params),e.params),data:Object.assign(Object.assign({},t.data),e.data),resolve:Object.assign(Object.assign({},t.resolve),e._resolvedData)}),{params:{},data:{},resolve:{}})}(n.slice(r))}class bg{constructor(t,e,n,r,s,i,o,a,l,u,c){this.url=t,this.params=e,this.queryParams=n,this.fragment=r,this.data=s,this.outlet=i,this.component=o,this.routeConfig=a,this._urlSegment=l,this._lastPathIndex=u,this._resolve=c}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=Tf(this.params)),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=Tf(this.queryParams)),this._queryParamMap}toString(){return`Route(url:'${this.url.map(t=>t.toString()).join("/")}', path:'${this.routeConfig?this.routeConfig.path:""}')`}}class _g extends cg{constructor(t,e){super(e),this.url=t,wg(this,e)}toString(){return Cg(this._root)}}function wg(t,e){e.value._routerState=t,e.children.forEach(e=>wg(t,e))}function Cg(t){const e=t.children.length>0?` { ${t.children.map(Cg).join(", ")} } `:"";return`${t.value}${e}`}function Eg(t){if(t.snapshot){const e=t.snapshot,n=t._futureSnapshot;t.snapshot=n,Pf(e.queryParams,n.queryParams)||t.queryParams.next(n.queryParams),e.fragment!==n.fragment&&t.fragment.next(n.fragment),Pf(e.params,n.params)||t.params.next(n.params),function(t,e){if(t.length!==e.length)return!1;for(let n=0;n<t.length;++n)if(!Pf(t[n],e[n]))return!1;return!0}(e.url,n.url)||t.url.next(n.url),Pf(e.data,n.data)||t.data.next(n.data)}else t.snapshot=t._futureSnapshot,t.data.next(t._futureSnapshot.data)}function Dg(t,e){var n,r;return Pf(t.params,e.params)&&Gf(n=t.url,r=e.url)&&n.every((t,e)=>Pf(t.parameters,r[e].parameters))&&!(!t.parent!=!e.parent)&&(!t.parent||Dg(t.parent,e.parent))}function Ag(t,e,n){if(n&&t.shouldReuseRoute(e.value,n.value.snapshot)){const r=n.value;r._futureSnapshot=e.value;const s=function(t,e,n){return e.children.map(e=>{for(const r of n.children)if(t.shouldReuseRoute(e.value,r.value.snapshot))return Ag(t,e,r);return Ag(t,e)})}(t,e,n);return new pg(r,s)}{if(t.shouldAttach(e.value)){const n=t.retrieve(e.value);if(null!==n){const t=n.route;return Sg(e,t),t}}const n=new yg(new Cp((r=e.value).url),new Cp(r.params),new Cp(r.queryParams),new Cp(r.fragment),new Cp(r.data),r.outlet,r.component,r),s=e.children.map(e=>Ag(t,e));return new pg(n,s)}var r}function Sg(t,e){if(t.value.routeConfig!==e.value.routeConfig)throw new Error("Cannot reattach ActivatedRouteSnapshot created from a different route");if(t.children.length!==e.children.length)throw new Error("Cannot reattach ActivatedRouteSnapshot with a different number of children");e.value._futureSnapshot=t.value;for(let n=0;n<t.children.length;++n)Sg(t.children[n],e.children[n])}function xg(t){return"object"==typeof t&&null!=t&&!t.outlets&&!t.segmentPath}function kg(t){return"object"==typeof t&&null!=t&&t.outlets}function Tg(t,e,n,r,s){let i={};return r&&Vf(r,(t,e)=>{i[e]=Array.isArray(t)?t.map(t=>`${t}`):`${t}`}),new zf(n.root===t?e:Og(n.root,t,e),i,s)}function Og(t,e,n){const r={};return Vf(t.children,(t,s)=>{r[s]=t===e?n:Og(t,e,n)}),new qf(t.segments,r)}class Fg{constructor(t,e,n){if(this.isAbsolute=t,this.numberOfDoubleDots=e,this.commands=n,t&&n.length>0&&xg(n[0]))throw new Error("Root segment cannot have matrix parameters");const r=n.find(kg);if(r&&r!==Mf(n))throw new Error("{outlets:{}} has to be the last command")}toRoot(){return this.isAbsolute&&1===this.commands.length&&"/"==this.commands[0]}}class Pg{constructor(t,e,n){this.segmentGroup=t,this.processChildren=e,this.index=n}}function Ig(t,e,n){if(t||(t=new qf([],{})),0===t.segments.length&&t.hasChildren())return Rg(t,e,n);const r=function(t,e,n){let r=0,s=e;const i={match:!1,pathIndex:0,commandIndex:0};for(;s<t.segments.length;){if(r>=n.length)return i;const e=t.segments[s],o=n[r];if(kg(o))break;const a=`${o}`,l=r<n.length-1?n[r+1]:null;if(s>0&&void 0===a)break;if(a&&l&&"object"==typeof l&&void 0===l.outlets){if(!Ng(a,l,e))return i;r+=2}else{if(!Ng(a,{},e))return i;r++}s++}return{match:!0,pathIndex:s,commandIndex:r}}(t,e,n),s=n.slice(r.commandIndex);if(r.match&&r.pathIndex<t.segments.length){const e=new qf(t.segments.slice(0,r.pathIndex),{});return e.children.primary=new qf(t.segments.slice(r.pathIndex),t.children),Rg(e,0,s)}return r.match&&0===s.length?new qf(t.segments,{}):r.match&&!t.hasChildren()?Mg(t,e,n):r.match?Rg(t,0,s):Mg(t,e,n)}function Rg(t,e,n){if(0===n.length)return new qf(t.segments,{});{const r=function(t){return kg(t[0])?t[0].outlets:{[xf]:t}}(n),s={};return Vf(r,(n,r)=>{"string"==typeof n&&(n=[n]),null!==n&&(s[r]=Ig(t.children[r],e,n))}),Vf(t.children,(t,e)=>{void 0===r[e]&&(s[e]=t)}),new qf(t.segments,s)}}function Mg(t,e,n){const r=t.segments.slice(0,e);let s=0;for(;s<n.length;){const i=n[s];if(kg(i)){const t=Vg(i.outlets);return new qf(r,t)}if(0===s&&xg(n[0])){r.push(new Wf(t.segments[e].path,jg(n[0]))),s++;continue}const o=kg(i)?i.outlets.primary:`${i}`,a=s<n.length-1?n[s+1]:null;o&&a&&xg(a)?(r.push(new Wf(o,jg(a))),s+=2):(r.push(new Wf(o,{})),s++)}return new qf(r,{})}function Vg(t){const e={};return Vf(t,(t,n)=>{"string"==typeof t&&(t=[t]),null!==t&&(e[n]=Mg(new qf([],{}),0,t))}),e}function jg(t){const e={};return Vf(t,(t,n)=>e[n]=`${t}`),e}function Ng(t,e,n){return t==n.path&&Pf(e,n.parameters)}class Lg{constructor(t,e,n,r){this.routeReuseStrategy=t,this.futureState=e,this.currState=n,this.forwardEvent=r}activate(t){const e=this.futureState._root,n=this.currState?this.currState._root:null;this.deactivateChildRoutes(e,n,t),Eg(this.futureState.root),this.activateChildRoutes(e,n,t)}deactivateChildRoutes(t,e,n){const r=fg(e);t.children.forEach(t=>{const e=t.value.outlet;this.deactivateRoutes(t,r[e],n),delete r[e]}),Vf(r,(t,e)=>{this.deactivateRouteAndItsChildren(t,n)})}deactivateRoutes(t,e,n){const r=t.value,s=e?e.value:null;if(r===s)if(r.component){const s=n.getContext(r.outlet);s&&this.deactivateChildRoutes(t,e,s.children)}else this.deactivateChildRoutes(t,e,n);else s&&this.deactivateRouteAndItsChildren(e,n)}deactivateRouteAndItsChildren(t,e){this.routeReuseStrategy.shouldDetach(t.value.snapshot)?this.detachAndStoreRouteSubtree(t,e):this.deactivateRouteAndOutlet(t,e)}detachAndStoreRouteSubtree(t,e){const n=e.getContext(t.value.outlet);if(n&&n.outlet){const e=n.outlet.detach(),r=n.children.onOutletDeactivated();this.routeReuseStrategy.store(t.value.snapshot,{componentRef:e,route:t,contexts:r})}}deactivateRouteAndOutlet(t,e){const n=e.getContext(t.value.outlet),r=n&&t.value.component?n.children:e,s=fg(t);for(const i of Object.keys(s))this.deactivateRouteAndItsChildren(s[i],r);n&&n.outlet&&(n.outlet.deactivate(),n.children.onOutletDeactivated(),n.attachRef=null,n.resolver=null,n.route=null)}activateChildRoutes(t,e,n){const r=fg(e);t.children.forEach(t=>{this.activateRoutes(t,r[t.value.outlet],n),this.forwardEvent(new Af(t.value.snapshot))}),t.children.length&&this.forwardEvent(new Ef(t.value.snapshot))}activateRoutes(t,e,n){const r=t.value,s=e?e.value:null;if(Eg(r),r===s)if(r.component){const s=n.getOrCreateContext(r.outlet);this.activateChildRoutes(t,e,s.children)}else this.activateChildRoutes(t,e,n);else if(r.component){const e=n.getOrCreateContext(r.outlet);if(this.routeReuseStrategy.shouldAttach(r.snapshot)){const t=this.routeReuseStrategy.retrieve(r.snapshot);this.routeReuseStrategy.store(r.snapshot,null),e.children.onOutletReAttached(t.contexts),e.attachRef=t.componentRef,e.route=t.route.value,e.outlet&&e.outlet.attach(t.componentRef,t.route.value),Bg(t.route)}else{const n=function(t){for(let e=t.parent;e;e=e.parent){const t=e.routeConfig;if(t&&t._loadedConfig)return t._loadedConfig;if(t&&t.component)return null}return null}(r.snapshot),s=n?n.module.componentFactoryResolver:null;e.attachRef=null,e.route=r,e.resolver=s,e.outlet&&e.outlet.activateWith(r,s),this.activateChildRoutes(t,null,e.children)}}else this.activateChildRoutes(t,null,n)}}function Bg(t){Eg(t.value),t.children.forEach(Bg)}class Ug{constructor(t,e){this.routes=t,this.module=e}}function Hg(t){return"function"==typeof t}function $g(t){return t instanceof zf}const zg=Symbol("INITIAL_VALUE");function qg(){return cd(t=>function(...t){let e,n;return A(t[t.length-1])&&(n=t.pop()),"function"==typeof t[t.length-1]&&(e=t.pop()),1===t.length&&l(t[0])&&(t=t[0]),z(t,n).lift(new xp(e))}(t.map(t=>t.pipe(Ip(1),function(...t){const e=t[t.length-1];return A(e)?(t.pop(),n=>Op(t,n,e)):e=>Op(t,e)}(zg)))).pipe(Vp((t,e)=>{let n=!1;return e.reduce((t,r,s)=>{if(t!==zg)return t;if(r===zg&&(n=!0),!n){if(!1===r)return r;if(s===e.length-1||$g(r))return r}return t},t)},zg),Lp(t=>t!==zg),S(t=>$g(t)?t:!0===t),Ip(1)))}let Wg=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=Ht({type:t,selectors:[["ng-component"]],decls:1,vars:0,template:function(t,e){1&t&&yo(0,"router-outlet")},directives:function(){return[Bm]},encapsulation:2}),t})();function Gg(t,e=""){for(let n=0;n<t.length;n++){const r=t[n];Zg(r,Kg(e,r))}}function Zg(t,e){t.children&&Gg(t.children,e)}function Kg(t,e){return e?t||e.path?t&&!e.path?`${t}/`:!t&&e.path?e.path:`${t}/${e.path}`:"":t}function Yg(t){const e=t.children&&t.children.map(Yg),n=e?Object.assign(Object.assign({},t),{children:e}):Object.assign({},t);return!n.component&&(e||n.loadChildren)&&n.outlet&&n.outlet!==xf&&(n.component=Wg),n}function Qg(t){return t.outlet||xf}function Xg(t,e){const n=t.filter(t=>Qg(t)===e);return n.push(...t.filter(t=>Qg(t)!==e)),n}const Jg={matched:!1,consumedSegments:[],lastChild:0,parameters:{},positionalParamSegments:{}};function tm(t,e,n){var r;if(""===e.path)return"full"===e.pathMatch&&(t.hasChildren()||n.length>0)?Object.assign({},Jg):{matched:!0,consumedSegments:[],lastChild:0,parameters:{},positionalParamSegments:{}};const s=(e.matcher||Ff)(n,t,e);if(!s)return Object.assign({},Jg);const i={};Vf(s.posParams,(t,e)=>{i[e]=t.path});const o=s.consumed.length>0?Object.assign(Object.assign({},i),s.consumed[s.consumed.length-1].parameters):i;return{matched:!0,consumedSegments:s.consumed,lastChild:s.consumed.length,parameters:o,positionalParamSegments:null!==(r=s.posParams)&&void 0!==r?r:{}}}function em(t,e,n,r,s="corrected"){if(n.length>0&&function(t,e,n){return n.some(n=>nm(t,e,n)&&Qg(n)!==xf)}(t,n,r)){const s=new qf(e,function(t,e,n,r){const s={};s.primary=r,r._sourceSegment=t,r._segmentIndexShift=e.length;for(const i of n)if(""===i.path&&Qg(i)!==xf){const n=new qf([],{});n._sourceSegment=t,n._segmentIndexShift=e.length,s[Qg(i)]=n}return s}(t,e,r,new qf(n,t.children)));return s._sourceSegment=t,s._segmentIndexShift=e.length,{segmentGroup:s,slicedSegments:[]}}if(0===n.length&&function(t,e,n){return n.some(n=>nm(t,e,n))}(t,n,r)){const i=new qf(t.segments,function(t,e,n,r,s,i){const o={};for(const a of r)if(nm(t,n,a)&&!s[Qg(a)]){const n=new qf([],{});n._sourceSegment=t,n._segmentIndexShift="legacy"===i?t.segments.length:e.length,o[Qg(a)]=n}return Object.assign(Object.assign({},s),o)}(t,e,n,r,t.children,s));return i._sourceSegment=t,i._segmentIndexShift=e.length,{segmentGroup:i,slicedSegments:n}}const i=new qf(t.segments,t.children);return i._sourceSegment=t,i._segmentIndexShift=e.length,{segmentGroup:i,slicedSegments:n}}function nm(t,e,n){return(!(t.hasChildren()||e.length>0)||"full"!==n.pathMatch)&&""===n.path}function rm(t,e,n,r){return!!(Qg(t)===r||r!==xf&&nm(e,n,t))&&("**"===t.path||tm(e,t,n).matched)}function sm(t,e,n){return 0===e.length&&!t.children[n]}class im{constructor(t){this.segmentGroup=t||null}}class om{constructor(t){this.urlTree=t}}function am(t){return new v(e=>e.error(new im(t)))}function lm(t){return new v(e=>e.error(new om(t)))}function um(t){return new v(e=>e.error(new Error(`Only absolute redirects can have named outlets. redirectTo: '${t}'`)))}class cm{constructor(t,e,n,r,s){this.configLoader=e,this.urlSerializer=n,this.urlTree=r,this.config=s,this.allowRedirects=!0,this.ngModule=t.get(tl)}apply(){const t=em(this.urlTree.root,[],[],this.config).segmentGroup,e=new qf(t.segments,t.children);return this.expandSegmentGroup(this.ngModule,this.config,e,xf).pipe(S(t=>this.createUrlTree(hm(t),this.urlTree.queryParams,this.urlTree.fragment))).pipe(Hp(t=>{if(t instanceof om)return this.allowRedirects=!1,this.match(t.urlTree);if(t instanceof im)throw this.noMatchError(t);throw t}))}match(t){return this.expandSegmentGroup(this.ngModule,this.config,t.root,xf).pipe(S(e=>this.createUrlTree(hm(e),t.queryParams,t.fragment))).pipe(Hp(t=>{if(t instanceof im)throw this.noMatchError(t);throw t}))}noMatchError(t){return new Error(`Cannot match any routes. URL Segment: '${t.segmentGroup}'`)}createUrlTree(t,e,n){const r=t.segments.length>0?new qf([],{[xf]:t}):t;return new zf(r,e,n)}expandSegmentGroup(t,e,n,r){return 0===n.segments.length&&n.hasChildren()?this.expandChildren(t,e,n).pipe(S(t=>new qf([],t))):this.expandSegment(t,n,e,n.segments,r,!0)}expandChildren(t,e,n){const r=[];for(const s of Object.keys(n.children))"primary"===s?r.unshift(s):r.push(s);return V(r).pipe(qp(r=>{const s=n.children[r],i=Xg(e,r);return this.expandSegmentGroup(t,i,s,r).pipe(S(t=>({segment:t,outlet:r})))}),Vp((t,e)=>(t[e.outlet]=e.segment,t),{}),function(t,e){const n=arguments.length>=2;return r=>r.pipe(t?Lp((e,n)=>t(e,n,r)):y,Wp(1),n?Jp(e):Kp(()=>new Tp))}())}expandSegment(t,e,n,r,s,i){return V(n).pipe(qp(o=>this.expandSegmentAgainstRoute(t,e,n,o,r,s,i).pipe(Hp(t=>{if(t instanceof im)return nd(null);throw t}))),nf(t=>!!t),Hp((t,n)=>{if(t instanceof Tp||"EmptyError"===t.name){if(sm(e,r,s))return nd(new qf([],{}));throw new im(e)}throw t}))}expandSegmentAgainstRoute(t,e,n,r,s,i,o){return rm(r,e,s,i)?void 0===r.redirectTo?this.matchSegmentAgainstRoute(t,e,r,s,i):o&&this.allowRedirects?this.expandSegmentAgainstRouteUsingRedirect(t,e,n,r,s,i):am(e):am(e)}expandSegmentAgainstRouteUsingRedirect(t,e,n,r,s,i){return"**"===r.path?this.expandWildCardWithParamsAgainstRouteUsingRedirect(t,n,r,i):this.expandRegularSegmentAgainstRouteUsingRedirect(t,e,n,r,s,i)}expandWildCardWithParamsAgainstRouteUsingRedirect(t,e,n,r){const s=this.applyRedirectCommands([],n.redirectTo,{});return n.redirectTo.startsWith("/")?lm(s):this.lineralizeSegments(n,s).pipe(B(n=>{const s=new qf(n,{});return this.expandSegment(t,s,e,n,r,!1)}))}expandRegularSegmentAgainstRouteUsingRedirect(t,e,n,r,s,i){const{matched:o,consumedSegments:a,lastChild:l,positionalParamSegments:u}=tm(e,r,s);if(!o)return am(e);const c=this.applyRedirectCommands(a,r.redirectTo,u);return r.redirectTo.startsWith("/")?lm(c):this.lineralizeSegments(r,c).pipe(B(r=>this.expandSegment(t,e,n,r.concat(s.slice(l)),i,!1)))}matchSegmentAgainstRoute(t,e,n,r,s){if("**"===n.path)return n.loadChildren?(n._loadedConfig?nd(n._loadedConfig):this.configLoader.load(t.injector,n)).pipe(S(t=>(n._loadedConfig=t,new qf(r,{})))):nd(new qf(r,{}));const{matched:i,consumedSegments:o,lastChild:a}=tm(e,n,r);if(!i)return am(e);const l=r.slice(a);return this.getChildConfig(t,n,r).pipe(B(t=>{const r=t.module,i=t.routes,{segmentGroup:a,slicedSegments:u}=em(e,o,l,i),c=new qf(a.segments,a.children);if(0===u.length&&c.hasChildren())return this.expandChildren(r,i,c).pipe(S(t=>new qf(o,t)));if(0===i.length&&0===u.length)return nd(new qf(o,{}));const h=Qg(n)===s;return this.expandSegment(r,c,i,u,h?xf:s,!0).pipe(S(t=>new qf(o.concat(t.segments),t.children)))}))}getChildConfig(t,e,n){return e.children?nd(new Ug(e.children,t)):e.loadChildren?void 0!==e._loadedConfig?nd(e._loadedConfig):this.runCanLoadGuards(t.injector,e,n).pipe(B(n=>n?this.configLoader.load(t.injector,e).pipe(S(t=>(e._loadedConfig=t,t))):function(t){return new v(e=>e.error(Of(`Cannot load children because the guard of the route "path: '${t.path}'" returned false`)))}(e))):nd(new Ug([],t))}runCanLoadGuards(t,e,n){const r=e.canLoad;return r&&0!==r.length?nd(r.map(r=>{const s=t.get(r);let i;if(function(t){return t&&Hg(t.canLoad)}(s))i=s.canLoad(e,n);else{if(!Hg(s))throw new Error("Invalid CanLoad guard");i=s(e,n)}return jf(i)})).pipe(qg(),sf(t=>{if(!$g(t))return;const e=Of(`Redirecting to "${this.urlSerializer.serialize(t)}"`);throw e.url=t,e}),S(t=>!0===t)):nd(!0)}lineralizeSegments(t,e){let n=[],r=e.root;for(;;){if(n=n.concat(r.segments),0===r.numberOfChildren)return nd(n);if(r.numberOfChildren>1||!r.children.primary)return um(t.redirectTo);r=r.children.primary}}applyRedirectCommands(t,e,n){return this.applyRedirectCreatreUrlTree(e,this.urlSerializer.parse(e),t,n)}applyRedirectCreatreUrlTree(t,e,n,r){const s=this.createSegmentGroup(t,e.root,n,r);return new zf(s,this.createQueryParams(e.queryParams,this.urlTree.queryParams),e.fragment)}createQueryParams(t,e){const n={};return Vf(t,(t,r)=>{if("string"==typeof t&&t.startsWith(":")){const s=t.substring(1);n[r]=e[s]}else n[r]=t}),n}createSegmentGroup(t,e,n,r){const s=this.createSegments(t,e.segments,n,r);let i={};return Vf(e.children,(e,s)=>{i[s]=this.createSegmentGroup(t,e,n,r)}),new qf(s,i)}createSegments(t,e,n,r){return e.map(e=>e.path.startsWith(":")?this.findPosParam(t,e,r):this.findOrReturn(e,n))}findPosParam(t,e,n){const r=n[e.path.substring(1)];if(!r)throw new Error(`Cannot redirect to '${t}'. Cannot find '${e.path}'.`);return r}findOrReturn(t,e){let n=0;for(const r of e){if(r.path===t.path)return e.splice(n),r;n++}return t}}function hm(t){const e={};for(const n of Object.keys(t.children)){const r=hm(t.children[n]);(r.segments.length>0||r.hasChildren())&&(e[n]=r)}return function(t){if(1===t.numberOfChildren&&t.children.primary){const e=t.children.primary;return new qf(t.segments.concat(e.segments),e.children)}return t}(new qf(t.segments,e))}class dm{constructor(t){this.path=t,this.route=this.path[this.path.length-1]}}class pm{constructor(t,e){this.component=t,this.route=e}}function fm(t,e,n){const r=t._root;return mm(r,e?e._root:null,n,[r.value])}function gm(t,e,n){const r=function(t){if(!t)return null;for(let e=t.parent;e;e=e.parent){const t=e.routeConfig;if(t&&t._loadedConfig)return t._loadedConfig}return null}(e);return(r?r.module.injector:n).get(t)}function mm(t,e,n,r,s={canDeactivateChecks:[],canActivateChecks:[]}){const i=fg(e);return t.children.forEach(t=>{!function(t,e,n,r,s={canDeactivateChecks:[],canActivateChecks:[]}){const i=t.value,o=e?e.value:null,a=n?n.getContext(t.value.outlet):null;if(o&&i.routeConfig===o.routeConfig){const l=function(t,e,n){if("function"==typeof n)return n(t,e);switch(n){case"pathParamsChange":return!Gf(t.url,e.url);case"pathParamsOrQueryParamsChange":return!Gf(t.url,e.url)||!Pf(t.queryParams,e.queryParams);case"always":return!0;case"paramsOrQueryParamsChange":return!Dg(t,e)||!Pf(t.queryParams,e.queryParams);case"paramsChange":default:return!Dg(t,e)}}(o,i,i.routeConfig.runGuardsAndResolvers);l?s.canActivateChecks.push(new dm(r)):(i.data=o.data,i._resolvedData=o._resolvedData),mm(t,e,i.component?a?a.children:null:n,r,s),l&&a&&a.outlet&&a.outlet.isActivated&&s.canDeactivateChecks.push(new pm(a.outlet.component,o))}else o&&ym(e,a,s),s.canActivateChecks.push(new dm(r)),mm(t,null,i.component?a?a.children:null:n,r,s)}(t,i[t.value.outlet],n,r.concat([t.value]),s),delete i[t.value.outlet]}),Vf(i,(t,e)=>ym(t,n.getContext(e),s)),s}function ym(t,e,n){const r=fg(t),s=t.value;Vf(r,(t,r)=>{ym(t,s.component?e?e.children.getContext(r):null:e,n)}),n.canDeactivateChecks.push(new pm(s.component&&e&&e.outlet&&e.outlet.isActivated?e.outlet.component:null,s))}class vm{}function bm(t){return new v(e=>e.error(t))}class _m{constructor(t,e,n,r,s,i){this.rootComponentType=t,this.config=e,this.urlTree=n,this.url=r,this.paramsInheritanceStrategy=s,this.relativeLinkResolution=i}recognize(){const t=em(this.urlTree.root,[],[],this.config.filter(t=>void 0===t.redirectTo),this.relativeLinkResolution).segmentGroup,e=this.processSegmentGroup(this.config,t,xf);if(null===e)return null;const n=new bg([],Object.freeze({}),Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,{},xf,this.rootComponentType,null,this.urlTree.root,-1,{}),r=new pg(n,e),s=new _g(this.url,r);return this.inheritParamsAndData(s._root),s}inheritParamsAndData(t){const e=t.value,n=vg(e,this.paramsInheritanceStrategy);e.params=Object.freeze(n.params),e.data=Object.freeze(n.data),t.children.forEach(t=>this.inheritParamsAndData(t))}processSegmentGroup(t,e,n){return 0===e.segments.length&&e.hasChildren()?this.processChildren(t,e):this.processSegment(t,e,e.segments,n)}processChildren(t,e){const n=[];for(const s of Object.keys(e.children)){const r=e.children[s],i=Xg(t,s),o=this.processSegmentGroup(i,r,s);if(null===o)return null;n.push(...o)}const r=Cm(n);return r.sort((t,e)=>t.value.outlet===xf?-1:e.value.outlet===xf?1:t.value.outlet.localeCompare(e.value.outlet)),r}processSegment(t,e,n,r){for(const s of t){const t=this.processSegmentAgainstRoute(s,e,n,r);if(null!==t)return t}return sm(e,n,r)?[]:null}processSegmentAgainstRoute(t,e,n,r){if(t.redirectTo||!rm(t,e,n,r))return null;let s,i=[],o=[];if("**"===t.path){const r=n.length>0?Mf(n).parameters:{};s=new bg(n,r,Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,Am(t),Qg(t),t.component,t,Em(e),Dm(e)+n.length,Sm(t))}else{const r=tm(e,t,n);if(!r.matched)return null;i=r.consumedSegments,o=n.slice(r.lastChild),s=new bg(i,r.parameters,Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,Am(t),Qg(t),t.component,t,Em(e),Dm(e)+i.length,Sm(t))}const a=function(t){return t.children?t.children:t.loadChildren?t._loadedConfig.routes:[]}(t),{segmentGroup:l,slicedSegments:u}=em(e,i,o,a.filter(t=>void 0===t.redirectTo),this.relativeLinkResolution);if(0===u.length&&l.hasChildren()){const t=this.processChildren(a,l);return null===t?null:[new pg(s,t)]}if(0===a.length&&0===u.length)return[new pg(s,[])];const c=Qg(t)===r,h=this.processSegment(a,l,u,c?xf:r);return null===h?null:[new pg(s,h)]}}function wm(t){const e=t.value.routeConfig;return e&&""===e.path&&void 0===e.redirectTo}function Cm(t){const e=[],n=new Set;for(const r of t){if(!wm(r)){e.push(r);continue}const t=e.find(t=>r.value.routeConfig===t.value.routeConfig);void 0!==t?(t.children.push(...r.children),n.add(t)):e.push(r)}for(const r of n){const t=Cm(r.children);e.push(new pg(r.value,t))}return e.filter(t=>!n.has(t))}function Em(t){let e=t;for(;e._sourceSegment;)e=e._sourceSegment;return e}function Dm(t){let e=t,n=e._segmentIndexShift?e._segmentIndexShift:0;for(;e._sourceSegment;)e=e._sourceSegment,n+=e._segmentIndexShift?e._segmentIndexShift:0;return n-1}function Am(t){return t.data||{}}function Sm(t){return t.resolve||{}}function xm(t){return cd(e=>{const n=t(e);return n?V(n).pipe(S(()=>e)):nd(e)})}class km extends class{shouldDetach(t){return!1}store(t,e){}shouldAttach(t){return!1}retrieve(t){return null}shouldReuseRoute(t,e){return t.routeConfig===e.routeConfig}}{}const Tm=new $n("ROUTES");class Om{constructor(t,e,n,r){this.loader=t,this.compiler=e,this.onLoadStartListener=n,this.onLoadEndListener=r}load(t,e){if(e._loader$)return e._loader$;this.onLoadStartListener&&this.onLoadStartListener(e);const n=this.loadModuleFactory(e.loadChildren).pipe(S(n=>{this.onLoadEndListener&&this.onLoadEndListener(e);const r=n.create(t);return new Ug(Rf(r.injector.get(Tm,void 0,_t.Self|_t.Optional)).map(Yg),r)}),Hp(t=>{throw e._loader$=void 0,t}));return e._loader$=new K(n,()=>new E).pipe(W()),e._loader$}loadModuleFactory(t){return"string"==typeof t?V(this.loader.load(t)):jf(t()).pipe(B(t=>t instanceof el?nd(t):V(this.compiler.compileModuleAsync(t))))}}class Fm{constructor(){this.outlet=null,this.route=null,this.resolver=null,this.children=new Pm,this.attachRef=null}}class Pm{constructor(){this.contexts=new Map}onChildOutletCreated(t,e){const n=this.getOrCreateContext(t);n.outlet=e,this.contexts.set(t,n)}onChildOutletDestroyed(t){const e=this.getContext(t);e&&(e.outlet=null)}onOutletDeactivated(){const t=this.contexts;return this.contexts=new Map,t}onOutletReAttached(t){this.contexts=t}getOrCreateContext(t){let e=this.getContext(t);return e||(e=new Fm,this.contexts.set(t,e)),e}getContext(t){return this.contexts.get(t)||null}}class Im{shouldProcessUrl(t){return!0}extract(t){return t}merge(t,e){return t}}function Rm(t){throw t}function Mm(t,e,n){return e.parse("/")}function Vm(t,e){return nd(null)}const jm={paths:"exact",fragment:"ignored",matrixParams:"ignored",queryParams:"exact"},Nm={paths:"subset",fragment:"ignored",matrixParams:"ignored",queryParams:"subset"};let Lm=(()=>{class t{constructor(t,e,n,r,s,i,o,a){this.rootComponentType=t,this.urlSerializer=e,this.rootContexts=n,this.location=r,this.config=a,this.lastSuccessfulNavigation=null,this.currentNavigation=null,this.disposed=!1,this.lastLocationChangeInfo=null,this.navigationId=0,this.currentPageId=0,this.isNgZoneEnabled=!1,this.events=new E,this.errorHandler=Rm,this.malformedUriErrorHandler=Mm,this.navigated=!1,this.lastSuccessfulId=-1,this.hooks={beforePreactivation:Vm,afterPreactivation:Vm},this.urlHandlingStrategy=new Im,this.routeReuseStrategy=new km,this.onSameUrlNavigation="ignore",this.paramsInheritanceStrategy="emptyOnly",this.urlUpdateStrategy="deferred",this.relativeLinkResolution="corrected",this.canceledNavigationResolution="replace",this.ngModule=s.get(tl),this.console=s.get(Ql);const l=s.get(cu);this.isNgZoneEnabled=l instanceof cu&&cu.isInAngularZone(),this.resetConfig(a),this.currentUrlTree=new zf(new qf([],{}),{},null),this.rawUrlTree=this.currentUrlTree,this.browserUrlTree=this.currentUrlTree,this.configLoader=new Om(i,o,t=>this.triggerEvent(new _f(t)),t=>this.triggerEvent(new wf(t))),this.routerState=mg(this.currentUrlTree,this.rootComponentType),this.transitions=new Cp({id:0,targetPageId:0,currentUrlTree:this.currentUrlTree,currentRawUrl:this.currentUrlTree,extractedUrl:this.urlHandlingStrategy.extract(this.currentUrlTree),urlAfterRedirects:this.urlHandlingStrategy.extract(this.currentUrlTree),rawUrl:this.currentUrlTree,extras:{},resolve:null,reject:null,promise:Promise.resolve(!0),source:"imperative",restoredState:null,currentSnapshot:this.routerState.snapshot,targetSnapshot:null,currentRouterState:this.routerState,targetRouterState:null,guards:{canActivateChecks:[],canDeactivateChecks:[]},guardsResult:null}),this.navigations=this.setupNavigations(this.transitions),this.processNavigations()}setupNavigations(t){const e=this.events;return t.pipe(Lp(t=>0!==t.id),S(t=>Object.assign(Object.assign({},t),{extractedUrl:this.urlHandlingStrategy.extract(t.rawUrl)})),cd(t=>{let n=!1,r=!1;return nd(t).pipe(sf(t=>{this.currentNavigation={id:t.id,initialUrl:t.currentRawUrl,extractedUrl:t.extractedUrl,trigger:t.source,extras:t.extras,previousNavigation:this.lastSuccessfulNavigation?Object.assign(Object.assign({},this.lastSuccessfulNavigation),{previousNavigation:null}):null}}),cd(t=>{const n=!this.navigated||t.extractedUrl.toString()!==this.browserUrlTree.toString();if(("reload"===this.onSameUrlNavigation||n)&&this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl))return nd(t).pipe(cd(t=>{const n=this.transitions.getValue();return e.next(new hf(t.id,this.serializeUrl(t.extractedUrl),t.source,t.restoredState)),n!==this.transitions.getValue()?td:Promise.resolve(t)}),function(t,e,n,r){return cd(s=>function(t,e,n,r,s){return new cm(t,e,n,r,s).apply()}(t,e,n,s.extractedUrl,r).pipe(S(t=>Object.assign(Object.assign({},s),{urlAfterRedirects:t}))))}(this.ngModule.injector,this.configLoader,this.urlSerializer,this.config),sf(t=>{this.currentNavigation=Object.assign(Object.assign({},this.currentNavigation),{finalUrl:t.urlAfterRedirects})}),function(t,e,n,r,s){return B(i=>function(t,e,n,r,s="emptyOnly",i="legacy"){try{const o=new _m(t,e,n,r,s,i).recognize();return null===o?bm(new vm):nd(o)}catch(o){return bm(o)}}(t,e,i.urlAfterRedirects,n(i.urlAfterRedirects),r,s).pipe(S(t=>Object.assign(Object.assign({},i),{targetSnapshot:t}))))}(this.rootComponentType,this.config,t=>this.serializeUrl(t),this.paramsInheritanceStrategy,this.relativeLinkResolution),sf(t=>{"eager"===this.urlUpdateStrategy&&(t.extras.skipLocationChange||this.setBrowserUrl(t.urlAfterRedirects,t),this.browserUrlTree=t.urlAfterRedirects);const n=new gf(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);e.next(n)}));if(n&&this.rawUrlTree&&this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)){const{id:n,extractedUrl:r,source:s,restoredState:i,extras:o}=t,a=new hf(n,this.serializeUrl(r),s,i);e.next(a);const l=mg(r,this.rootComponentType).snapshot;return nd(Object.assign(Object.assign({},t),{targetSnapshot:l,urlAfterRedirects:r,extras:Object.assign(Object.assign({},o),{skipLocationChange:!1,replaceUrl:!1})}))}return this.rawUrlTree=t.rawUrl,this.browserUrlTree=t.urlAfterRedirects,t.resolve(null),td}),xm(t=>{const{targetSnapshot:e,id:n,extractedUrl:r,rawUrl:s,extras:{skipLocationChange:i,replaceUrl:o}}=t;return this.hooks.beforePreactivation(e,{navigationId:n,appliedUrlTree:r,rawUrlTree:s,skipLocationChange:!!i,replaceUrl:!!o})}),sf(t=>{const e=new mf(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);this.triggerEvent(e)}),S(t=>Object.assign(Object.assign({},t),{guards:fm(t.targetSnapshot,t.currentSnapshot,this.rootContexts)})),function(t,e){return B(n=>{const{targetSnapshot:r,currentSnapshot:s,guards:{canActivateChecks:i,canDeactivateChecks:o}}=n;return 0===o.length&&0===i.length?nd(Object.assign(Object.assign({},n),{guardsResult:!0})):function(t,e,n,r){return V(t).pipe(B(t=>function(t,e,n,r,s){const i=e&&e.routeConfig?e.routeConfig.canDeactivate:null;return i&&0!==i.length?nd(i.map(i=>{const o=gm(i,e,s);let a;if(function(t){return t&&Hg(t.canDeactivate)}(o))a=jf(o.canDeactivate(t,e,n,r));else{if(!Hg(o))throw new Error("Invalid CanDeactivate guard");a=jf(o(t,e,n,r))}return a.pipe(nf())})).pipe(qg()):nd(!0)}(t.component,t.route,n,e,r)),nf(t=>!0!==t,!0))}(o,r,s,t).pipe(B(n=>n&&"boolean"==typeof n?function(t,e,n,r){return V(e).pipe(qp(e=>Op(function(t,e){return null!==t&&e&&e(new Cf(t)),nd(!0)}(e.route.parent,r),function(t,e){return null!==t&&e&&e(new Df(t)),nd(!0)}(e.route,r),function(t,e,n){const r=e[e.length-1],s=e.slice(0,e.length-1).reverse().map(t=>function(t){const e=t.routeConfig?t.routeConfig.canActivateChild:null;return e&&0!==e.length?{node:t,guards:e}:null}(t)).filter(t=>null!==t).map(e=>Fp(()=>nd(e.guards.map(s=>{const i=gm(s,e.node,n);let o;if(function(t){return t&&Hg(t.canActivateChild)}(i))o=jf(i.canActivateChild(r,t));else{if(!Hg(i))throw new Error("Invalid CanActivateChild guard");o=jf(i(r,t))}return o.pipe(nf())})).pipe(qg())));return nd(s).pipe(qg())}(t,e.path,n),function(t,e,n){const r=e.routeConfig?e.routeConfig.canActivate:null;return r&&0!==r.length?nd(r.map(r=>Fp(()=>{const s=gm(r,e,n);let i;if(function(t){return t&&Hg(t.canActivate)}(s))i=jf(s.canActivate(e,t));else{if(!Hg(s))throw new Error("Invalid CanActivate guard");i=jf(s(e,t))}return i.pipe(nf())}))).pipe(qg()):nd(!0)}(t,e.route,n))),nf(t=>!0!==t,!0))}(r,i,t,e):nd(n)),S(t=>Object.assign(Object.assign({},n),{guardsResult:t})))})}(this.ngModule.injector,t=>this.triggerEvent(t)),sf(t=>{if($g(t.guardsResult)){const e=Of(`Redirecting to "${this.serializeUrl(t.guardsResult)}"`);throw e.url=t.guardsResult,e}const e=new yf(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot,!!t.guardsResult);this.triggerEvent(e)}),Lp(t=>!!t.guardsResult||(this.cancelNavigationTransition(t,""),!1)),xm(t=>{if(t.guards.canActivateChecks.length)return nd(t).pipe(sf(t=>{const e=new vf(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);this.triggerEvent(e)}),cd(t=>{let e=!1;return nd(t).pipe((n=this.paramsInheritanceStrategy,r=this.ngModule.injector,B(t=>{const{targetSnapshot:e,guards:{canActivateChecks:s}}=t;if(!s.length)return nd(t);let i=0;return V(s).pipe(qp(t=>function(t,e,n,r){return function(t,e,n,r){const s=Object.keys(t);if(0===s.length)return nd({});const i={};return V(s).pipe(B(s=>function(t,e,n,r){const s=gm(t,e,r);return jf(s.resolve?s.resolve(e,n):s(e,n))}(t[s],e,n,r).pipe(sf(t=>{i[s]=t}))),Wp(1),B(()=>Object.keys(i).length===s.length?nd(i):td))}(t._resolve,t,e,r).pipe(S(e=>(t._resolvedData=e,t.data=Object.assign(Object.assign({},t.data),vg(t,n).resolve),null)))}(t.route,e,n,r)),sf(()=>i++),Wp(1),B(e=>i===s.length?nd(t):td))})),sf({next:()=>e=!0,complete:()=>{e||this.cancelNavigationTransition(t,"At least one route resolver didn't emit any value.")}}));var n,r}),sf(t=>{const e=new bf(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);this.triggerEvent(e)}))}),xm(t=>{const{targetSnapshot:e,id:n,extractedUrl:r,rawUrl:s,extras:{skipLocationChange:i,replaceUrl:o}}=t;return this.hooks.afterPreactivation(e,{navigationId:n,appliedUrlTree:r,rawUrlTree:s,skipLocationChange:!!i,replaceUrl:!!o})}),S(t=>{const e=function(t,e,n){const r=Ag(t,e._root,n?n._root:void 0);return new gg(r,e)}(this.routeReuseStrategy,t.targetSnapshot,t.currentRouterState);return Object.assign(Object.assign({},t),{targetRouterState:e})}),sf(t=>{this.currentUrlTree=t.urlAfterRedirects,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,t.rawUrl),this.routerState=t.targetRouterState,"deferred"===this.urlUpdateStrategy&&(t.extras.skipLocationChange||this.setBrowserUrl(this.rawUrlTree,t),this.browserUrlTree=t.urlAfterRedirects)}),(i=this.rootContexts,o=this.routeReuseStrategy,a=t=>this.triggerEvent(t),S(t=>(new Lg(o,t.targetRouterState,t.currentRouterState,a).activate(i),t))),sf({next(){n=!0},complete(){n=!0}}),(s=()=>{n||r||this.cancelNavigationTransition(t,`Navigation ID ${t.id} is not equal to the current navigation id ${this.navigationId}`),this.currentNavigation=null},t=>t.lift(new lf(s))),Hp(n=>{if(r=!0,(s=n)&&s.ngNavigationCancelingError){const r=$g(n.url);r||(this.navigated=!0,this.resetStateAndUrl(t.currentRouterState,t.currentUrlTree,t.rawUrl));const s=new pf(t.id,this.serializeUrl(t.extractedUrl),n.message);e.next(s),r?setTimeout(()=>{const e=this.urlHandlingStrategy.merge(n.url,this.rawUrlTree);this.scheduleNavigation(e,"imperative",null,{skipLocationChange:t.extras.skipLocationChange,replaceUrl:"eager"===this.urlUpdateStrategy},{resolve:t.resolve,reject:t.reject,promise:t.promise})},0):t.resolve(!1)}else{this.resetStateAndUrl(t.currentRouterState,t.currentUrlTree,t.rawUrl);const r=new ff(t.id,this.serializeUrl(t.extractedUrl),n);e.next(r);try{t.resolve(this.errorHandler(n))}catch(i){t.reject(i)}}var s;return td}));var s,i,o,a}))}resetRootComponentType(t){this.rootComponentType=t,this.routerState.root.component=this.rootComponentType}getTransition(){const t=this.transitions.value;return t.urlAfterRedirects=this.browserUrlTree,t}setTransition(t){this.transitions.next(Object.assign(Object.assign({},this.getTransition()),t))}initialNavigation(){this.setUpLocationChangeListener(),0===this.navigationId&&this.navigateByUrl(this.location.path(!0),{replaceUrl:!0})}setUpLocationChangeListener(){this.locationSubscription||(this.locationSubscription=this.location.subscribe(t=>{const e=this.extractLocationChangeInfoFromEvent(t);this.shouldScheduleNavigation(this.lastLocationChangeInfo,e)&&setTimeout(()=>{const{source:t,state:n,urlTree:r}=e,s={replaceUrl:!0};if(n){const t=Object.assign({},n);delete t.navigationId,delete t.\u0275routerPageId,0!==Object.keys(t).length&&(s.state=t)}this.scheduleNavigation(r,t,n,s)},0),this.lastLocationChangeInfo=e}))}extractLocationChangeInfoFromEvent(t){var e;return{source:"popstate"===t.type?"popstate":"hashchange",urlTree:this.parseUrl(t.url),state:(null===(e=t.state)||void 0===e?void 0:e.navigationId)?t.state:null,transitionId:this.getTransition().id}}shouldScheduleNavigation(t,e){if(!t)return!0;const n=e.urlTree.toString()===t.urlTree.toString();return!(e.transitionId===t.transitionId&&n&&("hashchange"===e.source&&"popstate"===t.source||"popstate"===e.source&&"hashchange"===t.source))}get url(){return this.serializeUrl(this.currentUrlTree)}getCurrentNavigation(){return this.currentNavigation}triggerEvent(t){this.events.next(t)}resetConfig(t){Gg(t),this.config=t.map(Yg),this.navigated=!1,this.lastSuccessfulId=-1}ngOnDestroy(){this.dispose()}dispose(){this.transitions.complete(),this.locationSubscription&&(this.locationSubscription.unsubscribe(),this.locationSubscription=void 0),this.disposed=!0}createUrlTree(t,e={}){const{relativeTo:n,queryParams:r,fragment:s,queryParamsHandling:i,preserveFragment:o}=e,a=n||this.routerState.root,l=o?this.currentUrlTree.fragment:s;let u=null;switch(i){case"merge":u=Object.assign(Object.assign({},this.currentUrlTree.queryParams),r);break;case"preserve":u=this.currentUrlTree.queryParams;break;default:u=r||null}return null!==u&&(u=this.removeEmptyProps(u)),function(t,e,n,r,s){if(0===n.length)return Tg(e.root,e.root,e,r,s);const i=function(t){if("string"==typeof t[0]&&1===t.length&&"/"===t[0])return new Fg(!0,0,t);let e=0,n=!1;const r=t.reduce((t,r,s)=>{if("object"==typeof r&&null!=r){if(r.outlets){const e={};return Vf(r.outlets,(t,n)=>{e[n]="string"==typeof t?t.split("/"):t}),[...t,{outlets:e}]}if(r.segmentPath)return[...t,r.segmentPath]}return"string"!=typeof r?[...t,r]:0===s?(r.split("/").forEach((r,s)=>{0==s&&"."===r||(0==s&&""===r?n=!0:".."===r?e++:""!=r&&t.push(r))}),t):[...t,r]},[]);return new Fg(n,e,r)}(n);if(i.toRoot())return Tg(e.root,new qf([],{}),e,r,s);const o=function(t,e,n){if(t.isAbsolute)return new Pg(e.root,!0,0);if(-1===n.snapshot._lastPathIndex){const t=n.snapshot._urlSegment;return new Pg(t,t===e.root,0)}const r=xg(t.commands[0])?0:1;return function(t,e,n){let r=t,s=e,i=n;for(;i>s;){if(i-=s,r=r.parent,!r)throw new Error("Invalid number of '../'");s=r.segments.length}return new Pg(r,!1,s-i)}(n.snapshot._urlSegment,n.snapshot._lastPathIndex+r,t.numberOfDoubleDots)}(i,e,t),a=o.processChildren?Rg(o.segmentGroup,o.index,i.commands):Ig(o.segmentGroup,o.index,i.commands);return Tg(o.segmentGroup,a,e,r,s)}(a,this.currentUrlTree,t,u,null!=l?l:null)}navigateByUrl(t,e={skipLocationChange:!1}){const n=$g(t)?t:this.parseUrl(t),r=this.urlHandlingStrategy.merge(n,this.rawUrlTree);let s=null;return"computed"===this.canceledNavigationResolution&&(0===this.currentPageId||e.skipLocationChange||e.replaceUrl)&&(s=this.location.getState()),this.scheduleNavigation(r,"imperative",s,e)}navigate(t,e={skipLocationChange:!1}){return function(t){for(let e=0;e<t.length;e++){const n=t[e];if(null==n)throw new Error(`The requested path contains ${n} segment at index ${e}`)}}(t),this.navigateByUrl(this.createUrlTree(t,e),e)}serializeUrl(t){return this.urlSerializer.serialize(t)}parseUrl(t){let e;try{e=this.urlSerializer.parse(t)}catch(n){e=this.malformedUriErrorHandler(n,this.urlSerializer,t)}return e}isActive(t,e){let n;if(n=!0===e?Object.assign({},jm):!1===e?Object.assign({},Nm):e,$g(t))return Bf(this.currentUrlTree,t,n);const r=this.parseUrl(t);return Bf(this.currentUrlTree,r,n)}removeEmptyProps(t){return Object.keys(t).reduce((e,n)=>{const r=t[n];return null!=r&&(e[n]=r),e},{})}processNavigations(){this.navigations.subscribe(t=>{this.navigated=!0,this.lastSuccessfulId=t.id,this.currentPageId=t.targetPageId,this.events.next(new df(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(this.currentUrlTree))),this.lastSuccessfulNavigation=this.currentNavigation,t.resolve(!0)},t=>{this.console.warn("Unhandled Navigation Error: ")})}scheduleNavigation(t,e,n,r,s){if(this.disposed)return Promise.resolve(!1);const i=this.getTransition(),o="imperative"!==e&&"imperative"===(null==i?void 0:i.source),a=(this.lastSuccessfulId===i.id||this.currentNavigation?i.rawUrl:i.urlAfterRedirects).toString()===t.toString();if(o&&a)return Promise.resolve(!0);let l,u,c;s?(l=s.resolve,u=s.reject,c=s.promise):c=new Promise((t,e)=>{l=t,u=e});const h=++this.navigationId;let d;return d="computed"===this.canceledNavigationResolution?n&&n.\u0275routerPageId?n.\u0275routerPageId:this.currentPageId+1:0,this.setTransition({id:h,targetPageId:d,source:e,restoredState:n,currentUrlTree:this.currentUrlTree,currentRawUrl:this.rawUrlTree,rawUrl:t,extras:r,resolve:l,reject:u,promise:c,currentSnapshot:this.routerState.snapshot,currentRouterState:this.routerState}),c.catch(t=>Promise.reject(t))}setBrowserUrl(t,e){const n=this.urlSerializer.serialize(t),r=Object.assign(Object.assign({},e.extras.state),this.generateNgRouterState(e.id,e.targetPageId));this.location.isCurrentPathEqualTo(n)||e.extras.replaceUrl?this.location.replaceState(n,"",r):this.location.go(n,"",r)}resetStateAndUrl(t,e,n){this.routerState=t,this.currentUrlTree=e,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,n),this.resetUrlToCurrentUrlTree()}resetUrlToCurrentUrlTree(){this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree),"",this.generateNgRouterState(this.lastSuccessfulId,this.currentPageId))}cancelNavigationTransition(t,e){"computed"===this.canceledNavigationResolution?"popstate"!==t.source&&"eager"!==this.urlUpdateStrategy||this.location.historyGo(this.currentPageId-t.targetPageId):this.resetUrlToCurrentUrlTree();const n=new pf(t.id,this.serializeUrl(t.extractedUrl),e);this.triggerEvent(n),t.resolve(!1)}generateNgRouterState(t,e){return"computed"===this.canceledNavigationResolution?{navigationId:t,"\u0275routerPageId":e}:{navigationId:t}}}return t.\u0275fac=function(e){return new(e||t)(ar(qn),ar(Zf),ar(Pm),ar(rc),ar(Gi),ar(Pu),ar(au),ar(void 0))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Bm=(()=>{class t{constructor(t,e,n,r,s){this.parentContexts=t,this.location=e,this.resolver=n,this.changeDetector=s,this.activated=null,this._activatedRoute=null,this.activateEvents=new El,this.deactivateEvents=new El,this.name=r||xf,t.onChildOutletCreated(this.name,this)}ngOnDestroy(){this.parentContexts.onChildOutletDestroyed(this.name)}ngOnInit(){if(!this.activated){const t=this.parentContexts.getContext(this.name);t&&t.route&&(t.attachRef?this.attach(t.attachRef,t.route):this.activateWith(t.route,t.resolver||null))}}get isActivated(){return!!this.activated}get component(){if(!this.activated)throw new Error("Outlet is not activated");return this.activated.instance}get activatedRoute(){if(!this.activated)throw new Error("Outlet is not activated");return this._activatedRoute}get activatedRouteData(){return this._activatedRoute?this._activatedRoute.snapshot.data:{}}detach(){if(!this.activated)throw new Error("Outlet is not activated");this.location.detach();const t=this.activated;return this.activated=null,this._activatedRoute=null,t}attach(t,e){this.activated=t,this._activatedRoute=e,this.location.insert(t.hostView)}deactivate(){if(this.activated){const t=this.component;this.activated.destroy(),this.activated=null,this._activatedRoute=null,this.deactivateEvents.emit(t)}}activateWith(t,e){if(this.isActivated)throw new Error("Cannot activate an already activated outlet");this._activatedRoute=t;const n=(e=e||this.resolver).resolveComponentFactory(t._futureSnapshot.routeConfig.component),r=this.parentContexts.getOrCreateContext(this.name).children,s=new Um(t,r,this.location.injector);this.activated=this.location.createComponent(n,this.location.length,s),this.changeDetector.markForCheck(),this.activateEvents.emit(this.activated.instance)}}return t.\u0275fac=function(e){return new(e||t)(ho(Pm),ho(rl),ho(ga),("name",function(t,e){const n=t.attrs;if(n){const t=n.length;let r=0;for(;r<t;){const s=n[r];if(pn(s))break;if(0===s)r+=2;else if("number"==typeof s)for(r++;r<t&&"string"==typeof n[r];)r++;else{if(s===e)return n[r+1];r+=2}}}return null}(Pe(),"name")),ho(qa))},t.\u0275dir=Zt({type:t,selectors:[["router-outlet"]],outputs:{activateEvents:"activate",deactivateEvents:"deactivate"},exportAs:["outlet"]}),t})();class Um{constructor(t,e,n){this.route=t,this.childContexts=e,this.parent=n}get(t,e){return t===yg?this.route:t===Pm?this.childContexts:this.parent.get(t,e)}}class Hm{}class $m{preload(t,e){return nd(null)}}let zm=(()=>{class t{constructor(t,e,n,r,s){this.router=t,this.injector=r,this.preloadingStrategy=s,this.loader=new Om(e,n,e=>t.triggerEvent(new _f(e)),e=>t.triggerEvent(new wf(e)))}setUpPreloading(){this.subscription=this.router.events.pipe(Lp(t=>t instanceof df),qp(()=>this.preload())).subscribe(()=>{})}preload(){const t=this.injector.get(tl);return this.processRoutes(t,this.router.config)}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}processRoutes(t,e){const n=[];for(const r of e)if(r.loadChildren&&!r.canLoad&&r._loadedConfig){const t=r._loadedConfig;n.push(this.processRoutes(t.module,t.routes))}else r.loadChildren&&!r.canLoad?n.push(this.preloadConfig(t,r)):r.children&&n.push(this.processRoutes(t,r.children));return V(n).pipe($(),S(t=>{}))}preloadConfig(t,e){return this.preloadingStrategy.preload(e,()=>(e._loadedConfig?nd(e._loadedConfig):this.loader.load(t.injector,e)).pipe(B(t=>(e._loadedConfig=t,this.processRoutes(t.module,t.routes)))))}}return t.\u0275fac=function(e){return new(e||t)(ar(Lm),ar(Pu),ar(au),ar(Gi),ar(Hm))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),qm=(()=>{class t{constructor(t,e,n={}){this.router=t,this.viewportScroller=e,this.options=n,this.lastId=0,this.lastSource="imperative",this.restoredId=0,this.store={},n.scrollPositionRestoration=n.scrollPositionRestoration||"disabled",n.anchorScrolling=n.anchorScrolling||"disabled"}init(){"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.setHistoryScrollRestoration("manual"),this.routerEventsSubscription=this.createScrollEvents(),this.scrollEventsSubscription=this.consumeScrollEvents()}createScrollEvents(){return this.router.events.subscribe(t=>{t instanceof hf?(this.store[this.lastId]=this.viewportScroller.getScrollPosition(),this.lastSource=t.navigationTrigger,this.restoredId=t.restoredState?t.restoredState.navigationId:0):t instanceof df&&(this.lastId=t.id,this.scheduleScrollEvent(t,this.router.parseUrl(t.urlAfterRedirects).fragment))})}consumeScrollEvents(){return this.router.events.subscribe(t=>{t instanceof Sf&&(t.position?"top"===this.options.scrollPositionRestoration?this.viewportScroller.scrollToPosition([0,0]):"enabled"===this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition(t.position):t.anchor&&"enabled"===this.options.anchorScrolling?this.viewportScroller.scrollToAnchor(t.anchor):"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition([0,0]))})}scheduleScrollEvent(t,e){this.router.triggerEvent(new Sf(t,"popstate"===this.lastSource?this.store[this.restoredId]:null,e))}ngOnDestroy(){this.routerEventsSubscription&&this.routerEventsSubscription.unsubscribe(),this.scrollEventsSubscription&&this.scrollEventsSubscription.unsubscribe()}}return t.\u0275fac=function(e){return new(e||t)(ar(Lm),ar(ph),ar(void 0))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const Wm=new $n("ROUTER_CONFIGURATION"),Gm=new $n("ROUTER_FORROOT_GUARD"),Zm=[rc,{provide:Zf,useClass:Kf},{provide:Lm,useFactory:function(t,e,n,r,s,i,o,a={},l,u){const c=new Lm(null,t,e,n,r,s,i,Rf(o));return l&&(c.urlHandlingStrategy=l),u&&(c.routeReuseStrategy=u),function(t,e){t.errorHandler&&(e.errorHandler=t.errorHandler),t.malformedUriErrorHandler&&(e.malformedUriErrorHandler=t.malformedUriErrorHandler),t.onSameUrlNavigation&&(e.onSameUrlNavigation=t.onSameUrlNavigation),t.paramsInheritanceStrategy&&(e.paramsInheritanceStrategy=t.paramsInheritanceStrategy),t.relativeLinkResolution&&(e.relativeLinkResolution=t.relativeLinkResolution),t.urlUpdateStrategy&&(e.urlUpdateStrategy=t.urlUpdateStrategy)}(a,c),a.enableTracing&&c.events.subscribe(t=>{var e,n;null===(e=console.group)||void 0===e||e.call(console,`Router Event: ${t.constructor.name}`),console.log(t.toString()),console.log(t),null===(n=console.groupEnd)||void 0===n||n.call(console)}),c},deps:[Zf,Pm,rc,Gi,Pu,au,Tm,Wm,[class{},new hr],[class{},new hr]]},Pm,{provide:yg,useFactory:function(t){return t.routerState.root},deps:[Lm]},{provide:Pu,useClass:Mu},zm,$m,class{preload(t,e){return e().pipe(Hp(()=>nd(null)))}},{provide:Wm,useValue:{enableTracing:!1}}];function Km(){return new Au("Router",Lm)}let Ym=(()=>{class t{constructor(t,e){}static forRoot(e,n){return{ngModule:t,providers:[Zm,ty(e),{provide:Gm,useFactory:Jm,deps:[[Lm,new hr,new dr]]},{provide:Wm,useValue:n||{}},{provide:Xu,useFactory:Xm,deps:[$u,[new cr(tc),new hr],Wm]},{provide:qm,useFactory:Qm,deps:[Lm,ph,Wm]},{provide:Hm,useExisting:n&&n.preloadingStrategy?n.preloadingStrategy:$m},{provide:Au,multi:!0,useFactory:Km},[ey,{provide:$l,multi:!0,useFactory:ny,deps:[ey]},{provide:sy,useFactory:ry,deps:[ey]},{provide:Yl,multi:!0,useExisting:sy}]]}}static forChild(e){return{ngModule:t,providers:[ty(e)]}}}return t.\u0275fac=function(e){return new(e||t)(ar(Gm,8),ar(Lm,8))},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({}),t})();function Qm(t,e,n){return n.scrollOffset&&e.setOffset(n.scrollOffset),new qm(t,e,n)}function Xm(t,e,n={}){return n.useHash?new nc(t,e):new ec(t,e)}function Jm(t){return"guarded"}function ty(t){return[{provide:zn,multi:!0,useValue:t},{provide:Tm,multi:!0,useValue:t}]}let ey=(()=>{class t{constructor(t){this.injector=t,this.initNavigation=!1,this.resultOfPreactivationDone=new E}appInitializer(){return this.injector.get(qu,Promise.resolve(null)).then(()=>{let t=null;const e=new Promise(e=>t=e),n=this.injector.get(Lm),r=this.injector.get(Wm);return"disabled"===r.initialNavigation?(n.setUpLocationChangeListener(),t(!0)):"enabled"===r.initialNavigation||"enabledBlocking"===r.initialNavigation?(n.hooks.afterPreactivation=()=>this.initNavigation?nd(null):(this.initNavigation=!0,t(!0),this.resultOfPreactivationDone),n.initialNavigation()):t(!0),e})}bootstrapListener(t){const e=this.injector.get(Wm),n=this.injector.get(zm),r=this.injector.get(qm),s=this.injector.get(Lm),i=this.injector.get(Ou);t===i.components[0]&&("enabledNonBlocking"!==e.initialNavigation&&void 0!==e.initialNavigation||s.initialNavigation(),n.setUpPreloading(),r.init(),s.resetRootComponentType(i.componentTypes[0]),this.resultOfPreactivationDone.next(null),this.resultOfPreactivationDone.complete())}}return t.\u0275fac=function(e){return new(e||t)(ar(Gi))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function ny(t){return t.appInitializer.bind(t)}function ry(t){return t.bootstrapListener.bind(t)}const sy=new $n("Router Initializer");class iy{}class oy{}class ay{constructor(t){this.normalizedNames=new Map,this.lazyUpdate=null,t?this.lazyInit="string"==typeof t?()=>{this.headers=new Map,t.split("\n").forEach(t=>{const e=t.indexOf(":");if(e>0){const n=t.slice(0,e),r=n.toLowerCase(),s=t.slice(e+1).trim();this.maybeSetNormalizedName(n,r),this.headers.has(r)?this.headers.get(r).push(s):this.headers.set(r,[s])}})}:()=>{this.headers=new Map,Object.keys(t).forEach(e=>{let n=t[e];const r=e.toLowerCase();"string"==typeof n&&(n=[n]),n.length>0&&(this.headers.set(r,n),this.maybeSetNormalizedName(e,r))})}:this.headers=new Map}has(t){return this.init(),this.headers.has(t.toLowerCase())}get(t){this.init();const e=this.headers.get(t.toLowerCase());return e&&e.length>0?e[0]:null}keys(){return this.init(),Array.from(this.normalizedNames.values())}getAll(t){return this.init(),this.headers.get(t.toLowerCase())||null}append(t,e){return this.clone({name:t,value:e,op:"a"})}set(t,e){return this.clone({name:t,value:e,op:"s"})}delete(t,e){return this.clone({name:t,value:e,op:"d"})}maybeSetNormalizedName(t,e){this.normalizedNames.has(e)||this.normalizedNames.set(e,t)}init(){this.lazyInit&&(this.lazyInit instanceof ay?this.copyFrom(this.lazyInit):this.lazyInit(),this.lazyInit=null,this.lazyUpdate&&(this.lazyUpdate.forEach(t=>this.applyUpdate(t)),this.lazyUpdate=null))}copyFrom(t){t.init(),Array.from(t.headers.keys()).forEach(e=>{this.headers.set(e,t.headers.get(e)),this.normalizedNames.set(e,t.normalizedNames.get(e))})}clone(t){const e=new ay;return e.lazyInit=this.lazyInit&&this.lazyInit instanceof ay?this.lazyInit:this,e.lazyUpdate=(this.lazyUpdate||[]).concat([t]),e}applyUpdate(t){const e=t.name.toLowerCase();switch(t.op){case"a":case"s":let n=t.value;if("string"==typeof n&&(n=[n]),0===n.length)return;this.maybeSetNormalizedName(t.name,e);const r=("a"===t.op?this.headers.get(e):void 0)||[];r.push(...n),this.headers.set(e,r);break;case"d":const s=t.value;if(s){let t=this.headers.get(e);if(!t)return;t=t.filter(t=>-1===s.indexOf(t)),0===t.length?(this.headers.delete(e),this.normalizedNames.delete(e)):this.headers.set(e,t)}else this.headers.delete(e),this.normalizedNames.delete(e)}}forEach(t){this.init(),Array.from(this.normalizedNames.keys()).forEach(e=>t(this.normalizedNames.get(e),this.headers.get(e)))}}class ly{encodeKey(t){return uy(t)}encodeValue(t){return uy(t)}decodeKey(t){return decodeURIComponent(t)}decodeValue(t){return decodeURIComponent(t)}}function uy(t){return encodeURIComponent(t).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/gi,"$").replace(/%2C/gi,",").replace(/%3B/gi,";").replace(/%2B/gi,"+").replace(/%3D/gi,"=").replace(/%3F/gi,"?").replace(/%2F/gi,"/")}function cy(t){return`${t}`}class hy{constructor(t={}){if(this.updates=null,this.cloneFrom=null,this.encoder=t.encoder||new ly,t.fromString){if(t.fromObject)throw new Error("Cannot specify both fromString and fromObject.");this.map=function(t,e){const n=new Map;return t.length>0&&t.replace(/^\?/,"").split("&").forEach(t=>{const r=t.indexOf("="),[s,i]=-1==r?[e.decodeKey(t),""]:[e.decodeKey(t.slice(0,r)),e.decodeValue(t.slice(r+1))],o=n.get(s)||[];o.push(i),n.set(s,o)}),n}(t.fromString,this.encoder)}else t.fromObject?(this.map=new Map,Object.keys(t.fromObject).forEach(e=>{const n=t.fromObject[e];this.map.set(e,Array.isArray(n)?n:[n])})):this.map=null}has(t){return this.init(),this.map.has(t)}get(t){this.init();const e=this.map.get(t);return e?e[0]:null}getAll(t){return this.init(),this.map.get(t)||null}keys(){return this.init(),Array.from(this.map.keys())}append(t,e){return this.clone({param:t,value:e,op:"a"})}appendAll(t){const e=[];return Object.keys(t).forEach(n=>{const r=t[n];Array.isArray(r)?r.forEach(t=>{e.push({param:n,value:t,op:"a"})}):e.push({param:n,value:r,op:"a"})}),this.clone(e)}set(t,e){return this.clone({param:t,value:e,op:"s"})}delete(t,e){return this.clone({param:t,value:e,op:"d"})}toString(){return this.init(),this.keys().map(t=>{const e=this.encoder.encodeKey(t);return this.map.get(t).map(t=>e+"="+this.encoder.encodeValue(t)).join("&")}).filter(t=>""!==t).join("&")}clone(t){const e=new hy({encoder:this.encoder});return e.cloneFrom=this.cloneFrom||this,e.updates=(this.updates||[]).concat(t),e}init(){null===this.map&&(this.map=new Map),null!==this.cloneFrom&&(this.cloneFrom.init(),this.cloneFrom.keys().forEach(t=>this.map.set(t,this.cloneFrom.map.get(t))),this.updates.forEach(t=>{switch(t.op){case"a":case"s":const e=("a"===t.op?this.map.get(t.param):void 0)||[];e.push(cy(t.value)),this.map.set(t.param,e);break;case"d":if(void 0===t.value){this.map.delete(t.param);break}{let e=this.map.get(t.param)||[];const n=e.indexOf(cy(t.value));-1!==n&&e.splice(n,1),e.length>0?this.map.set(t.param,e):this.map.delete(t.param)}}}),this.cloneFrom=this.updates=null)}}class dy{constructor(){this.map=new Map}set(t,e){return this.map.set(t,e),this}get(t){return this.map.has(t)||this.map.set(t,t.defaultValue()),this.map.get(t)}delete(t){return this.map.delete(t),this}keys(){return this.map.keys()}}function py(t){return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer}function fy(t){return"undefined"!=typeof Blob&&t instanceof Blob}function gy(t){return"undefined"!=typeof FormData&&t instanceof FormData}class my{constructor(t,e,n,r){let s;if(this.url=e,this.body=null,this.reportProgress=!1,this.withCredentials=!1,this.responseType="json",this.method=t.toUpperCase(),function(t){switch(t){case"DELETE":case"GET":case"HEAD":case"OPTIONS":case"JSONP":return!1;default:return!0}}(this.method)||r?(this.body=void 0!==n?n:null,s=r):s=n,s&&(this.reportProgress=!!s.reportProgress,this.withCredentials=!!s.withCredentials,s.responseType&&(this.responseType=s.responseType),s.headers&&(this.headers=s.headers),s.context&&(this.context=s.context),s.params&&(this.params=s.params)),this.headers||(this.headers=new ay),this.context||(this.context=new dy),this.params){const t=this.params.toString();if(0===t.length)this.urlWithParams=e;else{const n=e.indexOf("?");this.urlWithParams=e+(-1===n?"?":n<e.length-1?"&":"")+t}}else this.params=new hy,this.urlWithParams=e}serializeBody(){return null===this.body?null:py(this.body)||fy(this.body)||gy(this.body)||"string"==typeof this.body?this.body:this.body instanceof hy?this.body.toString():"object"==typeof this.body||"boolean"==typeof this.body||Array.isArray(this.body)?JSON.stringify(this.body):this.body.toString()}detectContentTypeHeader(){return null===this.body||gy(this.body)?null:fy(this.body)?this.body.type||null:py(this.body)?null:"string"==typeof this.body?"text/plain":this.body instanceof hy?"application/x-www-form-urlencoded;charset=UTF-8":"object"==typeof this.body||"number"==typeof this.body||"boolean"==typeof this.body?"application/json":null}clone(t={}){var e;const n=t.method||this.method,r=t.url||this.url,s=t.responseType||this.responseType,i=void 0!==t.body?t.body:this.body,o=void 0!==t.withCredentials?t.withCredentials:this.withCredentials,a=void 0!==t.reportProgress?t.reportProgress:this.reportProgress;let l=t.headers||this.headers,u=t.params||this.params;const c=null!==(e=t.context)&&void 0!==e?e:this.context;return void 0!==t.setHeaders&&(l=Object.keys(t.setHeaders).reduce((e,n)=>e.set(n,t.setHeaders[n]),l)),t.setParams&&(u=Object.keys(t.setParams).reduce((e,n)=>e.set(n,t.setParams[n]),u)),new my(n,r,i,{params:u,headers:l,context:c,reportProgress:a,responseType:s,withCredentials:o})}}var yy=function(t){return t[t.Sent=0]="Sent",t[t.UploadProgress=1]="UploadProgress",t[t.ResponseHeader=2]="ResponseHeader",t[t.DownloadProgress=3]="DownloadProgress",t[t.Response=4]="Response",t[t.User=5]="User",t}({});class vy{constructor(t,e=200,n="OK"){this.headers=t.headers||new ay,this.status=void 0!==t.status?t.status:e,this.statusText=t.statusText||n,this.url=t.url||null,this.ok=this.status>=200&&this.status<300}}class by extends vy{constructor(t={}){super(t),this.type=yy.ResponseHeader}clone(t={}){return new by({headers:t.headers||this.headers,status:void 0!==t.status?t.status:this.status,statusText:t.statusText||this.statusText,url:t.url||this.url||void 0})}}class _y extends vy{constructor(t={}){super(t),this.type=yy.Response,this.body=void 0!==t.body?t.body:null}clone(t={}){return new _y({body:void 0!==t.body?t.body:this.body,headers:t.headers||this.headers,status:void 0!==t.status?t.status:this.status,statusText:t.statusText||this.statusText,url:t.url||this.url||void 0})}}class wy extends vy{constructor(t){super(t,0,"Unknown Error"),this.name="HttpErrorResponse",this.ok=!1,this.message=this.status>=200&&this.status<300?`Http failure during parsing for ${t.url||"(unknown url)"}`:`Http failure response for ${t.url||"(unknown url)"}: ${t.status} ${t.statusText}`,this.error=t.error||null}}function Cy(t,e){return{body:e,headers:t.headers,context:t.context,observe:t.observe,params:t.params,reportProgress:t.reportProgress,responseType:t.responseType,withCredentials:t.withCredentials}}let Ey=(()=>{class t{constructor(t){this.handler=t}request(t,e,n={}){let r;if(t instanceof my)r=t;else{let s,i;s=n.headers instanceof ay?n.headers:new ay(n.headers),n.params&&(i=n.params instanceof hy?n.params:new hy({fromObject:n.params})),r=new my(t,e,void 0!==n.body?n.body:null,{headers:s,context:n.context,params:i,reportProgress:n.reportProgress,responseType:n.responseType||"json",withCredentials:n.withCredentials})}const s=nd(r).pipe(qp(t=>this.handler.handle(t)));if(t instanceof my||"events"===n.observe)return s;const i=s.pipe(Lp(t=>t instanceof _y));switch(n.observe||"body"){case"body":switch(r.responseType){case"arraybuffer":return i.pipe(S(t=>{if(null!==t.body&&!(t.body instanceof ArrayBuffer))throw new Error("Response is not an ArrayBuffer.");return t.body}));case"blob":return i.pipe(S(t=>{if(null!==t.body&&!(t.body instanceof Blob))throw new Error("Response is not a Blob.");return t.body}));case"text":return i.pipe(S(t=>{if(null!==t.body&&"string"!=typeof t.body)throw new Error("Response is not a string.");return t.body}));case"json":default:return i.pipe(S(t=>t.body))}case"response":return i;default:throw new Error(`Unreachable: unhandled observe type ${n.observe}}`)}}delete(t,e={}){return this.request("DELETE",t,e)}get(t,e={}){return this.request("GET",t,e)}head(t,e={}){return this.request("HEAD",t,e)}jsonp(t,e){return this.request("JSONP",t,{params:(new hy).append(e,"JSONP_CALLBACK"),observe:"body",responseType:"json"})}options(t,e={}){return this.request("OPTIONS",t,e)}patch(t,e,n={}){return this.request("PATCH",t,Cy(n,e))}post(t,e,n={}){return this.request("POST",t,Cy(n,e))}put(t,e,n={}){return this.request("PUT",t,Cy(n,e))}}return t.\u0275fac=function(e){return new(e||t)(ar(iy))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();class Dy{constructor(t,e){this.next=t,this.interceptor=e}handle(t){return this.interceptor.intercept(t,this.next)}}const Ay=new $n("HTTP_INTERCEPTORS");let Sy=(()=>{class t{intercept(t,e){return e.handle(t)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const xy=/^\)\]\}',?\n/;let ky=(()=>{class t{constructor(t){this.xhrFactory=t}handle(t){if("JSONP"===t.method)throw new Error("Attempted to construct Jsonp request without HttpClientJsonpModule installed.");return new v(e=>{const n=this.xhrFactory.build();if(n.open(t.method,t.urlWithParams),t.withCredentials&&(n.withCredentials=!0),t.headers.forEach((t,e)=>n.setRequestHeader(t,e.join(","))),t.headers.has("Accept")||n.setRequestHeader("Accept","application/json, text/plain, */*"),!t.headers.has("Content-Type")){const e=t.detectContentTypeHeader();null!==e&&n.setRequestHeader("Content-Type",e)}if(t.responseType){const e=t.responseType.toLowerCase();n.responseType="json"!==e?e:"text"}const r=t.serializeBody();let s=null;const i=()=>{if(null!==s)return s;const e=1223===n.status?204:n.status,r=n.statusText||"OK",i=new ay(n.getAllResponseHeaders()),o=function(t){return"responseURL"in t&&t.responseURL?t.responseURL:/^X-Request-URL:/m.test(t.getAllResponseHeaders())?t.getResponseHeader("X-Request-URL"):null}(n)||t.url;return s=new by({headers:i,status:e,statusText:r,url:o}),s},o=()=>{let{headers:r,status:s,statusText:o,url:a}=i(),l=null;204!==s&&(l=void 0===n.response?n.responseText:n.response),0===s&&(s=l?200:0);let u=s>=200&&s<300;if("json"===t.responseType&&"string"==typeof l){const t=l;l=l.replace(xy,"");try{l=""!==l?JSON.parse(l):null}catch(c){l=t,u&&(u=!1,l={error:c,text:l})}}u?(e.next(new _y({body:l,headers:r,status:s,statusText:o,url:a||void 0})),e.complete()):e.error(new wy({error:l,headers:r,status:s,statusText:o,url:a||void 0}))},a=t=>{const{url:r}=i(),s=new wy({error:t,status:n.status||0,statusText:n.statusText||"Unknown Error",url:r||void 0});e.error(s)};let l=!1;const u=r=>{l||(e.next(i()),l=!0);let s={type:yy.DownloadProgress,loaded:r.loaded};r.lengthComputable&&(s.total=r.total),"text"===t.responseType&&n.responseText&&(s.partialText=n.responseText),e.next(s)},c=t=>{let n={type:yy.UploadProgress,loaded:t.loaded};t.lengthComputable&&(n.total=t.total),e.next(n)};return n.addEventListener("load",o),n.addEventListener("error",a),n.addEventListener("timeout",a),n.addEventListener("abort",a),t.reportProgress&&(n.addEventListener("progress",u),null!==r&&n.upload&&n.upload.addEventListener("progress",c)),n.send(r),e.next({type:yy.Sent}),()=>{n.removeEventListener("error",a),n.removeEventListener("abort",a),n.removeEventListener("load",o),n.removeEventListener("timeout",a),t.reportProgress&&(n.removeEventListener("progress",u),null!==r&&n.upload&&n.upload.removeEventListener("progress",c)),n.readyState!==n.DONE&&n.abort()}})}}return t.\u0275fac=function(e){return new(e||t)(ar(mh))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const Ty=new $n("XSRF_COOKIE_NAME"),Oy=new $n("XSRF_HEADER_NAME");class Fy{}let Py=(()=>{class t{constructor(t,e,n){this.doc=t,this.platform=e,this.cookieName=n,this.lastCookieString="",this.lastToken=null,this.parseCount=0}getToken(){if("server"===this.platform)return null;const t=this.doc.cookie||"";return t!==this.lastCookieString&&(this.parseCount++,this.lastToken=Kc(t,this.cookieName),this.lastCookieString=t),this.lastToken}}return t.\u0275fac=function(e){return new(e||t)(ar(Hu),ar(Kl),ar(Ty))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Iy=(()=>{class t{constructor(t,e){this.tokenService=t,this.headerName=e}intercept(t,e){const n=t.url.toLowerCase();if("GET"===t.method||"HEAD"===t.method||n.startsWith("http://")||n.startsWith("https://"))return e.handle(t);const r=this.tokenService.getToken();return null===r||t.headers.has(this.headerName)||(t=t.clone({headers:t.headers.set(this.headerName,r)})),e.handle(t)}}return t.\u0275fac=function(e){return new(e||t)(ar(Fy),ar(Oy))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Ry=(()=>{class t{constructor(t,e){this.backend=t,this.injector=e,this.chain=null}handle(t){if(null===this.chain){const t=this.injector.get(Ay,[]);this.chain=t.reduceRight((t,e)=>new Dy(t,e),this.backend)}return this.chain.handle(t)}}return t.\u0275fac=function(e){return new(e||t)(ar(oy),ar(Gi))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),My=(()=>{class t{static disable(){return{ngModule:t,providers:[{provide:Iy,useClass:Sy}]}}static withOptions(e={}){return{ngModule:t,providers:[e.cookieName?{provide:Ty,useValue:e.cookieName}:[],e.headerName?{provide:Oy,useValue:e.headerName}:[]]}}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[Iy,{provide:Ay,useExisting:Iy,multi:!0},{provide:Fy,useClass:Py},{provide:Ty,useValue:"XSRF-TOKEN"},{provide:Oy,useValue:"X-XSRF-TOKEN"}]}),t})(),Vy=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[Ey,{provide:iy,useClass:Ry},ky,{provide:oy,useExisting:ky}],imports:[[My.withOptions({cookieName:"XSRF-TOKEN",headerName:"X-XSRF-TOKEN"})]]}),t})();function jy(t,e,n,r){var s,i=arguments.length,o=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,r);else for(var a=t.length-1;a>=0;a--)(s=t[a])&&(o=(i<3?s(o):i>3?s(e,n,o):s(e,n))||o);return i>3&&o&&Object.defineProperty(e,n,o),o}class Ny{constructor(t,e){this.predicate=t,this.inclusive=e}call(t,e){return e.subscribe(new Ly(t,this.predicate,this.inclusive))}}class Ly extends f{constructor(t,e,n){super(t),this.predicate=e,this.inclusive=n,this.index=0}_next(t){const e=this.destination;let n;try{n=this.predicate(t,this.index++)}catch(r){return void e.error(r)}this.nextOrComplete(t,n)}nextOrComplete(t,e){const n=this.destination;Boolean(e)?n.next(t):(this.inclusive&&n.next(t),n.complete())}}function By(t,e){1&t&&ko(0)}const Uy=["*"];function Hy(t,e){1&t&&vo(0)}function $y(t,e){if(1&t){const t=bo();go(0,"section",2),go(1,"po-accordion-item-header",3),Co("p-toggle",function(e){const n=Fe(t).$implicit;return Ao().headerToggle(e,n)}),mo(),go(2,"po-accordion-item-body",4),uo(3,Hy,1,0,"ng-container",5),mo(),mo()}if(2&t){const t=e.$implicit;Mo("po-accordion-item-active",t.expanded),Ns(1),po("p-expanded",t.expanded)("p-label",t.label),Ns(1),po("p-expanded",t.expanded),Ns(1),po("ngTemplateOutlet",t.templateRef)}}function zy(t,e){1&t&&(go(0,"div",1),go(1,"div",2),ko(2),mo(),mo()),2&t&&po("@toggleBody",void 0)}function qy(t,e){1&t&&vo(0)}function Wy(t,e){1&t&&yo(0,"i",2),2&t&&jo(Qn,Vo,Ao().class,!0)}function Gy(t,e){if(1&t&&(go(0,"span",2),Wo(1),mo()),2&t){const t=Ao();Ns(1),Go(t.text)}}const Zy=["button"];function Ky(t,e){1&t&&(go(0,"div",5),yo(1,"po-loading-icon",6),mo())}function Yy(t,e){1&t&&yo(0,"po-icon",7),2&t&&po("p-icon",Ao().icon)}function Qy(t,e){if(1&t&&(go(0,"span",8),Wo(1),mo()),2&t){const t=Ao();Ns(1),Go(t.label)}}function Xy(t,e){if(1&t&&(go(0,"div",2),Wo(1),mo()),2&t){const t=Ao();Ns(1),Go(t.label)}}function Jy(t,e){if(1&t&&(go(0,"span",2),yo(1,"span",3),Wo(2),mo()),2&t){const t=Ao();Ns(2),Zo(" ",t.errorPattern," ")}}function tv(t,e){if(1&t&&(go(0,"span",5),Wo(1),mo()),2&t){const t=Ao();Ns(1),Go(t.literals.optional)}}function ev(t,e){if(1&t&&(go(0,"div",6),Wo(1),mo()),2&t){const t=Ao();Ns(1),Go(t.help)}}function nv(t,e){if(1&t){const t=bo();go(0,"span",1),Co("click",function(){return Fe(t),Ao().clear()}),mo()}}const rv=["inp"],sv=["modalContent"];function iv(t,e){if(1&t){const t=bo();go(0,"a",14),Co("click",function(){return Fe(t),Ao(2).close(!0)}),yo(1,"span",15),mo()}}function ov(t,e){if(1&t){const t=bo();go(0,"po-button",16),Co("p-click",function(){return Fe(t),Ao(2).secondaryAction.action()}),mo()}if(2&t){const t=Ao(2);po("p-disabled",t.secondaryAction.disabled)("p-label",t.secondaryAction.label)("p-loading",t.secondaryAction.loading)("p-type",t.getSecondaryActionButtonType())}}function av(t,e){if(1&t){const t=bo();go(0,"div",1),Co("keydown.esc",function(e){return Fe(t),Ao().closeModalOnEscapeKey(e)}),go(1,"div",2),go(2,"div",3),Co("mousedown",function(e){return Fe(t),Ao().onClickOut(e)}),go(3,"div",4),go(4,"div",5,6),go(6,"div",7),go(7,"div",8),Wo(8),mo(),uo(9,iv,2,0,"a",9),mo(),go(10,"div",10),ko(11),mo(),go(12,"div",11),uo(13,ov,1,4,"po-button",12),go(14,"po-button",13),Co("p-click",function(){return Fe(t),Ao().primaryAction.action()}),mo(),mo(),mo(),mo(),mo(),mo(),mo()}if(2&t){const t=Ao();Ns(4),Ko("po-modal-content po-modal-",t.size,""),Ns(4),Zo(" ",t.title," "),Ns(1),po("ngIf",!t.hideClose),Ns(4),po("ngIf",t.secondaryAction),Ns(1),po("p-disabled",t.primaryAction.disabled)("p-label",t.primaryAction.label)("p-loading",t.primaryAction.loading)("p-type",t.getPrimaryActionButtonType())}}const lv=["toaster"];function uv(t,e){if(1&t){const t=bo();go(0,"div",7),Co("click",function(e){return Fe(t),Ao().poToasterAction(e)}),Wo(1),mo()}if(2&t){const t=Ao();Ns(1),Zo(" ",t.actionLabel," ")}}const cv=function(t){return{$implicit:t}};function hv(t,e){if(1&t&&(go(0,"div",8),yo(1,"po-icon",9),mo()),2&t){const t=Ao();Ns(1),Mo("po-field-icon-disabled",t.disabled),po("p-icon",t.icon)}}function dv(t,e){if(1&t){const t=bo();go(0,"po-clean",10),Co("p-change-event",function(e){return Fe(t),Ao().clear(e)}),mo()}2&t&&po("p-element-ref",Ao().inputEl)}const pv=["contentList"],fv=["icon"],gv=["select"],mv=["selectButton"];function yv(t,e){1&t&&yo(0,"option",14)}function vv(t,e){if(1&t){const t=bo();go(0,"option",15),Co("click",function(){const e=Fe(t).$implicit;return Ao().onOptionClick(e)}),Wo(1),mo()}if(2&t){const t=e.$implicit;po("disabled",Ao().readonly)("value",t.value),Ns(1),Zo(" ",null==t?null:t.label," ")}}function bv(t,e){1&t&&vo(0)}function _v(t,e){if(1&t&&(go(0,"span"),Wo(1),mo()),2&t){const t=Ao().$implicit;Ns(1),Go(null==t?null:t.label)}}function wv(t,e){}function Cv(t,e){if(1&t){const t=bo();go(0,"li",16),Co("click",function(){const e=Fe(t).$implicit;return Ao().onOptionClick(e)}),go(1,"div",17),uo(2,bv,1,0,"ng-container",18),uo(3,_v,2,1,"ng-template",null,19,Hl),uo(5,wv,0,0,"ng-template",20,21,Hl),mo(),mo()}if(2&t){const t=e.$implicit,n=co(4),r=co(6),s=Ao();Mo("po-select-item-selected",s.selectedValue===t.value),po("value",t.value),Ns(2),po("ngIf",s.selectOptionTemplate)("ngIfThen",r)("ngIfElse",n),Ns(3),po("ngTemplateOutlet",null==s.selectOptionTemplate?null:s.selectOptionTemplate.templateRef)("ngTemplateOutletContext",bl(8,cv,t))}}const Ev=function(t,e){return{"po-select-mobile":t,"po-invisible":e}},Dv=function(t,e){return{"po-select-button-disabled":t,"po-select-button-readonly":e}},Av=function(t,e){return{"po-field-icon-disabled":t,"po-field-icon-readonly":e}},Sv=function(t){return{"po-invisible":t}};function xv(t,e){if(1&t&&(go(0,"div",6),go(1,"span",7),Wo(2),mo(),mo()),2&t){const t=Ao();Ns(2),Go(t.tagOrientation?t.label+":":t.label)}}function kv(t,e){if(1&t&&yo(0,"po-icon",8),2&t){const t=Ao();po("p-icon",t.type?t.iconFromType:t.icon)}}function Tv(t,e){if(1&t&&(go(0,"div",6),yo(1,"po-tag",7),mo()),2&t){const t=Ao().$implicit,e=Ao();Ns(1),po("p-color",e.typeColor(t.type))("p-value",e.typeValue(t.type))}}function Ov(t,e){if(1&t&&(go(0,"po-accordion-item",4),uo(1,Tv,2,2,"div",5),go(2,"div",1),go(3,"p"),Wo(4),mo(),mo(),mo()),2&t){const t=e.$implicit;po("p-label",Ao().formatDetailItemTitle(t)),Ns(1),po("ngIf",t.type),Ns(3),Go(t.detailedMessage)}}let Fv=(()=>{class t{constructor(){this.subjectChild=new E}receiveFromChildAccordionClicked(){return this.subjectChild.asObservable()}sendToParentAccordionItemClicked(t){this.subjectChild.next(t)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Pv=(()=>{class t{constructor(t){this.accordionService=t}collapse(){this.expanded=!1,this.accordionService.sendToParentAccordionItemClicked(this)}expand(){this.expanded=!0,this.accordionService.sendToParentAccordionItemClicked(this)}}return t.\u0275fac=function(e){return new(e||t)(ho(Fv))},t.\u0275cmp=Ht({type:t,selectors:[["po-accordion-item"]],viewQuery:function(t,e){if(1&t&&Vl(Ya,7),2&t){let t;Ml(t=Nl())&&(e.templateRef=t.first)}},inputs:{label:["p-label","label"]},ngContentSelectors:Uy,decls:1,vars:0,template:function(t,e){1&t&&(xo(),uo(0,By,1,0,"ng-template"))},encapsulation:2}),t})(),Iv=(()=>{class t extends class{}{constructor(t){super(),this.accordionService=t,this.receiveFromChildAccordionSubscription()}ngOnDestroy(){this.accordionServiceSubscription.unsubscribe()}headerToggle(t,e){e.expanded=t,this.toggle(e)}receiveFromChildAccordionSubscription(){this.accordionServiceSubscription=this.accordionService.receiveFromChildAccordionClicked().subscribe(t=>this.toggle(t))}toggle(t){t.expanded?(this.expandedActiveAccordionItem&&this.expandedActiveAccordionItem.collapse(),this.expandedActiveAccordionItem=t):this.expandedActiveAccordionItem=null}}return t.\u0275fac=function(e){return new(e||t)(ho(Fv))},t.\u0275cmp=Ht({type:t,selectors:[["po-accordion"]],contentQueries:function(t,e,n){if(1&t&&jl(n,Pv,4),2&t){let t;Ml(t=Nl())&&(e.poAccordionItems=t)}},features:[da([Fv]),Ki],decls:2,vars:1,consts:[[1,"po-accordion","po-container","po-container-no-padding"],["class","po-accordion-item",3,"po-accordion-item-active",4,"ngFor","ngForOf"],[1,"po-accordion-item"],[3,"p-expanded","p-label","p-toggle"],[3,"p-expanded"],[4,"ngTemplateOutlet"]],template:function(t,e){1&t&&(go(0,"div",0),uo(1,$y,4,6,"section",1),mo()),2&t&&(Ns(1),po("ngForOf",e.poAccordionItems))},directives:function(){return[Xc,Mv,Rv,rh]},encapsulation:2}),t})(),Rv=(()=>{class t{constructor(){this.expanded=!1}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=Ht({type:t,selectors:[["po-accordion-item-body"]],inputs:{expanded:["p-expanded","expanded"]},ngContentSelectors:Uy,decls:1,vars:1,consts:[["class","po-accordion-item-body",4,"ngIf"],[1,"po-accordion-item-body"],[1,"po-accordion-item-body-content"]],template:function(t,e){1&t&&(xo(),uo(0,zy,3,1,"div",0)),2&t&&po("ngIf",e.expanded)},directives:[th],encapsulation:2,data:{animation:[("toggleBody",e=[wp("* => void",[_p({height:"*"}),bp(200,_p({height:0}))]),wp("void => *",[_p({height:"0"}),bp(200,_p({height:"*"}))])],{type:7,name:"toggleBody",definitions:e,options:{}})]}}),t;var e})(),Mv=(()=>{class t{constructor(){this.expanded=!1,this.toggle=new El}onClick(){this.expanded=!this.expanded,this.toggle.emit(this.expanded)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=Ht({type:t,selectors:[["po-accordion-item-header"]],inputs:{expanded:["p-expanded","expanded"],label:["p-label","label"]},outputs:{toggle:"p-toggle"},decls:6,vars:1,consts:[[1,"po-accordion-item-header"],[1,"po-accordion-item-header-button","po-clickable",3,"click"],[1,"po-text-ellipsis","po-accordion-item-header-title"],[1,"po-icon","po-accordion-item-header-icon","po-icon-arrow-down"],["icon",""]],template:function(t,e){1&t&&(go(0,"header",0),go(1,"button",1),Co("click",function(){return e.onClick()}),go(2,"div",2),Wo(3),mo(),yo(4,"span",3,4),mo(),mo()),2&t&&(Ns(3),Go(e.label))},encapsulation:2,changeDetection:0}),t})(),Vv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh]]}),t})(),jv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh]]}),t})();const Nv=[{description:"English",language:"en"},{description:"Espa\xf1ol",language:"es"},{description:"Portugu\xeas",language:"pt"},{description:"P\u0443\u0441\u0441\u043a\u0438\u0439",language:"ru"}].map(t=>t.language),Lv="pt",Bv=[{separator:".",language:"en"},{separator:",",language:"es"},{separator:",",language:"pt"},{separator:",",language:"ru"}],Uv=[{separator:",",language:"en"},{separator:".",language:"es"},{separator:".",language:"pt"},{separator:" ",language:"ru"}];function Hv(t){return(t||Lv).toLowerCase().substring(0,2)}function $v(t){return new RegExp("^[a-z]{2}(-[a-z]{2})?$","i").test(t)}function zv(t){return"string"==typeof t?"true"===(t=t.toLowerCase().trim())||"on"===t||""===t:"number"==typeof t?1===t:!!t}function qv(t){for(let e=0;e<t.length;e++)0!==e&&t.findIndex(n=>n.value===t[e].value)!==e&&(t.splice(e,1),e--)}function Wv(t){for(let e=0;e<t.length;e++)null==t[e].value&&(t.splice(e,1),e--)}const Gv="PO_DEFAULT_LANGUAGE",Zv="PO_USER_LOCALE";let Kv=(()=>{class t{constructor(){}set languageDefault(t){t&&$v(t)&&localStorage.setItem(Gv,t)}get languageDefault(){return localStorage.getItem(Gv)}getLanguage(){const t=localStorage.getItem(Zv)||this.languageDefault||function(){const t=navigator.language||navigator.userLanguage,e=Hv(t);return Nv.includes(e)?t:Lv}();return t&&t.toLowerCase()}getLanguageDefault(){return this.languageDefault}getShortLanguage(){const t=Hv(this.getLanguage());return Nv.includes(t)?t:Lv}setLanguage(t){$v(t)&&localStorage.setItem(Zv,t.toLowerCase())}setLanguageDefault(t){this.languageDefault=t}getNumberSeparators(t){var e,n,r,s;t=t||this.getShortLanguage();const i=null!==(e=Bv.find(e=>e.language===t))&&void 0!==e?e:{},o=null!==(n=Uv.find(e=>e.language===t))&&void 0!==n?n:{};return{decimalSeparator:null!==(r=i.separator)&&void 0!==r?r:",",thousandSeparator:null!==(s=o.separator)&&void 0!==s?s:"."}}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:function(){return new t},token:t,providedIn:"root"}),t})(),Yv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh,Ym]]}),t})(),Qv=(()=>{class t{constructor(){}set icon(t){"string"==typeof t?this.addClasses(t):t instanceof Ya&&(this._icon=t)}get icon(){return this._icon}addClasses(t){this.class=this.class=t.startsWith("po-icon-")?`po-icon ${t}`:`po-fonts-icon ${t}`}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=Ht({type:t,selectors:[["po-icon"]],inputs:{icon:["p-icon","icon"]},decls:3,vars:3,consts:[[4,"ngIf","ngIfThen","ngIfElse"],["fontTemplate",""],["aria-hidden","true"]],template:function(t,e){if(1&t&&(uo(0,qy,1,0,"ng-container",0),uo(1,Wy,1,2,"ng-template",null,1,Hl)),2&t){const t=co(2);po("ngIf",e.class)("ngIfThen",t)("ngIfElse",e.icon)}},directives:[th],encapsulation:2,changeDetection:0}),t})(),Xv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh]]}),t})();const Jv={en:{loading:"Loading"},es:{loading:"Cargando"},pt:{loading:"Carregando"},ru:{loading:"\u043f\u043e\u0433\u0440\u0443\u0437\u043a\u0430"}};let tb=(()=>{class t{constructor(t){this.languageService=t,this._screenLock=!1,this.text=this.getTextDefault()}set screenLock(t){this._screenLock=zv(t)}get screenLock(){return this._screenLock}set text(t){this._text=t||this.getTextDefault()}get text(){return this._text}getTextDefault(){const t=this.languageService.getShortLanguage();return Jv[t].loading}}return t.\u0275fac=function(e){return new(e||t)(ho(Kv))},t.\u0275dir=Zt({type:t,inputs:{text:["p-text","text"],screenLock:["p-screen-lock","screenLock"]}}),t})(),eb=(()=>{class t extends tb{constructor(t,e){super(e),this.changeDetector=t}}return t.\u0275fac=function(e){return new(e||t)(ho(qa),ho(Kv))},t.\u0275cmp=Ht({type:t,selectors:[["po-loading-overlay"]],features:[Ki],decls:2,vars:5,consts:[[1,"po-loading-overlay-content",3,"p-text"]],template:function(t,e){1&t&&(go(0,"div"),yo(1,"po-loading",0),mo()),2&t&&(Mo("po-overlay-absolute",!e.screenLock)("po-overlay-fixed",e.screenLock),Ns(1),po("p-text",e.text))},directives:function(){return[sb]},encapsulation:2}),t})(),nb=(()=>{class t{set neutralColor(t){this._neutralColor=zv(t)}get neutralColor(){return this._neutralColor}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=Ht({type:t,selectors:[["po-loading-icon"]],inputs:{neutralColor:["p-neutral-color","neutralColor"]},decls:9,vars:2,consts:[[1,"po-loading-icon"],[1,"po-loading-icon-bar","po-loading-icon-bar-1"],[1,"po-loading-icon-bar","po-loading-icon-bar-2"],[1,"po-loading-icon-bar","po-loading-icon-bar-3"],[1,"po-loading-icon-bar","po-loading-icon-bar-4"],[1,"po-loading-icon-bar","po-loading-icon-bar-5"],[1,"po-loading-icon-bar","po-loading-icon-bar-6"],[1,"po-loading-icon-bar","po-loading-icon-bar-7"],[1,"po-loading-icon-bar","po-loading-icon-bar-8"]],template:function(t,e){1&t&&(go(0,"div",0),yo(1,"span",1),yo(2,"span",2),yo(3,"span",3),yo(4,"span",4),yo(5,"span",5),yo(6,"span",6),yo(7,"span",7),yo(8,"span",8),mo()),2&t&&Mo("po-loading-icon-neutral-color",e.neutralColor)},encapsulation:2}),t})(),rb=(()=>{class t{constructor(){this.text="Carregando"}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Zt({type:t,inputs:{text:["p-text","text"]}}),t})(),sb=(()=>{class t extends rb{}return t.\u0275fac=function(){let e;return function(n){return(e||(e=Ln(t)))(n||t)}}(),t.\u0275cmp=Ht({type:t,selectors:[["po-loading"]],features:[Ki],decls:3,vars:1,consts:[[1,"po-loading"],["class","po-loading-label po-text-ellipsis",4,"ngIf"],[1,"po-loading-label","po-text-ellipsis"]],template:function(t,e){1&t&&(go(0,"div",0),yo(1,"po-loading-icon"),uo(2,Gy,2,1,"span",1),mo()),2&t&&(Ns(2),po("ngIf",e.text))},directives:[nb,th],encapsulation:2}),t})(),ib=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[Kv]}),t})(),ob=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh,ib]]}),t})();function ab(t,e,n){return function(r){t&&t.set&&t.set.bind(this)(e(r)),this[n]=e(r)}}function lb(t,e){return function(){return t&&t.get?t.get.bind(this)():this[e]}}function ub(){return function(t,e,n){return function(t,e,n){const{target:r,property:s,originalDescriptor:i}=t,o=function(t,e,n){const r=`$$__${e}`;return Object.prototype.hasOwnProperty.call(t,r)&&console.warn(`The prop "${r}" is already exist, it will be overrided by InputBoolean decorator.`),Object.defineProperty(t,r,{configurable:!0,writable:!0}),r}(r,s);return{get:lb(i,o),set:ab(i,n,o)}}({target:t,property:e,originalDescriptor:n},0,zv)}}const cb=["default","primary","danger","link"];let hb=(()=>{class t{constructor(){this.autoFocus=!1,this.click=new El,this._disabled=!1,this._loading=!1,this._small=!1,this._type="default"}set loading(t){this._loading=zv(t)}get loading(){return this._loading}set small(t){this._small=""===t||zv(t)}get small(){return this._small}set type(t){this._type=cb.includes(t)?t:"default"}get type(){return this._type}set disabled(t){this._disabled=""===t||zv(t)}get disabled(){return this._disabled}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Zt({type:t,inputs:{autoFocus:["p-auto-focus","autoFocus"],loading:["p-loading","loading"],small:["p-small","small"],type:["p-type","type"],disabled:["p-disabled","disabled"],label:["p-label","label"],icon:["p-icon","icon"]},outputs:{click:"p-click"}}),jy([ub()],t.prototype,"autoFocus",void 0),t})(),db=(()=>{class t extends hb{ngAfterViewInit(){this.autoFocus&&this.focus()}focus(){this.disabled||this.buttonElement.nativeElement.focus()}onClick(){this.click.emit(null)}}return t.\u0275fac=function(){let e;return function(n){return(e||(e=Ln(t)))(n||t)}}(),t.\u0275cmp=Ht({type:t,selectors:[["po-button"]],viewQuery:function(t,e){if(1&t&&Vl(Zy,7),2&t){let t;Ml(t=Nl())&&(e.buttonElement=t.first)}},features:[Ki],decls:5,vars:14,consts:[["type","button",1,"po-button","po-text-ellipsis",3,"disabled","click"],["button",""],["class","po-button-loading-icon",4,"ngIf"],["class","po-button-icon",3,"p-icon",4,"ngIf"],["class","po-button-label",4,"ngIf"],[1,"po-button-loading-icon"],["p-neutral-color",""],[1,"po-button-icon",3,"p-icon"],[1,"po-button-label"]],template:function(t,e){1&t&&(go(0,"button",0,1),Co("click",function(){return e.onClick()}),uo(2,Ky,2,0,"div",2),uo(3,Yy,1,1,"po-icon",3),uo(4,Qy,2,1,"span",4),mo()),2&t&&(Mo("po-button-danger","danger"===e.type)("po-button-link","link"===e.type)("po-button-primary","primary"===e.type)("po-button-sm",e.small)("po-clickable","link"===e.type),po("disabled",e.disabled||e.loading),Ns(2),po("ngIf",e.loading),Ns(1),po("ngIf",e.icon),Ns(1),po("ngIf",e.label))},directives:[th,nb,Qv],encapsulation:2,changeDetection:0}),t})(),pb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh,ob,Xv]]}),t})();const fb=["bottom","bottom-left","bottom-right","left","left-top","left-bottom","top","top-right","top-left","right","right-bottom","right-top"];let gb=(()=>{class t{constructor(){this.differenceDiagonalToWidthArrow=3,this.isSetElementWidth=!1,this.offsetArrow=12}adjustPosition(t){const e=t||"bottom";this.elementPosition(e),this.customPositions&&this.customPositions.length?this.adjustCustomPosition(e):this.adjustDefaultPosition(e)}getArrowDirection(){return this.arrowDirection}setElements(t,e,n,r,s=!1,i=!1){this.element=t instanceof ba?t.nativeElement:t,this.targetElement=n instanceof ba?n.nativeElement:n,this.elementOffset=e,this.customPositions=r,this.isSetElementWidth=s,this.isCornerAligned=i}adjustCustomPosition(t){const e=this.customPositions.length;let n=0;for(;n++<e;)this.overflowAllSides(t)&&(t=this.nextPosition(t,this.customPositions),this.elementPosition(t))}adjustDefaultPosition(t){const e=this.getMainPositions(),n=e.length;let r=0;for(;r++<n;){const n=this.getMainPosition(t);if(this.elementPosition(t),!this.overflowMain(n))return this.overflowAllSides(t)?void this.verifySubPositions(t):void 0;t=this.nextPosition(n,e)}}elementPosition(t){this.isCornerAligned?this.setAlignedElementPosition(t):this.setElementPosition(t)}getMainPosition(t){return t.indexOf("-")>-1?t.substring(0,t.indexOf("-")):t}getMainPositions(){return this.customPositions&&this.customPositions.length?this.getMainPositionsByCustomPositions(this.customPositions):["top","right","bottom","left"]}getMainPositionsByCustomPositions(t){const e=[],n=t.length;for(let r=0;r<n;r++){const n=this.getMainPosition(t[r]);e.includes(n)||e.push(n)}return e}getOverflows(){const t=this.getSizesAndPositions();return{right:t.element.right>t.window.innerWidth,top:t.element.top<=0,left:t.element.left<=0,bottom:t.element.bottom>t.window.innerHeight}}getSizesAndPositions(){return{window:{scrollY:window.scrollY,scrollX:window.scrollX,innerWidth:window.innerWidth,innerHeight:window.innerHeight},element:this.element.getBoundingClientRect(),target:this.targetElement?this.targetElement.getBoundingClientRect():{top:0,bottom:0,right:0,left:0}}}nextPosition(t,e=[]){const n=e.indexOf(t),r=n+1;return n>-1&&r<e.length?e[r]:e[0]}overflowAllSides(t){const e=this.getOverflows();switch(t){case"top":case"top-right":return e.top||e.right||e.left;case"top-left":return e.top||e.left||e.right;case"right":return e.right||e.top||e.bottom;case"right-top":return e.right||e.top;case"right-bottom":return e.right||e.bottom;case"bottom":case"bottom-right":return e.bottom||e.right||e.left;case"bottom-left":return e.bottom||e.left||e.right;case"left":return e.left||e.top||e.bottom;case"left-top":return e.left||e.top;case"left-bottom":return e.left||e.bottom}}overflowMain(t){const e=this.getOverflows();switch(t){case"top":return e.top;case"right":return e.right;case"bottom":return e.bottom;case"left":return e.left}}setAlignedArrowDirection(t){switch(t){case"top-left":return"bottom-left";case"top-right":return"bottom-right";case"bottom-right":return"top-right";case"bottom-left":return"top-left"}}setAlignedBottomPositions(t,e){this.element.style.top=e.target.bottom+this.elementOffset+"px",this.element.style.left=e.target.left-t+"px"}setAlignedElementPosition(t){this.setElementWidth();const e=this.getSizesAndPositions();switch(t){case"bottom-left":this.setAlignedBottomPositions(0,e);break;case"bottom-right":this.setAlignedBottomPositions(e.element.width-e.target.width,e);break;case"top-left":this.setAlignedTopPositions(0,e);break;case"top-right":this.setAlignedTopPositions(e.element.width-e.target.width,e)}this.arrowDirection=this.setAlignedArrowDirection(t)}setAlignedTopPositions(t,e){this.element.style.top=e.target.top-e.element.height-this.elementOffset+"px",this.element.style.left=e.target.left-t+"px"}setArrowDirection(t){switch(t){case"top":return"bottom";case"top-left":return"bottom-right";case"top-right":return"bottom-left";case"right":return"left";case"right-top":return"left-bottom";case"right-bottom":return"left-top";case"bottom":return"top";case"bottom-right":return"top-left";case"bottom-left":return"top-right";case"left":return"right";case"left-bottom":return"right-top";case"left-top":return"right-bottom"}}setBottomPositions(t,e){this.element.style.top=e.target.bottom+this.elementOffset+"px",this.element.style.left=e.target.left+e.target.width/2-t+"px"}setElementPosition(t){this.setElementWidth();const e=this.getSizesAndPositions();switch(t){case"top":this.setTopPositions(e.element.width/2,e);break;case"top-left":this.setTopPositions(e.element.width-this.offsetArrow-this.differenceDiagonalToWidthArrow,e);break;case"top-right":this.setTopPositions(this.offsetArrow+this.differenceDiagonalToWidthArrow,e);break;case"right":this.setRightPositions(e.element.height/2,e);break;case"right-top":this.setRightPositions(e.element.height-this.offsetArrow-this.differenceDiagonalToWidthArrow,e);break;case"right-bottom":this.setRightPositions(this.offsetArrow,e);break;case"bottom":this.setBottomPositions(e.element.width/2,e);break;case"bottom-right":this.setBottomPositions(this.offsetArrow+this.differenceDiagonalToWidthArrow,e);break;case"bottom-left":this.setBottomPositions(e.element.width-this.offsetArrow-this.differenceDiagonalToWidthArrow,e);break;case"left":this.setLeftPositions(e.element.height/2,e);break;case"left-bottom":this.setLeftPositions(this.offsetArrow,e);break;case"left-top":this.setLeftPositions(e.element.height-this.offsetArrow,e)}this.arrowDirection=this.setArrowDirection(t)}setElementWidth(){this.isSetElementWidth&&this.targetElement&&(this.element.style.width=`${this.targetElement.clientWidth}px`)}setLeftPositions(t,e){this.element.style.top=e.target.top-t+e.target.height/2+"px",this.element.style.left=e.target.left-e.element.width-this.elementOffset+"px"}setRightPositions(t,e){this.element.style.top=e.target.top-t+e.target.height/2+"px",this.element.style.left=e.target.right+this.elementOffset+"px"}setTopPositions(t,e){this.element.style.top=e.target.top-e.element.height-this.elementOffset+"px",this.element.style.left=e.target.left+e.target.width/2-t+"px"}verifySubPositions(t){t.indexOf("-")>-1&&(t=t.substring(0,t.indexOf("-")),this.elementPosition(t));let e=0;for(;e++<3;){if(!this.overflowAllSides(t))return null;t=this.nextPosition(t,fb),this.elementPosition(t)}}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),mb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh]]}),t})(),yb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh,pb,mb]]}),t})(),vb=(()=>{class t{constructor(){this.dateRegex=new RegExp("^(?:[0-9])\\d{1}(?:[0-9])\\d{1}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12]\\d|3[01])$"),this.isoRegex=new RegExp("^(?:[0-9])\\d{1}(?:[0-9])\\d{1}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12]\\d|3[01])T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:Z|-0[1-9]|-1\\d|-2[0-3]|-00:?(?:0[1-9]|[0-5]\\d)|\\+[01]\\d|\\+2[0-3])(?:|:?[0-5]\\d)$")}convertIsoToDate(t,e,n){if(t){const{year:r,month:s,day:i}=this.getDateFromIso(t);if(e){const t=new Date(r,s-1,i,0,0,0);return this.setYearFrom0To100(t,r),t}if(n){const t=new Date(r,s-1,i,23,59,59);return this.setYearFrom0To100(t,r),t}{const e=Date.parse(t),n=6e4*(new Date).getTimezoneOffset();return new Date(e+n)}}}convertDateToISO(t){if(t){const e=t.getFullYear(),n=t.getMonth()+1,r=t.getDate()<10?"0"+t.getDate():t.getDate(),s=n<10?"0"+n:n;return this.formatYear(e)+"-"+s+"-"+r}return null}formatYear(t){return t>999?t.toString():t>99&&t<1e3?`0${t}`:t>9&&t<100?`00${t}`:t>=0&&t<10?`000${t}`:void 0}getDateFromIso(t){const e=parseInt(t.substring(8,10),10),n=parseInt(t.substring(5,7),10);return{year:parseInt(t.substring(0,4),10),month:n,day:e}}getDateForDateRange(t,e){const n=e?[0,0,0]:[23,59,59];if(t instanceof Date){const{year:e,month:r,day:s}=this.splitDate(t),i=new Date(e,r,s,...n);return this.setYearFrom0To100(i,e),i}if(this.isValidIso(t))return this.convertIsoToDate(t,e,!e)}isDateRangeValid(t="",e=""){const n=t.split("-").map(t=>parseInt(t,10)),r=e.split("-").map(t=>parseInt(t,10));for(let s=0;s<=n.length;s++){if(n[s]>r[s])return!0;if(n[s]<r[s])return!1}return!0}isValidIso(t){return this.dateRegex.test(t)||this.isoRegex.test(t)}setYearFrom0To100(t,e){e>=0&&e<100&&t.setFullYear(e)}splitDate(t){return{year:t.getFullYear(),month:t.getMonth(),day:t.getDate()}}validateDateRange(t,e,n){return e&&n?t>=e&&t<=n:e&&!n?t>=e:!(!e&&n)||t<=n}validateDate(t){const e=t instanceof Date?this.convertDateToISO(t):t;return this.isValidIso(e)?e:void 0}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:function(){return new t},token:t,providedIn:"root"}),t})(),bb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[vb]}),t})(),_b=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh]]}),t})();Math,Math,Math.floor(25);var wb=function(t){return t.Color01="color-01",t.Color02="color-02",t.Color03="color-03",t.Color04="color-04",t.Color05="color-05",t.Color06="color-06",t.Color07="color-07",t.Color08="color-08",t.Color09="color-09",t.Color10="color-10",t.Color11="color-11",t.Color12="color-12",t}({});Object.values(wb),Math,Math.floor(25),Math,Math;let Cb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh,mb]]}),t})(),Eb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh]]}),t})(),Db=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh]]}),t})(),Ab=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh,Db]]}),t})(),Sb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Zt({type:t,inputs:{label:["p-label","label"]}}),t})(),xb=(()=>{class t extends Sb{}return t.\u0275fac=function(){let e;return function(n){return(e||(e=Ln(t)))(n||t)}}(),t.\u0275cmp=Ht({type:t,selectors:[["po-divider"]],features:[Ki],decls:2,vars:1,consts:[[1,"po-divider"],["class","po-divider-label",4,"ngIf"],[1,"po-divider-label"]],template:function(t,e){1&t&&(go(0,"div",0),uo(1,Xy,2,1,"div",1),mo()),2&t&&(Ns(1),po("ngIf",e.label))},directives:[th],encapsulation:2,changeDetection:0}),t})(),kb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh]]}),t})(),Tb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[dh,Xv]]}),t})(),Ob=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh,Tb]]}),t})(),Fb=(()=>{class t{constructor(){this.errorPattern=""}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=Ht({type:t,selectors:[["po-field-container-bottom"]],inputs:{errorPattern:["p-error-pattern","errorPattern"]},decls:2,vars:1,consts:[[1,"po-field-container-bottom"],["class","po-field-container-bottom-text-error",4,"ngIf"],[1,"po-field-container-bottom-text-error"],[1,"po-icon","po-icon-warning","po-field-container-icon-error"]],template:function(t,e){1&t&&(go(0,"div",0),uo(1,Jy,3,1,"span",1),mo()),2&t&&(Ns(1),po("ngIf",e.errorPattern))},directives:[th],encapsulation:2,changeDetection:0}),t})();const Pb={en:{optional:"(Optional)"},es:{optional:"(Opcional)"},pt:{optional:"(Opcional)"},ru:{optional:"(\u041f\u043e\u0436\u0435\u043b\u0430\u043d\u0438\u044e)"}};let Ib=(()=>{class t{constructor(t){this._optional=!1;const e=t.getShortLanguage();this.literals=Object.assign({},Pb[e])}set optional(t){this._optional=zv(t)}get optional(){return this._optional}}return t.\u0275fac=function(e){return new(e||t)(ho(Kv))},t.\u0275cmp=Ht({type:t,selectors:[["po-field-container"]],inputs:{optional:["p-optional","optional"],label:["p-label","label"],help:["p-help","help"]},ngContentSelectors:Uy,decls:7,vars:3,consts:[[1,"po-field-container"],[1,"po-field-container-title"],[1,"po-field-title"],["class","po-field-optional",4,"ngIf"],["class","po-field-help",4,"ngIf"],[1,"po-field-optional"],[1,"po-field-help"]],template:function(t,e){1&t&&(xo(),go(0,"div",0),go(1,"div",1),go(2,"span",2),Wo(3),mo(),uo(4,tv,2,1,"span",3),mo(),uo(5,ev,2,1,"div",4),ko(6),mo()),2&t&&(Ns(3),Go(e.label),Ns(1),po("ngIf",e.optional&&(e.label||e.help)),Ns(1),po("ngIf",e.help))},directives:[th],encapsulation:2,changeDetection:0}),t})(),Rb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh]]}),t})();function Mb(t,e,n){return t&&!e&&!("string"==typeof n&&n||"object"==typeof n&&n&&n.length||"number"==typeof n&&(n||0===n)||"boolean"==typeof n&&n)}let Vb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh,gp,Rb]]}),t})(),jb=(()=>{class t{constructor(){this.defaultValue="",this.changeEvent=new El}clear(){this.setInputValue(this.defaultValue),this.changeEvent.emit(this.defaultValue)}showIcon(){return this.defaultValue!==this.getInputValue()}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Zt({type:t,inputs:{defaultValue:["p-default-value","defaultValue"],inputRef:["p-element-ref","inputRef"]},outputs:{changeEvent:"p-change-event"}}),t})(),Nb=(()=>{class t extends jb{setInputValue(t){this.inputRef&&this.inputRef.nativeElement&&(this.inputRef.nativeElement.value=t)}getInputValue(){if(this.inputRef&&this.inputRef.nativeElement)return this.inputRef.nativeElement.value}}return t.\u0275fac=function(){let e;return function(n){return(e||(e=Ln(t)))(n||t)}}(),t.\u0275cmp=Ht({type:t,selectors:[["po-clean"]],features:[Ki],decls:1,vars:1,consts:[["class","po-icon po-field-icon po-icon-close",3,"click",4,"ngIf"],[1,"po-icon","po-field-icon","po-icon-close",3,"click"]],template:function(t,e){1&t&&uo(0,nv,1,0,"span",0),2&t&&po("ngIf",e.showIcon())},directives:[th],encapsulation:2}),t})(),Lb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh]]}),t})();class Bb{constructor(t,e){this.mask="",this.formatModel=!1,this.initialPosition=0,this.finalPosition=0,this.pattern="",this.mask=t,this.formatModel=e,this.pattern=this.getRegexFromMask(t)}get getPattern(){return this.pattern}get getValueToInput(){return this.valueToInput}set setValueToInput(t){this.valueToInput=t}get getValueToModel(){return this.valueToModel}set setValueToModel(t){this.valueToModel=t}keyup(t){if(this.mask){const e=t.target.value;switch(17!==t.keyCode&&91!==t.keyCode||(t.target.value=this.controlFormatting(e),this.resetPositions(t)),t.preventDefault(),t.keyCode){case 37:this.initialPosition>0&&this.initialPosition--,this.setPositionNotShiftKey(t),this.setSelectionRange(t);break;case 39:this.initialPosition<e.toString().length&&this.initialPosition++,this.setPositionNotShiftKey(t),this.setSelectionRange(t);break;case 35:this.finalPosition=e.toString().length,t.shiftKey||(this.initialPosition=this.finalPosition),this.setPositions(t);break;case 36:t.shiftKey?(this.finalPosition=this.initialPosition,this.initialPosition=0,this.setPositions(t)):(this.initialPosition=0,this.finalPosition=0,this.setPositions(t))}}}setPositionNotShiftKey(t){t.shiftKey||(this.finalPosition=this.initialPosition)}setSelectionRange(t){this.initialPosition>this.finalPosition?t.target.setSelectionRange(this.finalPosition,this.initialPosition):t.target.setSelectionRange(this.initialPosition,this.finalPosition)}keydown(t){if(this.mask){let e=t.target.value;if(9===t.keyCode)return;if(t.ctrlKey||t.metaKey||t.preventDefault(),t.ctrlKey||t.metaKey&&86!==t.keyCode||t.keyCode>=37&&t.keyCode<=40||16===t.keyCode||9===t.keyCode)return;if(this.isKeyValid(t.keyCode))switch(null===this.finalPosition&&(this.finalPosition=this.initialPosition),this.revertPositions(this.initialPosition,this.finalPosition),t.keyCode){case 8:this.getPosition(t),this.initialPosition<0&&(this.initialPosition=0,this.setPositions(t)),this.initialPosition===this.finalPosition?(this.checkMaskBefore(t,-1),0!==this.initialPosition&&(e=e.slice(0,this.initialPosition-1)+e.slice(this.finalPosition),e=this.controlFormatting(e),t.target.value=e,this.changePosition(t,-1),this.checkMaskBefore(t,-1),this.setPositions(t),this.resetPositions(t))):this.clearRangeSelection(e,t,!0),this.setPositions(t);break;case 46:this.getPosition(t),this.initialPosition===this.finalPosition?(this.checkMaskAfter(t,1),e=e.slice(0,this.initialPosition)+e.slice(this.finalPosition+1),e=this.controlFormatting(e),t.target.value=e,this.setPositions(t),this.resetPositions(t)):this.clearRangeSelection(e,t,!1),this.setPositions(t);break;default:this.getPosition(t),e=e.slice(0,this.initialPosition)+t.key+e.slice(this.finalPosition),e=this.controlFormatting(e),t.target.value=e,this.changePosition(t,1),this.checkMaskBefore(t,1),this.setPositions(t),this.resetPositions(t),this.setPositions(t)}}}clearRangeSelection(t,e,n){t=t.slice(0,this.initialPosition)+t.slice(this.finalPosition),t=this.controlFormatting(t),e.target.value=t,n&&this.checkMaskBefore(e,-1),this.setPositions(e),this.resetPositions(e)}click(t){this.initialPosition=t.target.selectionStart,this.finalPosition=t.target.selectionEnd}blur(t){if(this.mask){let e=t.target.value;e=this.controlFormatting(e),t.target.value=e}}revertPositions(t,e){if(t>e){const n=t;this.initialPosition=e,this.finalPosition=n}}resetPositions(t){this.initialPosition=t.target.selectionStart,this.finalPosition=this.initialPosition}setPositions(t){t.target.setSelectionRange(this.initialPosition,this.finalPosition)}changePosition(t,e){this.initialPosition=this.initialPosition+e,this.finalPosition=this.finalPosition+e,this.setPositions(t)}getPosition(t){this.initialPosition=t.target.selectionStart,this.finalPosition=t.target.selectionEnd,this.setPositions(t)}controlFormatting(t){if(!t)return this.valueToInput="",this.valueToModel="","";let e,n=this.mask;const r=[];let s=0;for(;this.hasOptionalNumber(n);)r.push(n),n=this.replaceOptionalNumber(n);for(r.push(n),r.reverse(),this.formattingEnds=!1;!this.formattingEnds&&(this.formattingEnds=!0,r[s]);)e=this.formatValue(t,r[s]),s++;return e}formatValue(t,e){const n=(e=e.replace(/\?/g,"")).replace(this.listValidKeys(),"_");let r=0,s="";t=this.removeFormattingValue(t);for(let i=0;i<t.length;i++){const o=t[i];if(!n[r]){this.formattingEnds=!1;break}for(;this.isFixedCharacterGuide(n[r])&&n[r];)s+=n[r],r++;if(!this.isKeyValidMask(o,e[r]))break;s+=o,r++}return this.formatModel?(this.valueToInput=s,this.valueToModel=s):(this.valueToInput=s,this.valueToModel=this.removeFormattingValue(s)),s}checkMaskBefore(t,e){this.isFixedCharacterGuide(t.target.value.toString().charAt(this.initialPosition-1))&&(this.changePosition(t,e),this.checkMaskBefore(t,e))}checkMaskAfter(t,e){this.isFixedCharacterGuide(t.target.value.toString().charAt(this.initialPosition))&&(this.changePosition(t,e),this.checkMaskAfter(t,e))}replaceOptionalNumber(t){let e=9;for(;e>=0;){if(t.indexOf(e+"?")>-1)return t.replace(e+"?","");e--}return t}isFixedCharacterGuide(t){return this.testRegex(t,this.getFixedCharacterGuide())}getFixedCharacterGuide(){return/[\\\/() +-.\:]/g}listValidKeys(){return/[a-zA-Z0-9]/g}isKeyValid(t){return this.isKeyCodeValid(t)}isKeyCodeValid(t){return t>=48&&t<=57||t>=65&&t<=90||t>=96&&t<=105||8===t||9===t||46===t}isKeyValidMask(t,e){return this.testRegex(t,this.replaceMask(e))}testRegex(t,e){return e.test(t)}removeFormattingValue(t){return t.replace(this.getFixedCharacterGuide(),"")}hasOptionalNumber(t){return t.match(/\d\?/g)}replaceMask(t){let e=/./;switch(t){case"0":e=/[0]/;break;case"1":e=/[0-1]/;break;case"2":e=/[0-2]/;break;case"3":e=/[0-3]/;break;case"4":e=/[0-4]/;break;case"5":e=/[0-5]/;break;case"6":e=/[0-6]/;break;case"7":e=/[0-7]/;break;case"8":e=/[0-8]/;break;case"9":e=/[0-9]/;break;case" ":e=/\s/;break;case"@":e=/[a-zA-Z]/;break;case"w":e=/[a-zA-Z0-9]/}return e}getRegexFromMask(t){if(t){let e;return this.formatModel?(e=t.replace(/\\/g,"\\\\"),e=e.replace(/\+/g,"\\+"),e=e.replace(/\./g,"\\."),e=e.replace(/-/g,"-"),e=e.replace(/\(/g,"\\("),e=e.replace(/\)/g,"\\)"),e=e.replace(/\//g,"\\/"),e=e.replace(/\s/g,"\\s"),e=e.replace(/:/g,"\\:"),e=e.replace(/\@(?!\s)/g,"\\w"),e=e.replace(/\d/g,"\\w")):(e=t.replace(/\\/g,""),e=e.replace(/\+/g,""),e=e.replace(/\./g,""),e=e.replace(/-/g,""),e=e.replace(/\(/g,""),e=e.replace(/\)/g,""),e=e.replace(/\//g,""),e=e.replace(/\s/g,""),e=e.replace(/:/g,""),e=e.replace(/\@/g,"\\w"),e=e.replace(/\d/g,"\\w")),e}return null}}let Ub=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh,gp,Rb,Lb,_b]]}),t})();const Hb={en:{close:"Close"},es:{close:"Cerrar"},pt:{close:"Fechar"},ru:{close:"\u0431\u043b\u0438\u0437\u043a\u043e"}};let $b=(()=>{class t{constructor(t){this.isHidden=!0,this.onXClosed=new El,this._hideClose=!1,this._size="md",this.clickOut=!1,this.language=t.getShortLanguage(),this.literals=Object.assign({},Hb[this.language])}set size(t){this._size=["sm","md","lg","xl","auto"].indexOf(t)>-1?t:"md"}get size(){return this._size}set setClickOut(t){this.clickOut=""!==t&&zv(t)}set hideClose(t){this._hideClose=zv(t)}get hideClose(){return this._hideClose}close(t=!1){this.isHidden=!0,t&&this.onXClosed.emit(t)}open(){this.validPrimaryAction(),this.isHidden=!1}validPrimaryAction(){this.primaryAction||(this.primaryAction={action:()=>this.close(),label:this.literals.close}),this.primaryAction.action||(this.primaryAction.action=()=>this.close()),this.primaryAction.label||(this.primaryAction.label=this.literals.close)}}return t.\u0275fac=function(e){return new(e||t)(ho(Kv))},t.\u0275dir=Zt({type:t,inputs:{size:["p-size","size"],setClickOut:["p-click-out","setClickOut"],hideClose:["p-hide-close","hideClose"],primaryAction:["p-primary-action","primaryAction"],title:["p-title","title"],secondaryAction:["p-secondary-action","secondaryAction"]}}),t})(),zb=(()=>{class t{constructor(){this.activeOverlay=[]}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:function(){return new t},token:t,providedIn:"root"}),t})(),qb=(()=>{class t extends $b{constructor(t,e){super(e),this.poActiveOverlayService=t,this.focusableElements="input, select, textarea, button:not([disabled]), a",this.id=function(){function t(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return t()+t()+"-"+t()+"-"+t()+"-"+t()+"-"+t()+t()+t()}()}close(t=!1){this.poActiveOverlayService.activeOverlay.pop(),super.close(t),this.removeEventListeners(),this.sourceElement&&this.sourceElement.focus()}closeModalOnEscapeKey(t){this.hideClose||(t.preventDefault(),t.stopPropagation(),this.close())}getPrimaryActionButtonType(){return this.primaryAction.danger?"danger":"primary"}getSecondaryActionButtonType(){return this.secondaryAction&&this.secondaryAction.danger&&!this.primaryAction.danger?"danger":"default"}onClickOut(t){this.clickOut&&!this.modalContent.nativeElement.contains(t.target)&&this.close()}open(){this.sourceElement=document.activeElement,super.open(),this.handleFocus()}handleFocus(){this.poActiveOverlayService.activeOverlay.push(this.id),setTimeout(()=>{this.modalContent&&(this.initFocus(),document.addEventListener("focus",this.focusFunction,!0))})}initFocus(){this.focusFunction=t=>{this.modalContent.nativeElement.contains(t.target)||this.poActiveOverlayService.activeOverlay[this.poActiveOverlayService.activeOverlay.length-1]!==this.id||(t.stopPropagation(),this.firstElement.focus())},this.setFirstElement(),this.hideClose?this.firstElement.focus():(this.modalContent.nativeElement.querySelectorAll(this.focusableElements)[1]||this.modalContent.nativeElement).focus()}removeEventListeners(){document.removeEventListener("focus",this.focusFunction,!0)}setFirstElement(){this.firstElement=this.modalContent.nativeElement.querySelector(this.focusableElements)||this.modalContent.nativeElement}}return t.\u0275fac=function(e){return new(e||t)(ho(zb),ho(Kv))},t.\u0275cmp=Ht({type:t,selectors:[["po-modal"]],viewQuery:function(t,e){if(1&t&&Vl(sv,5,ba),2&t){let t;Ml(t=Nl())&&(e.modalContent=t.first)}},features:[Ki],ngContentSelectors:Uy,decls:1,vars:1,consts:[["class","po-modal","tabindex","0",3,"keydown.esc",4,"ngIf"],["tabindex","0",1,"po-modal",3,"keydown.esc"],[1,"po-modal-overlay"],[1,"po-modal-container","po-pb-2","po-pt-2",3,"mousedown"],[1,"po-modal-vertical-align"],["tabindex","-1"],["modalContent",""],[1,"po-modal-header"],[1,"po-modal-title","po-text-ellipsis"],["class","po-modal-header-close-button","tabindex","0",3,"click",4,"ngIf"],[1,"po-modal-body"],[1,"po-modal-footer"],[3,"p-disabled","p-label","p-loading","p-type","p-click",4,"ngIf"],[1,"po-button-modal-first-action",3,"p-disabled","p-label","p-loading","p-type","p-click"],["tabindex","0",1,"po-modal-header-close-button",3,"click"],[1,"po-icon","po-icon-close"],[3,"p-disabled","p-label","p-loading","p-type","p-click"]],template:function(t,e){1&t&&(xo(),uo(0,av,15,10,"div",0)),2&t&&po("ngIf",!e.isHidden)},directives:[th,db],encapsulation:2}),t})(),Wb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh,pb]]}),t})(),Gb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh]]}),t})(),Zb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[zb]}),t})(),Kb=(()=>{class t{getColor(t){return Object.values(wb).includes(t.color)?t.color:this.getColorFromType(t.type||t.color)}getColorFromType(t){switch(t){case"danger":return wb.Color07;case"success":return wb.Color11;case"warning":return wb.Color08;default:return wb.Color01}}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Yb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[Kb]}),t})(),Qb=(()=>{class t{constructor(t,e,n){this.componentResolver=t,this.applicationRef=e,this.injector=n}createComponentInApplication(t){const e=this.componentResolver.resolveComponentFactory(t).create(this.injector);return this.applicationRef.attachView(e.hostView),document.body.appendChild(e.hostView.rootNodes[0]),e}destroyComponentInApplication(t){this.applicationRef.detachView(t.hostView),t.destroy()}}return t.\u0275fac=function(e){return new(e||t)(ar(ga),ar(Ou),ar(Gi))},t.\u0275prov=ht({factory:function(){return new t(ar(ga),ar(Ou),ar(Pi))},token:t,providedIn:"root"}),t})(),Xb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[Qb],imports:[[]]}),t})(),Jb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[gb]}),t})();var t_=function(t){return t[t.Alert=0]="Alert",t[t.Confirm=1]="Confirm",t}({});const e_={en:{ok:"Ok"},es:{ok:"Ok"},pt:{ok:"Ok"},ru:{ok:"\u041e\u043a"}},n_={en:{cancel:"Cancel",confirm:"Confirm"},es:{cancel:"Cancelar",confirm:"Confirmar"},pt:{cancel:"Cancelar",confirm:"Confirmar"},ru:{cancel:"\u043e\u0442\u043c\u0435\u043d\u0438\u0442\u044c",confirm:"\u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c"}};let r_=(()=>{class t{constructor(t){this.primaryAction={label:"ok",action:()=>{}},this.language=t.getShortLanguage()}ngOnDestroy(){this.closeSubscription.unsubscribe()}ngOnInit(){this.closeSubscription=this.poModal.onXClosed.subscribe(t=>this.close(!0))}close(t=!1){t&&this.closeAction&&this.closeAction(),this.poModal.close(),this.destroy()}destroy(){this.componentRef&&this.componentRef.destroy()}configDialog(t,e,n,r,s){this.primaryAction={label:t,action:()=>{e&&e(),this.close()}},n&&(this.secondaryAction={label:n,action:()=>{r&&r(),this.close()}}),this.closeAction=s}open(t,e,n){switch(this.title=t.title,this.message=t.message,this.componentRef=n,this.setDialogLiterals(t,e),e){case t_.Confirm:this.configDialog(this.literalsConfirm.confirm,t.confirm,this.literalsConfirm.cancel,t.cancel,t.close);break;case t_.Alert:this.configDialog(this.literalsAlert.ok,t.ok)}this.poModal.open()}setDialogLiterals(t,e){const n=e_,r=n_,s=t.literals;e===t_.Alert?this.literalsAlert=Object.assign(Object.assign(Object.assign({},n.pt),n[this.language]),s):this.literalsConfirm=Object.assign(Object.assign(Object.assign({},r.pt),r[this.language]),s)}}return t.\u0275fac=function(e){return new(e||t)(ho(Kv))},t.\u0275cmp=Ht({type:t,selectors:[["ng-component"]],viewQuery:function(t,e){if(1&t&&Vl(qb,7),2&t){let t;Ml(t=Nl())&&(e.poModal=t.first)}},decls:2,vars:4,consts:[[3,"p-title","p-primary-action","p-secondary-action"],[3,"innerHtml"]],template:function(t,e){1&t&&(go(0,"po-modal",0),yo(1,"div",1),mo()),2&t&&(po("p-title",e.title)("p-primary-action",e.primaryAction)("p-secondary-action",e.secondaryAction),Ns(1),po("innerHtml",e.message,Hr))},directives:[qb],encapsulation:2}),t})(),s_=(()=>{class t extends class{confirm(t){this.openDialog(t_.Confirm,t)}alert(t){this.openDialog(t_.Alert,t)}}{constructor(t){super(),this.poComponentInjector=t}openDialog(t,e){const n=this.poComponentInjector.createComponentInApplication(r_);n.changeDetectorRef.detectChanges(),n.instance.open(e,t,n)}}return t.\u0275fac=function(e){return new(e||t)(ar(Qb))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),i_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[s_],imports:[[Wb]]}),t})();var o_=function(t){return t[t.Bottom=0]="Bottom",t[t.Top=1]="Top",t}({}),a_=function(t){return t[t.Error=0]="Error",t[t.Information=1]="Information",t[t.Success=2]="Success",t[t.Warning=3]="Warning",t}({});let l_=(()=>{class t extends class{constructor(){this.orientation=o_.Bottom}}{constructor(t,e,n,r){super(),this.changeDetector=e,this.elementeRef=n,this.renderer=r,this.alive=!0,this.margin=20,this.observableOnClose=new E,this.toasterPosition="po-toaster-bottom"}ngOnDestroy(){this.alive=!1}ngAfterViewInit(){setTimeout(()=>this.renderer.addClass(this.toaster.nativeElement,"po-toaster-visible"))}changePosition(t){this.elementeRef.nativeElement.style.display="table",this.margin=6+44*t+6*t,this.orientation===o_.Top?this.toaster.nativeElement.style.top=this.margin+"px":this.toaster.nativeElement.style.bottom=this.margin+"px"}close(){this.observableOnClose.next(!0)}setFadeOut(){this.renderer.removeClass(this.toaster.nativeElement,"po-toaster-visible"),this.renderer.addClass(this.toaster.nativeElement,"po-toaster-invisible")}configToaster(t){switch(this.type=t.type,this.message=t.message,this.orientation=t.orientation,this.position=t.position,this.action=t.action,this.actionLabel=t.actionLabel,this.componentRef=t.componentRef,this.orientation===o_.Top&&(this.toasterPosition="po-toaster-top"),this.changePosition(this.position),this.type){case a_.Error:this.toasterType="po-toaster-error",this.icon="po-icon-warning";break;case a_.Information:this.toasterType="po-toaster-info",this.icon="po-icon-info";break;case a_.Success:this.toasterType="po-toaster-success",this.icon="po-icon-ok";break;case a_.Warning:this.toasterType="po-toaster-warning",this.icon="po-icon-warning"}this.changeDetector.detectChanges()}getIcon(){return this.icon}getToasterPosition(){return this.toasterPosition}getToasterType(){return this.toasterType}onButtonClose(t){t.preventDefault(),t.stopPropagation(),this.action&&!this.actionLabel?this.poToasterAction(t):this.close()}poToasterAction(t){t.preventDefault(),t.stopPropagation(),this.action(this)}}return t.\u0275fac=function(e){return new(e||t)(ho(Kv),ho(qa),ho(ba),ho(Ca))},t.\u0275cmp=Ht({type:t,selectors:[["po-toaster"]],viewQuery:function(t,e){if(1&t&&Vl(lv,5),2&t){let t;Ml(t=Nl())&&(e.toaster=t.first)}},features:[Ki],decls:9,vars:9,consts:[[3,"click"],["toaster",""],[1,"po-toaster-icon"],[1,"po-toaster-message"],["class","po-toaster-action",3,"click",4,"ngIf"],[1,"po-toaster-close",3,"click"],[1,"po-icon","po-icon-close"],[1,"po-toaster-action",3,"click"]],template:function(t,e){var n,r;1&t&&(go(0,"div",0,1),Co("click",function(){return e.close()}),go(2,"div",2),yo(3,"span"),mo(),go(4,"div",3),Wo(5),mo(),uo(6,uv,2,1,"div",4),go(7,"button",5),Co("click",function(t){return e.onButtonClose(t)}),yo(8,"span",6),mo(),mo()),2&t&&("po-toaster ",n=e.getToasterType()," ",r=e.getToasterPosition()," po-clickable",jo(Qn,Vo,function(t,e,n,r,s,i){const o=oo(t,xe.lFrame.bindingIndex,n,s);return Ue(2),o?e+lt(n)+r+lt(s)+i:js}(Te(),"po-toaster ",n," ",r," po-clickable"),!0),Ns(3),Ko("po-icon ",e.getIcon(),""),Ns(2),Go(e.message),Ns(1),po("ngIf",e.action&&e.actionLabel))},directives:[th],encapsulation:2}),t})(),u_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[dh]]}),t})(),c_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[Zb,Yb,Xb,Jb,bb,i_,ib,u_],Zb,Yb,Xb,Jb,bb,i_,u_]}),t})(),h_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh]]}),t})(),d_=(()=>{class t{transform(t,e){if("string"==typeof t&&/^(([0-1][0-9])|(2[0-3])):[0-5][0-9]:[0-5][0-9][\.]?([0-9]{1,6})?$/g.test(t)){const n=e?e.lastIndexOf("f")-e.indexOf("f")+1:0,r=this.addDotMiliseconds(t.substring(9,9+n),n),s=this.getFormatMiliseconds(n);return this.formatValue(t,e,s,r)}return null}addDotMiliseconds(t,e){return t&&e&&(t="."+t),t}formatValue(t,e,n,r){if(t&&e){const s=t.substring(0,2),i=t.substring(3,5),o=t.substring(6,8);return(e=(e=(e=e.replace("HH",s)).replace("mm",i)).replace("ss",o)).replace(`.${n}`,r)}return t}getFormatMiliseconds(t){let e="";for(let n=0;n<t;n++)e+="f";return e}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275pipe=Kt({name:"po_time",type:t,pure:!0}),t})(),p_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[]]}),t})(),f_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[lh],imports:[[dh,gp,Ym,pb,Vb,Eb,ob,Wb,h_,Tb,p_,mb,Xv]]}),t})();var g_=function(t){return t[t.arrowDown=40]="arrowDown",t[t.arrowUp=38]="arrowUp",t[t.backspace=8]="backspace",t[t.delete=46]="delete",t[t.enter=13]="enter",t[t.esc=27]="esc",t[t.keyK=75]="keyK",t[t.keyL=76]="keyL",t[t.space=32]="space",t[t.tab=9]="tab",t}({});let m_=(()=>{class t{constructor(){this.autoFocus=!1,this.errorPattern="",this.blur=new El,this.enter=new El,this.change=new El,this.changeModel=new El,this.onChangePropagate=null,this.onTouched=null,this.passedWriteValue=!1,this._noAutocomplete=!1,this._placeholder="",this.disabled=!1,this.readonly=!1,this.required=!1,this.clean=!1,this.mask="",this.maskFormatModel=!1}set noAutocomplete(t){this._noAutocomplete=zv(t)}get noAutocomplete(){return this._noAutocomplete}set placeholder(t){this._placeholder=t||""}get placeholder(){return this._placeholder}set setDisabled(t){this.disabled=""===t||zv(t),this.validateModel()}set setReadonly(t){this.readonly=""===t||zv(t)}set setRequired(t){this.required=""===t||zv(t),this.validateModel()}set setClean(t){this.clean=""===t||zv(t)}set setPattern(t){this.pattern=t,this.validateModel()}set maxlength(t){isNaN(parseInt(t,10))?t||(this._maxlength=void 0,this.validateModel()):(this._maxlength=parseInt(t,10),this.validateModel())}get maxlength(){return this._maxlength}set minlength(t){isNaN(parseInt(t,10))?t||(this._minlength=void 0,this.validateModel()):(this._minlength=parseInt(t,10),this.validateModel())}get minlength(){return this._minlength}set setMask(t){this.mask=t,this.objMask=new Bb(this.mask,this.maskFormatModel)}set setMaskFormatModel(t){this.maskFormatModel=""===t||zv(t),this.objMask instanceof Bb&&(this.objMask.formatModel=this.maskFormatModel,this.validateModel())}callOnChange(t){this.updateModel(t),this.controlChangeModelEmitter(t)}callUpdateModelWithTimeout(t){setTimeout(()=>this.updateModel(t))}controlChangeModelEmitter(t){this.modelLastUpdate!==t&&(this.changeModel.emit(t),this.modelLastUpdate=t)}setDisabledState(t){this.disabled=t}registerOnChange(t){this.onChangePropagate=t}registerOnTouched(t){this.onTouched=t}registerOnValidatorChange(t){this.validatorChange=t}updateModel(t){this.onChangePropagate&&this.onChangePropagate(t)}validate(t){return Mb(this.required,this.disabled,this.getScreenValue())?{required:{valid:!1}}:function(t,e){const n=t||0===t,r=(e||0===e)&&e.toString();return n&&r&&r.length>Number(t)}(this.maxlength,this.getScreenValue())?{maxlength:{valid:!1}}:function(t,e){const n=t||0===t,r=(e||0===e)&&e.toString();return n&&r&&r.length<Number(t)}(this.minlength,this.getScreenValue())?{minlength:{valid:!1}}:function(t,e){let n;try{n=new RegExp(t)}catch(r){return!0}return t&&e&&!n.test(e)}(this.pattern,t.value)?(this.validatePatternOnWriteValue(t.value),{pattern:{valid:!1}}):this.extraValidation(t)}writeValue(t){this.writeValueModel(t)}validateModel(){this.validatorChange&&this.validatorChange()}validatePatternOnWriteValue(t){t&&this.passedWriteValue&&(setTimeout(()=>{this.updateModel(t)}),this.passedWriteValue=!1)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Zt({type:t,inputs:{autoFocus:["p-auto-focus","autoFocus"],errorPattern:["p-error-pattern","errorPattern"],noAutocomplete:["p-no-autocomplete","noAutocomplete"],placeholder:["p-placeholder","placeholder"],setDisabled:["p-disabled","setDisabled"],setReadonly:["p-readonly","setReadonly"],setRequired:["p-required","setRequired"],setClean:["p-clean","setClean"],setPattern:["p-pattern","setPattern"],maxlength:["p-maxlength","maxlength"],minlength:["p-minlength","minlength"],setMask:["p-mask","setMask"],setMaskFormatModel:["p-mask-format-model","setMaskFormatModel"],icon:["p-icon","icon"],label:["p-label","label"],help:["p-help","help"],name:"name",optional:["p-optional","optional"]},outputs:{blur:"p-blur",enter:"p-enter",change:"p-change",changeModel:"p-change-model"}}),jy([ub()],t.prototype,"autoFocus",void 0),t})(),y_=(()=>{class t extends m_{constructor(t){super(),this.type="text",this.el=t}get autocomplete(){return this.noAutocomplete?"off":"on"}onKeydown(t){this.mask&&!this.readonly&&229!==t.target.keyCode&&(this.eventOnBlur(t),this.objMask.keydown(t))}onKeyup(t){this.mask&&!this.readonly&&(229!==t.target.keyCode&&(this.eventOnBlur(t),this.objMask.keyup(t)),this.callOnChange(this.objMask.valueToModel))}ngAfterViewInit(){this.afterViewInit()}afterViewInit(){this.verifyAutoFocus(),"password"!==this.type&&this.setPaddingInput()}focus(){this.disabled||this.inputEl.nativeElement.focus()}setPaddingInput(){setTimeout(()=>{let t=this.el.nativeElement.querySelectorAll(".po-field-icon-container:not(.po-field-icon-container-left) > .po-icon").length;this.clean&&t++,t&&(this.inputEl.nativeElement.style.paddingRight=36*t+"px")})}verifyAutoFocus(){this.autoFocus&&this.focus()}eventOnInput(t){let e="";this.mask?(this.objMask.blur(t),this.inputEl.nativeElement.value=this.objMask.valueToInput,e=this.objMask.valueToModel):(e=this.validMaxLength(this.maxlength,t.target.value),this.inputEl.nativeElement.value=e),this.callOnChange(e)}validMaxLength(t,e){return(t||0===t)&&e.length>t?e.toString().substring(0,t):e}eventOnFocus(t){this.valueBeforeChange=this.inputEl.nativeElement.value,this.enter.emit()}eventOnBlur(t){var e;null===(e=this.onTouched)||void 0===e||e.call(this),this.mask&&this.objMask.blur(t),"blur"===t.type&&(this.blur.emit(),this.controlChangeEmitter())}controlChangeEmitter(){const t=this.inputEl.nativeElement.value;t!==this.valueBeforeChange&&(clearTimeout(this.timeoutChange),this.timeoutChange=setTimeout(()=>{this.change.emit(t)},200))}eventOnClick(t){this.mask&&this.objMask.click(t)}hasInvalidClass(){return this.el.nativeElement.classList.contains("ng-invalid")&&this.el.nativeElement.classList.contains("ng-dirty")&&""!==this.inputEl.nativeElement.value}getErrorPattern(){return""!==this.errorPattern&&this.hasInvalidClass()?this.errorPattern:""}validateClassesForPattern(){const t=this.getScreenValue(),e=this.el.nativeElement;t&&!this.verifyPattern(this.pattern,t)?(e.classList.add("ng-invalid"),e.classList.add("ng-dirty")):e.classList.remove("ng-invalid")}verifyPattern(t,e){return new RegExp(t).test(e)}clear(t){this.callOnChange(t),this.controlChangeEmitter()}writeValueModel(t){this.passedWriteValue=!0,this.inputEl&&(t?this.mask?(this.inputEl.nativeElement.value=this.objMask.controlFormatting(String(t)),this.objMask.formatModel&&this.callUpdateModelWithTimeout(this.objMask.valueToModel)):this.inputEl.nativeElement.value=t:this.inputEl.nativeElement.value=""),t&&this.changeModel.emit(t)}getScreenValue(){const t=this.inputEl&&this.inputEl.nativeElement.value||void 0;if("number"===this.type){const e=parseFloat(t);return e||0===e?e:null}return t}}return t.\u0275fac=function(e){return new(e||t)(ho(ba))},t.\u0275dir=Zt({type:t,viewQuery:function(t,e){if(1&t&&Vl(rv,7,ba),2&t){let t;Ml(t=Nl())&&(e.inputEl=t.first)}},hostBindings:function(t,e){1&t&&Co("keydown",function(t){return e.onKeydown(t)})("keyup",function(t){return e.onKeyup(t)})},features:[Ki]}),t})();class v_{constructor(t){this.http=t}execute(t,e){return"string"==typeof t?this.post(t,e):nd(t(e))}post(t,e){return this.http.post(t,e)}setFormDefaultIfEmpty(t){return t||{value:{},fields:[],focus:void 0}}}let b_=(()=>{class t extends v_{constructor(t){super(t)}createAndUpdateFieldsForm(t=[],e=[]){return[...t].reduce((t,n)=>{const r=t.findIndex(t=>t.property===n.property);return r>=0?t[r]=Object.assign(Object.assign({},e[r]),n):t.push(n),t},[...e])}executeLoad(t,e){return this.execute(t,e).pipe(S(t=>this.setFormDefaultIfEmpty(t)))}}return t.\u0275fac=function(e){return new(e||t)(ar(Ey))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),__=(()=>{class t extends v_{constructor(t){super(t)}sendFieldChange(t,e){return this.execute(t.validate,{property:t.property,value:e}).pipe(S(t=>this.setFieldDefaultIfEmpty(t)))}sendFormChange(t,e,n){return this.execute(t,{property:e.property,value:n}).pipe(S(t=>this.setFormDefaultIfEmpty(t)))}updateFieldsForm(t=[],e=[]){return[...t].reduce((t,n)=>{const r=t.findIndex(t=>t.property===n.property);return r>=0&&(t[r]=Object.assign(Object.assign({},e[r]),n)),t},[...e])}setFieldDefaultIfEmpty(t){return t||{field:{}}}}return t.\u0275fac=function(e){return new(e||t)(ar(Ey))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),w_=(()=>{class t extends y_{constructor(t){super(t)}extraValidation(t){return null}}return t.\u0275fac=function(e){return new(e||t)(ho(ba))},t.\u0275cmp=Ht({type:t,selectors:[["po-input"]],features:[da([{provide:Cd,useExisting:st(()=>t),multi:!0},{provide:Sd,useExisting:st(()=>t),multi:!0}]),Ki],decls:8,vars:17,consts:[[3,"p-help","p-label","p-optional"],[1,"po-field-container-content"],["class","po-field-icon-container-left",4,"ngIf"],[1,"po-input",3,"autocomplete","disabled","placeholder","readonly","required","type","blur","click","focus","input"],["inp",""],[1,"po-field-icon-container-right"],[3,"p-element-ref","p-change-event",4,"ngIf"],[3,"p-error-pattern"],[1,"po-field-icon-container-left"],[1,"po-field-icon",3,"p-icon"],[3,"p-element-ref","p-change-event"]],template:function(t,e){1&t&&(go(0,"po-field-container",0),go(1,"div",1),uo(2,hv,2,3,"div",2),go(3,"input",3,4),Co("blur",function(t){return e.eventOnBlur(t)})("click",function(t){return e.eventOnClick(t)})("focus",function(t){return e.eventOnFocus(t)})("input",function(t){return e.eventOnInput(t)}),mo(),go(5,"div",5),uo(6,dv,1,1,"po-clean",6),mo(),mo(),yo(7,"po-field-container-bottom",7),mo()),2&t&&(po("p-help",e.help)("p-label",e.label)("p-optional",!e.required&&e.optional),Ns(2),po("ngIf",e.icon),Ns(1),Mo("po-input-icon-left",e.icon)("po-input-icon-right",e.clean),po("autocomplete",e.autocomplete)("disabled",e.disabled)("placeholder",e.placeholder)("readonly",e.readonly)("required",e.required)("type",e.type),ao("name",e.name),Ns(3),po("ngIf",e.clean&&!e.disabled&&!e.readonly),Ns(1),po("p-error-pattern",e.getErrorPattern()))},directives:[Ib,th,Fb,Qv,Nb],encapsulation:2}),t})(),C_=(()=>{class t{constructor(t,e){this.element=t,this.autoFocus=!1,this.change=new El,this.ngModelChange=new El,this.readyToValidation=!1,this._disabled=!1,this._readonly=!1,this._required=!1,this.element=t,this.changeDetector=e}set options(t){this._options=t,qv(this._options),Wv(this._options),this.onUpdateOptions()}get options(){return this._options}set disabled(t){this._disabled=zv(t),this.validateModel()}get disabled(){return this._disabled}set readonly(t){this._readonly=zv(t)}get readonly(){return this._readonly}set required(t){this._required=zv(t),this.validateModel()}get required(){return this._required}callModelChange(t){return this.onModelChange?this.onModelChange(t):this.ngModelChange.emit(t)}onChange(t){this.change.emit(t)}validate(t){return Mb(this._required,this._disabled,t.value)?{required:{valid:!1}}:null}setDisabledState(t){this.disabled=t,this.changeDetector.detectChanges()}registerOnChange(t){this.onModelChange=t}registerOnTouched(t){this.onModelTouched=t}registerOnValidatorChange(t){this.onValidatorChange=t}validateModel(){this.onValidatorChange&&this.onValidatorChange()}}return t.\u0275fac=function(e){return new(e||t)(ho(ba),ho(qa))},t.\u0275dir=Zt({type:t,inputs:{autoFocus:["p-auto-focus","autoFocus"],options:["p-options","options"],disabled:["p-disabled","disabled"],readonly:["p-readonly","readonly"],required:["p-required","required"],label:["p-label","label"],name:"name",help:["p-help","help"],placeholder:["p-placeholder","placeholder"],optional:["p-optional","optional"]},outputs:{change:"p-change",ngModelChange:"ngModelChange"}}),jy([ub()],t.prototype,"autoFocus",void 0),t})(),E_=(()=>{class t{constructor(t){this.templateRef=t}}return t.\u0275fac=function(e){return new(e||t)(ho(Ya))},t.\u0275dir=Zt({type:t,selectors:[["","p-select-option-template",""]]}),t})();const D_="bottom";let A_=(()=>{class t extends C_{constructor(t,e,n,r,s){super(t,e),this.renderer=r,this.controlPosition=s,this.isMobile=window.navigator.userAgent.match(/Android|webOS|iPhone|iPad|iPod|BlackBerry|Windows Phone/i),this.open=!1,this.selectIcon="po-icon-arrow-down",this.onScroll=()=>{this.controlPosition.adjustPosition(D_)},this.differ=n.find([]).create(null)}get isInvisibleSelectNative(){return this.readonly&&this.isMobile}onKeydown(t){const e=t.which||t.keyCode;this.readonly?e!==g_.tab&&(this.disableDefaultEventAndToggleButton(),t.preventDefault()):(this.open&&!t.altKey||e!==g_.arrowDown&&e!==g_.arrowUp||this.disableDefaultEventAndToggleButton(),e!==g_.enter&&e!==g_.space||this.disableDefaultEventAndToggleButton(),this.open&&e===g_.tab&&(t.preventDefault(),this.toggleButton()))}ngAfterViewInit(){this.autoFocus&&this.focus()}ngDoCheck(){this.differ.diff(this.options)&&(qv(this.options),Wv(this.options))}focus(){this.disabled||this.selectElement.nativeElement.focus()}hideDropDown(){this.selectIcon="po-icon-arrow-down",this.selector(".po-select-container").classList.remove("po-select-show"),this.open=!1,this.changeDetector.markForCheck(),this.selectElement.nativeElement.focus(),this.removeListeners()}isEqual(t,e){return(t||0===t)&&e?t.toString()===e.toString():((null===t&&null!==e||void 0===t&&void 0!==e)&&(t=`${t}`),t===e)}onBlur(){var t;null===(t=this.onModelTouched)||void 0===t||t.call(this)}onOptionClick(t){this.updateModel(t),this.toggleButton()}onSelectChange(t){if(t&&this.options&&this.options.length){const e=this.findOptionValue(t);e&&(this.updateModel(e),this.setScrollPosition(e.value))}}onUpdateOptions(){this.modelValue&&this.onSelectChange(this.modelValue)}scrollValue(t,e){const n=t*this.getSelectItemHeight();return this.scrollPosition=n>e?n:0}selector(t){return this.element.nativeElement.querySelector(t)}toggleButton(){this.open?this.hideDropDown():this.showDropdown()}updateModel(t){this.selectedValue!==t.value&&(this.selectedValue=t.value,this.selectElement.nativeElement.value=t.value,this.callModelChange(t.value),this.displayValue=t.label,this.onChange(t.value))}wasClickedOnToggle(t){this.selectButtonElement.nativeElement.contains(t.target)||this.iconElement.nativeElement.contains(t.target)||this.hideDropDown()}writeValue(t){const e=this.findOptionValue(t);e?(this.selectElement.nativeElement.value=e.value,this.selectedValue=e.value,this.displayValue=e.label,this.setScrollPosition(e.value)):function(t){return null!=t&&""!==t||!1===t}(this.selectedValue)&&(this.selectElement.nativeElement.value=void 0,this.callModelChange(void 0),this.selectedValue=void 0,this.displayValue=void 0),this.modelValue=t,this.changeDetector.detectChanges()}disableDefaultEventAndToggleButton(){this.selectElement.nativeElement.style.display="none",setTimeout(()=>{this.selectElement.nativeElement.style.display="block",this.toggleButton()})}findOptionValue(t){return this.options.find(e=>this.isEqual(e.value,t))}getSelectItemHeight(){const t=this.selector("div.po-select-item");return t&&t.clientHeight}initializeListeners(){this.clickoutListener=this.renderer.listen("document","click",t=>{this.wasClickedOnToggle(t)}),this.eventResizeListener=this.renderer.listen("window","resize",()=>{this.hideDropDown()}),window.addEventListener("scroll",this.onScroll,!0)}removeListeners(){this.clickoutListener&&this.clickoutListener(),this.eventResizeListener(),window.removeEventListener("scroll",this.onScroll,!0)}setPositionDropdown(){this.controlPosition.setElements(this.contentList.nativeElement,8,this.selectButtonElement,["top","bottom"],!0),this.controlPosition.adjustPosition(D_)}setScrollPosition(t){const e=this.element.nativeElement.querySelector("ul.po-select-content");if(t&&this.options&&this.options.length){const n=this.findOptionValue(t);if(n){const t=this.options.indexOf(n);e.scrollTop=this.scrollValue(t,e.clientHeight)}}}showDropdown(){this.readonly||(this.selectElement.nativeElement.focus(),this.selectIcon="po-icon-arrow-up",this.selector(".po-select-container").classList.add("po-select-show"),this.open=!0,this.changeDetector.markForCheck(),this.setPositionDropdown(),this.initializeListeners(),this.options&&this.options.length&&this.setScrollPosition(this.selectedValue))}}return t.\u0275fac=function(e){return new(e||t)(ho(ba),ho(qa),ho(Na),ho(Ca),ho(gb))},t.\u0275cmp=Ht({type:t,selectors:[["po-select"]],contentQueries:function(t,e,n){if(1&t&&jl(n,E_,7),2&t){let t;Ml(t=Nl())&&(e.selectOptionTemplate=t.first)}},viewQuery:function(t,e){if(1&t&&(Vl(pv,7,ba),Vl(fv,7,ba),Vl(gv,7,ba),Vl(mv,7,ba)),2&t){let t;Ml(t=Nl())&&(e.contentList=t.first),Ml(t=Nl())&&(e.iconElement=t.first),Ml(t=Nl())&&(e.selectElement=t.first),Ml(t=Nl())&&(e.selectButtonElement=t.first)}},hostBindings:function(t,e){1&t&&Co("keydown",function(t){return e.onKeydown(t)})},features:[da([{provide:Cd,useExisting:st(()=>t),multi:!0},{provide:Sd,useExisting:st(()=>t),multi:!0},gb]),Ki],decls:17,vars:28,consts:[[3,"p-label","p-help","p-optional"],[1,"po-select",3,"disabled","ngClass","required","change","blur"],["select",""],["disabled","","hidden","","selected","",4,"ngIf"],[3,"disabled","value","click",4,"ngFor","ngForOf"],[1,"po-select-container"],[1,"po-select-button",3,"ngClass","click"],["selectButton",""],[1,"po-field-icon-container-right"],[3,"ngClass"],["icon",""],[1,"po-select-content",3,"ngClass"],["contentList",""],[3,"po-select-item-selected","value","click",4,"ngFor","ngForOf"],["disabled","","hidden","","selected",""],[3,"disabled","value","click"],[3,"value","click"],[1,"po-select-item"],[4,"ngIf","ngIfThen","ngIfElse"],["defaultOptionTemplate",""],[3,"ngTemplateOutlet","ngTemplateOutletContext"],["optionTemplate",""]],template:function(t,e){1&t&&(go(0,"po-field-container",0),go(1,"select",1,2),Co("change",function(t){return e.onSelectChange(t.target.value)})("blur",function(){return e.onBlur()}),uo(3,yv,1,0,"option",3),uo(4,vv,2,3,"option",4),mo(),go(5,"div",5),go(6,"div",6,7),Co("click",function(){return e.toggleButton()}),go(8,"span"),Wo(9),mo(),go(10,"div",8),yo(11,"span",9,10),mo(),mo(),go(13,"ul",11,12),uo(15,Cv,7,10,"li",13),mo(),mo(),yo(16,"po-field-container-bottom"),mo()),2&t&&(po("p-label",e.label)("p-help",e.help)("p-optional",!e.required&&e.optional),Ns(1),po("disabled",e.disabled)("ngClass",_l(17,Ev,e.isMobile,e.isInvisibleSelectNative))("required",e.required),ao("name",e.name),Ns(2),po("ngIf",e.isMobile),Ns(1),po("ngForOf",e.options),Ns(2),po("ngClass",_l(20,Dv,e.disabled,e.readonly)),Ns(3),Go(e.displayValue||e.placeholder),Ns(2),Ko("po-icon ",e.selectIcon," po-field-icon"),po("ngClass",_l(23,Av,e.disabled,e.readonly)),Ns(2),po("ngClass",bl(26,Sv,e.isMobile)),Ns(2),po("ngForOf",e.options))},directives:[Ib,Yc,th,Xc,Fb,up,pp,rh],encapsulation:2,changeDetection:0}),t})(),S_=(()=>{class t extends class{constructor(){this.stackTop=[],this.stackBottom=[],this.defaultDuration=1e4}success(t){this.createToaster(this.buildToaster(t,a_.Success))}warning(t){this.createToaster(this.buildToaster(t,a_.Warning))}error(t){this.createToaster(this.buildToaster(t,a_.Error))}information(t){this.createToaster(this.buildToaster(t,a_.Information))}setDefaultDuration(t){this.defaultDuration=t}buildToaster(t,e){let n,r=0;void 0===t.orientation||t.orientation===o_.Bottom?(r=this.stackBottom.length,n=o_.Bottom):(r=this.stackTop.length,n=o_.Top);const s={componentRef:void 0,message:t.message||t,type:e,orientation:n,action:t.action,actionLabel:t.actionLabel,position:r,duration:t.duration||this.defaultDuration};return t.action&&(s.action=e=>{t.action(),this.destroyToaster(e.componentRef)}),s}}{constructor(t){super(),this.poComponentInjector=t}createToaster(t){const e=this.poComponentInjector.createComponentInApplication(l_);t.componentRef=e,e.changeDetectorRef.detectChanges(),e.instance.configToaster(t);const n=t.orientation===o_.Top?this.stackTop:this.stackBottom;n.push(e),this.verifyLimitToaster(n),this.observableOnClose(e),t.action&&t.actionLabel||function(t=0,e,n){let r=-1;return yp(e)?r=Number(e)<1?1:Number(e):A(e)&&(n=e),A(n)||(n=mp),new v(e=>{const s=yp(t)?t:+t-n.now();return n.schedule(vp,s,{index:0,period:r,subscriber:e})})}(t.duration).pipe(function(t,e=!1){return n=>n.lift(new Ny(t,e))}(()=>e.instance.alive)).subscribe(()=>{this.destroyToaster(e)})}destroyToaster(t){let e;e=t.instance.orientation===o_.Top?this.stackTop:this.stackBottom,t.instance.setFadeOut();const n=e.indexOf(t);e.splice(n,1),setTimeout(()=>{this.poComponentInjector.destroyComponentInApplication(t);for(let t=0;t<e.length;t++)e[t].instance.changePosition(t)},200)}observableOnClose(t){t.instance.observableOnClose.subscribe(()=>{this.destroyToaster(t)})}verifyLimitToaster(t){t.length>5&&this.destroyToaster(t[0])}}return t.\u0275fac=function(e){return new(e||t)(ar(Qb))},t.\u0275prov=ht({factory:function(){return new t(ar(Qb))},token:t,providedIn:"root"}),t})(),x_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[dh,gp,Vy,yb,pb,Lb,_b,Vb,Eb,Ub,Ab,Db,Rb,ob,Wb,Gb,c_,f_,mb,Xv],Vb,Lb,Ub,Rb]}),t})(),k_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[dh,Ym]]}),t})();var T_=function(t){return t.Horizontal="horizontal",t.Vertical="vertical",t}({}),O_=function(t){return t.Danger="danger",t.Info="info",t.Success="success",t.Warning="warning",t}({});const F_=Object.values(wb),P_=T_.Vertical;let I_=(()=>{class t{constructor(){this.click=new El,this.poTagOrientation=T_,this._orientation=P_}set color(t){this._color=F_.includes(t)?t:void 0}get color(){return this._color}set icon(t){this._icon=this.type?zv(t):t}get icon(){return this._icon}set inverse(t){this._inverse=zv(t)}get inverse(){return this._inverse}set orientation(t){this._orientation=Object.values(T_).includes(t)?t:P_}get orientation(){return this._orientation}set type(t){this._type=Object.values(O_).includes(t)?t:void 0}get type(){return this._type}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Zt({type:t,inputs:{color:["p-color","color"],icon:["p-icon","icon"],inverse:["p-inverse","inverse"],orientation:["p-orientation","orientation"],type:["p-type","type"],label:["p-label","label"],value:["p-value","value"]},outputs:{click:"p-click"}}),t})();var R_=function(t){return t.Danger="po-icon-close",t.Info="po-icon-info",t.Success="po-icon-ok",t.Warning="po-icon-warning",t}({});const M_="po-tag-"+O_.Info;let V_=(()=>{class t extends I_{ngOnInit(){this.isClickable=this.click.observers.length>0}get iconFromType(){switch(this.type){case O_.Danger:return R_.Danger;case O_.Info:return R_.Info;case O_.Success:return R_.Success;case O_.Warning:return R_.Warning}}get tagColor(){return this.type?this.inverse?`po-tag-${this.type}-inverse`:`po-tag-${this.type}`:this.color?this.inverse?`po-text-${this.color}`:`po-${this.color}`:this.inverse?`${M_}-inverse`:M_}get tagOrientation(){return this.orientation===this.poTagOrientation.Horizontal}onClick(){this.click.emit({value:this.value,type:this.type})}onKeyPressed(t){t.preventDefault(),t.stopPropagation(),this.onClick()}}return t.\u0275fac=function(){let e;return function(n){return(e||(e=Ln(t)))(n||t)}}(),t.\u0275cmp=Ht({type:t,selectors:[["po-tag"]],features:[Ki],decls:7,vars:10,consts:[[1,"po-tag-container"],["class","po-tag-title po-text-nowrap",4,"ngIf"],[1,"po-tag-sub-container"],["tabindex","0",1,"po-tag",3,"ngClass","click","keydown.enter","keydown.space","keyup.space"],["class","po-tag-icon",3,"p-icon",4,"ngIf"],[1,"po-tag-value"],[1,"po-tag-title","po-text-nowrap"],[1,"po-tag-label"],[1,"po-tag-icon",3,"p-icon"]],template:function(t,e){1&t&&(go(0,"div",0),uo(1,xv,3,1,"div",1),go(2,"div",2),go(3,"div",3),Co("click",function(){return e.onClick()})("keydown.enter",function(t){return e.onKeyPressed(t)})("keydown.space",function(t){return t.preventDefault()})("keyup.space",function(t){return e.onKeyPressed(t)}),uo(4,kv,1,1,"po-icon",4),go(5,"span",5),Wo(6),mo(),mo(),mo(),mo()),2&t&&(Mo("po-tag-container-horizontal",e.tagOrientation),Ns(1),po("ngIf",e.label),Ns(2),Mo("po-clickable",e.isClickable)("po-tag-inverse",e.inverse),po("ngClass",e.tagColor),Ns(1),po("ngIf",e.icon),Ns(2),Go(e.value))},directives:[th,Yc,Qv],encapsulation:2,changeDetection:0}),t})(),j_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[dh,Xv]]}),t})(),N_=(()=>{class t{constructor(t){this.http=t}onLoad(t,e){return this.http.post(t,e).toPromise()}}return t.\u0275fac=function(e){return new(e||t)(ar(Ey))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),L_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[uh,ah,lh,d_,oh,b_,__,N_],imports:[[dh,gp,kb,k_,x_,j_,p_]]}),t})();Math;let B_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh,mb]]}),t})(),U_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh,gp,x_]]}),t})(),H_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[dh,Ym,pb,Tb]]}),t})(),$_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh]]}),t})(),z_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh,Ym,$_,x_,ob,Xv]]}),t})(),q_=(()=>{class t{constructor(){this.subjectChild=new E,this.subjectParent=new E}receiveFromChildMenuClicked(){return this.subjectChild.asObservable()}receiveFromParentMenuClicked(){return this.subjectParent.asObservable()}sendToParentMenuClicked(t){this.subjectChild.next(t)}sendToChildMenuClicked(t){this.subjectParent.next(t)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),W_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[q_],imports:[[dh,Ym,x_,mb]]}),t})(),G_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh,Tb,mb,Xv]]}),t})(),Z_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh,Ym]]}),t})(),K_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh,Ym]]}),t})(),Y_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh,G_,Z_,K_,z_,Xv]]}),t})(),Q_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh,gp,Ym,Yv,pb,Ab,Ob,x_,ib,Wb]]}),t})(),X_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[dh,Ym,Eb]]}),t})(),J_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh]]}),t})(),tw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh,h_]]}),t})(),ew=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[dh,jv,Tb,Xv]]}),t})(),nw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh,gp,Eb,x_]]}),t})(),rw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[dh,Eb]]}),t})(),sw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[Vv,jv,Yv,pb,yb,_b,Cb,Eb,Ab,Db,kb,Ob,L_,x_,B_,U_,Xv,k_,H_,ob,z_,W_,Wb,Y_,Q_,h_,Tb,Gb,X_,J_,f_,tw,j_,ew,nw,rw],Vv,jv,Yv,pb,yb,_b,Cb,Eb,Ab,Db,kb,Ob,L_,x_,B_,U_,Xv,k_,H_,ob,z_,W_,Wb,Y_,Q_,h_,Tb,Gb,X_,J_,f_,tw,j_,ew,nw,rw]}),t})(),iw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[mb],mb]}),t})(),ow=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[]]}),t})();const aw={en:{closeButton:"Close",details:"Details",detail:"Detail",error:"Error",warning:"Warning",information:"Information",success:"Success"},es:{closeButton:"Cerrar",details:"Detalles",detail:"Detalle",error:"Error",warning:"Advertencia",information:"Informacion",success:"\xc9xito"},pt:{closeButton:"Fechar",details:"Detalhes",detail:"Detalhe",error:"Erro",warning:"Aviso",information:"Informa\xe7\xe3o",success:"Sucesso"},ru:{closeButton:"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0442\u044c",details:"\u0414\u0435\u0442\u0430\u043b\u0438",detail:"\u0414\u0435\u0442\u0430\u043b\u044c",error:"\u041e\u0448\u0438\u0431\u043a\u0430",warning:"\u041f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435",information:"\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f",success:"Y\u0441\u043f\u0435\u0445"}},lw={success:"color-11",error:"color-07",warning:"color-08",info:""};let uw=(()=>{class t{constructor(t){this.languageService=t,this.closed=new El,this.details=[],this.language=this.languageService.getShortLanguage(),this.literals=aw[this.language],this.primaryAction={action:()=>this.close(),label:this.literals.closeButton}}set detail(t){t&&t.length&&(this.details=this.filterByValidDetails(t)),this.title=this.formatTitle(this.details)}close(){this.modal.close(),this.closed.emit()}formatDetailItemTitle(t){return t.code?`${t.code} - ${t.message}`:t.message}open(){this.modal.open()}typeColor(t){return lw[t]}typeValue(t){return aw[this.language][t]||t}addValidDetail(t,e){return e.message?t.concat(this.getValidDetailProperties(e)):t}getValidDetailProperties({code:t,message:e,detailedMessage:n,type:r}){return{code:t,message:e,detailedMessage:n,type:r}}filterByValidDetails(t){return t.reduce((t,e)=>this.addValidDetail(t,e),[])}formatTitle(t){return t.length>1?`${this.literals.details} (${t.length})`:this.literals.detail}}return t.\u0275fac=function(e){return new(e||t)(ho(Kv))},t.\u0275cmp=Ht({type:t,selectors:[["po-http-interceptor-detail"]],viewQuery:function(t,e){if(1&t&&Vl(qb,7),2&t){let t;Ml(t=Nl())&&(e.modal=t.first)}},decls:4,vars:3,consts:[["p-hide-close","","p-size","lg",3,"p-primary-action","p-title"],[1,"po-row"],[1,"po-md-12","po-mt-1","po-mb-1"],[3,"p-label",4,"ngFor","ngForOf"],[3,"p-label"],["class","po-row po-mb-1",4,"ngIf"],[1,"po-row","po-mb-1"],[3,"p-color","p-value"]],template:function(t,e){1&t&&(go(0,"po-modal",0),go(1,"div",1),go(2,"po-accordion",2),uo(3,Ov,5,3,"po-accordion-item",3),mo(),mo(),mo()),2&t&&(po("p-primary-action",e.primaryAction)("p-title",e.title),Ns(3),po("ngForOf",e.details))},directives:[qb,Iv,Xc,Pv,th,V_],encapsulation:2}),t})();const cw={pt:{help:"Ajuda",details:"Detalhes",serverNotResponse:"Servidor n\xe3o est\xe1 respondendo"},en:{help:"Help",details:"Details",serverNotResponse:"Server is not responding"},es:{help:"Ayuda",details:"Detalles",serverNotResponse:"El servidor no est\xe1 respondiendo"},ru:{help:"\u041f\u043e\u043c\u043e\u0433\u0438\u0442\u0435",details:"\u0414\u0435\u0442\u0430\u043b\u0438",serverNotResponse:"\u0421\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442"}},hw="X-PO-No-Error",dw="X-PO-No-Message";let pw=(()=>{class t extends class{constructor(t,e,n){this.componentInjector=t,this.notification=e,this.languageService=n,this.notificationTypes=["success","warning","error","information"],this.literals=cw[this.languageService.getShortLanguage()],this.httpInterceptorDetailComponent=void 0}intercept(t,e){const n=t.clone();return t=t&&this.hasParameters(t)?this.cloneRequestWithoutParameters(t):t,e.handle(t).pipe(sf(t=>{t instanceof _y&&this.processResponse(t,n)},t=>{this.processErrorResponse(t,n)}))}processResponse(t,e){if(!this.hasNoMessageParam(e)&&t.body&&t.body._messages){const e=t.body._messages;e instanceof Array?e.forEach(t=>{this.showNotification(t)}):this.showNotification(e)}}processErrorResponse(t,e){const n=0!==t.status?t.error:{code:0,message:this.literals.serverNotResponse,detailedMessage:t.message},r=this.hasNoErrorParam(e),s=this.hasNoMessageParam(e),i=this.notificationTypes.slice(1);n&&n.message&&!r&&!s&&this.showNotification(Object.assign(Object.assign({},n),{type:i.includes(n.type)?n.type:"error"}))}cloneRequestWithoutParameters(t){const e=t.headers.delete(hw).delete(dw);return t.clone({headers:e})}createModal(t){const e=t.details?[t,...t.details]:[t];this.httpInterceptorDetailComponent=this.componentInjector.createComponentInApplication(uw),this.httpInterceptorDetailComponent.instance.detail=e,this.httpInterceptorDetailComponent.instance.closed.subscribe(()=>this.destroyModal()),this.httpInterceptorDetailComponent.instance.open()}destroyModal(){this.httpInterceptorDetailComponent&&(this.componentInjector.destroyComponentInApplication(this.httpInterceptorDetailComponent),this.httpInterceptorDetailComponent=void 0)}hasMessage(t){return t&&t.message}hasNoErrorParam(t){const e=t&&t.headers.get(hw);return e&&"true"===e.toString().toLocaleLowerCase()}hasNoMessageParam(t){const e=t&&t.headers.get(dw);return e&&"true"===e.toString().toLocaleLowerCase()}hasParameters(t){return t.headers.has(hw)||t.headers.has(dw)}showNotification(t){if(!this.hasMessage(t))return;const e=this.notificationTypes.includes(t.type)?t.type:"information",n=this.generateNotificationAction(t);this.notification[e]({message:t.message,actionLabel:n.label,action:n.action})}generateDetailModal(t){return()=>{this.httpInterceptorDetailComponent||this.createModal(t)}}generateNotificationAction(t){let e,n;return!t.helpUrl||t.detailedMessage||t.details?(t.detailedMessage||t.details)&&(n=this.literals.details,e=this.generateDetailModal(t)):(n=this.literals.help,e=this.generateUrlHelpFunction(t.helpUrl)),{label:n,action:e}}generateUrlHelpFunction(t){return()=>{window.open(t,"_blank")}}}{constructor(t,e,n){super(e,t,n)}}return t.\u0275fac=function(e){return new(e||t)(ar(S_),ar(Qb),ar(Kv))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),fw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[pw,S_,{provide:Ay,useClass:pw,multi:!0}],imports:[[dh,Vv,Wb,u_,j_]]}),t})(),gw=(()=>{class t{constructor(){this.controlHttpRequest=new E}getControlHttpRequest(){return this.controlHttpRequest.asObservable()}send(t=0){this.controlHttpRequest.next(t)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const mw="X-PO-No-Count-Pending-Requests",yw="X-PO-Screen-Lock";let vw=(()=>{class t{constructor(t,e){this.controlHttpRequest=t,this.poComponentInjector=e,this.loadingOverlayComponent=void 0,this.pendingRequests=0,this.overlayRequests=0}intercept(t,e){const n=t.clone();return t=this.requestCloneWithoutHeaderParam([mw,yw],t),this.setCountPendingRequests(!0,n),this.setCountOverlayRequests(!0,n),e.handle(t).pipe(sf(t=>{t instanceof _y&&(this.setCountPendingRequests(!1,n),this.setCountOverlayRequests(!1,n))}),Hp(t=>(this.setCountPendingRequests(!1,n),this.setCountOverlayRequests(!1,n),rd(t))))}getCountPendingRequests(){return this.controlHttpRequest.getControlHttpRequest()}buildLoading(){this.loadingOverlayComponent||(this.loadingOverlayComponent=this.poComponentInjector.createComponentInApplication(eb),this.loadingOverlayComponent.instance.screenLock=!0,this.loadingOverlayComponent.instance.changeDetector.detectChanges())}destroyLoading(){this.loadingOverlayComponent&&(this.poComponentInjector.destroyComponentInApplication(this.loadingOverlayComponent),this.loadingOverlayComponent=void 0)}requestCloneWithoutHeaderParam(t,e){let n=!1;return t.forEach(t=>{e.headers.has(t)&&(e.headers.delete(t),n=!0)}),n?e.clone({headers:e.headers}):e}setCountPendingRequests(t,e){const n=e.headers.has(mw),r=e.headers.get(mw);n&&"true"===r.toString().toLowerCase()||(this.pendingRequests+=t?1:-1,this.controlHttpRequest.send(this.pendingRequests))}setCountOverlayRequests(t,e){if(e.headers.has(yw)){if("false"===e.headers.get(yw).toString().toLowerCase())return;this.overlayRequests+=t?1:-1,this.overlayRequests>0?this.buildLoading():this.destroyLoading()}}}return t.\u0275fac=function(e){return new(e||t)(ar(gw),ar(Qb))},t.\u0275prov=ht({factory:function(){return new t(ar(gw),ar(Qb))},token:t,providedIn:"root"}),t})(),bw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[gw,vw,Qb,{provide:Ay,useClass:vw,multi:!0}],imports:[[ob]]}),t})(),_w=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[fw,bw],fw,bw]}),t})(),ww=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[p_],p_]}),t})(),Cw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[S_],imports:[[sw,iw,ow,_w,ww,c_],sw,iw,_w,ow,ww,c_]}),t})();new $n("I18N_CONFIG");const Ew=function(){return{label:"Option 1",value:"1"}},Dw=function(){return{label:"Option 2",value:"2"}},Aw=function(t,e){return[t,e]};let Sw=(()=>{class t{constructor(){this.title="heroes-creator"}onClick(){this.sendValue()}onChange(t){console.log({item:t}),this.selected=t}connectedCallback(){console.log("connectedCallback")}sendValue(){document.dispatchEvent(new CustomEvent("emitValue",{detail:[{value:this.title,name:"result",action:()=>{const t=document.getElementById("resultado");console.log({element:t})}},{value:this.selected,name:"select"}]}))}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=Ht({type:t,selectors:[["hc-app"]],decls:4,vars:7,consts:[["name","input","p-label","PO Input",1,"po-md-12",3,"ngModel","ngModelChange"],["p-label","PO Button",1,"po-md-6",3,"p-click"],["name","select","p-label","PO Select","ngModel","selected",3,"p-options","p-change"]],template:function(t,e){1&t&&(go(0,"po-input",0),Co("ngModelChange",function(t){return e.title=t}),mo(),go(1,"po-button",1),Co("p-click",function(){return e.onClick()}),mo(),yo(2,"po-divider"),go(3,"po-select",2),Co("p-change",function(t){return e.onChange(t)}),mo()),2&t&&(po("ngModel",e.title),Ns(3),po("p-options",_l(4,Aw,vl(2,Ew),vl(3,Dw))))},directives:[w_,Ld,sp,db,xb,A_],encapsulation:2}),t})(),xw=(()=>{class t{constructor(t){const e=function(t,e){const n=function(t,e){return e.get(ga).resolveComponentFactory(t).inputs}(t,e.injector),r=e.strategyFactory||new md(t,e.injector),s=function(t){const e={};return t.forEach(({propName:t,templateName:n})=>{var r;e[(r=n,r.replace(/[A-Z]/g,t=>`-${t.toLowerCase()}`))]=t}),e}(n);class i extends vd{constructor(t){super(),this.injector=t}get ngElementStrategy(){if(!this._ngElementStrategy){const t=this._ngElementStrategy=r.create(this.injector||e.injector);n.forEach(({propName:e})=>{if(!this.hasOwnProperty(e))return;const n=this[e];delete this[e],t.setInputValue(e,n)})}return this._ngElementStrategy}attributeChangedCallback(t,e,n,r){this.ngElementStrategy.setInputValue(s[t],n)}connectedCallback(){let t=!1;this.ngElementStrategy.events&&(this.subscribeToEvents(),t=!0),this.ngElementStrategy.connect(this),t||this.subscribeToEvents()}disconnectedCallback(){this._ngElementStrategy&&this._ngElementStrategy.disconnect(),this.ngElementEventsSubscription&&(this.ngElementEventsSubscription.unsubscribe(),this.ngElementEventsSubscription=null)}subscribeToEvents(){this.ngElementEventsSubscription=this.ngElementStrategy.events.subscribe(t=>{const e=function(t,e,n){if("function"!=typeof CustomEvent){const r=t.createEvent("CustomEvent");return r.initCustomEvent(e,!1,!1,n),r}return new CustomEvent(e,{bubbles:!1,cancelable:!1,detail:n})}(this.ownerDocument,t.name,t.value);this.dispatchEvent(e)})}}return i.observedAttributes=Object.keys(s),n.forEach(({propName:t})=>{Object.defineProperty(i.prototype,t,{get(){return this.ngElementStrategy.getInputValue(t)},set(e){this.ngElementStrategy.setInputValue(t,e)},configurable:!0,enumerable:!0})}),i}(Sw,{injector:t});customElements.define("hc-app",e)}ngDoBootstrap(){}}return t.\u0275fac=function(e){return new(e||t)(ar(Gi))},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[Wh,gp,Cw]]}),t})();(function(){if(Eu)throw new Error("Cannot enable prod mode after platform setup.");Cu=!1})(),zh().bootstrapModule(xw).catch(t=>console.error(t))},221:t=>{function e(t){return Promise.resolve().then(()=>{var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e})}e.keys=()=>[],e.resolve=e,e.id=221,t.exports=e}},t=>{"use strict";t(t.s=636)}]);';