export const pocData = '(()=>{"use strict";var e,r={},n={};function t(e){var o=n[e];if(void 0!==o)return o.exports;var a=n[e]={exports:{}};return r[e](a,a.exports,t),a.exports}t.m=r,e=[],t.O=(r,n,o,a)=>{if(!n){var l=1/0;for(u=0;u<e.length;u++){for(var[n,o,a]=e[u],s=!0,p=0;p<n.length;p++)(!1&a||l>=a)&&Object.keys(t.O).every(e=>t.O[e](n[p]))?n.splice(p--,1):(s=!1,a<l&&(l=a));s&&(e.splice(u--,1),r=o())}return r}a=a||0;for(var u=e.length;u>0&&e[u-1][2]>a;u--)e[u]=e[u-1];e[u]=[n,o,a]},t.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return t.d(r,{a:r}),r},t.d=(e,r)=>{for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},t.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),(()=>{var e={666:0};t.O.j=r=>0===e[r];var r=(r,n)=>{var o,a,[l,s,p]=n,u=0;for(o in s)t.o(s,o)&&(t.m[o]=s[o]);if(p)var f=p(t);for(r&&r(n);u<l.length;u++)t.o(e,a=l[u])&&e[a]&&e[a][0](),e[l[u]]=0;return t.O(f)},n=self.webpackChunkpoc_ng_elements=self.webpackChunkpoc_ng_elements||[];n.forEach(r.bind(null,0)),n.push=r.bind(null,n.push.bind(n))})()})();(self.webpackChunkpoc_ng_elements=self.webpackChunkpoc_ng_elements||[]).push([[429],{22:()=>{!function(e,t){"use strict";function n(){var e=M.splice(0,M.length);for(Ke=0;e.length;)e.shift().call(null,e.shift())}function o(e,t){for(var n=0,o=e.length;n<o;n++)d(e[n],t)}function r(e){return function(t){Ie(t)&&(d(t,e),ae.length&&o(t.querySelectorAll(ae),e))}}function a(e){var t=Ve.call(e,"is"),n=e.nodeName.toUpperCase(),o=se.call(oe,t?ee+t.toUpperCase():Q+n);return t&&-1<o&&!i(n,t)?-1:o}function i(e,t){return-1<ae.indexOf(e+'[is="'+t+'"]')}function s(e){var t=e.currentTarget,n=e.attrChange,o=e.attrName,r=e.target,a=e[$]||2,i=e[X]||3;!ot||r&&r!==t||!t[V]||"style"===o||e.prevValue===e.newValue&&(""!==e.newValue||n!==a&&n!==i)||t[V](o,n===a?null:e.prevValue,n===i?null:e.newValue)}function c(e){var t=r(e);return function(e){M.push(t,e.target),Ke&&clearTimeout(Ke),Ke=setTimeout(n,1)}}function l(e){nt&&(nt=!1,e.currentTarget.removeEventListener(K,l)),ae.length&&o((e.target||E).querySelectorAll(ae),e.detail===x?x:j),Ne&&function(){for(var e,t=0,n=Ae.length;t<n;t++)ie.contains(e=Ae[t])||(n--,Ae.splice(t--,1),d(e,x))}()}function u(e,t){var n=this;Be.call(n,e,t),L.call(n,{target:n})}function h(e,t,n){var o=t.apply(e,n),r=a(o);return-1<r&&Z(o,re[r]),n.pop()&&ae.length&&function(e){for(var t,n=0,o=e.length;n<o;n++)Z(t=e[n],re[a(t)])}(o.querySelectorAll(ae)),o}function p(e,t){De(e,t),O?O.observe(e,Xe):(tt&&(e.setAttribute=u,e[I]=S(e),e[A](J,L)),e[A](Y,s)),e[G]&&ot&&(e.created=!0,e[G](),e.created=!1)}function f(e){throw new Error("A "+e+" type is already registered")}function d(e,t){var n,o,r=a(e);-1<r&&!xe.call(e,"TEMPLATE")&&(H(e,re[r]),r=0,t!==j||e[j]?t!==x||e[x]||(e[j]=!1,e[x]=!0,o="disconnected",r=1):(e[x]=!1,e[j]=!0,o="connected",r=1,Ne&&se.call(Ae,e)<0&&Ae.push(e)),r&&(n=e[t+R]||e[o+R])&&n.call(e))}function m(){}function g(e,t,n){var o=n&&n[F]||"",r=t.prototype,a=Oe(r),i=t.observedAttributes||pe,s={prototype:a};ze(a,G,{value:function(){if(we)we=!1;else if(!this[ye]){this[ye]=!0,new t(this),r[G]&&r[G].call(this);var e=Me[Ce.get(t)];(!ve||e.create.length>1)&&_(this)}}}),ze(a,V,{value:function(e){-1<se.call(i,e)&&r[V]&&r[V].apply(this,arguments)}}),r[q]&&ze(a,U,{value:r[q]}),r[B]&&ze(a,W,{value:r[B]}),o&&(s[F]=o),e=e.toUpperCase(),Me[e]={constructor:t,create:o?[o,Se(e)]:[e]},Ce.set(t,e),E[N](e.toLowerCase(),s),v(e),Le[e].r()}function T(e){var t=Me[e.toUpperCase()];return t&&t.constructor}function y(e){return"string"==typeof e?e:e&&e.is||""}function _(e){for(var t,n=e[V],o=n?e.attributes:pe,r=o.length;r--;)n.call(e,(t=o[r]).name||t.nodeName,null,t.value||t.nodeValue)}function v(e){return(e=e.toUpperCase())in Le||(Le[e]={},Le[e].p=new be(function(t){Le[e].r=t})),Le[e].p}function k(){_e&&delete e.customElements,he(e,"customElements",{configurable:!0,value:new m}),he(e,"CustomElementRegistry",{configurable:!0,value:m});for(var t=w.get(/^HTML[A-Z]*[a-z]/),n=t.length;n--;function(t){var n=e[t];if(n){e[t]=function(e){var t,o;return e||(e=this),e[ye]||(we=!0,t=Me[Ce.get(e.constructor)],(e=(o=ve&&1===t.create.length)?Reflect.construct(n,pe,t.constructor):E.createElement.apply(E,t.create))[ye]=!0,we=!1,o||_(e)),e},e[t].prototype=n.prototype;try{n.prototype.constructor=e[t]}catch(o){he(n,ye,{value:e[t]})}}}(t[n]));E.createElement=function(e,t){var n=y(t);return n?$e.call(this,e,Se(n)):$e.call(this,e)},Je||(et=!0,E[N](""))}var E=e.document,b=e.Object,w=function(e){var t,n,o,r,a=/^[A-Z]+[a-z]/,i=function(e,t){(t=t.toLowerCase())in s||(s[e]=(s[e]||[]).concat(t),s[t]=s[t.toUpperCase()]=e)},s=(b.create||b)(null),c={};for(n in e)for(r in e[n])for(s[r]=o=e[n][r],t=0;t<o.length;t++)s[o[t].toLowerCase()]=s[o[t].toUpperCase()]=r;return c.get=function(e){return"string"==typeof e?s[e]||(a.test(e)?[]:""):function(e){var t,n=[];for(t in s)e.test(t)&&n.push(t);return n}(e)},c.set=function(e,t){return a.test(e)?i(e,t):i(t,e),c},c}({collections:{HTMLAllCollection:["all"],HTMLCollection:["forms"],HTMLFormControlsCollection:["elements"],HTMLOptionsCollection:["options"]},elements:{Element:["element"],HTMLAnchorElement:["a"],HTMLAppletElement:["applet"],HTMLAreaElement:["area"],HTMLAttachmentElement:["attachment"],HTMLAudioElement:["audio"],HTMLBRElement:["br"],HTMLBaseElement:["base"],HTMLBodyElement:["body"],HTMLButtonElement:["button"],HTMLCanvasElement:["canvas"],HTMLContentElement:["content"],HTMLDListElement:["dl"],HTMLDataElement:["data"],HTMLDataListElement:["datalist"],HTMLDetailsElement:["details"],HTMLDialogElement:["dialog"],HTMLDirectoryElement:["dir"],HTMLDivElement:["div"],HTMLDocument:["document"],HTMLElement:["element","abbr","address","article","aside","b","bdi","bdo","cite","code","command","dd","dfn","dt","em","figcaption","figure","footer","header","i","kbd","mark","nav","noscript","rp","rt","ruby","s","samp","section","small","strong","sub","summary","sup","u","var","wbr"],HTMLEmbedElement:["embed"],HTMLFieldSetElement:["fieldset"],HTMLFontElement:["font"],HTMLFormElement:["form"],HTMLFrameElement:["frame"],HTMLFrameSetElement:["frameset"],HTMLHRElement:["hr"],HTMLHeadElement:["head"],HTMLHeadingElement:["h1","h2","h3","h4","h5","h6"],HTMLHtmlElement:["html"],HTMLIFrameElement:["iframe"],HTMLImageElement:["img"],HTMLInputElement:["input"],HTMLKeygenElement:["keygen"],HTMLLIElement:["li"],HTMLLabelElement:["label"],HTMLLegendElement:["legend"],HTMLLinkElement:["link"],HTMLMapElement:["map"],HTMLMarqueeElement:["marquee"],HTMLMediaElement:["media"],HTMLMenuElement:["menu"],HTMLMenuItemElement:["menuitem"],HTMLMetaElement:["meta"],HTMLMeterElement:["meter"],HTMLModElement:["del","ins"],HTMLOListElement:["ol"],HTMLObjectElement:["object"],HTMLOptGroupElement:["optgroup"],HTMLOptionElement:["option"],HTMLOutputElement:["output"],HTMLParagraphElement:["p"],HTMLParamElement:["param"],HTMLPictureElement:["picture"],HTMLPreElement:["pre"],HTMLProgressElement:["progress"],HTMLQuoteElement:["blockquote","q","quote"],HTMLScriptElement:["script"],HTMLSelectElement:["select"],HTMLShadowElement:["shadow"],HTMLSlotElement:["slot"],HTMLSourceElement:["source"],HTMLSpanElement:["span"],HTMLStyleElement:["style"],HTMLTableCaptionElement:["caption"],HTMLTableCellElement:["td","th"],HTMLTableColElement:["col","colgroup"],HTMLTableElement:["table"],HTMLTableRowElement:["tr"],HTMLTableSectionElement:["thead","tbody","tfoot"],HTMLTemplateElement:["template"],HTMLTextAreaElement:["textarea"],HTMLTimeElement:["time"],HTMLTitleElement:["title"],HTMLTrackElement:["track"],HTMLUListElement:["ul"],HTMLUnknownElement:["unknown","vhgroupv","vkeygen"],HTMLVideoElement:["video"]},nodes:{Attr:["node"],Audio:["audio"],CDATASection:["node"],CharacterData:["node"],Comment:["#comment"],Document:["#document"],DocumentFragment:["#document-fragment"],DocumentType:["node"],HTMLDocument:["#document"],Image:["img"],Option:["option"],ProcessingInstruction:["node"],ShadowRoot:["#shadow-root"],Text:["#text"],XMLDocument:["xml"]}});"object"!=typeof t&&(t={type:t||"auto"});var M,L,C,S,O,D,H,Z,P,N="registerElement",z=1e5*e.Math.random()>>0,I="__"+N+z,A="addEventListener",j="attached",R="Callback",x="detached",F="extends",V="attributeChanged"+R,U=j+R,q="connected"+R,B="disconnected"+R,G="created"+R,W=x+R,$="ADDITION",X="REMOVAL",Y="DOMAttrModified",K="DOMContentLoaded",J="DOMSubtreeModified",Q="<",ee="=",te=/^[A-Z][._A-Z0-9]*-[-._A-Z0-9]*$/,ne=["ANNOTATION-XML","COLOR-PROFILE","FONT-FACE","FONT-FACE-SRC","FONT-FACE-URI","FONT-FACE-FORMAT","FONT-FACE-NAME","MISSING-GLYPH"],oe=[],re=[],ae="",ie=E.documentElement,se=oe.indexOf||function(e){for(var t=this.length;t--&&this[t]!==e;);return t},ce=b.prototype,le=ce.hasOwnProperty,ue=ce.isPrototypeOf,he=b.defineProperty,pe=[],fe=b.getOwnPropertyDescriptor,de=b.getOwnPropertyNames,me=b.getPrototypeOf,ge=b.setPrototypeOf,Te=!!b.__proto__,ye="__dreCEv1",_e=e.customElements,ve=!/^force/.test(t.type)&&!!(_e&&_e.define&&_e.get&&_e.whenDefined),ke=b.create||b,Ee=e.Map||function(){var e,t=[],n=[];return{get:function(e){return n[se.call(t,e)]},set:function(o,r){(e=se.call(t,o))<0?n[t.push(o)-1]=r:n[e]=r}}},be=e.Promise||function(e){function t(e){for(o=!0;n.length;)n.shift()(e)}var n=[],o=!1,r={catch:function(){return r},then:function(e){return n.push(e),o&&setTimeout(t,1),r}};return e(t),r},we=!1,Me=ke(null),Le=ke(null),Ce=new Ee,Se=function(e){return e.toLowerCase()},Oe=b.create||function e(t){return t?(e.prototype=t,new e):this},De=ge||(Te?function(e,t){return e.__proto__=t,e}:de&&fe?function(){function e(e,t){for(var n,o=de(t),r=0,a=o.length;r<a;r++)le.call(e,n=o[r])||he(e,n,fe(t,n))}return function(t,n){do{e(t,n)}while((n=me(n))&&!ue.call(n,t));return t}}():function(e,t){for(var n in t)e[n]=t[n];return e}),He=e.MutationObserver||e.WebKitMutationObserver,Ze=e.HTMLAnchorElement,Pe=(e.HTMLElement||e.Element||e.Node).prototype,Ne=!ue.call(Pe,ie),ze=Ne?function(e,t,n){return e[t]=n.value,e}:he,Ie=Ne?function(e){return 1===e.nodeType}:function(e){return ue.call(Pe,e)},Ae=Ne&&[],je=Pe.attachShadow,Re=Pe.cloneNode,xe=Pe.closest||function(e){for(var t=this;t&&t.nodeName!==e;)t=t.parentNode;return t},Fe=Pe.dispatchEvent,Ve=Pe.getAttribute,Ue=Pe.hasAttribute,qe=Pe.removeAttribute,Be=Pe.setAttribute,Ge=E.createElement,We=E.importNode,$e=Ge,Xe=He&&{attributes:!0,characterData:!0,attributeOldValue:!0},Ye=He||function(e){tt=!1,ie.removeEventListener(Y,Ye)},Ke=0,Je=N in E&&!/^force-all/.test(t.type),Qe=!0,et=!1,tt=!0,nt=!0,ot=!0;if(He&&((P=E.createElement("div")).innerHTML="<div><div></div></div>",new He(function(e,t){if(e[0]&&"childList"==e[0].type&&!e[0].removedNodes[0].childNodes.length){var n=(P=fe(Pe,"innerHTML"))&&P.set;n&&he(Pe,"innerHTML",{set:function(e){for(;this.lastChild;)this.removeChild(this.lastChild);n.call(this,e)}})}t.disconnect(),P=null}).observe(P,{childList:!0,subtree:!0}),P.innerHTML=""),Je||(ge||Te?(H=function(e,t){ue.call(t,e)||p(e,t)},Z=p):Z=H=function(e,t){e[I]||(e[I]=b(!0),p(e,t))},Ne?(tt=!1,function(){var e=fe(Pe,A),t=e.value,n=function(e){var t=new CustomEvent(Y,{bubbles:!0});t.attrName=e,t.prevValue=Ve.call(this,e),t.newValue=null,t[X]=t.attrChange=2,qe.call(this,e),Fe.call(this,t)},o=function(e,t){var n=Ue.call(this,e),o=n&&Ve.call(this,e),r=new CustomEvent(Y,{bubbles:!0});Be.call(this,e,t),r.attrName=e,r.prevValue=n?o:null,r.newValue=t,n?r.MODIFICATION=r.attrChange=1:r[$]=r.attrChange=0,Fe.call(this,r)},r=function(e){var t,n=e.currentTarget,o=n[I],r=e.propertyName;o.hasOwnProperty(r)&&(o=o[r],(t=new CustomEvent(Y,{bubbles:!0})).attrName=o.name,t.prevValue=o.value||null,t.newValue=o.value=n[r]||null,null==t.prevValue?t[$]=t.attrChange=0:t.MODIFICATION=t.attrChange=1,Fe.call(n,t))};e.value=function(e,a,i){e===Y&&this[V]&&this.setAttribute!==o&&(this[I]={className:{name:"class",value:this.className}},this.setAttribute=o,this.removeAttribute=n,t.call(this,"propertychange",r)),t.call(this,e,a,i)},he(Pe,A,e)}()):He||(ie[A](Y,Ye),ie.setAttribute(I,1),ie.removeAttribute(I),tt&&(L=function(e){var t,n,o,r=this;if(r===e.target){for(o in t=r[I],r[I]=n=S(r),n){if(!(o in t))return C(0,r,o,t[o],n[o],$);if(n[o]!==t[o])return C(1,r,o,t[o],n[o],"MODIFICATION")}for(o in t)if(!(o in n))return C(2,r,o,t[o],n[o],X)}},C=function(e,t,n,o,r,a){var i={attrChange:e,currentTarget:t,attrName:n,prevValue:o,newValue:r};i[a]=e,s(i)},S=function(e){for(var t,n,o={},r=e.attributes,a=0,i=r.length;a<i;a++)"setAttribute"!==(n=(t=r[a]).name)&&(o[n]=t.value);return o})),E[N]=function(e,t){if(n=e.toUpperCase(),Qe&&(Qe=!1,He?(O=function(e,t){function n(e,t){for(var n=0,o=e.length;n<o;t(e[n++]));}return new He(function(o){for(var r,a,i,s=0,c=o.length;s<c;s++)"childList"===(r=o[s]).type?(n(r.addedNodes,e),n(r.removedNodes,t)):(a=r.target,ot&&a[V]&&"style"!==r.attributeName&&(i=Ve.call(a,r.attributeName))!==r.oldValue&&a[V](r.attributeName,r.oldValue,i))})}(r(j),r(x)),(D=function(e){return O.observe(e,{childList:!0,subtree:!0}),e})(E),je&&(Pe.attachShadow=function(){return D(je.apply(this,arguments))})):(M=[],E[A]("DOMNodeInserted",c(j)),E[A]("DOMNodeRemoved",c(x))),E[A](K,l),E[A]("readystatechange",l),E.importNode=function(e,t){switch(e.nodeType){case 1:return h(E,We,[e,!!t]);case 11:for(var n=E.createDocumentFragment(),o=e.childNodes,r=o.length,a=0;a<r;a++)n.appendChild(E.importNode(o[a],!!t));return n;default:return Re.call(e,!!t)}},Pe.cloneNode=function(e){return h(this,Re,[!!e])}),et)return et=!1;if(-2<se.call(oe,ee+n)+se.call(oe,Q+n)&&f(e),!te.test(n)||-1<se.call(ne,n))throw new Error("The type "+e+" is invalid");var n,a,i=function(){return u?E.createElement(p,n):E.createElement(p)},s=t||ce,u=le.call(s,F),p=u?t[F].toUpperCase():n;return u&&-1<se.call(oe,Q+p)&&f(p),a=oe.push((u?ee:Q)+n)-1,ae=ae.concat(ae.length?",":"",u?p+'[is="'+e.toLowerCase()+'"]':p),i.prototype=re[a]=le.call(s,"prototype")?s.prototype:Oe(Pe),ae.length&&o(E.querySelectorAll(ae),j),i},E.createElement=$e=function(e,t){var n=y(t),o=n?Ge.call(E,e,Se(n)):Ge.call(E,e),r=""+e,a=se.call(oe,(n?ee:Q)+(n||r).toUpperCase()),s=-1<a;return n&&(o.setAttribute("is",n=n.toLowerCase()),s&&(s=i(r.toUpperCase(),n))),ot=!E.createElement.innerHTMLHelper,s&&Z(o,re[a]),o}),addEventListener("beforeunload",function(){delete E.createElement,delete E.importNode,delete E[N]},!1),m.prototype={constructor:m,define:ve?function(e,t,n){if(n)g(e,t,n);else{var o=e.toUpperCase();Me[o]={constructor:t,create:[o]},Ce.set(t,o),_e.define(e,t)}}:g,get:ve?function(e){return _e.get(e)||T(e)}:T,whenDefined:ve?function(e){return be.race([_e.whenDefined(e),v(e)])}:v},!_e||/^force/.test(t.type))k();else if(!t.noBuiltIn)try{!function(t,n,o){var r=new RegExp("^<a\\s+is=('|\")"+o+"\\1></a>$");if(n[F]="a",(t.prototype=Oe(Ze.prototype)).constructor=t,e.customElements.define(o,t,n),!r.test(E.createElement("a",{is:o}).outerHTML)||!r.test((new t).outerHTML))throw n}(function e(){return Reflect.construct(Ze,[],e)},{},"document-register-element-a"+z)}catch(rt){k()}if(!t.noBuiltIn)try{if(Ge.call(E,"a","a").outerHTML.indexOf("is")<0)throw{}}catch(at){Se=function(e){return{is:e.toLowerCase()}}}}(window)},167:()=>{"use strict";!function(e){const t=e.performance;function n(e){t&&t.mark&&t.mark(e)}function o(e,n){t&&t.measure&&t.measure(e,n)}n("Zone");const r=e.__Zone_symbol_prefix||"__zone_symbol__";function a(e){return r+e}const i=!0===e[a("forceDuplicateZoneCheck")];if(e.Zone){if(i||"function"!=typeof e.Zone.__symbol__)throw new Error("Zone already loaded.");return e.Zone}class s{constructor(e,t){this._parent=e,this._name=t?t.name||"unnamed":"<root>",this._properties=t&&t.properties||{},this._zoneDelegate=new l(this,this._parent&&this._parent._zoneDelegate,t)}static assertZonePatched(){if(e.Promise!==O.ZoneAwarePromise)throw new Error("Zone.js has detected that ZoneAwarePromise `(window|global).Promise` has been overwritten.\nMost likely cause is that a Promise polyfill has been loaded after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. If you must load one, do so before loading zone.js.)")}static get root(){let e=s.current;for(;e.parent;)e=e.parent;return e}static get current(){return H.zone}static get currentTask(){return Z}static __load_patch(t,r,a=!1){if(O.hasOwnProperty(t)){if(!a&&i)throw Error("Already loaded patch: "+t)}else if(!e["__Zone_disable_"+t]){const a="Zone:"+t;n(a),O[t]=r(e,s,D),o(a,a)}}get parent(){return this._parent}get name(){return this._name}get(e){const t=this.getZoneWith(e);if(t)return t._properties[e]}getZoneWith(e){let t=this;for(;t;){if(t._properties.hasOwnProperty(e))return t;t=t._parent}return null}fork(e){if(!e)throw new Error("ZoneSpec required!");return this._zoneDelegate.fork(this,e)}wrap(e,t){if("function"!=typeof e)throw new Error("Expecting function got: "+e);const n=this._zoneDelegate.intercept(this,e,t),o=this;return function(){return o.runGuarded(n,this,arguments,t)}}run(e,t,n,o){H={parent:H,zone:this};try{return this._zoneDelegate.invoke(this,e,t,n,o)}finally{H=H.parent}}runGuarded(e,t=null,n,o){H={parent:H,zone:this};try{try{return this._zoneDelegate.invoke(this,e,t,n,o)}catch(r){if(this._zoneDelegate.handleError(this,r))throw r}}finally{H=H.parent}}runTask(e,t,n){if(e.zone!=this)throw new Error("A task can only be run in the zone of creation! (Creation: "+(e.zone||_).name+"; Execution: "+this.name+")");if(e.state===v&&(e.type===S||e.type===C))return;const o=e.state!=b;o&&e._transitionTo(b,E),e.runCount++;const r=Z;Z=e,H={parent:H,zone:this};try{e.type==C&&e.data&&!e.data.isPeriodic&&(e.cancelFn=void 0);try{return this._zoneDelegate.invokeTask(this,e,t,n)}catch(a){if(this._zoneDelegate.handleError(this,a))throw a}}finally{e.state!==v&&e.state!==M&&(e.type==S||e.data&&e.data.isPeriodic?o&&e._transitionTo(E,b):(e.runCount=0,this._updateTaskCount(e,-1),o&&e._transitionTo(v,b,v))),H=H.parent,Z=r}}scheduleTask(e){if(e.zone&&e.zone!==this){let t=this;for(;t;){if(t===e.zone)throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${e.zone.name}`);t=t.parent}}e._transitionTo(k,v);const t=[];e._zoneDelegates=t,e._zone=this;try{e=this._zoneDelegate.scheduleTask(this,e)}catch(n){throw e._transitionTo(M,k,v),this._zoneDelegate.handleError(this,n),n}return e._zoneDelegates===t&&this._updateTaskCount(e,1),e.state==k&&e._transitionTo(E,k),e}scheduleMicroTask(e,t,n,o){return this.scheduleTask(new u(L,e,t,n,o,void 0))}scheduleMacroTask(e,t,n,o,r){return this.scheduleTask(new u(C,e,t,n,o,r))}scheduleEventTask(e,t,n,o,r){return this.scheduleTask(new u(S,e,t,n,o,r))}cancelTask(e){if(e.zone!=this)throw new Error("A task can only be cancelled in the zone of creation! (Creation: "+(e.zone||_).name+"; Execution: "+this.name+")");e._transitionTo(w,E,b);try{this._zoneDelegate.cancelTask(this,e)}catch(t){throw e._transitionTo(M,w),this._zoneDelegate.handleError(this,t),t}return this._updateTaskCount(e,-1),e._transitionTo(v,w),e.runCount=0,e}_updateTaskCount(e,t){const n=e._zoneDelegates;-1==t&&(e._zoneDelegates=null);for(let o=0;o<n.length;o++)n[o]._updateTaskCount(e.type,t)}}s.__symbol__=a;const c={name:"",onHasTask:(e,t,n,o)=>e.hasTask(n,o),onScheduleTask:(e,t,n,o)=>e.scheduleTask(n,o),onInvokeTask:(e,t,n,o,r,a)=>e.invokeTask(n,o,r,a),onCancelTask:(e,t,n,o)=>e.cancelTask(n,o)};class l{constructor(e,t,n){this._taskCounts={microTask:0,macroTask:0,eventTask:0},this.zone=e,this._parentDelegate=t,this._forkZS=n&&(n&&n.onFork?n:t._forkZS),this._forkDlgt=n&&(n.onFork?t:t._forkDlgt),this._forkCurrZone=n&&(n.onFork?this.zone:t._forkCurrZone),this._interceptZS=n&&(n.onIntercept?n:t._interceptZS),this._interceptDlgt=n&&(n.onIntercept?t:t._interceptDlgt),this._interceptCurrZone=n&&(n.onIntercept?this.zone:t._interceptCurrZone),this._invokeZS=n&&(n.onInvoke?n:t._invokeZS),this._invokeDlgt=n&&(n.onInvoke?t:t._invokeDlgt),this._invokeCurrZone=n&&(n.onInvoke?this.zone:t._invokeCurrZone),this._handleErrorZS=n&&(n.onHandleError?n:t._handleErrorZS),this._handleErrorDlgt=n&&(n.onHandleError?t:t._handleErrorDlgt),this._handleErrorCurrZone=n&&(n.onHandleError?this.zone:t._handleErrorCurrZone),this._scheduleTaskZS=n&&(n.onScheduleTask?n:t._scheduleTaskZS),this._scheduleTaskDlgt=n&&(n.onScheduleTask?t:t._scheduleTaskDlgt),this._scheduleTaskCurrZone=n&&(n.onScheduleTask?this.zone:t._scheduleTaskCurrZone),this._invokeTaskZS=n&&(n.onInvokeTask?n:t._invokeTaskZS),this._invokeTaskDlgt=n&&(n.onInvokeTask?t:t._invokeTaskDlgt),this._invokeTaskCurrZone=n&&(n.onInvokeTask?this.zone:t._invokeTaskCurrZone),this._cancelTaskZS=n&&(n.onCancelTask?n:t._cancelTaskZS),this._cancelTaskDlgt=n&&(n.onCancelTask?t:t._cancelTaskDlgt),this._cancelTaskCurrZone=n&&(n.onCancelTask?this.zone:t._cancelTaskCurrZone),this._hasTaskZS=null,this._hasTaskDlgt=null,this._hasTaskDlgtOwner=null,this._hasTaskCurrZone=null;const o=n&&n.onHasTask;(o||t&&t._hasTaskZS)&&(this._hasTaskZS=o?n:c,this._hasTaskDlgt=t,this._hasTaskDlgtOwner=this,this._hasTaskCurrZone=e,n.onScheduleTask||(this._scheduleTaskZS=c,this._scheduleTaskDlgt=t,this._scheduleTaskCurrZone=this.zone),n.onInvokeTask||(this._invokeTaskZS=c,this._invokeTaskDlgt=t,this._invokeTaskCurrZone=this.zone),n.onCancelTask||(this._cancelTaskZS=c,this._cancelTaskDlgt=t,this._cancelTaskCurrZone=this.zone))}fork(e,t){return this._forkZS?this._forkZS.onFork(this._forkDlgt,this.zone,e,t):new s(e,t)}intercept(e,t,n){return this._interceptZS?this._interceptZS.onIntercept(this._interceptDlgt,this._interceptCurrZone,e,t,n):t}invoke(e,t,n,o,r){return this._invokeZS?this._invokeZS.onInvoke(this._invokeDlgt,this._invokeCurrZone,e,t,n,o,r):t.apply(n,o)}handleError(e,t){return!this._handleErrorZS||this._handleErrorZS.onHandleError(this._handleErrorDlgt,this._handleErrorCurrZone,e,t)}scheduleTask(e,t){let n=t;if(this._scheduleTaskZS)this._hasTaskZS&&n._zoneDelegates.push(this._hasTaskDlgtOwner),n=this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt,this._scheduleTaskCurrZone,e,t),n||(n=t);else if(t.scheduleFn)t.scheduleFn(t);else{if(t.type!=L)throw new Error("Task is missing scheduleFn.");T(t)}return n}invokeTask(e,t,n,o){return this._invokeTaskZS?this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt,this._invokeTaskCurrZone,e,t,n,o):t.callback.apply(n,o)}cancelTask(e,t){let n;if(this._cancelTaskZS)n=this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt,this._cancelTaskCurrZone,e,t);else{if(!t.cancelFn)throw Error("Task is not cancelable");n=t.cancelFn(t)}return n}hasTask(e,t){try{this._hasTaskZS&&this._hasTaskZS.onHasTask(this._hasTaskDlgt,this._hasTaskCurrZone,e,t)}catch(n){this.handleError(e,n)}}_updateTaskCount(e,t){const n=this._taskCounts,o=n[e],r=n[e]=o+t;if(r<0)throw new Error("More tasks executed then were scheduled.");0!=o&&0!=r||this.hasTask(this.zone,{microTask:n.microTask>0,macroTask:n.macroTask>0,eventTask:n.eventTask>0,change:e})}}class u{constructor(t,n,o,r,a,i){if(this._zone=null,this.runCount=0,this._zoneDelegates=null,this._state="notScheduled",this.type=t,this.source=n,this.data=r,this.scheduleFn=a,this.cancelFn=i,!o)throw new Error("callback is not defined");this.callback=o;const s=this;this.invoke=t===S&&r&&r.useG?u.invokeTask:function(){return u.invokeTask.call(e,s,this,arguments)}}static invokeTask(e,t,n){e||(e=this),P++;try{return e.runCount++,e.zone.runTask(e,t,n)}finally{1==P&&y(),P--}}get zone(){return this._zone}get state(){return this._state}cancelScheduleRequest(){this._transitionTo(v,k)}_transitionTo(e,t,n){if(this._state!==t&&this._state!==n)throw new Error(`${this.type} '${this.source}': can not transition to '${e}', expecting state '${t}'${n?" or '"+n+"'":""}, was '${this._state}'.`);this._state=e,e==v&&(this._zoneDelegates=null)}toString(){return this.data&&void 0!==this.data.handleId?this.data.handleId.toString():Object.prototype.toString.call(this)}toJSON(){return{type:this.type,state:this.state,source:this.source,zone:this.zone.name,runCount:this.runCount}}}const h=a("setTimeout"),p=a("Promise"),f=a("then");let d,m=[],g=!1;function T(t){if(0===P&&0===m.length)if(d||e[p]&&(d=e[p].resolve(0)),d){let e=d[f];e||(e=d.then),e.call(d,y)}else e[h](y,0);t&&m.push(t)}function y(){if(!g){for(g=!0;m.length;){const t=m;m=[];for(let n=0;n<t.length;n++){const o=t[n];try{o.zone.runTask(o,null,null)}catch(e){D.onUnhandledError(e)}}}D.microtaskDrainDone(),g=!1}}const _={name:"NO ZONE"},v="notScheduled",k="scheduling",E="scheduled",b="running",w="canceling",M="unknown",L="microTask",C="macroTask",S="eventTask",O={},D={symbol:a,currentZoneFrame:()=>H,onUnhandledError:N,microtaskDrainDone:N,scheduleMicroTask:T,showUncaughtError:()=>!s[a("ignoreConsoleErrorUncaughtError")],patchEventTarget:()=>[],patchOnProperties:N,patchMethod:()=>N,bindArguments:()=>[],patchThen:()=>N,patchMacroTask:()=>N,patchEventPrototype:()=>N,isIEOrEdge:()=>!1,getGlobalObjects:()=>{},ObjectDefineProperty:()=>N,ObjectGetOwnPropertyDescriptor:()=>{},ObjectCreate:()=>{},ArraySlice:()=>[],patchClass:()=>N,wrapWithCurrentZone:()=>N,filterProperties:()=>[],attachOriginToPatched:()=>N,_redefineProperty:()=>N,patchCallbacks:()=>N};let H={parent:null,zone:new s(null,null)},Z=null,P=0;function N(){}o("Zone","Zone"),e.Zone=s}("undefined"!=typeof window&&window||"undefined"!=typeof self&&self||global);const e=Object.getOwnPropertyDescriptor,t=Object.defineProperty,n=Object.getPrototypeOf,o=Object.create,r=Array.prototype.slice,a="addEventListener",i="removeEventListener",s=Zone.__symbol__(a),c=Zone.__symbol__(i),l="true",u="false",h=Zone.__symbol__("");function p(e,t){return Zone.current.wrap(e,t)}function f(e,t,n,o,r){return Zone.current.scheduleMacroTask(e,t,n,o,r)}const d=Zone.__symbol__,m="undefined"!=typeof window,g=m?window:void 0,T=m&&g||"object"==typeof self&&self||global,y=[null];function _(e,t){for(let n=e.length-1;n>=0;n--)"function"==typeof e[n]&&(e[n]=p(e[n],t+"_"+n));return e}function v(e){return!e||!1!==e.writable&&!("function"==typeof e.get&&void 0===e.set)}const k="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope,E=!("nw"in T)&&void 0!==T.process&&"[object process]"==={}.toString.call(T.process),b=!E&&!k&&!(!m||!g.HTMLElement),w=void 0!==T.process&&"[object process]"==={}.toString.call(T.process)&&!k&&!(!m||!g.HTMLElement),M={},L=function(e){if(!(e=e||T.event))return;let t=M[e.type];t||(t=M[e.type]=d("ON_PROPERTY"+e.type));const n=this||e.target||T,o=n[t];let r;if(b&&n===g&&"error"===e.type){const t=e;r=o&&o.call(this,t.message,t.filename,t.lineno,t.colno,t.error),!0===r&&e.preventDefault()}else r=o&&o.apply(this,arguments),null==r||r||e.preventDefault();return r};function C(n,o,r){let a=e(n,o);if(!a&&r&&e(r,o)&&(a={enumerable:!0,configurable:!0}),!a||!a.configurable)return;const i=d("on"+o+"patched");if(n.hasOwnProperty(i)&&n[i])return;delete a.writable,delete a.value;const s=a.get,c=a.set,l=o.substr(2);let u=M[l];u||(u=M[l]=d("ON_PROPERTY"+l)),a.set=function(e){let t=this;t||n!==T||(t=T),t&&(t[u]&&t.removeEventListener(l,L),c&&c.apply(t,y),"function"==typeof e?(t[u]=e,t.addEventListener(l,L,!1)):t[u]=null)},a.get=function(){let e=this;if(e||n!==T||(e=T),!e)return null;const t=e[u];if(t)return t;if(s){let t=s&&s.call(this);if(t)return a.set.call(this,t),"function"==typeof e.removeAttribute&&e.removeAttribute(o),t}return null},t(n,o,a),n[i]=!0}function S(e,t,n){if(t)for(let o=0;o<t.length;o++)C(e,"on"+t[o],n);else{const t=[];for(const n in e)"on"==n.substr(0,2)&&t.push(n);for(let o=0;o<t.length;o++)C(e,t[o],n)}}const O=d("originalInstance");function D(e){const n=T[e];if(!n)return;T[d(e)]=n,T[e]=function(){const t=_(arguments,e);switch(t.length){case 0:this[O]=new n;break;case 1:this[O]=new n(t[0]);break;case 2:this[O]=new n(t[0],t[1]);break;case 3:this[O]=new n(t[0],t[1],t[2]);break;case 4:this[O]=new n(t[0],t[1],t[2],t[3]);break;default:throw new Error("Arg list too long.")}},P(T[e],n);const o=new n(function(){});let r;for(r in o)"XMLHttpRequest"===e&&"responseBlob"===r||function(n){"function"==typeof o[n]?T[e].prototype[n]=function(){return this[O][n].apply(this[O],arguments)}:t(T[e].prototype,n,{set:function(t){"function"==typeof t?(this[O][n]=p(t,e+"."+n),P(this[O][n],t)):this[O][n]=t},get:function(){return this[O][n]}})}(r);for(r in n)"prototype"!==r&&n.hasOwnProperty(r)&&(T[e][r]=n[r])}function H(t,o,r){let a=t;for(;a&&!a.hasOwnProperty(o);)a=n(a);!a&&t[o]&&(a=t);const i=d(o);let s=null;if(a&&(!(s=a[i])||!a.hasOwnProperty(i))&&(s=a[i]=a[o],v(a&&e(a,o)))){const e=r(s,i,o);a[o]=function(){return e(this,arguments)},P(a[o],s)}return s}function Z(e,t,n){let o=null;function r(e){const t=e.data;return t.args[t.cbIdx]=function(){e.invoke.apply(this,arguments)},o.apply(t.target,t.args),e}o=H(e,t,e=>function(t,o){const a=n(t,o);return a.cbIdx>=0&&"function"==typeof o[a.cbIdx]?f(a.name,o[a.cbIdx],a,r):e.apply(t,o)})}function P(e,t){e[d("OriginalDelegate")]=t}let N=!1,z=!1;function I(){try{const e=g.navigator.userAgent;if(-1!==e.indexOf("MSIE ")||-1!==e.indexOf("Trident/"))return!0}catch(e){}return!1}function A(){if(N)return z;N=!0;try{const e=g.navigator.userAgent;-1===e.indexOf("MSIE ")&&-1===e.indexOf("Trident/")&&-1===e.indexOf("Edge/")||(z=!0)}catch(e){}return z}Zone.__load_patch("ZoneAwarePromise",(e,t,n)=>{const o=Object.getOwnPropertyDescriptor,r=Object.defineProperty,a=n.symbol,i=[],s=!0===e[a("DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION")],c=a("Promise"),l=a("then");n.onUnhandledError=e=>{if(n.showUncaughtError()){const t=e&&e.rejection;t?console.error("Unhandled Promise rejection:",t instanceof Error?t.message:t,"; Zone:",e.zone.name,"; Task:",e.task&&e.task.source,"; Value:",t,t instanceof Error?t.stack:void 0):console.error(e)}},n.microtaskDrainDone=()=>{for(;i.length;){const t=i.shift();try{t.zone.runGuarded(()=>{if(t.throwOriginal)throw t.rejection;throw t})}catch(e){h(e)}}};const u=a("unhandledPromiseRejectionHandler");function h(e){n.onUnhandledError(e);try{const n=t[u];"function"==typeof n&&n.call(this,e)}catch(o){}}function p(e){return e&&e.then}function f(e){return e}function d(e){return D.reject(e)}const m=a("state"),g=a("value"),T=a("finally"),y=a("parentPromiseValue"),_=a("parentPromiseState"),v=null,k=!0,E=!1;function b(e,t){return n=>{try{M(e,t,n)}catch(o){M(e,!1,o)}}}const w=a("currentTaskTrace");function M(e,o,a){const c=function(){let e=!1;return function(t){return function(){e||(e=!0,t.apply(null,arguments))}}}();if(e===a)throw new TypeError("Promise resolved with itself");if(e[m]===v){let h=null;try{"object"!=typeof a&&"function"!=typeof a||(h=a&&a.then)}catch(u){return c(()=>{M(e,!1,u)})(),e}if(o!==E&&a instanceof D&&a.hasOwnProperty(m)&&a.hasOwnProperty(g)&&a[m]!==v)C(a),M(e,a[m],a[g]);else if(o!==E&&"function"==typeof h)try{h.call(a,c(b(e,o)),c(b(e,!1)))}catch(u){c(()=>{M(e,!1,u)})()}else{e[m]=o;const c=e[g];if(e[g]=a,e[T]===T&&o===k&&(e[m]=e[_],e[g]=e[y]),o===E&&a instanceof Error){const e=t.currentTask&&t.currentTask.data&&t.currentTask.data.__creationTrace__;e&&r(a,w,{configurable:!0,enumerable:!1,writable:!0,value:e})}for(let t=0;t<c.length;)S(e,c[t++],c[t++],c[t++],c[t++]);if(0==c.length&&o==E){e[m]=0;let o=a;try{throw new Error("Uncaught (in promise): "+((l=a)&&l.toString===Object.prototype.toString?(l.constructor&&l.constructor.name||"")+": "+JSON.stringify(l):l?l.toString():Object.prototype.toString.call(l))+(a&&a.stack?"\n"+a.stack:""))}catch(u){o=u}s&&(o.throwOriginal=!0),o.rejection=a,o.promise=e,o.zone=t.current,o.task=t.currentTask,i.push(o),n.scheduleMicroTask()}}}var l;return e}const L=a("rejectionHandledHandler");function C(e){if(0===e[m]){try{const n=t[L];n&&"function"==typeof n&&n.call(this,{rejection:e[g],promise:e})}catch(n){}e[m]=E;for(let t=0;t<i.length;t++)e===i[t].promise&&i.splice(t,1)}}function S(e,t,n,o,r){C(e);const a=e[m],i=a?"function"==typeof o?o:f:"function"==typeof r?r:d;t.scheduleMicroTask("Promise.then",()=>{try{const o=e[g],r=!!n&&T===n[T];r&&(n[y]=o,n[_]=a);const s=t.run(i,void 0,r&&i!==d&&i!==f?[]:[o]);M(n,!0,s)}catch(o){M(n,!1,o)}},n)}const O=function(){};class D{static toString(){return"function ZoneAwarePromise() { [native code] }"}static resolve(e){return M(new this(null),k,e)}static reject(e){return M(new this(null),E,e)}static race(e){let t,n,o=new this((e,o)=>{t=e,n=o});function r(e){t(e)}function a(e){n(e)}for(let i of e)p(i)||(i=this.resolve(i)),i.then(r,a);return o}static all(e){return D.allWithCallback(e)}static allSettled(e){return(this&&this.prototype instanceof D?this:D).allWithCallback(e,{thenCallback:e=>({status:"fulfilled",value:e}),errorCallback:e=>({status:"rejected",reason:e})})}static allWithCallback(e,t){let n,o,r=new this((e,t)=>{n=e,o=t}),a=2,i=0;const s=[];for(let l of e){p(l)||(l=this.resolve(l));const e=i;try{l.then(o=>{s[e]=t?t.thenCallback(o):o,a--,0===a&&n(s)},r=>{t?(s[e]=t.errorCallback(r),a--,0===a&&n(s)):o(r)})}catch(c){o(c)}a++,i++}return a-=2,0===a&&n(s),r}constructor(e){const t=this;if(!(t instanceof D))throw new Error("Must be an instanceof Promise.");t[m]=v,t[g]=[];try{e&&e(b(t,k),b(t,E))}catch(n){M(t,!1,n)}}get[Symbol.toStringTag](){return"Promise"}get[Symbol.species](){return D}then(e,n){let o=this.constructor[Symbol.species];o&&"function"==typeof o||(o=this.constructor||D);const r=new o(O),a=t.current;return this[m]==v?this[g].push(a,r,e,n):S(this,a,r,e,n),r}catch(e){return this.then(null,e)}finally(e){let n=this.constructor[Symbol.species];n&&"function"==typeof n||(n=D);const o=new n(O);o[T]=T;const r=t.current;return this[m]==v?this[g].push(r,o,e,e):S(this,r,o,e,e),o}}D.resolve=D.resolve,D.reject=D.reject,D.race=D.race,D.all=D.all;const Z=e[c]=e.Promise;e.Promise=D;const P=a("thenPatched");function N(e){const t=e.prototype,n=o(t,"then");if(n&&(!1===n.writable||!n.configurable))return;const r=t.then;t[l]=r,e.prototype.then=function(e,t){return new D((e,t)=>{r.call(this,e,t)}).then(e,t)},e[P]=!0}return n.patchThen=N,Z&&(N(Z),H(e,"fetch",e=>{return t=e,function(e,n){let o=t.apply(e,n);if(o instanceof D)return o;let r=o.constructor;return r[P]||N(r),o};var t})),Promise[t.__symbol__("uncaughtPromiseErrors")]=i,D}),Zone.__load_patch("toString",e=>{const t=Function.prototype.toString,n=d("OriginalDelegate"),o=d("Promise"),r=d("Error"),a=function(){if("function"==typeof this){const a=this[n];if(a)return"function"==typeof a?t.call(a):Object.prototype.toString.call(a);if(this===Promise){const n=e[o];if(n)return t.call(n)}if(this===Error){const n=e[r];if(n)return t.call(n)}}return t.call(this)};a[n]=t,Function.prototype.toString=a;const i=Object.prototype.toString;Object.prototype.toString=function(){return"function"==typeof Promise&&this instanceof Promise?"[object Promise]":i.call(this)}});let j=!1;if("undefined"!=typeof window)try{const e=Object.defineProperty({},"passive",{get:function(){j=!0}});window.addEventListener("test",e,e),window.removeEventListener("test",e,e)}catch(he){j=!1}const R={useG:!0},x={},F={},V=new RegExp("^"+h+"(\\w+)(true|false)$"),U=d("propagationStopped");function q(e,t){const n=(t?t(e):e)+u,o=(t?t(e):e)+l,r=h+n,a=h+o;x[e]={},x[e].false=r,x[e].true=a}function B(e,t,o){const r=o&&o.add||a,s=o&&o.rm||i,c=o&&o.listeners||"eventListeners",p=o&&o.rmAll||"removeAllListeners",f=d(r),m="."+r+":",g=function(e,t,n){if(e.isRemoved)return;const o=e.callback;"object"==typeof o&&o.handleEvent&&(e.callback=e=>o.handleEvent(e),e.originalDelegate=o),e.invoke(e,t,[n]);const r=e.options;r&&"object"==typeof r&&r.once&&t[s].call(t,n.type,e.originalDelegate?e.originalDelegate:e.callback,r)},T=function(t){if(!(t=t||e.event))return;const n=this||t.target||e,o=n[x[t.type].false];if(o)if(1===o.length)g(o[0],n,t);else{const e=o.slice();for(let o=0;o<e.length&&(!t||!0!==t[U]);o++)g(e[o],n,t)}},y=function(t){if(!(t=t||e.event))return;const n=this||t.target||e,o=n[x[t.type].true];if(o)if(1===o.length)g(o[0],n,t);else{const e=o.slice();for(let o=0;o<e.length&&(!t||!0!==t[U]);o++)g(e[o],n,t)}};function _(t,o){if(!t)return!1;let a=!0;o&&void 0!==o.useG&&(a=o.useG);const i=o&&o.vh;let g=!0;o&&void 0!==o.chkDup&&(g=o.chkDup);let _=!1;o&&void 0!==o.rt&&(_=o.rt);let v=t;for(;v&&!v.hasOwnProperty(r);)v=n(v);if(!v&&t[r]&&(v=t),!v)return!1;if(v[f])return!1;const k=o&&o.eventNameToString,b={},w=v[f]=v[r],M=v[d(s)]=v[s],L=v[d(c)]=v[c],C=v[d(p)]=v[p];let S;function O(e,t){return!j&&"object"==typeof e&&e?!!e.capture:j&&t?"boolean"==typeof e?{capture:e,passive:!0}:e?"object"==typeof e&&!1!==e.passive?Object.assign(Object.assign({},e),{passive:!0}):e:{passive:!0}:e}o&&o.prepend&&(S=v[d(o.prepend)]=v[o.prepend]);const D=a?function(e){if(!b.isExisting)return w.call(b.target,b.eventName,b.capture?y:T,b.options)}:function(e){return w.call(b.target,b.eventName,e.invoke,b.options)},H=a?function(e){if(!e.isRemoved){const t=x[e.eventName];let n;t&&(n=t[e.capture?l:u]);const o=n&&e.target[n];if(o)for(let r=0;r<o.length;r++)if(o[r]===e){o.splice(r,1),e.isRemoved=!0,0===o.length&&(e.allRemoved=!0,e.target[n]=null);break}}if(e.allRemoved)return M.call(e.target,e.eventName,e.capture?y:T,e.options)}:function(e){return M.call(e.target,e.eventName,e.invoke,e.options)},Z=o&&o.diff?o.diff:function(e,t){const n=typeof t;return"function"===n&&e.callback===t||"object"===n&&e.originalDelegate===t},N=Zone[d("UNPATCHED_EVENTS")],z=e[d("PASSIVE_EVENTS")],I=function(t,n,r,s,c=!1,h=!1){return function(){const p=this||e;let f=arguments[0];o&&o.transferEventName&&(f=o.transferEventName(f));let d=arguments[1];if(!d)return t.apply(this,arguments);if(E&&"uncaughtException"===f)return t.apply(this,arguments);let m=!1;if("function"!=typeof d){if(!d.handleEvent)return t.apply(this,arguments);m=!0}if(i&&!i(t,d,p,arguments))return;const T=j&&!!z&&-1!==z.indexOf(f),y=O(arguments[2],T);if(N)for(let e=0;e<N.length;e++)if(f===N[e])return T?t.call(p,f,d,y):t.apply(this,arguments);const _=!!y&&("boolean"==typeof y||y.capture),v=!(!y||"object"!=typeof y)&&y.once,w=Zone.current;let M=x[f];M||(q(f,k),M=x[f]);const L=M[_?l:u];let C,S=p[L],D=!1;if(S){if(D=!0,g)for(let e=0;e<S.length;e++)if(Z(S[e],d))return}else S=p[L]=[];const H=p.constructor.name,P=F[H];P&&(C=P[f]),C||(C=H+n+(k?k(f):f)),b.options=y,v&&(b.options.once=!1),b.target=p,b.capture=_,b.eventName=f,b.isExisting=D;const I=a?R:void 0;I&&(I.taskData=b);const A=w.scheduleEventTask(C,d,I,r,s);return b.target=null,I&&(I.taskData=null),v&&(y.once=!0),(j||"boolean"!=typeof A.options)&&(A.options=y),A.target=p,A.capture=_,A.eventName=f,m&&(A.originalDelegate=d),h?S.unshift(A):S.push(A),c?p:void 0}};return v[r]=I(w,m,D,H,_),S&&(v.prependListener=I(S,".prependListener:",function(e){return S.call(b.target,b.eventName,e.invoke,b.options)},H,_,!0)),v[s]=function(){const t=this||e;let n=arguments[0];o&&o.transferEventName&&(n=o.transferEventName(n));const r=arguments[2],a=!!r&&("boolean"==typeof r||r.capture),s=arguments[1];if(!s)return M.apply(this,arguments);if(i&&!i(M,s,t,arguments))return;const c=x[n];let p;c&&(p=c[a?l:u]);const f=p&&t[p];if(f)for(let e=0;e<f.length;e++){const o=f[e];if(Z(o,s))return f.splice(e,1),o.isRemoved=!0,0===f.length&&(o.allRemoved=!0,t[p]=null,"string"==typeof n)&&(t[h+"ON_PROPERTY"+n]=null),o.zone.cancelTask(o),_?t:void 0}return M.apply(this,arguments)},v[c]=function(){const t=this||e;let n=arguments[0];o&&o.transferEventName&&(n=o.transferEventName(n));const r=[],a=G(t,k?k(n):n);for(let e=0;e<a.length;e++){const t=a[e];r.push(t.originalDelegate?t.originalDelegate:t.callback)}return r},v[p]=function(){const t=this||e;let n=arguments[0];if(n){o&&o.transferEventName&&(n=o.transferEventName(n));const e=x[n];if(e){const o=t[e.false],r=t[e.true];if(o){const e=o.slice();for(let t=0;t<e.length;t++){const o=e[t];this[s].call(this,n,o.originalDelegate?o.originalDelegate:o.callback,o.options)}}if(r){const e=r.slice();for(let t=0;t<e.length;t++){const o=e[t];this[s].call(this,n,o.originalDelegate?o.originalDelegate:o.callback,o.options)}}}}else{const e=Object.keys(t);for(let t=0;t<e.length;t++){const n=V.exec(e[t]);let o=n&&n[1];o&&"removeListener"!==o&&this[p].call(this,o)}this[p].call(this,"removeListener")}if(_)return this},P(v[r],w),P(v[s],M),C&&P(v[p],C),L&&P(v[c],L),!0}let v=[];for(let n=0;n<t.length;n++)v[n]=_(t[n],o);return v}function G(e,t){if(!t){const n=[];for(let o in e){const r=V.exec(o);let a=r&&r[1];if(a&&(!t||a===t)){const t=e[o];if(t)for(let e=0;e<t.length;e++)n.push(t[e])}}return n}let n=x[t];n||(q(t),n=x[t]);const o=e[n.false],r=e[n.true];return o?r?o.concat(r):o.slice():r?r.slice():[]}function W(e,t){const n=e.Event;n&&n.prototype&&t.patchMethod(n.prototype,"stopImmediatePropagation",e=>function(t,n){t[U]=!0,e&&e.apply(t,n)})}function $(e,t,n,o,r){const a=Zone.__symbol__(o);if(t[a])return;const i=t[a]=t[o];t[o]=function(a,s,c){return s&&s.prototype&&r.forEach(function(t){const r=`${n}.${o}::`+t,a=s.prototype;if(a.hasOwnProperty(t)){const n=e.ObjectGetOwnPropertyDescriptor(a,t);n&&n.value?(n.value=e.wrapWithCurrentZone(n.value,r),e._redefineProperty(s.prototype,t,n)):a[t]&&(a[t]=e.wrapWithCurrentZone(a[t],r))}else a[t]&&(a[t]=e.wrapWithCurrentZone(a[t],r))}),i.call(t,a,s,c)},e.attachOriginToPatched(t[o],i)}const X=["absolutedeviceorientation","afterinput","afterprint","appinstalled","beforeinstallprompt","beforeprint","beforeunload","devicelight","devicemotion","deviceorientation","deviceorientationabsolute","deviceproximity","hashchange","languagechange","message","mozbeforepaint","offline","online","paint","pageshow","pagehide","popstate","rejectionhandled","storage","unhandledrejection","unload","userproximity","vrdisplayconnected","vrdisplaydisconnected","vrdisplaypresentchange"],Y=["encrypted","waitingforkey","msneedkey","mozinterruptbegin","mozinterruptend"],K=["load"],J=["blur","error","focus","load","resize","scroll","messageerror"],Q=["bounce","finish","start"],ee=["loadstart","progress","abort","error","load","progress","timeout","loadend","readystatechange"],te=["upgradeneeded","complete","abort","success","error","blocked","versionchange","close"],ne=["close","error","open","message"],oe=["error","message"],re=["abort","animationcancel","animationend","animationiteration","auxclick","beforeinput","blur","cancel","canplay","canplaythrough","change","compositionstart","compositionupdate","compositionend","cuechange","click","close","contextmenu","curechange","dblclick","drag","dragend","dragenter","dragexit","dragleave","dragover","drop","durationchange","emptied","ended","error","focus","focusin","focusout","gotpointercapture","input","invalid","keydown","keypress","keyup","load","loadstart","loadeddata","loadedmetadata","lostpointercapture","mousedown","mouseenter","mouseleave","mousemove","mouseout","mouseover","mouseup","mousewheel","orientationchange","pause","play","playing","pointercancel","pointerdown","pointerenter","pointerleave","pointerlockchange","mozpointerlockchange","webkitpointerlockerchange","pointerlockerror","mozpointerlockerror","webkitpointerlockerror","pointermove","pointout","pointerover","pointerup","progress","ratechange","reset","resize","scroll","seeked","seeking","select","selectionchange","selectstart","show","sort","stalled","submit","suspend","timeupdate","volumechange","touchcancel","touchmove","touchstart","touchend","transitioncancel","transitionend","waiting","wheel"].concat(["webglcontextrestored","webglcontextlost","webglcontextcreationerror"],["autocomplete","autocompleteerror"],["toggle"],["afterscriptexecute","beforescriptexecute","DOMContentLoaded","freeze","fullscreenchange","mozfullscreenchange","webkitfullscreenchange","msfullscreenchange","fullscreenerror","mozfullscreenerror","webkitfullscreenerror","msfullscreenerror","readystatechange","visibilitychange","resume"],X,["beforecopy","beforecut","beforepaste","copy","cut","paste","dragstart","loadend","animationstart","search","transitionrun","transitionstart","webkitanimationend","webkitanimationiteration","webkitanimationstart","webkittransitionend"],["activate","afterupdate","ariarequest","beforeactivate","beforedeactivate","beforeeditfocus","beforeupdate","cellchange","controlselect","dataavailable","datasetchanged","datasetcomplete","errorupdate","filterchange","layoutcomplete","losecapture","move","moveend","movestart","propertychange","resizeend","resizestart","rowenter","rowexit","rowsdelete","rowsinserted","command","compassneedscalibration","deactivate","help","mscontentzoom","msmanipulationstatechanged","msgesturechange","msgesturedoubletap","msgestureend","msgesturehold","msgesturestart","msgesturetap","msgotpointercapture","msinertiastart","mslostpointercapture","mspointercancel","mspointerdown","mspointerenter","mspointerhover","mspointerleave","mspointermove","mspointerout","mspointerover","mspointerup","pointerout","mssitemodejumplistitemremoved","msthumbnailclick","stop","storagecommit"]);function ae(e,t,n){if(!n||0===n.length)return t;const o=n.filter(t=>t.target===e);if(!o||0===o.length)return t;const r=o[0].ignoreProperties;return t.filter(e=>-1===r.indexOf(e))}function ie(e,t,n,o){e&&S(e,ae(e,t,n),o)}function se(e,t){if(E&&!w)return;if(Zone[e.symbol("patchEvents")])return;const o="undefined"!=typeof WebSocket,r=t.__Zone_ignore_on_properties;if(b){const e=window,t=I()?[{target:e,ignoreProperties:["error"]}]:[];ie(e,re.concat(["messageerror"]),r?r.concat(t):r,n(e)),ie(Document.prototype,re,r),void 0!==e.SVGElement&&ie(e.SVGElement.prototype,re,r),ie(Element.prototype,re,r),ie(HTMLElement.prototype,re,r),ie(HTMLMediaElement.prototype,Y,r),ie(HTMLFrameSetElement.prototype,X.concat(J),r),ie(HTMLBodyElement.prototype,X.concat(J),r),ie(HTMLFrameElement.prototype,K,r),ie(HTMLIFrameElement.prototype,K,r);const o=e.HTMLMarqueeElement;o&&ie(o.prototype,Q,r);const a=e.Worker;a&&ie(a.prototype,oe,r)}const a=t.XMLHttpRequest;a&&ie(a.prototype,ee,r);const i=t.XMLHttpRequestEventTarget;i&&ie(i&&i.prototype,ee,r),"undefined"!=typeof IDBIndex&&(ie(IDBIndex.prototype,te,r),ie(IDBRequest.prototype,te,r),ie(IDBOpenDBRequest.prototype,te,r),ie(IDBDatabase.prototype,te,r),ie(IDBTransaction.prototype,te,r),ie(IDBCursor.prototype,te,r)),o&&ie(WebSocket.prototype,ne,r)}Zone.__load_patch("util",(n,s,c)=>{c.patchOnProperties=S,c.patchMethod=H,c.bindArguments=_,c.patchMacroTask=Z;const f=s.__symbol__("BLACK_LISTED_EVENTS"),d=s.__symbol__("UNPATCHED_EVENTS");n[d]&&(n[f]=n[d]),n[f]&&(s[f]=s[d]=n[f]),c.patchEventPrototype=W,c.patchEventTarget=B,c.isIEOrEdge=A,c.ObjectDefineProperty=t,c.ObjectGetOwnPropertyDescriptor=e,c.ObjectCreate=o,c.ArraySlice=r,c.patchClass=D,c.wrapWithCurrentZone=p,c.filterProperties=ae,c.attachOriginToPatched=P,c._redefineProperty=Object.defineProperty,c.patchCallbacks=$,c.getGlobalObjects=()=>({globalSources:F,zoneSymbolEventNames:x,eventNames:re,isBrowser:b,isMix:w,isNode:E,TRUE_STR:l,FALSE_STR:u,ZONE_SYMBOL_PREFIX:h,ADD_EVENT_LISTENER_STR:a,REMOVE_EVENT_LISTENER_STR:i})});const ce=d("zoneTask");function le(e,t,n,o){let r=null,a=null;n+=o;const i={};function s(t){const n=t.data;return n.args[0]=function(){return t.invoke.apply(this,arguments)},n.handleId=r.apply(e,n.args),t}function c(t){return a.call(e,t.data.handleId)}r=H(e,t+=o,n=>function(r,a){if("function"==typeof a[0]){const e={isPeriodic:"Interval"===o,delay:"Timeout"===o||"Interval"===o?a[1]||0:void 0,args:a},n=a[0];a[0]=function(){try{return n.apply(this,arguments)}finally{e.isPeriodic||("number"==typeof e.handleId?delete i[e.handleId]:e.handleId&&(e.handleId[ce]=null))}};const r=f(t,a[0],e,s,c);if(!r)return r;const l=r.data.handleId;return"number"==typeof l?i[l]=r:l&&(l[ce]=r),l&&l.ref&&l.unref&&"function"==typeof l.ref&&"function"==typeof l.unref&&(r.ref=l.ref.bind(l),r.unref=l.unref.bind(l)),"number"==typeof l||l?l:r}return n.apply(e,a)}),a=H(e,n,t=>function(n,o){const r=o[0];let a;"number"==typeof r?a=i[r]:(a=r&&r[ce],a||(a=r)),a&&"string"==typeof a.type?"notScheduled"!==a.state&&(a.cancelFn&&a.data.isPeriodic||0===a.runCount)&&("number"==typeof r?delete i[r]:r&&(r[ce]=null),a.zone.cancelTask(a)):t.apply(e,o)})}function ue(e,t){if(Zone[t.symbol("patchEventTarget")])return;const{eventNames:n,zoneSymbolEventNames:o,TRUE_STR:r,FALSE_STR:a,ZONE_SYMBOL_PREFIX:i}=t.getGlobalObjects();for(let c=0;c<n.length;c++){const e=n[c],t=i+(e+a),s=i+(e+r);o[e]={},o[e][a]=t,o[e][r]=s}const s=e.EventTarget;return s&&s.prototype?(t.patchEventTarget(e,[s&&s.prototype]),!0):void 0}Zone.__load_patch("legacy",e=>{const t=e[Zone.__symbol__("legacyPatch")];t&&t()}),Zone.__load_patch("queueMicrotask",(e,t,n)=>{n.patchMethod(e,"queueMicrotask",e=>function(e,n){t.current.scheduleMicroTask("queueMicrotask",n[0])})}),Zone.__load_patch("timers",e=>{const t="set",n="clear";le(e,t,n,"Timeout"),le(e,t,n,"Interval"),le(e,t,n,"Immediate")}),Zone.__load_patch("requestAnimationFrame",e=>{le(e,"request","cancel","AnimationFrame"),le(e,"mozRequest","mozCancel","AnimationFrame"),le(e,"webkitRequest","webkitCancel","AnimationFrame")}),Zone.__load_patch("blocking",(e,t)=>{const n=["alert","prompt","confirm"];for(let o=0;o<n.length;o++)H(e,n[o],(n,o,r)=>function(o,a){return t.current.run(n,e,a,r)})}),Zone.__load_patch("EventTarget",(e,t,n)=>{!function(e,t){t.patchEventPrototype(e,t)}(e,n),ue(e,n);const o=e.XMLHttpRequestEventTarget;o&&o.prototype&&n.patchEventTarget(e,[o.prototype])}),Zone.__load_patch("MutationObserver",(e,t,n)=>{D("MutationObserver"),D("WebKitMutationObserver")}),Zone.__load_patch("IntersectionObserver",(e,t,n)=>{D("IntersectionObserver")}),Zone.__load_patch("FileReader",(e,t,n)=>{D("FileReader")}),Zone.__load_patch("on_property",(e,t,n)=>{se(n,e)}),Zone.__load_patch("customElements",(e,t,n)=>{!function(e,t){const{isBrowser:n,isMix:o}=t.getGlobalObjects();(n||o)&&e.customElements&&"customElements"in e&&t.patchCallbacks(t,e.customElements,"customElements","define",["connectedCallback","disconnectedCallback","adoptedCallback","attributeChangedCallback"])}(e,n)}),Zone.__load_patch("XHR",(e,t)=>{!function(e){const u=e.XMLHttpRequest;if(!u)return;const h=u.prototype;let p=h[s],m=h[c];if(!p){const t=e.XMLHttpRequestEventTarget;if(t){const e=t.prototype;p=e[s],m=e[c]}}const g="readystatechange",T="scheduled";function y(e){const o=e.data,i=o.target;i[a]=!1,i[l]=!1;const u=i[r];p||(p=i[s],m=i[c]),u&&m.call(i,g,u);const h=i[r]=()=>{if(i.readyState===i.DONE)if(!o.aborted&&i[a]&&e.state===T){const n=i[t.__symbol__("loadfalse")];if(0!==i.status&&n&&n.length>0){const r=e.invoke;e.invoke=function(){const n=i[t.__symbol__("loadfalse")];for(let t=0;t<n.length;t++)n[t]===e&&n.splice(t,1);o.aborted||e.state!==T||r.call(e)},n.push(e)}else e.invoke()}else o.aborted||!1!==i[a]||(i[l]=!0)};return p.call(i,g,h),i[n]||(i[n]=e),w.apply(i,o.args),i[a]=!0,e}function _(){}function v(e){const t=e.data;return t.aborted=!0,M.apply(t.target,t.args)}const k=H(h,"open",()=>function(e,t){return e[o]=0==t[2],e[i]=t[1],k.apply(e,t)}),E=d("fetchTaskAborting"),b=d("fetchTaskScheduling"),w=H(h,"send",()=>function(e,n){if(!0===t.current[b])return w.apply(e,n);if(e[o])return w.apply(e,n);{const t={target:e,url:e[i],isPeriodic:!1,args:n,aborted:!1},o=f("XMLHttpRequest.send",_,t,y,v);e&&!0===e[l]&&!t.aborted&&o.state===T&&o.invoke()}}),M=H(h,"abort",()=>function(e,o){const r=e[n];if(r&&"string"==typeof r.type){if(null==r.cancelFn||r.data&&r.data.aborted)return;r.zone.cancelTask(r)}else if(!0===t.current[E])return M.apply(e,o)})}(e);const n=d("xhrTask"),o=d("xhrSync"),r=d("xhrListener"),a=d("xhrScheduled"),i=d("xhrURL"),l=d("xhrErrorBeforeScheduled")}),Zone.__load_patch("geolocation",t=>{t.navigator&&t.navigator.geolocation&&function(t,n){const o=t.constructor.name;for(let r=0;r<n.length;r++){const a=n[r],i=t[a];if(i){if(!v(e(t,a)))continue;t[a]=(e=>{const t=function(){return e.apply(this,_(arguments,o+"."+a))};return P(t,e),t})(i)}}}(t.navigator.geolocation,["getCurrentPosition","watchPosition"])}),Zone.__load_patch("PromiseRejectionEvent",(e,t)=>{function n(t){return function(n){G(e,t).forEach(o=>{const r=e.PromiseRejectionEvent;if(r){const e=new r(t,{promise:n.promise,reason:n.rejection});o.invoke(e)}})}}e.PromiseRejectionEvent&&(t[d("unhandledPromiseRejectionHandler")]=n("unhandledrejection"),t[d("rejectionHandledHandler")]=n("rejectionhandled"))})},465:(e,t,n)=>{"use strict";n(167),n(22)}},e=>{"use strict";e(e.s=465)}]);(self.webpackChunkpoc_ng_elements=self.webpackChunkpoc_ng_elements||[]).push([[179],{190:(t,e,n)=>{"use strict";function r(t){return"function"==typeof t}let s=!1;const i={Promise:void 0,set useDeprecatedSynchronousErrorHandling(t){if(t){const t=new Error;console.warn("DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n"+t.stack)}else s&&console.log("RxJS: Back to a better error behavior. Thank you. <3");s=t},get useDeprecatedSynchronousErrorHandling(){return s}};function o(t){setTimeout(()=>{throw t},0)}const a={closed:!0,next(t){},error(t){if(i.useDeprecatedSynchronousErrorHandling)throw t;o(t)},complete(){}},l=(()=>Array.isArray||(t=>t&&"number"==typeof t.length))();function u(t){return null!==t&&"object"==typeof t}const c=(()=>{function t(t){return Error.call(this),this.message=t?`${t.length} errors occurred during unsubscription:\n${t.map((t,e)=>`${e+1}) ${t.toString()}`).join("\n  ")}`:"",this.name="UnsubscriptionError",this.errors=t,this}return t.prototype=Object.create(Error.prototype),t})();let h=(()=>{class t{constructor(t){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,t&&(this._ctorUnsubscribe=!0,this._unsubscribe=t)}unsubscribe(){let e;if(this.closed)return;let{_parentOrParents:n,_ctorUnsubscribe:s,_unsubscribe:i,_subscriptions:o}=this;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,n instanceof t)n.remove(this);else if(null!==n)for(let t=0;t<n.length;++t)n[t].remove(this);if(r(i)){s&&(this._unsubscribe=void 0);try{i.call(this)}catch(a){e=a instanceof c?d(a.errors):[a]}}if(l(o)){let t=-1,n=o.length;for(;++t<n;){const n=o[t];if(u(n))try{n.unsubscribe()}catch(a){e=e||[],a instanceof c?e=e.concat(d(a.errors)):e.push(a)}}}if(e)throw new c(e)}add(e){let n=e;if(!e)return t.EMPTY;switch(typeof e){case"function":n=new t(e);case"object":if(n===this||n.closed||"function"!=typeof n.unsubscribe)return n;if(this.closed)return n.unsubscribe(),n;if(!(n instanceof t)){const e=n;n=new t,n._subscriptions=[e]}break;default:throw new Error("unrecognized teardown "+e+" added to Subscription.")}let{_parentOrParents:r}=n;if(null===r)n._parentOrParents=this;else if(r instanceof t){if(r===this)return n;n._parentOrParents=[r,this]}else{if(-1!==r.indexOf(this))return n;r.push(this)}const s=this._subscriptions;return null===s?this._subscriptions=[n]:s.push(n),n}remove(t){const e=this._subscriptions;if(e){const n=e.indexOf(t);-1!==n&&e.splice(n,1)}}}return t.EMPTY=function(t){return t.closed=!0,t}(new t),t})();function d(t){return t.reduce((t,e)=>t.concat(e instanceof c?e.errors:e),[])}const p=(()=>"function"==typeof Symbol?Symbol("rxSubscriber"):"@@rxSubscriber_"+Math.random())();class f extends h{constructor(t,e,n){switch(super(),this.syncErrorValue=null,this.syncErrorThrown=!1,this.syncErrorThrowable=!1,this.isStopped=!1,arguments.length){case 0:this.destination=a;break;case 1:if(!t){this.destination=a;break}if("object"==typeof t){t instanceof f?(this.syncErrorThrowable=t.syncErrorThrowable,this.destination=t,t.add(this)):(this.syncErrorThrowable=!0,this.destination=new g(this,t));break}default:this.syncErrorThrowable=!0,this.destination=new g(this,t,e,n)}}[p](){return this}static create(t,e,n){const r=new f(t,e,n);return r.syncErrorThrowable=!1,r}next(t){this.isStopped||this._next(t)}error(t){this.isStopped||(this.isStopped=!0,this._error(t))}complete(){this.isStopped||(this.isStopped=!0,this._complete())}unsubscribe(){this.closed||(this.isStopped=!0,super.unsubscribe())}_next(t){this.destination.next(t)}_error(t){this.destination.error(t),this.unsubscribe()}_complete(){this.destination.complete(),this.unsubscribe()}_unsubscribeAndRecycle(){const{_parentOrParents:t}=this;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=t,this}}class g extends f{constructor(t,e,n,s){let i;super(),this._parentSubscriber=t;let o=this;r(e)?i=e:e&&(i=e.next,n=e.error,s=e.complete,e!==a&&(o=Object.create(e),r(o.unsubscribe)&&this.add(o.unsubscribe.bind(o)),o.unsubscribe=this.unsubscribe.bind(this))),this._context=o,this._next=i,this._error=n,this._complete=s}next(t){if(!this.isStopped&&this._next){const{_parentSubscriber:e}=this;i.useDeprecatedSynchronousErrorHandling&&e.syncErrorThrowable?this.__tryOrSetError(e,this._next,t)&&this.unsubscribe():this.__tryOrUnsub(this._next,t)}}error(t){if(!this.isStopped){const{_parentSubscriber:e}=this,{useDeprecatedSynchronousErrorHandling:n}=i;if(this._error)n&&e.syncErrorThrowable?(this.__tryOrSetError(e,this._error,t),this.unsubscribe()):(this.__tryOrUnsub(this._error,t),this.unsubscribe());else if(e.syncErrorThrowable)n?(e.syncErrorValue=t,e.syncErrorThrown=!0):o(t),this.unsubscribe();else{if(this.unsubscribe(),n)throw t;o(t)}}}complete(){if(!this.isStopped){const{_parentSubscriber:t}=this;if(this._complete){const e=()=>this._complete.call(this._context);i.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?(this.__tryOrSetError(t,e),this.unsubscribe()):(this.__tryOrUnsub(e),this.unsubscribe())}else this.unsubscribe()}}__tryOrUnsub(t,e){try{t.call(this._context,e)}catch(n){if(this.unsubscribe(),i.useDeprecatedSynchronousErrorHandling)throw n;o(n)}}__tryOrSetError(t,e,n){if(!i.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{e.call(this._context,n)}catch(r){return i.useDeprecatedSynchronousErrorHandling?(t.syncErrorValue=r,t.syncErrorThrown=!0,!0):(o(r),!0)}return!1}_unsubscribe(){const{_parentSubscriber:t}=this;this._context=null,this._parentSubscriber=null,t.unsubscribe()}}const m=(()=>"function"==typeof Symbol&&Symbol.observable||"@@observable")();function y(t){return t}let v=(()=>{class t{constructor(t){this._isScalar=!1,t&&(this._subscribe=t)}lift(e){const n=new t;return n.source=this,n.operator=e,n}subscribe(t,e,n){const{operator:r}=this,s=function(t,e,n){if(t){if(t instanceof f)return t;if(t[p])return t[p]()}return t||e||n?new f(t,e,n):new f(a)}(t,e,n);if(s.add(r?r.call(s,this.source):this.source||i.useDeprecatedSynchronousErrorHandling&&!s.syncErrorThrowable?this._subscribe(s):this._trySubscribe(s)),i.useDeprecatedSynchronousErrorHandling&&s.syncErrorThrowable&&(s.syncErrorThrowable=!1,s.syncErrorThrown))throw s.syncErrorValue;return s}_trySubscribe(t){try{return this._subscribe(t)}catch(e){i.useDeprecatedSynchronousErrorHandling&&(t.syncErrorThrown=!0,t.syncErrorValue=e),function(t){for(;t;){const{closed:e,destination:n,isStopped:r}=t;if(e||r)return!1;t=n&&n instanceof f?n:null}return!0}(t)?t.error(e):console.warn(e)}}forEach(t,e){return new(e=b(e))((e,n)=>{let r;r=this.subscribe(e=>{try{t(e)}catch(s){n(s),r&&r.unsubscribe()}},n,e)})}_subscribe(t){const{source:e}=this;return e&&e.subscribe(t)}[m](){return this}pipe(...t){return 0===t.length?this:(0===(e=t).length?y:1===e.length?e[0]:function(t){return e.reduce((t,e)=>e(t),t)})(this);var e}toPromise(t){return new(t=b(t))((t,e)=>{let n;this.subscribe(t=>n=t,t=>e(t),()=>t(n))})}}return t.create=e=>new t(e),t})();function b(t){if(t||(t=i.Promise||Promise),!t)throw new Error("no Promise impl found");return t}const w=(()=>{function t(){return Error.call(this),this.message="object unsubscribed",this.name="ObjectUnsubscribedError",this}return t.prototype=Object.create(Error.prototype),t})();class _ extends h{constructor(t,e){super(),this.subject=t,this.subscriber=e,this.closed=!1}unsubscribe(){if(this.closed)return;this.closed=!0;const t=this.subject,e=t.observers;if(this.subject=null,!e||0===e.length||t.isStopped||t.closed)return;const n=e.indexOf(this.subscriber);-1!==n&&e.splice(n,1)}}class C extends f{constructor(t){super(t),this.destination=t}}let D=(()=>{class t extends v{constructor(){super(),this.observers=[],this.closed=!1,this.isStopped=!1,this.hasError=!1,this.thrownError=null}[p](){return new C(this)}lift(t){const e=new E(this,this);return e.operator=t,e}next(t){if(this.closed)throw new w;if(!this.isStopped){const{observers:e}=this,n=e.length,r=e.slice();for(let s=0;s<n;s++)r[s].next(t)}}error(t){if(this.closed)throw new w;this.hasError=!0,this.thrownError=t,this.isStopped=!0;const{observers:e}=this,n=e.length,r=e.slice();for(let s=0;s<n;s++)r[s].error(t);this.observers.length=0}complete(){if(this.closed)throw new w;this.isStopped=!0;const{observers:t}=this,e=t.length,n=t.slice();for(let r=0;r<e;r++)n[r].complete();this.observers.length=0}unsubscribe(){this.isStopped=!0,this.closed=!0,this.observers=null}_trySubscribe(t){if(this.closed)throw new w;return super._trySubscribe(t)}_subscribe(t){if(this.closed)throw new w;return this.hasError?(t.error(this.thrownError),h.EMPTY):this.isStopped?(t.complete(),h.EMPTY):(this.observers.push(t),new _(this,t))}asObservable(){const t=new v;return t.source=this,t}}return t.create=(t,e)=>new E(t,e),t})();class E extends D{constructor(t,e){super(),this.destination=t,this.source=e}next(t){const{destination:e}=this;e&&e.next&&e.next(t)}error(t){const{destination:e}=this;e&&e.error&&this.destination.error(t)}complete(){const{destination:t}=this;t&&t.complete&&this.destination.complete()}_subscribe(t){const{source:e}=this;return e?this.source.subscribe(t):h.EMPTY}}function A(t){return t&&"function"==typeof t.schedule}function S(t,e){return function(n){if("function"!=typeof t)throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");return n.lift(new x(t,e))}}class x{constructor(t,e){this.project=t,this.thisArg=e}call(t,e){return e.subscribe(new k(t,this.project,this.thisArg))}}class k extends f{constructor(t,e,n){super(t),this.project=e,this.count=0,this.thisArg=n||this}_next(t){let e;try{e=this.project.call(this.thisArg,t,this.count++)}catch(n){return void this.destination.error(n)}this.destination.next(e)}}const T=t=>e=>{for(let n=0,r=t.length;n<r&&!e.closed;n++)e.next(t[n]);e.complete()};function F(){return"function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator"}const O=F(),P=t=>t&&"number"==typeof t.length&&"function"!=typeof t;function I(t){return!!t&&"function"!=typeof t.subscribe&&"function"==typeof t.then}const R=t=>{if(t&&"function"==typeof t[m])return n=t,t=>{const e=n[m]();if("function"!=typeof e.subscribe)throw new TypeError("Provided object does not correctly implement Symbol.observable");return e.subscribe(t)};if(P(t))return T(t);if(I(t))return(t=>e=>(t.then(t=>{e.closed||(e.next(t),e.complete())},t=>e.error(t)).then(null,o),e))(t);if(t&&"function"==typeof t[O])return e=t,t=>{const n=e[O]();for(;;){let e;try{e=n.next()}catch(r){return t.error(r),t}if(e.done){t.complete();break}if(t.next(e.value),t.closed)break}return"function"==typeof n.return&&t.add(()=>{n.return&&n.return()}),t};{const e=u(t)?"an invalid object":`'${t}'`;throw new TypeError(`You provided ${e} where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.`)}var e,n};function M(t,e){return new v(n=>{const r=new h;let s=0;return r.add(e.schedule(function(){s!==t.length?(n.next(t[s++]),n.closed||r.add(this.schedule())):n.complete()})),r})}function j(t,e){return e?function(t,e){if(null!=t){if(function(t){return t&&"function"==typeof t[m]}(t))return function(t,e){return new v(n=>{const r=new h;return r.add(e.schedule(()=>{const s=t[m]();r.add(s.subscribe({next(t){r.add(e.schedule(()=>n.next(t)))},error(t){r.add(e.schedule(()=>n.error(t)))},complete(){r.add(e.schedule(()=>n.complete()))}}))})),r})}(t,e);if(I(t))return function(t,e){return new v(n=>{const r=new h;return r.add(e.schedule(()=>t.then(t=>{r.add(e.schedule(()=>{n.next(t),r.add(e.schedule(()=>n.complete()))}))},t=>{r.add(e.schedule(()=>n.error(t)))}))),r})}(t,e);if(P(t))return M(t,e);if(function(t){return t&&"function"==typeof t[O]}(t)||"string"==typeof t)return function(t,e){if(!t)throw new Error("Iterable cannot be null");return new v(n=>{const r=new h;let s;return r.add(()=>{s&&"function"==typeof s.return&&s.return()}),r.add(e.schedule(()=>{s=t[O](),r.add(e.schedule(function(){if(n.closed)return;let t,e;try{const n=s.next();t=n.value,e=n.done}catch(r){return void n.error(r)}e?n.complete():(n.next(t),this.schedule())}))})),r})}(t,e)}throw new TypeError((null!==t&&typeof t||t)+" is not observable")}(t,e):t instanceof v?t:new v(R(t))}class N extends f{constructor(t){super(),this.parent=t}_next(t){this.parent.notifyNext(t)}_error(t){this.parent.notifyError(t),this.unsubscribe()}_complete(){this.parent.notifyComplete(),this.unsubscribe()}}class V extends f{notifyNext(t){this.destination.next(t)}notifyError(t){this.destination.error(t)}notifyComplete(){this.destination.complete()}}function L(t,e){if(e.closed)return;if(t instanceof v)return t.subscribe(e);let n;try{n=R(t)(e)}catch(r){e.error(r)}return n}function B(t,e,n=Number.POSITIVE_INFINITY){return"function"==typeof e?r=>r.pipe(B((n,r)=>j(t(n,r)).pipe(S((t,s)=>e(n,t,r,s))),n)):("number"==typeof e&&(n=e),e=>e.lift(new U(t,n)))}class U{constructor(t,e=Number.POSITIVE_INFINITY){this.project=t,this.concurrent=e}call(t,e){return e.subscribe(new H(t,this.project,this.concurrent))}}class H extends V{constructor(t,e,n=Number.POSITIVE_INFINITY){super(t),this.project=e,this.concurrent=n,this.hasCompleted=!1,this.buffer=[],this.active=0,this.index=0}_next(t){this.active<this.concurrent?this._tryNext(t):this.buffer.push(t)}_tryNext(t){let e;const n=this.index++;try{e=this.project(t,n)}catch(r){return void this.destination.error(r)}this.active++,this._innerSub(e)}_innerSub(t){const e=new N(this),n=this.destination;n.add(e);const r=L(t,e);r!==e&&n.add(r)}_complete(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&this.destination.complete(),this.unsubscribe()}notifyNext(t){this.destination.next(t)}notifyComplete(){const t=this.buffer;this.active--,t.length>0?this._next(t.shift()):0===this.active&&this.hasCompleted&&this.destination.complete()}}function $(t=Number.POSITIVE_INFINITY){return B(y,t)}function z(t,e){return e?M(t,e):new v(T(t))}function q(...t){let e=Number.POSITIVE_INFINITY,n=null,r=t[t.length-1];return A(r)?(n=t.pop(),t.length>1&&"number"==typeof t[t.length-1]&&(e=t.pop())):"number"==typeof r&&(e=t.pop()),null===n&&1===t.length&&t[0]instanceof v?t[0]:$(e)(z(t,n))}function W(){return function(t){return t.lift(new G(t))}}class G{constructor(t){this.connectable=t}call(t,e){const{connectable:n}=this;n._refCount++;const r=new Z(t,n),s=e.subscribe(r);return r.closed||(r.connection=n.connect()),s}}class Z extends f{constructor(t,e){super(t),this.connectable=e}_unsubscribe(){const{connectable:t}=this;if(!t)return void(this.connection=null);this.connectable=null;const e=t._refCount;if(e<=0)return void(this.connection=null);if(t._refCount=e-1,e>1)return void(this.connection=null);const{connection:n}=this,r=t._connection;this.connection=null,!r||n&&r!==n||r.unsubscribe()}}class K extends v{constructor(t,e){super(),this.source=t,this.subjectFactory=e,this._refCount=0,this._isComplete=!1}_subscribe(t){return this.getSubject().subscribe(t)}getSubject(){const t=this._subject;return t&&!t.isStopped||(this._subject=this.subjectFactory()),this._subject}connect(){let t=this._connection;return t||(this._isComplete=!1,t=this._connection=new h,t.add(this.source.subscribe(new Q(this.getSubject(),this))),t.closed&&(this._connection=null,t=h.EMPTY)),t}refCount(){return W()(this)}}const Y=(()=>{const t=K.prototype;return{operator:{value:null},_refCount:{value:0,writable:!0},_subject:{value:null,writable:!0},_connection:{value:null,writable:!0},_subscribe:{value:t._subscribe},_isComplete:{value:t._isComplete,writable:!0},getSubject:{value:t.getSubject},connect:{value:t.connect},refCount:{value:t.refCount}}})();class Q extends C{constructor(t,e){super(t),this.connectable=e}_error(t){this._unsubscribe(),super._error(t)}_complete(){this.connectable._isComplete=!0,this._unsubscribe(),super._complete()}_unsubscribe(){const t=this.connectable;if(t){this.connectable=null;const e=t._connection;t._refCount=0,t._subject=null,t._connection=null,e&&e.unsubscribe()}}}function X(){return new D}function J(t){for(let e in t)if(t[e]===J)return e;throw Error("Could not find renamed property on target object.")}function tt(t,e){for(const n in e)e.hasOwnProperty(n)&&!t.hasOwnProperty(n)&&(t[n]=e[n])}function et(t){if("string"==typeof t)return t;if(Array.isArray(t))return"["+t.map(et).join(", ")+"]";if(null==t)return""+t;if(t.overriddenName)return`${t.overriddenName}`;if(t.name)return`${t.name}`;const e=t.toString();if(null==e)return""+e;const n=e.indexOf("\n");return-1===n?e:e.substring(0,n)}function nt(t,e){return null==t||""===t?null===e?"":e:null==e||""===e?t:t+" "+e}const rt=J({__forward_ref__:J});function st(t){return t.__forward_ref__=st,t.toString=function(){return et(this())},t}function it(t){return ot(t)?t():t}function ot(t){return"function"==typeof t&&t.hasOwnProperty(rt)&&t.__forward_ref__===st}class at extends Error{constructor(t,e){super(function(t,e){return`${t?`NG0${t}: `:""}${e}`}(t,e)),this.code=t}}function lt(t){return"string"==typeof t?t:null==t?"":String(t)}function ut(t){return"function"==typeof t?t.name||t.toString():"object"==typeof t&&null!=t&&"function"==typeof t.type?t.type.name||t.type.toString():lt(t)}function ct(t,e){const n=e?` in ${e}`:"";throw new at("201",`No provider for ${ut(t)} found${n}`)}function ht(t){return{token:t.token,providedIn:t.providedIn||null,factory:t.factory,value:void 0}}function dt(t){return{providers:t.providers||[],imports:t.imports||[]}}function pt(t){return ft(t,mt)||ft(t,vt)}function ft(t,e){return t.hasOwnProperty(e)?t[e]:null}function gt(t){return t&&(t.hasOwnProperty(yt)||t.hasOwnProperty(bt))?t[yt]:null}const mt=J({"\u0275prov":J}),yt=J({"\u0275inj":J}),vt=J({ngInjectableDef:J}),bt=J({ngInjectorDef:J});var wt=function(t){return t[t.Default=0]="Default",t[t.Host=1]="Host",t[t.Self=2]="Self",t[t.SkipSelf=4]="SkipSelf",t[t.Optional=8]="Optional",t}({});let _t;function Ct(t){const e=_t;return _t=t,e}function Dt(t,e,n){const r=pt(t);return r&&"root"==r.providedIn?void 0===r.value?r.value=r.factory():r.value:n&wt.Optional?null:void 0!==e?e:void ct(et(t),"Injector")}function Et(t){return{toString:t}.toString()}var At=function(t){return t[t.OnPush=0]="OnPush",t[t.Default=1]="Default",t}({}),St=function(t){return t[t.Emulated=0]="Emulated",t[t.None=2]="None",t[t.ShadowDom=3]="ShadowDom",t}({});const xt="undefined"!=typeof globalThis&&globalThis,kt="undefined"!=typeof window&&window,Tt="undefined"!=typeof self&&"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,Ft="undefined"!=typeof global&&global,Ot=xt||Ft||kt||Tt,Pt={},It=[],Rt=J({"\u0275cmp":J}),Mt=J({"\u0275dir":J}),jt=J({"\u0275pipe":J}),Nt=J({"\u0275mod":J}),Vt=J({"\u0275loc":J}),Lt=J({"\u0275fac":J}),Bt=J({__NG_ELEMENT_ID__:J});let Ut=0;function Ht(t){return Et(()=>{const e={},n={type:t.type,providersResolver:null,decls:t.decls,vars:t.vars,factory:null,template:t.template||null,consts:t.consts||null,ngContentSelectors:t.ngContentSelectors,hostBindings:t.hostBindings||null,hostVars:t.hostVars||0,hostAttrs:t.hostAttrs||null,contentQueries:t.contentQueries||null,declaredInputs:e,inputs:null,outputs:null,exportAs:t.exportAs||null,onPush:t.changeDetection===At.OnPush,directiveDefs:null,pipeDefs:null,selectors:t.selectors||It,viewQuery:t.viewQuery||null,features:t.features||null,data:t.data||{},encapsulation:t.encapsulation||St.Emulated,id:"c",styles:t.styles||It,_:null,setInput:null,schemas:t.schemas||null,tView:null},r=t.directives,s=t.features,i=t.pipes;return n.id+=Ut++,n.inputs=Gt(t.inputs,e),n.outputs=Gt(t.outputs),s&&s.forEach(t=>t(n)),n.directiveDefs=r?()=>("function"==typeof r?r():r).map($t):null,n.pipeDefs=i?()=>("function"==typeof i?i():i).map(zt):null,n})}function $t(t){return Yt(t)||function(t){return t[Mt]||null}(t)}function zt(t){return function(t){return t[jt]||null}(t)}const qt={};function Wt(t){const e={type:t.type,bootstrap:t.bootstrap||It,declarations:t.declarations||It,imports:t.imports||It,exports:t.exports||It,transitiveCompileScopes:null,schemas:t.schemas||null,id:t.id||null};return null!=t.id&&Et(()=>{qt[t.id]=t.type}),e}function Gt(t,e){if(null==t)return Pt;const n={};for(const r in t)if(t.hasOwnProperty(r)){let s=t[r],i=s;Array.isArray(s)&&(i=s[1],s=s[0]),n[s]=r,e&&(e[s]=i)}return n}const Zt=Ht;function Kt(t){return{type:t.type,name:t.name,factory:null,pure:!1!==t.pure,onDestroy:t.type.prototype.ngOnDestroy||null}}function Yt(t){return t[Rt]||null}function Qt(t,e){const n=t[Nt]||null;if(!n&&!0===e)throw new Error(`Type ${et(t)} does not have '\u0275mod' property.`);return n}const Xt=20,Jt=10;function te(t){return Array.isArray(t)&&"object"==typeof t[1]}function ee(t){return Array.isArray(t)&&!0===t[1]}function ne(t){return 0!=(8&t.flags)}function re(t){return 2==(2&t.flags)}function se(t){return 1==(1&t.flags)}function ie(t){return null!==t.template}function oe(t,e){return t.hasOwnProperty(Lt)?t[Lt]:null}class ae{constructor(t,e,n){this.previousValue=t,this.currentValue=e,this.firstChange=n}isFirstChange(){return this.firstChange}}function le(){return ue}function ue(t){return t.type.prototype.ngOnChanges&&(t.setInput=he),ce}function ce(){const t=de(this),e=null==t?void 0:t.current;if(e){const n=t.previous;if(n===Pt)t.previous=e;else for(let t in e)n[t]=e[t];t.current=null,this.ngOnChanges(e)}}function he(t,e,n,r){const s=de(t)||function(t,e){return t.__ngSimpleChanges__=e}(t,{previous:Pt,current:null}),i=s.current||(s.current={}),o=s.previous,a=this.declaredInputs[n],l=o[a];i[a]=new ae(l&&l.currentValue,e,o===Pt),t[r]=e}function de(t){return t.__ngSimpleChanges__||null}let pe;function fe(){return void 0!==pe?pe:"undefined"!=typeof document?document:void 0}function ge(t){return!!t.listen}le.ngInherit=!0;const me={createRenderer:(t,e)=>fe()};function ye(t){for(;Array.isArray(t);)t=t[0];return t}function ve(t,e){return ye(e[t])}function be(t,e){return ye(e[t.index])}function we(t,e){return t.data[e]}function _e(t,e){const n=e[t];return te(n)?n:n[0]}function Ce(t){return 4==(4&t[2])}function De(t){return 128==(128&t[2])}function Ee(t,e){return null==e?null:t[e]}function Ae(t){t[18]=0}function Se(t,e){t[5]+=e;let n=t,r=t[3];for(;null!==r&&(1===e&&1===n[5]||-1===e&&0===n[5]);)r[5]+=e,n=r,r=r[3]}const xe={lFrame:Ke(null),bindingsEnabled:!0,isInCheckNoChangesMode:!1};function ke(){return xe.bindingsEnabled}function Te(){return xe.lFrame.lView}function Fe(){return xe.lFrame.tView}function Oe(t){return xe.lFrame.contextLView=t,t[8]}function Pe(){let t=Ie();for(;null!==t&&64===t.type;)t=t.parent;return t}function Ie(){return xe.lFrame.currentTNode}function Re(t,e){const n=xe.lFrame;n.currentTNode=t,n.isParent=e}function Me(){return xe.lFrame.isParent}function je(){xe.lFrame.isParent=!1}function Ne(){return xe.isInCheckNoChangesMode}function Ve(t){xe.isInCheckNoChangesMode=t}function Le(){return xe.lFrame.bindingIndex++}function Be(t){const e=xe.lFrame,n=e.bindingIndex;return e.bindingIndex=e.bindingIndex+t,n}function Ue(t,e){const n=xe.lFrame;n.bindingIndex=n.bindingRootIndex=t,He(e)}function He(t){xe.lFrame.currentDirectiveIndex=t}function $e(){return xe.lFrame.currentQueryIndex}function ze(t){xe.lFrame.currentQueryIndex=t}function qe(t){const e=t[1];return 2===e.type?e.declTNode:1===e.type?t[6]:null}function We(t,e,n){if(n&wt.SkipSelf){let r=e,s=t;for(;r=r.parent,!(null!==r||n&wt.Host||(r=qe(s),null===r)||(s=s[15],10&r.type)););if(null===r)return!1;e=r,t=s}const r=xe.lFrame=Ze();return r.currentTNode=e,r.lView=t,!0}function Ge(t){const e=Ze(),n=t[1];xe.lFrame=e,e.currentTNode=n.firstChild,e.lView=t,e.tView=n,e.contextLView=t,e.bindingIndex=n.bindingStartIndex,e.inI18n=!1}function Ze(){const t=xe.lFrame,e=null===t?null:t.child;return null===e?Ke(t):e}function Ke(t){const e={currentTNode:null,isParent:!0,lView:null,tView:null,selectedIndex:-1,contextLView:null,elementDepthCount:0,currentNamespace:null,currentDirectiveIndex:-1,bindingRootIndex:-1,bindingIndex:-1,currentQueryIndex:0,parent:t,child:null,inI18n:!1};return null!==t&&(t.child=e),e}function Ye(){const t=xe.lFrame;return xe.lFrame=t.parent,t.currentTNode=null,t.lView=null,t}const Qe=Ye;function Xe(){const t=Ye();t.isParent=!0,t.tView=null,t.selectedIndex=-1,t.contextLView=null,t.elementDepthCount=0,t.currentDirectiveIndex=-1,t.currentNamespace=null,t.bindingRootIndex=-1,t.bindingIndex=-1,t.currentQueryIndex=0}function Je(){return xe.lFrame.selectedIndex}function tn(t){xe.lFrame.selectedIndex=t}function en(){const t=xe.lFrame;return we(t.tView,t.selectedIndex)}function nn(t,e){for(let n=e.directiveStart,r=e.directiveEnd;n<r;n++){const e=t.data[n].type.prototype,{ngAfterContentInit:r,ngAfterContentChecked:s,ngAfterViewInit:i,ngAfterViewChecked:o,ngOnDestroy:a}=e;r&&(t.contentHooks||(t.contentHooks=[])).push(-n,r),s&&((t.contentHooks||(t.contentHooks=[])).push(n,s),(t.contentCheckHooks||(t.contentCheckHooks=[])).push(n,s)),i&&(t.viewHooks||(t.viewHooks=[])).push(-n,i),o&&((t.viewHooks||(t.viewHooks=[])).push(n,o),(t.viewCheckHooks||(t.viewCheckHooks=[])).push(n,o)),null!=a&&(t.destroyHooks||(t.destroyHooks=[])).push(n,a)}}function rn(t,e,n){an(t,e,3,n)}function sn(t,e,n,r){(3&t[2])===n&&an(t,e,n,r)}function on(t,e){let n=t[2];(3&n)===e&&(n&=2047,n+=1,t[2]=n)}function an(t,e,n,r){const s=null!=r?r:-1,i=e.length-1;let o=0;for(let a=void 0!==r?65535&t[18]:0;a<i;a++)if("number"==typeof e[a+1]){if(o=e[a],null!=r&&o>=r)break}else e[a]<0&&(t[18]+=65536),(o<s||-1==s)&&(ln(t,n,e,a),t[18]=(4294901760&t[18])+a+2),a++}function ln(t,e,n,r){const s=n[r]<0,i=n[r+1],o=t[s?-n[r]:n[r]];if(s){if(t[2]>>11<t[18]>>16&&(3&t[2])===e){t[2]+=2048;try{i.call(o)}finally{}}}else try{i.call(o)}finally{}}const un=-1;class cn{constructor(t,e,n){this.factory=t,this.resolving=!1,this.canSeeViewProviders=e,this.injectImpl=n}}function hn(t,e,n){const r=ge(t);let s=0;for(;s<n.length;){const i=n[s];if("number"==typeof i){if(0!==i)break;s++;const o=n[s++],a=n[s++],l=n[s++];r?t.setAttribute(e,a,l,o):e.setAttributeNS(o,a,l)}else{const o=i,a=n[++s];pn(o)?r&&t.setProperty(e,o,a):r?t.setAttribute(e,o,a):e.setAttribute(o,a),s++}}return s}function dn(t){return 3===t||4===t||6===t}function pn(t){return 64===t.charCodeAt(0)}function fn(t,e){if(null===e||0===e.length);else if(null===t||0===t.length)t=e.slice();else{let n=-1;for(let r=0;r<e.length;r++){const s=e[r];"number"==typeof s?n=s:0===n||gn(t,n,s,null,-1===n||2===n?e[++r]:null)}}return t}function gn(t,e,n,r,s){let i=0,o=t.length;if(-1===e)o=-1;else for(;i<t.length;){const n=t[i++];if("number"==typeof n){if(n===e){o=-1;break}if(n>e){o=i-1;break}}}for(;i<t.length;){const e=t[i];if("number"==typeof e)break;if(e===n){if(null===r)return void(null!==s&&(t[i+1]=s));if(r===t[i+1])return void(t[i+2]=s)}i++,null!==r&&i++,null!==s&&i++}-1!==o&&(t.splice(o,0,e),i=o+1),t.splice(i++,0,n),null!==r&&t.splice(i++,0,r),null!==s&&t.splice(i++,0,s)}function mn(t){return t!==un}function yn(t){return 32767&t}function vn(t,e){let n=t>>16,r=e;for(;n>0;)r=r[15],n--;return r}let bn=!0;function wn(t){const e=bn;return bn=t,e}let _n=0;function Cn(t,e){const n=En(t,e);if(-1!==n)return n;const r=e[1];r.firstCreatePass&&(t.injectorIndex=e.length,Dn(r.data,t),Dn(e,null),Dn(r.blueprint,null));const s=An(t,e),i=t.injectorIndex;if(mn(s)){const t=yn(s),n=vn(s,e),r=n[1].data;for(let s=0;s<8;s++)e[i+s]=n[t+s]|r[t+s]}return e[i+8]=s,i}function Dn(t,e){t.push(0,0,0,0,0,0,0,0,e)}function En(t,e){return-1===t.injectorIndex||t.parent&&t.parent.injectorIndex===t.injectorIndex||null===e[t.injectorIndex+8]?-1:t.injectorIndex}function An(t,e){if(t.parent&&-1!==t.parent.injectorIndex)return t.parent.injectorIndex;let n=0,r=null,s=e;for(;null!==s;){const t=s[1],e=t.type;if(r=2===e?t.declTNode:1===e?s[6]:null,null===r)return un;if(n++,s=s[15],-1!==r.injectorIndex)return r.injectorIndex|n<<16}return un}function Sn(t,e,n){!function(t,e,n){let r;"string"==typeof n?r=n.charCodeAt(0)||0:n.hasOwnProperty(Bt)&&(r=n[Bt]),null==r&&(r=n[Bt]=_n++);const s=255&r;e.data[t+(s>>5)]|=1<<s}(t,e,n)}function xn(t,e,n){if(n&wt.Optional)return t;ct(e,"NodeInjector")}function kn(t,e,n,r){if(n&wt.Optional&&void 0===r&&(r=null),0==(n&(wt.Self|wt.Host))){const s=t[9],i=Ct(void 0);try{return s?s.get(e,r,n&wt.Optional):Dt(e,r,n&wt.Optional)}finally{Ct(i)}}return xn(r,e,n)}function Tn(t,e,n,r=wt.Default,s){if(null!==t){const i=function(t){if("string"==typeof t)return t.charCodeAt(0)||0;const e=t.hasOwnProperty(Bt)?t[Bt]:void 0;return"number"==typeof e?e>=0?255&e:On:e}(n);if("function"==typeof i){if(!We(e,t,r))return r&wt.Host?xn(s,n,r):kn(e,n,r,s);try{const t=i(r);if(null!=t||r&wt.Optional)return t;ct(n)}finally{Qe()}}else if("number"==typeof i){let s=null,o=En(t,e),a=un,l=r&wt.Host?e[16][6]:null;for((-1===o||r&wt.SkipSelf)&&(a=-1===o?An(t,e):e[o+8],a!==un&&jn(r,!1)?(s=e[1],o=yn(a),e=vn(a,e)):o=-1);-1!==o;){const t=e[1];if(Mn(i,o,t.data)){const t=Pn(o,e,n,s,r,l);if(t!==Fn)return t}a=e[o+8],a!==un&&jn(r,e[1].data[o+8]===l)&&Mn(i,o,e)?(s=t,o=yn(a),e=vn(a,e)):o=-1}}}return kn(e,n,r,s)}const Fn={};function On(){return new Nn(Pe(),Te())}function Pn(t,e,n,r,s,i){const o=e[1],a=o.data[t+8],l=In(a,o,n,null==r?re(a)&&bn:r!=o&&0!=(3&a.type),s&wt.Host&&i===a);return null!==l?Rn(e,o,l,a):Fn}function In(t,e,n,r,s){const i=t.providerIndexes,o=e.data,a=1048575&i,l=t.directiveStart,u=i>>20,c=s?a+u:t.directiveEnd;for(let h=r?a:a+u;h<c;h++){const t=o[h];if(h<l&&n===t||h>=l&&t.type===n)return h}if(s){const t=o[l];if(t&&ie(t)&&t.type===n)return l}return null}function Rn(t,e,n,r){let s=t[n];const i=e.data;if(s instanceof cn){const o=s;o.resolving&&function(t,e){throw new at("200",`Circular dependency in DI detected for ${t}`)}(ut(i[n]));const a=wn(o.canSeeViewProviders);o.resolving=!0;const l=o.injectImpl?Ct(o.injectImpl):null;We(t,r,wt.Default);try{s=t[n]=o.factory(void 0,i,t,r),e.firstCreatePass&&n>=r.directiveStart&&function(t,e,n){const{ngOnChanges:r,ngOnInit:s,ngDoCheck:i}=e.type.prototype;if(r){const r=ue(e);(n.preOrderHooks||(n.preOrderHooks=[])).push(t,r),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(t,r)}s&&(n.preOrderHooks||(n.preOrderHooks=[])).push(0-t,s),i&&((n.preOrderHooks||(n.preOrderHooks=[])).push(t,i),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(t,i))}(n,i[n],e)}finally{null!==l&&Ct(l),wn(a),o.resolving=!1,Qe()}}return s}function Mn(t,e,n){return!!(n[e+(t>>5)]&1<<t)}function jn(t,e){return!(t&wt.Self||t&wt.Host&&e)}class Nn{constructor(t,e){this._tNode=t,this._lView=e}get(t,e){return Tn(this._tNode,this._lView,t,void 0,e)}}function Vn(t){return Et(()=>{const e=t.prototype.constructor,n=e[Lt]||Ln(e),r=Object.prototype;let s=Object.getPrototypeOf(t.prototype).constructor;for(;s&&s!==r;){const t=s[Lt]||Ln(s);if(t&&t!==n)return t;s=Object.getPrototypeOf(s)}return t=>new t})}function Ln(t){return ot(t)?()=>{const e=Ln(it(t));return e&&e()}:oe(t)}const Bn="__parameters__";function Un(t,e,n){return Et(()=>{const r=function(t){return function(...e){if(t){const n=t(...e);for(const t in n)this[t]=n[t]}}}(e);function s(...t){if(this instanceof s)return r.apply(this,t),this;const e=new s(...t);return n.annotation=e,n;function n(t,n,r){const s=t.hasOwnProperty(Bn)?t[Bn]:Object.defineProperty(t,Bn,{value:[]})[Bn];for(;s.length<=r;)s.push(null);return(s[r]=s[r]||[]).push(e),t}}return n&&(s.prototype=Object.create(n.prototype)),s.prototype.ngMetadataName=t,s.annotationCls=s,s})}class Hn{constructor(t,e){this._desc=t,this.ngMetadataName="InjectionToken",this.\u0275prov=void 0,"number"==typeof e?this.__NG_ELEMENT_ID__=e:void 0!==e&&(this.\u0275prov=ht({token:this,providedIn:e.providedIn||"root",factory:e.factory}))}toString(){return`InjectionToken ${this._desc}`}}const $n=new Hn("AnalyzeForEntryComponents"),zn=Function;function qn(t,e){void 0===e&&(e=t);for(let n=0;n<t.length;n++){let r=t[n];Array.isArray(r)?(e===t&&(e=t.slice(0,n)),qn(r,e)):e!==t&&e.push(r)}return e}function Wn(t,e){t.forEach(t=>Array.isArray(t)?Wn(t,e):e(t))}function Gn(t,e,n){e>=t.length?t.push(n):t.splice(e,0,n)}function Zn(t,e){return e>=t.length-1?t.pop():t.splice(e,1)[0]}function Kn(t,e){const n=[];for(let r=0;r<t;r++)n.push(e);return n}function Yn(t,e,n){let r=Xn(t,e);return r>=0?t[1|r]=n:(r=~r,function(t,e,n,r){let s=t.length;if(s==e)t.push(n,r);else if(1===s)t.push(r,t[0]),t[0]=n;else{for(s--,t.push(t[s-1],t[s]);s>e;)t[s]=t[s-2],s--;t[e]=n,t[e+1]=r}}(t,r,e,n)),r}function Qn(t,e){const n=Xn(t,e);if(n>=0)return t[1|n]}function Xn(t,e){return function(t,e,n){let r=0,s=t.length>>1;for(;s!==r;){const n=r+(s-r>>1),i=t[n<<1];if(e===i)return n<<1;i>e?s=n:r=n+1}return~(s<<1)}(t,e)}const Jn={},tr=/\n/gm,er="__source",nr=J({provide:String,useValue:J});let rr;function sr(t){const e=rr;return rr=t,e}function ir(t,e=wt.Default){if(void 0===rr)throw new Error("inject() must be called from an injection context");return null===rr?Dt(t,void 0,e):rr.get(t,e&wt.Optional?null:void 0,e)}function or(t,e=wt.Default){return(_t||ir)(it(t),e)}function ar(t){const e=[];for(let n=0;n<t.length;n++){const r=it(t[n]);if(Array.isArray(r)){if(0===r.length)throw new Error("Arguments array must have arguments.");let t,n=wt.Default;for(let e=0;e<r.length;e++){const s=r[e],i=s.__NG_DI_FLAG__;"number"==typeof i?-1===i?t=s.token:n|=i:t=s}e.push(or(t,n))}else e.push(or(r))}return e}function lr(t,e){return t.__NG_DI_FLAG__=e,t.prototype.__NG_DI_FLAG__=e,t}const ur=lr(Un("Inject",t=>({token:t})),-1),cr=lr(Un("Optional"),8),hr=lr(Un("SkipSelf"),4);let dr,pr;function fr(t){var e;return(null===(e=function(){if(void 0===dr&&(dr=null,Ot.trustedTypes))try{dr=Ot.trustedTypes.createPolicy("angular",{createHTML:t=>t,createScript:t=>t,createScriptURL:t=>t})}catch(e){}return dr}())||void 0===e?void 0:e.createHTML(t))||t}function gr(t){var e;return(null===(e=function(){if(void 0===pr&&(pr=null,Ot.trustedTypes))try{pr=Ot.trustedTypes.createPolicy("angular#unsafe-bypass",{createHTML:t=>t,createScript:t=>t,createScriptURL:t=>t})}catch(e){}return pr}())||void 0===e?void 0:e.createHTML(t))||t}class mr{constructor(t){this.changingThisBreaksApplicationSecurity=t}toString(){return`SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`}}function yr(t){return t instanceof mr?t.changingThisBreaksApplicationSecurity:t}class vr{constructor(t){this.inertDocumentHelper=t}getInertBodyElement(t){t="<body><remove></remove>"+t;try{const e=(new window.DOMParser).parseFromString(fr(t),"text/html").body;return null===e?this.inertDocumentHelper.getInertBodyElement(t):(e.removeChild(e.firstChild),e)}catch(e){return null}}}class br{constructor(t){if(this.defaultDoc=t,this.inertDocument=this.defaultDoc.implementation.createHTMLDocument("sanitization-inert"),null==this.inertDocument.body){const t=this.inertDocument.createElement("html");this.inertDocument.appendChild(t);const e=this.inertDocument.createElement("body");t.appendChild(e)}}getInertBodyElement(t){const e=this.inertDocument.createElement("template");if("content"in e)return e.innerHTML=fr(t),e;const n=this.inertDocument.createElement("body");return n.innerHTML=fr(t),this.defaultDoc.documentMode&&this.stripCustomNsAttrs(n),n}stripCustomNsAttrs(t){const e=t.attributes;for(let r=e.length-1;0<r;r--){const n=e.item(r).name;"xmlns:ns1"!==n&&0!==n.indexOf("ns1:")||t.removeAttribute(n)}let n=t.firstChild;for(;n;)n.nodeType===Node.ELEMENT_NODE&&this.stripCustomNsAttrs(n),n=n.nextSibling}}const wr=/^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,_r=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;function Cr(t){return(t=String(t)).match(wr)||t.match(_r)?t:"unsafe:"+t}function Dr(t){const e={};for(const n of t.split(","))e[n]=!0;return e}function Er(...t){const e={};for(const n of t)for(const t in n)n.hasOwnProperty(t)&&(e[t]=!0);return e}const Ar=Dr("area,br,col,hr,img,wbr"),Sr=Dr("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),xr=Dr("rp,rt"),kr=Er(xr,Sr),Tr=Er(Ar,Er(Sr,Dr("address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul")),Er(xr,Dr("a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video")),kr),Fr=Dr("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),Or=Dr("srcset"),Pr=Er(Fr,Or,Dr("abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"),Dr("aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext")),Ir=Dr("script,style,template");class Rr{constructor(){this.sanitizedSomething=!1,this.buf=[]}sanitizeChildren(t){let e=t.firstChild,n=!0;for(;e;)if(e.nodeType===Node.ELEMENT_NODE?n=this.startElement(e):e.nodeType===Node.TEXT_NODE?this.chars(e.nodeValue):this.sanitizedSomething=!0,n&&e.firstChild)e=e.firstChild;else for(;e;){e.nodeType===Node.ELEMENT_NODE&&this.endElement(e);let t=this.checkClobberedElement(e,e.nextSibling);if(t){e=t;break}e=this.checkClobberedElement(e,e.parentNode)}return this.buf.join("")}startElement(t){const e=t.nodeName.toLowerCase();if(!Tr.hasOwnProperty(e))return this.sanitizedSomething=!0,!Ir.hasOwnProperty(e);this.buf.push("<"),this.buf.push(e);const n=t.attributes;for(let s=0;s<n.length;s++){const t=n.item(s),e=t.name,i=e.toLowerCase();if(!Pr.hasOwnProperty(i)){this.sanitizedSomething=!0;continue}let o=t.value;Fr[i]&&(o=Cr(o)),Or[i]&&(r=o,o=(r=String(r)).split(",").map(t=>Cr(t.trim())).join(", ")),this.buf.push(" ",e,'="',Nr(o),'"')}var r;return this.buf.push(">"),!0}endElement(t){const e=t.nodeName.toLowerCase();Tr.hasOwnProperty(e)&&!Ar.hasOwnProperty(e)&&(this.buf.push("</"),this.buf.push(e),this.buf.push(">"))}chars(t){this.buf.push(Nr(t))}checkClobberedElement(t,e){if(e&&(t.compareDocumentPosition(e)&Node.DOCUMENT_POSITION_CONTAINED_BY)===Node.DOCUMENT_POSITION_CONTAINED_BY)throw new Error(`Failed to sanitize html because the element is clobbered: ${t.outerHTML}`);return e}}const Mr=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,jr=/([^\#-~ |!])/g;function Nr(t){return t.replace(/&/g,"&amp;").replace(Mr,function(t){return"&#"+(1024*(t.charCodeAt(0)-55296)+(t.charCodeAt(1)-56320)+65536)+";"}).replace(jr,function(t){return"&#"+t.charCodeAt(0)+";"}).replace(/</g,"&lt;").replace(/>/g,"&gt;")}let Vr;function Lr(t){return"content"in t&&function(t){return t.nodeType===Node.ELEMENT_NODE&&"TEMPLATE"===t.nodeName}(t)?t.content:null}var Br=function(t){return t[t.NONE=0]="NONE",t[t.HTML=1]="HTML",t[t.STYLE=2]="STYLE",t[t.SCRIPT=3]="SCRIPT",t[t.URL=4]="URL",t[t.RESOURCE_URL=5]="RESOURCE_URL",t}({});function Ur(t){const e=function(){const t=Te();return t&&t[12]}();return e?gr(e.sanitize(Br.HTML,t)||""):function(t,e){const n=function(t){return t instanceof mr&&t.getTypeName()||null}(t);if(null!=n&&n!==e){if("ResourceURL"===n&&"URL"===e)return!0;throw new Error(`Required a safe ${e}, got a ${n} (see https://g.co/ng/security#xss)`)}return n===e}(t,"HTML")?gr(yr(t)):function(t,e){let n=null;try{Vr=Vr||function(t){const e=new br(t);return function(){try{return!!(new window.DOMParser).parseFromString(fr(""),"text/html")}catch(t){return!1}}()?new vr(e):e}(t);let r=e?String(e):"";n=Vr.getInertBodyElement(r);let s=5,i=r;do{if(0===s)throw new Error("Failed to sanitize html because the input is unstable");s--,r=i,i=n.innerHTML,n=Vr.getInertBodyElement(r)}while(r!==i);return fr((new Rr).sanitizeChildren(Lr(n)||n))}finally{if(n){const t=Lr(n)||n;for(;t.firstChild;)t.removeChild(t.firstChild)}}}(fe(),lt(t))}function Hr(t,e){t.__ngContext__=e}function $r(t){const e=function(t){return t.__ngContext__||null}(t);return e?Array.isArray(e)?e:e.lView:null}function zr(t){return t.ngDebugContext}function qr(t){return t.ngOriginalError}function Wr(t,...e){t.error(...e)}class Gr{constructor(){this._console=console}handleError(t){const e=this._findOriginalError(t),n=this._findContext(t),r=function(t){return t.ngErrorLogger||Wr}(t);r(this._console,"ERROR",t),e&&r(this._console,"ORIGINAL ERROR",e),n&&r(this._console,"ERROR CONTEXT",n)}_findContext(t){return t?zr(t)?zr(t):this._findContext(qr(t)):null}_findOriginalError(t){let e=qr(t);for(;e&&qr(e);)e=qr(e);return e}}const Zr=(()=>("undefined"!=typeof requestAnimationFrame&&requestAnimationFrame||setTimeout).bind(Ot))();function Kr(t){return t instanceof Function?t():t}var Yr=function(t){return t[t.Important=1]="Important",t[t.DashCase=2]="DashCase",t}({});function Qr(t,e){return(void 0)(t,e)}function Xr(t){const e=t[3];return ee(e)?e[3]:e}function Jr(t){return es(t[13])}function ts(t){return es(t[4])}function es(t){for(;null!==t&&!ee(t);)t=t[4];return t}function ns(t,e,n,r,s){if(null!=r){let i,o=!1;ee(r)?i=r:te(r)&&(o=!0,r=r[0]);const a=ye(r);0===t&&null!==n?null==s?cs(e,n,a):us(e,n,a,s||null,!0):1===t&&null!==n?us(e,n,a,s||null,!0):2===t?function(t,e,n){const r=ds(t,e);r&&function(t,e,n,r){ge(t)?t.removeChild(e,n,r):e.removeChild(n)}(t,r,e,n)}(e,a,o):3===t&&e.destroyNode(a),null!=i&&function(t,e,n,r,s){const i=n[7];i!==ye(n)&&ns(e,t,r,i,s);for(let o=Jt;o<n.length;o++){const s=n[o];ws(s[1],s,t,e,r,i)}}(e,t,i,n,s)}}function rs(t,e,n){return ge(t)?t.createElement(e,n):null===n?t.createElement(e):t.createElementNS(n,e)}function ss(t,e){const n=t[9],r=n.indexOf(e),s=e[3];1024&e[2]&&(e[2]&=-1025,Se(s,-1)),n.splice(r,1)}function is(t,e){if(t.length<=Jt)return;const n=Jt+e,r=t[n];if(r){const i=r[17];null!==i&&i!==t&&ss(i,r),e>0&&(t[n-1][4]=r[4]);const o=Zn(t,Jt+e);ws(r[1],s=r,s[11],2,null,null),s[0]=null,s[6]=null;const a=o[19];null!==a&&a.detachView(o[1]),r[3]=null,r[4]=null,r[2]&=-129}var s;return r}function os(t,e){if(!(256&e[2])){const n=e[11];ge(n)&&n.destroyNode&&ws(t,e,n,3,null,null),function(t){let e=t[13];if(!e)return as(t[1],t);for(;e;){let n=null;if(te(e))n=e[13];else{const t=e[10];t&&(n=t)}if(!n){for(;e&&!e[4]&&e!==t;)te(e)&&as(e[1],e),e=e[3];null===e&&(e=t),te(e)&&as(e[1],e),n=e&&e[4]}e=n}}(e)}}function as(t,e){if(!(256&e[2])){e[2]&=-129,e[2]|=256,function(t,e){let n;if(null!=t&&null!=(n=t.destroyHooks))for(let r=0;r<n.length;r+=2){const t=e[n[r]];if(!(t instanceof cn)){const e=n[r+1];if(Array.isArray(e))for(let n=0;n<e.length;n+=2){const r=t[e[n]],s=e[n+1];try{s.call(r)}finally{}}else try{e.call(t)}finally{}}}}(t,e),function(t,e){const n=t.cleanup,r=e[7];let s=-1;if(null!==n)for(let i=0;i<n.length-1;i+=2)if("string"==typeof n[i]){const t=n[i+1],o="function"==typeof t?t(e):ye(e[t]),a=r[s=n[i+2]],l=n[i+3];"boolean"==typeof l?o.removeEventListener(n[i],a,l):l>=0?r[s=l]():r[s=-l].unsubscribe(),i+=2}else{const t=r[s=n[i+1]];n[i].call(t)}if(null!==r){for(let t=s+1;t<r.length;t++)(0,r[t])();e[7]=null}}(t,e),1===e[1].type&&ge(e[11])&&e[11].destroy();const n=e[17];if(null!==n&&ee(e[3])){n!==e[3]&&ss(n,e);const r=e[19];null!==r&&r.detachView(t)}}}function ls(t,e,n){return function(t,e,n){let r=e;for(;null!==r&&40&r.type;)r=(e=r).parent;if(null===r)return n[0];if(2&r.flags){const e=t.data[r.directiveStart].encapsulation;if(e===St.None||e===St.Emulated)return null}return be(r,n)}(t,e.parent,n)}function us(t,e,n,r,s){ge(t)?t.insertBefore(e,n,r,s):e.insertBefore(n,r,s)}function cs(t,e,n){ge(t)?t.appendChild(e,n):e.appendChild(n)}function hs(t,e,n,r,s){null!==r?us(t,e,n,r,s):cs(t,e,n)}function ds(t,e){return ge(t)?t.parentNode(e):e.parentNode}function ps(t,e,n){return fs(t,e,n)}let fs=function(t,e,n){return 40&t.type?be(t,n):null};function gs(t,e,n,r){const s=ls(t,r,e),i=e[11],o=ps(r.parent||e[6],r,e);if(null!=s)if(Array.isArray(n))for(let a=0;a<n.length;a++)hs(i,s,n[a],o,!1);else hs(i,s,n,o,!1)}function ms(t,e){if(null!==e){const n=e.type;if(3&n)return be(e,t);if(4&n)return vs(-1,t[e.index]);if(8&n){const n=e.child;if(null!==n)return ms(t,n);{const n=t[e.index];return ee(n)?vs(-1,n):ye(n)}}if(32&n)return Qr(e,t)()||ye(t[e.index]);{const n=ys(t,e);return null!==n?Array.isArray(n)?n[0]:ms(Xr(t[16]),n):ms(t,e.next)}}return null}function ys(t,e){return null!==e?t[16][6].projection[e.projection]:null}function vs(t,e){const n=Jt+t+1;if(n<e.length){const t=e[n],r=t[1].firstChild;if(null!==r)return ms(t,r)}return e[7]}function bs(t,e,n,r,s,i,o){for(;null!=n;){const a=r[n.index],l=n.type;if(o&&0===e&&(a&&Hr(ye(a),r),n.flags|=4),64!=(64&n.flags))if(8&l)bs(t,e,n.child,r,s,i,!1),ns(e,t,s,a,i);else if(32&l){const o=Qr(n,r);let l;for(;l=o();)ns(e,t,s,l,i);ns(e,t,s,a,i)}else 16&l?_s(t,e,r,n,s,i):ns(e,t,s,a,i);n=o?n.projectionNext:n.next}}function ws(t,e,n,r,s,i){bs(n,r,t.firstChild,e,s,i,!1)}function _s(t,e,n,r,s,i){const o=n[16],a=o[6].projection[r.projection];if(Array.isArray(a))for(let l=0;l<a.length;l++)ns(e,t,s,a[l],i);else bs(t,e,a,o[3],s,i,!0)}function Cs(t,e,n){ge(t)?t.setAttribute(e,"style",n):e.style.cssText=n}function Ds(t,e,n){ge(t)?""===n?t.removeAttribute(e,"class"):t.setAttribute(e,"class",n):e.className=n}function Es(t,e,n){let r=t.length;for(;;){const s=t.indexOf(e,n);if(-1===s)return s;if(0===s||t.charCodeAt(s-1)<=32){const n=e.length;if(s+n===r||t.charCodeAt(s+n)<=32)return s}n=s+1}}const As="ng-template";function Ss(t,e,n){let r=0;for(;r<t.length;){let s=t[r++];if(n&&"class"===s){if(s=t[r],-1!==Es(s.toLowerCase(),e,0))return!0}else if(1===s){for(;r<t.length&&"string"==typeof(s=t[r++]);)if(s.toLowerCase()===e)return!0;return!1}}return!1}function xs(t){return 4===t.type&&t.value!==As}function ks(t,e,n){return e===(4!==t.type||n?t.value:As)}function Ts(t,e,n){let r=4;const s=t.attrs||[],i=function(t){for(let e=0;e<t.length;e++)if(dn(t[e]))return e;return t.length}(s);let o=!1;for(let a=0;a<e.length;a++){const l=e[a];if("number"!=typeof l){if(!o)if(4&r){if(r=2|1&r,""!==l&&!ks(t,l,n)||""===l&&1===e.length){if(Fs(r))return!1;o=!0}}else{const u=8&r?l:e[++a];if(8&r&&null!==t.attrs){if(!Ss(t.attrs,u,n)){if(Fs(r))return!1;o=!0}continue}const c=Os(8&r?"class":l,s,xs(t),n);if(-1===c){if(Fs(r))return!1;o=!0;continue}if(""!==u){let t;t=c>i?"":s[c+1].toLowerCase();const e=8&r?t:null;if(e&&-1!==Es(e,u,0)||2&r&&u!==t){if(Fs(r))return!1;o=!0}}}}else{if(!o&&!Fs(r)&&!Fs(l))return!1;if(o&&Fs(l))continue;o=!1,r=l|1&r}}return Fs(r)||o}function Fs(t){return 0==(1&t)}function Os(t,e,n,r){if(null===e)return-1;let s=0;if(r||!n){let n=!1;for(;s<e.length;){const r=e[s];if(r===t)return s;if(3===r||6===r)n=!0;else{if(1===r||2===r){let t=e[++s];for(;"string"==typeof t;)t=e[++s];continue}if(4===r)break;if(0===r){s+=4;continue}}s+=n?1:2}return-1}return function(t,e){let n=t.indexOf(4);if(n>-1)for(n++;n<t.length;){const r=t[n];if("number"==typeof r)return-1;if(r===e)return n;n++}return-1}(e,t)}function Ps(t,e,n=!1){for(let r=0;r<e.length;r++)if(Ts(t,e[r],n))return!0;return!1}function Is(t,e){t:for(let n=0;n<e.length;n++){const r=e[n];if(t.length===r.length){for(let e=0;e<t.length;e++)if(t[e]!==r[e])continue t;return!0}}return!1}function Rs(t,e){return t?":not("+e.trim()+")":e}function Ms(t){let e=t[0],n=1,r=2,s="",i=!1;for(;n<t.length;){let o=t[n];if("string"==typeof o)if(2&r){const e=t[++n];s+="["+o+(e.length>0?'="'+e+'"':"")+"]"}else 8&r?s+="."+o:4&r&&(s+=" "+o);else""===s||Fs(o)||(e+=Rs(i,s),s=""),r=o,i=i||!Fs(r);n++}return""!==s&&(e+=Rs(i,s)),e}const js={};function Ns(t){Vs(Fe(),Te(),Je()+t,Ne())}function Vs(t,e,n,r){if(!r)if(3==(3&e[2])){const r=t.preOrderCheckHooks;null!==r&&rn(e,r,n)}else{const r=t.preOrderHooks;null!==r&&sn(e,r,0,n)}tn(n)}function Ls(t,e){return t<<17|e<<2}function Bs(t){return t>>17&32767}function Us(t){return 2|t}function Hs(t){return(131068&t)>>2}function $s(t,e){return-131069&t|e<<2}function zs(t){return 1|t}function qs(t,e){const n=t.contentQueries;if(null!==n)for(let r=0;r<n.length;r+=2){const s=n[r],i=n[r+1];if(-1!==i){const n=t.data[i];ze(s),n.contentQueries(2,e[i],i)}}}function Ws(t,e,n,r,s,i,o,a,l,u){const c=e.blueprint.slice();return c[0]=s,c[2]=140|r,Ae(c),c[3]=c[15]=t,c[8]=n,c[10]=o||t&&t[10],c[11]=a||t&&t[11],c[12]=l||t&&t[12]||null,c[9]=u||t&&t[9]||null,c[6]=i,c[16]=2==e.type?t[16]:c,c}function Gs(t,e,n,r,s){let i=t.data[e];if(null===i)i=function(t,e,n,r,s){const i=Ie(),o=Me(),a=t.data[e]=function(t,e,n,r,s,i){return{type:n,index:r,insertBeforeIndex:null,injectorIndex:e?e.injectorIndex:-1,directiveStart:-1,directiveEnd:-1,directiveStylingLast:-1,propertyBindings:null,flags:0,providerIndexes:0,value:s,attrs:i,mergedAttrs:null,localNames:null,initialInputs:void 0,inputs:null,outputs:null,tViews:null,next:null,projectionNext:null,child:null,parent:e,projection:null,styles:null,stylesWithoutHost:null,residualStyles:void 0,classes:null,classesWithoutHost:null,residualClasses:void 0,classBindings:0,styleBindings:0}}(0,o?i:i&&i.parent,n,e,r,s);return null===t.firstChild&&(t.firstChild=a),null!==i&&(o?null==i.child&&null!==a.parent&&(i.child=a):null===i.next&&(i.next=a)),a}(t,e,n,r,s),xe.lFrame.inI18n&&(i.flags|=64);else if(64&i.type){i.type=n,i.value=r,i.attrs=s;const t=function(){const t=xe.lFrame,e=t.currentTNode;return t.isParent?e:e.parent}();i.injectorIndex=null===t?-1:t.injectorIndex}return Re(i,!0),i}function Zs(t,e,n,r){if(0===n)return-1;const s=e.length;for(let i=0;i<n;i++)e.push(r),t.blueprint.push(r),t.data.push(null);return s}function Ks(t,e,n){Ge(e);try{const r=t.viewQuery;null!==r&&Ei(1,r,n);const s=t.template;null!==s&&Xs(t,e,s,1,n),t.firstCreatePass&&(t.firstCreatePass=!1),t.staticContentQueries&&qs(t,e),t.staticViewQueries&&Ei(2,t.viewQuery,n);const i=t.components;null!==i&&function(t,e){for(let n=0;n<e.length;n++)bi(t,e[n])}(e,i)}catch(r){throw t.firstCreatePass&&(t.incompleteFirstPass=!0),r}finally{e[2]&=-5,Xe()}}function Ys(t,e,n,r){const s=e[2];if(256==(256&s))return;Ge(e);const i=Ne();try{Ae(e),xe.lFrame.bindingIndex=t.bindingStartIndex,null!==n&&Xs(t,e,n,2,r);const o=3==(3&s);if(!i)if(o){const n=t.preOrderCheckHooks;null!==n&&rn(e,n,null)}else{const n=t.preOrderHooks;null!==n&&sn(e,n,0,null),on(e,0)}if(function(t){for(let e=Jr(t);null!==e;e=ts(e)){if(!e[2])continue;const t=e[9];for(let e=0;e<t.length;e++){const n=t[e],r=n[3];0==(1024&n[2])&&Se(r,1),n[2]|=1024}}}(e),function(t){for(let e=Jr(t);null!==e;e=ts(e))for(let t=Jt;t<e.length;t++){const n=e[t],r=n[1];De(n)&&Ys(r,n,r.template,n[8])}}(e),null!==t.contentQueries&&qs(t,e),!i)if(o){const n=t.contentCheckHooks;null!==n&&rn(e,n)}else{const n=t.contentHooks;null!==n&&sn(e,n,1),on(e,1)}!function(t,e){const n=t.hostBindingOpCodes;if(null!==n)try{for(let t=0;t<n.length;t++){const r=n[t];if(r<0)tn(~r);else{const s=r,i=n[++t],o=n[++t];Ue(i,s),o(2,e[s])}}}finally{tn(-1)}}(t,e);const a=t.components;null!==a&&function(t,e){for(let n=0;n<e.length;n++)yi(t,e[n])}(e,a);const l=t.viewQuery;if(null!==l&&Ei(2,l,r),!i)if(o){const n=t.viewCheckHooks;null!==n&&rn(e,n)}else{const n=t.viewHooks;null!==n&&sn(e,n,2),on(e,2)}!0===t.firstUpdatePass&&(t.firstUpdatePass=!1),i||(e[2]&=-73),1024&e[2]&&(e[2]&=-1025,Se(e[3],-1))}finally{Xe()}}function Qs(t,e,n,r){const s=e[10],i=!Ne(),o=Ce(e);try{i&&!o&&s.begin&&s.begin(),o&&Ks(t,e,r),Ys(t,e,n,r)}finally{i&&!o&&s.end&&s.end()}}function Xs(t,e,n,r,s){const i=Je(),o=2&r;try{tn(-1),o&&e.length>Xt&&Vs(t,e,Xt,Ne()),n(r,s)}finally{tn(i)}}function Js(t,e,n){if(ne(e)){const r=e.directiveEnd;for(let s=e.directiveStart;s<r;s++){const e=t.data[s];e.contentQueries&&e.contentQueries(1,n[s],s)}}}function ti(t,e,n){ke()&&(function(t,e,n,r){const s=n.directiveStart,i=n.directiveEnd;t.firstCreatePass||Cn(n,e),Hr(r,e);const o=n.initialInputs;for(let a=s;a<i;a++){const r=t.data[a],i=ie(r);i&&pi(e,n,r);const l=Rn(e,t,a,n);Hr(l,e),null!==o&&fi(0,a-s,l,r,0,o),i&&(_e(n.index,e)[8]=l)}}(t,e,n,be(n,e)),128==(128&n.flags)&&function(t,e,n){const r=n.directiveStart,s=n.directiveEnd,i=n.index,o=xe.lFrame.currentDirectiveIndex;try{tn(i);for(let n=r;n<s;n++){const r=t.data[n],s=e[n];He(n),null===r.hostBindings&&0===r.hostVars&&null===r.hostAttrs||li(r,s)}}finally{tn(-1),He(o)}}(t,e,n))}function ei(t,e,n=be){const r=e.localNames;if(null!==r){let s=e.index+1;for(let i=0;i<r.length;i+=2){const o=r[i+1],a=-1===o?n(e,t):t[o];t[s++]=a}}}function ni(t){const e=t.tView;return null===e||e.incompleteFirstPass?t.tView=ri(1,null,t.template,t.decls,t.vars,t.directiveDefs,t.pipeDefs,t.viewQuery,t.schemas,t.consts):e}function ri(t,e,n,r,s,i,o,a,l,u){const c=Xt+r,h=c+s,d=function(t,e){const n=[];for(let r=0;r<e;r++)n.push(r<t?null:js);return n}(c,h),p="function"==typeof u?u():u;return d[1]={type:t,blueprint:d,template:n,queries:null,viewQuery:a,declTNode:e,data:d.slice().fill(null,c),bindingStartIndex:c,expandoStartIndex:h,hostBindingOpCodes:null,firstCreatePass:!0,firstUpdatePass:!0,staticViewQueries:!1,staticContentQueries:!1,preOrderHooks:null,preOrderCheckHooks:null,contentHooks:null,contentCheckHooks:null,viewHooks:null,viewCheckHooks:null,destroyHooks:null,cleanup:null,contentQueries:null,components:null,directiveRegistry:"function"==typeof i?i():i,pipeRegistry:"function"==typeof o?o():o,firstChild:null,schemas:l,consts:p,incompleteFirstPass:!1}}function si(t,e,n,r){const s=Si(e);null===n?s.push(r):(s.push(n),t.firstCreatePass&&xi(t).push(r,s.length-1))}function ii(t,e,n){for(let r in t)if(t.hasOwnProperty(r)){const s=t[r];(n=null===n?{}:n).hasOwnProperty(r)?n[r].push(e,s):n[r]=[e,s]}return n}function oi(t,e,n,r){let s=!1;if(ke()){const i=function(t,e,n){const r=t.directiveRegistry;let s=null;if(r)for(let i=0;i<r.length;i++){const o=r[i];Ps(n,o.selectors,!1)&&(s||(s=[]),Sn(Cn(n,e),t,o.type),ie(o)?(ui(t,n),s.unshift(o)):s.push(o))}return s}(t,e,n),o=null===r?null:{"":-1};if(null!==i){s=!0,hi(n,t.data.length,i.length);for(let t=0;t<i.length;t++){const e=i[t];e.providersResolver&&e.providersResolver(e)}let r=!1,a=!1,l=Zs(t,e,i.length,null);for(let s=0;s<i.length;s++){const u=i[s];n.mergedAttrs=fn(n.mergedAttrs,u.hostAttrs),di(t,n,e,l,u),ci(l,u,o),null!==u.contentQueries&&(n.flags|=8),null===u.hostBindings&&null===u.hostAttrs&&0===u.hostVars||(n.flags|=128);const c=u.type.prototype;!r&&(c.ngOnChanges||c.ngOnInit||c.ngDoCheck)&&((t.preOrderHooks||(t.preOrderHooks=[])).push(n.index),r=!0),a||!c.ngOnChanges&&!c.ngDoCheck||((t.preOrderCheckHooks||(t.preOrderCheckHooks=[])).push(n.index),a=!0),l++}!function(t,e){const n=e.directiveEnd,r=t.data,s=e.attrs,i=[];let o=null,a=null;for(let l=e.directiveStart;l<n;l++){const t=r[l],n=t.inputs,u=null===s||xs(e)?null:gi(n,s);i.push(u),o=ii(n,l,o),a=ii(t.outputs,l,a)}null!==o&&(o.hasOwnProperty("class")&&(e.flags|=16),o.hasOwnProperty("style")&&(e.flags|=32)),e.initialInputs=i,e.inputs=o,e.outputs=a}(t,n)}o&&function(t,e,n){if(e){const r=t.localNames=[];for(let t=0;t<e.length;t+=2){const s=n[e[t+1]];if(null==s)throw new at("301",`Export of name '${e[t+1]}' not found!`);r.push(e[t],s)}}}(n,r,o)}return n.mergedAttrs=fn(n.mergedAttrs,n.attrs),s}function ai(t,e,n,r,s,i){const o=i.hostBindings;if(o){let n=t.hostBindingOpCodes;null===n&&(n=t.hostBindingOpCodes=[]);const i=~e.index;(function(t){let e=t.length;for(;e>0;){const n=t[--e];if("number"==typeof n&&n<0)return n}return 0})(n)!=i&&n.push(i),n.push(r,s,o)}}function li(t,e){null!==t.hostBindings&&t.hostBindings(1,e)}function ui(t,e){e.flags|=2,(t.components||(t.components=[])).push(e.index)}function ci(t,e,n){if(n){if(e.exportAs)for(let r=0;r<e.exportAs.length;r++)n[e.exportAs[r]]=t;ie(e)&&(n[""]=t)}}function hi(t,e,n){t.flags|=1,t.directiveStart=e,t.directiveEnd=e+n,t.providerIndexes=e}function di(t,e,n,r,s){t.data[r]=s;const i=s.factory||(s.factory=oe(s.type)),o=new cn(i,ie(s),null);t.blueprint[r]=o,n[r]=o,ai(t,e,0,r,Zs(t,n,s.hostVars,js),s)}function pi(t,e,n){const r=be(e,t),s=ni(n),i=t[10],o=wi(t,Ws(t,s,null,n.onPush?64:16,r,e,i,i.createRenderer(r,n),null,null));t[e.index]=o}function fi(t,e,n,r,s,i){const o=i[e];if(null!==o){const t=r.setInput;for(let e=0;e<o.length;){const s=o[e++],i=o[e++],a=o[e++];null!==t?r.setInput(n,a,s,i):n[i]=a}}}function gi(t,e){let n=null,r=0;for(;r<e.length;){const s=e[r];if(0!==s)if(5!==s){if("number"==typeof s)break;t.hasOwnProperty(s)&&(null===n&&(n=[]),n.push(s,t[s],e[r+1])),r+=2}else r+=2;else r+=4}return n}function mi(t,e,n,r){return new Array(t,!0,!1,e,null,0,r,n,null,null)}function yi(t,e){const n=_e(e,t);if(De(n)){const t=n[1];80&n[2]?Ys(t,n,t.template,n[8]):n[5]>0&&vi(n)}}function vi(t){for(let n=Jr(t);null!==n;n=ts(n))for(let t=Jt;t<n.length;t++){const e=n[t];if(1024&e[2]){const t=e[1];Ys(t,e,t.template,e[8])}else e[5]>0&&vi(e)}const e=t[1].components;if(null!==e)for(let n=0;n<e.length;n++){const r=_e(e[n],t);De(r)&&r[5]>0&&vi(r)}}function bi(t,e){const n=_e(e,t),r=n[1];!function(t,e){for(let n=e.length;n<t.blueprint.length;n++)e.push(t.blueprint[n])}(r,n),Ks(r,n,n[8])}function wi(t,e){return t[13]?t[14][4]=e:t[13]=e,t[14]=e,e}function _i(t){for(;t;){t[2]|=64;const e=Xr(t);if(0!=(512&t[2])&&!e)return t;t=e}return null}function Ci(t,e,n){const r=e[10];r.begin&&r.begin();try{Ys(t,e,t.template,n)}catch(s){throw ki(e,s),s}finally{r.end&&r.end()}}function Di(t){!function(t){for(let e=0;e<t.components.length;e++){const n=t.components[e],r=$r(n),s=r[1];Qs(s,r,s.template,n)}}(t[8])}function Ei(t,e,n){ze(0),e(t,n)}const Ai=(()=>Promise.resolve(null))();function Si(t){return t[7]||(t[7]=[])}function xi(t){return t.cleanup||(t.cleanup=[])}function ki(t,e){const n=t[9],r=n?n.get(Gr,null):null;r&&r.handleError(e)}function Ti(t,e,n,r,s){for(let i=0;i<n.length;){const o=n[i++],a=n[i++],l=e[o],u=t.data[o];null!==u.setInput?u.setInput(l,s,r,a):l[a]=s}}function Fi(t,e,n){let r=n?t.styles:null,s=n?t.classes:null,i=0;if(null!==e)for(let o=0;o<e.length;o++){const t=e[o];"number"==typeof t?i=t:1==i?s=nt(s,t):2==i&&(r=nt(r,t+": "+e[++o]+";"))}n?t.styles=r:t.stylesWithoutHost=r,n?t.classes=s:t.classesWithoutHost=s}const Oi=new Hn("INJECTOR",-1);class Pi{get(t,e=Jn){if(e===Jn){const e=new Error(`NullInjectorError: No provider for ${et(t)}!`);throw e.name="NullInjectorError",e}return e}}const Ii=new Hn("Set Injector scope."),Ri={},Mi={};let ji;function Ni(){return void 0===ji&&(ji=new Pi),ji}function Vi(t,e=null,n=null,r){return new Li(t,n,e||Ni(),r)}class Li{constructor(t,e,n,r=null){this.parent=n,this.records=new Map,this.injectorDefTypes=new Set,this.onDestroy=new Set,this._destroyed=!1;const s=[];e&&Wn(e,n=>this.processProvider(n,t,e)),Wn([t],t=>this.processInjectorType(t,[],s)),this.records.set(Oi,Hi(void 0,this));const i=this.records.get(Ii);this.scope=null!=i?i.value:null,this.source=r||("object"==typeof t?null:et(t))}get destroyed(){return this._destroyed}destroy(){this.assertNotDestroyed(),this._destroyed=!0;try{this.onDestroy.forEach(t=>t.ngOnDestroy())}finally{this.records.clear(),this.onDestroy.clear(),this.injectorDefTypes.clear()}}get(t,e=Jn,n=wt.Default){this.assertNotDestroyed();const r=sr(this);try{if(!(n&wt.SkipSelf)){let e=this.records.get(t);if(void 0===e){const n=("function"==typeof(s=t)||"object"==typeof s&&s instanceof Hn)&&pt(t);e=n&&this.injectableDefInScope(n)?Hi(Bi(t),Ri):null,this.records.set(t,e)}if(null!=e)return this.hydrate(t,e)}return(n&wt.Self?Ni():this.parent).get(t,e=n&wt.Optional&&e===Jn?null:e)}catch(i){if("NullInjectorError"===i.name){if((i.ngTempTokenPath=i.ngTempTokenPath||[]).unshift(et(t)),r)throw i;return function(t,e,n,r){const s=t.ngTempTokenPath;throw e[er]&&s.unshift(e[er]),t.message=function(t,e,n,r=null){t=t&&"\n"===t.charAt(0)&&"\u0275"==t.charAt(1)?t.substr(2):t;let s=et(e);if(Array.isArray(e))s=e.map(et).join(" -> ");else if("object"==typeof e){let t=[];for(let n in e)if(e.hasOwnProperty(n)){let r=e[n];t.push(n+":"+("string"==typeof r?JSON.stringify(r):et(r)))}s=`{${t.join(", ")}}`}return`${n}${r?"("+r+")":""}[${s}]: ${t.replace(tr,"\n  ")}`}("\n"+t.message,s,n,r),t.ngTokenPath=s,t.ngTempTokenPath=null,t}(i,t,"R3InjectorError",this.source)}throw i}finally{sr(r)}var s}_resolveInjectorDefTypes(){this.injectorDefTypes.forEach(t=>this.get(t))}toString(){const t=[];return this.records.forEach((e,n)=>t.push(et(n))),`R3Injector[${t.join(", ")}]`}assertNotDestroyed(){if(this._destroyed)throw new Error("Injector has already been destroyed.")}processInjectorType(t,e,n){if(!(t=it(t)))return!1;let r=gt(t);const s=null==r&&t.ngModule||void 0,i=void 0===s?t:s,o=-1!==n.indexOf(i);if(void 0!==s&&(r=gt(s)),null==r)return!1;if(null!=r.imports&&!o){let t;n.push(i);try{Wn(r.imports,r=>{this.processInjectorType(r,e,n)&&(void 0===t&&(t=[]),t.push(r))})}finally{}if(void 0!==t)for(let e=0;e<t.length;e++){const{ngModule:n,providers:r}=t[e];Wn(r,t=>this.processProvider(t,n,r||It))}}this.injectorDefTypes.add(i);const a=oe(i)||(()=>new i);this.records.set(i,Hi(a,Ri));const l=r.providers;if(null!=l&&!o){const e=t;Wn(l,t=>this.processProvider(t,e,l))}return void 0!==s&&void 0!==t.providers}processProvider(t,e,n){let r=zi(t=it(t))?t:it(t&&t.provide);const s=function(t,e,n){return $i(t)?Hi(void 0,t.useValue):Hi(Ui(t),Ri)}(t);if(zi(t)||!0!==t.multi)this.records.get(r);else{let e=this.records.get(r);e||(e=Hi(void 0,Ri,!0),e.factory=()=>ar(e.multi),this.records.set(r,e)),r=t,e.multi.push(t)}this.records.set(r,s)}hydrate(t,e){var n;return e.value===Ri&&(e.value=Mi,e.value=e.factory()),"object"==typeof e.value&&e.value&&null!==(n=e.value)&&"object"==typeof n&&"function"==typeof n.ngOnDestroy&&this.onDestroy.add(e.value),e.value}injectableDefInScope(t){if(!t.providedIn)return!1;const e=it(t.providedIn);return"string"==typeof e?"any"===e||e===this.scope:this.injectorDefTypes.has(e)}}function Bi(t){const e=pt(t),n=null!==e?e.factory:oe(t);if(null!==n)return n;if(t instanceof Hn)throw new Error(`Token ${et(t)} is missing a \u0275prov definition.`);if(t instanceof Function)return function(t){const e=t.length;if(e>0){const n=Kn(e,"?");throw new Error(`Can't resolve all parameters for ${et(t)}: (${n.join(", ")}).`)}const n=function(t){const e=t&&(t[mt]||t[vt]);if(e){const n=function(t){if(t.hasOwnProperty("name"))return t.name;const e=(""+t).match(/^function\s*([^\s(]+)/);return null===e?"":e[1]}(t);return console.warn(`DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${n}" class.`),e}return null}(t);return null!==n?()=>n.factory(t):()=>new t}(t);throw new Error("unreachable")}function Ui(t,e,n){let r;if(zi(t)){const e=it(t);return oe(e)||Bi(e)}if($i(t))r=()=>it(t.useValue);else if((s=t)&&s.useFactory)r=()=>t.useFactory(...ar(t.deps||[]));else if(function(t){return!(!t||!t.useExisting)}(t))r=()=>or(it(t.useExisting));else{const e=it(t&&(t.useClass||t.provide));if(!function(t){return!!t.deps}(t))return oe(e)||Bi(e);r=()=>new e(...ar(t.deps))}var s;return r}function Hi(t,e,n=!1){return{factory:t,value:e,multi:n?[]:void 0}}function $i(t){return null!==t&&"object"==typeof t&&nr in t}function zi(t){return"function"==typeof t}const qi=function(t,e,n){return function(t,e=null,n=null,r){const s=Vi(t,e,n,r);return s._resolveInjectorDefTypes(),s}({name:n},e,t,n)};let Wi=(()=>{class t{static create(t,e){return Array.isArray(t)?qi(t,e,""):qi(t.providers,t.parent,t.name||"")}}return t.THROW_IF_NOT_FOUND=Jn,t.NULL=new Pi,t.\u0275prov=ht({token:t,providedIn:"any",factory:()=>or(Oi)}),t.__NG_ELEMENT_ID__=-1,t})();function Gi(t,e){nn($r(t)[1],Pe())}function Zi(t){let e=Object.getPrototypeOf(t.type.prototype).constructor,n=!0;const r=[t];for(;e;){let s;if(ie(t))s=e.\u0275cmp||e.\u0275dir;else{if(e.\u0275cmp)throw new Error("Directives cannot inherit Components");s=e.\u0275dir}if(s){if(n){r.push(s);const e=t;e.inputs=Ki(t.inputs),e.declaredInputs=Ki(t.declaredInputs),e.outputs=Ki(t.outputs);const n=s.hostBindings;n&&Xi(t,n);const i=s.viewQuery,o=s.contentQueries;if(i&&Yi(t,i),o&&Qi(t,o),tt(t.inputs,s.inputs),tt(t.declaredInputs,s.declaredInputs),tt(t.outputs,s.outputs),ie(s)&&s.data.animation){const e=t.data;e.animation=(e.animation||[]).concat(s.data.animation)}}const e=s.features;if(e)for(let r=0;r<e.length;r++){const s=e[r];s&&s.ngInherit&&s(t),s===Zi&&(n=!1)}}e=Object.getPrototypeOf(e)}!function(t){let e=0,n=null;for(let r=t.length-1;r>=0;r--){const s=t[r];s.hostVars=e+=s.hostVars,s.hostAttrs=fn(s.hostAttrs,n=fn(n,s.hostAttrs))}}(r)}function Ki(t){return t===Pt?{}:t===It?[]:t}function Yi(t,e){const n=t.viewQuery;t.viewQuery=n?(t,r)=>{e(t,r),n(t,r)}:e}function Qi(t,e){const n=t.contentQueries;t.contentQueries=n?(t,r,s)=>{e(t,r,s),n(t,r,s)}:e}function Xi(t,e){const n=t.hostBindings;t.hostBindings=n?(t,r)=>{e(t,r),n(t,r)}:e}let Ji=null;function to(){if(!Ji){const t=Ot.Symbol;if(t&&t.iterator)Ji=t.iterator;else{const t=Object.getOwnPropertyNames(Map.prototype);for(let e=0;e<t.length;++e){const n=t[e];"entries"!==n&&"size"!==n&&Map.prototype[n]===Map.prototype.entries&&(Ji=n)}}}return Ji}function eo(t){return!!no(t)&&(Array.isArray(t)||!(t instanceof Map)&&to()in t)}function no(t){return null!==t&&("function"==typeof t||"object"==typeof t)}function ro(t,e,n){return!Object.is(t[e],n)&&(t[e]=n,!0)}function so(t,e,n,r){const s=Te();return ro(s,Le(),e)&&(Fe(),function(t,e,n,r,s,i){const o=be(t,e);!function(t,e,n,r,s,i,o){if(null==i)ge(t)?t.removeAttribute(e,s,n):e.removeAttribute(s);else{const a=null==o?lt(i):o(i,r||"",s);ge(t)?t.setAttribute(e,s,a,n):n?e.setAttributeNS(n,s,a):e.setAttribute(s,a)}}(e[11],o,i,t.value,n,r,s)}(en(),s,t,e,n,r)),so}function io(t,e,n,r){return ro(t,Le(),n)?e+lt(n)+r:js}function oo(t,e,n,r,s,i,o,a){const l=Te(),u=Fe(),c=t+Xt,h=u.firstCreatePass?function(t,e,n,r,s,i,o,a,l){const u=e.consts,c=Gs(e,t,4,o||null,Ee(u,a));oi(e,n,c,Ee(u,l)),nn(e,c);const h=c.tViews=ri(2,c,r,s,i,e.directiveRegistry,e.pipeRegistry,null,e.schemas,u);return null!==e.queries&&(e.queries.template(e,c),h.queries=e.queries.embeddedTView(c)),c}(c,u,l,e,n,r,s,i,o):u.data[c];Re(h,!1);const d=l[11].createComment("");gs(u,l,d,h),Hr(d,l),wi(l,l[c]=mi(d,l,d,h)),se(h)&&ti(u,l,h),null!=o&&ei(l,h,a)}function ao(t,e=wt.Default){const n=Te();return null===n?or(t,e):Tn(Pe(),n,it(t),e)}function lo(t,e,n){const r=Te();return ro(r,Le(),e)&&function(t,e,n,r,s,i,o,a){const l=be(e,n);let u,c=e.inputs;var h;null!=c&&(u=c[r])?(Ti(t,n,u,r,s),re(e)&&function(t,e){const n=_e(e,t);16&n[2]||(n[2]|=64)}(n,e.index)):3&e.type&&(r="class"===(h=r)?"className":"for"===h?"htmlFor":"formaction"===h?"formAction":"innerHtml"===h?"innerHTML":"readonly"===h?"readOnly":"tabindex"===h?"tabIndex":h,s=null!=o?o(s,e.value||"",r):s,ge(i)?i.setProperty(l,r,s):pn(r)||(l.setProperty?l.setProperty(r,s):l[r]=s))}(Fe(),en(),r,t,e,r[11],n),lo}function uo(t,e,n,r,s){const i=s?"class":"style";Ti(t,n,e.inputs[i],i,r)}function co(t,e,n,r){const s=Te(),i=Fe(),o=Xt+t,a=s[11],l=s[o]=rs(a,e,xe.lFrame.currentNamespace),u=i.firstCreatePass?function(t,e,n,r,s,i,o){const a=e.consts,l=Gs(e,t,2,s,Ee(a,i));return oi(e,n,l,Ee(a,o)),null!==l.attrs&&Fi(l,l.attrs,!1),null!==l.mergedAttrs&&Fi(l,l.mergedAttrs,!0),null!==e.queries&&e.queries.elementStart(e,l),l}(o,i,s,0,e,n,r):i.data[o];Re(u,!0);const c=u.mergedAttrs;null!==c&&hn(a,l,c);const h=u.classes;null!==h&&Ds(a,l,h);const d=u.styles;null!==d&&Cs(a,l,d),64!=(64&u.flags)&&gs(i,s,l,u),0===xe.lFrame.elementDepthCount&&Hr(l,s),xe.lFrame.elementDepthCount++,se(u)&&(ti(i,s,u),Js(i,u,s)),null!==r&&ei(s,u)}function ho(){let t=Pe();Me()?je():(t=t.parent,Re(t,!1));const e=t;xe.lFrame.elementDepthCount--;const n=Fe();n.firstCreatePass&&(nn(n,t),ne(t)&&n.queries.elementEnd(t)),null!=e.classesWithoutHost&&function(t){return 0!=(16&t.flags)}(e)&&uo(n,e,Te(),e.classesWithoutHost,!0),null!=e.stylesWithoutHost&&function(t){return 0!=(32&t.flags)}(e)&&uo(n,e,Te(),e.stylesWithoutHost,!1)}function po(t,e,n,r){co(t,e,n,r),ho()}function fo(t,e,n){(function(t,e,n){const r=Te(),s=Fe(),i=t+Xt,o=s.firstCreatePass?function(t,e,n,r,s){const i=e.consts,o=Ee(i,r),a=Gs(e,t,8,"ng-container",o);return null!==o&&Fi(a,o,!0),oi(e,n,a,Ee(i,s)),null!==e.queries&&e.queries.elementStart(e,a),a}(i,s,r,e,n):s.data[i];Re(o,!0);const a=r[i]=r[11].createComment("");gs(s,r,a,o),Hr(a,r),se(o)&&(ti(s,r,o),Js(s,o,r)),null!=n&&ei(r,o)})(t,e,n),function(){let t=Pe();const e=Fe();Me()?je():(t=t.parent,Re(t,!1)),e.firstCreatePass&&(nn(e,t),ne(t)&&e.queries.elementEnd(t))}()}function go(){return Te()}function mo(t){return!!t&&"function"==typeof t.then}const yo=function(t){return!!t&&"function"==typeof t.subscribe};function vo(t,e,n,r){const s=Te(),i=Fe(),o=Pe();return function(t,e,n,r,s,i,o,a){const l=se(r),u=t.firstCreatePass&&xi(t),c=Si(e);let h=!0;if(3&r.type||a){const d=be(r,e),p=a?a(d):d,f=c.length,g=a?t=>a(ye(t[r.index])):r.index;if(ge(n)){let o=null;if(!a&&l&&(o=function(t,e,n,r){const s=t.cleanup;if(null!=s)for(let i=0;i<s.length-1;i+=2){const t=s[i];if(t===n&&s[i+1]===r){const t=e[7],n=s[i+2];return t.length>n?t[n]:null}"string"==typeof t&&(i+=2)}return null}(t,e,s,r.index)),null!==o)(o.__ngLastListenerFn__||o).__ngNextListenerFn__=i,o.__ngLastListenerFn__=i,h=!1;else{i=wo(r,e,0,i,!1);const t=n.listen(p,s,i);c.push(i,t),u&&u.push(s,g,f,f+1)}}else i=wo(r,e,0,i,!0),p.addEventListener(s,i,o),c.push(i),u&&u.push(s,g,f,o)}else i=wo(r,e,0,i,!1);const d=r.outputs;let p;if(h&&null!==d&&(p=d[s])){const t=p.length;if(t)for(let n=0;n<t;n+=2){const t=e[p[n]][p[n+1]].subscribe(i),o=c.length;c.push(i,t),u&&u.push(s,r.index,o,-(o+1))}}}(i,s,s[11],o,t,e,!!n,r),vo}function bo(t,e,n,r){try{return!1!==n(r)}catch(s){return ki(t,s),!1}}function wo(t,e,n,r,s){return function n(i){if(i===Function)return r;const o=2&t.flags?_e(t.index,e):e;0==(32&e[2])&&_i(o);let a=bo(e,0,r,i),l=n.__ngNextListenerFn__;for(;l;)a=bo(e,0,l,i)&&a,l=l.__ngNextListenerFn__;return s&&!1===a&&(i.preventDefault(),i.returnValue=!1),a}}function _o(t=1){return function(t){return(xe.lFrame.contextLView=function(t,e){for(;t>0;)e=e[15],t--;return e}(t,xe.lFrame.contextLView))[8]}(t)}function Co(t,e){let n=null;const r=function(t){const e=t.attrs;if(null!=e){const t=e.indexOf(5);if(0==(1&t))return e[t+1]}return null}(t);for(let s=0;s<e.length;s++){const i=e[s];if("*"!==i){if(null===r?Ps(t,i,!0):Is(r,i))return s}else n=s}return n}function Do(t){const e=Te()[16][6];if(!e.projection){const n=e.projection=Kn(t?t.length:1,null),r=n.slice();let s=e.child;for(;null!==s;){const e=t?Co(s,t):0;null!==e&&(r[e]?r[e].projectionNext=s:n[e]=s,r[e]=s),s=s.next}}}function Eo(t,e=0,n){const r=Te(),s=Fe(),i=Gs(s,Xt+t,16,null,n||null);null===i.projection&&(i.projection=e),je(),64!=(64&i.flags)&&function(t,e,n){_s(e[11],0,e,n,ls(t,n,e),ps(n.parent||e[6],n,e))}(s,r,i)}function Ao(t,e,n,r,s){const i=t[n+1],o=null===e;let a=r?Bs(i):Hs(i),l=!1;for(;0!==a&&(!1===l||o);){const n=t[a+1];So(t[a],e)&&(l=!0,t[a+1]=r?zs(n):Us(n)),a=r?Bs(n):Hs(n)}l&&(t[n+1]=r?Us(i):zs(i))}function So(t,e){return null===t||null==e||(Array.isArray(t)?t[1]:t)===e||!(!Array.isArray(t)||"string"!=typeof e)&&Xn(t,e)>=0}const xo={textEnd:0,key:0,keyEnd:0,value:0,valueEnd:0};function ko(t){return t.substring(xo.key,xo.keyEnd)}function To(t,e){const n=xo.textEnd;return n===e?-1:(e=xo.keyEnd=function(t,e,n){for(;e<n&&t.charCodeAt(e)>32;)e++;return e}(t,xo.key=e,n),Fo(t,e,n))}function Fo(t,e,n){for(;e<n&&t.charCodeAt(e)<=32;)e++;return e}function Oo(t,e){return function(t,e,n,r){const s=Te(),i=Fe(),o=Be(2);i.firstUpdatePass&&Mo(i,t,o,true),e!==js&&ro(s,o,e)&&Vo(i,i.data[Je()],s,s[11],t,s[o+1]=function(t,e){return null==t||"object"==typeof t&&(t=et(yr(t))),t}(e),true,o)}(t,e),Oo}function Po(t,e){for(let n=function(t){return function(t){xo.key=0,xo.keyEnd=0,xo.value=0,xo.valueEnd=0,xo.textEnd=t.length}(t),To(t,Fo(t,0,xo.textEnd))}(e);n>=0;n=To(e,n))Yn(t,ko(e),!0)}function Io(t,e,n,r){const s=Fe(),i=Be(2);s.firstUpdatePass&&Mo(s,null,i,r);const o=Te();if(n!==js&&ro(o,i,n)){const a=s.data[Je()];if(Uo(a,r)&&!Ro(s,i)){let t=r?a.classesWithoutHost:a.stylesWithoutHost;null!==t&&(n=nt(t,n||"")),uo(s,a,o,n,r)}else!function(t,e,n,r,s,i,o,a){s===js&&(s=It);let l=0,u=0,c=0<s.length?s[0]:null,h=0<i.length?i[0]:null;for(;null!==c||null!==h;){const d=l<s.length?s[l+1]:void 0,p=u<i.length?i[u+1]:void 0;let f,g=null;c===h?(l+=2,u+=2,d!==p&&(g=h,f=p)):null===h||null!==c&&c<h?(l+=2,g=c):(u+=2,g=h,f=p),null!==g&&Vo(t,e,n,r,g,f,o,a),c=l<s.length?s[l]:null,h=u<i.length?i[u]:null}}(s,a,o,o[11],o[i+1],o[i+1]=function(t,e,n){if(null==n||""===n)return It;const r=[],s=yr(n);if(Array.isArray(s))for(let i=0;i<s.length;i++)t(r,s[i],!0);else if("object"==typeof s)for(const i in s)s.hasOwnProperty(i)&&t(r,i,s[i]);else"string"==typeof s&&e(r,s);return r}(t,e,n),r,i)}}function Ro(t,e){return e>=t.expandoStartIndex}function Mo(t,e,n,r){const s=t.data;if(null===s[n+1]){const i=s[Je()],o=Ro(t,n);Uo(i,r)&&null===e&&!o&&(e=!1),e=function(t,e,n,r){const s=function(t){const e=xe.lFrame.currentDirectiveIndex;return-1===e?null:t[e]}(t);let i=r?e.residualClasses:e.residualStyles;if(null===s)0===(r?e.classBindings:e.styleBindings)&&(n=No(n=jo(null,t,e,n,r),e.attrs,r),i=null);else{const o=e.directiveStylingLast;if(-1===o||t[o]!==s)if(n=jo(s,t,e,n,r),null===i){let n=function(t,e,n){const r=n?e.classBindings:e.styleBindings;if(0!==Hs(r))return t[Bs(r)]}(t,e,r);void 0!==n&&Array.isArray(n)&&(n=jo(null,t,e,n[1],r),n=No(n,e.attrs,r),function(t,e,n,r){t[Bs(n?e.classBindings:e.styleBindings)]=r}(t,e,r,n))}else i=function(t,e,n){let r;const s=e.directiveEnd;for(let i=1+e.directiveStylingLast;i<s;i++)r=No(r,t[i].hostAttrs,n);return No(r,e.attrs,n)}(t,e,r)}return void 0!==i&&(r?e.residualClasses=i:e.residualStyles=i),n}(s,i,e,r),function(t,e,n,r,s,i){let o=i?e.classBindings:e.styleBindings,a=Bs(o),l=Hs(o);t[r]=n;let u,c=!1;if(Array.isArray(n)){const t=n;u=t[1],(null===u||Xn(t,u)>0)&&(c=!0)}else u=n;if(s)if(0!==l){const e=Bs(t[a+1]);t[r+1]=Ls(e,a),0!==e&&(t[e+1]=$s(t[e+1],r)),t[a+1]=131071&t[a+1]|r<<17}else t[r+1]=Ls(a,0),0!==a&&(t[a+1]=$s(t[a+1],r)),a=r;else t[r+1]=Ls(l,0),0===a?a=r:t[l+1]=$s(t[l+1],r),l=r;c&&(t[r+1]=Us(t[r+1])),Ao(t,u,r,!0),Ao(t,u,r,!1),function(t,e,n,r,s){const i=s?t.residualClasses:t.residualStyles;null!=i&&"string"==typeof e&&Xn(i,e)>=0&&(n[r+1]=zs(n[r+1]))}(e,u,t,r,i),o=Ls(a,l),i?e.classBindings=o:e.styleBindings=o}(s,i,e,n,o,r)}}function jo(t,e,n,r,s){let i=null;const o=n.directiveEnd;let a=n.directiveStylingLast;for(-1===a?a=n.directiveStart:a++;a<o&&(i=e[a],r=No(r,i.hostAttrs,s),i!==t);)a++;return null!==t&&(n.directiveStylingLast=a),r}function No(t,e,n){const r=n?1:2;let s=-1;if(null!==e)for(let i=0;i<e.length;i++){const o=e[i];"number"==typeof o?s=o:s===r&&(Array.isArray(t)||(t=void 0===t?[]:["",t]),Yn(t,o,!!n||e[++i]))}return void 0===t?null:t}function Vo(t,e,n,r,s,i,o,a){if(!(3&e.type))return;const l=t.data,u=l[a+1];Bo(1==(1&u)?Lo(l,e,n,s,Hs(u),o):void 0)||(Bo(i)||2==(2&u)&&(i=Lo(l,null,n,s,a,o)),function(t,e,n,r,s){const i=ge(t);if(e)s?i?t.addClass(n,r):n.classList.add(r):i?t.removeClass(n,r):n.classList.remove(r);else{let e=-1===r.indexOf("-")?void 0:Yr.DashCase;if(null==s)i?t.removeStyle(n,r,e):n.style.removeProperty(r);else{const o="string"==typeof s&&s.endsWith("!important");o&&(s=s.slice(0,-10),e|=Yr.Important),i?t.setStyle(n,r,s,e):n.style.setProperty(r,s,o?"important":"")}}}(r,o,ve(Je(),n),s,i))}function Lo(t,e,n,r,s,i){const o=null===e;let a;for(;s>0;){const e=t[s],i=Array.isArray(e),l=i?e[1]:e,u=null===l;let c=n[s+1];c===js&&(c=u?It:void 0);let h=u?Qn(c,r):l===r?c:void 0;if(i&&!Bo(h)&&(h=Qn(e,r)),Bo(h)&&(a=h,o))return a;const d=t[s+1];s=o?Bs(d):Hs(d)}if(null!==e){let t=i?e.residualClasses:e.residualStyles;null!=t&&(a=Qn(t,r))}return a}function Bo(t){return void 0!==t}function Uo(t,e){return 0!=(t.flags&(e?16:32))}function Ho(t,e=""){const n=Te(),r=Fe(),s=t+Xt,i=r.firstCreatePass?Gs(r,s,1,e,null):r.data[s],o=n[s]=function(t,e){return ge(t)?t.createText(e):t.createTextNode(e)}(n[11],e);gs(r,n,o,i),Re(i,!1)}function $o(t){return zo("",t,""),$o}function zo(t,e,n){const r=Te(),s=io(r,t,e,n);return s!==js&&function(t,e,n){const r=ve(e,t);!function(t,e,n){ge(t)?t.setValue(e,n):e.textContent=n}(t[11],r,n)}(r,Je(),s),zo}function qo(t,e,n){Io(Yn,Po,io(Te(),t,e,n),!0)}const Wo=void 0;var Go=["en",[["a","p"],["AM","PM"],Wo],[["AM","PM"],Wo,Wo],[["S","M","T","W","T","F","S"],["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],["Su","Mo","Tu","We","Th","Fr","Sa"]],Wo,[["J","F","M","A","M","J","J","A","S","O","N","D"],["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],["January","February","March","April","May","June","July","August","September","October","November","December"]],Wo,[["B","A"],["BC","AD"],["Before Christ","Anno Domini"]],0,[6,0],["M/d/yy","MMM d, y","MMMM d, y","EEEE, MMMM d, y"],["h:mm a","h:mm:ss a","h:mm:ss a z","h:mm:ss a zzzz"],["{1}, {0}",Wo,"{1} 'at' {0}",Wo],[".",",",";","%","+","-","E","\xd7","\u2030","\u221e","NaN",":"],["#,##0.###","#,##0%","\xa4#,##0.00","#E0"],"USD","$","US Dollar",{},"ltr",function(t){let e=Math.floor(Math.abs(t)),n=t.toString().replace(/^[^.]*\.?/,"").length;return 1===e&&0===n?1:5}];let Zo={};function Ko(t){const e=function(t){return t.toLowerCase().replace(/_/g,"-")}(t);let n=Yo(e);if(n)return n;const r=e.split("-")[0];if(n=Yo(r),n)return n;if("en"===r)return Go;throw new Error(`Missing locale data for the locale "${t}".`)}function Yo(t){return t in Zo||(Zo[t]=Ot.ng&&Ot.ng.common&&Ot.ng.common.locales&&Ot.ng.common.locales[t]),Zo[t]}var Qo=function(t){return t[t.LocaleId=0]="LocaleId",t[t.DayPeriodsFormat=1]="DayPeriodsFormat",t[t.DayPeriodsStandalone=2]="DayPeriodsStandalone",t[t.DaysFormat=3]="DaysFormat",t[t.DaysStandalone=4]="DaysStandalone",t[t.MonthsFormat=5]="MonthsFormat",t[t.MonthsStandalone=6]="MonthsStandalone",t[t.Eras=7]="Eras",t[t.FirstDayOfWeek=8]="FirstDayOfWeek",t[t.WeekendRange=9]="WeekendRange",t[t.DateFormat=10]="DateFormat",t[t.TimeFormat=11]="TimeFormat",t[t.DateTimeFormat=12]="DateTimeFormat",t[t.NumberSymbols=13]="NumberSymbols",t[t.NumberFormats=14]="NumberFormats",t[t.CurrencyCode=15]="CurrencyCode",t[t.CurrencySymbol=16]="CurrencySymbol",t[t.CurrencyName=17]="CurrencyName",t[t.Currencies=18]="Currencies",t[t.Directionality=19]="Directionality",t[t.PluralCase=20]="PluralCase",t[t.ExtraData=21]="ExtraData",t}({});const Xo="en-US";let Jo=Xo;function ta(t){var e,n;n="Expected localeId to be defined",null==(e=t)&&function(t,e,n,r){throw new Error(`ASSERTION ERROR: ${t} [Expected=> null != ${e} <=Actual]`)}(n,e),"string"==typeof t&&(Jo=t.toLowerCase().replace(/_/g,"-"))}function ea(t,e,n,r,s){if(t=it(t),Array.isArray(t))for(let i=0;i<t.length;i++)ea(t[i],e,n,r,s);else{const i=Fe(),o=Te();let a=zi(t)?t:it(t.provide),l=Ui(t);const u=Pe(),c=1048575&u.providerIndexes,h=u.directiveStart,d=u.providerIndexes>>20;if(zi(t)||!t.multi){const r=new cn(l,s,ao),p=sa(a,e,s?c:c+d,h);-1===p?(Sn(Cn(u,o),i,a),na(i,t,e.length),e.push(a),u.directiveStart++,u.directiveEnd++,s&&(u.providerIndexes+=1048576),n.push(r),o.push(r)):(n[p]=r,o[p]=r)}else{const p=sa(a,e,c+d,h),f=sa(a,e,c,c+d),g=p>=0&&n[p],m=f>=0&&n[f];if(s&&!m||!s&&!g){Sn(Cn(u,o),i,a);const c=function(t,e,n,r,s){const i=new cn(t,n,ao);return i.multi=[],i.index=e,i.componentProviders=0,ra(i,s,r&&!n),i}(s?oa:ia,n.length,s,r,l);!s&&m&&(n[f].providerFactory=c),na(i,t,e.length,0),e.push(a),u.directiveStart++,u.directiveEnd++,s&&(u.providerIndexes+=1048576),n.push(c),o.push(c)}else na(i,t,p>-1?p:f,ra(n[s?f:p],l,!s&&r));!s&&r&&m&&n[f].componentProviders++}}}function na(t,e,n,r){const s=zi(e);if(s||e.useClass){const i=(e.useClass||e).prototype.ngOnDestroy;if(i){const o=t.destroyHooks||(t.destroyHooks=[]);if(!s&&e.multi){const t=o.indexOf(n);-1===t?o.push(n,[r,i]):o[t+1].push(r,i)}else o.push(n,i)}}}function ra(t,e,n){return n&&t.componentProviders++,t.multi.push(e)-1}function sa(t,e,n,r){for(let s=n;s<r;s++)if(e[s]===t)return s;return-1}function ia(t,e,n,r){return aa(this.multi,[])}function oa(t,e,n,r){const s=this.multi;let i;if(this.providerFactory){const t=this.providerFactory.componentProviders,e=Rn(n,n[1],this.providerFactory.index,r);i=e.slice(0,t),aa(s,i);for(let n=t;n<e.length;n++)i.push(e[n])}else i=[],aa(s,i);return i}function aa(t,e){for(let n=0;n<t.length;n++)e.push((0,t[n])());return e}function la(t,e=[]){return n=>{n.providersResolver=(n,r)=>function(t,e,n){const r=Fe();if(r.firstCreatePass){const s=ie(t);ea(n,r.data,r.blueprint,s,!0),ea(e,r.data,r.blueprint,s,!1)}}(n,r?r(t):t,e)}}class ua{}class ca{resolveComponentFactory(t){throw function(t){const e=Error(`No component factory found for ${et(t)}. Did you add it to @NgModule.entryComponents?`);return e.ngComponent=t,e}(t)}}let ha=(()=>{class t{}return t.NULL=new ca,t})();function da(...t){}function pa(t,e){return new ga(be(t,e))}const fa=function(){return pa(Pe(),Te())};let ga=(()=>{class t{constructor(t){this.nativeElement=t}}return t.__NG_ELEMENT_ID__=fa,t})();function ma(t){return t instanceof ga?t.nativeElement:t}class ya{}let va=(()=>{class t{}return t.__NG_ELEMENT_ID__=()=>ba(),t})();const ba=function(){const t=Te(),e=_e(Pe().index,t);return function(t){return t[11]}(te(e)?e:t)};let wa=(()=>{class t{}return t.\u0275prov=ht({token:t,providedIn:"root",factory:()=>null}),t})();class _a{constructor(t){this.full=t,this.major=t.split(".")[0],this.minor=t.split(".")[1],this.patch=t.split(".").slice(2).join(".")}}const Ca=new _a("12.0.1");class Da{constructor(){}supports(t){return eo(t)}create(t){return new Aa(t)}}const Ea=(t,e)=>e;class Aa{constructor(t){this.length=0,this._linkedRecords=null,this._unlinkedRecords=null,this._previousItHead=null,this._itHead=null,this._itTail=null,this._additionsHead=null,this._additionsTail=null,this._movesHead=null,this._movesTail=null,this._removalsHead=null,this._removalsTail=null,this._identityChangesHead=null,this._identityChangesTail=null,this._trackByFn=t||Ea}forEachItem(t){let e;for(e=this._itHead;null!==e;e=e._next)t(e)}forEachOperation(t){let e=this._itHead,n=this._removalsHead,r=0,s=null;for(;e||n;){const i=!n||e&&e.currentIndex<Ta(n,r,s)?e:n,o=Ta(i,r,s),a=i.currentIndex;if(i===n)r--,n=n._nextRemoved;else if(e=e._next,null==i.previousIndex)r++;else{s||(s=[]);const t=o-r,e=a-r;if(t!=e){for(let n=0;n<t;n++){const r=n<s.length?s[n]:s[n]=0,i=r+n;e<=i&&i<t&&(s[n]=r+1)}s[i.previousIndex]=e-t}}o!==a&&t(i,o,a)}}forEachPreviousItem(t){let e;for(e=this._previousItHead;null!==e;e=e._nextPrevious)t(e)}forEachAddedItem(t){let e;for(e=this._additionsHead;null!==e;e=e._nextAdded)t(e)}forEachMovedItem(t){let e;for(e=this._movesHead;null!==e;e=e._nextMoved)t(e)}forEachRemovedItem(t){let e;for(e=this._removalsHead;null!==e;e=e._nextRemoved)t(e)}forEachIdentityChange(t){let e;for(e=this._identityChangesHead;null!==e;e=e._nextIdentityChange)t(e)}diff(t){if(null==t&&(t=[]),!eo(t))throw new Error(`Error trying to diff '${et(t)}'. Only arrays and iterables are allowed`);return this.check(t)?this:null}onDestroy(){}check(t){this._reset();let e,n,r,s=this._itHead,i=!1;if(Array.isArray(t)){this.length=t.length;for(let e=0;e<this.length;e++)n=t[e],r=this._trackByFn(e,n),null!==s&&Object.is(s.trackById,r)?(i&&(s=this._verifyReinsertion(s,n,r,e)),Object.is(s.item,n)||this._addIdentityChange(s,n)):(s=this._mismatch(s,n,r,e),i=!0),s=s._next}else e=0,function(t,e){if(Array.isArray(t))for(let n=0;n<t.length;n++)e(t[n]);else{const n=t[to()]();let r;for(;!(r=n.next()).done;)e(r.value)}}(t,t=>{r=this._trackByFn(e,t),null!==s&&Object.is(s.trackById,r)?(i&&(s=this._verifyReinsertion(s,t,r,e)),Object.is(s.item,t)||this._addIdentityChange(s,t)):(s=this._mismatch(s,t,r,e),i=!0),s=s._next,e++}),this.length=e;return this._truncate(s),this.collection=t,this.isDirty}get isDirty(){return null!==this._additionsHead||null!==this._movesHead||null!==this._removalsHead||null!==this._identityChangesHead}_reset(){if(this.isDirty){let t;for(t=this._previousItHead=this._itHead;null!==t;t=t._next)t._nextPrevious=t._next;for(t=this._additionsHead;null!==t;t=t._nextAdded)t.previousIndex=t.currentIndex;for(this._additionsHead=this._additionsTail=null,t=this._movesHead;null!==t;t=t._nextMoved)t.previousIndex=t.currentIndex;this._movesHead=this._movesTail=null,this._removalsHead=this._removalsTail=null,this._identityChangesHead=this._identityChangesTail=null}}_mismatch(t,e,n,r){let s;return null===t?s=this._itTail:(s=t._prev,this._remove(t)),null!==(t=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null))?(Object.is(t.item,e)||this._addIdentityChange(t,e),this._reinsertAfter(t,s,r)):null!==(t=null===this._linkedRecords?null:this._linkedRecords.get(n,r))?(Object.is(t.item,e)||this._addIdentityChange(t,e),this._moveAfter(t,s,r)):t=this._addAfter(new Sa(e,n),s,r),t}_verifyReinsertion(t,e,n,r){let s=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null);return null!==s?t=this._reinsertAfter(s,t._prev,r):t.currentIndex!=r&&(t.currentIndex=r,this._addToMoves(t,r)),t}_truncate(t){for(;null!==t;){const e=t._next;this._addToRemovals(this._unlink(t)),t=e}null!==this._unlinkedRecords&&this._unlinkedRecords.clear(),null!==this._additionsTail&&(this._additionsTail._nextAdded=null),null!==this._movesTail&&(this._movesTail._nextMoved=null),null!==this._itTail&&(this._itTail._next=null),null!==this._removalsTail&&(this._removalsTail._nextRemoved=null),null!==this._identityChangesTail&&(this._identityChangesTail._nextIdentityChange=null)}_reinsertAfter(t,e,n){null!==this._unlinkedRecords&&this._unlinkedRecords.remove(t);const r=t._prevRemoved,s=t._nextRemoved;return null===r?this._removalsHead=s:r._nextRemoved=s,null===s?this._removalsTail=r:s._prevRemoved=r,this._insertAfter(t,e,n),this._addToMoves(t,n),t}_moveAfter(t,e,n){return this._unlink(t),this._insertAfter(t,e,n),this._addToMoves(t,n),t}_addAfter(t,e,n){return this._insertAfter(t,e,n),this._additionsTail=null===this._additionsTail?this._additionsHead=t:this._additionsTail._nextAdded=t,t}_insertAfter(t,e,n){const r=null===e?this._itHead:e._next;return t._next=r,t._prev=e,null===r?this._itTail=t:r._prev=t,null===e?this._itHead=t:e._next=t,null===this._linkedRecords&&(this._linkedRecords=new ka),this._linkedRecords.put(t),t.currentIndex=n,t}_remove(t){return this._addToRemovals(this._unlink(t))}_unlink(t){null!==this._linkedRecords&&this._linkedRecords.remove(t);const e=t._prev,n=t._next;return null===e?this._itHead=n:e._next=n,null===n?this._itTail=e:n._prev=e,t}_addToMoves(t,e){return t.previousIndex===e||(this._movesTail=null===this._movesTail?this._movesHead=t:this._movesTail._nextMoved=t),t}_addToRemovals(t){return null===this._unlinkedRecords&&(this._unlinkedRecords=new ka),this._unlinkedRecords.put(t),t.currentIndex=null,t._nextRemoved=null,null===this._removalsTail?(this._removalsTail=this._removalsHead=t,t._prevRemoved=null):(t._prevRemoved=this._removalsTail,this._removalsTail=this._removalsTail._nextRemoved=t),t}_addIdentityChange(t,e){return t.item=e,this._identityChangesTail=null===this._identityChangesTail?this._identityChangesHead=t:this._identityChangesTail._nextIdentityChange=t,t}}class Sa{constructor(t,e){this.item=t,this.trackById=e,this.currentIndex=null,this.previousIndex=null,this._nextPrevious=null,this._prev=null,this._next=null,this._prevDup=null,this._nextDup=null,this._prevRemoved=null,this._nextRemoved=null,this._nextAdded=null,this._nextMoved=null,this._nextIdentityChange=null}}class xa{constructor(){this._head=null,this._tail=null}add(t){null===this._head?(this._head=this._tail=t,t._nextDup=null,t._prevDup=null):(this._tail._nextDup=t,t._prevDup=this._tail,t._nextDup=null,this._tail=t)}get(t,e){let n;for(n=this._head;null!==n;n=n._nextDup)if((null===e||e<=n.currentIndex)&&Object.is(n.trackById,t))return n;return null}remove(t){const e=t._prevDup,n=t._nextDup;return null===e?this._head=n:e._nextDup=n,null===n?this._tail=e:n._prevDup=e,null===this._head}}class ka{constructor(){this.map=new Map}put(t){const e=t.trackById;let n=this.map.get(e);n||(n=new xa,this.map.set(e,n)),n.add(t)}get(t,e){const n=this.map.get(t);return n?n.get(t,e):null}remove(t){const e=t.trackById;return this.map.get(e).remove(t)&&this.map.delete(e),t}get isEmpty(){return 0===this.map.size}clear(){this.map.clear()}}function Ta(t,e,n){const r=t.previousIndex;if(null===r)return r;let s=0;return n&&r<n.length&&(s=n[r]),r+e+s}class Fa{constructor(){}supports(t){return t instanceof Map||no(t)}create(){return new Oa}}class Oa{constructor(){this._records=new Map,this._mapHead=null,this._appendAfter=null,this._previousMapHead=null,this._changesHead=null,this._changesTail=null,this._additionsHead=null,this._additionsTail=null,this._removalsHead=null,this._removalsTail=null}get isDirty(){return null!==this._additionsHead||null!==this._changesHead||null!==this._removalsHead}forEachItem(t){let e;for(e=this._mapHead;null!==e;e=e._next)t(e)}forEachPreviousItem(t){let e;for(e=this._previousMapHead;null!==e;e=e._nextPrevious)t(e)}forEachChangedItem(t){let e;for(e=this._changesHead;null!==e;e=e._nextChanged)t(e)}forEachAddedItem(t){let e;for(e=this._additionsHead;null!==e;e=e._nextAdded)t(e)}forEachRemovedItem(t){let e;for(e=this._removalsHead;null!==e;e=e._nextRemoved)t(e)}diff(t){if(t){if(!(t instanceof Map||no(t)))throw new Error(`Error trying to diff '${et(t)}'. Only maps and objects are allowed`)}else t=new Map;return this.check(t)?this:null}onDestroy(){}check(t){this._reset();let e=this._mapHead;if(this._appendAfter=null,this._forEach(t,(t,n)=>{if(e&&e.key===n)this._maybeAddToChanges(e,t),this._appendAfter=e,e=e._next;else{const r=this._getOrCreateRecordForKey(n,t);e=this._insertBeforeOrAppend(e,r)}}),e){e._prev&&(e._prev._next=null),this._removalsHead=e;for(let t=e;null!==t;t=t._nextRemoved)t===this._mapHead&&(this._mapHead=null),this._records.delete(t.key),t._nextRemoved=t._next,t.previousValue=t.currentValue,t.currentValue=null,t._prev=null,t._next=null}return this._changesTail&&(this._changesTail._nextChanged=null),this._additionsTail&&(this._additionsTail._nextAdded=null),this.isDirty}_insertBeforeOrAppend(t,e){if(t){const n=t._prev;return e._next=t,e._prev=n,t._prev=e,n&&(n._next=e),t===this._mapHead&&(this._mapHead=e),this._appendAfter=t,t}return this._appendAfter?(this._appendAfter._next=e,e._prev=this._appendAfter):this._mapHead=e,this._appendAfter=e,null}_getOrCreateRecordForKey(t,e){if(this._records.has(t)){const n=this._records.get(t);this._maybeAddToChanges(n,e);const r=n._prev,s=n._next;return r&&(r._next=s),s&&(s._prev=r),n._next=null,n._prev=null,n}const n=new Pa(t);return this._records.set(t,n),n.currentValue=e,this._addToAdditions(n),n}_reset(){if(this.isDirty){let t;for(this._previousMapHead=this._mapHead,t=this._previousMapHead;null!==t;t=t._next)t._nextPrevious=t._next;for(t=this._changesHead;null!==t;t=t._nextChanged)t.previousValue=t.currentValue;for(t=this._additionsHead;null!=t;t=t._nextAdded)t.previousValue=t.currentValue;this._changesHead=this._changesTail=null,this._additionsHead=this._additionsTail=null,this._removalsHead=null}}_maybeAddToChanges(t,e){Object.is(e,t.currentValue)||(t.previousValue=t.currentValue,t.currentValue=e,this._addToChanges(t))}_addToAdditions(t){null===this._additionsHead?this._additionsHead=this._additionsTail=t:(this._additionsTail._nextAdded=t,this._additionsTail=t)}_addToChanges(t){null===this._changesHead?this._changesHead=this._changesTail=t:(this._changesTail._nextChanged=t,this._changesTail=t)}_forEach(t,e){t instanceof Map?t.forEach(e):Object.keys(t).forEach(n=>e(t[n],n))}}class Pa{constructor(t){this.key=t,this.previousValue=null,this.currentValue=null,this._nextPrevious=null,this._next=null,this._prev=null,this._nextAdded=null,this._nextRemoved=null,this._nextChanged=null}}function Ia(){return new Ra([new Da])}let Ra=(()=>{class t{constructor(t){this.factories=t}static create(e,n){if(null!=n){const t=n.factories.slice();e=e.concat(t)}return new t(e)}static extend(e){return{provide:t,useFactory:n=>t.create(e,n||Ia()),deps:[[t,new hr,new cr]]}}find(t){const e=this.factories.find(e=>e.supports(t));if(null!=e)return e;throw new Error(`Cannot find a differ supporting object '${t}' of type '${n=t,n.name||typeof n}'`);var n}}return t.\u0275prov=ht({token:t,providedIn:"root",factory:Ia}),t})();function Ma(){return new ja([new Fa])}let ja=(()=>{class t{constructor(t){this.factories=t}static create(e,n){if(n){const t=n.factories.slice();e=e.concat(t)}return new t(e)}static extend(e){return{provide:t,useFactory:n=>t.create(e,n||Ma()),deps:[[t,new hr,new cr]]}}find(t){const e=this.factories.find(e=>e.supports(t));if(e)return e;throw new Error(`Cannot find a differ supporting object '${t}'`)}}return t.\u0275prov=ht({token:t,providedIn:"root",factory:Ma}),t})();function Na(t,e,n,r,s=!1){for(;null!==n;){const i=e[n.index];if(null!==i&&r.push(ye(i)),ee(i))for(let t=Jt;t<i.length;t++){const e=i[t],n=e[1].firstChild;null!==n&&Na(e[1],e,n,r)}const o=n.type;if(8&o)Na(t,e,n.child,r);else if(32&o){const t=Qr(n,e);let s;for(;s=t();)r.push(s)}else if(16&o){const t=ys(e,n);if(Array.isArray(t))r.push(...t);else{const n=Xr(e[16]);Na(n[1],n,t,r,!0)}}n=s?n.projectionNext:n.next}return r}class Va{constructor(t,e){this._lView=t,this._cdRefInjectingView=e,this._appRef=null,this._attachedToViewContainer=!1}get rootNodes(){const t=this._lView,e=t[1];return Na(e,t,e.firstChild,[])}get context(){return this._lView[8]}set context(t){this._lView[8]=t}get destroyed(){return 256==(256&this._lView[2])}destroy(){if(this._appRef)this._appRef.detachView(this);else if(this._attachedToViewContainer){const t=this._lView[3];if(ee(t)){const e=t[8],n=e?e.indexOf(this):-1;n>-1&&(is(t,n),Zn(e,n))}this._attachedToViewContainer=!1}os(this._lView[1],this._lView)}onDestroy(t){si(this._lView[1],this._lView,null,t)}markForCheck(){_i(this._cdRefInjectingView||this._lView)}detach(){this._lView[2]&=-129}reattach(){this._lView[2]|=128}detectChanges(){Ci(this._lView[1],this._lView,this.context)}checkNoChanges(){!function(t,e,n){Ve(!0);try{Ci(t,e,n)}finally{Ve(!1)}}(this._lView[1],this._lView,this.context)}attachToViewContainerRef(){if(this._appRef)throw new Error("This view is already attached directly to the ApplicationRef!");this._attachedToViewContainer=!0}detachFromAppRef(){var t;this._appRef=null,ws(this._lView[1],t=this._lView,t[11],2,null,null)}attachToAppRef(t){if(this._attachedToViewContainer)throw new Error("This view is already attached to a ViewContainer!");this._appRef=t}}class La extends Va{constructor(t){super(t),this._view=t}detectChanges(){Di(this._view)}checkNoChanges(){!function(t){Ve(!0);try{Di(t)}finally{Ve(!1)}}(this._view)}get context(){return null}}const Ba=function(t){return function(t,e,n){if(re(t)&&!n){const n=_e(t.index,e);return new Va(n,n)}return 47&t.type?new Va(e[16],e):null}(Pe(),Te(),16==(16&t))};let Ua=(()=>{class t{}return t.__NG_ELEMENT_ID__=Ba,t})();const Ha=[new Fa],$a=new Ra([new Da]),za=new ja(Ha),qa=function(){return Ka(Pe(),Te())};let Wa=(()=>{class t{}return t.__NG_ELEMENT_ID__=qa,t})();const Ga=Wa,Za=class extends Ga{constructor(t,e,n){super(),this._declarationLView=t,this._declarationTContainer=e,this.elementRef=n}createEmbeddedView(t){const e=this._declarationTContainer.tViews,n=Ws(this._declarationLView,e,t,16,null,e.declTNode,null,null,null,null);n[17]=this._declarationLView[this._declarationTContainer.index];const r=this._declarationLView[19];return null!==r&&(n[19]=r.createEmbeddedView(e)),Ks(e,n,t),new Va(n)}};function Ka(t,e){return 4&t.type?new Za(e,t,pa(t,e)):null}class Ya{}class Qa{}const Xa=function(){return sl(Pe(),Te())};let Ja=(()=>{class t{}return t.__NG_ELEMENT_ID__=Xa,t})();const tl=Ja,el=class extends tl{constructor(t,e,n){super(),this._lContainer=t,this._hostTNode=e,this._hostLView=n}get element(){return pa(this._hostTNode,this._hostLView)}get injector(){return new Nn(this._hostTNode,this._hostLView)}get parentInjector(){const t=An(this._hostTNode,this._hostLView);if(mn(t)){const e=vn(t,this._hostLView),n=yn(t);return new Nn(e[1].data[n+8],e)}return new Nn(null,this._hostLView)}clear(){for(;this.length>0;)this.remove(this.length-1)}get(t){const e=nl(this._lContainer);return null!==e&&e[t]||null}get length(){return this._lContainer.length-Jt}createEmbeddedView(t,e,n){const r=t.createEmbeddedView(e||{});return this.insert(r,n),r}createComponent(t,e,n,r,s){const i=n||this.parentInjector;if(!s&&null==t.ngModule&&i){const t=i.get(Ya,null);t&&(s=t)}const o=t.create(i,r,void 0,s);return this.insert(o.hostView,e),o}insert(t,e){const n=t._lView,r=n[1];if(ee(n[3])){const e=this.indexOf(t);if(-1!==e)this.detach(e);else{const e=n[3],r=new el(e,e[6],e[3]);r.detach(r.indexOf(t))}}const s=this._adjustIndex(e),i=this._lContainer;!function(t,e,n,r){const s=Jt+r,i=n.length;r>0&&(n[s-1][4]=e),r<i-Jt?(e[4]=n[s],Gn(n,Jt+r,e)):(n.push(e),e[4]=null),e[3]=n;const o=e[17];null!==o&&n!==o&&function(t,e){const n=t[9];e[16]!==e[3][3][16]&&(t[2]=!0),null===n?t[9]=[e]:n.push(e)}(o,e);const a=e[19];null!==a&&a.insertView(t),e[2]|=128}(r,n,i,s);const o=vs(s,i),a=n[11],l=ds(a,i[7]);return null!==l&&function(t,e,n,r,s,i){r[0]=s,r[6]=e,ws(t,r,n,1,s,i)}(r,i[6],a,n,l,o),t.attachToViewContainerRef(),Gn(rl(i),s,t),t}move(t,e){return this.insert(t,e)}indexOf(t){const e=nl(this._lContainer);return null!==e?e.indexOf(t):-1}remove(t){const e=this._adjustIndex(t,-1),n=is(this._lContainer,e);n&&(Zn(rl(this._lContainer),e),os(n[1],n))}detach(t){const e=this._adjustIndex(t,-1),n=is(this._lContainer,e);return n&&null!=Zn(rl(this._lContainer),e)?new Va(n):null}_adjustIndex(t,e=0){return null==t?this.length+e:t}};function nl(t){return t[8]}function rl(t){return t[8]||(t[8]=[])}function sl(t,e){let n;const r=e[t.index];if(ee(r))n=r;else{let s;if(8&t.type)s=ye(r);else{const n=e[11];s=n.createComment("");const r=be(t,e);us(n,ds(n,r),s,function(t,e){return ge(t)?t.nextSibling(e):e.nextSibling}(n,r),!1)}e[t.index]=n=mi(r,e,s,t),wi(e,n)}return new el(n,t,e)}const il={};class ol extends ha{constructor(t){super(),this.ngModule=t}resolveComponentFactory(t){const e=Yt(t);return new ul(e,this.ngModule)}}function al(t){const e=[];for(let n in t)t.hasOwnProperty(n)&&e.push({propName:t[n],templateName:n});return e}const ll=new Hn("SCHEDULER_TOKEN",{providedIn:"root",factory:()=>Zr});class ul extends ua{constructor(t,e){super(),this.componentDef=t,this.ngModule=e,this.componentType=t.type,this.selector=t.selectors.map(Ms).join(","),this.ngContentSelectors=t.ngContentSelectors?t.ngContentSelectors:[],this.isBoundToModule=!!e}get inputs(){return al(this.componentDef.inputs)}get outputs(){return al(this.componentDef.outputs)}create(t,e,n,r){const s=(r=r||this.ngModule)?function(t,e){return{get:(n,r,s)=>{const i=t.get(n,il,s);return i!==il||r===il?i:e.get(n,r,s)}}}(t,r.injector):t,i=s.get(ya,me),o=s.get(wa,null),a=i.createRenderer(null,this.componentDef),l=this.componentDef.selectors[0][0]||"div",u=n?function(t,e,n){if(ge(t))return t.selectRootElement(e,n===St.ShadowDom);let r="string"==typeof e?t.querySelector(e):e;return r.textContent="",r}(a,n,this.componentDef.encapsulation):rs(i.createRenderer(null,this.componentDef),l,function(t){const e=t.toLowerCase();return"svg"===e?"http://www.w3.org/2000/svg":"math"===e?"http://www.w3.org/1998/MathML/":null}(l)),c=this.componentDef.onPush?576:528,h={components:[],scheduler:Zr,clean:Ai,playerHandler:null,flags:0},d=ri(0,null,null,1,0,null,null,null,null,null),p=Ws(null,d,h,c,null,null,i,a,o,s);let f,g;Ge(p);try{const t=function(t,e,n,r,s,i){const o=n[1];n[20]=t;const a=Gs(o,20,2,"#host",null),l=a.mergedAttrs=e.hostAttrs;null!==l&&(Fi(a,l,!0),null!==t&&(hn(s,t,l),null!==a.classes&&Ds(s,t,a.classes),null!==a.styles&&Cs(s,t,a.styles)));const u=r.createRenderer(t,e),c=Ws(n,ni(e),null,e.onPush?64:16,n[20],a,r,u,null,null);return o.firstCreatePass&&(Sn(Cn(a,n),o,e.type),ui(o,a),hi(a,n.length,1)),wi(n,c),n[20]=c}(u,this.componentDef,p,i,a);if(u)if(n)hn(a,u,["ng-version",Ca.full]);else{const{attrs:t,classes:e}=function(t){const e=[],n=[];let r=1,s=2;for(;r<t.length;){let i=t[r];if("string"==typeof i)2===s?""!==i&&e.push(i,t[++r]):8===s&&n.push(i);else{if(!Fs(s))break;s=i}r++}return{attrs:e,classes:n}}(this.componentDef.selectors[0]);t&&hn(a,u,t),e&&e.length>0&&Ds(a,u,e.join(" "))}if(g=we(d,Xt),void 0!==e){const t=g.projection=[];for(let n=0;n<this.ngContentSelectors.length;n++){const r=e[n];t.push(null!=r?Array.from(r):null)}}f=function(t,e,n,r,s){const i=n[1],o=function(t,e,n){const r=Pe();t.firstCreatePass&&(n.providersResolver&&n.providersResolver(n),di(t,r,e,Zs(t,e,1,null),n));const s=Rn(e,t,r.directiveStart,r);Hr(s,e);const i=be(r,e);return i&&Hr(i,e),s}(i,n,e);if(r.components.push(o),t[8]=o,s&&s.forEach(t=>t(o,e)),e.contentQueries){const t=Pe();e.contentQueries(1,o,t.directiveStart)}const a=Pe();return!i.firstCreatePass||null===e.hostBindings&&null===e.hostAttrs||(tn(a.index),ai(n[1],a,0,a.directiveStart,a.directiveEnd,e),li(e,o)),o}(t,this.componentDef,p,h,[Gi]),Ks(d,p,null)}finally{Xe()}return new cl(this.componentType,f,pa(g,p),p,g)}}class cl extends class{}{constructor(t,e,n,r,s){super(),this.location=n,this._rootLView=r,this._tNode=s,this.instance=e,this.hostView=this.changeDetectorRef=new La(r),this.componentType=t}get injector(){return new Nn(this._tNode,this._rootLView)}destroy(){this.hostView.destroy()}onDestroy(t){this.hostView.onDestroy(t)}}const hl=new Map;class dl extends Ya{constructor(t,e){super(),this._parent=e,this._bootstrapComponents=[],this.injector=this,this.destroyCbs=[],this.componentFactoryResolver=new ol(this);const n=Qt(t),r=t[Vt]||null;r&&ta(r),this._bootstrapComponents=Kr(n.bootstrap),this._r3Injector=Vi(t,e,[{provide:Ya,useValue:this},{provide:ha,useValue:this.componentFactoryResolver}],et(t)),this._r3Injector._resolveInjectorDefTypes(),this.instance=this.get(t)}get(t,e=Wi.THROW_IF_NOT_FOUND,n=wt.Default){return t===Wi||t===Ya||t===Oi?this:this._r3Injector.get(t,e,n)}destroy(){const t=this._r3Injector;!t.destroyed&&t.destroy(),this.destroyCbs.forEach(t=>t()),this.destroyCbs=null}onDestroy(t){this.destroyCbs.push(t)}}class pl extends Qa{constructor(t){super(),this.moduleType=t,null!==Qt(t)&&function(t){const e=new Set;!function t(n){const r=Qt(n,!0),s=r.id;null!==s&&(function(t,e,n){if(e&&e!==n)throw new Error(`Duplicate module registered for ${t} - ${et(e)} vs ${et(e.name)}`)}(s,hl.get(s),n),hl.set(s,n));const i=Kr(r.imports);for(const o of i)e.has(o)||(e.add(o),t(o))}(t)}(t)}create(t){return new dl(this.moduleType,t)}}function fl(t){return e=>{setTimeout(t,void 0,e)}}const gl=class extends D{constructor(t=!1){super(),this.__isAsync=t}emit(t){super.next(t)}subscribe(t,e,n){var r,s,i;let o=t,a=e||(()=>null),l=n;if(t&&"object"==typeof t){const e=t;o=null===(r=e.next)||void 0===r?void 0:r.bind(e),a=null===(s=e.error)||void 0===s?void 0:s.bind(e),l=null===(i=e.complete)||void 0===i?void 0:i.bind(e)}this.__isAsync&&(a=fl(a),o&&(o=fl(o)),l&&(l=fl(l)));const u=super.subscribe({next:o,error:a,complete:l});return t instanceof h&&t.add(u),u}};function ml(){return this._results[to()]()}class yl{constructor(t=!1){this._emitDistinctChangesOnly=t,this.dirty=!0,this._results=[],this._changesDetected=!1,this._changes=null,this.length=0,this.first=void 0,this.last=void 0;const e=to(),n=yl.prototype;n[e]||(n[e]=ml)}get changes(){return this._changes||(this._changes=new gl)}get(t){return this._results[t]}map(t){return this._results.map(t)}filter(t){return this._results.filter(t)}find(t){return this._results.find(t)}reduce(t,e){return this._results.reduce(t,e)}forEach(t){this._results.forEach(t)}some(t){return this._results.some(t)}toArray(){return this._results.slice()}toString(){return this._results.toString()}reset(t,e){const n=this;n.dirty=!1;const r=qn(t);(this._changesDetected=!function(t,e,n){if(t.length!==e.length)return!1;for(let r=0;r<t.length;r++){let s=t[r],i=e[r];if(n&&(s=n(s),i=n(i)),i!==s)return!1}return!0}(n._results,r,e))&&(n._results=r,n.length=r.length,n.last=r[this.length-1],n.first=r[0])}notifyOnChanges(){!this._changes||!this._changesDetected&&this._emitDistinctChangesOnly||this._changes.emit(this)}setDirty(){this.dirty=!0}destroy(){this.changes.complete(),this.changes.unsubscribe()}}class vl{constructor(t){this.queryList=t,this.matches=null}clone(){return new vl(this.queryList)}setDirty(){this.queryList.setDirty()}}class bl{constructor(t=[]){this.queries=t}createEmbeddedView(t){const e=t.queries;if(null!==e){const n=null!==t.contentQueries?t.contentQueries[0]:e.length,r=[];for(let t=0;t<n;t++){const n=e.getByIndex(t);r.push(this.queries[n.indexInDeclarationView].clone())}return new bl(r)}return null}insertView(t){this.dirtyQueriesWithMatches(t)}detachView(t){this.dirtyQueriesWithMatches(t)}dirtyQueriesWithMatches(t){for(let e=0;e<this.queries.length;e++)null!==Pl(t,e).matches&&this.queries[e].setDirty()}}class wl{constructor(t,e,n=null){this.predicate=t,this.flags=e,this.read=n}}class _l{constructor(t=[]){this.queries=t}elementStart(t,e){for(let n=0;n<this.queries.length;n++)this.queries[n].elementStart(t,e)}elementEnd(t){for(let e=0;e<this.queries.length;e++)this.queries[e].elementEnd(t)}embeddedTView(t){let e=null;for(let n=0;n<this.length;n++){const r=null!==e?e.length:0,s=this.getByIndex(n).embeddedTView(t,r);s&&(s.indexInDeclarationView=n,null!==e?e.push(s):e=[s])}return null!==e?new _l(e):null}template(t,e){for(let n=0;n<this.queries.length;n++)this.queries[n].template(t,e)}getByIndex(t){return this.queries[t]}get length(){return this.queries.length}track(t){this.queries.push(t)}}class Cl{constructor(t,e=-1){this.metadata=t,this.matches=null,this.indexInDeclarationView=-1,this.crossesNgTemplate=!1,this._appliesToNextNode=!0,this._declarationNodeIndex=e}elementStart(t,e){this.isApplyingToNode(e)&&this.matchTNode(t,e)}elementEnd(t){this._declarationNodeIndex===t.index&&(this._appliesToNextNode=!1)}template(t,e){this.elementStart(t,e)}embeddedTView(t,e){return this.isApplyingToNode(t)?(this.crossesNgTemplate=!0,this.addMatch(-t.index,e),new Cl(this.metadata)):null}isApplyingToNode(t){if(this._appliesToNextNode&&1!=(1&this.metadata.flags)){const e=this._declarationNodeIndex;let n=t.parent;for(;null!==n&&8&n.type&&n.index!==e;)n=n.parent;return e===(null!==n?n.index:-1)}return this._appliesToNextNode}matchTNode(t,e){const n=this.metadata.predicate;if(Array.isArray(n))for(let r=0;r<n.length;r++){const s=n[r];this.matchTNodeWithReadOption(t,e,Dl(e,s)),this.matchTNodeWithReadOption(t,e,In(e,t,s,!1,!1))}else n===Wa?4&e.type&&this.matchTNodeWithReadOption(t,e,-1):this.matchTNodeWithReadOption(t,e,In(e,t,n,!1,!1))}matchTNodeWithReadOption(t,e,n){if(null!==n){const r=this.metadata.read;if(null!==r)if(r===ga||r===Ja||r===Wa&&4&e.type)this.addMatch(e.index,-2);else{const n=In(e,t,r,!1,!1);null!==n&&this.addMatch(e.index,n)}else this.addMatch(e.index,n)}}addMatch(t,e){null===this.matches?this.matches=[t,e]:this.matches.push(t,e)}}function Dl(t,e){const n=t.localNames;if(null!==n)for(let r=0;r<n.length;r+=2)if(n[r]===e)return n[r+1];return null}function El(t,e,n,r){return-1===n?function(t,e){return 11&t.type?pa(t,e):4&t.type?Ka(t,e):null}(e,t):-2===n?function(t,e,n){return n===ga?pa(e,t):n===Wa?Ka(e,t):n===Ja?sl(e,t):void 0}(t,e,r):Rn(t,t[1],n,e)}function Al(t,e,n,r){const s=e[19].queries[r];if(null===s.matches){const r=t.data,i=n.matches,o=[];for(let t=0;t<i.length;t+=2){const s=i[t];o.push(s<0?null:El(e,r[s],i[t+1],n.metadata.read))}s.matches=o}return s.matches}function Sl(t,e,n,r){const s=t.queries.getByIndex(n),i=s.matches;if(null!==i){const o=Al(t,e,s,n);for(let t=0;t<i.length;t+=2){const n=i[t];if(n>0)r.push(o[t/2]);else{const s=i[t+1],o=e[-n];for(let t=Jt;t<o.length;t++){const e=o[t];e[17]===e[3]&&Sl(e[1],e,s,r)}if(null!==o[9]){const t=o[9];for(let e=0;e<t.length;e++){const n=t[e];Sl(n[1],n,s,r)}}}}}return r}function xl(t){const e=Te(),n=Fe(),r=$e();ze(r+1);const s=Pl(n,r);if(t.dirty&&Ce(e)===(2==(2&s.metadata.flags))){if(null===s.matches)t.reset([]);else{const i=s.crossesNgTemplate?Sl(n,e,r,[]):Al(n,e,s,r);t.reset(i,ma),t.notifyOnChanges()}return!0}return!1}function kl(t,e,n){const r=Fe();r.firstCreatePass&&(Ol(r,new wl(t,e,n),-1),2==(2&e)&&(r.staticViewQueries=!0)),Fl(r,Te(),e)}function Tl(){return t=Te(),e=$e(),t[19].queries[e].queryList;var t,e}function Fl(t,e,n){const r=new yl(4==(4&n));si(t,e,r,r.destroy),null===e[19]&&(e[19]=new bl),e[19].queries.push(new vl(r))}function Ol(t,e,n){null===t.queries&&(t.queries=new _l),t.queries.track(new Cl(e,n))}function Pl(t,e){return t.queries.getByIndex(e)}function Il(t,e){return Ka(t,e)}const Rl=new Hn("Application Initializer");let Ml=(()=>{class t{constructor(t){this.appInits=t,this.resolve=da,this.reject=da,this.initialized=!1,this.done=!1,this.donePromise=new Promise((t,e)=>{this.resolve=t,this.reject=e})}runInitializers(){if(this.initialized)return;const t=[],e=()=>{this.done=!0,this.resolve()};if(this.appInits)for(let n=0;n<this.appInits.length;n++){const e=this.appInits[n]();if(mo(e))t.push(e);else if(yo(e)){const n=new Promise((t,n)=>{e.subscribe({complete:t,error:n})});t.push(n)}}Promise.all(t).then(()=>{e()}).catch(t=>{this.reject(t)}),0===t.length&&e(),this.initialized=!0}}return t.\u0275fac=function(e){return new(e||t)(or(Rl,8))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const jl=new Hn("AppId"),Nl={provide:jl,useFactory:function(){return`${Vl()}${Vl()}${Vl()}`},deps:[]};function Vl(){return String.fromCharCode(97+Math.floor(25*Math.random()))}const Ll=new Hn("Platform Initializer"),Bl=new Hn("Platform ID"),Ul=new Hn("appBootstrapListener");let Hl=(()=>{class t{log(t){console.log(t)}warn(t){console.warn(t)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const $l=new Hn("LocaleId"),zl=new Hn("DefaultCurrencyCode");class ql{constructor(t,e){this.ngModuleFactory=t,this.componentFactories=e}}const Wl=function(t){return new pl(t)},Gl=Wl,Zl=function(t){return Promise.resolve(Wl(t))},Kl=function(t){const e=Wl(t),n=Kr(Qt(t).declarations).reduce((t,e)=>{const n=Yt(e);return n&&t.push(new ul(n)),t},[]);return new ql(e,n)},Yl=Kl,Ql=function(t){return Promise.resolve(Kl(t))};let Xl=(()=>{class t{constructor(){this.compileModuleSync=Gl,this.compileModuleAsync=Zl,this.compileModuleAndAllComponentsSync=Yl,this.compileModuleAndAllComponentsAsync=Ql}clearCache(){}clearCacheFor(t){}getModuleId(t){}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const Jl=(()=>Promise.resolve(0))();function tu(t){"undefined"==typeof Zone?Jl.then(()=>{t&&t.apply(null,null)}):Zone.current.scheduleMicroTask("scheduleMicrotask",t)}class eu{constructor({enableLongStackTrace:t=!1,shouldCoalesceEventChangeDetection:e=!1,shouldCoalesceRunChangeDetection:n=!1}){if(this.hasPendingMacrotasks=!1,this.hasPendingMicrotasks=!1,this.isStable=!0,this.onUnstable=new gl(!1),this.onMicrotaskEmpty=new gl(!1),this.onStable=new gl(!1),this.onError=new gl(!1),"undefined"==typeof Zone)throw new Error("In this configuration Angular requires Zone.js");Zone.assertZonePatched();const r=this;r._nesting=0,r._outer=r._inner=Zone.current,Zone.TaskTrackingZoneSpec&&(r._inner=r._inner.fork(new Zone.TaskTrackingZoneSpec)),t&&Zone.longStackTraceZoneSpec&&(r._inner=r._inner.fork(Zone.longStackTraceZoneSpec)),r.shouldCoalesceEventChangeDetection=!n&&e,r.shouldCoalesceRunChangeDetection=n,r.lastRequestAnimationFrameId=-1,r.nativeRequestAnimationFrame=function(){let t=Ot.requestAnimationFrame,e=Ot.cancelAnimationFrame;if("undefined"!=typeof Zone&&t&&e){const n=t[Zone.__symbol__("OriginalDelegate")];n&&(t=n);const r=e[Zone.__symbol__("OriginalDelegate")];r&&(e=r)}return{nativeRequestAnimationFrame:t,nativeCancelAnimationFrame:e}}().nativeRequestAnimationFrame,function(t){const e=()=>{!function(t){t.isCheckStableRunning||-1!==t.lastRequestAnimationFrameId||(t.lastRequestAnimationFrameId=t.nativeRequestAnimationFrame.call(Ot,()=>{t.fakeTopEventTask||(t.fakeTopEventTask=Zone.root.scheduleEventTask("fakeTopEventTask",()=>{t.lastRequestAnimationFrameId=-1,su(t),t.isCheckStableRunning=!0,ru(t),t.isCheckStableRunning=!1},void 0,()=>{},()=>{})),t.fakeTopEventTask.invoke()}),su(t))}(t)};t._inner=t._inner.fork({name:"angular",properties:{isAngularZone:!0},onInvokeTask:(n,r,s,i,o,a)=>{try{return iu(t),n.invokeTask(s,i,o,a)}finally{(t.shouldCoalesceEventChangeDetection&&"eventTask"===i.type||t.shouldCoalesceRunChangeDetection)&&e(),ou(t)}},onInvoke:(n,r,s,i,o,a,l)=>{try{return iu(t),n.invoke(s,i,o,a,l)}finally{t.shouldCoalesceRunChangeDetection&&e(),ou(t)}},onHasTask:(e,n,r,s)=>{e.hasTask(r,s),n===r&&("microTask"==s.change?(t._hasPendingMicrotasks=s.microTask,su(t),ru(t)):"macroTask"==s.change&&(t.hasPendingMacrotasks=s.macroTask))},onHandleError:(e,n,r,s)=>(e.handleError(r,s),t.runOutsideAngular(()=>t.onError.emit(s)),!1)})}(r)}static isInAngularZone(){return!0===Zone.current.get("isAngularZone")}static assertInAngularZone(){if(!eu.isInAngularZone())throw new Error("Expected to be in Angular Zone, but it is not!")}static assertNotInAngularZone(){if(eu.isInAngularZone())throw new Error("Expected to not be in Angular Zone, but it is!")}run(t,e,n){return this._inner.run(t,e,n)}runTask(t,e,n,r){const s=this._inner,i=s.scheduleEventTask("NgZoneEvent: "+r,t,nu,da,da);try{return s.runTask(i,e,n)}finally{s.cancelTask(i)}}runGuarded(t,e,n){return this._inner.runGuarded(t,e,n)}runOutsideAngular(t){return this._outer.run(t)}}const nu={};function ru(t){if(0==t._nesting&&!t.hasPendingMicrotasks&&!t.isStable)try{t._nesting++,t.onMicrotaskEmpty.emit(null)}finally{if(t._nesting--,!t.hasPendingMicrotasks)try{t.runOutsideAngular(()=>t.onStable.emit(null))}finally{t.isStable=!0}}}function su(t){t.hasPendingMicrotasks=!!(t._hasPendingMicrotasks||(t.shouldCoalesceEventChangeDetection||t.shouldCoalesceRunChangeDetection)&&-1!==t.lastRequestAnimationFrameId)}function iu(t){t._nesting++,t.isStable&&(t.isStable=!1,t.onUnstable.emit(null))}function ou(t){t._nesting--,ru(t)}class au{constructor(){this.hasPendingMicrotasks=!1,this.hasPendingMacrotasks=!1,this.isStable=!0,this.onUnstable=new gl,this.onMicrotaskEmpty=new gl,this.onStable=new gl,this.onError=new gl}run(t,e,n){return t.apply(e,n)}runGuarded(t,e,n){return t.apply(e,n)}runOutsideAngular(t){return t()}runTask(t,e,n,r){return t.apply(e,n)}}let lu=(()=>{class t{constructor(t){this._ngZone=t,this._pendingCount=0,this._isZoneStable=!0,this._didWork=!1,this._callbacks=[],this.taskTrackingZone=null,this._watchAngularEvents(),t.run(()=>{this.taskTrackingZone="undefined"==typeof Zone?null:Zone.current.get("TaskTrackingZone")})}_watchAngularEvents(){this._ngZone.onUnstable.subscribe({next:()=>{this._didWork=!0,this._isZoneStable=!1}}),this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.subscribe({next:()=>{eu.assertNotInAngularZone(),tu(()=>{this._isZoneStable=!0,this._runCallbacksIfReady()})}})})}increasePendingRequestCount(){return this._pendingCount+=1,this._didWork=!0,this._pendingCount}decreasePendingRequestCount(){if(this._pendingCount-=1,this._pendingCount<0)throw new Error("pending async requests below zero");return this._runCallbacksIfReady(),this._pendingCount}isStable(){return this._isZoneStable&&0===this._pendingCount&&!this._ngZone.hasPendingMacrotasks}_runCallbacksIfReady(){if(this.isStable())tu(()=>{for(;0!==this._callbacks.length;){let t=this._callbacks.pop();clearTimeout(t.timeoutId),t.doneCb(this._didWork)}this._didWork=!1});else{let t=this.getPendingTasks();this._callbacks=this._callbacks.filter(e=>!e.updateCb||!e.updateCb(t)||(clearTimeout(e.timeoutId),!1)),this._didWork=!0}}getPendingTasks(){return this.taskTrackingZone?this.taskTrackingZone.macroTasks.map(t=>({source:t.source,creationLocation:t.creationLocation,data:t.data})):[]}addCallback(t,e,n){let r=-1;e&&e>0&&(r=setTimeout(()=>{this._callbacks=this._callbacks.filter(t=>t.timeoutId!==r),t(this._didWork,this.getPendingTasks())},e)),this._callbacks.push({doneCb:t,timeoutId:r,updateCb:n})}whenStable(t,e,n){if(n&&!this.taskTrackingZone)throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?');this.addCallback(t,e,n),this._runCallbacksIfReady()}getPendingRequestCount(){return this._pendingCount}findProviders(t,e,n){return[]}}return t.\u0275fac=function(e){return new(e||t)(or(eu))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),uu=(()=>{class t{constructor(){this._applications=new Map,du.addToWindow(this)}registerApplication(t,e){this._applications.set(t,e)}unregisterApplication(t){this._applications.delete(t)}unregisterAllApplications(){this._applications.clear()}getTestability(t){return this._applications.get(t)||null}getAllTestabilities(){return Array.from(this._applications.values())}getAllRootElements(){return Array.from(this._applications.keys())}findTestabilityInTree(t,e=!0){return du.findTestabilityInTree(this,t,e)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();class cu{addToWindow(t){}findTestabilityInTree(t,e,n){return null}}let hu,du=new cu,pu=!0,fu=!1;const gu=new Hn("AllowMultipleToken");class mu{constructor(t,e){this.name=t,this.token=e}}function yu(t,e,n=[]){const r=`Platform: ${e}`,s=new Hn(r);return(e=[])=>{let i=vu();if(!i||i.injector.get(gu,!1))if(t)t(n.concat(e).concat({provide:s,useValue:!0}));else{const t=n.concat(e).concat({provide:s,useValue:!0},{provide:Ii,useValue:"platform"});!function(t){if(hu&&!hu.destroyed&&!hu.injector.get(gu,!1))throw new Error("There can be only one platform. Destroy the previous one to create a new one.");hu=t.get(bu);const e=t.get(Ll,null);e&&e.forEach(t=>t())}(Wi.create({providers:t,name:r}))}return function(t){const e=vu();if(!e)throw new Error("No platform exists!");if(!e.injector.get(t,null))throw new Error("A platform with a different configuration has been created. Please destroy it first.");return e}(s)}}function vu(){return hu&&!hu.destroyed?hu:null}let bu=(()=>{class t{constructor(t){this._injector=t,this._modules=[],this._destroyListeners=[],this._destroyed=!1}bootstrapModuleFactory(t,e){const n=function(t,e){let n;return n="noop"===t?new au:("zone.js"===t?void 0:t)||new eu({enableLongStackTrace:(fu=!0,pu),shouldCoalesceEventChangeDetection:!!(null==e?void 0:e.ngZoneEventCoalescing),shouldCoalesceRunChangeDetection:!!(null==e?void 0:e.ngZoneRunCoalescing)}),n}(e?e.ngZone:void 0,{ngZoneEventCoalescing:e&&e.ngZoneEventCoalescing||!1,ngZoneRunCoalescing:e&&e.ngZoneRunCoalescing||!1}),r=[{provide:eu,useValue:n}];return n.run(()=>{const e=Wi.create({providers:r,parent:this.injector,name:t.moduleType.name}),s=t.create(e),i=s.injector.get(Gr,null);if(!i)throw new Error("No ErrorHandler. Is platform module (BrowserModule) included?");return n.runOutsideAngular(()=>{const t=n.onError.subscribe({next:t=>{i.handleError(t)}});s.onDestroy(()=>{Cu(this._modules,s),t.unsubscribe()})}),function(t,e,n){try{const r=n();return mo(r)?r.catch(n=>{throw e.runOutsideAngular(()=>t.handleError(n)),n}):r}catch(r){throw e.runOutsideAngular(()=>t.handleError(r)),r}}(i,n,()=>{const t=s.injector.get(Ml);return t.runInitializers(),t.donePromise.then(()=>(ta(s.injector.get($l,Xo)||Xo),this._moduleDoBootstrap(s),s))})})}bootstrapModule(t,e=[]){const n=wu({},e);return function(t,e,n){const r=new pl(n);return Promise.resolve(r)}(0,0,t).then(t=>this.bootstrapModuleFactory(t,n))}_moduleDoBootstrap(t){const e=t.injector.get(_u);if(t._bootstrapComponents.length>0)t._bootstrapComponents.forEach(t=>e.bootstrap(t));else{if(!t.instance.ngDoBootstrap)throw new Error(`The module ${et(t.instance.constructor)} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.`);t.instance.ngDoBootstrap(e)}this._modules.push(t)}onDestroy(t){this._destroyListeners.push(t)}get injector(){return this._injector}destroy(){if(this._destroyed)throw new Error("The platform has already been destroyed!");this._modules.slice().forEach(t=>t.destroy()),this._destroyListeners.forEach(t=>t()),this._destroyed=!0}get destroyed(){return this._destroyed}}return t.\u0275fac=function(e){return new(e||t)(or(Wi))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function wu(t,e){return Array.isArray(e)?e.reduce(wu,t):Object.assign(Object.assign({},t),e)}let _u=(()=>{class t{constructor(t,e,n,r,s){this._zone=t,this._injector=e,this._exceptionHandler=n,this._componentFactoryResolver=r,this._initStatus=s,this._bootstrapListeners=[],this._views=[],this._runningTick=!1,this._stable=!0,this.componentTypes=[],this.components=[],this._onMicrotaskEmptySubscription=this._zone.onMicrotaskEmpty.subscribe({next:()=>{this._zone.run(()=>{this.tick()})}});const i=new v(t=>{this._stable=this._zone.isStable&&!this._zone.hasPendingMacrotasks&&!this._zone.hasPendingMicrotasks,this._zone.runOutsideAngular(()=>{t.next(this._stable),t.complete()})}),o=new v(t=>{let e;this._zone.runOutsideAngular(()=>{e=this._zone.onStable.subscribe(()=>{eu.assertNotInAngularZone(),tu(()=>{this._stable||this._zone.hasPendingMacrotasks||this._zone.hasPendingMicrotasks||(this._stable=!0,t.next(!0))})})});const n=this._zone.onUnstable.subscribe(()=>{eu.assertInAngularZone(),this._stable&&(this._stable=!1,this._zone.runOutsideAngular(()=>{t.next(!1)}))});return()=>{e.unsubscribe(),n.unsubscribe()}});this.isStable=q(i,o.pipe(t=>{return W()((e=X,function(t){let n;n="function"==typeof e?e:function(){return e};const r=Object.create(t,Y);return r.source=t,r.subjectFactory=n,r})(t));var e}))}bootstrap(t,e){if(!this._initStatus.done)throw new Error("Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.");let n;n=t instanceof ua?t:this._componentFactoryResolver.resolveComponentFactory(t),this.componentTypes.push(n.componentType);const r=n.isBoundToModule?void 0:this._injector.get(Ya),s=n.create(Wi.NULL,[],e||n.selector,r),i=s.location.nativeElement,o=s.injector.get(lu,null),a=o&&s.injector.get(uu);return o&&a&&a.registerApplication(i,o),s.onDestroy(()=>{this.detachView(s.hostView),Cu(this.components,s),a&&a.unregisterApplication(i)}),this._loadComponent(s),s}tick(){if(this._runningTick)throw new Error("ApplicationRef.tick is called recursively");try{this._runningTick=!0;for(let t of this._views)t.detectChanges()}catch(t){this._zone.runOutsideAngular(()=>this._exceptionHandler.handleError(t))}finally{this._runningTick=!1}}attachView(t){const e=t;this._views.push(e),e.attachToAppRef(this)}detachView(t){const e=t;Cu(this._views,e),e.detachFromAppRef()}_loadComponent(t){this.attachView(t.hostView),this.tick(),this.components.push(t),this._injector.get(Ul,[]).concat(this._bootstrapListeners).forEach(e=>e(t))}ngOnDestroy(){this._views.slice().forEach(t=>t.destroy()),this._onMicrotaskEmptySubscription.unsubscribe()}get viewCount(){return this._views.length}}return t.\u0275fac=function(e){return new(e||t)(or(eu),or(Wi),or(Gr),or(ha),or(Ml))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function Cu(t,e){const n=t.indexOf(e);n>-1&&t.splice(n,1)}class Du{}class Eu{}const Au={factoryPathPrefix:"",factoryPathSuffix:".ngfactory"};let Su=(()=>{class t{constructor(t,e){this._compiler=t,this._config=e||Au}load(t){return this.loadAndCompile(t)}loadAndCompile(t){let[e,r]=t.split("#");return void 0===r&&(r="default"),n(662)(e).then(t=>t[r]).then(t=>xu(t,e,r)).then(t=>this._compiler.compileModuleAsync(t))}loadFactory(t){let[e,r]=t.split("#"),s="NgFactory";return void 0===r&&(r="default",s=""),n(662)(this._config.factoryPathPrefix+e+this._config.factoryPathSuffix).then(t=>t[r+s]).then(t=>xu(t,e,r))}}return t.\u0275fac=function(e){return new(e||t)(or(Xl),or(Eu,8))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function xu(t,e,n){if(!t)throw new Error(`Cannot find '${n}' in '${e}'`);return t}const ku=yu(null,"core",[{provide:Bl,useValue:"unknown"},{provide:bu,deps:[Wi]},{provide:uu,deps:[]},{provide:Hl,deps:[]}]),Tu=[{provide:_u,useClass:_u,deps:[eu,Wi,Gr,ha,Ml]},{provide:ll,deps:[eu],useFactory:function(t){let e=[];return t.onStable.subscribe(()=>{for(;e.length;)e.pop()()}),function(t){e.push(t)}}},{provide:Ml,useClass:Ml,deps:[[new cr,Rl]]},{provide:Xl,useClass:Xl,deps:[]},Nl,{provide:Ra,useFactory:function(){return $a},deps:[]},{provide:ja,useFactory:function(){return za},deps:[]},{provide:$l,useFactory:function(t){return ta(t=t||"undefined"!=typeof $localize&&$localize.locale||Xo),t},deps:[[new ur($l),new cr,new hr]]},{provide:zl,useValue:"USD"}];let Fu=(()=>{class t{constructor(t){}}return t.\u0275fac=function(e){return new(e||t)(or(_u))},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:Tu}),t})(),Ou=null;function Pu(){return Ou}const Iu=new Hn("DocumentToken");let Ru=(()=>{class t{historyGo(t){throw new Error("Not implemented")}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:Mu,token:t,providedIn:"platform"}),t})();function Mu(){return or(Nu)}const ju=new Hn("Location Initialized");let Nu=(()=>{class t extends Ru{constructor(t){super(),this._doc=t,this._init()}_init(){this.location=window.location,this._history=window.history}getBaseHrefFromDOM(){return Pu().getBaseHref(this._doc)}onPopState(t){const e=Pu().getGlobalEventTarget(this._doc,"window");return e.addEventListener("popstate",t,!1),()=>e.removeEventListener("popstate",t)}onHashChange(t){const e=Pu().getGlobalEventTarget(this._doc,"window");return e.addEventListener("hashchange",t,!1),()=>e.removeEventListener("hashchange",t)}get href(){return this.location.href}get protocol(){return this.location.protocol}get hostname(){return this.location.hostname}get port(){return this.location.port}get pathname(){return this.location.pathname}get search(){return this.location.search}get hash(){return this.location.hash}set pathname(t){this.location.pathname=t}pushState(t,e,n){Vu()?this._history.pushState(t,e,n):this.location.hash=n}replaceState(t,e,n){Vu()?this._history.replaceState(t,e,n):this.location.hash=n}forward(){this._history.forward()}back(){this._history.back()}historyGo(t=0){this._history.go(t)}getState(){return this._history.state}}return t.\u0275fac=function(e){return new(e||t)(or(Iu))},t.\u0275prov=ht({factory:Lu,token:t,providedIn:"platform"}),t})();function Vu(){return!!window.history.pushState}function Lu(){return new Nu(or(Iu))}function Bu(t,e){if(0==t.length)return e;if(0==e.length)return t;let n=0;return t.endsWith("/")&&n++,e.startsWith("/")&&n++,2==n?t+e.substring(1):1==n?t+e:t+"/"+e}function Uu(t){const e=t.match(/#|\?|$/),n=e&&e.index||t.length;return t.slice(0,n-("/"===t[n-1]?1:0))+t.slice(n)}function Hu(t){return t&&"?"!==t[0]?"?"+t:t}let $u=(()=>{class t{historyGo(t){throw new Error("Not implemented")}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:zu,token:t,providedIn:"root"}),t})();function zu(t){const e=or(Iu).location;return new Wu(or(Ru),e&&e.origin||"")}const qu=new Hn("appBaseHref");let Wu=(()=>{class t extends $u{constructor(t,e){if(super(),this._platformLocation=t,this._removeListenerFns=[],null==e&&(e=this._platformLocation.getBaseHrefFromDOM()),null==e)throw new Error("No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.");this._baseHref=e}ngOnDestroy(){for(;this._removeListenerFns.length;)this._removeListenerFns.pop()()}onPopState(t){this._removeListenerFns.push(this._platformLocation.onPopState(t),this._platformLocation.onHashChange(t))}getBaseHref(){return this._baseHref}prepareExternalUrl(t){return Bu(this._baseHref,t)}path(t=!1){const e=this._platformLocation.pathname+Hu(this._platformLocation.search),n=this._platformLocation.hash;return n&&t?`${e}${n}`:e}pushState(t,e,n,r){const s=this.prepareExternalUrl(n+Hu(r));this._platformLocation.pushState(t,e,s)}replaceState(t,e,n,r){const s=this.prepareExternalUrl(n+Hu(r));this._platformLocation.replaceState(t,e,s)}forward(){this._platformLocation.forward()}back(){this._platformLocation.back()}historyGo(t=0){var e,n;null===(n=(e=this._platformLocation).historyGo)||void 0===n||n.call(e,t)}}return t.\u0275fac=function(e){return new(e||t)(or(Ru),or(qu,8))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Gu=(()=>{class t extends $u{constructor(t,e){super(),this._platformLocation=t,this._baseHref="",this._removeListenerFns=[],null!=e&&(this._baseHref=e)}ngOnDestroy(){for(;this._removeListenerFns.length;)this._removeListenerFns.pop()()}onPopState(t){this._removeListenerFns.push(this._platformLocation.onPopState(t),this._platformLocation.onHashChange(t))}getBaseHref(){return this._baseHref}path(t=!1){let e=this._platformLocation.hash;return null==e&&(e="#"),e.length>0?e.substring(1):e}prepareExternalUrl(t){const e=Bu(this._baseHref,t);return e.length>0?"#"+e:e}pushState(t,e,n,r){let s=this.prepareExternalUrl(n+Hu(r));0==s.length&&(s=this._platformLocation.pathname),this._platformLocation.pushState(t,e,s)}replaceState(t,e,n,r){let s=this.prepareExternalUrl(n+Hu(r));0==s.length&&(s=this._platformLocation.pathname),this._platformLocation.replaceState(t,e,s)}forward(){this._platformLocation.forward()}back(){this._platformLocation.back()}historyGo(t=0){var e,n;null===(n=(e=this._platformLocation).historyGo)||void 0===n||n.call(e,t)}}return t.\u0275fac=function(e){return new(e||t)(or(Ru),or(qu,8))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Zu=(()=>{class t{constructor(t,e){this._subject=new gl,this._urlChangeListeners=[],this._platformStrategy=t;const n=this._platformStrategy.getBaseHref();this._platformLocation=e,this._baseHref=Uu(Yu(n)),this._platformStrategy.onPopState(t=>{this._subject.emit({url:this.path(!0),pop:!0,state:t.state,type:t.type})})}path(t=!1){return this.normalize(this._platformStrategy.path(t))}getState(){return this._platformLocation.getState()}isCurrentPathEqualTo(t,e=""){return this.path()==this.normalize(t+Hu(e))}normalize(e){return t.stripTrailingSlash(function(t,e){return t&&e.startsWith(t)?e.substring(t.length):e}(this._baseHref,Yu(e)))}prepareExternalUrl(t){return t&&"/"!==t[0]&&(t="/"+t),this._platformStrategy.prepareExternalUrl(t)}go(t,e="",n=null){this._platformStrategy.pushState(n,"",t,e),this._notifyUrlChangeListeners(this.prepareExternalUrl(t+Hu(e)),n)}replaceState(t,e="",n=null){this._platformStrategy.replaceState(n,"",t,e),this._notifyUrlChangeListeners(this.prepareExternalUrl(t+Hu(e)),n)}forward(){this._platformStrategy.forward()}back(){this._platformStrategy.back()}historyGo(t=0){var e,n;null===(n=(e=this._platformStrategy).historyGo)||void 0===n||n.call(e,t)}onUrlChange(t){this._urlChangeListeners.push(t),this._urlChangeSubscription||(this._urlChangeSubscription=this.subscribe(t=>{this._notifyUrlChangeListeners(t.url,t.state)}))}_notifyUrlChangeListeners(t="",e){this._urlChangeListeners.forEach(n=>n(t,e))}subscribe(t,e,n){return this._subject.subscribe({next:t,error:e,complete:n})}}return t.\u0275fac=function(e){return new(e||t)(or($u),or(Ru))},t.normalizeQueryParams=Hu,t.joinWithSlash=Bu,t.stripTrailingSlash=Uu,t.\u0275prov=ht({factory:Ku,token:t,providedIn:"root"}),t})();function Ku(){return new Zu(or($u),or(Ru))}function Yu(t){return t.replace(/\/index.html$/,"")}const Qu={ADP:[void 0,void 0,0],AFN:[void 0,void 0,0],ALL:[void 0,void 0,0],AMD:[void 0,void 0,2],AOA:[void 0,"Kz"],ARS:[void 0,"$"],AUD:["A$","$"],BAM:[void 0,"KM"],BBD:[void 0,"$"],BDT:[void 0,"\u09f3"],BHD:[void 0,void 0,3],BIF:[void 0,void 0,0],BMD:[void 0,"$"],BND:[void 0,"$"],BOB:[void 0,"Bs"],BRL:["R$"],BSD:[void 0,"$"],BWP:[void 0,"P"],BYN:[void 0,"\u0440.",2],BYR:[void 0,void 0,0],BZD:[void 0,"$"],CAD:["CA$","$",2],CHF:[void 0,void 0,2],CLF:[void 0,void 0,4],CLP:[void 0,"$",0],CNY:["CN\xa5","\xa5"],COP:[void 0,"$",2],CRC:[void 0,"\u20a1",2],CUC:[void 0,"$"],CUP:[void 0,"$"],CZK:[void 0,"K\u010d",2],DJF:[void 0,void 0,0],DKK:[void 0,"kr",2],DOP:[void 0,"$"],EGP:[void 0,"E\xa3"],ESP:[void 0,"\u20a7",0],EUR:["\u20ac"],FJD:[void 0,"$"],FKP:[void 0,"\xa3"],GBP:["\xa3"],GEL:[void 0,"\u20be"],GIP:[void 0,"\xa3"],GNF:[void 0,"FG",0],GTQ:[void 0,"Q"],GYD:[void 0,"$",2],HKD:["HK$","$"],HNL:[void 0,"L"],HRK:[void 0,"kn"],HUF:[void 0,"Ft",2],IDR:[void 0,"Rp",2],ILS:["\u20aa"],INR:["\u20b9"],IQD:[void 0,void 0,0],IRR:[void 0,void 0,0],ISK:[void 0,"kr",0],ITL:[void 0,void 0,0],JMD:[void 0,"$"],JOD:[void 0,void 0,3],JPY:["\xa5",void 0,0],KHR:[void 0,"\u17db"],KMF:[void 0,"CF",0],KPW:[void 0,"\u20a9",0],KRW:["\u20a9",void 0,0],KWD:[void 0,void 0,3],KYD:[void 0,"$"],KZT:[void 0,"\u20b8"],LAK:[void 0,"\u20ad",0],LBP:[void 0,"L\xa3",0],LKR:[void 0,"Rs"],LRD:[void 0,"$"],LTL:[void 0,"Lt"],LUF:[void 0,void 0,0],LVL:[void 0,"Ls"],LYD:[void 0,void 0,3],MGA:[void 0,"Ar",0],MGF:[void 0,void 0,0],MMK:[void 0,"K",0],MNT:[void 0,"\u20ae",2],MRO:[void 0,void 0,0],MUR:[void 0,"Rs",2],MXN:["MX$","$"],MYR:[void 0,"RM"],NAD:[void 0,"$"],NGN:[void 0,"\u20a6"],NIO:[void 0,"C$"],NOK:[void 0,"kr",2],NPR:[void 0,"Rs"],NZD:["NZ$","$"],OMR:[void 0,void 0,3],PHP:[void 0,"\u20b1"],PKR:[void 0,"Rs",2],PLN:[void 0,"z\u0142"],PYG:[void 0,"\u20b2",0],RON:[void 0,"lei"],RSD:[void 0,void 0,0],RUB:[void 0,"\u20bd"],RUR:[void 0,"\u0440."],RWF:[void 0,"RF",0],SBD:[void 0,"$"],SEK:[void 0,"kr",2],SGD:[void 0,"$"],SHP:[void 0,"\xa3"],SLL:[void 0,void 0,0],SOS:[void 0,void 0,0],SRD:[void 0,"$"],SSP:[void 0,"\xa3"],STD:[void 0,void 0,0],STN:[void 0,"Db"],SYP:[void 0,"\xa3",0],THB:[void 0,"\u0e3f"],TMM:[void 0,void 0,0],TND:[void 0,void 0,3],TOP:[void 0,"T$"],TRL:[void 0,void 0,0],TRY:[void 0,"\u20ba"],TTD:[void 0,"$"],TWD:["NT$","$",2],TZS:[void 0,void 0,2],UAH:[void 0,"\u20b4"],UGX:[void 0,void 0,0],USD:["$"],UYI:[void 0,void 0,0],UYU:[void 0,"$"],UYW:[void 0,void 0,4],UZS:[void 0,void 0,2],VEF:[void 0,"Bs",2],VND:["\u20ab",void 0,0],VUV:[void 0,void 0,0],XAF:["FCFA",void 0,0],XCD:["EC$","$"],XOF:["CFA",void 0,0],XPF:["CFPF",void 0,0],XXX:["\xa4"],YER:[void 0,void 0,0],ZAR:[void 0,"R"],ZMK:[void 0,void 0,0],ZMW:[void 0,"ZK"],ZWD:[void 0,void 0,0]};var Xu=function(t){return t[t.Decimal=0]="Decimal",t[t.Percent=1]="Percent",t[t.Currency=2]="Currency",t[t.Scientific=3]="Scientific",t}({}),Ju=function(t){return t[t.Zero=0]="Zero",t[t.One=1]="One",t[t.Two=2]="Two",t[t.Few=3]="Few",t[t.Many=4]="Many",t[t.Other=5]="Other",t}({}),tc=function(t){return t[t.Format=0]="Format",t[t.Standalone=1]="Standalone",t}({}),ec=function(t){return t[t.Narrow=0]="Narrow",t[t.Abbreviated=1]="Abbreviated",t[t.Wide=2]="Wide",t[t.Short=3]="Short",t}({}),nc=function(t){return t[t.Short=0]="Short",t[t.Medium=1]="Medium",t[t.Long=2]="Long",t[t.Full=3]="Full",t}({}),rc=function(t){return t[t.Decimal=0]="Decimal",t[t.Group=1]="Group",t[t.List=2]="List",t[t.PercentSign=3]="PercentSign",t[t.PlusSign=4]="PlusSign",t[t.MinusSign=5]="MinusSign",t[t.Exponential=6]="Exponential",t[t.SuperscriptingExponent=7]="SuperscriptingExponent",t[t.PerMille=8]="PerMille",t[t[1/0]=9]="Infinity",t[t.NaN=10]="NaN",t[t.TimeSeparator=11]="TimeSeparator",t[t.CurrencyDecimal=12]="CurrencyDecimal",t[t.CurrencyGroup=13]="CurrencyGroup",t}({});function sc(t,e){return cc(Ko(t)[Qo.DateFormat],e)}function ic(t,e){return cc(Ko(t)[Qo.TimeFormat],e)}function oc(t,e){return cc(Ko(t)[Qo.DateTimeFormat],e)}function ac(t,e){const n=Ko(t),r=n[Qo.NumberSymbols][e];if(void 0===r){if(e===rc.CurrencyDecimal)return n[Qo.NumberSymbols][rc.Decimal];if(e===rc.CurrencyGroup)return n[Qo.NumberSymbols][rc.Group]}return r}function lc(t,e){return Ko(t)[Qo.NumberFormats][e]}function uc(t){if(!t[Qo.ExtraData])throw new Error(`Missing extra locale data for the locale "${t[Qo.LocaleId]}". Use "registerLocaleData" to load new data. See the "I18n guide" on angular.io to know more.`)}function cc(t,e){for(let n=e;n>-1;n--)if(void 0!==t[n])return t[n];throw new Error("Locale data API: locale data undefined")}function hc(t){const[e,n]=t.split(":");return{hours:+e,minutes:+n}}const dc=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/,pc={},fc=/((?:[^BEGHLMOSWYZabcdhmswyz']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|Y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|c{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\s\S]*)/;var gc=function(t){return t[t.Short=0]="Short",t[t.ShortGMT=1]="ShortGMT",t[t.Long=2]="Long",t[t.Extended=3]="Extended",t}({}),mc=function(t){return t[t.FullYear=0]="FullYear",t[t.Month=1]="Month",t[t.Date=2]="Date",t[t.Hours=3]="Hours",t[t.Minutes=4]="Minutes",t[t.Seconds=5]="Seconds",t[t.FractionalSeconds=6]="FractionalSeconds",t[t.Day=7]="Day",t}({}),yc=function(t){return t[t.DayPeriods=0]="DayPeriods",t[t.Days=1]="Days",t[t.Months=2]="Months",t[t.Eras=3]="Eras",t}({});function vc(t,e,n,r){let s=function(t){if(Oc(t))return t;if("number"==typeof t&&!isNaN(t))return new Date(t);if("string"==typeof t){if(t=t.trim(),/^(\d{4}(-\d{1,2}(-\d{1,2})?)?)$/.test(t)){const[e,n=1,r=1]=t.split("-").map(t=>+t);return bc(e,n-1,r)}const e=parseFloat(t);if(!isNaN(t-e))return new Date(e);let n;if(n=t.match(dc))return function(t){const e=new Date(0);let n=0,r=0;const s=t[8]?e.setUTCFullYear:e.setFullYear,i=t[8]?e.setUTCHours:e.setHours;t[9]&&(n=Number(t[9]+t[10]),r=Number(t[9]+t[11])),s.call(e,Number(t[1]),Number(t[2])-1,Number(t[3]));const o=Number(t[4]||0)-n,a=Number(t[5]||0)-r,l=Number(t[6]||0),u=Math.floor(1e3*parseFloat("0."+(t[7]||0)));return i.call(e,o,a,l,u),e}(n)}const e=new Date(t);if(!Oc(e))throw new Error(`Unable to convert "${t}" into a date`);return e}(t);e=wc(n,e)||e;let i,o=[];for(;e;){if(i=fc.exec(e),!i){o.push(e);break}{o=o.concat(i.slice(1));const t=o.pop();if(!t)break;e=t}}let a=s.getTimezoneOffset();r&&(a=Fc(r,a),s=function(t,e,n){const r=t.getTimezoneOffset();return function(t,e){return(t=new Date(t.getTime())).setMinutes(t.getMinutes()+e),t}(t,-1*(Fc(e,r)-r))}(s,r));let l="";return o.forEach(t=>{const e=function(t){if(Tc[t])return Tc[t];let e;switch(t){case"G":case"GG":case"GGG":e=Ec(yc.Eras,ec.Abbreviated);break;case"GGGG":e=Ec(yc.Eras,ec.Wide);break;case"GGGGG":e=Ec(yc.Eras,ec.Narrow);break;case"y":e=Dc(mc.FullYear,1,0,!1,!0);break;case"yy":e=Dc(mc.FullYear,2,0,!0,!0);break;case"yyy":e=Dc(mc.FullYear,3,0,!1,!0);break;case"yyyy":e=Dc(mc.FullYear,4,0,!1,!0);break;case"Y":e=kc(1);break;case"YY":e=kc(2,!0);break;case"YYY":e=kc(3);break;case"YYYY":e=kc(4);break;case"M":case"L":e=Dc(mc.Month,1,1);break;case"MM":case"LL":e=Dc(mc.Month,2,1);break;case"MMM":e=Ec(yc.Months,ec.Abbreviated);break;case"MMMM":e=Ec(yc.Months,ec.Wide);break;case"MMMMM":e=Ec(yc.Months,ec.Narrow);break;case"LLL":e=Ec(yc.Months,ec.Abbreviated,tc.Standalone);break;case"LLLL":e=Ec(yc.Months,ec.Wide,tc.Standalone);break;case"LLLLL":e=Ec(yc.Months,ec.Narrow,tc.Standalone);break;case"w":e=xc(1);break;case"ww":e=xc(2);break;case"W":e=xc(1,!0);break;case"d":e=Dc(mc.Date,1);break;case"dd":e=Dc(mc.Date,2);break;case"c":case"cc":e=Dc(mc.Day,1);break;case"ccc":e=Ec(yc.Days,ec.Abbreviated,tc.Standalone);break;case"cccc":e=Ec(yc.Days,ec.Wide,tc.Standalone);break;case"ccccc":e=Ec(yc.Days,ec.Narrow,tc.Standalone);break;case"cccccc":e=Ec(yc.Days,ec.Short,tc.Standalone);break;case"E":case"EE":case"EEE":e=Ec(yc.Days,ec.Abbreviated);break;case"EEEE":e=Ec(yc.Days,ec.Wide);break;case"EEEEE":e=Ec(yc.Days,ec.Narrow);break;case"EEEEEE":e=Ec(yc.Days,ec.Short);break;case"a":case"aa":case"aaa":e=Ec(yc.DayPeriods,ec.Abbreviated);break;case"aaaa":e=Ec(yc.DayPeriods,ec.Wide);break;case"aaaaa":e=Ec(yc.DayPeriods,ec.Narrow);break;case"b":case"bb":case"bbb":e=Ec(yc.DayPeriods,ec.Abbreviated,tc.Standalone,!0);break;case"bbbb":e=Ec(yc.DayPeriods,ec.Wide,tc.Standalone,!0);break;case"bbbbb":e=Ec(yc.DayPeriods,ec.Narrow,tc.Standalone,!0);break;case"B":case"BB":case"BBB":e=Ec(yc.DayPeriods,ec.Abbreviated,tc.Format,!0);break;case"BBBB":e=Ec(yc.DayPeriods,ec.Wide,tc.Format,!0);break;case"BBBBB":e=Ec(yc.DayPeriods,ec.Narrow,tc.Format,!0);break;case"h":e=Dc(mc.Hours,1,-12);break;case"hh":e=Dc(mc.Hours,2,-12);break;case"H":e=Dc(mc.Hours,1);break;case"HH":e=Dc(mc.Hours,2);break;case"m":e=Dc(mc.Minutes,1);break;case"mm":e=Dc(mc.Minutes,2);break;case"s":e=Dc(mc.Seconds,1);break;case"ss":e=Dc(mc.Seconds,2);break;case"S":e=Dc(mc.FractionalSeconds,1);break;case"SS":e=Dc(mc.FractionalSeconds,2);break;case"SSS":e=Dc(mc.FractionalSeconds,3);break;case"Z":case"ZZ":case"ZZZ":e=Ac(gc.Short);break;case"ZZZZZ":e=Ac(gc.Extended);break;case"O":case"OO":case"OOO":case"z":case"zz":case"zzz":e=Ac(gc.ShortGMT);break;case"OOOO":case"ZZZZ":case"zzzz":e=Ac(gc.Long);break;default:return null}return Tc[t]=e,e}(t);l+=e?e(s,n,a):"''"===t?"'":t.replace(/(^'|'$)/g,"").replace(/''/g,"'")}),l}function bc(t,e,n){const r=new Date(0);return r.setFullYear(t,e,n),r.setHours(0,0,0),r}function wc(t,e){const n=function(t){return Ko(t)[Qo.LocaleId]}(t);if(pc[n]=pc[n]||{},pc[n][e])return pc[n][e];let r="";switch(e){case"shortDate":r=sc(t,nc.Short);break;case"mediumDate":r=sc(t,nc.Medium);break;case"longDate":r=sc(t,nc.Long);break;case"fullDate":r=sc(t,nc.Full);break;case"shortTime":r=ic(t,nc.Short);break;case"mediumTime":r=ic(t,nc.Medium);break;case"longTime":r=ic(t,nc.Long);break;case"fullTime":r=ic(t,nc.Full);break;case"short":const e=wc(t,"shortTime"),n=wc(t,"shortDate");r=_c(oc(t,nc.Short),[e,n]);break;case"medium":const s=wc(t,"mediumTime"),i=wc(t,"mediumDate");r=_c(oc(t,nc.Medium),[s,i]);break;case"long":const o=wc(t,"longTime"),a=wc(t,"longDate");r=_c(oc(t,nc.Long),[o,a]);break;case"full":const l=wc(t,"fullTime"),u=wc(t,"fullDate");r=_c(oc(t,nc.Full),[l,u])}return r&&(pc[n][e]=r),r}function _c(t,e){return e&&(t=t.replace(/\{([^}]+)}/g,function(t,n){return null!=e&&n in e?e[n]:t})),t}function Cc(t,e,n="-",r,s){let i="";(t<0||s&&t<=0)&&(s?t=1-t:(t=-t,i=n));let o=String(t);for(;o.length<e;)o="0"+o;return r&&(o=o.substr(o.length-e)),i+o}function Dc(t,e,n=0,r=!1,s=!1){return function(i,o){let a=function(t,e){switch(t){case mc.FullYear:return e.getFullYear();case mc.Month:return e.getMonth();case mc.Date:return e.getDate();case mc.Hours:return e.getHours();case mc.Minutes:return e.getMinutes();case mc.Seconds:return e.getSeconds();case mc.FractionalSeconds:return e.getMilliseconds();case mc.Day:return e.getDay();default:throw new Error(`Unknown DateType value "${t}".`)}}(t,i);if((n>0||a>-n)&&(a+=n),t===mc.Hours)0===a&&-12===n&&(a=12);else if(t===mc.FractionalSeconds)return l=e,Cc(a,3).substr(0,l);var l;const u=ac(o,rc.MinusSign);return Cc(a,e,u,r,s)}}function Ec(t,e,n=tc.Format,r=!1){return function(s,i){return function(t,e,n,r,s,i){switch(n){case yc.Months:return function(t,e,n){const r=Ko(t),s=cc([r[Qo.MonthsFormat],r[Qo.MonthsStandalone]],e);return cc(s,n)}(e,s,r)[t.getMonth()];case yc.Days:return function(t,e,n){const r=Ko(t),s=cc([r[Qo.DaysFormat],r[Qo.DaysStandalone]],e);return cc(s,n)}(e,s,r)[t.getDay()];case yc.DayPeriods:const o=t.getHours(),a=t.getMinutes();if(i){const t=function(t){const e=Ko(t);return uc(e),(e[Qo.ExtraData][2]||[]).map(t=>"string"==typeof t?hc(t):[hc(t[0]),hc(t[1])])}(e),n=function(t,e,n){const r=Ko(t);uc(r);const s=cc([r[Qo.ExtraData][0],r[Qo.ExtraData][1]],e)||[];return cc(s,n)||[]}(e,s,r),i=t.findIndex(t=>{if(Array.isArray(t)){const[e,n]=t,r=o>=e.hours&&a>=e.minutes,s=o<n.hours||o===n.hours&&a<n.minutes;if(e.hours<n.hours){if(r&&s)return!0}else if(r||s)return!0}else if(t.hours===o&&t.minutes===a)return!0;return!1});if(-1!==i)return n[i]}return function(t,e,n){const r=Ko(t),s=cc([r[Qo.DayPeriodsFormat],r[Qo.DayPeriodsStandalone]],e);return cc(s,n)}(e,s,r)[o<12?0:1];case yc.Eras:return function(t,e){return cc(Ko(t)[Qo.Eras],e)}(e,r)[t.getFullYear()<=0?0:1];default:throw new Error(`unexpected translation type ${n}`)}}(s,i,t,e,n,r)}}function Ac(t){return function(e,n,r){const s=-1*r,i=ac(n,rc.MinusSign),o=s>0?Math.floor(s/60):Math.ceil(s/60);switch(t){case gc.Short:return(s>=0?"+":"")+Cc(o,2,i)+Cc(Math.abs(s%60),2,i);case gc.ShortGMT:return"GMT"+(s>=0?"+":"")+Cc(o,1,i);case gc.Long:return"GMT"+(s>=0?"+":"")+Cc(o,2,i)+":"+Cc(Math.abs(s%60),2,i);case gc.Extended:return 0===r?"Z":(s>=0?"+":"")+Cc(o,2,i)+":"+Cc(Math.abs(s%60),2,i);default:throw new Error(`Unknown zone width "${t}"`)}}}function Sc(t){return bc(t.getFullYear(),t.getMonth(),t.getDate()+(4-t.getDay()))}function xc(t,e=!1){return function(n,r){let s;if(e){const t=new Date(n.getFullYear(),n.getMonth(),1).getDay()-1,e=n.getDate();s=1+Math.floor((e+t)/7)}else{const t=Sc(n),e=function(t){const e=bc(t,0,1).getDay();return bc(t,0,1+(e<=4?4:11)-e)}(t.getFullYear()),r=t.getTime()-e.getTime();s=1+Math.round(r/6048e5)}return Cc(s,t,ac(r,rc.MinusSign))}}function kc(t,e=!1){return function(n,r){return Cc(Sc(n).getFullYear(),t,ac(r,rc.MinusSign),e)}}const Tc={};function Fc(t,e){t=t.replace(/:/g,"");const n=Date.parse("Jan 01, 1970 00:00:00 "+t)/6e4;return isNaN(n)?e:n}function Oc(t){return t instanceof Date&&!isNaN(t.valueOf())}const Pc=/^(\d+)?\.((\d+)(-(\d+))?)?$/,Ic=".",Rc="0";function Mc(t,e,n,r,s,i,o=!1){let a="",l=!1;if(isFinite(t)){let u=function(t){let e,n,r,s,i,o=Math.abs(t)+"",a=0;for((n=o.indexOf(Ic))>-1&&(o=o.replace(Ic,"")),(r=o.search(/e/i))>0?(n<0&&(n=r),n+=+o.slice(r+1),o=o.substring(0,r)):n<0&&(n=o.length),r=0;o.charAt(r)===Rc;r++);if(r===(i=o.length))e=[0],n=1;else{for(i--;o.charAt(i)===Rc;)i--;for(n-=r,e=[],s=0;r<=i;r++,s++)e[s]=Number(o.charAt(r))}return n>22&&(e=e.splice(0,21),a=n-1,n=1),{digits:e,exponent:a,integerLen:n}}(t);o&&(u=function(t){if(0===t.digits[0])return t;const e=t.digits.length-t.integerLen;return t.exponent?t.exponent+=2:(0===e?t.digits.push(0,0):1===e&&t.digits.push(0),t.integerLen+=2),t}(u));let c=e.minInt,h=e.minFrac,d=e.maxFrac;if(i){const t=i.match(Pc);if(null===t)throw new Error(`${i} is not a valid digit info`);const e=t[1],n=t[3],r=t[5];null!=e&&(c=Nc(e)),null!=n&&(h=Nc(n)),null!=r?d=Nc(r):null!=n&&h>d&&(d=h)}!function(t,e,n){if(e>n)throw new Error(`The minimum number of digits after fraction (${e}) is higher than the maximum (${n}).`);let r=t.digits,s=r.length-t.integerLen;const i=Math.min(Math.max(e,s),n);let o=i+t.integerLen,a=r[o];if(o>0){r.splice(Math.max(t.integerLen,o));for(let t=o;t<r.length;t++)r[t]=0}else{s=Math.max(0,s),t.integerLen=1,r.length=Math.max(1,o=i+1),r[0]=0;for(let t=1;t<o;t++)r[t]=0}if(a>=5)if(o-1<0){for(let e=0;e>o;e--)r.unshift(0),t.integerLen++;r.unshift(1),t.integerLen++}else r[o-1]++;for(;s<Math.max(0,i);s++)r.push(0);let l=0!==i;const u=e+t.integerLen,c=r.reduceRight(function(t,e,n,r){return r[n]=(e+=t)<10?e:e-10,l&&(0===r[n]&&n>=u?r.pop():l=!1),e>=10?1:0},0);c&&(r.unshift(c),t.integerLen++)}(u,h,d);let p=u.digits,f=u.integerLen;const g=u.exponent;let m=[];for(l=p.every(t=>!t);f<c;f++)p.unshift(0);for(;f<0;f++)p.unshift(0);f>0?m=p.splice(f,p.length):(m=p,p=[0]);const y=[];for(p.length>=e.lgSize&&y.unshift(p.splice(-e.lgSize,p.length).join(""));p.length>e.gSize;)y.unshift(p.splice(-e.gSize,p.length).join(""));p.length&&y.unshift(p.join("")),a=y.join(ac(n,r)),m.length&&(a+=ac(n,s)+m.join("")),g&&(a+=ac(n,rc.Exponential)+"+"+g)}else a=ac(n,rc.Infinity);return a=t<0&&!l?e.negPre+a+e.negSuf:e.posPre+a+e.posSuf,a}function jc(t,e="-"){const n={minInt:1,minFrac:0,maxFrac:0,posPre:"",posSuf:"",negPre:"",negSuf:"",gSize:0,lgSize:0},r=t.split(";"),s=r[0],i=r[1],o=-1!==s.indexOf(Ic)?s.split(Ic):[s.substring(0,s.lastIndexOf(Rc)+1),s.substring(s.lastIndexOf(Rc)+1)],a=o[0],l=o[1]||"";n.posPre=a.substr(0,a.indexOf("#"));for(let c=0;c<l.length;c++){const t=l.charAt(c);t===Rc?n.minFrac=n.maxFrac=c+1:"#"===t?n.maxFrac=c+1:n.posSuf+=t}const u=a.split(",");if(n.gSize=u[1]?u[1].length:0,n.lgSize=u[2]||u[1]?(u[2]||u[1]).length:0,i){const t=s.length-n.posPre.length-n.posSuf.length,e=i.indexOf("#");n.negPre=i.substr(0,e).replace(/'/g,""),n.negSuf=i.substr(e+t).replace(/'/g,"")}else n.negPre=e+n.posPre,n.negSuf=n.posSuf;return n}function Nc(t){const e=parseInt(t);if(isNaN(e))throw new Error("Invalid integer literal when parsing "+t);return e}class Vc{}let Lc=(()=>{class t extends Vc{constructor(t){super(),this.locale=t}getPluralCategory(t,e){switch(function(t){return Ko(t)[Qo.PluralCase]}(e||this.locale)(t)){case Ju.Zero:return"zero";case Ju.One:return"one";case Ju.Two:return"two";case Ju.Few:return"few";case Ju.Many:return"many";default:return"other"}}}return t.\u0275fac=function(e){return new(e||t)(or($l))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function Bc(t,e){e=encodeURIComponent(e);for(const n of t.split(";")){const t=n.indexOf("="),[r,s]=-1==t?[n,""]:[n.slice(0,t),n.slice(t+1)];if(r.trim()===e)return decodeURIComponent(s)}return null}let Uc=(()=>{class t{constructor(t,e,n,r){this._iterableDiffers=t,this._keyValueDiffers=e,this._ngEl=n,this._renderer=r,this._iterableDiffer=null,this._keyValueDiffer=null,this._initialClasses=[],this._rawClass=null}set klass(t){this._removeClasses(this._initialClasses),this._initialClasses="string"==typeof t?t.split(/\s+/):[],this._applyClasses(this._initialClasses),this._applyClasses(this._rawClass)}set ngClass(t){this._removeClasses(this._rawClass),this._applyClasses(this._initialClasses),this._iterableDiffer=null,this._keyValueDiffer=null,this._rawClass="string"==typeof t?t.split(/\s+/):t,this._rawClass&&(eo(this._rawClass)?this._iterableDiffer=this._iterableDiffers.find(this._rawClass).create():this._keyValueDiffer=this._keyValueDiffers.find(this._rawClass).create())}ngDoCheck(){if(this._iterableDiffer){const t=this._iterableDiffer.diff(this._rawClass);t&&this._applyIterableChanges(t)}else if(this._keyValueDiffer){const t=this._keyValueDiffer.diff(this._rawClass);t&&this._applyKeyValueChanges(t)}}_applyKeyValueChanges(t){t.forEachAddedItem(t=>this._toggleClass(t.key,t.currentValue)),t.forEachChangedItem(t=>this._toggleClass(t.key,t.currentValue)),t.forEachRemovedItem(t=>{t.previousValue&&this._toggleClass(t.key,!1)})}_applyIterableChanges(t){t.forEachAddedItem(t=>{if("string"!=typeof t.item)throw new Error(`NgClass can only toggle CSS classes expressed as strings, got ${et(t.item)}`);this._toggleClass(t.item,!0)}),t.forEachRemovedItem(t=>this._toggleClass(t.item,!1))}_applyClasses(t){t&&(Array.isArray(t)||t instanceof Set?t.forEach(t=>this._toggleClass(t,!0)):Object.keys(t).forEach(e=>this._toggleClass(e,!!t[e])))}_removeClasses(t){t&&(Array.isArray(t)||t instanceof Set?t.forEach(t=>this._toggleClass(t,!1)):Object.keys(t).forEach(t=>this._toggleClass(t,!1)))}_toggleClass(t,e){(t=t.trim())&&t.split(/\s+/g).forEach(t=>{e?this._renderer.addClass(this._ngEl.nativeElement,t):this._renderer.removeClass(this._ngEl.nativeElement,t)})}}return t.\u0275fac=function(e){return new(e||t)(ao(Ra),ao(ja),ao(ga),ao(va))},t.\u0275dir=Zt({type:t,selectors:[["","ngClass",""]],inputs:{klass:["class","klass"],ngClass:"ngClass"}}),t})();class Hc{constructor(t,e,n,r){this.$implicit=t,this.ngForOf=e,this.index=n,this.count=r}get first(){return 0===this.index}get last(){return this.index===this.count-1}get even(){return this.index%2==0}get odd(){return!this.even}}let $c=(()=>{class t{constructor(t,e,n){this._viewContainer=t,this._template=e,this._differs=n,this._ngForOf=null,this._ngForOfDirty=!0,this._differ=null}set ngForOf(t){this._ngForOf=t,this._ngForOfDirty=!0}set ngForTrackBy(t){this._trackByFn=t}get ngForTrackBy(){return this._trackByFn}set ngForTemplate(t){t&&(this._template=t)}ngDoCheck(){if(this._ngForOfDirty){this._ngForOfDirty=!1;const n=this._ngForOf;if(!this._differ&&n)try{this._differ=this._differs.find(n).create(this.ngForTrackBy)}catch(e){throw new Error(`Cannot find a differ supporting object '${n}' of type '${t=n,t.name||typeof t}'. NgFor only supports binding to Iterables such as Arrays.`)}}var t;if(this._differ){const t=this._differ.diff(this._ngForOf);t&&this._applyChanges(t)}}_applyChanges(t){const e=[];t.forEachOperation((t,n,r)=>{if(null==t.previousIndex){const n=this._viewContainer.createEmbeddedView(this._template,new Hc(null,this._ngForOf,-1,-1),null===r?void 0:r),s=new zc(t,n);e.push(s)}else if(null==r)this._viewContainer.remove(null===n?void 0:n);else if(null!==n){const s=this._viewContainer.get(n);this._viewContainer.move(s,r);const i=new zc(t,s);e.push(i)}});for(let n=0;n<e.length;n++)this._perViewChange(e[n].view,e[n].record);for(let n=0,r=this._viewContainer.length;n<r;n++){const t=this._viewContainer.get(n);t.context.index=n,t.context.count=r,t.context.ngForOf=this._ngForOf}t.forEachIdentityChange(t=>{this._viewContainer.get(t.currentIndex).context.$implicit=t.item})}_perViewChange(t,e){t.context.$implicit=e.item}static ngTemplateContextGuard(t,e){return!0}}return t.\u0275fac=function(e){return new(e||t)(ao(Ja),ao(Wa),ao(Ra))},t.\u0275dir=Zt({type:t,selectors:[["","ngFor","","ngForOf",""]],inputs:{ngForOf:"ngForOf",ngForTrackBy:"ngForTrackBy",ngForTemplate:"ngForTemplate"}}),t})();class zc{constructor(t,e){this.record=t,this.view=e}}let qc=(()=>{class t{constructor(t,e){this._viewContainer=t,this._context=new Wc,this._thenTemplateRef=null,this._elseTemplateRef=null,this._thenViewRef=null,this._elseViewRef=null,this._thenTemplateRef=e}set ngIf(t){this._context.$implicit=this._context.ngIf=t,this._updateView()}set ngIfThen(t){Gc("ngIfThen",t),this._thenTemplateRef=t,this._thenViewRef=null,this._updateView()}set ngIfElse(t){Gc("ngIfElse",t),this._elseTemplateRef=t,this._elseViewRef=null,this._updateView()}_updateView(){this._context.$implicit?this._thenViewRef||(this._viewContainer.clear(),this._elseViewRef=null,this._thenTemplateRef&&(this._thenViewRef=this._viewContainer.createEmbeddedView(this._thenTemplateRef,this._context))):this._elseViewRef||(this._viewContainer.clear(),this._thenViewRef=null,this._elseTemplateRef&&(this._elseViewRef=this._viewContainer.createEmbeddedView(this._elseTemplateRef,this._context)))}static ngTemplateContextGuard(t,e){return!0}}return t.\u0275fac=function(e){return new(e||t)(ao(Ja),ao(Wa))},t.\u0275dir=Zt({type:t,selectors:[["","ngIf",""]],inputs:{ngIf:"ngIf",ngIfThen:"ngIfThen",ngIfElse:"ngIfElse"}}),t})();class Wc{constructor(){this.$implicit=null,this.ngIf=null}}function Gc(t,e){if(e&&!e.createEmbeddedView)throw new Error(`${t} must be a TemplateRef, but received '${et(e)}'.`)}let Zc=(()=>{class t{constructor(t){this._viewContainerRef=t,this._viewRef=null,this.ngTemplateOutletContext=null,this.ngTemplateOutlet=null}ngOnChanges(t){if(t.ngTemplateOutlet){const t=this._viewContainerRef;this._viewRef&&t.remove(t.indexOf(this._viewRef)),this._viewRef=this.ngTemplateOutlet?t.createEmbeddedView(this.ngTemplateOutlet,this.ngTemplateOutletContext):null}else this._viewRef&&t.ngTemplateOutletContext&&this.ngTemplateOutletContext&&(this._viewRef.context=this.ngTemplateOutletContext)}}return t.\u0275fac=function(e){return new(e||t)(ao(Ja))},t.\u0275dir=Zt({type:t,selectors:[["","ngTemplateOutlet",""]],inputs:{ngTemplateOutletContext:"ngTemplateOutletContext",ngTemplateOutlet:"ngTemplateOutlet"},features:[le]}),t})();function Kc(t,e){return Error(`InvalidPipeArgument: '${e}' for pipe '${et(t)}'`)}const Yc=/(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D])\S*/g;let Qc=(()=>{class t{transform(e){if(null==e)return null;if("string"!=typeof e)throw Kc(t,e);return e.replace(Yc,t=>t[0].toUpperCase()+t.substr(1).toLowerCase())}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275pipe=Kt({name:"titlecase",type:t,pure:!0}),t})(),Xc=(()=>{class t{constructor(t){this.locale=t}transform(e,n="mediumDate",r,s){if(null==e||""===e||e!=e)return null;try{return vc(e,n,s||this.locale,r)}catch(i){throw Kc(t,i.message)}}}return t.\u0275fac=function(e){return new(e||t)(ao($l,16))},t.\u0275pipe=Kt({name:"date",type:t,pure:!0}),t})(),Jc=(()=>{class t{constructor(t){this._locale=t}transform(e,n,r){if(!eh(e))return null;r=r||this._locale;try{return function(t,e,n){return Mc(t,jc(lc(e,Xu.Decimal),ac(e,rc.MinusSign)),e,rc.Group,rc.Decimal,n)}(nh(e),r,n)}catch(s){throw Kc(t,s.message)}}}return t.\u0275fac=function(e){return new(e||t)(ao($l,16))},t.\u0275pipe=Kt({name:"number",type:t,pure:!0}),t})(),th=(()=>{class t{constructor(t,e="USD"){this._locale=t,this._defaultCurrencyCode=e}transform(e,n,r="symbol",s,i){if(!eh(e))return null;i=i||this._locale,"boolean"==typeof r&&(r=r?"symbol":"code");let o=n||this._defaultCurrencyCode;"code"!==r&&(o="symbol"===r||"symbol-narrow"===r?function(t,e,n="en"){const r=function(t){return Ko(t)[Qo.Currencies]}(n)[t]||Qu[t]||[],s=r[1];return"narrow"===e&&"string"==typeof s?s:r[0]||t}(o,"symbol"===r?"wide":"narrow",i):r);try{return function(t,e,n,r,s){const i=jc(lc(e,Xu.Currency),ac(e,rc.MinusSign));return i.minFrac=function(t){let e;const n=Qu[t];return n&&(e=n[2]),"number"==typeof e?e:2}(r),i.maxFrac=i.minFrac,Mc(t,i,e,rc.CurrencyGroup,rc.CurrencyDecimal,s).replace("\xa4",n).replace("\xa4","").trim()}(nh(e),i,o,n,s)}catch(a){throw Kc(t,a.message)}}}return t.\u0275fac=function(e){return new(e||t)(ao($l,16),ao(zl,16))},t.\u0275pipe=Kt({name:"currency",type:t,pure:!0}),t})();function eh(t){return!(null==t||""===t||t!=t)}function nh(t){if("string"==typeof t&&!isNaN(Number(t)-parseFloat(t)))return Number(t);if("number"!=typeof t)throw new Error(`${t} is not a number`);return t}let rh=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[{provide:Vc,useClass:Lc}]}),t})(),sh=(()=>{class t{}return t.\u0275prov=ht({token:t,providedIn:"root",factory:()=>new ih(or(Iu),window)}),t})();class ih{constructor(t,e){this.document=t,this.window=e,this.offset=()=>[0,0]}setOffset(t){this.offset=Array.isArray(t)?()=>t:t}getScrollPosition(){return this.supportsScrolling()?[this.window.pageXOffset,this.window.pageYOffset]:[0,0]}scrollToPosition(t){this.supportsScrolling()&&this.window.scrollTo(t[0],t[1])}scrollToAnchor(t){if(!this.supportsScrolling())return;const e=function(t,e){const n=t.getElementById(e)||t.getElementsByName(e)[0];if(n)return n;if("function"==typeof t.createTreeWalker&&t.body&&(t.body.createShadowRoot||t.body.attachShadow)){const n=t.createTreeWalker(t.body,NodeFilter.SHOW_ELEMENT);let r=n.currentNode;for(;r;){const t=r.shadowRoot;if(t){const n=t.getElementById(e)||t.querySelector(`[name="${e}"]`);if(n)return n}r=n.nextNode()}}return null}(this.document,t);e&&(this.scrollToElement(e),this.attemptFocus(e))}setHistoryScrollRestoration(t){if(this.supportScrollRestoration()){const e=this.window.history;e&&e.scrollRestoration&&(e.scrollRestoration=t)}}scrollToElement(t){const e=t.getBoundingClientRect(),n=e.left+this.window.pageXOffset,r=e.top+this.window.pageYOffset,s=this.offset();this.window.scrollTo(n-s[0],r-s[1])}attemptFocus(t){return t.focus(),this.document.activeElement===t}supportScrollRestoration(){try{if(!this.supportsScrolling())return!1;const t=oh(this.window.history)||oh(Object.getPrototypeOf(this.window.history));return!(!t||!t.writable&&!t.set)}catch(t){return!1}}supportsScrolling(){try{return!!this.window&&!!this.window.scrollTo&&"pageXOffset"in this.window}catch(t){return!1}}}function oh(t){return Object.getOwnPropertyDescriptor(t,"scrollRestoration")}class ah{}class lh extends class extends class{}{constructor(){super(...arguments),this.supportsDOMEvents=!0}}{static makeCurrent(){var t;t=new lh,Ou||(Ou=t)}onAndCancel(t,e,n){return t.addEventListener(e,n,!1),()=>{t.removeEventListener(e,n,!1)}}dispatchEvent(t,e){t.dispatchEvent(e)}remove(t){t.parentNode&&t.parentNode.removeChild(t)}createElement(t,e){return(e=e||this.getDefaultDocument()).createElement(t)}createHtmlDocument(){return document.implementation.createHTMLDocument("fakeTitle")}getDefaultDocument(){return document}isElementNode(t){return t.nodeType===Node.ELEMENT_NODE}isShadowRoot(t){return t instanceof DocumentFragment}getGlobalEventTarget(t,e){return"window"===e?window:"document"===e?t:"body"===e?t.body:null}getBaseHref(t){const e=(ch=ch||document.querySelector("base"),ch?ch.getAttribute("href"):null);return null==e?null:function(t){uh=uh||document.createElement("a"),uh.setAttribute("href",t);const e=uh.pathname;return"/"===e.charAt(0)?e:`/${e}`}(e)}resetBaseElement(){ch=null}getUserAgent(){return window.navigator.userAgent}getCookie(t){return Bc(document.cookie,t)}}let uh,ch=null;const hh=new Hn("TRANSITION_ID"),dh=[{provide:Rl,useFactory:function(t,e,n){return()=>{n.get(Ml).donePromise.then(()=>{const n=Pu();Array.prototype.slice.apply(e.querySelectorAll("style[ng-transition]")).filter(e=>e.getAttribute("ng-transition")===t).forEach(t=>n.remove(t))})}},deps:[hh,Iu,Wi],multi:!0}];class ph{static init(){!function(t){du=t}(new ph)}addToWindow(t){Ot.getAngularTestability=(e,n=!0)=>{const r=t.findTestabilityInTree(e,n);if(null==r)throw new Error("Could not find testability for element.");return r},Ot.getAllAngularTestabilities=()=>t.getAllTestabilities(),Ot.getAllAngularRootElements=()=>t.getAllRootElements(),Ot.frameworkStabilizers||(Ot.frameworkStabilizers=[]),Ot.frameworkStabilizers.push(t=>{const e=Ot.getAllAngularTestabilities();let n=e.length,r=!1;const s=function(e){r=r||e,n--,0==n&&t(r)};e.forEach(function(t){t.whenStable(s)})})}findTestabilityInTree(t,e,n){if(null==e)return null;const r=t.getTestability(e);return null!=r?r:n?Pu().isShadowRoot(e)?this.findTestabilityInTree(t,e.host,!0):this.findTestabilityInTree(t,e.parentElement,!0):null}}let fh=(()=>{class t{build(){return new XMLHttpRequest}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const gh=new Hn("EventManagerPlugins");let mh=(()=>{class t{constructor(t,e){this._zone=e,this._eventNameToPlugin=new Map,t.forEach(t=>t.manager=this),this._plugins=t.slice().reverse()}addEventListener(t,e,n){return this._findPluginFor(e).addEventListener(t,e,n)}addGlobalEventListener(t,e,n){return this._findPluginFor(e).addGlobalEventListener(t,e,n)}getZone(){return this._zone}_findPluginFor(t){const e=this._eventNameToPlugin.get(t);if(e)return e;const n=this._plugins;for(let r=0;r<n.length;r++){const e=n[r];if(e.supports(t))return this._eventNameToPlugin.set(t,e),e}throw new Error(`No event manager plugin found for event ${t}`)}}return t.\u0275fac=function(e){return new(e||t)(or(gh),or(eu))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();class yh{constructor(t){this._doc=t}addGlobalEventListener(t,e,n){const r=Pu().getGlobalEventTarget(this._doc,t);if(!r)throw new Error(`Unsupported event target ${r} for event ${e}`);return this.addEventListener(r,e,n)}}let vh=(()=>{class t{constructor(){this._stylesSet=new Set}addStyles(t){const e=new Set;t.forEach(t=>{this._stylesSet.has(t)||(this._stylesSet.add(t),e.add(t))}),this.onStylesAdded(e)}onStylesAdded(t){}getAllStyles(){return Array.from(this._stylesSet)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),bh=(()=>{class t extends vh{constructor(t){super(),this._doc=t,this._hostNodes=new Map,this._hostNodes.set(t.head,[])}_addStylesToHost(t,e,n){t.forEach(t=>{const r=this._doc.createElement("style");r.textContent=t,n.push(e.appendChild(r))})}addHost(t){const e=[];this._addStylesToHost(this._stylesSet,t,e),this._hostNodes.set(t,e)}removeHost(t){const e=this._hostNodes.get(t);e&&e.forEach(wh),this._hostNodes.delete(t)}onStylesAdded(t){this._hostNodes.forEach((e,n)=>{this._addStylesToHost(t,n,e)})}ngOnDestroy(){this._hostNodes.forEach(t=>t.forEach(wh))}}return t.\u0275fac=function(e){return new(e||t)(or(Iu))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function wh(t){Pu().remove(t)}const _h={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},Ch=/%COMP%/g;function Dh(t,e,n){for(let r=0;r<e.length;r++){let s=e[r];Array.isArray(s)?Dh(t,s,n):(s=s.replace(Ch,t),n.push(s))}return n}function Eh(t){return e=>{if("__ngUnwrap__"===e)return t;!1===t(e)&&(e.preventDefault(),e.returnValue=!1)}}let Ah=(()=>{class t{constructor(t,e,n){this.eventManager=t,this.sharedStylesHost=e,this.appId=n,this.rendererByCompId=new Map,this.defaultRenderer=new Sh(t)}createRenderer(t,e){if(!t||!e)return this.defaultRenderer;switch(e.encapsulation){case St.Emulated:{let n=this.rendererByCompId.get(e.id);return n||(n=new xh(this.eventManager,this.sharedStylesHost,e,this.appId),this.rendererByCompId.set(e.id,n)),n.applyToHost(t),n}case 1:case St.ShadowDom:return new kh(this.eventManager,this.sharedStylesHost,t,e);default:if(!this.rendererByCompId.has(e.id)){const t=Dh(e.id,e.styles,[]);this.sharedStylesHost.addStyles(t),this.rendererByCompId.set(e.id,this.defaultRenderer)}return this.defaultRenderer}}begin(){}end(){}}return t.\u0275fac=function(e){return new(e||t)(or(mh),or(bh),or(jl))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();class Sh{constructor(t){this.eventManager=t,this.data=Object.create(null)}destroy(){}createElement(t,e){return e?document.createElementNS(_h[e]||e,t):document.createElement(t)}createComment(t){return document.createComment(t)}createText(t){return document.createTextNode(t)}appendChild(t,e){t.appendChild(e)}insertBefore(t,e,n){t&&t.insertBefore(e,n)}removeChild(t,e){t&&t.removeChild(e)}selectRootElement(t,e){let n="string"==typeof t?document.querySelector(t):t;if(!n)throw new Error(`The selector "${t}" did not match any elements`);return e||(n.textContent=""),n}parentNode(t){return t.parentNode}nextSibling(t){return t.nextSibling}setAttribute(t,e,n,r){if(r){e=r+":"+e;const s=_h[r];s?t.setAttributeNS(s,e,n):t.setAttribute(e,n)}else t.setAttribute(e,n)}removeAttribute(t,e,n){if(n){const r=_h[n];r?t.removeAttributeNS(r,e):t.removeAttribute(`${n}:${e}`)}else t.removeAttribute(e)}addClass(t,e){t.classList.add(e)}removeClass(t,e){t.classList.remove(e)}setStyle(t,e,n,r){r&(Yr.DashCase|Yr.Important)?t.style.setProperty(e,n,r&Yr.Important?"important":""):t.style[e]=n}removeStyle(t,e,n){n&Yr.DashCase?t.style.removeProperty(e):t.style[e]=""}setProperty(t,e,n){t[e]=n}setValue(t,e){t.nodeValue=e}listen(t,e,n){return"string"==typeof t?this.eventManager.addGlobalEventListener(t,e,Eh(n)):this.eventManager.addEventListener(t,e,Eh(n))}}class xh extends Sh{constructor(t,e,n,r){super(t),this.component=n;const s=Dh(r+"-"+n.id,n.styles,[]);e.addStyles(s),this.contentAttr="_ngcontent-%COMP%".replace(Ch,r+"-"+n.id),this.hostAttr="_nghost-%COMP%".replace(Ch,r+"-"+n.id)}applyToHost(t){super.setAttribute(t,this.hostAttr,"")}createElement(t,e){const n=super.createElement(t,e);return super.setAttribute(n,this.contentAttr,""),n}}class kh extends Sh{constructor(t,e,n,r){super(t),this.sharedStylesHost=e,this.hostEl=n,this.shadowRoot=n.attachShadow({mode:"open"}),this.sharedStylesHost.addHost(this.shadowRoot);const s=Dh(r.id,r.styles,[]);for(let i=0;i<s.length;i++){const t=document.createElement("style");t.textContent=s[i],this.shadowRoot.appendChild(t)}}nodeOrShadowRoot(t){return t===this.hostEl?this.shadowRoot:t}destroy(){this.sharedStylesHost.removeHost(this.shadowRoot)}appendChild(t,e){return super.appendChild(this.nodeOrShadowRoot(t),e)}insertBefore(t,e,n){return super.insertBefore(this.nodeOrShadowRoot(t),e,n)}removeChild(t,e){return super.removeChild(this.nodeOrShadowRoot(t),e)}parentNode(t){return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(t)))}}let Th=(()=>{class t extends yh{constructor(t){super(t)}supports(t){return!0}addEventListener(t,e,n){return t.addEventListener(e,n,!1),()=>this.removeEventListener(t,e,n)}removeEventListener(t,e,n){return t.removeEventListener(e,n)}}return t.\u0275fac=function(e){return new(e||t)(or(Iu))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const Fh=["alt","control","meta","shift"],Oh={"\b":"Backspace","\t":"Tab","\x7f":"Delete","\x1b":"Escape",Del:"Delete",Esc:"Escape",Left:"ArrowLeft",Right:"ArrowRight",Up:"ArrowUp",Down:"ArrowDown",Menu:"ContextMenu",Scroll:"ScrollLock",Win:"OS"},Ph={A:"1",B:"2",C:"3",D:"4",E:"5",F:"6",G:"7",H:"8",I:"9",J:"*",K:"+",M:"-",N:".",O:"/","`":"0","\x90":"NumLock"},Ih={alt:t=>t.altKey,control:t=>t.ctrlKey,meta:t=>t.metaKey,shift:t=>t.shiftKey};let Rh=(()=>{class t extends yh{constructor(t){super(t)}supports(e){return null!=t.parseEventName(e)}addEventListener(e,n,r){const s=t.parseEventName(n),i=t.eventCallback(s.fullKey,r,this.manager.getZone());return this.manager.getZone().runOutsideAngular(()=>Pu().onAndCancel(e,s.domEventName,i))}static parseEventName(e){const n=e.toLowerCase().split("."),r=n.shift();if(0===n.length||"keydown"!==r&&"keyup"!==r)return null;const s=t._normalizeKey(n.pop());let i="";if(Fh.forEach(t=>{const e=n.indexOf(t);e>-1&&(n.splice(e,1),i+=t+".")}),i+=s,0!=n.length||0===s.length)return null;const o={};return o.domEventName=r,o.fullKey=i,o}static getEventFullKey(t){let e="",n=function(t){let e=t.key;if(null==e){if(e=t.keyIdentifier,null==e)return"Unidentified";e.startsWith("U+")&&(e=String.fromCharCode(parseInt(e.substring(2),16)),3===t.location&&Ph.hasOwnProperty(e)&&(e=Ph[e]))}return Oh[e]||e}(t);return n=n.toLowerCase()," "===n?n="space":"."===n&&(n="dot"),Fh.forEach(r=>{r!=n&&(0,Ih[r])(t)&&(e+=r+".")}),e+=n,e}static eventCallback(e,n,r){return s=>{t.getEventFullKey(s)===e&&r.runGuarded(()=>n(s))}}static _normalizeKey(t){switch(t){case"esc":return"escape";default:return t}}}return t.\u0275fac=function(e){return new(e||t)(or(Iu))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const Mh=yu(ku,"browser",[{provide:Bl,useValue:"browser"},{provide:Ll,useValue:function(){lh.makeCurrent(),ph.init()},multi:!0},{provide:Iu,useFactory:function(){return function(t){pe=t}(document),document},deps:[]}]),jh=[[],{provide:Ii,useValue:"root"},{provide:Gr,useFactory:function(){return new Gr},deps:[]},{provide:gh,useClass:Th,multi:!0,deps:[Iu,eu,Bl]},{provide:gh,useClass:Rh,multi:!0,deps:[Iu]},[],{provide:Ah,useClass:Ah,deps:[mh,bh,jl]},{provide:ya,useExisting:Ah},{provide:vh,useExisting:bh},{provide:bh,useClass:bh,deps:[Iu]},{provide:lu,useClass:lu,deps:[eu]},{provide:mh,useClass:mh,deps:[gh,eu]},{provide:ah,useClass:fh,deps:[]},[]];let Nh=(()=>{class t{constructor(t){if(t)throw new Error("BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.")}static withServerTransition(e){return{ngModule:t,providers:[{provide:jl,useValue:e.appId},{provide:hh,useExisting:jl},dh]}}}return t.\u0275fac=function(e){return new(e||t)(or(t,12))},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:jh,imports:[rh,Fu]}),t})();"undefined"!=typeof window&&window;class Vh extends h{constructor(t,e){super()}schedule(t,e=0){return this}}class Lh extends Vh{constructor(t,e){super(t,e),this.scheduler=t,this.work=e,this.pending=!1}schedule(t,e=0){if(this.closed)return this;this.state=t;const n=this.id,r=this.scheduler;return null!=n&&(this.id=this.recycleAsyncId(r,n,e)),this.pending=!0,this.delay=e,this.id=this.id||this.requestAsyncId(r,this.id,e),this}requestAsyncId(t,e,n=0){return setInterval(t.flush.bind(t,this),n)}recycleAsyncId(t,e,n=0){if(null!==n&&this.delay===n&&!1===this.pending)return e;clearInterval(e)}execute(t,e){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;const n=this._execute(t,e);if(n)return n;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))}_execute(t,e){let n,r=!1;try{this.work(t)}catch(s){r=!0,n=!!s&&s||new Error(s)}if(r)return this.unsubscribe(),n}_unsubscribe(){const t=this.id,e=this.scheduler,n=e.actions,r=n.indexOf(this);this.work=null,this.state=null,this.pending=!1,this.scheduler=null,-1!==r&&n.splice(r,1),null!=t&&(this.id=this.recycleAsyncId(e,t,null)),this.delay=null}}class Bh extends Lh{constructor(t,e){super(t,e),this.scheduler=t,this.work=e}schedule(t,e=0){return e>0?super.schedule(t,e):(this.delay=e,this.state=t,this.scheduler.flush(this),this)}execute(t,e){return e>0||this.closed?super.execute(t,e):this._execute(t,e)}requestAsyncId(t,e,n=0){return null!==n&&n>0||null===n&&this.delay>0?super.requestAsyncId(t,e,n):t.flush(this)}}let Uh=(()=>{class t{constructor(e,n=t.now){this.SchedulerAction=e,this.now=n}schedule(t,e=0,n){return new this.SchedulerAction(this,t).schedule(n,e)}}return t.now=()=>Date.now(),t})();class Hh extends Uh{constructor(t,e=Uh.now){super(t,()=>Hh.delegate&&Hh.delegate!==this?Hh.delegate.now():e()),this.actions=[],this.active=!1,this.scheduled=void 0}schedule(t,e=0,n){return Hh.delegate&&Hh.delegate!==this?Hh.delegate.schedule(t,e,n):super.schedule(t,e,n)}flush(t){const{actions:e}=this;if(this.active)return void e.push(t);let n;this.active=!0;do{if(n=t.execute(t.state,t.delay))break}while(t=e.shift());if(this.active=!1,n){for(;t=e.shift();)t.unsubscribe();throw n}}}class $h extends Hh{}const zh=new $h(Bh),qh=new v(t=>t.complete());function Wh(t){return t?function(t){return new v(e=>t.schedule(()=>e.complete()))}(t):qh}function Gh(...t){let e=t[t.length-1];return A(e)?(t.pop(),M(t,e)):z(t)}function Zh(t,e){return new v(e?n=>e.schedule(Kh,0,{error:t,subscriber:n}):e=>e.error(t))}function Kh({error:t,subscriber:e}){e.error(t)}let Yh=(()=>{class t{constructor(t,e,n){this.kind=t,this.value=e,this.error=n,this.hasValue="N"===t}observe(t){switch(this.kind){case"N":return t.next&&t.next(this.value);case"E":return t.error&&t.error(this.error);case"C":return t.complete&&t.complete()}}do(t,e,n){switch(this.kind){case"N":return t&&t(this.value);case"E":return e&&e(this.error);case"C":return n&&n()}}accept(t,e,n){return t&&"function"==typeof t.next?this.observe(t):this.do(t,e,n)}toObservable(){switch(this.kind){case"N":return Gh(this.value);case"E":return Zh(this.error);case"C":return Wh()}throw new Error("unexpected notification kind value")}static createNext(e){return void 0!==e?new t("N",e):t.undefinedValueNotification}static createError(e){return new t("E",void 0,e)}static createComplete(){return t.completeNotification}}return t.completeNotification=new t("C"),t.undefinedValueNotification=new t("N",void 0),t})();class Qh extends f{constructor(t,e,n=0){super(t),this.scheduler=e,this.delay=n}static dispatch(t){const{notification:e,destination:n}=t;e.observe(n),this.unsubscribe()}scheduleMessage(t){this.destination.add(this.scheduler.schedule(Qh.dispatch,this.delay,new Xh(t,this.destination)))}_next(t){this.scheduleMessage(Yh.createNext(t))}_error(t){this.scheduleMessage(Yh.createError(t)),this.unsubscribe()}_complete(){this.scheduleMessage(Yh.createComplete()),this.unsubscribe()}}class Xh{constructor(t,e){this.notification=t,this.destination=e}}class Jh extends D{constructor(t=Number.POSITIVE_INFINITY,e=Number.POSITIVE_INFINITY,n){super(),this.scheduler=n,this._events=[],this._infiniteTimeWindow=!1,this._bufferSize=t<1?1:t,this._windowTime=e<1?1:e,e===Number.POSITIVE_INFINITY?(this._infiniteTimeWindow=!0,this.next=this.nextInfiniteTimeWindow):this.next=this.nextTimeWindow}nextInfiniteTimeWindow(t){if(!this.isStopped){const e=this._events;e.push(t),e.length>this._bufferSize&&e.shift()}super.next(t)}nextTimeWindow(t){this.isStopped||(this._events.push(new td(this._getNow(),t)),this._trimBufferThenGetEvents()),super.next(t)}_subscribe(t){const e=this._infiniteTimeWindow,n=e?this._events:this._trimBufferThenGetEvents(),r=this.scheduler,s=n.length;let i;if(this.closed)throw new w;if(this.isStopped||this.hasError?i=h.EMPTY:(this.observers.push(t),i=new _(this,t)),r&&t.add(t=new Qh(t,r)),e)for(let o=0;o<s&&!t.closed;o++)t.next(n[o]);else for(let o=0;o<s&&!t.closed;o++)t.next(n[o].value);return this.hasError?t.error(this.thrownError):this.isStopped&&t.complete(),i}_getNow(){return(this.scheduler||zh).now()}_trimBufferThenGetEvents(){const t=this._getNow(),e=this._bufferSize,n=this._windowTime,r=this._events,s=r.length;let i=0;for(;i<s&&!(t-r[i].time<n);)i++;return s>e&&(i=Math.max(i,s-e)),i>0&&r.splice(0,i),r}}class td{constructor(t,e){this.time=t,this.value=e}}function ed(t,e){return"function"==typeof e?n=>n.pipe(ed((n,r)=>j(t(n,r)).pipe(S((t,s)=>e(n,t,r,s))))):e=>e.lift(new nd(t))}class nd{constructor(t){this.project=t}call(t,e){return e.subscribe(new rd(t,this.project))}}class rd extends V{constructor(t,e){super(t),this.project=e,this.index=0}_next(t){let e;const n=this.index++;try{e=this.project(t,n)}catch(r){return void this.destination.error(r)}this._innerSub(e)}_innerSub(t){const e=this.innerSubscription;e&&e.unsubscribe();const n=new N(this),r=this.destination;r.add(n),this.innerSubscription=L(t,n),this.innerSubscription!==n&&r.add(this.innerSubscription)}_complete(){const{innerSubscription:t}=this;t&&!t.closed||super._complete(),this.unsubscribe()}_unsubscribe(){this.innerSubscription=void 0}notifyComplete(){this.innerSubscription=void 0,this.isStopped&&super._complete()}notifyNext(t){this.destination.next(t)}}const sd={schedule(t,e){const n=setTimeout(t,e);return()=>clearTimeout(n)},scheduleBeforeRender(t){if("undefined"==typeof window)return sd.schedule(t,0);if(void 0===window.requestAnimationFrame)return sd.schedule(t,16);const e=window.requestAnimationFrame(t);return()=>window.cancelAnimationFrame(e)}};let id;function od(t,e,n){let r=n;return function(t){return!!t&&t.nodeType===Node.ELEMENT_NODE}(t)&&e.some((e,n)=>!("*"===e||!function(t,e){if(!id){const t=Element.prototype;id=t.matches||t.matchesSelector||t.mozMatchesSelector||t.msMatchesSelector||t.oMatchesSelector||t.webkitMatchesSelector}return t.nodeType===Node.ELEMENT_NODE&&id.call(t,e)}(t,e)||(r=n,0))),r}class ad{constructor(t,e){this.componentFactory=e.get(ha).resolveComponentFactory(t)}create(t){return new ld(this.componentFactory,t)}}class ld{constructor(t,e){this.componentFactory=t,this.injector=e,this.eventEmitters=new Jh(1),this.events=this.eventEmitters.pipe(ed(t=>q(...t))),this.componentRef=null,this.viewChangeDetectorRef=null,this.inputChanges=null,this.hasInputChanges=!1,this.implementsOnChanges=!1,this.scheduledChangeDetectionFn=null,this.scheduledDestroyFn=null,this.initialInputValues=new Map,this.unchangedInputs=new Set(this.componentFactory.inputs.map(({propName:t})=>t)),this.ngZone=this.injector.get(eu),this.elementZone="undefined"==typeof Zone?null:this.ngZone.run(()=>Zone.current)}connect(t){this.runInZone(()=>{if(null!==this.scheduledDestroyFn)return this.scheduledDestroyFn(),void(this.scheduledDestroyFn=null);null===this.componentRef&&this.initializeComponent(t)})}disconnect(){this.runInZone(()=>{null!==this.componentRef&&null===this.scheduledDestroyFn&&(this.scheduledDestroyFn=sd.schedule(()=>{null!==this.componentRef&&(this.componentRef.destroy(),this.componentRef=null,this.viewChangeDetectorRef=null)},10))})}getInputValue(t){return this.runInZone(()=>null===this.componentRef?this.initialInputValues.get(t):this.componentRef.instance[t])}setInputValue(t,e){this.runInZone(()=>{var n,r;null!==this.componentRef?((n=e)!==(r=this.getInputValue(t))&&(n==n||r==r)||void 0===e&&this.unchangedInputs.has(t))&&(this.recordInputChange(t,e),this.unchangedInputs.delete(t),this.hasInputChanges=!0,this.componentRef.instance[t]=e,this.scheduleDetectChanges()):this.initialInputValues.set(t,e)})}initializeComponent(t){const e=Wi.create({providers:[],parent:this.injector}),n=function(t,e){const n=t.childNodes,r=e.map(()=>[]);let s=-1;e.some((t,e)=>"*"===t&&(s=e,!0));for(let i=0,o=n.length;i<o;++i){const t=n[i],o=od(t,e,s);-1!==o&&r[o].push(t)}return r}(t,this.componentFactory.ngContentSelectors);this.componentRef=this.componentFactory.create(e,n,t),this.viewChangeDetectorRef=this.componentRef.injector.get(Ua),this.implementsOnChanges="function"==typeof this.componentRef.instance.ngOnChanges,this.initializeInputs(),this.initializeOutputs(this.componentRef),this.detectChanges(),this.injector.get(_u).attachView(this.componentRef.hostView)}initializeInputs(){this.componentFactory.inputs.forEach(({propName:t})=>{this.initialInputValues.has(t)&&this.setInputValue(t,this.initialInputValues.get(t))}),this.initialInputValues.clear()}initializeOutputs(t){const e=this.componentFactory.outputs.map(({propName:e,templateName:n})=>t.instance[e].pipe(S(t=>({name:n,value:t}))));this.eventEmitters.next(e)}callNgOnChanges(t){if(!this.implementsOnChanges||null===this.inputChanges)return;const e=this.inputChanges;this.inputChanges=null,t.instance.ngOnChanges(e)}markViewForCheck(t){this.hasInputChanges&&(this.hasInputChanges=!1,t.markForCheck())}scheduleDetectChanges(){this.scheduledChangeDetectionFn||(this.scheduledChangeDetectionFn=sd.scheduleBeforeRender(()=>{this.scheduledChangeDetectionFn=null,this.detectChanges()}))}recordInputChange(t,e){if(!this.implementsOnChanges)return;null===this.inputChanges&&(this.inputChanges={});const n=this.inputChanges[t];if(n)return void(n.currentValue=e);const r=this.unchangedInputs.has(t),s=r?void 0:this.getInputValue(t);this.inputChanges[t]=new ae(s,e,r)}detectChanges(){null!==this.componentRef&&(this.callNgOnChanges(this.componentRef),this.markViewForCheck(this.viewChangeDetectorRef),this.componentRef.changeDetectorRef.detectChanges())}runInZone(t){return this.elementZone&&Zone.current!==this.elementZone?this.ngZone.run(t):t()}}class ud extends HTMLElement{constructor(){super(...arguments),this.ngElementEventsSubscription=null}}function cd(t,e){return new v(n=>{const r=t.length;if(0===r)return void n.complete();const s=new Array(r);let i=0,o=0;for(let a=0;a<r;a++){const l=j(t[a]);let u=!1;n.add(l.subscribe({next:t=>{u||(u=!0,o++),s[a]=t},error:t=>n.error(t),complete:()=>{i++,i!==r&&u||(o===r&&n.next(e?e.reduce((t,e,n)=>(t[e]=s[n],t),{}):s),n.complete())}}))}})}new _a("12.0.5");let hd=(()=>{class t{constructor(t,e){this._renderer=t,this._elementRef=e,this.onChange=t=>{},this.onTouched=()=>{}}setProperty(t,e){this._renderer.setProperty(this._elementRef.nativeElement,t,e)}registerOnTouched(t){this.onTouched=t}registerOnChange(t){this.onChange=t}setDisabledState(t){this.setProperty("disabled",t)}}return t.\u0275fac=function(e){return new(e||t)(ao(va),ao(ga))},t.\u0275dir=Zt({type:t}),t})(),dd=(()=>{class t extends hd{}return t.\u0275fac=function(){let e;return function(n){return(e||(e=Vn(t)))(n||t)}}(),t.\u0275dir=Zt({type:t,features:[Zi]}),t})();const pd=new Hn("NgValueAccessor"),fd={provide:pd,useExisting:st(()=>md),multi:!0},gd=new Hn("CompositionEventMode");let md=(()=>{class t extends hd{constructor(t,e,n){super(t,e),this._compositionMode=n,this._composing=!1,null==this._compositionMode&&(this._compositionMode=!function(){const t=Pu()?Pu().getUserAgent():"";return/android (\d+)/.test(t.toLowerCase())}())}writeValue(t){this.setProperty("value",null==t?"":t)}_handleInput(t){(!this._compositionMode||this._compositionMode&&!this._composing)&&this.onChange(t)}_compositionStart(){this._composing=!0}_compositionEnd(t){this._composing=!1,this._compositionMode&&this.onChange(t)}}return t.\u0275fac=function(e){return new(e||t)(ao(va),ao(ga),ao(gd,8))},t.\u0275dir=Zt({type:t,selectors:[["input","formControlName","",3,"type","checkbox"],["textarea","formControlName",""],["input","formControl","",3,"type","checkbox"],["textarea","formControl",""],["input","ngModel","",3,"type","checkbox"],["textarea","ngModel",""],["","ngDefaultControl",""]],hostBindings:function(t,e){1&t&&vo("input",function(t){return e._handleInput(t.target.value)})("blur",function(){return e.onTouched()})("compositionstart",function(){return e._compositionStart()})("compositionend",function(t){return e._compositionEnd(t.target.value)})},features:[la([fd]),Zi]}),t})();const yd=new Hn("NgValidators"),vd=new Hn("NgAsyncValidators");function bd(t){return null!=t}function wd(t){const e=mo(t)?j(t):t;return yo(e),e}function _d(t){let e={};return t.forEach(t=>{e=null!=t?Object.assign(Object.assign({},e),t):e}),0===Object.keys(e).length?null:e}function Cd(t,e){return e.map(e=>e(t))}function Dd(t){return t.map(t=>function(t){return!t.validate}(t)?t:e=>t.validate(e))}function Ed(t){return null!=t?function(t){if(!t)return null;const e=t.filter(bd);return 0==e.length?null:function(t){return _d(Cd(t,e))}}(Dd(t)):null}function Ad(t){return null!=t?function(t){if(!t)return null;const e=t.filter(bd);return 0==e.length?null:function(t){return function(...t){if(1===t.length){const e=t[0];if(l(e))return cd(e,null);if(u(e)&&Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);return cd(t.map(t=>e[t]),t)}}if("function"==typeof t[t.length-1]){const e=t.pop();return cd(t=1===t.length&&l(t[0])?t[0]:t,null).pipe(S(t=>e(...t)))}return cd(t,null)}(Cd(t,e).map(wd)).pipe(S(_d))}}(Dd(t)):null}function Sd(t,e){return null===t?[e]:Array.isArray(t)?[...t,e]:[t,e]}let xd=(()=>{class t{constructor(){this._rawValidators=[],this._rawAsyncValidators=[],this._onDestroyCallbacks=[]}get value(){return this.control?this.control.value:null}get valid(){return this.control?this.control.valid:null}get invalid(){return this.control?this.control.invalid:null}get pending(){return this.control?this.control.pending:null}get disabled(){return this.control?this.control.disabled:null}get enabled(){return this.control?this.control.enabled:null}get errors(){return this.control?this.control.errors:null}get pristine(){return this.control?this.control.pristine:null}get dirty(){return this.control?this.control.dirty:null}get touched(){return this.control?this.control.touched:null}get status(){return this.control?this.control.status:null}get untouched(){return this.control?this.control.untouched:null}get statusChanges(){return this.control?this.control.statusChanges:null}get valueChanges(){return this.control?this.control.valueChanges:null}get path(){return null}_setValidators(t){this._rawValidators=t||[],this._composedValidatorFn=Ed(this._rawValidators)}_setAsyncValidators(t){this._rawAsyncValidators=t||[],this._composedAsyncValidatorFn=Ad(this._rawAsyncValidators)}get validator(){return this._composedValidatorFn||null}get asyncValidator(){return this._composedAsyncValidatorFn||null}_registerOnDestroy(t){this._onDestroyCallbacks.push(t)}_invokeOnDestroyCallbacks(){this._onDestroyCallbacks.forEach(t=>t()),this._onDestroyCallbacks=[]}reset(t){this.control&&this.control.reset(t)}hasError(t,e){return!!this.control&&this.control.hasError(t,e)}getError(t,e){return this.control?this.control.getError(t,e):null}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Zt({type:t}),t})(),kd=(()=>{class t extends xd{get formDirective(){return null}get path(){return null}}return t.\u0275fac=function(){let e;return function(n){return(e||(e=Vn(t)))(n||t)}}(),t.\u0275dir=Zt({type:t,features:[Zi]}),t})();class Td extends xd{constructor(){super(...arguments),this._parent=null,this.name=null,this.valueAccessor=null}}let Fd=(()=>{class t extends class{constructor(t){this._cd=t}is(t){var e,n;return!!(null===(n=null===(e=this._cd)||void 0===e?void 0:e.control)||void 0===n?void 0:n[t])}}{constructor(t){super(t)}}return t.\u0275fac=function(e){return new(e||t)(ao(Td,2))},t.\u0275dir=Zt({type:t,selectors:[["","formControlName",""],["","ngModel",""],["","formControl",""]],hostVars:14,hostBindings:function(t,e){2&t&&Oo("ng-untouched",e.is("untouched"))("ng-touched",e.is("touched"))("ng-pristine",e.is("pristine"))("ng-dirty",e.is("dirty"))("ng-valid",e.is("valid"))("ng-invalid",e.is("invalid"))("ng-pending",e.is("pending"))},features:[Zi]}),t})();function Od(t,e){t.forEach(t=>{t.registerOnValidatorChange&&t.registerOnValidatorChange(e)})}function Pd(t,e){t._pendingDirty&&t.markAsDirty(),t.setValue(t._pendingValue,{emitModelToViewChange:!1}),e.viewToModelUpdate(t._pendingValue),t._pendingChange=!1}function Id(t,e){const n=t.indexOf(e);n>-1&&t.splice(n,1)}const Rd="VALID",Md="INVALID",jd="PENDING",Nd="DISABLED";function Vd(t){return(Hd(t)?t.validators:t)||null}function Ld(t){return Array.isArray(t)?Ed(t):t||null}function Bd(t,e){return(Hd(e)?e.asyncValidators:t)||null}function Ud(t){return Array.isArray(t)?Ad(t):t||null}function Hd(t){return null!=t&&!Array.isArray(t)&&"object"==typeof t}class $d{constructor(t,e){this._hasOwnPendingAsyncValidator=!1,this._onCollectionChange=()=>{},this._parent=null,this.pristine=!0,this.touched=!1,this._onDisabledChange=[],this._rawValidators=t,this._rawAsyncValidators=e,this._composedValidatorFn=Ld(this._rawValidators),this._composedAsyncValidatorFn=Ud(this._rawAsyncValidators)}get validator(){return this._composedValidatorFn}set validator(t){this._rawValidators=this._composedValidatorFn=t}get asyncValidator(){return this._composedAsyncValidatorFn}set asyncValidator(t){this._rawAsyncValidators=this._composedAsyncValidatorFn=t}get parent(){return this._parent}get valid(){return this.status===Rd}get invalid(){return this.status===Md}get pending(){return this.status==jd}get disabled(){return this.status===Nd}get enabled(){return this.status!==Nd}get dirty(){return!this.pristine}get untouched(){return!this.touched}get updateOn(){return this._updateOn?this._updateOn:this.parent?this.parent.updateOn:"change"}setValidators(t){this._rawValidators=t,this._composedValidatorFn=Ld(t)}setAsyncValidators(t){this._rawAsyncValidators=t,this._composedAsyncValidatorFn=Ud(t)}clearValidators(){this.validator=null}clearAsyncValidators(){this.asyncValidator=null}markAsTouched(t={}){this.touched=!0,this._parent&&!t.onlySelf&&this._parent.markAsTouched(t)}markAllAsTouched(){this.markAsTouched({onlySelf:!0}),this._forEachChild(t=>t.markAllAsTouched())}markAsUntouched(t={}){this.touched=!1,this._pendingTouched=!1,this._forEachChild(t=>{t.markAsUntouched({onlySelf:!0})}),this._parent&&!t.onlySelf&&this._parent._updateTouched(t)}markAsDirty(t={}){this.pristine=!1,this._parent&&!t.onlySelf&&this._parent.markAsDirty(t)}markAsPristine(t={}){this.pristine=!0,this._pendingDirty=!1,this._forEachChild(t=>{t.markAsPristine({onlySelf:!0})}),this._parent&&!t.onlySelf&&this._parent._updatePristine(t)}markAsPending(t={}){this.status=jd,!1!==t.emitEvent&&this.statusChanges.emit(this.status),this._parent&&!t.onlySelf&&this._parent.markAsPending(t)}disable(t={}){const e=this._parentMarkedDirty(t.onlySelf);this.status=Nd,this.errors=null,this._forEachChild(e=>{e.disable(Object.assign(Object.assign({},t),{onlySelf:!0}))}),this._updateValue(),!1!==t.emitEvent&&(this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._updateAncestors(Object.assign(Object.assign({},t),{skipPristineCheck:e})),this._onDisabledChange.forEach(t=>t(!0))}enable(t={}){const e=this._parentMarkedDirty(t.onlySelf);this.status=Rd,this._forEachChild(e=>{e.enable(Object.assign(Object.assign({},t),{onlySelf:!0}))}),this.updateValueAndValidity({onlySelf:!0,emitEvent:t.emitEvent}),this._updateAncestors(Object.assign(Object.assign({},t),{skipPristineCheck:e})),this._onDisabledChange.forEach(t=>t(!1))}_updateAncestors(t){this._parent&&!t.onlySelf&&(this._parent.updateValueAndValidity(t),t.skipPristineCheck||this._parent._updatePristine(),this._parent._updateTouched())}setParent(t){this._parent=t}updateValueAndValidity(t={}){this._setInitialStatus(),this._updateValue(),this.enabled&&(this._cancelExistingSubscription(),this.errors=this._runValidator(),this.status=this._calculateStatus(),this.status!==Rd&&this.status!==jd||this._runAsyncValidator(t.emitEvent)),!1!==t.emitEvent&&(this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._parent&&!t.onlySelf&&this._parent.updateValueAndValidity(t)}_updateTreeValidity(t={emitEvent:!0}){this._forEachChild(e=>e._updateTreeValidity(t)),this.updateValueAndValidity({onlySelf:!0,emitEvent:t.emitEvent})}_setInitialStatus(){this.status=this._allControlsDisabled()?Nd:Rd}_runValidator(){return this.validator?this.validator(this):null}_runAsyncValidator(t){if(this.asyncValidator){this.status=jd,this._hasOwnPendingAsyncValidator=!0;const e=wd(this.asyncValidator(this));this._asyncValidationSubscription=e.subscribe(e=>{this._hasOwnPendingAsyncValidator=!1,this.setErrors(e,{emitEvent:t})})}}_cancelExistingSubscription(){this._asyncValidationSubscription&&(this._asyncValidationSubscription.unsubscribe(),this._hasOwnPendingAsyncValidator=!1)}setErrors(t,e={}){this.errors=t,this._updateControlsErrors(!1!==e.emitEvent)}get(t){return function(t,e,n){if(null==e)return null;if(Array.isArray(e)||(e=e.split(".")),Array.isArray(e)&&0===e.length)return null;let r=t;return e.forEach(t=>{r=r instanceof qd?r.controls.hasOwnProperty(t)?r.controls[t]:null:r instanceof Wd&&r.at(t)||null}),r}(this,t)}getError(t,e){const n=e?this.get(e):this;return n&&n.errors?n.errors[t]:null}hasError(t,e){return!!this.getError(t,e)}get root(){let t=this;for(;t._parent;)t=t._parent;return t}_updateControlsErrors(t){this.status=this._calculateStatus(),t&&this.statusChanges.emit(this.status),this._parent&&this._parent._updateControlsErrors(t)}_initObservables(){this.valueChanges=new gl,this.statusChanges=new gl}_calculateStatus(){return this._allControlsDisabled()?Nd:this.errors?Md:this._hasOwnPendingAsyncValidator||this._anyControlsHaveStatus(jd)?jd:this._anyControlsHaveStatus(Md)?Md:Rd}_anyControlsHaveStatus(t){return this._anyControls(e=>e.status===t)}_anyControlsDirty(){return this._anyControls(t=>t.dirty)}_anyControlsTouched(){return this._anyControls(t=>t.touched)}_updatePristine(t={}){this.pristine=!this._anyControlsDirty(),this._parent&&!t.onlySelf&&this._parent._updatePristine(t)}_updateTouched(t={}){this.touched=this._anyControlsTouched(),this._parent&&!t.onlySelf&&this._parent._updateTouched(t)}_isBoxedValue(t){return"object"==typeof t&&null!==t&&2===Object.keys(t).length&&"value"in t&&"disabled"in t}_registerOnCollectionChange(t){this._onCollectionChange=t}_setUpdateStrategy(t){Hd(t)&&null!=t.updateOn&&(this._updateOn=t.updateOn)}_parentMarkedDirty(t){return!t&&!(!this._parent||!this._parent.dirty)&&!this._parent._anyControlsDirty()}}class zd extends $d{constructor(t=null,e,n){super(Vd(e),Bd(n,e)),this._onChange=[],this._applyFormState(t),this._setUpdateStrategy(e),this._initObservables(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!n})}setValue(t,e={}){this.value=this._pendingValue=t,this._onChange.length&&!1!==e.emitModelToViewChange&&this._onChange.forEach(t=>t(this.value,!1!==e.emitViewToModelChange)),this.updateValueAndValidity(e)}patchValue(t,e={}){this.setValue(t,e)}reset(t=null,e={}){this._applyFormState(t),this.markAsPristine(e),this.markAsUntouched(e),this.setValue(this.value,e),this._pendingChange=!1}_updateValue(){}_anyControls(t){return!1}_allControlsDisabled(){return this.disabled}registerOnChange(t){this._onChange.push(t)}_unregisterOnChange(t){Id(this._onChange,t)}registerOnDisabledChange(t){this._onDisabledChange.push(t)}_unregisterOnDisabledChange(t){Id(this._onDisabledChange,t)}_forEachChild(t){}_syncPendingControls(){return!("submit"!==this.updateOn||(this._pendingDirty&&this.markAsDirty(),this._pendingTouched&&this.markAsTouched(),!this._pendingChange)||(this.setValue(this._pendingValue,{onlySelf:!0,emitModelToViewChange:!1}),0))}_applyFormState(t){this._isBoxedValue(t)?(this.value=this._pendingValue=t.value,t.disabled?this.disable({onlySelf:!0,emitEvent:!1}):this.enable({onlySelf:!0,emitEvent:!1})):this.value=this._pendingValue=t}}class qd extends $d{constructor(t,e,n){super(Vd(e),Bd(n,e)),this.controls=t,this._initObservables(),this._setUpdateStrategy(e),this._setUpControls(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!n})}registerControl(t,e){return this.controls[t]?this.controls[t]:(this.controls[t]=e,e.setParent(this),e._registerOnCollectionChange(this._onCollectionChange),e)}addControl(t,e,n={}){this.registerControl(t,e),this.updateValueAndValidity({emitEvent:n.emitEvent}),this._onCollectionChange()}removeControl(t,e={}){this.controls[t]&&this.controls[t]._registerOnCollectionChange(()=>{}),delete this.controls[t],this.updateValueAndValidity({emitEvent:e.emitEvent}),this._onCollectionChange()}setControl(t,e,n={}){this.controls[t]&&this.controls[t]._registerOnCollectionChange(()=>{}),delete this.controls[t],e&&this.registerControl(t,e),this.updateValueAndValidity({emitEvent:n.emitEvent}),this._onCollectionChange()}contains(t){return this.controls.hasOwnProperty(t)&&this.controls[t].enabled}setValue(t,e={}){this._checkAllValuesPresent(t),Object.keys(t).forEach(n=>{this._throwIfControlMissing(n),this.controls[n].setValue(t[n],{onlySelf:!0,emitEvent:e.emitEvent})}),this.updateValueAndValidity(e)}patchValue(t,e={}){null!=t&&(Object.keys(t).forEach(n=>{this.controls[n]&&this.controls[n].patchValue(t[n],{onlySelf:!0,emitEvent:e.emitEvent})}),this.updateValueAndValidity(e))}reset(t={},e={}){this._forEachChild((n,r)=>{n.reset(t[r],{onlySelf:!0,emitEvent:e.emitEvent})}),this._updatePristine(e),this._updateTouched(e),this.updateValueAndValidity(e)}getRawValue(){return this._reduceChildren({},(t,e,n)=>(t[n]=e instanceof zd?e.value:e.getRawValue(),t))}_syncPendingControls(){let t=this._reduceChildren(!1,(t,e)=>!!e._syncPendingControls()||t);return t&&this.updateValueAndValidity({onlySelf:!0}),t}_throwIfControlMissing(t){if(!Object.keys(this.controls).length)throw new Error("\n        There are no form controls registered with this group yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ");if(!this.controls[t])throw new Error(`Cannot find form control with name: ${t}.`)}_forEachChild(t){Object.keys(this.controls).forEach(e=>{const n=this.controls[e];n&&t(n,e)})}_setUpControls(){this._forEachChild(t=>{t.setParent(this),t._registerOnCollectionChange(this._onCollectionChange)})}_updateValue(){this.value=this._reduceValue()}_anyControls(t){for(const e of Object.keys(this.controls)){const n=this.controls[e];if(this.contains(e)&&t(n))return!0}return!1}_reduceValue(){return this._reduceChildren({},(t,e,n)=>((e.enabled||this.disabled)&&(t[n]=e.value),t))}_reduceChildren(t,e){let n=t;return this._forEachChild((t,r)=>{n=e(n,t,r)}),n}_allControlsDisabled(){for(const t of Object.keys(this.controls))if(this.controls[t].enabled)return!1;return Object.keys(this.controls).length>0||this.disabled}_checkAllValuesPresent(t){this._forEachChild((e,n)=>{if(void 0===t[n])throw new Error(`Must supply a value for form control with name: '${n}'.`)})}}class Wd extends $d{constructor(t,e,n){super(Vd(e),Bd(n,e)),this.controls=t,this._initObservables(),this._setUpdateStrategy(e),this._setUpControls(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!n})}at(t){return this.controls[t]}push(t,e={}){this.controls.push(t),this._registerControl(t),this.updateValueAndValidity({emitEvent:e.emitEvent}),this._onCollectionChange()}insert(t,e,n={}){this.controls.splice(t,0,e),this._registerControl(e),this.updateValueAndValidity({emitEvent:n.emitEvent})}removeAt(t,e={}){this.controls[t]&&this.controls[t]._registerOnCollectionChange(()=>{}),this.controls.splice(t,1),this.updateValueAndValidity({emitEvent:e.emitEvent})}setControl(t,e,n={}){this.controls[t]&&this.controls[t]._registerOnCollectionChange(()=>{}),this.controls.splice(t,1),e&&(this.controls.splice(t,0,e),this._registerControl(e)),this.updateValueAndValidity({emitEvent:n.emitEvent}),this._onCollectionChange()}get length(){return this.controls.length}setValue(t,e={}){this._checkAllValuesPresent(t),t.forEach((t,n)=>{this._throwIfControlMissing(n),this.at(n).setValue(t,{onlySelf:!0,emitEvent:e.emitEvent})}),this.updateValueAndValidity(e)}patchValue(t,e={}){null!=t&&(t.forEach((t,n)=>{this.at(n)&&this.at(n).patchValue(t,{onlySelf:!0,emitEvent:e.emitEvent})}),this.updateValueAndValidity(e))}reset(t=[],e={}){this._forEachChild((n,r)=>{n.reset(t[r],{onlySelf:!0,emitEvent:e.emitEvent})}),this._updatePristine(e),this._updateTouched(e),this.updateValueAndValidity(e)}getRawValue(){return this.controls.map(t=>t instanceof zd?t.value:t.getRawValue())}clear(t={}){this.controls.length<1||(this._forEachChild(t=>t._registerOnCollectionChange(()=>{})),this.controls.splice(0),this.updateValueAndValidity({emitEvent:t.emitEvent}))}_syncPendingControls(){let t=this.controls.reduce((t,e)=>!!e._syncPendingControls()||t,!1);return t&&this.updateValueAndValidity({onlySelf:!0}),t}_throwIfControlMissing(t){if(!this.controls.length)throw new Error("\n        There are no form controls registered with this array yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ");if(!this.at(t))throw new Error(`Cannot find form control at index ${t}`)}_forEachChild(t){this.controls.forEach((e,n)=>{t(e,n)})}_updateValue(){this.value=this.controls.filter(t=>t.enabled||this.disabled).map(t=>t.value)}_anyControls(t){return this.controls.some(e=>e.enabled&&t(e))}_setUpControls(){this._forEachChild(t=>this._registerControl(t))}_checkAllValuesPresent(t){this._forEachChild((e,n)=>{if(void 0===t[n])throw new Error(`Must supply a value for form control at index: ${n}.`)})}_allControlsDisabled(){for(const t of this.controls)if(t.enabled)return!1;return this.controls.length>0||this.disabled}_registerControl(t){t.setParent(this),t._registerOnCollectionChange(this._onCollectionChange)}}const Gd={provide:Td,useExisting:st(()=>Kd)},Zd=(()=>Promise.resolve(null))();let Kd=(()=>{class t extends Td{constructor(t,e,n,r){super(),this.control=new zd,this._registered=!1,this.update=new gl,this._parent=t,this._setValidators(e),this._setAsyncValidators(n),this.valueAccessor=function(t,e){if(!e)return null;let n,r,s;return Array.isArray(e),e.forEach(t=>{t.constructor===md?n=t:Object.getPrototypeOf(t.constructor)===dd?r=t:s=t}),s||r||n||null}(0,r)}ngOnChanges(t){this._checkForErrors(),this._registered||this._setUpControl(),"isDisabled"in t&&this._updateDisabled(t),function(t,e){if(!t.hasOwnProperty("model"))return!1;const n=t.model;return!!n.isFirstChange()||!Object.is(e,n.currentValue)}(t,this.viewModel)&&(this._updateValue(this.model),this.viewModel=this.model)}ngOnDestroy(){this.formDirective&&this.formDirective.removeControl(this)}get path(){return this._parent?[...this._parent.path,this.name]:[this.name]}get formDirective(){return this._parent?this._parent.formDirective:null}viewToModelUpdate(t){this.viewModel=t,this.update.emit(t)}_setUpControl(){this._setUpdateStrategy(),this._isStandalone()?this._setUpStandalone():this.formDirective.addControl(this),this._registered=!0}_setUpdateStrategy(){this.options&&null!=this.options.updateOn&&(this.control._updateOn=this.options.updateOn)}_isStandalone(){return!this._parent||!(!this.options||!this.options.standalone)}_setUpStandalone(){var t,e;(function(t,e){const n=function(t){return t._rawValidators}(t);null!==e.validator?t.setValidators(Sd(n,e.validator)):"function"==typeof n&&t.setValidators([n]);const r=function(t){return t._rawAsyncValidators}(t);null!==e.asyncValidator?t.setAsyncValidators(Sd(r,e.asyncValidator)):"function"==typeof r&&t.setAsyncValidators([r]);const s=()=>t.updateValueAndValidity();Od(e._rawValidators,s),Od(e._rawAsyncValidators,s)})(t=this.control,e=this),e.valueAccessor.writeValue(t.value),function(t,e){e.valueAccessor.registerOnChange(n=>{t._pendingValue=n,t._pendingChange=!0,t._pendingDirty=!0,"change"===t.updateOn&&Pd(t,e)})}(t,e),function(t,e){const n=(t,n)=>{e.valueAccessor.writeValue(t),n&&e.viewToModelUpdate(t)};t.registerOnChange(n),e._registerOnDestroy(()=>{t._unregisterOnChange(n)})}(t,e),function(t,e){e.valueAccessor.registerOnTouched(()=>{t._pendingTouched=!0,"blur"===t.updateOn&&t._pendingChange&&Pd(t,e),"submit"!==t.updateOn&&t.markAsTouched()})}(t,e),function(t,e){if(e.valueAccessor.setDisabledState){const n=t=>{e.valueAccessor.setDisabledState(t)};t.registerOnDisabledChange(n),e._registerOnDestroy(()=>{t._unregisterOnDisabledChange(n)})}}(t,e),this.control.updateValueAndValidity({emitEvent:!1})}_checkForErrors(){this._isStandalone()||this._checkParentType(),this._checkName()}_checkParentType(){}_checkName(){this.options&&this.options.name&&(this.name=this.options.name),this._isStandalone()}_updateValue(t){Zd.then(()=>{this.control.setValue(t,{emitViewToModelChange:!1})})}_updateDisabled(t){const e=t.isDisabled.currentValue,n=""===e||e&&"false"!==e;Zd.then(()=>{n&&!this.control.disabled?this.control.disable():!n&&this.control.disabled&&this.control.enable()})}}return t.\u0275fac=function(e){return new(e||t)(ao(kd,9),ao(yd,10),ao(vd,10),ao(pd,10))},t.\u0275dir=Zt({type:t,selectors:[["","ngModel","",3,"formControlName","",3,"formControl",""]],inputs:{name:"name",isDisabled:["disabled","isDisabled"],model:["ngModel","model"],options:["ngModelOptions","options"]},outputs:{update:"ngModelChange"},exportAs:["ngModel"],features:[la([Gd]),Zi,le]}),t})(),Yd=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({}),t})(),Qd=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[Yd]]}),t})(),Xd=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[Qd]}),t})();const Jd=new Hh(Lh);function tp(t){return!l(t)&&t-parseFloat(t)+1>=0}function ep(t){const{index:e,period:n,subscriber:r}=t;if(r.next(e),!r.closed){if(-1===n)return r.complete();t.index=e+1,this.schedule(t,n)}}function np(t,e=null){return{type:4,styles:e,timings:t}}function rp(t){return{type:6,styles:t,offset:null}}function sp(t,e,n=null){return{type:1,expr:t,animation:e,options:n}}class ip extends D{constructor(t){super(),this._value=t}get value(){return this.getValue()}_subscribe(t){const e=super._subscribe(t);return e&&!e.closed&&t.next(this._value),e}getValue(){if(this.hasError)throw this.thrownError;if(this.closed)throw new w;return this._value}next(t){super.next(this._value=t)}}class op extends f{notifyNext(t,e,n,r,s){this.destination.next(e)}notifyError(t,e){this.destination.error(t)}notifyComplete(t){this.destination.complete()}}class ap extends f{constructor(t,e,n){super(),this.parent=t,this.outerValue=e,this.outerIndex=n,this.index=0}_next(t){this.parent.notifyNext(this.outerValue,t,this.outerIndex,this.index++,this)}_error(t){this.parent.notifyError(t,this),this.unsubscribe()}_complete(){this.parent.notifyComplete(this),this.unsubscribe()}}function lp(t,e,n,r,s=new ap(t,n,r)){if(!s.closed)return e instanceof v?e.subscribe(s):R(e)(s)}const up={};class cp{constructor(t){this.resultSelector=t}call(t,e){return e.subscribe(new hp(t,this.resultSelector))}}class hp extends op{constructor(t,e){super(t),this.resultSelector=e,this.active=0,this.values=[],this.observables=[]}_next(t){this.values.push(up),this.observables.push(t)}_complete(){const t=this.observables,e=t.length;if(0===e)this.destination.complete();else{this.active=e,this.toRespond=e;for(let n=0;n<e;n++)this.add(lp(this,t[n],void 0,n))}}notifyComplete(t){0==(this.active-=1)&&this.destination.complete()}notifyNext(t,e,n){const r=this.values,s=this.toRespond?r[n]===up?--this.toRespond:this.toRespond:0;r[n]=e,0===s&&(this.resultSelector?this._tryResultSelector(r):this.destination.next(r.slice()))}_tryResultSelector(t){let e;try{e=this.resultSelector.apply(this,t)}catch(n){return void this.destination.error(n)}this.destination.next(e)}}const dp=(()=>{function t(){return Error.call(this),this.message="no elements in sequence",this.name="EmptyError",this}return t.prototype=Object.create(Error.prototype),t})();function pp(...t){return $(1)(Gh(...t))}function fp(t){return new v(e=>{let n;try{n=t()}catch(r){return void e.error(r)}return(n?j(n):Wh()).subscribe(e)})}const gp=(()=>{function t(){return Error.call(this),this.message="argument out of range",this.name="ArgumentOutOfRangeError",this}return t.prototype=Object.create(Error.prototype),t})();function mp(t){return e=>0===t?Wh():e.lift(new yp(t))}class yp{constructor(t){if(this.total=t,this.total<0)throw new gp}call(t,e){return e.subscribe(new vp(t,this.total))}}class vp extends f{constructor(t,e){super(t),this.total=e,this.count=0}_next(t){const e=this.total,n=++this.count;n<=e&&(this.destination.next(t),n===e&&(this.destination.complete(),this.unsubscribe()))}}function bp(t,e){let n=!1;return arguments.length>=2&&(n=!0),function(r){return r.lift(new wp(t,e,n))}}class wp{constructor(t,e,n=!1){this.accumulator=t,this.seed=e,this.hasSeed=n}call(t,e){return e.subscribe(new _p(t,this.accumulator,this.seed,this.hasSeed))}}class _p extends f{constructor(t,e,n,r){super(t),this.accumulator=e,this._seed=n,this.hasSeed=r,this.index=0}get seed(){return this._seed}set seed(t){this.hasSeed=!0,this._seed=t}_next(t){if(this.hasSeed)return this._tryNext(t);this.seed=t,this.destination.next(t)}_tryNext(t){const e=this.index++;let n;try{n=this.accumulator(this.seed,t,e)}catch(r){this.destination.error(r)}this.seed=n,this.destination.next(n)}}function Cp(t,e){return function(n){return n.lift(new Dp(t,e))}}class Dp{constructor(t,e){this.predicate=t,this.thisArg=e}call(t,e){return e.subscribe(new Ep(t,this.predicate,this.thisArg))}}class Ep extends f{constructor(t,e,n){super(t),this.predicate=e,this.thisArg=n,this.count=0}_next(t){let e;try{e=this.predicate.call(this.thisArg,t,this.count++)}catch(n){return void this.destination.error(n)}e&&this.destination.next(t)}}function Ap(t){return function(e){const n=new Sp(t),r=e.lift(n);return n.caught=r}}class Sp{constructor(t){this.selector=t}call(t,e){return e.subscribe(new xp(t,this.selector,this.caught))}}class xp extends V{constructor(t,e,n){super(t),this.selector=e,this.caught=n}error(t){if(!this.isStopped){let n;try{n=this.selector(t,this.caught)}catch(e){return void super.error(e)}this._unsubscribeAndRecycle();const r=new N(this);this.add(r);const s=L(n,r);s!==r&&this.add(s)}}}function kp(t,e){return B(t,e,1)}function Tp(t){return function(e){return 0===t?Wh():e.lift(new Fp(t))}}class Fp{constructor(t){if(this.total=t,this.total<0)throw new gp}call(t,e){return e.subscribe(new Op(t,this.total))}}class Op extends f{constructor(t,e){super(t),this.total=e,this.ring=new Array,this.count=0}_next(t){const e=this.ring,n=this.total,r=this.count++;e.length<n?e.push(t):e[r%n]=t}_complete(){const t=this.destination;let e=this.count;if(e>0){const n=this.count>=this.total?this.total:this.count,r=this.ring;for(let s=0;s<n;s++){const s=e++%n;t.next(r[s])}}t.complete()}}function Pp(t=Mp){return e=>e.lift(new Ip(t))}class Ip{constructor(t){this.errorFactory=t}call(t,e){return e.subscribe(new Rp(t,this.errorFactory))}}class Rp extends f{constructor(t,e){super(t),this.errorFactory=e,this.hasValue=!1}_next(t){this.hasValue=!0,this.destination.next(t)}_complete(){if(this.hasValue)return this.destination.complete();{let e;try{e=this.errorFactory()}catch(t){e=t}this.destination.error(e)}}}function Mp(){return new dp}function jp(t=null){return e=>e.lift(new Np(t))}class Np{constructor(t){this.defaultValue=t}call(t,e){return e.subscribe(new Vp(t,this.defaultValue))}}class Vp extends f{constructor(t,e){super(t),this.defaultValue=e,this.isEmpty=!0}_next(t){this.isEmpty=!1,this.destination.next(t)}_complete(){this.isEmpty&&this.destination.next(this.defaultValue),this.destination.complete()}}function Lp(t,e){const n=arguments.length>=2;return r=>r.pipe(t?Cp((e,n)=>t(e,n,r)):y,mp(1),n?jp(e):Pp(()=>new dp))}function Bp(){}function Up(t,e,n){return function(r){return r.lift(new Hp(t,e,n))}}class Hp{constructor(t,e,n){this.nextOrObserver=t,this.error=e,this.complete=n}call(t,e){return e.subscribe(new $p(t,this.nextOrObserver,this.error,this.complete))}}class $p extends f{constructor(t,e,n,s){super(t),this._tapNext=Bp,this._tapError=Bp,this._tapComplete=Bp,this._tapError=n||Bp,this._tapComplete=s||Bp,r(e)?(this._context=this,this._tapNext=e):e&&(this._context=e,this._tapNext=e.next||Bp,this._tapError=e.error||Bp,this._tapComplete=e.complete||Bp)}_next(t){try{this._tapNext.call(this._context,t)}catch(e){return void this.destination.error(e)}this.destination.next(t)}_error(t){try{this._tapError.call(this._context,t)}catch(t){return void this.destination.error(t)}this.destination.error(t)}_complete(){try{this._tapComplete.call(this._context)}catch(t){return void this.destination.error(t)}return this.destination.complete()}}class zp{constructor(t){this.callback=t}call(t,e){return e.subscribe(new qp(t,this.callback))}}class qp extends f{constructor(t,e){super(t),this.add(new h(e))}}class Wp{constructor(t,e){this.id=t,this.url=e}}class Gp extends Wp{constructor(t,e,n="imperative",r=null){super(t,e),this.navigationTrigger=n,this.restoredState=r}toString(){return`NavigationStart(id: ${this.id}, url: '${this.url}')`}}class Zp extends Wp{constructor(t,e,n){super(t,e),this.urlAfterRedirects=n}toString(){return`NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`}}class Kp extends Wp{constructor(t,e,n){super(t,e),this.reason=n}toString(){return`NavigationCancel(id: ${this.id}, url: '${this.url}')`}}class Yp extends Wp{constructor(t,e,n){super(t,e),this.error=n}toString(){return`NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`}}class Qp extends Wp{constructor(t,e,n,r){super(t,e),this.urlAfterRedirects=n,this.state=r}toString(){return`RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class Xp extends Wp{constructor(t,e,n,r){super(t,e),this.urlAfterRedirects=n,this.state=r}toString(){return`GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class Jp extends Wp{constructor(t,e,n,r,s){super(t,e),this.urlAfterRedirects=n,this.state=r,this.shouldActivate=s}toString(){return`GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`}}class tf extends Wp{constructor(t,e,n,r){super(t,e),this.urlAfterRedirects=n,this.state=r}toString(){return`ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class ef extends Wp{constructor(t,e,n,r){super(t,e),this.urlAfterRedirects=n,this.state=r}toString(){return`ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class nf{constructor(t){this.route=t}toString(){return`RouteConfigLoadStart(path: ${this.route.path})`}}class rf{constructor(t){this.route=t}toString(){return`RouteConfigLoadEnd(path: ${this.route.path})`}}class sf{constructor(t){this.snapshot=t}toString(){return`ChildActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class of{constructor(t){this.snapshot=t}toString(){return`ChildActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class af{constructor(t){this.snapshot=t}toString(){return`ActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class lf{constructor(t){this.snapshot=t}toString(){return`ActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class uf{constructor(t,e,n){this.routerEvent=t,this.position=e,this.anchor=n}toString(){return`Scroll(anchor: '${this.anchor}', position: '${this.position?`${this.position[0]}, ${this.position[1]}`:null}')`}}const cf="primary";class hf{constructor(t){this.params=t||{}}has(t){return Object.prototype.hasOwnProperty.call(this.params,t)}get(t){if(this.has(t)){const e=this.params[t];return Array.isArray(e)?e[0]:e}return null}getAll(t){if(this.has(t)){const e=this.params[t];return Array.isArray(e)?e:[e]}return[]}get keys(){return Object.keys(this.params)}}function df(t){return new hf(t)}function pf(t){const e=Error("NavigationCancelingError: "+t);return e.ngNavigationCancelingError=!0,e}function ff(t,e,n){const r=n.path.split("/");if(r.length>t.length)return null;if("full"===n.pathMatch&&(e.hasChildren()||r.length<t.length))return null;const s={};for(let i=0;i<r.length;i++){const e=r[i],n=t[i];if(e.startsWith(":"))s[e.substring(1)]=n;else if(e!==n.path)return null}return{consumed:t.slice(0,r.length),posParams:s}}function gf(t,e){const n=t?Object.keys(t):void 0,r=e?Object.keys(e):void 0;if(!n||!r||n.length!=r.length)return!1;let s;for(let i=0;i<n.length;i++)if(s=n[i],!mf(t[s],e[s]))return!1;return!0}function mf(t,e){if(Array.isArray(t)&&Array.isArray(e)){if(t.length!==e.length)return!1;const n=[...t].sort(),r=[...e].sort();return n.every((t,e)=>r[e]===t)}return t===e}function yf(t){return Array.prototype.concat.apply([],t)}function vf(t){return t.length>0?t[t.length-1]:null}function bf(t,e){for(const n in t)t.hasOwnProperty(n)&&e(t[n],n)}function wf(t){return yo(t)?t:mo(t)?j(Promise.resolve(t)):Gh(t)}const _f={exact:function t(e,n,r){if(!Ff(e.segments,n.segments))return!1;if(!Sf(e.segments,n.segments,r))return!1;if(e.numberOfChildren!==n.numberOfChildren)return!1;for(const s in n.children){if(!e.children[s])return!1;if(!t(e.children[s],n.children[s],r))return!1}return!0},subset:Ef},Cf={exact:function(t,e){return gf(t,e)},subset:function(t,e){return Object.keys(e).length<=Object.keys(t).length&&Object.keys(e).every(n=>mf(t[n],e[n]))},ignored:()=>!0};function Df(t,e,n){return _f[n.paths](t.root,e.root,n.matrixParams)&&Cf[n.queryParams](t.queryParams,e.queryParams)&&!("exact"===n.fragment&&t.fragment!==e.fragment)}function Ef(t,e,n){return Af(t,e,e.segments,n)}function Af(t,e,n,r){if(t.segments.length>n.length){const s=t.segments.slice(0,n.length);return!!Ff(s,n)&&!e.hasChildren()&&!!Sf(s,n,r)}if(t.segments.length===n.length){if(!Ff(t.segments,n))return!1;if(!Sf(t.segments,n,r))return!1;for(const n in e.children){if(!t.children[n])return!1;if(!Ef(t.children[n],e.children[n],r))return!1}return!0}{const s=n.slice(0,t.segments.length),i=n.slice(t.segments.length);return!!Ff(t.segments,s)&&!!Sf(t.segments,s,r)&&!!t.children.primary&&Af(t.children.primary,e,i,r)}}function Sf(t,e,n){return e.every((e,r)=>Cf[n](t[r].parameters,e.parameters))}class xf{constructor(t,e,n){this.root=t,this.queryParams=e,this.fragment=n}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=df(this.queryParams)),this._queryParamMap}toString(){return If.serialize(this)}}class kf{constructor(t,e){this.segments=t,this.children=e,this.parent=null,bf(e,(t,e)=>t.parent=this)}hasChildren(){return this.numberOfChildren>0}get numberOfChildren(){return Object.keys(this.children).length}toString(){return Rf(this)}}class Tf{constructor(t,e){this.path=t,this.parameters=e}get parameterMap(){return this._parameterMap||(this._parameterMap=df(this.parameters)),this._parameterMap}toString(){return Uf(this)}}function Ff(t,e){return t.length===e.length&&t.every((t,n)=>t.path===e[n].path)}class Of{}class Pf{parse(t){const e=new Wf(t);return new xf(e.parseRootSegment(),e.parseQueryParams(),e.parseFragment())}serialize(t){var e;return`/${Mf(t.root,!0)}${function(t){const e=Object.keys(t).map(e=>{const n=t[e];return Array.isArray(n)?n.map(t=>`${Nf(e)}=${Nf(t)}`).join("&"):`${Nf(e)}=${Nf(n)}`});return e.length?`?${e.join("&")}`:""}(t.queryParams)}${"string"==typeof t.fragment?`#${e=t.fragment,encodeURI(e)}`:""}`}}const If=new Pf;function Rf(t){return t.segments.map(t=>Uf(t)).join("/")}function Mf(t,e){if(!t.hasChildren())return Rf(t);if(e){const e=t.children.primary?Mf(t.children.primary,!1):"",n=[];return bf(t.children,(t,e)=>{e!==cf&&n.push(`${e}:${Mf(t,!1)}`)}),n.length>0?`${e}(${n.join("//")})`:e}{const e=function(t,e){let n=[];return bf(t.children,(t,r)=>{r===cf&&(n=n.concat(e(t,r)))}),bf(t.children,(t,r)=>{r!==cf&&(n=n.concat(e(t,r)))}),n}(t,(e,n)=>n===cf?[Mf(t.children.primary,!1)]:[`${n}:${Mf(e,!1)}`]);return 1===Object.keys(t.children).length&&null!=t.children.primary?`${Rf(t)}/${e[0]}`:`${Rf(t)}/(${e.join("//")})`}}function jf(t){return encodeURIComponent(t).replace(/%40/g,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",")}function Nf(t){return jf(t).replace(/%3B/gi,";")}function Vf(t){return jf(t).replace(/\(/g,"%28").replace(/\)/g,"%29").replace(/%26/gi,"&")}function Lf(t){return decodeURIComponent(t)}function Bf(t){return Lf(t.replace(/\+/g,"%20"))}function Uf(t){return`${Vf(t.path)}${e=t.parameters,Object.keys(e).map(t=>`;${Vf(t)}=${Vf(e[t])}`).join("")}`;var e}const Hf=/^[^\/()?;=#]+/;function $f(t){const e=t.match(Hf);return e?e[0]:""}const zf=/^[^=?&#]+/,qf=/^[^?&#]+/;class Wf{constructor(t){this.url=t,this.remaining=t}parseRootSegment(){return this.consumeOptional("/"),""===this.remaining||this.peekStartsWith("?")||this.peekStartsWith("#")?new kf([],{}):new kf([],this.parseChildren())}parseQueryParams(){const t={};if(this.consumeOptional("?"))do{this.parseQueryParam(t)}while(this.consumeOptional("&"));return t}parseFragment(){return this.consumeOptional("#")?decodeURIComponent(this.remaining):null}parseChildren(){if(""===this.remaining)return{};this.consumeOptional("/");const t=[];for(this.peekStartsWith("(")||t.push(this.parseSegment());this.peekStartsWith("/")&&!this.peekStartsWith("//")&&!this.peekStartsWith("/(");)this.capture("/"),t.push(this.parseSegment());let e={};this.peekStartsWith("/(")&&(this.capture("/"),e=this.parseParens(!0));let n={};return this.peekStartsWith("(")&&(n=this.parseParens(!1)),(t.length>0||Object.keys(e).length>0)&&(n.primary=new kf(t,e)),n}parseSegment(){const t=$f(this.remaining);if(""===t&&this.peekStartsWith(";"))throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);return this.capture(t),new Tf(Lf(t),this.parseMatrixParams())}parseMatrixParams(){const t={};for(;this.consumeOptional(";");)this.parseParam(t);return t}parseParam(t){const e=$f(this.remaining);if(!e)return;this.capture(e);let n="";if(this.consumeOptional("=")){const t=$f(this.remaining);t&&(n=t,this.capture(n))}t[Lf(e)]=Lf(n)}parseQueryParam(t){const e=function(t){const e=t.match(zf);return e?e[0]:""}(this.remaining);if(!e)return;this.capture(e);let n="";if(this.consumeOptional("=")){const t=function(t){const e=t.match(qf);return e?e[0]:""}(this.remaining);t&&(n=t,this.capture(n))}const r=Bf(e),s=Bf(n);if(t.hasOwnProperty(r)){let e=t[r];Array.isArray(e)||(e=[e],t[r]=e),e.push(s)}else t[r]=s}parseParens(t){const e={};for(this.capture("(");!this.consumeOptional(")")&&this.remaining.length>0;){const n=$f(this.remaining),r=this.remaining[n.length];if("/"!==r&&")"!==r&&";"!==r)throw new Error(`Cannot parse url '${this.url}'`);let s;n.indexOf(":")>-1?(s=n.substr(0,n.indexOf(":")),this.capture(s),this.capture(":")):t&&(s=cf);const i=this.parseChildren();e[s]=1===Object.keys(i).length?i.primary:new kf([],i),this.consumeOptional("//")}return e}peekStartsWith(t){return this.remaining.startsWith(t)}consumeOptional(t){return!!this.peekStartsWith(t)&&(this.remaining=this.remaining.substring(t.length),!0)}capture(t){if(!this.consumeOptional(t))throw new Error(`Expected "${t}".`)}}class Gf{constructor(t){this._root=t}get root(){return this._root.value}parent(t){const e=this.pathFromRoot(t);return e.length>1?e[e.length-2]:null}children(t){const e=Zf(t,this._root);return e?e.children.map(t=>t.value):[]}firstChild(t){const e=Zf(t,this._root);return e&&e.children.length>0?e.children[0].value:null}siblings(t){const e=Kf(t,this._root);return e.length<2?[]:e[e.length-2].children.map(t=>t.value).filter(e=>e!==t)}pathFromRoot(t){return Kf(t,this._root).map(t=>t.value)}}function Zf(t,e){if(t===e.value)return e;for(const n of e.children){const e=Zf(t,n);if(e)return e}return null}function Kf(t,e){if(t===e.value)return[e];for(const n of e.children){const r=Kf(t,n);if(r.length)return r.unshift(e),r}return[]}class Yf{constructor(t,e){this.value=t,this.children=e}toString(){return`TreeNode(${this.value})`}}function Qf(t){const e={};return t&&t.children.forEach(t=>e[t.value.outlet]=t),e}class Xf extends Gf{constructor(t,e){super(t),this.snapshot=e,sg(this,t)}toString(){return this.snapshot.toString()}}function Jf(t,e){const n=function(t,e){const n=new ng([],{},{},"",{},cf,e,null,t.root,-1,{});return new rg("",new Yf(n,[]))}(t,e),r=new ip([new Tf("",{})]),s=new ip({}),i=new ip({}),o=new ip({}),a=new ip(""),l=new tg(r,s,o,a,i,cf,e,n.root);return l.snapshot=n.root,new Xf(new Yf(l,[]),n)}class tg{constructor(t,e,n,r,s,i,o,a){this.url=t,this.params=e,this.queryParams=n,this.fragment=r,this.data=s,this.outlet=i,this.component=o,this._futureSnapshot=a}get routeConfig(){return this._futureSnapshot.routeConfig}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=this.params.pipe(S(t=>df(t)))),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=this.queryParams.pipe(S(t=>df(t)))),this._queryParamMap}toString(){return this.snapshot?this.snapshot.toString():`Future(${this._futureSnapshot})`}}function eg(t,e="emptyOnly"){const n=t.pathFromRoot;let r=0;if("always"!==e)for(r=n.length-1;r>=1;){const t=n[r],e=n[r-1];if(t.routeConfig&&""===t.routeConfig.path)r--;else{if(e.component)break;r--}}return function(t){return t.reduce((t,e)=>({params:Object.assign(Object.assign({},t.params),e.params),data:Object.assign(Object.assign({},t.data),e.data),resolve:Object.assign(Object.assign({},t.resolve),e._resolvedData)}),{params:{},data:{},resolve:{}})}(n.slice(r))}class ng{constructor(t,e,n,r,s,i,o,a,l,u,c){this.url=t,this.params=e,this.queryParams=n,this.fragment=r,this.data=s,this.outlet=i,this.component=o,this.routeConfig=a,this._urlSegment=l,this._lastPathIndex=u,this._resolve=c}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=df(this.params)),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=df(this.queryParams)),this._queryParamMap}toString(){return`Route(url:'${this.url.map(t=>t.toString()).join("/")}', path:'${this.routeConfig?this.routeConfig.path:""}')`}}class rg extends Gf{constructor(t,e){super(e),this.url=t,sg(this,e)}toString(){return ig(this._root)}}function sg(t,e){e.value._routerState=t,e.children.forEach(e=>sg(t,e))}function ig(t){const e=t.children.length>0?` { ${t.children.map(ig).join(", ")} } `:"";return`${t.value}${e}`}function og(t){if(t.snapshot){const e=t.snapshot,n=t._futureSnapshot;t.snapshot=n,gf(e.queryParams,n.queryParams)||t.queryParams.next(n.queryParams),e.fragment!==n.fragment&&t.fragment.next(n.fragment),gf(e.params,n.params)||t.params.next(n.params),function(t,e){if(t.length!==e.length)return!1;for(let n=0;n<t.length;++n)if(!gf(t[n],e[n]))return!1;return!0}(e.url,n.url)||t.url.next(n.url),gf(e.data,n.data)||t.data.next(n.data)}else t.snapshot=t._futureSnapshot,t.data.next(t._futureSnapshot.data)}function ag(t,e){var n,r;return gf(t.params,e.params)&&Ff(n=t.url,r=e.url)&&n.every((t,e)=>gf(t.parameters,r[e].parameters))&&!(!t.parent!=!e.parent)&&(!t.parent||ag(t.parent,e.parent))}function lg(t,e,n){if(n&&t.shouldReuseRoute(e.value,n.value.snapshot)){const r=n.value;r._futureSnapshot=e.value;const s=function(t,e,n){return e.children.map(e=>{for(const r of n.children)if(t.shouldReuseRoute(e.value,r.value.snapshot))return lg(t,e,r);return lg(t,e)})}(t,e,n);return new Yf(r,s)}{if(t.shouldAttach(e.value)){const n=t.retrieve(e.value);if(null!==n){const t=n.route;return ug(e,t),t}}const n=new tg(new ip((r=e.value).url),new ip(r.params),new ip(r.queryParams),new ip(r.fragment),new ip(r.data),r.outlet,r.component,r),s=e.children.map(e=>lg(t,e));return new Yf(n,s)}var r}function ug(t,e){if(t.value.routeConfig!==e.value.routeConfig)throw new Error("Cannot reattach ActivatedRouteSnapshot created from a different route");if(t.children.length!==e.children.length)throw new Error("Cannot reattach ActivatedRouteSnapshot with a different number of children");e.value._futureSnapshot=t.value;for(let n=0;n<t.children.length;++n)ug(t.children[n],e.children[n])}function cg(t){return"object"==typeof t&&null!=t&&!t.outlets&&!t.segmentPath}function hg(t){return"object"==typeof t&&null!=t&&t.outlets}function dg(t,e,n,r,s){let i={};return r&&bf(r,(t,e)=>{i[e]=Array.isArray(t)?t.map(t=>`${t}`):`${t}`}),new xf(n.root===t?e:pg(n.root,t,e),i,s)}function pg(t,e,n){const r={};return bf(t.children,(t,s)=>{r[s]=t===e?n:pg(t,e,n)}),new kf(t.segments,r)}class fg{constructor(t,e,n){if(this.isAbsolute=t,this.numberOfDoubleDots=e,this.commands=n,t&&n.length>0&&cg(n[0]))throw new Error("Root segment cannot have matrix parameters");const r=n.find(hg);if(r&&r!==vf(n))throw new Error("{outlets:{}} has to be the last command")}toRoot(){return this.isAbsolute&&1===this.commands.length&&"/"==this.commands[0]}}class gg{constructor(t,e,n){this.segmentGroup=t,this.processChildren=e,this.index=n}}function mg(t,e,n){if(t||(t=new kf([],{})),0===t.segments.length&&t.hasChildren())return yg(t,e,n);const r=function(t,e,n){let r=0,s=e;const i={match:!1,pathIndex:0,commandIndex:0};for(;s<t.segments.length;){if(r>=n.length)return i;const e=t.segments[s],o=n[r];if(hg(o))break;const a=`${o}`,l=r<n.length-1?n[r+1]:null;if(s>0&&void 0===a)break;if(a&&l&&"object"==typeof l&&void 0===l.outlets){if(!_g(a,l,e))return i;r+=2}else{if(!_g(a,{},e))return i;r++}s++}return{match:!0,pathIndex:s,commandIndex:r}}(t,e,n),s=n.slice(r.commandIndex);if(r.match&&r.pathIndex<t.segments.length){const e=new kf(t.segments.slice(0,r.pathIndex),{});return e.children.primary=new kf(t.segments.slice(r.pathIndex),t.children),yg(e,0,s)}return r.match&&0===s.length?new kf(t.segments,{}):r.match&&!t.hasChildren()?vg(t,e,n):r.match?yg(t,0,s):vg(t,e,n)}function yg(t,e,n){if(0===n.length)return new kf(t.segments,{});{const r=function(t){return hg(t[0])?t[0].outlets:{[cf]:t}}(n),s={};return bf(r,(n,r)=>{"string"==typeof n&&(n=[n]),null!==n&&(s[r]=mg(t.children[r],e,n))}),bf(t.children,(t,e)=>{void 0===r[e]&&(s[e]=t)}),new kf(t.segments,s)}}function vg(t,e,n){const r=t.segments.slice(0,e);let s=0;for(;s<n.length;){const i=n[s];if(hg(i)){const t=bg(i.outlets);return new kf(r,t)}if(0===s&&cg(n[0])){r.push(new Tf(t.segments[e].path,wg(n[0]))),s++;continue}const o=hg(i)?i.outlets.primary:`${i}`,a=s<n.length-1?n[s+1]:null;o&&a&&cg(a)?(r.push(new Tf(o,wg(a))),s+=2):(r.push(new Tf(o,{})),s++)}return new kf(r,{})}function bg(t){const e={};return bf(t,(t,n)=>{"string"==typeof t&&(t=[t]),null!==t&&(e[n]=vg(new kf([],{}),0,t))}),e}function wg(t){const e={};return bf(t,(t,n)=>e[n]=`${t}`),e}function _g(t,e,n){return t==n.path&&gf(e,n.parameters)}class Cg{constructor(t,e,n,r){this.routeReuseStrategy=t,this.futureState=e,this.currState=n,this.forwardEvent=r}activate(t){const e=this.futureState._root,n=this.currState?this.currState._root:null;this.deactivateChildRoutes(e,n,t),og(this.futureState.root),this.activateChildRoutes(e,n,t)}deactivateChildRoutes(t,e,n){const r=Qf(e);t.children.forEach(t=>{const e=t.value.outlet;this.deactivateRoutes(t,r[e],n),delete r[e]}),bf(r,(t,e)=>{this.deactivateRouteAndItsChildren(t,n)})}deactivateRoutes(t,e,n){const r=t.value,s=e?e.value:null;if(r===s)if(r.component){const s=n.getContext(r.outlet);s&&this.deactivateChildRoutes(t,e,s.children)}else this.deactivateChildRoutes(t,e,n);else s&&this.deactivateRouteAndItsChildren(e,n)}deactivateRouteAndItsChildren(t,e){this.routeReuseStrategy.shouldDetach(t.value.snapshot)?this.detachAndStoreRouteSubtree(t,e):this.deactivateRouteAndOutlet(t,e)}detachAndStoreRouteSubtree(t,e){const n=e.getContext(t.value.outlet);if(n&&n.outlet){const e=n.outlet.detach(),r=n.children.onOutletDeactivated();this.routeReuseStrategy.store(t.value.snapshot,{componentRef:e,route:t,contexts:r})}}deactivateRouteAndOutlet(t,e){const n=e.getContext(t.value.outlet),r=n&&t.value.component?n.children:e,s=Qf(t);for(const i of Object.keys(s))this.deactivateRouteAndItsChildren(s[i],r);n&&n.outlet&&(n.outlet.deactivate(),n.children.onOutletDeactivated(),n.attachRef=null,n.resolver=null,n.route=null)}activateChildRoutes(t,e,n){const r=Qf(e);t.children.forEach(t=>{this.activateRoutes(t,r[t.value.outlet],n),this.forwardEvent(new lf(t.value.snapshot))}),t.children.length&&this.forwardEvent(new of(t.value.snapshot))}activateRoutes(t,e,n){const r=t.value,s=e?e.value:null;if(og(r),r===s)if(r.component){const s=n.getOrCreateContext(r.outlet);this.activateChildRoutes(t,e,s.children)}else this.activateChildRoutes(t,e,n);else if(r.component){const e=n.getOrCreateContext(r.outlet);if(this.routeReuseStrategy.shouldAttach(r.snapshot)){const t=this.routeReuseStrategy.retrieve(r.snapshot);this.routeReuseStrategy.store(r.snapshot,null),e.children.onOutletReAttached(t.contexts),e.attachRef=t.componentRef,e.route=t.route.value,e.outlet&&e.outlet.attach(t.componentRef,t.route.value),Dg(t.route)}else{const n=function(t){for(let e=t.parent;e;e=e.parent){const t=e.routeConfig;if(t&&t._loadedConfig)return t._loadedConfig;if(t&&t.component)return null}return null}(r.snapshot),s=n?n.module.componentFactoryResolver:null;e.attachRef=null,e.route=r,e.resolver=s,e.outlet&&e.outlet.activateWith(r,s),this.activateChildRoutes(t,null,e.children)}}else this.activateChildRoutes(t,null,n)}}function Dg(t){og(t.value),t.children.forEach(Dg)}class Eg{constructor(t,e){this.routes=t,this.module=e}}function Ag(t){return"function"==typeof t}function Sg(t){return t instanceof xf}const xg=Symbol("INITIAL_VALUE");function kg(){return ed(t=>function(...t){let e,n;return A(t[t.length-1])&&(n=t.pop()),"function"==typeof t[t.length-1]&&(e=t.pop()),1===t.length&&l(t[0])&&(t=t[0]),z(t,n).lift(new cp(e))}(t.map(t=>t.pipe(mp(1),function(...t){const e=t[t.length-1];return A(e)?(t.pop(),n=>pp(t,n,e)):e=>pp(t,e)}(xg)))).pipe(bp((t,e)=>{let n=!1;return e.reduce((t,r,s)=>{if(t!==xg)return t;if(r===xg&&(n=!0),!n){if(!1===r)return r;if(s===e.length-1||Sg(r))return r}return t},t)},xg),Cp(t=>t!==xg),S(t=>Sg(t)?t:!0===t),mp(1)))}let Tg=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=Ht({type:t,selectors:[["ng-component"]],decls:1,vars:0,template:function(t,e){1&t&&po(0,"router-outlet")},directives:function(){return[Dm]},encapsulation:2}),t})();function Fg(t,e=""){for(let n=0;n<t.length;n++){const r=t[n];Og(r,Pg(e,r))}}function Og(t,e){t.children&&Fg(t.children,e)}function Pg(t,e){return e?t||e.path?t&&!e.path?`${t}/`:!t&&e.path?e.path:`${t}/${e.path}`:"":t}function Ig(t){const e=t.children&&t.children.map(Ig),n=e?Object.assign(Object.assign({},t),{children:e}):Object.assign({},t);return!n.component&&(e||n.loadChildren)&&n.outlet&&n.outlet!==cf&&(n.component=Tg),n}function Rg(t){return t.outlet||cf}function Mg(t,e){const n=t.filter(t=>Rg(t)===e);return n.push(...t.filter(t=>Rg(t)!==e)),n}const jg={matched:!1,consumedSegments:[],lastChild:0,parameters:{},positionalParamSegments:{}};function Ng(t,e,n){var r;if(""===e.path)return"full"===e.pathMatch&&(t.hasChildren()||n.length>0)?Object.assign({},jg):{matched:!0,consumedSegments:[],lastChild:0,parameters:{},positionalParamSegments:{}};const s=(e.matcher||ff)(n,t,e);if(!s)return Object.assign({},jg);const i={};bf(s.posParams,(t,e)=>{i[e]=t.path});const o=s.consumed.length>0?Object.assign(Object.assign({},i),s.consumed[s.consumed.length-1].parameters):i;return{matched:!0,consumedSegments:s.consumed,lastChild:s.consumed.length,parameters:o,positionalParamSegments:null!==(r=s.posParams)&&void 0!==r?r:{}}}function Vg(t,e,n,r,s="corrected"){if(n.length>0&&function(t,e,n){return n.some(n=>Lg(t,e,n)&&Rg(n)!==cf)}(t,n,r)){const s=new kf(e,function(t,e,n,r){const s={};s.primary=r,r._sourceSegment=t,r._segmentIndexShift=e.length;for(const i of n)if(""===i.path&&Rg(i)!==cf){const n=new kf([],{});n._sourceSegment=t,n._segmentIndexShift=e.length,s[Rg(i)]=n}return s}(t,e,r,new kf(n,t.children)));return s._sourceSegment=t,s._segmentIndexShift=e.length,{segmentGroup:s,slicedSegments:[]}}if(0===n.length&&function(t,e,n){return n.some(n=>Lg(t,e,n))}(t,n,r)){const i=new kf(t.segments,function(t,e,n,r,s,i){const o={};for(const a of r)if(Lg(t,n,a)&&!s[Rg(a)]){const n=new kf([],{});n._sourceSegment=t,n._segmentIndexShift="legacy"===i?t.segments.length:e.length,o[Rg(a)]=n}return Object.assign(Object.assign({},s),o)}(t,e,n,r,t.children,s));return i._sourceSegment=t,i._segmentIndexShift=e.length,{segmentGroup:i,slicedSegments:n}}const i=new kf(t.segments,t.children);return i._sourceSegment=t,i._segmentIndexShift=e.length,{segmentGroup:i,slicedSegments:n}}function Lg(t,e,n){return(!(t.hasChildren()||e.length>0)||"full"!==n.pathMatch)&&""===n.path}function Bg(t,e,n,r){return!!(Rg(t)===r||r!==cf&&Lg(e,n,t))&&("**"===t.path||Ng(e,t,n).matched)}function Ug(t,e,n){return 0===e.length&&!t.children[n]}class Hg{constructor(t){this.segmentGroup=t||null}}class $g{constructor(t){this.urlTree=t}}function zg(t){return new v(e=>e.error(new Hg(t)))}function qg(t){return new v(e=>e.error(new $g(t)))}function Wg(t){return new v(e=>e.error(new Error(`Only absolute redirects can have named outlets. redirectTo: '${t}'`)))}class Gg{constructor(t,e,n,r,s){this.configLoader=e,this.urlSerializer=n,this.urlTree=r,this.config=s,this.allowRedirects=!0,this.ngModule=t.get(Ya)}apply(){const t=Vg(this.urlTree.root,[],[],this.config).segmentGroup,e=new kf(t.segments,t.children);return this.expandSegmentGroup(this.ngModule,this.config,e,cf).pipe(S(t=>this.createUrlTree(Zg(t),this.urlTree.queryParams,this.urlTree.fragment))).pipe(Ap(t=>{if(t instanceof $g)return this.allowRedirects=!1,this.match(t.urlTree);if(t instanceof Hg)throw this.noMatchError(t);throw t}))}match(t){return this.expandSegmentGroup(this.ngModule,this.config,t.root,cf).pipe(S(e=>this.createUrlTree(Zg(e),t.queryParams,t.fragment))).pipe(Ap(t=>{if(t instanceof Hg)throw this.noMatchError(t);throw t}))}noMatchError(t){return new Error(`Cannot match any routes. URL Segment: '${t.segmentGroup}'`)}createUrlTree(t,e,n){const r=t.segments.length>0?new kf([],{[cf]:t}):t;return new xf(r,e,n)}expandSegmentGroup(t,e,n,r){return 0===n.segments.length&&n.hasChildren()?this.expandChildren(t,e,n).pipe(S(t=>new kf([],t))):this.expandSegment(t,n,e,n.segments,r,!0)}expandChildren(t,e,n){const r=[];for(const s of Object.keys(n.children))"primary"===s?r.unshift(s):r.push(s);return j(r).pipe(kp(r=>{const s=n.children[r],i=Mg(e,r);return this.expandSegmentGroup(t,i,s,r).pipe(S(t=>({segment:t,outlet:r})))}),bp((t,e)=>(t[e.outlet]=e.segment,t),{}),function(t,e){const n=arguments.length>=2;return r=>r.pipe(t?Cp((e,n)=>t(e,n,r)):y,Tp(1),n?jp(e):Pp(()=>new dp))}())}expandSegment(t,e,n,r,s,i){return j(n).pipe(kp(o=>this.expandSegmentAgainstRoute(t,e,n,o,r,s,i).pipe(Ap(t=>{if(t instanceof Hg)return Gh(null);throw t}))),Lp(t=>!!t),Ap((t,n)=>{if(t instanceof dp||"EmptyError"===t.name){if(Ug(e,r,s))return Gh(new kf([],{}));throw new Hg(e)}throw t}))}expandSegmentAgainstRoute(t,e,n,r,s,i,o){return Bg(r,e,s,i)?void 0===r.redirectTo?this.matchSegmentAgainstRoute(t,e,r,s,i):o&&this.allowRedirects?this.expandSegmentAgainstRouteUsingRedirect(t,e,n,r,s,i):zg(e):zg(e)}expandSegmentAgainstRouteUsingRedirect(t,e,n,r,s,i){return"**"===r.path?this.expandWildCardWithParamsAgainstRouteUsingRedirect(t,n,r,i):this.expandRegularSegmentAgainstRouteUsingRedirect(t,e,n,r,s,i)}expandWildCardWithParamsAgainstRouteUsingRedirect(t,e,n,r){const s=this.applyRedirectCommands([],n.redirectTo,{});return n.redirectTo.startsWith("/")?qg(s):this.lineralizeSegments(n,s).pipe(B(n=>{const s=new kf(n,{});return this.expandSegment(t,s,e,n,r,!1)}))}expandRegularSegmentAgainstRouteUsingRedirect(t,e,n,r,s,i){const{matched:o,consumedSegments:a,lastChild:l,positionalParamSegments:u}=Ng(e,r,s);if(!o)return zg(e);const c=this.applyRedirectCommands(a,r.redirectTo,u);return r.redirectTo.startsWith("/")?qg(c):this.lineralizeSegments(r,c).pipe(B(r=>this.expandSegment(t,e,n,r.concat(s.slice(l)),i,!1)))}matchSegmentAgainstRoute(t,e,n,r,s){if("**"===n.path)return n.loadChildren?(n._loadedConfig?Gh(n._loadedConfig):this.configLoader.load(t.injector,n)).pipe(S(t=>(n._loadedConfig=t,new kf(r,{})))):Gh(new kf(r,{}));const{matched:i,consumedSegments:o,lastChild:a}=Ng(e,n,r);if(!i)return zg(e);const l=r.slice(a);return this.getChildConfig(t,n,r).pipe(B(t=>{const r=t.module,i=t.routes,{segmentGroup:a,slicedSegments:u}=Vg(e,o,l,i),c=new kf(a.segments,a.children);if(0===u.length&&c.hasChildren())return this.expandChildren(r,i,c).pipe(S(t=>new kf(o,t)));if(0===i.length&&0===u.length)return Gh(new kf(o,{}));const h=Rg(n)===s;return this.expandSegment(r,c,i,u,h?cf:s,!0).pipe(S(t=>new kf(o.concat(t.segments),t.children)))}))}getChildConfig(t,e,n){return e.children?Gh(new Eg(e.children,t)):e.loadChildren?void 0!==e._loadedConfig?Gh(e._loadedConfig):this.runCanLoadGuards(t.injector,e,n).pipe(B(n=>n?this.configLoader.load(t.injector,e).pipe(S(t=>(e._loadedConfig=t,t))):function(t){return new v(e=>e.error(pf(`Cannot load children because the guard of the route "path: '${t.path}'" returned false`)))}(e))):Gh(new Eg([],t))}runCanLoadGuards(t,e,n){const r=e.canLoad;return r&&0!==r.length?Gh(r.map(r=>{const s=t.get(r);let i;if(function(t){return t&&Ag(t.canLoad)}(s))i=s.canLoad(e,n);else{if(!Ag(s))throw new Error("Invalid CanLoad guard");i=s(e,n)}return wf(i)})).pipe(kg(),Up(t=>{if(!Sg(t))return;const e=pf(`Redirecting to "${this.urlSerializer.serialize(t)}"`);throw e.url=t,e}),S(t=>!0===t)):Gh(!0)}lineralizeSegments(t,e){let n=[],r=e.root;for(;;){if(n=n.concat(r.segments),0===r.numberOfChildren)return Gh(n);if(r.numberOfChildren>1||!r.children.primary)return Wg(t.redirectTo);r=r.children.primary}}applyRedirectCommands(t,e,n){return this.applyRedirectCreatreUrlTree(e,this.urlSerializer.parse(e),t,n)}applyRedirectCreatreUrlTree(t,e,n,r){const s=this.createSegmentGroup(t,e.root,n,r);return new xf(s,this.createQueryParams(e.queryParams,this.urlTree.queryParams),e.fragment)}createQueryParams(t,e){const n={};return bf(t,(t,r)=>{if("string"==typeof t&&t.startsWith(":")){const s=t.substring(1);n[r]=e[s]}else n[r]=t}),n}createSegmentGroup(t,e,n,r){const s=this.createSegments(t,e.segments,n,r);let i={};return bf(e.children,(e,s)=>{i[s]=this.createSegmentGroup(t,e,n,r)}),new kf(s,i)}createSegments(t,e,n,r){return e.map(e=>e.path.startsWith(":")?this.findPosParam(t,e,r):this.findOrReturn(e,n))}findPosParam(t,e,n){const r=n[e.path.substring(1)];if(!r)throw new Error(`Cannot redirect to '${t}'. Cannot find '${e.path}'.`);return r}findOrReturn(t,e){let n=0;for(const r of e){if(r.path===t.path)return e.splice(n),r;n++}return t}}function Zg(t){const e={};for(const n of Object.keys(t.children)){const r=Zg(t.children[n]);(r.segments.length>0||r.hasChildren())&&(e[n]=r)}return function(t){if(1===t.numberOfChildren&&t.children.primary){const e=t.children.primary;return new kf(t.segments.concat(e.segments),e.children)}return t}(new kf(t.segments,e))}class Kg{constructor(t){this.path=t,this.route=this.path[this.path.length-1]}}class Yg{constructor(t,e){this.component=t,this.route=e}}function Qg(t,e,n){const r=t._root;return Jg(r,e?e._root:null,n,[r.value])}function Xg(t,e,n){const r=function(t){if(!t)return null;for(let e=t.parent;e;e=e.parent){const t=e.routeConfig;if(t&&t._loadedConfig)return t._loadedConfig}return null}(e);return(r?r.module.injector:n).get(t)}function Jg(t,e,n,r,s={canDeactivateChecks:[],canActivateChecks:[]}){const i=Qf(e);return t.children.forEach(t=>{!function(t,e,n,r,s={canDeactivateChecks:[],canActivateChecks:[]}){const i=t.value,o=e?e.value:null,a=n?n.getContext(t.value.outlet):null;if(o&&i.routeConfig===o.routeConfig){const l=function(t,e,n){if("function"==typeof n)return n(t,e);switch(n){case"pathParamsChange":return!Ff(t.url,e.url);case"pathParamsOrQueryParamsChange":return!Ff(t.url,e.url)||!gf(t.queryParams,e.queryParams);case"always":return!0;case"paramsOrQueryParamsChange":return!ag(t,e)||!gf(t.queryParams,e.queryParams);case"paramsChange":default:return!ag(t,e)}}(o,i,i.routeConfig.runGuardsAndResolvers);l?s.canActivateChecks.push(new Kg(r)):(i.data=o.data,i._resolvedData=o._resolvedData),Jg(t,e,i.component?a?a.children:null:n,r,s),l&&a&&a.outlet&&a.outlet.isActivated&&s.canDeactivateChecks.push(new Yg(a.outlet.component,o))}else o&&tm(e,a,s),s.canActivateChecks.push(new Kg(r)),Jg(t,null,i.component?a?a.children:null:n,r,s)}(t,i[t.value.outlet],n,r.concat([t.value]),s),delete i[t.value.outlet]}),bf(i,(t,e)=>tm(t,n.getContext(e),s)),s}function tm(t,e,n){const r=Qf(t),s=t.value;bf(r,(t,r)=>{tm(t,s.component?e?e.children.getContext(r):null:e,n)}),n.canDeactivateChecks.push(new Yg(s.component&&e&&e.outlet&&e.outlet.isActivated?e.outlet.component:null,s))}class em{}function nm(t){return new v(e=>e.error(t))}class rm{constructor(t,e,n,r,s,i){this.rootComponentType=t,this.config=e,this.urlTree=n,this.url=r,this.paramsInheritanceStrategy=s,this.relativeLinkResolution=i}recognize(){const t=Vg(this.urlTree.root,[],[],this.config.filter(t=>void 0===t.redirectTo),this.relativeLinkResolution).segmentGroup,e=this.processSegmentGroup(this.config,t,cf);if(null===e)return null;const n=new ng([],Object.freeze({}),Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,{},cf,this.rootComponentType,null,this.urlTree.root,-1,{}),r=new Yf(n,e),s=new rg(this.url,r);return this.inheritParamsAndData(s._root),s}inheritParamsAndData(t){const e=t.value,n=eg(e,this.paramsInheritanceStrategy);e.params=Object.freeze(n.params),e.data=Object.freeze(n.data),t.children.forEach(t=>this.inheritParamsAndData(t))}processSegmentGroup(t,e,n){return 0===e.segments.length&&e.hasChildren()?this.processChildren(t,e):this.processSegment(t,e,e.segments,n)}processChildren(t,e){const n=[];for(const s of Object.keys(e.children)){const r=e.children[s],i=Mg(t,s),o=this.processSegmentGroup(i,r,s);if(null===o)return null;n.push(...o)}const r=im(n);return r.sort((t,e)=>t.value.outlet===cf?-1:e.value.outlet===cf?1:t.value.outlet.localeCompare(e.value.outlet)),r}processSegment(t,e,n,r){for(const s of t){const t=this.processSegmentAgainstRoute(s,e,n,r);if(null!==t)return t}return Ug(e,n,r)?[]:null}processSegmentAgainstRoute(t,e,n,r){if(t.redirectTo||!Bg(t,e,n,r))return null;let s,i=[],o=[];if("**"===t.path){const r=n.length>0?vf(n).parameters:{};s=new ng(n,r,Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,lm(t),Rg(t),t.component,t,om(e),am(e)+n.length,um(t))}else{const r=Ng(e,t,n);if(!r.matched)return null;i=r.consumedSegments,o=n.slice(r.lastChild),s=new ng(i,r.parameters,Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,lm(t),Rg(t),t.component,t,om(e),am(e)+i.length,um(t))}const a=function(t){return t.children?t.children:t.loadChildren?t._loadedConfig.routes:[]}(t),{segmentGroup:l,slicedSegments:u}=Vg(e,i,o,a.filter(t=>void 0===t.redirectTo),this.relativeLinkResolution);if(0===u.length&&l.hasChildren()){const t=this.processChildren(a,l);return null===t?null:[new Yf(s,t)]}if(0===a.length&&0===u.length)return[new Yf(s,[])];const c=Rg(t)===r,h=this.processSegment(a,l,u,c?cf:r);return null===h?null:[new Yf(s,h)]}}function sm(t){const e=t.value.routeConfig;return e&&""===e.path&&void 0===e.redirectTo}function im(t){const e=[],n=new Set;for(const r of t){if(!sm(r)){e.push(r);continue}const t=e.find(t=>r.value.routeConfig===t.value.routeConfig);void 0!==t?(t.children.push(...r.children),n.add(t)):e.push(r)}for(const r of n){const t=im(r.children);e.push(new Yf(r.value,t))}return e.filter(t=>!n.has(t))}function om(t){let e=t;for(;e._sourceSegment;)e=e._sourceSegment;return e}function am(t){let e=t,n=e._segmentIndexShift?e._segmentIndexShift:0;for(;e._sourceSegment;)e=e._sourceSegment,n+=e._segmentIndexShift?e._segmentIndexShift:0;return n-1}function lm(t){return t.data||{}}function um(t){return t.resolve||{}}function cm(t){return ed(e=>{const n=t(e);return n?j(n).pipe(S(()=>e)):Gh(e)})}class hm extends class{shouldDetach(t){return!1}store(t,e){}shouldAttach(t){return!1}retrieve(t){return null}shouldReuseRoute(t,e){return t.routeConfig===e.routeConfig}}{}const dm=new Hn("ROUTES");class pm{constructor(t,e,n,r){this.loader=t,this.compiler=e,this.onLoadStartListener=n,this.onLoadEndListener=r}load(t,e){if(e._loader$)return e._loader$;this.onLoadStartListener&&this.onLoadStartListener(e);const n=this.loadModuleFactory(e.loadChildren).pipe(S(n=>{this.onLoadEndListener&&this.onLoadEndListener(e);const r=n.create(t);return new Eg(yf(r.injector.get(dm,void 0,wt.Self|wt.Optional)).map(Ig),r)}),Ap(t=>{throw e._loader$=void 0,t}));return e._loader$=new K(n,()=>new D).pipe(W()),e._loader$}loadModuleFactory(t){return"string"==typeof t?j(this.loader.load(t)):wf(t()).pipe(B(t=>t instanceof Qa?Gh(t):j(this.compiler.compileModuleAsync(t))))}}class fm{constructor(){this.outlet=null,this.route=null,this.resolver=null,this.children=new gm,this.attachRef=null}}class gm{constructor(){this.contexts=new Map}onChildOutletCreated(t,e){const n=this.getOrCreateContext(t);n.outlet=e,this.contexts.set(t,n)}onChildOutletDestroyed(t){const e=this.getContext(t);e&&(e.outlet=null)}onOutletDeactivated(){const t=this.contexts;return this.contexts=new Map,t}onOutletReAttached(t){this.contexts=t}getOrCreateContext(t){let e=this.getContext(t);return e||(e=new fm,this.contexts.set(t,e)),e}getContext(t){return this.contexts.get(t)||null}}class mm{shouldProcessUrl(t){return!0}extract(t){return t}merge(t,e){return t}}function ym(t){throw t}function vm(t,e,n){return e.parse("/")}function bm(t,e){return Gh(null)}const wm={paths:"exact",fragment:"ignored",matrixParams:"ignored",queryParams:"exact"},_m={paths:"subset",fragment:"ignored",matrixParams:"ignored",queryParams:"subset"};let Cm=(()=>{class t{constructor(t,e,n,r,s,i,o,a){this.rootComponentType=t,this.urlSerializer=e,this.rootContexts=n,this.location=r,this.config=a,this.lastSuccessfulNavigation=null,this.currentNavigation=null,this.disposed=!1,this.lastLocationChangeInfo=null,this.navigationId=0,this.isNgZoneEnabled=!1,this.events=new D,this.errorHandler=ym,this.malformedUriErrorHandler=vm,this.navigated=!1,this.lastSuccessfulId=-1,this.hooks={beforePreactivation:bm,afterPreactivation:bm},this.urlHandlingStrategy=new mm,this.routeReuseStrategy=new hm,this.onSameUrlNavigation="ignore",this.paramsInheritanceStrategy="emptyOnly",this.urlUpdateStrategy="deferred",this.relativeLinkResolution="corrected",this.ngModule=s.get(Ya),this.console=s.get(Hl);const l=s.get(eu);this.isNgZoneEnabled=l instanceof eu&&eu.isInAngularZone(),this.resetConfig(a),this.currentUrlTree=new xf(new kf([],{}),{},null),this.rawUrlTree=this.currentUrlTree,this.browserUrlTree=this.currentUrlTree,this.configLoader=new pm(i,o,t=>this.triggerEvent(new nf(t)),t=>this.triggerEvent(new rf(t))),this.routerState=Jf(this.currentUrlTree,this.rootComponentType),this.transitions=new ip({id:0,currentUrlTree:this.currentUrlTree,currentRawUrl:this.currentUrlTree,extractedUrl:this.urlHandlingStrategy.extract(this.currentUrlTree),urlAfterRedirects:this.urlHandlingStrategy.extract(this.currentUrlTree),rawUrl:this.currentUrlTree,extras:{},resolve:null,reject:null,promise:Promise.resolve(!0),source:"imperative",restoredState:null,currentSnapshot:this.routerState.snapshot,targetSnapshot:null,currentRouterState:this.routerState,targetRouterState:null,guards:{canActivateChecks:[],canDeactivateChecks:[]},guardsResult:null}),this.navigations=this.setupNavigations(this.transitions),this.processNavigations()}setupNavigations(t){const e=this.events;return t.pipe(Cp(t=>0!==t.id),S(t=>Object.assign(Object.assign({},t),{extractedUrl:this.urlHandlingStrategy.extract(t.rawUrl)})),ed(t=>{let n=!1,r=!1;return Gh(t).pipe(Up(t=>{this.currentNavigation={id:t.id,initialUrl:t.currentRawUrl,extractedUrl:t.extractedUrl,trigger:t.source,extras:t.extras,previousNavigation:this.lastSuccessfulNavigation?Object.assign(Object.assign({},this.lastSuccessfulNavigation),{previousNavigation:null}):null}}),ed(t=>{const n=!this.navigated||t.extractedUrl.toString()!==this.browserUrlTree.toString();if(("reload"===this.onSameUrlNavigation||n)&&this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl))return Gh(t).pipe(ed(t=>{const n=this.transitions.getValue();return e.next(new Gp(t.id,this.serializeUrl(t.extractedUrl),t.source,t.restoredState)),n!==this.transitions.getValue()?qh:Promise.resolve(t)}),function(t,e,n,r){return ed(s=>function(t,e,n,r,s){return new Gg(t,e,n,r,s).apply()}(t,e,n,s.extractedUrl,r).pipe(S(t=>Object.assign(Object.assign({},s),{urlAfterRedirects:t}))))}(this.ngModule.injector,this.configLoader,this.urlSerializer,this.config),Up(t=>{this.currentNavigation=Object.assign(Object.assign({},this.currentNavigation),{finalUrl:t.urlAfterRedirects})}),function(t,e,n,r,s){return B(i=>function(t,e,n,r,s="emptyOnly",i="legacy"){try{const o=new rm(t,e,n,r,s,i).recognize();return null===o?nm(new em):Gh(o)}catch(o){return nm(o)}}(t,e,i.urlAfterRedirects,n(i.urlAfterRedirects),r,s).pipe(S(t=>Object.assign(Object.assign({},i),{targetSnapshot:t}))))}(this.rootComponentType,this.config,t=>this.serializeUrl(t),this.paramsInheritanceStrategy,this.relativeLinkResolution),Up(t=>{"eager"===this.urlUpdateStrategy&&(t.extras.skipLocationChange||this.setBrowserUrl(t.urlAfterRedirects,!!t.extras.replaceUrl,t.id,t.extras.state),this.browserUrlTree=t.urlAfterRedirects);const n=new Qp(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);e.next(n)}));if(n&&this.rawUrlTree&&this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)){const{id:n,extractedUrl:r,source:s,restoredState:i,extras:o}=t,a=new Gp(n,this.serializeUrl(r),s,i);e.next(a);const l=Jf(r,this.rootComponentType).snapshot;return Gh(Object.assign(Object.assign({},t),{targetSnapshot:l,urlAfterRedirects:r,extras:Object.assign(Object.assign({},o),{skipLocationChange:!1,replaceUrl:!1})}))}return this.rawUrlTree=t.rawUrl,this.browserUrlTree=t.urlAfterRedirects,t.resolve(null),qh}),cm(t=>{const{targetSnapshot:e,id:n,extractedUrl:r,rawUrl:s,extras:{skipLocationChange:i,replaceUrl:o}}=t;return this.hooks.beforePreactivation(e,{navigationId:n,appliedUrlTree:r,rawUrlTree:s,skipLocationChange:!!i,replaceUrl:!!o})}),Up(t=>{const e=new Xp(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);this.triggerEvent(e)}),S(t=>Object.assign(Object.assign({},t),{guards:Qg(t.targetSnapshot,t.currentSnapshot,this.rootContexts)})),function(t,e){return B(n=>{const{targetSnapshot:r,currentSnapshot:s,guards:{canActivateChecks:i,canDeactivateChecks:o}}=n;return 0===o.length&&0===i.length?Gh(Object.assign(Object.assign({},n),{guardsResult:!0})):function(t,e,n,r){return j(t).pipe(B(t=>function(t,e,n,r,s){const i=e&&e.routeConfig?e.routeConfig.canDeactivate:null;return i&&0!==i.length?Gh(i.map(i=>{const o=Xg(i,e,s);let a;if(function(t){return t&&Ag(t.canDeactivate)}(o))a=wf(o.canDeactivate(t,e,n,r));else{if(!Ag(o))throw new Error("Invalid CanDeactivate guard");a=wf(o(t,e,n,r))}return a.pipe(Lp())})).pipe(kg()):Gh(!0)}(t.component,t.route,n,e,r)),Lp(t=>!0!==t,!0))}(o,r,s,t).pipe(B(n=>n&&"boolean"==typeof n?function(t,e,n,r){return j(e).pipe(kp(e=>pp(function(t,e){return null!==t&&e&&e(new sf(t)),Gh(!0)}(e.route.parent,r),function(t,e){return null!==t&&e&&e(new af(t)),Gh(!0)}(e.route,r),function(t,e,n){const r=e[e.length-1],s=e.slice(0,e.length-1).reverse().map(t=>function(t){const e=t.routeConfig?t.routeConfig.canActivateChild:null;return e&&0!==e.length?{node:t,guards:e}:null}(t)).filter(t=>null!==t).map(e=>fp(()=>Gh(e.guards.map(s=>{const i=Xg(s,e.node,n);let o;if(function(t){return t&&Ag(t.canActivateChild)}(i))o=wf(i.canActivateChild(r,t));else{if(!Ag(i))throw new Error("Invalid CanActivateChild guard");o=wf(i(r,t))}return o.pipe(Lp())})).pipe(kg())));return Gh(s).pipe(kg())}(t,e.path,n),function(t,e,n){const r=e.routeConfig?e.routeConfig.canActivate:null;return r&&0!==r.length?Gh(r.map(r=>fp(()=>{const s=Xg(r,e,n);let i;if(function(t){return t&&Ag(t.canActivate)}(s))i=wf(s.canActivate(e,t));else{if(!Ag(s))throw new Error("Invalid CanActivate guard");i=wf(s(e,t))}return i.pipe(Lp())}))).pipe(kg()):Gh(!0)}(t,e.route,n))),Lp(t=>!0!==t,!0))}(r,i,t,e):Gh(n)),S(t=>Object.assign(Object.assign({},n),{guardsResult:t})))})}(this.ngModule.injector,t=>this.triggerEvent(t)),Up(t=>{if(Sg(t.guardsResult)){const e=pf(`Redirecting to "${this.serializeUrl(t.guardsResult)}"`);throw e.url=t.guardsResult,e}const e=new Jp(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot,!!t.guardsResult);this.triggerEvent(e)}),Cp(t=>{if(!t.guardsResult){this.resetUrlToCurrentUrlTree();const n=new Kp(t.id,this.serializeUrl(t.extractedUrl),"");return e.next(n),t.resolve(!1),!1}return!0}),cm(t=>{if(t.guards.canActivateChecks.length)return Gh(t).pipe(Up(t=>{const e=new tf(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);this.triggerEvent(e)}),ed(t=>{let n=!1;return Gh(t).pipe((r=this.paramsInheritanceStrategy,s=this.ngModule.injector,B(t=>{const{targetSnapshot:e,guards:{canActivateChecks:n}}=t;if(!n.length)return Gh(t);let i=0;return j(n).pipe(kp(t=>function(t,e,n,r){return function(t,e,n,r){const s=Object.keys(t);if(0===s.length)return Gh({});const i={};return j(s).pipe(B(s=>function(t,e,n,r){const s=Xg(t,e,r);return wf(s.resolve?s.resolve(e,n):s(e,n))}(t[s],e,n,r).pipe(Up(t=>{i[s]=t}))),Tp(1),B(()=>Object.keys(i).length===s.length?Gh(i):qh))}(t._resolve,t,e,r).pipe(S(e=>(t._resolvedData=e,t.data=Object.assign(Object.assign({},t.data),eg(t,n).resolve),null)))}(t.route,e,r,s)),Up(()=>i++),Tp(1),B(e=>i===n.length?Gh(t):qh))})),Up({next:()=>n=!0,complete:()=>{if(!n){const n=new Kp(t.id,this.serializeUrl(t.extractedUrl),"At least one route resolver didn't emit any value.");e.next(n),t.resolve(!1)}}}));var r,s}),Up(t=>{const e=new ef(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);this.triggerEvent(e)}))}),cm(t=>{const{targetSnapshot:e,id:n,extractedUrl:r,rawUrl:s,extras:{skipLocationChange:i,replaceUrl:o}}=t;return this.hooks.afterPreactivation(e,{navigationId:n,appliedUrlTree:r,rawUrlTree:s,skipLocationChange:!!i,replaceUrl:!!o})}),S(t=>{const e=function(t,e,n){const r=lg(t,e._root,n?n._root:void 0);return new Xf(r,e)}(this.routeReuseStrategy,t.targetSnapshot,t.currentRouterState);return Object.assign(Object.assign({},t),{targetRouterState:e})}),Up(t=>{this.currentUrlTree=t.urlAfterRedirects,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,t.rawUrl),this.routerState=t.targetRouterState,"deferred"===this.urlUpdateStrategy&&(t.extras.skipLocationChange||this.setBrowserUrl(this.rawUrlTree,!!t.extras.replaceUrl,t.id,t.extras.state),this.browserUrlTree=t.urlAfterRedirects)}),(i=this.rootContexts,o=this.routeReuseStrategy,a=t=>this.triggerEvent(t),S(t=>(new Cg(o,t.targetRouterState,t.currentRouterState,a).activate(i),t))),Up({next(){n=!0},complete(){n=!0}}),(s=()=>{if(!n&&!r){this.resetUrlToCurrentUrlTree();const n=new Kp(t.id,this.serializeUrl(t.extractedUrl),`Navigation ID ${t.id} is not equal to the current navigation id ${this.navigationId}`);e.next(n),t.resolve(!1)}this.currentNavigation=null},t=>t.lift(new zp(s))),Ap(n=>{if(r=!0,(s=n)&&s.ngNavigationCancelingError){const r=Sg(n.url);r||(this.navigated=!0,this.resetStateAndUrl(t.currentRouterState,t.currentUrlTree,t.rawUrl));const s=new Kp(t.id,this.serializeUrl(t.extractedUrl),n.message);e.next(s),r?setTimeout(()=>{const e=this.urlHandlingStrategy.merge(n.url,this.rawUrlTree);this.scheduleNavigation(e,"imperative",null,{skipLocationChange:t.extras.skipLocationChange,replaceUrl:"eager"===this.urlUpdateStrategy},{resolve:t.resolve,reject:t.reject,promise:t.promise})},0):t.resolve(!1)}else{this.resetStateAndUrl(t.currentRouterState,t.currentUrlTree,t.rawUrl);const r=new Yp(t.id,this.serializeUrl(t.extractedUrl),n);e.next(r);try{t.resolve(this.errorHandler(n))}catch(i){t.reject(i)}}var s;return qh}));var s,i,o,a}))}resetRootComponentType(t){this.rootComponentType=t,this.routerState.root.component=this.rootComponentType}getTransition(){const t=this.transitions.value;return t.urlAfterRedirects=this.browserUrlTree,t}setTransition(t){this.transitions.next(Object.assign(Object.assign({},this.getTransition()),t))}initialNavigation(){this.setUpLocationChangeListener(),0===this.navigationId&&this.navigateByUrl(this.location.path(!0),{replaceUrl:!0})}setUpLocationChangeListener(){this.locationSubscription||(this.locationSubscription=this.location.subscribe(t=>{const e=this.extractLocationChangeInfoFromEvent(t);this.shouldScheduleNavigation(this.lastLocationChangeInfo,e)&&setTimeout(()=>{const{source:t,state:n,urlTree:r}=e,s={replaceUrl:!0};if(n){const t=Object.assign({},n);delete t.navigationId,0!==Object.keys(t).length&&(s.state=t)}this.scheduleNavigation(r,t,n,s)},0),this.lastLocationChangeInfo=e}))}extractLocationChangeInfoFromEvent(t){var e;return{source:"popstate"===t.type?"popstate":"hashchange",urlTree:this.parseUrl(t.url),state:(null===(e=t.state)||void 0===e?void 0:e.navigationId)?t.state:null,transitionId:this.getTransition().id}}shouldScheduleNavigation(t,e){if(!t)return!0;const n=e.urlTree.toString()===t.urlTree.toString();return!(e.transitionId===t.transitionId&&n&&("hashchange"===e.source&&"popstate"===t.source||"popstate"===e.source&&"hashchange"===t.source))}get url(){return this.serializeUrl(this.currentUrlTree)}getCurrentNavigation(){return this.currentNavigation}triggerEvent(t){this.events.next(t)}resetConfig(t){Fg(t),this.config=t.map(Ig),this.navigated=!1,this.lastSuccessfulId=-1}ngOnDestroy(){this.dispose()}dispose(){this.transitions.complete(),this.locationSubscription&&(this.locationSubscription.unsubscribe(),this.locationSubscription=void 0),this.disposed=!0}createUrlTree(t,e={}){const{relativeTo:n,queryParams:r,fragment:s,queryParamsHandling:i,preserveFragment:o}=e,a=n||this.routerState.root,l=o?this.currentUrlTree.fragment:s;let u=null;switch(i){case"merge":u=Object.assign(Object.assign({},this.currentUrlTree.queryParams),r);break;case"preserve":u=this.currentUrlTree.queryParams;break;default:u=r||null}return null!==u&&(u=this.removeEmptyProps(u)),function(t,e,n,r,s){if(0===n.length)return dg(e.root,e.root,e,r,s);const i=function(t){if("string"==typeof t[0]&&1===t.length&&"/"===t[0])return new fg(!0,0,t);let e=0,n=!1;const r=t.reduce((t,r,s)=>{if("object"==typeof r&&null!=r){if(r.outlets){const e={};return bf(r.outlets,(t,n)=>{e[n]="string"==typeof t?t.split("/"):t}),[...t,{outlets:e}]}if(r.segmentPath)return[...t,r.segmentPath]}return"string"!=typeof r?[...t,r]:0===s?(r.split("/").forEach((r,s)=>{0==s&&"."===r||(0==s&&""===r?n=!0:".."===r?e++:""!=r&&t.push(r))}),t):[...t,r]},[]);return new fg(n,e,r)}(n);if(i.toRoot())return dg(e.root,new kf([],{}),e,r,s);const o=function(t,e,n){if(t.isAbsolute)return new gg(e.root,!0,0);if(-1===n.snapshot._lastPathIndex){const t=n.snapshot._urlSegment;return new gg(t,t===e.root,0)}const r=cg(t.commands[0])?0:1;return function(t,e,n){let r=t,s=e,i=n;for(;i>s;){if(i-=s,r=r.parent,!r)throw new Error("Invalid number of '../'");s=r.segments.length}return new gg(r,!1,s-i)}(n.snapshot._urlSegment,n.snapshot._lastPathIndex+r,t.numberOfDoubleDots)}(i,e,t),a=o.processChildren?yg(o.segmentGroup,o.index,i.commands):mg(o.segmentGroup,o.index,i.commands);return dg(o.segmentGroup,a,e,r,s)}(a,this.currentUrlTree,t,u,null!=l?l:null)}navigateByUrl(t,e={skipLocationChange:!1}){const n=Sg(t)?t:this.parseUrl(t),r=this.urlHandlingStrategy.merge(n,this.rawUrlTree);return this.scheduleNavigation(r,"imperative",null,e)}navigate(t,e={skipLocationChange:!1}){return function(t){for(let e=0;e<t.length;e++){const n=t[e];if(null==n)throw new Error(`The requested path contains ${n} segment at index ${e}`)}}(t),this.navigateByUrl(this.createUrlTree(t,e),e)}serializeUrl(t){return this.urlSerializer.serialize(t)}parseUrl(t){let e;try{e=this.urlSerializer.parse(t)}catch(n){e=this.malformedUriErrorHandler(n,this.urlSerializer,t)}return e}isActive(t,e){let n;if(n=!0===e?Object.assign({},wm):!1===e?Object.assign({},_m):e,Sg(t))return Df(this.currentUrlTree,t,n);const r=this.parseUrl(t);return Df(this.currentUrlTree,r,n)}removeEmptyProps(t){return Object.keys(t).reduce((e,n)=>{const r=t[n];return null!=r&&(e[n]=r),e},{})}processNavigations(){this.navigations.subscribe(t=>{this.navigated=!0,this.lastSuccessfulId=t.id,this.events.next(new Zp(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(this.currentUrlTree))),this.lastSuccessfulNavigation=this.currentNavigation,t.resolve(!0)},t=>{this.console.warn("Unhandled Navigation Error: ")})}scheduleNavigation(t,e,n,r,s){if(this.disposed)return Promise.resolve(!1);const i=this.getTransition(),o="imperative"!==e&&"imperative"===(null==i?void 0:i.source),a=(this.lastSuccessfulId===i.id||this.currentNavigation?i.rawUrl:i.urlAfterRedirects).toString()===t.toString();if(o&&a)return Promise.resolve(!0);let l,u,c;s?(l=s.resolve,u=s.reject,c=s.promise):c=new Promise((t,e)=>{l=t,u=e});const h=++this.navigationId;return this.setTransition({id:h,source:e,restoredState:n,currentUrlTree:this.currentUrlTree,currentRawUrl:this.rawUrlTree,rawUrl:t,extras:r,resolve:l,reject:u,promise:c,currentSnapshot:this.routerState.snapshot,currentRouterState:this.routerState}),c.catch(t=>Promise.reject(t))}setBrowserUrl(t,e,n,r){const s=this.urlSerializer.serialize(t);r=r||{},this.location.isCurrentPathEqualTo(s)||e?this.location.replaceState(s,"",Object.assign(Object.assign({},r),{navigationId:n})):this.location.go(s,"",Object.assign(Object.assign({},r),{navigationId:n}))}resetStateAndUrl(t,e,n){this.routerState=t,this.currentUrlTree=e,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,n),this.resetUrlToCurrentUrlTree()}resetUrlToCurrentUrlTree(){this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree),"",{navigationId:this.lastSuccessfulId})}}return t.\u0275fac=function(e){return new(e||t)(or(zn),or(Of),or(gm),or(Zu),or(Wi),or(Du),or(Xl),or(void 0))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Dm=(()=>{class t{constructor(t,e,n,r,s){this.parentContexts=t,this.location=e,this.resolver=n,this.changeDetector=s,this.activated=null,this._activatedRoute=null,this.activateEvents=new gl,this.deactivateEvents=new gl,this.name=r||cf,t.onChildOutletCreated(this.name,this)}ngOnDestroy(){this.parentContexts.onChildOutletDestroyed(this.name)}ngOnInit(){if(!this.activated){const t=this.parentContexts.getContext(this.name);t&&t.route&&(t.attachRef?this.attach(t.attachRef,t.route):this.activateWith(t.route,t.resolver||null))}}get isActivated(){return!!this.activated}get component(){if(!this.activated)throw new Error("Outlet is not activated");return this.activated.instance}get activatedRoute(){if(!this.activated)throw new Error("Outlet is not activated");return this._activatedRoute}get activatedRouteData(){return this._activatedRoute?this._activatedRoute.snapshot.data:{}}detach(){if(!this.activated)throw new Error("Outlet is not activated");this.location.detach();const t=this.activated;return this.activated=null,this._activatedRoute=null,t}attach(t,e){this.activated=t,this._activatedRoute=e,this.location.insert(t.hostView)}deactivate(){if(this.activated){const t=this.component;this.activated.destroy(),this.activated=null,this._activatedRoute=null,this.deactivateEvents.emit(t)}}activateWith(t,e){if(this.isActivated)throw new Error("Cannot activate an already activated outlet");this._activatedRoute=t;const n=(e=e||this.resolver).resolveComponentFactory(t._futureSnapshot.routeConfig.component),r=this.parentContexts.getOrCreateContext(this.name).children,s=new Em(t,r,this.location.injector);this.activated=this.location.createComponent(n,this.location.length,s),this.changeDetector.markForCheck(),this.activateEvents.emit(this.activated.instance)}}return t.\u0275fac=function(e){return new(e||t)(ao(gm),ao(Ja),ao(ha),("name",function(t,e){const n=t.attrs;if(n){const t=n.length;let r=0;for(;r<t;){const s=n[r];if(dn(s))break;if(0===s)r+=2;else if("number"==typeof s)for(r++;r<t&&"string"==typeof n[r];)r++;else{if(s===e)return n[r+1];r+=2}}}return null}(Pe(),"name")),ao(Ua))},t.\u0275dir=Zt({type:t,selectors:[["router-outlet"]],outputs:{activateEvents:"activate",deactivateEvents:"deactivate"},exportAs:["outlet"]}),t})();class Em{constructor(t,e,n){this.route=t,this.childContexts=e,this.parent=n}get(t,e){return t===tg?this.route:t===gm?this.childContexts:this.parent.get(t,e)}}class Am{}class Sm{preload(t,e){return Gh(null)}}let xm=(()=>{class t{constructor(t,e,n,r,s){this.router=t,this.injector=r,this.preloadingStrategy=s,this.loader=new pm(e,n,e=>t.triggerEvent(new nf(e)),e=>t.triggerEvent(new rf(e)))}setUpPreloading(){this.subscription=this.router.events.pipe(Cp(t=>t instanceof Zp),kp(()=>this.preload())).subscribe(()=>{})}preload(){const t=this.injector.get(Ya);return this.processRoutes(t,this.router.config)}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}processRoutes(t,e){const n=[];for(const r of e)if(r.loadChildren&&!r.canLoad&&r._loadedConfig){const t=r._loadedConfig;n.push(this.processRoutes(t.module,t.routes))}else r.loadChildren&&!r.canLoad?n.push(this.preloadConfig(t,r)):r.children&&n.push(this.processRoutes(t,r.children));return j(n).pipe($(),S(t=>{}))}preloadConfig(t,e){return this.preloadingStrategy.preload(e,()=>(e._loadedConfig?Gh(e._loadedConfig):this.loader.load(t.injector,e)).pipe(B(t=>(e._loadedConfig=t,this.processRoutes(t.module,t.routes)))))}}return t.\u0275fac=function(e){return new(e||t)(or(Cm),or(Du),or(Xl),or(Wi),or(Am))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),km=(()=>{class t{constructor(t,e,n={}){this.router=t,this.viewportScroller=e,this.options=n,this.lastId=0,this.lastSource="imperative",this.restoredId=0,this.store={},n.scrollPositionRestoration=n.scrollPositionRestoration||"disabled",n.anchorScrolling=n.anchorScrolling||"disabled"}init(){"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.setHistoryScrollRestoration("manual"),this.routerEventsSubscription=this.createScrollEvents(),this.scrollEventsSubscription=this.consumeScrollEvents()}createScrollEvents(){return this.router.events.subscribe(t=>{t instanceof Gp?(this.store[this.lastId]=this.viewportScroller.getScrollPosition(),this.lastSource=t.navigationTrigger,this.restoredId=t.restoredState?t.restoredState.navigationId:0):t instanceof Zp&&(this.lastId=t.id,this.scheduleScrollEvent(t,this.router.parseUrl(t.urlAfterRedirects).fragment))})}consumeScrollEvents(){return this.router.events.subscribe(t=>{t instanceof uf&&(t.position?"top"===this.options.scrollPositionRestoration?this.viewportScroller.scrollToPosition([0,0]):"enabled"===this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition(t.position):t.anchor&&"enabled"===this.options.anchorScrolling?this.viewportScroller.scrollToAnchor(t.anchor):"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition([0,0]))})}scheduleScrollEvent(t,e){this.router.triggerEvent(new uf(t,"popstate"===this.lastSource?this.store[this.restoredId]:null,e))}ngOnDestroy(){this.routerEventsSubscription&&this.routerEventsSubscription.unsubscribe(),this.scrollEventsSubscription&&this.scrollEventsSubscription.unsubscribe()}}return t.\u0275fac=function(e){return new(e||t)(or(Cm),or(sh),or(void 0))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const Tm=new Hn("ROUTER_CONFIGURATION"),Fm=new Hn("ROUTER_FORROOT_GUARD"),Om=[Zu,{provide:Of,useClass:Pf},{provide:Cm,useFactory:function(t,e,n,r,s,i,o,a={},l,u){const c=new Cm(null,t,e,n,r,s,i,yf(o));return l&&(c.urlHandlingStrategy=l),u&&(c.routeReuseStrategy=u),function(t,e){t.errorHandler&&(e.errorHandler=t.errorHandler),t.malformedUriErrorHandler&&(e.malformedUriErrorHandler=t.malformedUriErrorHandler),t.onSameUrlNavigation&&(e.onSameUrlNavigation=t.onSameUrlNavigation),t.paramsInheritanceStrategy&&(e.paramsInheritanceStrategy=t.paramsInheritanceStrategy),t.relativeLinkResolution&&(e.relativeLinkResolution=t.relativeLinkResolution),t.urlUpdateStrategy&&(e.urlUpdateStrategy=t.urlUpdateStrategy)}(a,c),a.enableTracing&&c.events.subscribe(t=>{var e,n;null===(e=console.group)||void 0===e||e.call(console,`Router Event: ${t.constructor.name}`),console.log(t.toString()),console.log(t),null===(n=console.groupEnd)||void 0===n||n.call(console)}),c},deps:[Of,gm,Zu,Wi,Du,Xl,dm,Tm,[class{},new cr],[class{},new cr]]},gm,{provide:tg,useFactory:function(t){return t.routerState.root},deps:[Cm]},{provide:Du,useClass:Su},xm,Sm,class{preload(t,e){return e().pipe(Ap(()=>Gh(null)))}},{provide:Tm,useValue:{enableTracing:!1}}];function Pm(){return new mu("Router",Cm)}let Im=(()=>{class t{constructor(t,e){}static forRoot(e,n){return{ngModule:t,providers:[Om,Nm(e),{provide:Fm,useFactory:jm,deps:[[Cm,new cr,new hr]]},{provide:Tm,useValue:n||{}},{provide:$u,useFactory:Mm,deps:[Ru,[new ur(qu),new cr],Tm]},{provide:km,useFactory:Rm,deps:[Cm,sh,Tm]},{provide:Am,useExisting:n&&n.preloadingStrategy?n.preloadingStrategy:Sm},{provide:mu,multi:!0,useFactory:Pm},[Vm,{provide:Rl,multi:!0,useFactory:Lm,deps:[Vm]},{provide:Um,useFactory:Bm,deps:[Vm]},{provide:Ul,multi:!0,useExisting:Um}]]}}static forChild(e){return{ngModule:t,providers:[Nm(e)]}}}return t.\u0275fac=function(e){return new(e||t)(or(Fm,8),or(Cm,8))},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({}),t})();function Rm(t,e,n){return n.scrollOffset&&e.setOffset(n.scrollOffset),new km(t,e,n)}function Mm(t,e,n={}){return n.useHash?new Gu(t,e):new Wu(t,e)}function jm(t){return"guarded"}function Nm(t){return[{provide:$n,multi:!0,useValue:t},{provide:dm,multi:!0,useValue:t}]}let Vm=(()=>{class t{constructor(t){this.injector=t,this.initNavigation=!1,this.resultOfPreactivationDone=new D}appInitializer(){return this.injector.get(ju,Promise.resolve(null)).then(()=>{let t=null;const e=new Promise(e=>t=e),n=this.injector.get(Cm),r=this.injector.get(Tm);return"disabled"===r.initialNavigation?(n.setUpLocationChangeListener(),t(!0)):"enabled"===r.initialNavigation||"enabledBlocking"===r.initialNavigation?(n.hooks.afterPreactivation=()=>this.initNavigation?Gh(null):(this.initNavigation=!0,t(!0),this.resultOfPreactivationDone),n.initialNavigation()):t(!0),e})}bootstrapListener(t){const e=this.injector.get(Tm),n=this.injector.get(xm),r=this.injector.get(km),s=this.injector.get(Cm),i=this.injector.get(_u);t===i.components[0]&&("enabledNonBlocking"!==e.initialNavigation&&void 0!==e.initialNavigation||s.initialNavigation(),n.setUpPreloading(),r.init(),s.resetRootComponentType(i.componentTypes[0]),this.resultOfPreactivationDone.next(null),this.resultOfPreactivationDone.complete())}}return t.\u0275fac=function(e){return new(e||t)(or(Wi))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function Lm(t){return t.appInitializer.bind(t)}function Bm(t){return t.bootstrapListener.bind(t)}const Um=new Hn("Router Initializer");class Hm{}class $m{}class zm{constructor(t){this.normalizedNames=new Map,this.lazyUpdate=null,t?this.lazyInit="string"==typeof t?()=>{this.headers=new Map,t.split("\n").forEach(t=>{const e=t.indexOf(":");if(e>0){const n=t.slice(0,e),r=n.toLowerCase(),s=t.slice(e+1).trim();this.maybeSetNormalizedName(n,r),this.headers.has(r)?this.headers.get(r).push(s):this.headers.set(r,[s])}})}:()=>{this.headers=new Map,Object.keys(t).forEach(e=>{let n=t[e];const r=e.toLowerCase();"string"==typeof n&&(n=[n]),n.length>0&&(this.headers.set(r,n),this.maybeSetNormalizedName(e,r))})}:this.headers=new Map}has(t){return this.init(),this.headers.has(t.toLowerCase())}get(t){this.init();const e=this.headers.get(t.toLowerCase());return e&&e.length>0?e[0]:null}keys(){return this.init(),Array.from(this.normalizedNames.values())}getAll(t){return this.init(),this.headers.get(t.toLowerCase())||null}append(t,e){return this.clone({name:t,value:e,op:"a"})}set(t,e){return this.clone({name:t,value:e,op:"s"})}delete(t,e){return this.clone({name:t,value:e,op:"d"})}maybeSetNormalizedName(t,e){this.normalizedNames.has(e)||this.normalizedNames.set(e,t)}init(){this.lazyInit&&(this.lazyInit instanceof zm?this.copyFrom(this.lazyInit):this.lazyInit(),this.lazyInit=null,this.lazyUpdate&&(this.lazyUpdate.forEach(t=>this.applyUpdate(t)),this.lazyUpdate=null))}copyFrom(t){t.init(),Array.from(t.headers.keys()).forEach(e=>{this.headers.set(e,t.headers.get(e)),this.normalizedNames.set(e,t.normalizedNames.get(e))})}clone(t){const e=new zm;return e.lazyInit=this.lazyInit&&this.lazyInit instanceof zm?this.lazyInit:this,e.lazyUpdate=(this.lazyUpdate||[]).concat([t]),e}applyUpdate(t){const e=t.name.toLowerCase();switch(t.op){case"a":case"s":let n=t.value;if("string"==typeof n&&(n=[n]),0===n.length)return;this.maybeSetNormalizedName(t.name,e);const r=("a"===t.op?this.headers.get(e):void 0)||[];r.push(...n),this.headers.set(e,r);break;case"d":const s=t.value;if(s){let t=this.headers.get(e);if(!t)return;t=t.filter(t=>-1===s.indexOf(t)),0===t.length?(this.headers.delete(e),this.normalizedNames.delete(e)):this.headers.set(e,t)}else this.headers.delete(e),this.normalizedNames.delete(e)}}forEach(t){this.init(),Array.from(this.normalizedNames.keys()).forEach(e=>t(this.normalizedNames.get(e),this.headers.get(e)))}}class qm{encodeKey(t){return Wm(t)}encodeValue(t){return Wm(t)}decodeKey(t){return decodeURIComponent(t)}decodeValue(t){return decodeURIComponent(t)}}function Wm(t){return encodeURIComponent(t).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/gi,"$").replace(/%2C/gi,",").replace(/%3B/gi,";").replace(/%2B/gi,"+").replace(/%3D/gi,"=").replace(/%3F/gi,"?").replace(/%2F/gi,"/")}function Gm(t){return`${t}`}class Zm{constructor(t={}){if(this.updates=null,this.cloneFrom=null,this.encoder=t.encoder||new qm,t.fromString){if(t.fromObject)throw new Error("Cannot specify both fromString and fromObject.");this.map=function(t,e){const n=new Map;return t.length>0&&t.replace(/^\?/,"").split("&").forEach(t=>{const r=t.indexOf("="),[s,i]=-1==r?[e.decodeKey(t),""]:[e.decodeKey(t.slice(0,r)),e.decodeValue(t.slice(r+1))],o=n.get(s)||[];o.push(i),n.set(s,o)}),n}(t.fromString,this.encoder)}else t.fromObject?(this.map=new Map,Object.keys(t.fromObject).forEach(e=>{const n=t.fromObject[e];this.map.set(e,Array.isArray(n)?n:[n])})):this.map=null}has(t){return this.init(),this.map.has(t)}get(t){this.init();const e=this.map.get(t);return e?e[0]:null}getAll(t){return this.init(),this.map.get(t)||null}keys(){return this.init(),Array.from(this.map.keys())}append(t,e){return this.clone({param:t,value:e,op:"a"})}appendAll(t){const e=[];return Object.keys(t).forEach(n=>{const r=t[n];Array.isArray(r)?r.forEach(t=>{e.push({param:n,value:t,op:"a"})}):e.push({param:n,value:r,op:"a"})}),this.clone(e)}set(t,e){return this.clone({param:t,value:e,op:"s"})}delete(t,e){return this.clone({param:t,value:e,op:"d"})}toString(){return this.init(),this.keys().map(t=>{const e=this.encoder.encodeKey(t);return this.map.get(t).map(t=>e+"="+this.encoder.encodeValue(t)).join("&")}).filter(t=>""!==t).join("&")}clone(t){const e=new Zm({encoder:this.encoder});return e.cloneFrom=this.cloneFrom||this,e.updates=(this.updates||[]).concat(t),e}init(){null===this.map&&(this.map=new Map),null!==this.cloneFrom&&(this.cloneFrom.init(),this.cloneFrom.keys().forEach(t=>this.map.set(t,this.cloneFrom.map.get(t))),this.updates.forEach(t=>{switch(t.op){case"a":case"s":const e=("a"===t.op?this.map.get(t.param):void 0)||[];e.push(Gm(t.value)),this.map.set(t.param,e);break;case"d":if(void 0===t.value){this.map.delete(t.param);break}{let e=this.map.get(t.param)||[];const n=e.indexOf(Gm(t.value));-1!==n&&e.splice(n,1),e.length>0?this.map.set(t.param,e):this.map.delete(t.param)}}}),this.cloneFrom=this.updates=null)}}class Km{constructor(){this.map=new Map}set(t,e){return this.map.set(t,e),this}get(t){return this.map.has(t)||this.map.set(t,t.defaultValue()),this.map.get(t)}delete(t){return this.map.delete(t),this}keys(){return this.map.keys()}}function Ym(t){return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer}function Qm(t){return"undefined"!=typeof Blob&&t instanceof Blob}function Xm(t){return"undefined"!=typeof FormData&&t instanceof FormData}class Jm{constructor(t,e,n,r){let s;if(this.url=e,this.body=null,this.reportProgress=!1,this.withCredentials=!1,this.responseType="json",this.method=t.toUpperCase(),function(t){switch(t){case"DELETE":case"GET":case"HEAD":case"OPTIONS":case"JSONP":return!1;default:return!0}}(this.method)||r?(this.body=void 0!==n?n:null,s=r):s=n,s&&(this.reportProgress=!!s.reportProgress,this.withCredentials=!!s.withCredentials,s.responseType&&(this.responseType=s.responseType),s.headers&&(this.headers=s.headers),s.context&&(this.context=s.context),s.params&&(this.params=s.params)),this.headers||(this.headers=new zm),this.context||(this.context=new Km),this.params){const t=this.params.toString();if(0===t.length)this.urlWithParams=e;else{const n=e.indexOf("?");this.urlWithParams=e+(-1===n?"?":n<e.length-1?"&":"")+t}}else this.params=new Zm,this.urlWithParams=e}serializeBody(){return null===this.body?null:Ym(this.body)||Qm(this.body)||Xm(this.body)||"string"==typeof this.body?this.body:this.body instanceof Zm?this.body.toString():"object"==typeof this.body||"boolean"==typeof this.body||Array.isArray(this.body)?JSON.stringify(this.body):this.body.toString()}detectContentTypeHeader(){return null===this.body||Xm(this.body)?null:Qm(this.body)?this.body.type||null:Ym(this.body)?null:"string"==typeof this.body?"text/plain":this.body instanceof Zm?"application/x-www-form-urlencoded;charset=UTF-8":"object"==typeof this.body||"number"==typeof this.body||"boolean"==typeof this.body?"application/json":null}clone(t={}){var e;const n=t.method||this.method,r=t.url||this.url,s=t.responseType||this.responseType,i=void 0!==t.body?t.body:this.body,o=void 0!==t.withCredentials?t.withCredentials:this.withCredentials,a=void 0!==t.reportProgress?t.reportProgress:this.reportProgress;let l=t.headers||this.headers,u=t.params||this.params;const c=null!==(e=t.context)&&void 0!==e?e:this.context;return void 0!==t.setHeaders&&(l=Object.keys(t.setHeaders).reduce((e,n)=>e.set(n,t.setHeaders[n]),l)),t.setParams&&(u=Object.keys(t.setParams).reduce((e,n)=>e.set(n,t.setParams[n]),u)),new Jm(n,r,i,{params:u,headers:l,context:c,reportProgress:a,responseType:s,withCredentials:o})}}var ty=function(t){return t[t.Sent=0]="Sent",t[t.UploadProgress=1]="UploadProgress",t[t.ResponseHeader=2]="ResponseHeader",t[t.DownloadProgress=3]="DownloadProgress",t[t.Response=4]="Response",t[t.User=5]="User",t}({});class ey{constructor(t,e=200,n="OK"){this.headers=t.headers||new zm,this.status=void 0!==t.status?t.status:e,this.statusText=t.statusText||n,this.url=t.url||null,this.ok=this.status>=200&&this.status<300}}class ny extends ey{constructor(t={}){super(t),this.type=ty.ResponseHeader}clone(t={}){return new ny({headers:t.headers||this.headers,status:void 0!==t.status?t.status:this.status,statusText:t.statusText||this.statusText,url:t.url||this.url||void 0})}}class ry extends ey{constructor(t={}){super(t),this.type=ty.Response,this.body=void 0!==t.body?t.body:null}clone(t={}){return new ry({body:void 0!==t.body?t.body:this.body,headers:t.headers||this.headers,status:void 0!==t.status?t.status:this.status,statusText:t.statusText||this.statusText,url:t.url||this.url||void 0})}}class sy extends ey{constructor(t){super(t,0,"Unknown Error"),this.name="HttpErrorResponse",this.ok=!1,this.message=this.status>=200&&this.status<300?`Http failure during parsing for ${t.url||"(unknown url)"}`:`Http failure response for ${t.url||"(unknown url)"}: ${t.status} ${t.statusText}`,this.error=t.error||null}}function iy(t,e){return{body:e,headers:t.headers,context:t.context,observe:t.observe,params:t.params,reportProgress:t.reportProgress,responseType:t.responseType,withCredentials:t.withCredentials}}let oy=(()=>{class t{constructor(t){this.handler=t}request(t,e,n={}){let r;if(t instanceof Jm)r=t;else{let s,i;s=n.headers instanceof zm?n.headers:new zm(n.headers),n.params&&(i=n.params instanceof Zm?n.params:new Zm({fromObject:n.params})),r=new Jm(t,e,void 0!==n.body?n.body:null,{headers:s,context:n.context,params:i,reportProgress:n.reportProgress,responseType:n.responseType||"json",withCredentials:n.withCredentials})}const s=Gh(r).pipe(kp(t=>this.handler.handle(t)));if(t instanceof Jm||"events"===n.observe)return s;const i=s.pipe(Cp(t=>t instanceof ry));switch(n.observe||"body"){case"body":switch(r.responseType){case"arraybuffer":return i.pipe(S(t=>{if(null!==t.body&&!(t.body instanceof ArrayBuffer))throw new Error("Response is not an ArrayBuffer.");return t.body}));case"blob":return i.pipe(S(t=>{if(null!==t.body&&!(t.body instanceof Blob))throw new Error("Response is not a Blob.");return t.body}));case"text":return i.pipe(S(t=>{if(null!==t.body&&"string"!=typeof t.body)throw new Error("Response is not a string.");return t.body}));case"json":default:return i.pipe(S(t=>t.body))}case"response":return i;default:throw new Error(`Unreachable: unhandled observe type ${n.observe}}`)}}delete(t,e={}){return this.request("DELETE",t,e)}get(t,e={}){return this.request("GET",t,e)}head(t,e={}){return this.request("HEAD",t,e)}jsonp(t,e){return this.request("JSONP",t,{params:(new Zm).append(e,"JSONP_CALLBACK"),observe:"body",responseType:"json"})}options(t,e={}){return this.request("OPTIONS",t,e)}patch(t,e,n={}){return this.request("PATCH",t,iy(n,e))}post(t,e,n={}){return this.request("POST",t,iy(n,e))}put(t,e,n={}){return this.request("PUT",t,iy(n,e))}}return t.\u0275fac=function(e){return new(e||t)(or(Hm))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();class ay{constructor(t,e){this.next=t,this.interceptor=e}handle(t){return this.interceptor.intercept(t,this.next)}}const ly=new Hn("HTTP_INTERCEPTORS");let uy=(()=>{class t{intercept(t,e){return e.handle(t)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const cy=/^\)\]\}',?\n/;let hy=(()=>{class t{constructor(t){this.xhrFactory=t}handle(t){if("JSONP"===t.method)throw new Error("Attempted to construct Jsonp request without HttpClientJsonpModule installed.");return new v(e=>{const n=this.xhrFactory.build();if(n.open(t.method,t.urlWithParams),t.withCredentials&&(n.withCredentials=!0),t.headers.forEach((t,e)=>n.setRequestHeader(t,e.join(","))),t.headers.has("Accept")||n.setRequestHeader("Accept","application/json, text/plain, */*"),!t.headers.has("Content-Type")){const e=t.detectContentTypeHeader();null!==e&&n.setRequestHeader("Content-Type",e)}if(t.responseType){const e=t.responseType.toLowerCase();n.responseType="json"!==e?e:"text"}const r=t.serializeBody();let s=null;const i=()=>{if(null!==s)return s;const e=1223===n.status?204:n.status,r=n.statusText||"OK",i=new zm(n.getAllResponseHeaders()),o=function(t){return"responseURL"in t&&t.responseURL?t.responseURL:/^X-Request-URL:/m.test(t.getAllResponseHeaders())?t.getResponseHeader("X-Request-URL"):null}(n)||t.url;return s=new ny({headers:i,status:e,statusText:r,url:o}),s},o=()=>{let{headers:r,status:s,statusText:o,url:a}=i(),l=null;204!==s&&(l=void 0===n.response?n.responseText:n.response),0===s&&(s=l?200:0);let u=s>=200&&s<300;if("json"===t.responseType&&"string"==typeof l){const t=l;l=l.replace(cy,"");try{l=""!==l?JSON.parse(l):null}catch(c){l=t,u&&(u=!1,l={error:c,text:l})}}u?(e.next(new ry({body:l,headers:r,status:s,statusText:o,url:a||void 0})),e.complete()):e.error(new sy({error:l,headers:r,status:s,statusText:o,url:a||void 0}))},a=t=>{const{url:r}=i(),s=new sy({error:t,status:n.status||0,statusText:n.statusText||"Unknown Error",url:r||void 0});e.error(s)};let l=!1;const u=r=>{l||(e.next(i()),l=!0);let s={type:ty.DownloadProgress,loaded:r.loaded};r.lengthComputable&&(s.total=r.total),"text"===t.responseType&&n.responseText&&(s.partialText=n.responseText),e.next(s)},c=t=>{let n={type:ty.UploadProgress,loaded:t.loaded};t.lengthComputable&&(n.total=t.total),e.next(n)};return n.addEventListener("load",o),n.addEventListener("error",a),n.addEventListener("timeout",a),n.addEventListener("abort",a),t.reportProgress&&(n.addEventListener("progress",u),null!==r&&n.upload&&n.upload.addEventListener("progress",c)),n.send(r),e.next({type:ty.Sent}),()=>{n.removeEventListener("error",a),n.removeEventListener("abort",a),n.removeEventListener("load",o),n.removeEventListener("timeout",a),t.reportProgress&&(n.removeEventListener("progress",u),null!==r&&n.upload&&n.upload.removeEventListener("progress",c)),n.readyState!==n.DONE&&n.abort()}})}}return t.\u0275fac=function(e){return new(e||t)(or(ah))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const dy=new Hn("XSRF_COOKIE_NAME"),py=new Hn("XSRF_HEADER_NAME");class fy{}let gy=(()=>{class t{constructor(t,e,n){this.doc=t,this.platform=e,this.cookieName=n,this.lastCookieString="",this.lastToken=null,this.parseCount=0}getToken(){if("server"===this.platform)return null;const t=this.doc.cookie||"";return t!==this.lastCookieString&&(this.parseCount++,this.lastToken=Bc(t,this.cookieName),this.lastCookieString=t),this.lastToken}}return t.\u0275fac=function(e){return new(e||t)(or(Iu),or(Bl),or(dy))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),my=(()=>{class t{constructor(t,e){this.tokenService=t,this.headerName=e}intercept(t,e){const n=t.url.toLowerCase();if("GET"===t.method||"HEAD"===t.method||n.startsWith("http://")||n.startsWith("https://"))return e.handle(t);const r=this.tokenService.getToken();return null===r||t.headers.has(this.headerName)||(t=t.clone({headers:t.headers.set(this.headerName,r)})),e.handle(t)}}return t.\u0275fac=function(e){return new(e||t)(or(fy),or(py))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),yy=(()=>{class t{constructor(t,e){this.backend=t,this.injector=e,this.chain=null}handle(t){if(null===this.chain){const t=this.injector.get(ly,[]);this.chain=t.reduceRight((t,e)=>new ay(t,e),this.backend)}return this.chain.handle(t)}}return t.\u0275fac=function(e){return new(e||t)(or($m),or(Wi))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),vy=(()=>{class t{static disable(){return{ngModule:t,providers:[{provide:my,useClass:uy}]}}static withOptions(e={}){return{ngModule:t,providers:[e.cookieName?{provide:dy,useValue:e.cookieName}:[],e.headerName?{provide:py,useValue:e.headerName}:[]]}}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[my,{provide:ly,useExisting:my,multi:!0},{provide:fy,useClass:gy},{provide:dy,useValue:"XSRF-TOKEN"},{provide:py,useValue:"X-XSRF-TOKEN"}]}),t})(),by=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[oy,{provide:Hm,useClass:yy},hy,{provide:$m,useExisting:hy}],imports:[[vy.withOptions({cookieName:"XSRF-TOKEN",headerName:"X-XSRF-TOKEN"})]]}),t})();function wy(t,e,n,r){var s,i=arguments.length,o=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,r);else for(var a=t.length-1;a>=0;a--)(s=t[a])&&(o=(i<3?s(o):i>3?s(e,n,o):s(e,n))||o);return i>3&&o&&Object.defineProperty(e,n,o),o}class _y{constructor(t,e){this.predicate=t,this.inclusive=e}call(t,e){return e.subscribe(new Cy(t,this.predicate,this.inclusive))}}class Cy extends f{constructor(t,e,n){super(t),this.predicate=e,this.inclusive=n,this.index=0}_next(t){const e=this.destination;let n;try{n=this.predicate(t,this.index++)}catch(r){return void e.error(r)}this.nextOrComplete(t,n)}nextOrComplete(t,e){const n=this.destination;Boolean(e)?n.next(t):(this.inclusive&&n.next(t),n.complete())}}function Dy(t,e){1&t&&Eo(0)}const Ey=["*"];function Ay(t,e){1&t&&fo(0)}function Sy(t,e){if(1&t){const t=go();co(0,"section",2),co(1,"po-accordion-item-header",3),vo("p-toggle",function(e){const n=Oe(t).$implicit;return _o().headerToggle(e,n)}),ho(),co(2,"po-accordion-item-body",4),oo(3,Ay,1,0,"ng-container",5),ho(),ho()}if(2&t){const t=e.$implicit;Oo("po-accordion-item-active",t.expanded),Ns(1),lo("p-expanded",t.expanded)("p-label",t.label),Ns(1),lo("p-expanded",t.expanded),Ns(1),lo("ngTemplateOutlet",t.templateRef)}}function xy(t,e){1&t&&(co(0,"div",1),co(1,"div",2),Eo(2),ho(),ho()),2&t&&lo("@toggleBody",void 0)}function ky(t,e){1&t&&fo(0)}function Ty(t,e){1&t&&po(0,"i",2),2&t&&Io(Yn,Po,_o().class,!0)}function Fy(t,e){if(1&t&&(co(0,"span",2),Ho(1),ho()),2&t){const t=_o();Ns(1),$o(t.text)}}const Oy=["button"];function Py(t,e){1&t&&(co(0,"div",5),po(1,"po-loading-icon",6),ho())}function Iy(t,e){1&t&&po(0,"po-icon",7),2&t&&lo("p-icon",_o().icon)}function Ry(t,e){if(1&t&&(co(0,"span",8),Ho(1),ho()),2&t){const t=_o();Ns(1),$o(t.label)}}function My(t,e){if(1&t&&(co(0,"span",2),po(1,"span",3),Ho(2),ho()),2&t){const t=_o();Ns(2),zo(" ",t.errorPattern," ")}}function jy(t,e){if(1&t&&(co(0,"span",5),Ho(1),ho()),2&t){const t=_o();Ns(1),$o(t.literals.optional)}}function Ny(t,e){if(1&t&&(co(0,"div",6),Ho(1),ho()),2&t){const t=_o();Ns(1),$o(t.help)}}function Vy(t,e){if(1&t){const t=go();co(0,"span",1),vo("click",function(){return Oe(t),_o().clear()}),ho()}}const Ly=["inp"],By=["modalContent"];function Uy(t,e){if(1&t){const t=go();co(0,"a",14),vo("click",function(){return Oe(t),_o(2).close(!0)}),po(1,"span",15),ho()}}function Hy(t,e){if(1&t){const t=go();co(0,"po-button",16),vo("p-click",function(){return Oe(t),_o(2).secondaryAction.action()}),ho()}if(2&t){const t=_o(2);lo("p-disabled",t.secondaryAction.disabled)("p-label",t.secondaryAction.label)("p-loading",t.secondaryAction.loading)("p-type",t.getSecondaryActionButtonType())}}function $y(t,e){if(1&t){const t=go();co(0,"div",1),vo("keydown.esc",function(e){return Oe(t),_o().closeModalOnEscapeKey(e)}),co(1,"div",2),co(2,"div",3),vo("mousedown",function(e){return Oe(t),_o().onClickOut(e)}),co(3,"div",4),co(4,"div",5,6),co(6,"div",7),co(7,"div",8),Ho(8),ho(),oo(9,Uy,2,0,"a",9),ho(),co(10,"div",10),Eo(11),ho(),co(12,"div",11),oo(13,Hy,1,4,"po-button",12),co(14,"po-button",13),vo("p-click",function(){return Oe(t),_o().primaryAction.action()}),ho(),ho(),ho(),ho(),ho(),ho(),ho()}if(2&t){const t=_o();Ns(4),qo("po-modal-content po-modal-",t.size,""),Ns(4),zo(" ",t.title," "),Ns(1),lo("ngIf",!t.hideClose),Ns(4),lo("ngIf",t.secondaryAction),Ns(1),lo("p-disabled",t.primaryAction.disabled)("p-label",t.primaryAction.label)("p-loading",t.primaryAction.loading)("p-type",t.getPrimaryActionButtonType())}}const zy=["toaster"];function qy(t,e){if(1&t){const t=go();co(0,"div",7),vo("click",function(e){return Oe(t),_o().poToasterAction(e)}),Ho(1),ho()}if(2&t){const t=_o();Ns(1),zo(" ",t.actionLabel," ")}}function Wy(t,e){if(1&t&&(co(0,"div",8),po(1,"po-icon",9),ho()),2&t){const t=_o();Ns(1),Oo("po-field-icon-disabled",t.disabled),lo("p-icon",t.icon)}}function Gy(t,e){if(1&t){const t=go();co(0,"po-clean",10),vo("p-change-event",function(e){return Oe(t),_o().clear(e)}),ho()}if(2&t){const t=_o();lo("p-default-value",null)("p-element-ref",t.inputEl)}}function Zy(t,e){if(1&t&&(co(0,"div",6),co(1,"span",7),Ho(2),ho(),ho()),2&t){const t=_o();Ns(2),$o(t.tagOrientation?t.label+":":t.label)}}function Ky(t,e){if(1&t&&po(0,"po-icon",8),2&t){const t=_o();lo("p-icon",t.type?t.iconFromType:t.icon)}}function Yy(t,e){if(1&t&&(co(0,"div",6),po(1,"po-tag",7),ho()),2&t){const t=_o().$implicit,e=_o();Ns(1),lo("p-color",e.typeColor(t.type))("p-value",e.typeValue(t.type))}}function Qy(t,e){if(1&t&&(co(0,"po-accordion-item",4),oo(1,Yy,2,2,"div",5),co(2,"div",1),co(3,"p"),Ho(4),ho(),ho(),ho()),2&t){const t=e.$implicit;lo("p-label",_o().formatDetailItemTitle(t)),Ns(1),lo("ngIf",t.type),Ns(3),$o(t.detailedMessage)}}let Xy=(()=>{class t{constructor(){this.subjectChild=new D}receiveFromChildAccordionClicked(){return this.subjectChild.asObservable()}sendToParentAccordionItemClicked(t){this.subjectChild.next(t)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Jy=(()=>{class t{constructor(t){this.accordionService=t}collapse(){this.expanded=!1,this.accordionService.sendToParentAccordionItemClicked(this)}expand(){this.expanded=!0,this.accordionService.sendToParentAccordionItemClicked(this)}}return t.\u0275fac=function(e){return new(e||t)(ao(Xy))},t.\u0275cmp=Ht({type:t,selectors:[["po-accordion-item"]],viewQuery:function(t,e){if(1&t&&kl(Wa,7),2&t){let t;xl(t=Tl())&&(e.templateRef=t.first)}},inputs:{label:["p-label","label"]},ngContentSelectors:Ey,decls:1,vars:0,template:function(t,e){1&t&&(Do(),oo(0,Dy,1,0,"ng-template"))},encapsulation:2}),t})(),tv=(()=>{class t extends class{}{constructor(t){super(),this.accordionService=t,this.receiveFromChildAccordionSubscription()}ngOnDestroy(){this.accordionServiceSubscription.unsubscribe()}headerToggle(t,e){e.expanded=t,this.toggle(e)}receiveFromChildAccordionSubscription(){this.accordionServiceSubscription=this.accordionService.receiveFromChildAccordionClicked().subscribe(t=>this.toggle(t))}toggle(t){t.expanded?(this.expandedActiveAccordionItem&&this.expandedActiveAccordionItem.collapse(),this.expandedActiveAccordionItem=t):this.expandedActiveAccordionItem=null}}return t.\u0275fac=function(e){return new(e||t)(ao(Xy))},t.\u0275cmp=Ht({type:t,selectors:[["po-accordion"]],contentQueries:function(t,e,n){if(1&t&&function(t,e,n,r){const s=Fe();if(s.firstCreatePass){const n=Pe();Ol(s,new wl(e,4,void 0),n.index),function(t,e){const n=t.contentQueries||(t.contentQueries=[]);e!==(n.length?n[n.length-1]:-1)&&n.push(t.queries.length-1,e)}(s,t)}Fl(s,Te(),4)}(n,Jy),2&t){let t;xl(t=Tl())&&(e.poAccordionItems=t)}},features:[la([Xy]),Zi],decls:2,vars:1,consts:[[1,"po-accordion","po-container","po-container-no-padding"],["class","po-accordion-item",3,"po-accordion-item-active",4,"ngFor","ngForOf"],[1,"po-accordion-item"],[3,"p-expanded","p-label","p-toggle"],[3,"p-expanded"],[4,"ngTemplateOutlet"]],template:function(t,e){1&t&&(co(0,"div",0),oo(1,Sy,4,6,"section",1),ho()),2&t&&(Ns(1),lo("ngForOf",e.poAccordionItems))},directives:function(){return[$c,nv,ev,Zc]},encapsulation:2}),t})(),ev=(()=>{class t{constructor(){this.expanded=!1}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=Ht({type:t,selectors:[["po-accordion-item-body"]],inputs:{expanded:["p-expanded","expanded"]},ngContentSelectors:Ey,decls:1,vars:1,consts:[["class","po-accordion-item-body",4,"ngIf"],[1,"po-accordion-item-body"],[1,"po-accordion-item-body-content"]],template:function(t,e){1&t&&(Do(),oo(0,xy,3,1,"div",0)),2&t&&lo("ngIf",e.expanded)},directives:[qc],encapsulation:2,data:{animation:[("toggleBody",e=[sp("* => void",[rp({height:"*"}),np(200,rp({height:0}))]),sp("void => *",[rp({height:"0"}),np(200,rp({height:"*"}))])],{type:7,name:"toggleBody",definitions:e,options:{}})]}}),t;var e})(),nv=(()=>{class t{constructor(){this.expanded=!1,this.toggle=new gl}onClick(){this.expanded=!this.expanded,this.toggle.emit(this.expanded)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=Ht({type:t,selectors:[["po-accordion-item-header"]],inputs:{expanded:["p-expanded","expanded"],label:["p-label","label"]},outputs:{toggle:"p-toggle"},decls:6,vars:1,consts:[[1,"po-accordion-item-header"],[1,"po-accordion-item-header-button","po-clickable",3,"click"],[1,"po-text-ellipsis","po-accordion-item-header-title"],[1,"po-icon","po-accordion-item-header-icon","po-icon-arrow-down"],["icon",""]],template:function(t,e){1&t&&(co(0,"header",0),co(1,"button",1),vo("click",function(){return e.onClick()}),co(2,"div",2),Ho(3),ho(),po(4,"span",3,4),ho(),ho()),2&t&&(Ns(3),$o(e.label))},encapsulation:2,changeDetection:0}),t})(),rv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh]]}),t})(),sv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh]]}),t})();const iv=[{description:"English",language:"en"},{description:"Espa\xf1ol",language:"es"},{description:"Portugu\xeas",language:"pt"},{description:"P\u0443\u0441\u0441\u043a\u0438\u0439",language:"ru"}].map(t=>t.language),ov="pt",av=[{separator:".",language:"en"},{separator:",",language:"es"},{separator:",",language:"pt"},{separator:",",language:"ru"}],lv=[{separator:",",language:"en"},{separator:".",language:"es"},{separator:".",language:"pt"},{separator:" ",language:"ru"}];function uv(t){return(t||ov).toLowerCase().substring(0,2)}function cv(t){return new RegExp("^[a-z]{2}(-[a-z]{2})?$","i").test(t)}function hv(t){return"string"==typeof t?"true"===(t=t.toLowerCase().trim())||"on"===t||""===t:"number"==typeof t?1===t:!!t}const dv="PO_DEFAULT_LANGUAGE",pv="PO_USER_LOCALE";let fv=(()=>{class t{constructor(){}set languageDefault(t){t&&cv(t)&&localStorage.setItem(dv,t)}get languageDefault(){return localStorage.getItem(dv)}getLanguage(){const t=localStorage.getItem(pv)||this.languageDefault||function(){const t=navigator.language||navigator.userLanguage,e=uv(t);return iv.includes(e)?t:ov}();return t&&t.toLowerCase()}getLanguageDefault(){return this.languageDefault}getShortLanguage(){const t=uv(this.getLanguage());return iv.includes(t)?t:ov}setLanguage(t){cv(t)&&localStorage.setItem(pv,t.toLowerCase())}setLanguageDefault(t){this.languageDefault=t}getNumberSeparators(t){var e,n,r,s;t=t||this.getShortLanguage();const i=null!==(e=av.find(e=>e.language===t))&&void 0!==e?e:{},o=null!==(n=lv.find(e=>e.language===t))&&void 0!==n?n:{};return{decimalSeparator:null!==(r=i.separator)&&void 0!==r?r:",",thousandSeparator:null!==(s=o.separator)&&void 0!==s?s:"."}}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:function(){return new t},token:t,providedIn:"root"}),t})(),gv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh,Im]]}),t})(),mv=(()=>{class t{constructor(){}set icon(t){"string"==typeof t?this.addClasses(t):t instanceof Wa&&(this._icon=t)}get icon(){return this._icon}addClasses(t){this.class=this.class=t.startsWith("po-icon-")?`po-icon ${t}`:`po-fonts-icon ${t}`}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=Ht({type:t,selectors:[["po-icon"]],inputs:{icon:["p-icon","icon"]},decls:3,vars:3,consts:[[4,"ngIf","ngIfThen","ngIfElse"],["fontTemplate",""],["aria-hidden","true"]],template:function(t,e){if(1&t&&(oo(0,ky,1,0,"ng-container",0),oo(1,Ty,1,2,"ng-template",null,1,Il)),2&t){const t=xe.lFrame.contextLView[22];lo("ngIf",e.class)("ngIfThen",t)("ngIfElse",e.icon)}},directives:[qc],encapsulation:2,changeDetection:0}),t})(),yv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh]]}),t})();const vv={en:{loading:"Loading"},es:{loading:"Cargando"},pt:{loading:"Carregando"},ru:{loading:"\u043f\u043e\u0433\u0440\u0443\u0437\u043a\u0430"}};let bv=(()=>{class t{constructor(t){this.languageService=t,this._screenLock=!1,this.text=this.getTextDefault()}set screenLock(t){this._screenLock=hv(t)}get screenLock(){return this._screenLock}set text(t){this._text=t||this.getTextDefault()}get text(){return this._text}getTextDefault(){const t=this.languageService.getShortLanguage();return vv[t].loading}}return t.\u0275fac=function(e){return new(e||t)(ao(fv))},t.\u0275dir=Zt({type:t,inputs:{text:["p-text","text"],screenLock:["p-screen-lock","screenLock"]}}),t})(),wv=(()=>{class t extends bv{constructor(t,e){super(e),this.changeDetector=t}}return t.\u0275fac=function(e){return new(e||t)(ao(Ua),ao(fv))},t.\u0275cmp=Ht({type:t,selectors:[["po-loading-overlay"]],features:[Zi],decls:2,vars:5,consts:[[1,"po-loading-overlay-content",3,"p-text"]],template:function(t,e){1&t&&(co(0,"div"),po(1,"po-loading",0),ho()),2&t&&(Oo("po-overlay-absolute",!e.screenLock)("po-overlay-fixed",e.screenLock),Ns(1),lo("p-text",e.text))},directives:function(){return[Dv]},encapsulation:2}),t})(),_v=(()=>{class t{set neutralColor(t){this._neutralColor=hv(t)}get neutralColor(){return this._neutralColor}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=Ht({type:t,selectors:[["po-loading-icon"]],inputs:{neutralColor:["p-neutral-color","neutralColor"]},decls:9,vars:2,consts:[[1,"po-loading-icon"],[1,"po-loading-icon-bar","po-loading-icon-bar-1"],[1,"po-loading-icon-bar","po-loading-icon-bar-2"],[1,"po-loading-icon-bar","po-loading-icon-bar-3"],[1,"po-loading-icon-bar","po-loading-icon-bar-4"],[1,"po-loading-icon-bar","po-loading-icon-bar-5"],[1,"po-loading-icon-bar","po-loading-icon-bar-6"],[1,"po-loading-icon-bar","po-loading-icon-bar-7"],[1,"po-loading-icon-bar","po-loading-icon-bar-8"]],template:function(t,e){1&t&&(co(0,"div",0),po(1,"span",1),po(2,"span",2),po(3,"span",3),po(4,"span",4),po(5,"span",5),po(6,"span",6),po(7,"span",7),po(8,"span",8),ho()),2&t&&Oo("po-loading-icon-neutral-color",e.neutralColor)},encapsulation:2}),t})(),Cv=(()=>{class t{constructor(){this.text="Carregando"}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Zt({type:t,inputs:{text:["p-text","text"]}}),t})(),Dv=(()=>{class t extends Cv{}return t.\u0275fac=function(){let e;return function(n){return(e||(e=Vn(t)))(n||t)}}(),t.\u0275cmp=Ht({type:t,selectors:[["po-loading"]],features:[Zi],decls:3,vars:1,consts:[[1,"po-loading"],["class","po-loading-label po-text-ellipsis",4,"ngIf"],[1,"po-loading-label","po-text-ellipsis"]],template:function(t,e){1&t&&(co(0,"div",0),po(1,"po-loading-icon"),oo(2,Fy,2,1,"span",1),ho()),2&t&&(Ns(2),lo("ngIf",e.text))},directives:[_v,qc],encapsulation:2}),t})(),Ev=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[fv]}),t})(),Av=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh,Ev]]}),t})();function Sv(t,e,n){return function(r){t&&t.set&&t.set.bind(this)(e(r)),this[n]=e(r)}}function xv(t,e){return function(){return t&&t.get?t.get.bind(this)():this[e]}}function kv(){return function(t,e,n){return function(t,e,n){const{target:r,property:s,originalDescriptor:i}=t,o=function(t,e,n){const r=`$$__${e}`;return Object.prototype.hasOwnProperty.call(t,r)&&console.warn(`The prop "${r}" is already exist, it will be overrided by InputBoolean decorator.`),Object.defineProperty(t,r,{configurable:!0,writable:!0}),r}(r,s);return{get:xv(i,o),set:Sv(i,n,o)}}({target:t,property:e,originalDescriptor:n},0,hv)}}const Tv=["default","primary","danger","link"];let Fv=(()=>{class t{constructor(){this.autoFocus=!1,this.click=new gl,this._disabled=!1,this._loading=!1,this._small=!1,this._type="default"}set loading(t){this._loading=hv(t)}get loading(){return this._loading}set small(t){this._small=""===t||hv(t)}get small(){return this._small}set type(t){this._type=Tv.includes(t)?t:"default"}get type(){return this._type}set disabled(t){this._disabled=""===t||hv(t)}get disabled(){return this._disabled}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Zt({type:t,inputs:{autoFocus:["p-auto-focus","autoFocus"],loading:["p-loading","loading"],small:["p-small","small"],type:["p-type","type"],disabled:["p-disabled","disabled"],label:["p-label","label"],icon:["p-icon","icon"]},outputs:{click:"p-click"}}),wy([kv()],t.prototype,"autoFocus",void 0),t})(),Ov=(()=>{class t extends Fv{ngAfterViewInit(){this.autoFocus&&this.focus()}focus(){this.disabled||this.buttonElement.nativeElement.focus()}onClick(){this.click.emit(null)}}return t.\u0275fac=function(){let e;return function(n){return(e||(e=Vn(t)))(n||t)}}(),t.\u0275cmp=Ht({type:t,selectors:[["po-button"]],viewQuery:function(t,e){if(1&t&&kl(Oy,7),2&t){let t;xl(t=Tl())&&(e.buttonElement=t.first)}},features:[Zi],decls:5,vars:14,consts:[["type","button",1,"po-button","po-text-ellipsis",3,"disabled","click"],["button",""],["class","po-button-loading-icon",4,"ngIf"],["class","po-button-icon",3,"p-icon",4,"ngIf"],["class","po-button-label",4,"ngIf"],[1,"po-button-loading-icon"],["p-neutral-color",""],[1,"po-button-icon",3,"p-icon"],[1,"po-button-label"]],template:function(t,e){1&t&&(co(0,"button",0,1),vo("click",function(){return e.onClick()}),oo(2,Py,2,0,"div",2),oo(3,Iy,1,1,"po-icon",3),oo(4,Ry,2,1,"span",4),ho()),2&t&&(Oo("po-button-danger","danger"===e.type)("po-button-link","link"===e.type)("po-button-primary","primary"===e.type)("po-button-sm",e.small)("po-clickable","link"===e.type),lo("disabled",e.disabled||e.loading),Ns(2),lo("ngIf",e.loading),Ns(1),lo("ngIf",e.icon),Ns(1),lo("ngIf",e.label))},directives:[qc,_v,mv],encapsulation:2,changeDetection:0}),t})(),Pv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh,Av,yv]]}),t})();const Iv=["bottom","bottom-left","bottom-right","left","left-top","left-bottom","top","top-right","top-left","right","right-bottom","right-top"];let Rv=(()=>{class t{constructor(){this.differenceDiagonalToWidthArrow=3,this.isSetElementWidth=!1,this.offsetArrow=12}adjustPosition(t){const e=t||"bottom";this.elementPosition(e),this.customPositions&&this.customPositions.length?this.adjustCustomPosition(e):this.adjustDefaultPosition(e)}getArrowDirection(){return this.arrowDirection}setElements(t,e,n,r,s=!1,i=!1){this.element=t instanceof ga?t.nativeElement:t,this.targetElement=n instanceof ga?n.nativeElement:n,this.elementOffset=e,this.customPositions=r,this.isSetElementWidth=s,this.isCornerAligned=i}adjustCustomPosition(t){const e=this.customPositions.length;let n=0;for(;n++<e;)this.overflowAllSides(t)&&(t=this.nextPosition(t,this.customPositions),this.elementPosition(t))}adjustDefaultPosition(t){const e=this.getMainPositions(),n=e.length;let r=0;for(;r++<n;){const n=this.getMainPosition(t);if(this.elementPosition(t),!this.overflowMain(n))return this.overflowAllSides(t)?void this.verifySubPositions(t):void 0;t=this.nextPosition(n,e)}}elementPosition(t){this.isCornerAligned?this.setAlignedElementPosition(t):this.setElementPosition(t)}getMainPosition(t){return t.indexOf("-")>-1?t.substring(0,t.indexOf("-")):t}getMainPositions(){return this.customPositions&&this.customPositions.length?this.getMainPositionsByCustomPositions(this.customPositions):["top","right","bottom","left"]}getMainPositionsByCustomPositions(t){const e=[],n=t.length;for(let r=0;r<n;r++){const n=this.getMainPosition(t[r]);e.includes(n)||e.push(n)}return e}getOverflows(){const t=this.getSizesAndPositions();return{right:t.element.right>t.window.innerWidth,top:t.element.top<=0,left:t.element.left<=0,bottom:t.element.bottom>t.window.innerHeight}}getSizesAndPositions(){return{window:{scrollY:window.scrollY,scrollX:window.scrollX,innerWidth:window.innerWidth,innerHeight:window.innerHeight},element:this.element.getBoundingClientRect(),target:this.targetElement?this.targetElement.getBoundingClientRect():{top:0,bottom:0,right:0,left:0}}}nextPosition(t,e=[]){const n=e.indexOf(t),r=n+1;return n>-1&&r<e.length?e[r]:e[0]}overflowAllSides(t){const e=this.getOverflows();switch(t){case"top":case"top-right":return e.top||e.right||e.left;case"top-left":return e.top||e.left||e.right;case"right":return e.right||e.top||e.bottom;case"right-top":return e.right||e.top;case"right-bottom":return e.right||e.bottom;case"bottom":case"bottom-right":return e.bottom||e.right||e.left;case"bottom-left":return e.bottom||e.left||e.right;case"left":return e.left||e.top||e.bottom;case"left-top":return e.left||e.top;case"left-bottom":return e.left||e.bottom}}overflowMain(t){const e=this.getOverflows();switch(t){case"top":return e.top;case"right":return e.right;case"bottom":return e.bottom;case"left":return e.left}}setAlignedArrowDirection(t){switch(t){case"top-left":return"bottom-left";case"top-right":return"bottom-right";case"bottom-right":return"top-right";case"bottom-left":return"top-left"}}setAlignedBottomPositions(t,e){this.element.style.top=e.target.bottom+this.elementOffset+"px",this.element.style.left=e.target.left-t+"px"}setAlignedElementPosition(t){this.setElementWidth();const e=this.getSizesAndPositions();switch(t){case"bottom-left":this.setAlignedBottomPositions(0,e);break;case"bottom-right":this.setAlignedBottomPositions(e.element.width-e.target.width,e);break;case"top-left":this.setAlignedTopPositions(0,e);break;case"top-right":this.setAlignedTopPositions(e.element.width-e.target.width,e)}this.arrowDirection=this.setAlignedArrowDirection(t)}setAlignedTopPositions(t,e){this.element.style.top=e.target.top-e.element.height-this.elementOffset+"px",this.element.style.left=e.target.left-t+"px"}setArrowDirection(t){switch(t){case"top":return"bottom";case"top-left":return"bottom-right";case"top-right":return"bottom-left";case"right":return"left";case"right-top":return"left-bottom";case"right-bottom":return"left-top";case"bottom":return"top";case"bottom-right":return"top-left";case"bottom-left":return"top-right";case"left":return"right";case"left-bottom":return"right-top";case"left-top":return"right-bottom"}}setBottomPositions(t,e){this.element.style.top=e.target.bottom+this.elementOffset+"px",this.element.style.left=e.target.left+e.target.width/2-t+"px"}setElementPosition(t){this.setElementWidth();const e=this.getSizesAndPositions();switch(t){case"top":this.setTopPositions(e.element.width/2,e);break;case"top-left":this.setTopPositions(e.element.width-this.offsetArrow-this.differenceDiagonalToWidthArrow,e);break;case"top-right":this.setTopPositions(this.offsetArrow+this.differenceDiagonalToWidthArrow,e);break;case"right":this.setRightPositions(e.element.height/2,e);break;case"right-top":this.setRightPositions(e.element.height-this.offsetArrow-this.differenceDiagonalToWidthArrow,e);break;case"right-bottom":this.setRightPositions(this.offsetArrow,e);break;case"bottom":this.setBottomPositions(e.element.width/2,e);break;case"bottom-right":this.setBottomPositions(this.offsetArrow+this.differenceDiagonalToWidthArrow,e);break;case"bottom-left":this.setBottomPositions(e.element.width-this.offsetArrow-this.differenceDiagonalToWidthArrow,e);break;case"left":this.setLeftPositions(e.element.height/2,e);break;case"left-bottom":this.setLeftPositions(this.offsetArrow,e);break;case"left-top":this.setLeftPositions(e.element.height-this.offsetArrow,e)}this.arrowDirection=this.setArrowDirection(t)}setElementWidth(){this.isSetElementWidth&&this.targetElement&&(this.element.style.width=`${this.targetElement.clientWidth}px`)}setLeftPositions(t,e){this.element.style.top=e.target.top-t+e.target.height/2+"px",this.element.style.left=e.target.left-e.element.width-this.elementOffset+"px"}setRightPositions(t,e){this.element.style.top=e.target.top-t+e.target.height/2+"px",this.element.style.left=e.target.right+this.elementOffset+"px"}setTopPositions(t,e){this.element.style.top=e.target.top-e.element.height-this.elementOffset+"px",this.element.style.left=e.target.left+e.target.width/2-t+"px"}verifySubPositions(t){t.indexOf("-")>-1&&(t=t.substring(0,t.indexOf("-")),this.elementPosition(t));let e=0;for(;e++<3;){if(!this.overflowAllSides(t))return null;t=this.nextPosition(t,Iv),this.elementPosition(t)}}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Mv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh]]}),t})(),jv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh,Pv,Mv]]}),t})(),Nv=(()=>{class t{constructor(){this.dateRegex=new RegExp("^(?:[0-9])\\d{1}(?:[0-9])\\d{1}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12]\\d|3[01])$"),this.isoRegex=new RegExp("^(?:[0-9])\\d{1}(?:[0-9])\\d{1}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12]\\d|3[01])T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:Z|-0[1-9]|-1\\d|-2[0-3]|-00:?(?:0[1-9]|[0-5]\\d)|\\+[01]\\d|\\+2[0-3])(?:|:?[0-5]\\d)$")}convertIsoToDate(t,e,n){if(t){const{year:r,month:s,day:i}=this.getDateFromIso(t);if(e){const t=new Date(r,s-1,i,0,0,0);return this.setYearFrom0To100(t,r),t}if(n){const t=new Date(r,s-1,i,23,59,59);return this.setYearFrom0To100(t,r),t}{const e=Date.parse(t),n=6e4*(new Date).getTimezoneOffset();return new Date(e+n)}}}convertDateToISO(t){if(t){const e=t.getFullYear(),n=t.getMonth()+1,r=t.getDate()<10?"0"+t.getDate():t.getDate(),s=n<10?"0"+n:n;return this.formatYear(e)+"-"+s+"-"+r}return null}formatYear(t){return t>999?t.toString():t>99&&t<1e3?`0${t}`:t>9&&t<100?`00${t}`:t>=0&&t<10?`000${t}`:void 0}getDateFromIso(t){const e=parseInt(t.substring(8,10),10),n=parseInt(t.substring(5,7),10);return{year:parseInt(t.substring(0,4),10),month:n,day:e}}getDateForDateRange(t,e){const n=e?[0,0,0]:[23,59,59];if(t instanceof Date){const{year:e,month:r,day:s}=this.splitDate(t),i=new Date(e,r,s,...n);return this.setYearFrom0To100(i,e),i}if(this.isValidIso(t))return this.convertIsoToDate(t,e,!e)}isDateRangeValid(t="",e=""){const n=t.split("-").map(t=>parseInt(t,10)),r=e.split("-").map(t=>parseInt(t,10));for(let s=0;s<=n.length;s++){if(n[s]>r[s])return!0;if(n[s]<r[s])return!1}return!0}isValidIso(t){return this.dateRegex.test(t)||this.isoRegex.test(t)}setYearFrom0To100(t,e){e>=0&&e<100&&t.setFullYear(e)}splitDate(t){return{year:t.getFullYear(),month:t.getMonth(),day:t.getDate()}}validateDateRange(t,e,n){return e&&n?t>=e&&t<=n:e&&!n?t>=e:!(!e&&n)||t<=n}validateDate(t){const e=t instanceof Date?this.convertDateToISO(t):t;return this.isValidIso(e)?e:void 0}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:function(){return new t},token:t,providedIn:"root"}),t})(),Vv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[Nv]}),t})(),Lv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh]]}),t})();Math,Math,Math.floor(25);var Bv=function(t){return t.Color01="color-01",t.Color02="color-02",t.Color03="color-03",t.Color04="color-04",t.Color05="color-05",t.Color06="color-06",t.Color07="color-07",t.Color08="color-08",t.Color09="color-09",t.Color10="color-10",t.Color11="color-11",t.Color12="color-12",t}({});Object.values(Bv),Math,Math.floor(25),Math,Math;let Uv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh,Mv]]}),t})(),Hv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh]]}),t})(),$v=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh]]}),t})(),zv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh,$v]]}),t})(),qv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh]]}),t})(),Wv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[rh,yv]]}),t})(),Gv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh,Wv]]}),t})(),Zv=(()=>{class t{constructor(){this.errorPattern=""}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=Ht({type:t,selectors:[["po-field-container-bottom"]],inputs:{errorPattern:["p-error-pattern","errorPattern"]},decls:2,vars:1,consts:[[1,"po-field-container-bottom"],["class","po-field-container-bottom-text-error",4,"ngIf"],[1,"po-field-container-bottom-text-error"],[1,"po-icon","po-icon-warning","po-field-container-icon-error"]],template:function(t,e){1&t&&(co(0,"div",0),oo(1,My,3,1,"span",1),ho()),2&t&&(Ns(1),lo("ngIf",e.errorPattern))},directives:[qc],encapsulation:2,changeDetection:0}),t})();const Kv={en:{optional:"(Optional)"},es:{optional:"(Opcional)"},pt:{optional:"(Opcional)"},ru:{optional:"(\u041f\u043e\u0436\u0435\u043b\u0430\u043d\u0438\u044e)"}};let Yv=(()=>{class t{constructor(t){this._optional=!1;const e=t.getShortLanguage();this.literals=Object.assign({},Kv[e])}set optional(t){this._optional=hv(t)}get optional(){return this._optional}}return t.\u0275fac=function(e){return new(e||t)(ao(fv))},t.\u0275cmp=Ht({type:t,selectors:[["po-field-container"]],inputs:{optional:["p-optional","optional"],label:["p-label","label"],help:["p-help","help"]},ngContentSelectors:Ey,decls:7,vars:3,consts:[[1,"po-field-container"],[1,"po-field-container-title"],[1,"po-field-title"],["class","po-field-optional",4,"ngIf"],["class","po-field-help",4,"ngIf"],[1,"po-field-optional"],[1,"po-field-help"]],template:function(t,e){1&t&&(Do(),co(0,"div",0),co(1,"div",1),co(2,"span",2),Ho(3),ho(),oo(4,jy,2,1,"span",3),ho(),oo(5,Ny,2,1,"div",4),Eo(6),ho()),2&t&&(Ns(3),$o(e.label),Ns(1),lo("ngIf",e.optional&&(e.label||e.help)),Ns(1),lo("ngIf",e.help))},directives:[qc],encapsulation:2,changeDetection:0}),t})(),Qv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh]]}),t})(),Xv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh,Xd,Qv]]}),t})(),Jv=(()=>{class t{constructor(){this.defaultValue="",this.changeEvent=new gl}clear(){this.setInputValue(this.defaultValue),this.changeEvent.emit(this.defaultValue)}showIcon(){return this.defaultValue!==this.getInputValue()}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Zt({type:t,inputs:{defaultValue:["p-default-value","defaultValue"],inputRef:["p-element-ref","inputRef"]},outputs:{changeEvent:"p-change-event"}}),t})(),tb=(()=>{class t extends Jv{setInputValue(t){this.inputRef&&this.inputRef.nativeElement&&(this.inputRef.nativeElement.value=t)}getInputValue(){if(this.inputRef&&this.inputRef.nativeElement)return this.inputRef.nativeElement.value}}return t.\u0275fac=function(){let e;return function(n){return(e||(e=Vn(t)))(n||t)}}(),t.\u0275cmp=Ht({type:t,selectors:[["po-clean"]],features:[Zi],decls:1,vars:1,consts:[["class","po-icon po-field-icon po-icon-close",3,"click",4,"ngIf"],[1,"po-icon","po-field-icon","po-icon-close",3,"click"]],template:function(t,e){1&t&&oo(0,Vy,1,0,"span",0),2&t&&lo("ngIf",e.showIcon())},directives:[qc],encapsulation:2}),t})(),eb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh]]}),t})();class nb{constructor(t,e){this.mask="",this.formatModel=!1,this.initialPosition=0,this.finalPosition=0,this.pattern="",this.mask=t,this.formatModel=e,this.pattern=this.getRegexFromMask(t)}get getPattern(){return this.pattern}get getValueToInput(){return this.valueToInput}set setValueToInput(t){this.valueToInput=t}get getValueToModel(){return this.valueToModel}set setValueToModel(t){this.valueToModel=t}keyup(t){if(this.mask){const e=t.target.value;switch(17!==t.keyCode&&91!==t.keyCode||(t.target.value=this.controlFormatting(e),this.resetPositions(t)),t.preventDefault(),t.keyCode){case 37:this.initialPosition>0&&this.initialPosition--,this.setPositionNotShiftKey(t),this.setSelectionRange(t);break;case 39:this.initialPosition<e.toString().length&&this.initialPosition++,this.setPositionNotShiftKey(t),this.setSelectionRange(t);break;case 35:this.finalPosition=e.toString().length,t.shiftKey||(this.initialPosition=this.finalPosition),this.setPositions(t);break;case 36:t.shiftKey?(this.finalPosition=this.initialPosition,this.initialPosition=0,this.setPositions(t)):(this.initialPosition=0,this.finalPosition=0,this.setPositions(t))}}}setPositionNotShiftKey(t){t.shiftKey||(this.finalPosition=this.initialPosition)}setSelectionRange(t){this.initialPosition>this.finalPosition?t.target.setSelectionRange(this.finalPosition,this.initialPosition):t.target.setSelectionRange(this.initialPosition,this.finalPosition)}keydown(t){if(this.mask){let e=t.target.value;if(9===t.keyCode)return;if(t.ctrlKey||t.metaKey||t.preventDefault(),t.ctrlKey||t.metaKey&&86!==t.keyCode||t.keyCode>=37&&t.keyCode<=40||16===t.keyCode||9===t.keyCode)return;if(this.isKeyValid(t.keyCode))switch(null===this.finalPosition&&(this.finalPosition=this.initialPosition),this.revertPositions(this.initialPosition,this.finalPosition),t.keyCode){case 8:this.getPosition(t),this.initialPosition<0&&(this.initialPosition=0,this.setPositions(t)),this.initialPosition===this.finalPosition?(this.checkMaskBefore(t,-1),0!==this.initialPosition&&(e=e.slice(0,this.initialPosition-1)+e.slice(this.finalPosition),e=this.controlFormatting(e),t.target.value=e,this.changePosition(t,-1),this.checkMaskBefore(t,-1),this.setPositions(t),this.resetPositions(t))):this.clearRangeSelection(e,t,!0),this.setPositions(t);break;case 46:this.getPosition(t),this.initialPosition===this.finalPosition?(this.checkMaskAfter(t,1),e=e.slice(0,this.initialPosition)+e.slice(this.finalPosition+1),e=this.controlFormatting(e),t.target.value=e,this.setPositions(t),this.resetPositions(t)):this.clearRangeSelection(e,t,!1),this.setPositions(t);break;default:this.getPosition(t),e=e.slice(0,this.initialPosition)+t.key+e.slice(this.finalPosition),e=this.controlFormatting(e),t.target.value=e,this.changePosition(t,1),this.checkMaskBefore(t,1),this.setPositions(t),this.resetPositions(t),this.setPositions(t)}}}clearRangeSelection(t,e,n){t=t.slice(0,this.initialPosition)+t.slice(this.finalPosition),t=this.controlFormatting(t),e.target.value=t,n&&this.checkMaskBefore(e,-1),this.setPositions(e),this.resetPositions(e)}click(t){this.initialPosition=t.target.selectionStart,this.finalPosition=t.target.selectionEnd}blur(t){if(this.mask){let e=t.target.value;e=this.controlFormatting(e),t.target.value=e}}revertPositions(t,e){if(t>e){const n=t;this.initialPosition=e,this.finalPosition=n}}resetPositions(t){this.initialPosition=t.target.selectionStart,this.finalPosition=this.initialPosition}setPositions(t){t.target.setSelectionRange(this.initialPosition,this.finalPosition)}changePosition(t,e){this.initialPosition=this.initialPosition+e,this.finalPosition=this.finalPosition+e,this.setPositions(t)}getPosition(t){this.initialPosition=t.target.selectionStart,this.finalPosition=t.target.selectionEnd,this.setPositions(t)}controlFormatting(t){if(!t)return this.valueToInput="",this.valueToModel="","";let e,n=this.mask;const r=[];let s=0;for(;this.hasOptionalNumber(n);)r.push(n),n=this.replaceOptionalNumber(n);for(r.push(n),r.reverse(),this.formattingEnds=!1;!this.formattingEnds&&(this.formattingEnds=!0,r[s]);)e=this.formatValue(t,r[s]),s++;return e}formatValue(t,e){const n=(e=e.replace(/\?/g,"")).replace(this.listValidKeys(),"_");let r=0,s="";t=this.removeFormattingValue(t);for(let i=0;i<t.length;i++){const o=t[i];if(!n[r]){this.formattingEnds=!1;break}for(;this.isFixedCharacterGuide(n[r])&&n[r];)s+=n[r],r++;if(!this.isKeyValidMask(o,e[r]))break;s+=o,r++}return this.formatModel?(this.valueToInput=s,this.valueToModel=s):(this.valueToInput=s,this.valueToModel=this.removeFormattingValue(s)),s}checkMaskBefore(t,e){this.isFixedCharacterGuide(t.target.value.toString().charAt(this.initialPosition-1))&&(this.changePosition(t,e),this.checkMaskBefore(t,e))}checkMaskAfter(t,e){this.isFixedCharacterGuide(t.target.value.toString().charAt(this.initialPosition))&&(this.changePosition(t,e),this.checkMaskAfter(t,e))}replaceOptionalNumber(t){let e=9;for(;e>=0;){if(t.indexOf(e+"?")>-1)return t.replace(e+"?","");e--}return t}isFixedCharacterGuide(t){return this.testRegex(t,this.getFixedCharacterGuide())}getFixedCharacterGuide(){return/[\\\/() +-.\:]/g}listValidKeys(){return/[a-zA-Z0-9]/g}isKeyValid(t){return this.isKeyCodeValid(t)}isKeyCodeValid(t){return t>=48&&t<=57||t>=65&&t<=90||t>=96&&t<=105||8===t||9===t||46===t}isKeyValidMask(t,e){return this.testRegex(t,this.replaceMask(e))}testRegex(t,e){return e.test(t)}removeFormattingValue(t){return t.replace(this.getFixedCharacterGuide(),"")}hasOptionalNumber(t){return t.match(/\d\?/g)}replaceMask(t){let e=/./;switch(t){case"0":e=/[0]/;break;case"1":e=/[0-1]/;break;case"2":e=/[0-2]/;break;case"3":e=/[0-3]/;break;case"4":e=/[0-4]/;break;case"5":e=/[0-5]/;break;case"6":e=/[0-6]/;break;case"7":e=/[0-7]/;break;case"8":e=/[0-8]/;break;case"9":e=/[0-9]/;break;case" ":e=/\s/;break;case"@":e=/[a-zA-Z]/;break;case"w":e=/[a-zA-Z0-9]/}return e}getRegexFromMask(t){if(t){let e;return this.formatModel?(e=t.replace(/\\/g,"\\\\"),e=e.replace(/\+/g,"\\+"),e=e.replace(/\./g,"\\."),e=e.replace(/-/g,"-"),e=e.replace(/\(/g,"\\("),e=e.replace(/\)/g,"\\)"),e=e.replace(/\//g,"\\/"),e=e.replace(/\s/g,"\\s"),e=e.replace(/:/g,"\\:"),e=e.replace(/\@(?!\s)/g,"\\w"),e=e.replace(/\d/g,"\\w")):(e=t.replace(/\\/g,""),e=e.replace(/\+/g,""),e=e.replace(/\./g,""),e=e.replace(/-/g,""),e=e.replace(/\(/g,""),e=e.replace(/\)/g,""),e=e.replace(/\//g,""),e=e.replace(/\s/g,""),e=e.replace(/:/g,""),e=e.replace(/\@/g,"\\w"),e=e.replace(/\d/g,"\\w")),e}return null}}let rb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh,Xd,Qv,eb,Lv]]}),t})();const sb={en:{close:"Close"},es:{close:"Cerrar"},pt:{close:"Fechar"},ru:{close:"\u0431\u043b\u0438\u0437\u043a\u043e"}};let ib=(()=>{class t{constructor(t){this.isHidden=!0,this.onXClosed=new gl,this._hideClose=!1,this._size="md",this.clickOut=!1,this.language=t.getShortLanguage(),this.literals=Object.assign({},sb[this.language])}set size(t){this._size=["sm","md","lg","xl","auto"].indexOf(t)>-1?t:"md"}get size(){return this._size}set setClickOut(t){this.clickOut=""!==t&&hv(t)}set hideClose(t){this._hideClose=hv(t)}get hideClose(){return this._hideClose}close(t=!1){this.isHidden=!0,t&&this.onXClosed.emit(t)}open(){this.validPrimaryAction(),this.isHidden=!1}validPrimaryAction(){this.primaryAction||(this.primaryAction={action:()=>this.close(),label:this.literals.close}),this.primaryAction.action||(this.primaryAction.action=()=>this.close()),this.primaryAction.label||(this.primaryAction.label=this.literals.close)}}return t.\u0275fac=function(e){return new(e||t)(ao(fv))},t.\u0275dir=Zt({type:t,inputs:{size:["p-size","size"],setClickOut:["p-click-out","setClickOut"],hideClose:["p-hide-close","hideClose"],primaryAction:["p-primary-action","primaryAction"],title:["p-title","title"],secondaryAction:["p-secondary-action","secondaryAction"]}}),t})(),ob=(()=>{class t{constructor(){this.activeOverlay=[]}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:function(){return new t},token:t,providedIn:"root"}),t})(),ab=(()=>{class t extends ib{constructor(t,e){super(e),this.poActiveOverlayService=t,this.focusableElements="input, select, textarea, button:not([disabled]), a",this.id=function(){function t(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return t()+t()+"-"+t()+"-"+t()+"-"+t()+"-"+t()+t()+t()}()}close(t=!1){this.poActiveOverlayService.activeOverlay.pop(),super.close(t),this.removeEventListeners(),this.sourceElement&&this.sourceElement.focus()}closeModalOnEscapeKey(t){this.hideClose||(t.preventDefault(),t.stopPropagation(),this.close())}getPrimaryActionButtonType(){return this.primaryAction.danger?"danger":"primary"}getSecondaryActionButtonType(){return this.secondaryAction&&this.secondaryAction.danger&&!this.primaryAction.danger?"danger":"default"}onClickOut(t){this.clickOut&&!this.modalContent.nativeElement.contains(t.target)&&this.close()}open(){this.sourceElement=document.activeElement,super.open(),this.handleFocus()}handleFocus(){this.poActiveOverlayService.activeOverlay.push(this.id),setTimeout(()=>{this.modalContent&&(this.initFocus(),document.addEventListener("focus",this.focusFunction,!0))})}initFocus(){this.focusFunction=t=>{this.modalContent.nativeElement.contains(t.target)||this.poActiveOverlayService.activeOverlay[this.poActiveOverlayService.activeOverlay.length-1]!==this.id||(t.stopPropagation(),this.firstElement.focus())},this.setFirstElement(),this.hideClose?this.firstElement.focus():(this.modalContent.nativeElement.querySelectorAll(this.focusableElements)[1]||this.modalContent.nativeElement).focus()}removeEventListeners(){document.removeEventListener("focus",this.focusFunction,!0)}setFirstElement(){this.firstElement=this.modalContent.nativeElement.querySelector(this.focusableElements)||this.modalContent.nativeElement}}return t.\u0275fac=function(e){return new(e||t)(ao(ob),ao(fv))},t.\u0275cmp=Ht({type:t,selectors:[["po-modal"]],viewQuery:function(t,e){if(1&t&&kl(By,5,ga),2&t){let t;xl(t=Tl())&&(e.modalContent=t.first)}},features:[Zi],ngContentSelectors:Ey,decls:1,vars:1,consts:[["class","po-modal","tabindex","0",3,"keydown.esc",4,"ngIf"],["tabindex","0",1,"po-modal",3,"keydown.esc"],[1,"po-modal-overlay"],[1,"po-modal-container","po-pb-2","po-pt-2",3,"mousedown"],[1,"po-modal-vertical-align"],["tabindex","-1"],["modalContent",""],[1,"po-modal-header"],[1,"po-modal-title","po-text-ellipsis"],["class","po-modal-header-close-button","tabindex","0",3,"click",4,"ngIf"],[1,"po-modal-body"],[1,"po-modal-footer"],[3,"p-disabled","p-label","p-loading","p-type","p-click",4,"ngIf"],[1,"po-button-modal-first-action",3,"p-disabled","p-label","p-loading","p-type","p-click"],["tabindex","0",1,"po-modal-header-close-button",3,"click"],[1,"po-icon","po-icon-close"],[3,"p-disabled","p-label","p-loading","p-type","p-click"]],template:function(t,e){1&t&&(Do(),oo(0,$y,15,10,"div",0)),2&t&&lo("ngIf",!e.isHidden)},directives:[qc,Ov],encapsulation:2}),t})(),lb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh,Pv]]}),t})(),ub=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh]]}),t})(),cb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[ob]}),t})(),hb=(()=>{class t{getColor(t){return Object.values(Bv).includes(t.color)?t.color:this.getColorFromType(t.type||t.color)}getColorFromType(t){switch(t){case"danger":return Bv.Color07;case"success":return Bv.Color11;case"warning":return Bv.Color08;default:return Bv.Color01}}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),db=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[hb]}),t})(),pb=(()=>{class t{constructor(t,e,n){this.componentResolver=t,this.applicationRef=e,this.injector=n}createComponentInApplication(t){const e=this.componentResolver.resolveComponentFactory(t).create(this.injector);return this.applicationRef.attachView(e.hostView),document.body.appendChild(e.hostView.rootNodes[0]),e}destroyComponentInApplication(t){this.applicationRef.detachView(t.hostView),t.destroy()}}return t.\u0275fac=function(e){return new(e||t)(or(ha),or(_u),or(Wi))},t.\u0275prov=ht({factory:function(){return new t(or(ha),or(_u),or(Oi))},token:t,providedIn:"root"}),t})(),fb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[pb],imports:[[]]}),t})(),gb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[Rv]}),t})();var mb=function(t){return t[t.Alert=0]="Alert",t[t.Confirm=1]="Confirm",t}({});const yb={en:{ok:"Ok"},es:{ok:"Ok"},pt:{ok:"Ok"},ru:{ok:"\u041e\u043a"}},vb={en:{cancel:"Cancel",confirm:"Confirm"},es:{cancel:"Cancelar",confirm:"Confirmar"},pt:{cancel:"Cancelar",confirm:"Confirmar"},ru:{cancel:"\u043e\u0442\u043c\u0435\u043d\u0438\u0442\u044c",confirm:"\u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c"}};let bb=(()=>{class t{constructor(t){this.primaryAction={label:"ok",action:()=>{}},this.language=t.getShortLanguage()}ngOnDestroy(){this.closeSubscription.unsubscribe()}ngOnInit(){this.closeSubscription=this.poModal.onXClosed.subscribe(t=>this.close(!0))}close(t=!1){t&&this.closeAction&&this.closeAction(),this.poModal.close(),this.destroy()}destroy(){this.componentRef&&this.componentRef.destroy()}configDialog(t,e,n,r,s){this.primaryAction={label:t,action:()=>{e&&e(),this.close()}},n&&(this.secondaryAction={label:n,action:()=>{r&&r(),this.close()}}),this.closeAction=s}open(t,e,n){switch(this.title=t.title,this.message=t.message,this.componentRef=n,this.setDialogLiterals(t,e),e){case mb.Confirm:this.configDialog(this.literalsConfirm.confirm,t.confirm,this.literalsConfirm.cancel,t.cancel,t.close);break;case mb.Alert:this.configDialog(this.literalsAlert.ok,t.ok)}this.poModal.open()}setDialogLiterals(t,e){const n=yb,r=vb,s=t.literals;e===mb.Alert?this.literalsAlert=Object.assign(Object.assign(Object.assign({},n.pt),n[this.language]),s):this.literalsConfirm=Object.assign(Object.assign(Object.assign({},r.pt),r[this.language]),s)}}return t.\u0275fac=function(e){return new(e||t)(ao(fv))},t.\u0275cmp=Ht({type:t,selectors:[["ng-component"]],viewQuery:function(t,e){if(1&t&&kl(ab,7),2&t){let t;xl(t=Tl())&&(e.poModal=t.first)}},decls:2,vars:4,consts:[[3,"p-title","p-primary-action","p-secondary-action"],[3,"innerHtml"]],template:function(t,e){1&t&&(co(0,"po-modal",0),po(1,"div",1),ho()),2&t&&(lo("p-title",e.title)("p-primary-action",e.primaryAction)("p-secondary-action",e.secondaryAction),Ns(1),lo("innerHtml",e.message,Ur))},directives:[ab],encapsulation:2}),t})(),wb=(()=>{class t extends class{confirm(t){this.openDialog(mb.Confirm,t)}alert(t){this.openDialog(mb.Alert,t)}}{constructor(t){super(),this.poComponentInjector=t}openDialog(t,e){const n=this.poComponentInjector.createComponentInApplication(bb);n.changeDetectorRef.detectChanges(),n.instance.open(e,t,n)}}return t.\u0275fac=function(e){return new(e||t)(or(pb))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),_b=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[wb],imports:[[lb]]}),t})();var Cb=function(t){return t[t.Bottom=0]="Bottom",t[t.Top=1]="Top",t}({}),Db=function(t){return t[t.Error=0]="Error",t[t.Information=1]="Information",t[t.Success=2]="Success",t[t.Warning=3]="Warning",t}({});let Eb=(()=>{class t extends class{constructor(){this.orientation=Cb.Bottom}}{constructor(t,e,n,r){super(),this.changeDetector=e,this.elementeRef=n,this.renderer=r,this.alive=!0,this.margin=20,this.observableOnClose=new D,this.toasterPosition="po-toaster-bottom"}ngOnDestroy(){this.alive=!1}ngAfterViewInit(){setTimeout(()=>this.renderer.addClass(this.toaster.nativeElement,"po-toaster-visible"))}changePosition(t){this.elementeRef.nativeElement.style.display="table",this.margin=6+44*t+6*t,this.orientation===Cb.Top?this.toaster.nativeElement.style.top=this.margin+"px":this.toaster.nativeElement.style.bottom=this.margin+"px"}close(){this.observableOnClose.next(!0)}setFadeOut(){this.renderer.removeClass(this.toaster.nativeElement,"po-toaster-visible"),this.renderer.addClass(this.toaster.nativeElement,"po-toaster-invisible")}configToaster(t){switch(this.type=t.type,this.message=t.message,this.orientation=t.orientation,this.position=t.position,this.action=t.action,this.actionLabel=t.actionLabel,this.componentRef=t.componentRef,this.orientation===Cb.Top&&(this.toasterPosition="po-toaster-top"),this.changePosition(this.position),this.type){case Db.Error:this.toasterType="po-toaster-error",this.icon="po-icon-warning";break;case Db.Information:this.toasterType="po-toaster-info",this.icon="po-icon-info";break;case Db.Success:this.toasterType="po-toaster-success",this.icon="po-icon-ok";break;case Db.Warning:this.toasterType="po-toaster-warning",this.icon="po-icon-warning"}this.changeDetector.detectChanges()}getIcon(){return this.icon}getToasterPosition(){return this.toasterPosition}getToasterType(){return this.toasterType}onButtonClose(t){t.preventDefault(),t.stopPropagation(),this.action&&!this.actionLabel?this.poToasterAction(t):this.close()}poToasterAction(t){t.preventDefault(),t.stopPropagation(),this.action(this)}}return t.\u0275fac=function(e){return new(e||t)(ao(fv),ao(Ua),ao(ga),ao(va))},t.\u0275cmp=Ht({type:t,selectors:[["po-toaster"]],viewQuery:function(t,e){if(1&t&&kl(zy,5),2&t){let t;xl(t=Tl())&&(e.toaster=t.first)}},features:[Zi],decls:9,vars:9,consts:[[3,"click"],["toaster",""],[1,"po-toaster-icon"],[1,"po-toaster-message"],["class","po-toaster-action",3,"click",4,"ngIf"],[1,"po-toaster-close",3,"click"],[1,"po-icon","po-icon-close"],[1,"po-toaster-action",3,"click"]],template:function(t,e){var n,r;1&t&&(co(0,"div",0,1),vo("click",function(){return e.close()}),co(2,"div",2),po(3,"span"),ho(),co(4,"div",3),Ho(5),ho(),oo(6,qy,2,1,"div",4),co(7,"button",5),vo("click",function(t){return e.onButtonClose(t)}),po(8,"span",6),ho(),ho()),2&t&&("po-toaster ",n=e.getToasterType()," ",r=e.getToasterPosition()," po-clickable",Io(Yn,Po,function(t,e,n,r,s,i){const o=function(t,e,n,r){const s=ro(t,e,n);return ro(t,e+1,r)||s}(t,xe.lFrame.bindingIndex,n,s);return Be(2),o?e+lt(n)+r+lt(s)+i:js}(Te(),"po-toaster ",n," ",r," po-clickable"),!0),Ns(3),qo("po-icon ",e.getIcon(),""),Ns(2),$o(e.message),Ns(1),lo("ngIf",e.action&&e.actionLabel))},directives:[qc],encapsulation:2}),t})(),Ab=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[rh]]}),t})(),Sb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[cb,db,fb,gb,Vv,_b,Ev,Ab],cb,db,fb,gb,Vv,_b,Ab]}),t})(),xb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh]]}),t})(),kb=(()=>{class t{transform(t,e){if("string"==typeof t&&/^(([0-1][0-9])|(2[0-3])):[0-5][0-9]:[0-5][0-9][\.]?([0-9]{1,6})?$/g.test(t)){const n=e?e.lastIndexOf("f")-e.indexOf("f")+1:0,r=this.addDotMiliseconds(t.substring(9,9+n),n),s=this.getFormatMiliseconds(n);return this.formatValue(t,e,s,r)}return null}addDotMiliseconds(t,e){return t&&e&&(t="."+t),t}formatValue(t,e,n,r){if(t&&e){const s=t.substring(0,2),i=t.substring(3,5),o=t.substring(6,8);return(e=(e=(e=e.replace("HH",s)).replace("mm",i)).replace("ss",o)).replace(`.${n}`,r)}return t}getFormatMiliseconds(t){let e="";for(let n=0;n<t;n++)e+="f";return e}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275pipe=Kt({name:"po_time",type:t,pure:!0}),t})(),Tb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[]]}),t})(),Fb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[Jc],imports:[[rh,Xd,Im,Pv,Xv,Hv,Av,lb,xb,Wv,Tb,Mv,yv]]}),t})(),Ob=(()=>{class t{constructor(){this.autoFocus=!1,this.errorPattern="",this.blur=new gl,this.enter=new gl,this.change=new gl,this.changeModel=new gl,this.onChangePropagate=null,this.onTouched=null,this.passedWriteValue=!1,this._noAutocomplete=!1,this._placeholder="",this.disabled=!1,this.readonly=!1,this.required=!1,this.clean=!1,this.mask="",this.maskFormatModel=!1}set noAutocomplete(t){this._noAutocomplete=hv(t)}get noAutocomplete(){return this._noAutocomplete}set placeholder(t){this._placeholder=t||""}get placeholder(){return this._placeholder}set setDisabled(t){this.disabled=""===t||hv(t),this.validateModel()}set setReadonly(t){this.readonly=""===t||hv(t)}set setRequired(t){this.required=""===t||hv(t),this.validateModel()}set setClean(t){this.clean=""===t||hv(t)}set setPattern(t){this.pattern=t,this.validateModel()}set maxlength(t){isNaN(parseInt(t,10))?t||(this._maxlength=void 0,this.validateModel()):(this._maxlength=parseInt(t,10),this.validateModel())}get maxlength(){return this._maxlength}set minlength(t){isNaN(parseInt(t,10))?t||(this._minlength=void 0,this.validateModel()):(this._minlength=parseInt(t,10),this.validateModel())}get minlength(){return this._minlength}set setMask(t){this.mask=t,this.objMask=new nb(this.mask,this.maskFormatModel)}set setMaskFormatModel(t){this.maskFormatModel=""===t||hv(t),this.objMask instanceof nb&&(this.objMask.formatModel=this.maskFormatModel,this.validateModel())}callOnChange(t){this.updateModel(t),this.controlChangeModelEmitter(t)}callUpdateModelWithTimeout(t){setTimeout(()=>this.updateModel(t))}controlChangeModelEmitter(t){this.modelLastUpdate!==t&&(this.changeModel.emit(t),this.modelLastUpdate=t)}setDisabledState(t){this.disabled=t}registerOnChange(t){this.onChangePropagate=t}registerOnTouched(t){this.onTouched=t}registerOnValidatorChange(t){this.validatorChange=t}updateModel(t){this.onChangePropagate&&this.onChangePropagate(t)}validate(t){return e=this.required,n=this.disabled,r=this.getScreenValue(),!e||n||"string"==typeof r&&r||"object"==typeof r&&r&&r.length||"number"==typeof r&&(r||0===r)||"boolean"==typeof r&&r?function(t,e){const n=t||0===t,r=(e||0===e)&&e.toString();return n&&r&&r.length>Number(t)}(this.maxlength,this.getScreenValue())?{maxlength:{valid:!1}}:function(t,e){const n=t||0===t,r=(e||0===e)&&e.toString();return n&&r&&r.length<Number(t)}(this.minlength,this.getScreenValue())?{minlength:{valid:!1}}:function(t,e){let n;try{n=new RegExp(t)}catch(r){return!0}return t&&e&&!n.test(e)}(this.pattern,t.value)?(this.validatePatternOnWriteValue(t.value),{pattern:{valid:!1}}):this.extraValidation(t):{required:{valid:!1}};var e,n,r}writeValue(t){this.writeValueModel(t)}validateModel(){this.validatorChange&&this.validatorChange()}validatePatternOnWriteValue(t){t&&this.passedWriteValue&&(setTimeout(()=>{this.updateModel(t)}),this.passedWriteValue=!1)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Zt({type:t,inputs:{autoFocus:["p-auto-focus","autoFocus"],errorPattern:["p-error-pattern","errorPattern"],noAutocomplete:["p-no-autocomplete","noAutocomplete"],placeholder:["p-placeholder","placeholder"],setDisabled:["p-disabled","setDisabled"],setReadonly:["p-readonly","setReadonly"],setRequired:["p-required","setRequired"],setClean:["p-clean","setClean"],setPattern:["p-pattern","setPattern"],maxlength:["p-maxlength","maxlength"],minlength:["p-minlength","minlength"],setMask:["p-mask","setMask"],setMaskFormatModel:["p-mask-format-model","setMaskFormatModel"],icon:["p-icon","icon"],label:["p-label","label"],help:["p-help","help"],name:"name",optional:["p-optional","optional"]},outputs:{blur:"p-blur",enter:"p-enter",change:"p-change",changeModel:"p-change-model"}}),wy([kv()],t.prototype,"autoFocus",void 0),t})(),Pb=(()=>{class t extends Ob{constructor(t){super(),this.type="text",this.el=t}get autocomplete(){return this.noAutocomplete?"off":"on"}onKeydown(t){this.mask&&!this.readonly&&229!==t.target.keyCode&&(this.eventOnBlur(t),this.objMask.keydown(t))}onKeyup(t){this.mask&&!this.readonly&&(229!==t.target.keyCode&&(this.eventOnBlur(t),this.objMask.keyup(t)),this.callOnChange(this.objMask.valueToModel))}ngAfterViewInit(){this.afterViewInit()}afterViewInit(){this.verifyAutoFocus(),"password"!==this.type&&this.setPaddingInput()}focus(){this.disabled||this.inputEl.nativeElement.focus()}setPaddingInput(){setTimeout(()=>{let t=this.el.nativeElement.querySelectorAll(".po-field-icon-container:not(.po-field-icon-container-left) > .po-icon").length;this.clean&&t++,t&&(this.inputEl.nativeElement.style.paddingRight=36*t+"px")})}verifyAutoFocus(){this.autoFocus&&this.focus()}eventOnInput(t){let e="";this.mask?(this.objMask.blur(t),this.inputEl.nativeElement.value=this.objMask.valueToInput,e=this.objMask.valueToModel):(e=this.validMaxLength(this.maxlength,t.target.value),this.inputEl.nativeElement.value=e),this.callOnChange(e)}validMaxLength(t,e){return(t||0===t)&&e.length>t?e.toString().substring(0,t):e}eventOnFocus(t){this.valueBeforeChange=this.inputEl.nativeElement.value,this.enter.emit()}eventOnBlur(t){var e;null===(e=this.onTouched)||void 0===e||e.call(this),this.mask&&this.objMask.blur(t),"blur"===t.type&&(this.blur.emit(),this.controlChangeEmitter())}controlChangeEmitter(){const t=this.inputEl.nativeElement.value;t!==this.valueBeforeChange&&(clearTimeout(this.timeoutChange),this.timeoutChange=setTimeout(()=>{this.change.emit(t)},200))}eventOnClick(t){this.mask&&this.objMask.click(t)}hasInvalidClass(){return this.el.nativeElement.classList.contains("ng-invalid")&&this.el.nativeElement.classList.contains("ng-dirty")&&""!==this.inputEl.nativeElement.value}getErrorPattern(){return""!==this.errorPattern&&this.hasInvalidClass()?this.errorPattern:""}validateClassesForPattern(){const t=this.getScreenValue(),e=this.el.nativeElement;t&&!this.verifyPattern(this.pattern,t)?(e.classList.add("ng-invalid"),e.classList.add("ng-dirty")):e.classList.remove("ng-invalid")}verifyPattern(t,e){return new RegExp(t).test(e)}clear(t){this.callOnChange(t),this.controlChangeEmitter()}writeValueModel(t){this.passedWriteValue=!0,this.inputEl&&(t?this.mask?(this.inputEl.nativeElement.value=this.objMask.controlFormatting(String(t)),this.objMask.formatModel&&this.callUpdateModelWithTimeout(this.objMask.valueToModel)):this.inputEl.nativeElement.value=t:this.inputEl.nativeElement.value=""),t&&this.changeModel.emit(t)}getScreenValue(){const t=this.inputEl&&this.inputEl.nativeElement.value||void 0;if("number"===this.type){const e=parseFloat(t);return e||0===e?e:null}return t}}return t.\u0275fac=function(e){return new(e||t)(ao(ga))},t.\u0275dir=Zt({type:t,viewQuery:function(t,e){if(1&t&&kl(Ly,7,ga),2&t){let t;xl(t=Tl())&&(e.inputEl=t.first)}},hostBindings:function(t,e){1&t&&vo("keydown",function(t){return e.onKeydown(t)})("keyup",function(t){return e.onKeyup(t)})},features:[Zi]}),t})();class Ib{constructor(t){this.http=t}execute(t,e){return"string"==typeof t?this.post(t,e):Gh(t(e))}post(t,e){return this.http.post(t,e)}setFormDefaultIfEmpty(t){return t||{value:{},fields:[],focus:void 0}}}let Rb=(()=>{class t extends Ib{constructor(t){super(t)}createAndUpdateFieldsForm(t=[],e=[]){return[...t].reduce((t,n)=>{const r=t.findIndex(t=>t.property===n.property);return r>=0?t[r]=Object.assign(Object.assign({},e[r]),n):t.push(n),t},[...e])}executeLoad(t,e){return this.execute(t,e).pipe(S(t=>this.setFormDefaultIfEmpty(t)))}}return t.\u0275fac=function(e){return new(e||t)(or(oy))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Mb=(()=>{class t extends Ib{constructor(t){super(t)}sendFieldChange(t,e){return this.execute(t.validate,{property:t.property,value:e}).pipe(S(t=>this.setFieldDefaultIfEmpty(t)))}sendFormChange(t,e,n){return this.execute(t,{property:e.property,value:n}).pipe(S(t=>this.setFormDefaultIfEmpty(t)))}updateFieldsForm(t=[],e=[]){return[...t].reduce((t,n)=>{const r=t.findIndex(t=>t.property===n.property);return r>=0&&(t[r]=Object.assign(Object.assign({},e[r]),n)),t},[...e])}setFieldDefaultIfEmpty(t){return t||{field:{}}}}return t.\u0275fac=function(e){return new(e||t)(or(oy))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),jb=(()=>{class t extends Pb{constructor(t){super(t),this.type="number",this.invalidInputValueOnBlur=!1}eventOnInput(t){if(!this.mask){let e=t.target.value;const n=this.validMaxLength(this.maxlength,e);this.invalidInputValueOnBlur=!1,e!==n&&(e=n,this.inputEl.nativeElement.value=e),this.callOnChange(this.formatNumber(e))}}onBlur(t){const e=t.target;this.invalidInputValueOnBlur=""===e.value&&!e.validity.valid,this.invalidInputValueOnBlur&&this.callOnChange("Valor Inv\xe1lido"),this.eventOnBlur(t)}onKeyDown(t){this.isKeyAllowed(t)||(t.stopPropagation(),t.preventDefault())}validMaxLength(t,e){if(t&&e.length>t){const n=e.toString().substring(0,t);return n&&this.isEndWithDot(n)?n.toString().substring(0,t-1):n}return e}writeValueModel(t){this.inputEl&&(t||0===t?this.mask?(this.inputEl.nativeElement.value=this.objMask.controlFormatting(String(t)),this.objMask.formatModel&&this.onChangePropagate(this.objMask.valueToModel)):this.inputEl.nativeElement.value=t:this.inputEl.nativeElement.value=""),this.changeModel.emit(t)}isEndWithDot(t){return t&&t.lastIndexOf(".")===t.length-1}formatNumber(t){return t?Number(t):null}isKeyAllowed(t){return this.isShortcut(t)||this.isControlKeys(t)||!this.isInvalidKey(t.key)}isInvalidKey(t){return new RegExp(/[a-zA-Z:;=_\xb4`^~"'?!@#$%\xa8&*()><{}\xe7\xc7\[\]/\\|]+/).test(t)}isShortcut(t){const e=t.keyCode,n=t.ctrlKey||t.metaKey;return n&&67===e||n&&86===e||n&&65===e||n&&88===e}isControlKeys(t){return-1!==["Backspace","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","Left","Right","Up","Down","Tab","Delete"].indexOf(t.key)}}return t.\u0275fac=function(e){return new(e||t)(ao(ga))},t.\u0275dir=Zt({type:t,features:[Zi]}),t})(),Nb=(()=>{class t extends jb{constructor(t){super(t),this.step="1"}set setMin(t){this.min=isNaN(t)?void 0:t,this.validateModel()}set setMax(t){this.max=isNaN(t)?void 0:t,this.validateModel()}extraValidation(t){return this.errorPattern="Valor Inv\xe1lido"!==this.errorPattern?this.errorPattern:"",e=this.min,((n=t.value)||0===n)&&(e||0===e)&&n<e?{min:{valid:!1}}:function(t,e){return(e||0===e)&&(t||0===t)&&e>t}(this.max,t.value)?{max:{valid:!1}}:this.invalidInputValueOnBlur?(this.errorPattern=this.errorPattern||"Valor Inv\xe1lido",{number:{valid:!1}}):null;var e,n}getErrorPatternMessage(){return""!==this.errorPattern&&this.containsInvalidClass()?this.errorPattern:""}containsInvalidClass(){return this.el.nativeElement.classList.contains("ng-invalid")&&this.el.nativeElement.classList.contains("ng-dirty")&&""!==this.inputEl.nativeElement.value||this.invalidInputValueOnBlur}}return t.\u0275fac=function(e){return new(e||t)(ao(ga))},t.\u0275cmp=Ht({type:t,selectors:[["po-number"]],inputs:{step:["p-step","step"],setMin:["p-min","setMin"],setMax:["p-max","setMax"]},features:[la([{provide:pd,useExisting:st(()=>t),multi:!0},{provide:yd,useExisting:st(()=>t),multi:!0}]),Zi],decls:8,vars:20,consts:[[3,"p-help","p-label","p-optional"],[1,"po-field-container-content"],["class","po-field-icon-container-left",4,"ngIf"],["type","number",1,"po-input",3,"autocomplete","disabled","placeholder","readonly","required","tabindex","blur","focus","input","keydown"],["inp",""],[1,"po-field-icon-container-right"],[3,"p-default-value","p-element-ref","p-change-event",4,"ngIf"],[3,"p-error-pattern"],[1,"po-field-icon-container-left"],[1,"po-field-icon",3,"p-icon"],[3,"p-default-value","p-element-ref","p-change-event"]],template:function(t,e){1&t&&(co(0,"po-field-container",0),co(1,"div",1),oo(2,Wy,2,3,"div",2),co(3,"input",3,4),vo("blur",function(t){return e.onBlur(t)})("focus",function(t){return e.eventOnFocus(t)})("input",function(t){return e.eventOnInput(t)})("keydown",function(t){return e.onKeyDown(t)}),ho(),co(5,"div",5),oo(6,Gy,1,2,"po-clean",6),ho(),ho(),po(7,"po-field-container-bottom",7),ho()),2&t&&(lo("p-help",e.help)("p-label",e.label)("p-optional",!e.required&&e.optional),Ns(2),lo("ngIf",e.icon),Ns(1),Oo("po-input-icon-left",e.icon)("po-input-icon-right",e.clean),lo("autocomplete",e.autocomplete)("disabled",e.disabled)("placeholder",e.placeholder)("readonly",e.readonly)("required",e.required)("tabindex",e.disabled?-1:0),so("max",e.max)("min",e.min)("name",e.name)("step",e.step),Ns(3),lo("ngIf",e.clean&&!e.disabled&&!e.readonly),Ns(1),lo("p-error-pattern",e.getErrorPatternMessage()))},directives:[Yv,qc,Zv,mv,tb],encapsulation:2}),t})(),Vb=(()=>{class t extends class{constructor(){this.stackTop=[],this.stackBottom=[],this.defaultDuration=1e4}success(t){this.createToaster(this.buildToaster(t,Db.Success))}warning(t){this.createToaster(this.buildToaster(t,Db.Warning))}error(t){this.createToaster(this.buildToaster(t,Db.Error))}information(t){this.createToaster(this.buildToaster(t,Db.Information))}setDefaultDuration(t){this.defaultDuration=t}buildToaster(t,e){let n,r=0;void 0===t.orientation||t.orientation===Cb.Bottom?(r=this.stackBottom.length,n=Cb.Bottom):(r=this.stackTop.length,n=Cb.Top);const s={componentRef:void 0,message:t.message||t,type:e,orientation:n,action:t.action,actionLabel:t.actionLabel,position:r,duration:t.duration||this.defaultDuration};return t.action&&(s.action=e=>{t.action(),this.destroyToaster(e.componentRef)}),s}}{constructor(t){super(),this.poComponentInjector=t}createToaster(t){const e=this.poComponentInjector.createComponentInApplication(Eb);t.componentRef=e,e.changeDetectorRef.detectChanges(),e.instance.configToaster(t);const n=t.orientation===Cb.Top?this.stackTop:this.stackBottom;n.push(e),this.verifyLimitToaster(n),this.observableOnClose(e),t.action&&t.actionLabel||function(t=0,e,n){let r=-1;return tp(e)?r=Number(e)<1?1:Number(e):A(e)&&(n=e),A(n)||(n=Jd),new v(e=>{const s=tp(t)?t:+t-n.now();return n.schedule(ep,s,{index:0,period:r,subscriber:e})})}(t.duration).pipe(function(t,e=!1){return n=>n.lift(new _y(t,e))}(()=>e.instance.alive)).subscribe(()=>{this.destroyToaster(e)})}destroyToaster(t){let e;e=t.instance.orientation===Cb.Top?this.stackTop:this.stackBottom,t.instance.setFadeOut();const n=e.indexOf(t);e.splice(n,1),setTimeout(()=>{this.poComponentInjector.destroyComponentInApplication(t);for(let t=0;t<e.length;t++)e[t].instance.changePosition(t)},200)}observableOnClose(t){t.instance.observableOnClose.subscribe(()=>{this.destroyToaster(t)})}verifyLimitToaster(t){t.length>5&&this.destroyToaster(t[0])}}return t.\u0275fac=function(e){return new(e||t)(or(pb))},t.\u0275prov=ht({factory:function(){return new t(or(pb))},token:t,providedIn:"root"}),t})(),Lb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[rh,Xd,by,jv,Pv,eb,Lv,Xv,Hv,rb,zv,$v,Qv,Av,lb,ub,Sb,Fb,Mv,yv],Xv,eb,rb,Qv]}),t})(),Bb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[rh,Im]]}),t})();var Ub=function(t){return t.Horizontal="horizontal",t.Vertical="vertical",t}({}),Hb=function(t){return t.Danger="danger",t.Info="info",t.Success="success",t.Warning="warning",t}({});const $b=Object.values(Bv),zb=Ub.Vertical;let qb=(()=>{class t{constructor(){this.click=new gl,this.poTagOrientation=Ub,this._orientation=zb}set color(t){this._color=$b.includes(t)?t:void 0}get color(){return this._color}set icon(t){this._icon=this.type?hv(t):t}get icon(){return this._icon}set inverse(t){this._inverse=hv(t)}get inverse(){return this._inverse}set orientation(t){this._orientation=Object.values(Ub).includes(t)?t:zb}get orientation(){return this._orientation}set type(t){this._type=Object.values(Hb).includes(t)?t:void 0}get type(){return this._type}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Zt({type:t,inputs:{color:["p-color","color"],icon:["p-icon","icon"],inverse:["p-inverse","inverse"],orientation:["p-orientation","orientation"],type:["p-type","type"],label:["p-label","label"],value:["p-value","value"]},outputs:{click:"p-click"}}),t})();var Wb=function(t){return t.Danger="po-icon-close",t.Info="po-icon-info",t.Success="po-icon-ok",t.Warning="po-icon-warning",t}({});const Gb="po-tag-"+Hb.Info;let Zb=(()=>{class t extends qb{ngOnInit(){this.isClickable=this.click.observers.length>0}get iconFromType(){switch(this.type){case Hb.Danger:return Wb.Danger;case Hb.Info:return Wb.Info;case Hb.Success:return Wb.Success;case Hb.Warning:return Wb.Warning}}get tagColor(){return this.type?this.inverse?`po-tag-${this.type}-inverse`:`po-tag-${this.type}`:this.color?this.inverse?`po-text-${this.color}`:`po-${this.color}`:this.inverse?`${Gb}-inverse`:Gb}get tagOrientation(){return this.orientation===this.poTagOrientation.Horizontal}onClick(){this.click.emit({value:this.value,type:this.type})}onKeyPressed(t){t.preventDefault(),t.stopPropagation(),this.onClick()}}return t.\u0275fac=function(){let e;return function(n){return(e||(e=Vn(t)))(n||t)}}(),t.\u0275cmp=Ht({type:t,selectors:[["po-tag"]],features:[Zi],decls:7,vars:10,consts:[[1,"po-tag-container"],["class","po-tag-title po-text-nowrap",4,"ngIf"],[1,"po-tag-sub-container"],["tabindex","0",1,"po-tag",3,"ngClass","click","keydown.enter","keydown.space","keyup.space"],["class","po-tag-icon",3,"p-icon",4,"ngIf"],[1,"po-tag-value"],[1,"po-tag-title","po-text-nowrap"],[1,"po-tag-label"],[1,"po-tag-icon",3,"p-icon"]],template:function(t,e){1&t&&(co(0,"div",0),oo(1,Zy,3,1,"div",1),co(2,"div",2),co(3,"div",3),vo("click",function(){return e.onClick()})("keydown.enter",function(t){return e.onKeyPressed(t)})("keydown.space",function(t){return t.preventDefault()})("keyup.space",function(t){return e.onKeyPressed(t)}),oo(4,Ky,1,1,"po-icon",4),co(5,"span",5),Ho(6),ho(),ho(),ho(),ho()),2&t&&(Oo("po-tag-container-horizontal",e.tagOrientation),Ns(1),lo("ngIf",e.label),Ns(2),Oo("po-clickable",e.isClickable)("po-tag-inverse",e.inverse),lo("ngClass",e.tagColor),Ns(1),lo("ngIf",e.icon),Ns(2),$o(e.value))},directives:[qc,Uc,mv],encapsulation:2,changeDetection:0}),t})(),Kb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[rh,yv]]}),t})(),Yb=(()=>{class t{constructor(t){this.http=t}onLoad(t,e){return this.http.post(t,e).toPromise()}}return t.\u0275fac=function(e){return new(e||t)(or(oy))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Qb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[th,Xc,Jc,kb,Qc,Rb,Mb,Yb],imports:[[rh,Xd,qv,Bb,Lb,Kb,Tb]]}),t})();Math;let Xb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh,Mv]]}),t})(),Jb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh,Xd,Lb]]}),t})(),tw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[rh,Im,Pv,Wv]]}),t})(),ew=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh]]}),t})(),nw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh,Im,ew,Lb,Av,yv]]}),t})(),rw=(()=>{class t{constructor(){this.subjectChild=new D,this.subjectParent=new D}receiveFromChildMenuClicked(){return this.subjectChild.asObservable()}receiveFromParentMenuClicked(){return this.subjectParent.asObservable()}sendToParentMenuClicked(t){this.subjectChild.next(t)}sendToChildMenuClicked(t){this.subjectParent.next(t)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),sw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[rw],imports:[[rh,Im,Lb,Mv]]}),t})(),iw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh,Wv,Mv,yv]]}),t})(),ow=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh,Im]]}),t})(),aw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh,Im]]}),t})(),lw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh,iw,ow,aw,nw,yv]]}),t})(),uw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh,Xd,Im,gv,Pv,zv,Gv,Lb,Ev,lb]]}),t})(),cw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[rh,Im,Hv]]}),t})(),hw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh]]}),t})(),dw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh,xb]]}),t})(),pw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[rh,sv,Wv,yv]]}),t})(),fw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh,Xd,Hv,Lb]]}),t})(),gw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[rh,Hv]]}),t})(),mw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[rv,sv,gv,Pv,jv,Lv,Uv,Hv,zv,$v,qv,Gv,Qb,Lb,Xb,Jb,yv,Bb,tw,Av,nw,sw,lb,lw,uw,xb,Wv,ub,cw,hw,Fb,dw,Kb,pw,fw,gw],rv,sv,gv,Pv,jv,Lv,Uv,Hv,zv,$v,qv,Gv,Qb,Lb,Xb,Jb,yv,Bb,tw,Av,nw,sw,lb,lw,uw,xb,Wv,ub,cw,hw,Fb,dw,Kb,pw,fw,gw]}),t})(),yw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[Mv],Mv]}),t})(),vw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[]]}),t})();const bw={en:{closeButton:"Close",details:"Details",detail:"Detail",error:"Error",warning:"Warning",information:"Information",success:"Success"},es:{closeButton:"Cerrar",details:"Detalles",detail:"Detalle",error:"Error",warning:"Advertencia",information:"Informacion",success:"\xc9xito"},pt:{closeButton:"Fechar",details:"Detalhes",detail:"Detalhe",error:"Erro",warning:"Aviso",information:"Informa\xe7\xe3o",success:"Sucesso"},ru:{closeButton:"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0442\u044c",details:"\u0414\u0435\u0442\u0430\u043b\u0438",detail:"\u0414\u0435\u0442\u0430\u043b\u044c",error:"\u041e\u0448\u0438\u0431\u043a\u0430",warning:"\u041f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435",information:"\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f",success:"Y\u0441\u043f\u0435\u0445"}},ww={success:"color-11",error:"color-07",warning:"color-08",info:""};let _w=(()=>{class t{constructor(t){this.languageService=t,this.closed=new gl,this.details=[],this.language=this.languageService.getShortLanguage(),this.literals=bw[this.language],this.primaryAction={action:()=>this.close(),label:this.literals.closeButton}}set detail(t){t&&t.length&&(this.details=this.filterByValidDetails(t)),this.title=this.formatTitle(this.details)}close(){this.modal.close(),this.closed.emit()}formatDetailItemTitle(t){return t.code?`${t.code} - ${t.message}`:t.message}open(){this.modal.open()}typeColor(t){return ww[t]}typeValue(t){return bw[this.language][t]||t}addValidDetail(t,e){return e.message?t.concat(this.getValidDetailProperties(e)):t}getValidDetailProperties({code:t,message:e,detailedMessage:n,type:r}){return{code:t,message:e,detailedMessage:n,type:r}}filterByValidDetails(t){return t.reduce((t,e)=>this.addValidDetail(t,e),[])}formatTitle(t){return t.length>1?`${this.literals.details} (${t.length})`:this.literals.detail}}return t.\u0275fac=function(e){return new(e||t)(ao(fv))},t.\u0275cmp=Ht({type:t,selectors:[["po-http-interceptor-detail"]],viewQuery:function(t,e){if(1&t&&kl(ab,7),2&t){let t;xl(t=Tl())&&(e.modal=t.first)}},decls:4,vars:3,consts:[["p-hide-close","","p-size","lg",3,"p-primary-action","p-title"],[1,"po-row"],[1,"po-md-12","po-mt-1","po-mb-1"],[3,"p-label",4,"ngFor","ngForOf"],[3,"p-label"],["class","po-row po-mb-1",4,"ngIf"],[1,"po-row","po-mb-1"],[3,"p-color","p-value"]],template:function(t,e){1&t&&(co(0,"po-modal",0),co(1,"div",1),co(2,"po-accordion",2),oo(3,Qy,5,3,"po-accordion-item",3),ho(),ho(),ho()),2&t&&(lo("p-primary-action",e.primaryAction)("p-title",e.title),Ns(3),lo("ngForOf",e.details))},directives:[ab,tv,$c,Jy,qc,Zb],encapsulation:2}),t})();const Cw={pt:{help:"Ajuda",details:"Detalhes",serverNotResponse:"Servidor n\xe3o est\xe1 respondendo"},en:{help:"Help",details:"Details",serverNotResponse:"Server is not responding"},es:{help:"Ayuda",details:"Detalles",serverNotResponse:"El servidor no est\xe1 respondiendo"},ru:{help:"\u041f\u043e\u043c\u043e\u0433\u0438\u0442\u0435",details:"\u0414\u0435\u0442\u0430\u043b\u0438",serverNotResponse:"\u0421\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442"}},Dw="X-PO-No-Error",Ew="X-PO-No-Message";let Aw=(()=>{class t extends class{constructor(t,e,n){this.componentInjector=t,this.notification=e,this.languageService=n,this.notificationTypes=["success","warning","error","information"],this.literals=Cw[this.languageService.getShortLanguage()],this.httpInterceptorDetailComponent=void 0}intercept(t,e){const n=t.clone();return t=t&&this.hasParameters(t)?this.cloneRequestWithoutParameters(t):t,e.handle(t).pipe(Up(t=>{t instanceof ry&&this.processResponse(t,n)},t=>{this.processErrorResponse(t,n)}))}processResponse(t,e){if(!this.hasNoMessageParam(e)&&t.body&&t.body._messages){const e=t.body._messages;e instanceof Array?e.forEach(t=>{this.showNotification(t)}):this.showNotification(e)}}processErrorResponse(t,e){const n=0!==t.status?t.error:{code:0,message:this.literals.serverNotResponse,detailedMessage:t.message},r=this.hasNoErrorParam(e),s=this.hasNoMessageParam(e),i=this.notificationTypes.slice(1);n&&n.message&&!r&&!s&&this.showNotification(Object.assign(Object.assign({},n),{type:i.includes(n.type)?n.type:"error"}))}cloneRequestWithoutParameters(t){const e=t.headers.delete(Dw).delete(Ew);return t.clone({headers:e})}createModal(t){const e=t.details?[t,...t.details]:[t];this.httpInterceptorDetailComponent=this.componentInjector.createComponentInApplication(_w),this.httpInterceptorDetailComponent.instance.detail=e,this.httpInterceptorDetailComponent.instance.closed.subscribe(()=>this.destroyModal()),this.httpInterceptorDetailComponent.instance.open()}destroyModal(){this.httpInterceptorDetailComponent&&(this.componentInjector.destroyComponentInApplication(this.httpInterceptorDetailComponent),this.httpInterceptorDetailComponent=void 0)}hasMessage(t){return t&&t.message}hasNoErrorParam(t){const e=t&&t.headers.get(Dw);return e&&"true"===e.toString().toLocaleLowerCase()}hasNoMessageParam(t){const e=t&&t.headers.get(Ew);return e&&"true"===e.toString().toLocaleLowerCase()}hasParameters(t){return t.headers.has(Dw)||t.headers.has(Ew)}showNotification(t){if(!this.hasMessage(t))return;const e=this.notificationTypes.includes(t.type)?t.type:"information",n=this.generateNotificationAction(t);this.notification[e]({message:t.message,actionLabel:n.label,action:n.action})}generateDetailModal(t){return()=>{this.httpInterceptorDetailComponent||this.createModal(t)}}generateNotificationAction(t){let e,n;return!t.helpUrl||t.detailedMessage||t.details?(t.detailedMessage||t.details)&&(n=this.literals.details,e=this.generateDetailModal(t)):(n=this.literals.help,e=this.generateUrlHelpFunction(t.helpUrl)),{label:n,action:e}}generateUrlHelpFunction(t){return()=>{window.open(t,"_blank")}}}{constructor(t,e,n){super(e,t,n)}}return t.\u0275fac=function(e){return new(e||t)(or(Vb),or(pb),or(fv))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Sw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[Aw,Vb,{provide:ly,useClass:Aw,multi:!0}],imports:[[rh,rv,lb,Ab,Kb]]}),t})(),xw=(()=>{class t{constructor(){this.controlHttpRequest=new D}getControlHttpRequest(){return this.controlHttpRequest.asObservable()}send(t=0){this.controlHttpRequest.next(t)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const kw="X-PO-No-Count-Pending-Requests",Tw="X-PO-Screen-Lock";let Fw=(()=>{class t{constructor(t,e){this.controlHttpRequest=t,this.poComponentInjector=e,this.loadingOverlayComponent=void 0,this.pendingRequests=0,this.overlayRequests=0}intercept(t,e){const n=t.clone();return t=this.requestCloneWithoutHeaderParam([kw,Tw],t),this.setCountPendingRequests(!0,n),this.setCountOverlayRequests(!0,n),e.handle(t).pipe(Up(t=>{t instanceof ry&&(this.setCountPendingRequests(!1,n),this.setCountOverlayRequests(!1,n))}),Ap(t=>(this.setCountPendingRequests(!1,n),this.setCountOverlayRequests(!1,n),Zh(t))))}getCountPendingRequests(){return this.controlHttpRequest.getControlHttpRequest()}buildLoading(){this.loadingOverlayComponent||(this.loadingOverlayComponent=this.poComponentInjector.createComponentInApplication(wv),this.loadingOverlayComponent.instance.screenLock=!0,this.loadingOverlayComponent.instance.changeDetector.detectChanges())}destroyLoading(){this.loadingOverlayComponent&&(this.poComponentInjector.destroyComponentInApplication(this.loadingOverlayComponent),this.loadingOverlayComponent=void 0)}requestCloneWithoutHeaderParam(t,e){let n=!1;return t.forEach(t=>{e.headers.has(t)&&(e.headers.delete(t),n=!0)}),n?e.clone({headers:e.headers}):e}setCountPendingRequests(t,e){const n=e.headers.has(kw),r=e.headers.get(kw);n&&"true"===r.toString().toLowerCase()||(this.pendingRequests+=t?1:-1,this.controlHttpRequest.send(this.pendingRequests))}setCountOverlayRequests(t,e){if(e.headers.has(Tw)){if("false"===e.headers.get(Tw).toString().toLowerCase())return;this.overlayRequests+=t?1:-1,this.overlayRequests>0?this.buildLoading():this.destroyLoading()}}}return t.\u0275fac=function(e){return new(e||t)(or(xw),or(pb))},t.\u0275prov=ht({factory:function(){return new t(or(xw),or(pb))},token:t,providedIn:"root"}),t})(),Ow=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[xw,Fw,pb,{provide:ly,useClass:Fw,multi:!0}],imports:[[Av]]}),t})(),Pw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[Sw,Ow],Sw,Ow]}),t})(),Iw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[Tb],Tb]}),t})(),Rw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[Vb],imports:[[mw,yw,vw,Pw,Iw,Sb],mw,yw,Pw,vw,Iw,Sb]}),t})();new Hn("I18N_CONFIG");let Mw=(()=>{class t{constructor(){this.title="poc"}calcula(t){console.log({action:t})}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=Ht({type:t,selectors:[["hc-root"]],decls:10,vars:2,consts:[[1,"po-row"],[1,"po-md-12"],["name","numberOne","p-label","Primeiro N\xfamero","p-placeholder","Primeiro N\xfamero",3,"ngModel","ngModelChange"],["name","numberTwo","p-label","Segundo N\xfamero","p-placeholder","Segundo N\xfamero",3,"ngModel","ngModelChange"],["p-type","primary","p-label","Soma",3,"p-click"],["p-type","primary","p-label","Subtrai",3,"p-click"],["p-type","primary","p-label","Multiplica",3,"p-click"],["p-type","primary","p-label","Divide",3,"p-click"]],template:function(t,e){1&t&&(co(0,"div",0),co(1,"div",1),co(2,"h3"),Ho(3,"Calculatora 2"),ho(),co(4,"po-number",2),vo("ngModelChange",function(t){return e.numberOne=t}),ho(),co(5,"po-number",3),vo("ngModelChange",function(t){return e.numberTwo=t}),ho(),co(6,"po-button",4),vo("p-click",function(){return e.calcula("soma")}),ho(),co(7,"po-button",5),vo("p-click",function(){return e.calcula("subtra\xe7\xe3o")}),ho(),co(8,"po-button",6),vo("p-click",function(){return e.calcula("multiplica\xe7\xe3o")}),ho(),co(9,"po-button",7),vo("p-click",function(){return e.calcula("divis\xe3o")}),ho(),ho(),ho()),2&t&&(Ns(4),lo("ngModel",e.numberOne),Ns(1),lo("ngModel",e.numberTwo))},directives:[Nb,Fd,Kd,Ov],encapsulation:2}),t})(),jw=(()=>{class t{constructor(t){const e=function(t,e){const n=function(t,e){return e.get(ha).resolveComponentFactory(t).inputs}(t,e.injector),r=e.strategyFactory||new ad(t,e.injector),s=function(t){const e={};return t.forEach(({propName:t,templateName:n})=>{var r;e[(r=n,r.replace(/[A-Z]/g,t=>`-${t.toLowerCase()}`))]=t}),e}(n);class i extends ud{constructor(t){super(),this.injector=t}get ngElementStrategy(){if(!this._ngElementStrategy){const t=this._ngElementStrategy=r.create(this.injector||e.injector);n.forEach(({propName:e})=>{if(!this.hasOwnProperty(e))return;const n=this[e];delete this[e],t.setInputValue(e,n)})}return this._ngElementStrategy}attributeChangedCallback(t,e,n,r){this.ngElementStrategy.setInputValue(s[t],n)}connectedCallback(){let t=!1;this.ngElementStrategy.events&&(this.subscribeToEvents(),t=!0),this.ngElementStrategy.connect(this),t||this.subscribeToEvents()}disconnectedCallback(){this._ngElementStrategy&&this._ngElementStrategy.disconnect(),this.ngElementEventsSubscription&&(this.ngElementEventsSubscription.unsubscribe(),this.ngElementEventsSubscription=null)}subscribeToEvents(){this.ngElementEventsSubscription=this.ngElementStrategy.events.subscribe(t=>{const e=function(t,e,n){if("function"!=typeof CustomEvent){const r=t.createEvent("CustomEvent");return r.initCustomEvent(e,!1,!1,n),r}return new CustomEvent(e,{bubbles:!1,cancelable:!1,detail:n})}(this.ownerDocument,t.name,t.value);this.dispatchEvent(e)})}}return i.observedAttributes=Object.keys(s),n.forEach(({propName:t})=>{Object.defineProperty(i.prototype,t,{get(){return this.ngElementStrategy.getInputValue(t)},set(e){this.ngElementStrategy.setInputValue(t,e)},configurable:!0,enumerable:!0})}),i}(Mw,{injector:t});customElements.define("hc-root",e)}ngDoBootstrap(){}}return t.\u0275fac=function(e){return new(e||t)(or(Wi))},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[Nh,Xd,Rw]]}),t})();(function(){if(fu)throw new Error("Cannot enable prod mode after platform setup.");pu=!1})(),Mh().bootstrapModule(jw).catch(t=>console.error(t))},662:t=>{function e(t){return Promise.resolve().then(()=>{var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e})}e.keys=()=>[],e.resolve=e,e.id=662,t.exports=e}},t=>{"use strict";t(t.s=190)}]);';