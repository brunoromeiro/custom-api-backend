export const externalDashboardTile =
  '!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=2)}([function(e,t){function n(e){return Promise.resolve().then(function(){var t=new Error('Cannot find module "'+e+'".');throw t.code="MODULE_NOT_FOUND",t})}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id=0},function(e,t,n){"use strict";n.r(t);var r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function o(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var i=function(){return(i=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};function s(e){var t="function"==typeof Symbol&&e[Symbol.iterator],n=0;return t?t.call(e):{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}}}function u(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return s}function a(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(u(arguments[t]));return e}function c(e){return"function"==typeof e}var l=!1,d={Promise:void 0,set useDeprecatedSynchronousErrorHandling(e){e&&(new Error).stack,l=e},get useDeprecatedSynchronousErrorHandling(){return l}};function f(e){setTimeout(function(){throw e})}var p={closed:!0,next:function(e){},error:function(e){if(d.useDeprecatedSynchronousErrorHandling)throw e;f(e)},complete:function(){}},h=Array.isArray||function(e){return e&&"number"==typeof e.length};function v(e){return null!=e&&"object"==typeof e}var y,g={e:{}};function m(){try{return y.apply(this,arguments)}catch(e){return g.e=e,g}}function b(e){return y=e,m}var _=function(e){function t(n){var r=e.call(this,n?n.length+" errors occurred during unsubscription:\n  "+n.map(function(e,t){return t+1+") "+e.toString()}).join("\n  "):"")||this;return r.errors=n,r.name="UnsubscriptionError",Object.setPrototypeOf(r,t.prototype),r}return o(t,e),t}(Error),w=function(){function e(e){this.closed=!1,this._parent=null,this._parents=null,this._subscriptions=null,e&&(this._unsubscribe=e)}return e.prototype.unsubscribe=function(){var e,t=!1;if(!this.closed){var n=this._parent,r=this._parents,o=this._unsubscribe,i=this._subscriptions;this.closed=!0,this._parent=null,this._parents=null,this._subscriptions=null;for(var s=-1,u=r?r.length:0;n;)n.remove(this),n=++s<u&&r[s]||null;if(c(o)&&b(o).call(this)===g&&(t=!0,e=e||(g.e instanceof _?E(g.e.errors):[g.e])),h(i))for(s=-1,u=i.length;++s<u;){var a=i[s];if(v(a)&&b(a.unsubscribe).call(a)===g){t=!0,e=e||[];var l=g.e;l instanceof _?e=e.concat(E(l.errors)):e.push(l)}}if(t)throw new _(e)}},e.prototype.add=function(t){if(!t||t===e.EMPTY)return e.EMPTY;if(t===this)return this;var n=t;switch(typeof t){case"function":n=new e(t);case"object":if(n.closed||"function"!=typeof n.unsubscribe)return n;if(this.closed)return n.unsubscribe(),n;if("function"!=typeof n._addParent){var r=n;(n=new e)._subscriptions=[r]}break;default:throw new Error("unrecognized teardown "+t+" added to Subscription.")}return(this._subscriptions||(this._subscriptions=[])).push(n),n._addParent(this),n},e.prototype.remove=function(e){var t=this._subscriptions;if(t){var n=t.indexOf(e);-1!==n&&t.splice(n,1)}},e.prototype._addParent=function(e){var t=this._parent,n=this._parents;t&&t!==e?n?-1===n.indexOf(e)&&n.push(e):this._parents=[e]:this._parent=e},e.EMPTY=function(e){return e.closed=!0,e}(new e),e}();function E(e){return e.reduce(function(e,t){return e.concat(t instanceof _?t.errors:t)},[])}var C="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("rxSubscriber"):"@@rxSubscriber",x=function(e){function t(t,n,r){var o=e.call(this)||this;switch(o.syncErrorValue=null,o.syncErrorThrown=!1,o.syncErrorThrowable=!1,o.isStopped=!1,arguments.length){case 0:o.destination=p;break;case 1:if(!t){o.destination=p;break}if("object"==typeof t){if(t instanceof x||"syncErrorThrowable"in t&&t[C]){var i=t[C]();o.syncErrorThrowable=i.syncErrorThrowable,o.destination=i,i.add(o)}else o.syncErrorThrowable=!0,o.destination=new T(o,t);break}default:o.syncErrorThrowable=!0,o.destination=new T(o,t,n,r)}return o}return o(t,e),t.prototype[C]=function(){return this},t.create=function(e,n,r){var o=new t(e,n,r);return o.syncErrorThrowable=!1,o},t.prototype.next=function(e){this.isStopped||this._next(e)},t.prototype.error=function(e){this.isStopped||(this.isStopped=!0,this._error(e))},t.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},t.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,e.prototype.unsubscribe.call(this))},t.prototype._next=function(e){this.destination.next(e)},t.prototype._error=function(e){this.destination.error(e),this.unsubscribe()},t.prototype._complete=function(){this.destination.complete(),this.unsubscribe()},t.prototype._unsubscribeAndRecycle=function(){var e=this._parent,t=this._parents;return this._parent=null,this._parents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parent=e,this._parents=t,this},t}(w),T=function(e){function t(t,n,r,o){var i,s=e.call(this)||this;s._parentSubscriber=t;var u=s;return c(n)?i=n:n&&(i=n.next,r=n.error,o=n.complete,n!==p&&(c((u=Object.create(n)).unsubscribe)&&s.add(u.unsubscribe.bind(u)),u.unsubscribe=s.unsubscribe.bind(s))),s._context=u,s._next=i,s._error=r,s._complete=o,s}return o(t,e),t.prototype.next=function(e){if(!this.isStopped&&this._next){var t=this._parentSubscriber;d.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?this.__tryOrSetError(t,this._next,e)&&this.unsubscribe():this.__tryOrUnsub(this._next,e)}},t.prototype.error=function(e){if(!this.isStopped){var t=this._parentSubscriber,n=d.useDeprecatedSynchronousErrorHandling;if(this._error)n&&t.syncErrorThrowable?(this.__tryOrSetError(t,this._error,e),this.unsubscribe()):(this.__tryOrUnsub(this._error,e),this.unsubscribe());else if(t.syncErrorThrowable)n?(t.syncErrorValue=e,t.syncErrorThrown=!0):f(e),this.unsubscribe();else{if(this.unsubscribe(),n)throw e;f(e)}}},t.prototype.complete=function(){var e=this;if(!this.isStopped){var t=this._parentSubscriber;if(this._complete){var n=function(){return e._complete.call(e._context)};d.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?(this.__tryOrSetError(t,n),this.unsubscribe()):(this.__tryOrUnsub(n),this.unsubscribe())}else this.unsubscribe()}},t.prototype.__tryOrUnsub=function(e,t){try{e.call(this._context,t)}catch(e){if(this.unsubscribe(),d.useDeprecatedSynchronousErrorHandling)throw e;f(e)}},t.prototype.__tryOrSetError=function(e,t,n){if(!d.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{t.call(this._context,n)}catch(t){return d.useDeprecatedSynchronousErrorHandling?(e.syncErrorValue=t,e.syncErrorThrown=!0,!0):(f(t),!0)}return!1},t.prototype._unsubscribe=function(){var e=this._parentSubscriber;this._context=null,this._parentSubscriber=null,e.unsubscribe()},t}(x),k="function"==typeof Symbol&&Symbol.observable||"@@observable";function I(){}var S=function(){function e(e){this._isScalar=!1,e&&(this._subscribe=e)}return e.prototype.lift=function(t){var n=new e;return n.source=this,n.operator=t,n},e.prototype.subscribe=function(e,t,n){var r=this.operator,o=function(e,t,n){if(e){if(e instanceof x)return e;if(e[C])return e[C]()}return e||t||n?new x(e,t,n):new x(p)}(e,t,n);if(r?r.call(o,this.source):o.add(this.source||d.useDeprecatedSynchronousErrorHandling&&!o.syncErrorThrowable?this._subscribe(o):this._trySubscribe(o)),d.useDeprecatedSynchronousErrorHandling&&o.syncErrorThrowable&&(o.syncErrorThrowable=!1,o.syncErrorThrown))throw o.syncErrorValue;return o},e.prototype._trySubscribe=function(e){try{return this._subscribe(e)}catch(t){d.useDeprecatedSynchronousErrorHandling&&(e.syncErrorThrown=!0,e.syncErrorValue=t),e.error(t)}},e.prototype.forEach=function(e,t){var n=this;return new(t=N(t))(function(t,r){var o;o=n.subscribe(function(t){try{e(t)}catch(e){r(e),o&&o.unsubscribe()}},r,t)})},e.prototype._subscribe=function(e){var t=this.source;return t&&t.subscribe(e)},e.prototype[k]=function(){return this},e.prototype.pipe=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return 0===e.length?this:function(e){return e?1===e.length?e[0]:function(t){return e.reduce(function(e,t){return t(e)},t)}:I}(e)(this)},e.prototype.toPromise=function(e){var t=this;return new(e=N(e))(function(e,n){var r;t.subscribe(function(e){return r=e},function(e){return n(e)},function(){return e(r)})})},e.create=function(t){return new e(t)},e}();function N(e){if(e||(e=d.Promise||Promise),!e)throw new Error("no Promise impl found");return e}var A=function(e){function t(t,n,r){var o=e.call(this)||this;return o.parent=t,o.outerValue=n,o.outerIndex=r,o.index=0,o}return o(t,e),t.prototype._next=function(e){this.parent.notifyNext(this.outerValue,e,this.outerIndex,this.index++,this)},t.prototype._error=function(e){this.parent.notifyError(e,this),this.unsubscribe()},t.prototype._complete=function(){this.parent.notifyComplete(this),this.unsubscribe()},t}(x),D=function(e){return function(t){for(var n=0,r=e.length;n<r&&!t.closed;n++)t.next(e[n]);t.closed||t.complete()}},O=function(e){return function(t){return e.then(function(e){t.closed||(t.next(e),t.complete())},function(e){return t.error(e)}).then(null,f),t}},P="function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator",R=function(e){return function(t){for(var n=e[P]();;){var r=n.next();if(r.done){t.complete();break}if(t.next(r.value),t.closed)break}return"function"==typeof n.return&&t.add(function(){n.return&&n.return()}),t}},M=function(e){return function(t){var n=e[k]();if("function"!=typeof n.subscribe)throw new TypeError("Provided object does not correctly implement Symbol.observable");return n.subscribe(t)}},V=function(e){return e&&"number"==typeof e.length&&"function"!=typeof e};function j(e){return e&&"function"!=typeof e.subscribe&&"function"==typeof e.then}var H=function(e){if(e instanceof S)return function(t){return e._isScalar?(t.next(e.value),void t.complete()):e.subscribe(t)};if(e&&"function"==typeof e[k])return M(e);if(V(e))return D(e);if(j(e))return O(e);if(e&&"function"==typeof e[P])return R(e);var t=v(e)?"an invalid object":"'"+e+"'";throw new TypeError("You provided "+t+" where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.")},F=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.notifyNext=function(e,t,n,r,o){this.destination.next(t)},t.prototype.notifyError=function(e,t){this.destination.error(e)},t.prototype.notifyComplete=function(e){this.destination.complete()},t}(x);function L(e,t){return function(n){if("function"!=typeof e)throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");return n.lift(new B(e,t))}}var B=function(){function e(e,t){this.project=e,this.thisArg=t}return e.prototype.call=function(e,t){return t.subscribe(new z(e,this.project,this.thisArg))},e}(),z=function(e){function t(t,n,r){var o=e.call(this,t)||this;return o.project=n,o.count=0,o.thisArg=r||o,o}return o(t,e),t.prototype._next=function(e){var t;try{t=this.project.call(this.thisArg,e,this.count++)}catch(e){return void this.destination.error(e)}this.destination.next(t)},t}(x);function U(e,t){return new S(t?function(n){var r=new w,o=0;return r.add(t.schedule(function(){o!==e.length?(n.next(e[o++]),n.closed||r.add(this.schedule())):n.complete()})),r}:D(e))}var Z=function(){function e(e,t){void 0===t&&(t=Number.POSITIVE_INFINITY),this.project=e,this.concurrent=t}return e.prototype.call=function(e,t){return t.subscribe(new q(e,this.project,this.concurrent))},e}(),q=function(e){function t(t,n,r){void 0===r&&(r=Number.POSITIVE_INFINITY);var o=e.call(this,t)||this;return o.project=n,o.concurrent=r,o.hasCompleted=!1,o.buffer=[],o.active=0,o.index=0,o}return o(t,e),t.prototype._next=function(e){this.active<this.concurrent?this._tryNext(e):this.buffer.push(e)},t.prototype._tryNext=function(e){var t,n=this.index++;try{t=this.project(e,n)}catch(e){return void this.destination.error(e)}this.active++,this._innerSub(t,e,n)},t.prototype._innerSub=function(e,t,n){this.add(function(e,t,n,r){var o=new A(e,n,r);return H(t)(o)}(this,e,t,n))},t.prototype._complete=function(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&this.destination.complete()},t.prototype.notifyNext=function(e,t,n,r,o){this.destination.next(t)},t.prototype.notifyComplete=function(e){var t=this.buffer;this.remove(e),this.active--,t.length>0?this._next(t.shift()):0===this.active&&this.hasCompleted&&this.destination.complete()},t}(F);function Q(e){return e}function W(e){return void 0===e&&(e=Number.POSITIVE_INFINITY),function e(t,n,r){return void 0===r&&(r=Number.POSITIVE_INFINITY),"function"==typeof n?function(o){return o.pipe(e(function(e,r){return function(e,t){if(!t)return e instanceof S?e:new S(H(e));if(null!=e){if(function(e){return e&&"function"==typeof e[k]}(e))return function(e,t){return new S(t?function(n){var r=new w;return r.add(t.schedule(function(){var o=e[k]();r.add(o.subscribe({next:function(e){r.add(t.schedule(function(){return n.next(e)}))},error:function(e){r.add(t.schedule(function(){return n.error(e)}))},complete:function(){r.add(t.schedule(function(){return n.complete()}))}}))})),r}:M(e))}(e,t);if(j(e))return function(e,t){return new S(t?function(n){var r=new w;return r.add(t.schedule(function(){return e.then(function(e){r.add(t.schedule(function(){n.next(e),r.add(t.schedule(function(){return n.complete()}))}))},function(e){r.add(t.schedule(function(){return n.error(e)}))})})),r}:O(e))}(e,t);if(V(e))return U(e,t);if(function(e){return e&&"function"==typeof e[P]}(e)||"string"==typeof e)return function(e,t){if(!e)throw new Error("Iterable cannot be null");return new S(t?function(n){var r,o=new w;return o.add(function(){r&&"function"==typeof r.return&&r.return()}),o.add(t.schedule(function(){r=e[P](),o.add(t.schedule(function(){if(!n.closed){var e,t;try{var o=r.next();e=o.value,t=o.done}catch(e){return void n.error(e)}t?n.complete():(n.next(e),this.schedule())}}))})),o}:R(e))}(e,t)}throw new TypeError((null!==e&&typeof e||e)+" is not observable")}(t(e,r)).pipe(L(function(t,o){return n(e,t,r,o)}))},r))}:("number"==typeof n&&(r=n),function(e){return e.lift(new Z(t,r))})}(Q,e)}function K(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var n=Number.POSITIVE_INFINITY,r=null,o=e[e.length-1];return o&&"function"==typeof o.schedule?(r=e.pop(),e.length>1&&"number"==typeof e[e.length-1]&&(n=e.pop())):"number"==typeof o&&(n=e.pop()),null===r&&1===e.length&&e[0]instanceof S?e[0]:W(n)(U(e,r))}var G=function(e){function t(){var n=e.call(this,"object unsubscribed")||this;return n.name="ObjectUnsubscribedError",Object.setPrototypeOf(n,t.prototype),n}return o(t,e),t}(Error),Y=function(e){function t(t,n){var r=e.call(this)||this;return r.subject=t,r.subscriber=n,r.closed=!1,r}return o(t,e),t.prototype.unsubscribe=function(){if(!this.closed){this.closed=!0;var e=this.subject,t=e.observers;if(this.subject=null,t&&0!==t.length&&!e.isStopped&&!e.closed){var n=t.indexOf(this.subscriber);-1!==n&&t.splice(n,1)}}},t}(w),J=function(e){function t(t){var n=e.call(this,t)||this;return n.destination=t,n}return o(t,e),t}(x),$=function(e){function t(){var t=e.call(this)||this;return t.observers=[],t.closed=!1,t.isStopped=!1,t.hasError=!1,t.thrownError=null,t}return o(t,e),t.prototype[C]=function(){return new J(this)},t.prototype.lift=function(e){var t=new X(this,this);return t.operator=e,t},t.prototype.next=function(e){if(this.closed)throw new G;if(!this.isStopped)for(var t=this.observers,n=t.length,r=t.slice(),o=0;o<n;o++)r[o].next(e)},t.prototype.error=function(e){if(this.closed)throw new G;this.hasError=!0,this.thrownError=e,this.isStopped=!0;for(var t=this.observers,n=t.length,r=t.slice(),o=0;o<n;o++)r[o].error(e);this.observers.length=0},t.prototype.complete=function(){if(this.closed)throw new G;this.isStopped=!0;for(var e=this.observers,t=e.length,n=e.slice(),r=0;r<t;r++)n[r].complete();this.observers.length=0},t.prototype.unsubscribe=function(){this.isStopped=!0,this.closed=!0,this.observers=null},t.prototype._trySubscribe=function(t){if(this.closed)throw new G;return e.prototype._trySubscribe.call(this,t)},t.prototype._subscribe=function(e){if(this.closed)throw new G;return this.hasError?(e.error(this.thrownError),w.EMPTY):this.isStopped?(e.complete(),w.EMPTY):(this.observers.push(e),new Y(this,e))},t.prototype.asObservable=function(){var e=new S;return e.source=this,e},t.create=function(e,t){return new X(e,t)},t}(S),X=function(e){function t(t,n){var r=e.call(this)||this;return r.destination=t,r.source=n,r}return o(t,e),t.prototype.next=function(e){var t=this.destination;t&&t.next&&t.next(e)},t.prototype.error=function(e){var t=this.destination;t&&t.error&&this.destination.error(e)},t.prototype.complete=function(){var e=this.destination;e&&e.complete&&this.destination.complete()},t.prototype._subscribe=function(e){return this.source?this.source.subscribe(e):w.EMPTY},t}($);function ee(){return function(e){return e.lift(new te(e))}}var te=function(){function e(e){this.connectable=e}return e.prototype.call=function(e,t){var n=this.connectable;n._refCount++;var r=new ne(e,n),o=t.subscribe(r);return r.closed||(r.connection=n.connect()),o},e}(),ne=function(e){function t(t,n){var r=e.call(this,t)||this;return r.connectable=n,r}return o(t,e),t.prototype._unsubscribe=function(){var e=this.connectable;if(e){this.connectable=null;var t=e._refCount;if(t<=0)this.connection=null;else if(e._refCount=t-1,t>1)this.connection=null;else{var n=this.connection,r=e._connection;this.connection=null,!r||n&&r!==n||r.unsubscribe()}}else this.connection=null},t}(x),re=function(e){function t(t,n){var r=e.call(this)||this;return r.source=t,r.subjectFactory=n,r._refCount=0,r._isComplete=!1,r}return o(t,e),t.prototype._subscribe=function(e){return this.getSubject().subscribe(e)},t.prototype.getSubject=function(){var e=this._subject;return e&&!e.isStopped||(this._subject=this.subjectFactory()),this._subject},t.prototype.connect=function(){var e=this._connection;return e||(this._isComplete=!1,(e=this._connection=new w).add(this.source.subscribe(new ie(this.getSubject(),this))),e.closed?(this._connection=null,e=w.EMPTY):this._connection=e),e},t.prototype.refCount=function(){return ee()(this)},t}(S).prototype,oe={operator:{value:null},_refCount:{value:0,writable:!0},_subject:{value:null,writable:!0},_connection:{value:null,writable:!0},_subscribe:{value:re._subscribe},_isComplete:{value:re._isComplete,writable:!0},getSubject:{value:re.getSubject},connect:{value:re.connect},refCount:{value:re.refCount}},ie=function(e){function t(t,n){var r=e.call(this,t)||this;return r.connectable=n,r}return o(t,e),t.prototype._error=function(t){this._unsubscribe(),e.prototype._error.call(this,t)},t.prototype._complete=function(){this.connectable._isComplete=!0,this._unsubscribe(),e.prototype._complete.call(this)},t.prototype._unsubscribe=function(){var e=this.connectable;if(e){this.connectable=null;var t=e._connection;e._refCount=0,e._subject=null,e._connection=null,t&&t.unsubscribe()}},t}(J);!function(){function e(e,t){this.subjectFactory=e,this.selector=t}e.prototype.call=function(e,t){var n=this.selector,r=this.subjectFactory(),o=n(r).subscribe(e);return o.add(t.subscribe(r)),o}}();function se(){return new $}function ue(e){return{providedIn:e.providedIn||null,factory:e.factory,value:void 0}}var ae=function(){function e(e,t){this._desc=e,this.ngMetadataName="InjectionToken",this.ngInjectableDef=void 0!==t?ue({providedIn:t.providedIn||"root",factory:t.factory}):void 0}return e.prototype.toString=function(){return"InjectionToken "+this._desc},e}(),ce="__parameters__";function le(e,t,n){var r=function(e){return function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];if(e){var r=e.apply(void 0,a(t));for(var o in r)this[o]=r[o]}}}(t);function o(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];if(this instanceof o)return r.apply(this,e),this;var n,i=new((n=o).bind.apply(n,a([void 0],e)));return s.annotation=i,s;function s(e,t,n){for(var r=e.hasOwnProperty(ce)?e[ce]:Object.defineProperty(e,ce,{value:[]})[ce];r.length<=n;)r.push(null);return(r[n]=r[n]||[]).push(i),e}}return n&&(o.prototype=Object.create(n.prototype)),o.prototype.ngMetadataName=e,o.annotationCls=o,o}var de="undefined"!=typeof window&&window,fe="undefined"!=typeof self&&"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,pe="undefined"!=typeof global&&global,he=de||pe||fe,ve=Promise.resolve(0),ye=null;function ge(){if(!ye){var e=he.Symbol;if(e&&e.iterator)ye=e.iterator;else for(var t=Object.getOwnPropertyNames(Map.prototype),n=0;n<t.length;++n){var r=t[n];"entries"!==r&&"size"!==r&&Map.prototype[r]===Map.prototype.entries&&(ye=r)}}return ye}function me(e){"undefined"==typeof Zone?ve.then(function(){e&&e.apply(null,null)}):Zone.current.scheduleMicroTask("scheduleMicrotask",e)}function be(e,t){return e===t||"number"==typeof e&&"number"==typeof t&&isNaN(e)&&isNaN(t)}function _e(e){if("string"==typeof e)return e;if(e instanceof Array)return"["+e.map(_e).join(", ")+"]";if(null==e)return""+e;if(e.overriddenName)return""+e.overriddenName;if(e.name)return""+e.name;var t=e.toString();if(null==t)return""+t;var n=t.indexOf("\n");return-1===n?t:t.substring(0,n)}function we(e){return e.__forward_ref__=we,e.toString=function(){return _e(this())},e}function Ee(e){return"function"==typeof e&&e.hasOwnProperty("__forward_ref__")&&e.__forward_ref__===we?e():e}var Ce=le("Inject",function(e){return{token:e}}),xe=le("Optional"),Te=le("Self"),ke=le("SkipSelf"),Ie="__source",Se=new Object,Ne=new ae("INJECTOR"),Ae=function(){function e(){}return e.prototype.get=function(e,t){if(void 0===t&&(t=Se),t===Se)throw new Error("NullInjectorError: No provider for "+_e(e)+"!");return t},e}(),De=function(){function e(){}return e.create=function(e,t){return Array.isArray(e)?new ze(e,t):new ze(e.providers,e.parent,e.name||null)},e.THROW_IF_NOT_FOUND=Se,e.NULL=new Ae,e.ngInjectableDef=ue({providedIn:"any",factory:function(){return function(e,t){if(void 0===t&&(t=0),void 0===Qe)throw new Error("inject() must be called from an injection context");if(null===Qe){var n=e.ngInjectableDef;if(n&&"root"==n.providedIn)return void 0===n.value?n.value=n.factory():n.value;throw new Error("Injector: NOT_FOUND ["+_e(e)+"]")}return Qe.get(e,8&t?null:void 0,t)}(Ne)}}),e}(),Oe=function(e){return e},Pe=[],Re=Oe,Me=function(){return Array.prototype.slice.call(arguments)},Ve={},je=function(e){for(var t in e)if(e[t]===Ve)return t;throw Error("!prop")}({provide:String,useValue:Ve}),He="ngTempTokenPath",Fe=De.NULL,Le=/\n/gm,Be="ɵ",ze=function(){function e(e,t,n){void 0===t&&(t=Fe),void 0===n&&(n=null),this.parent=t,this.source=n;var r=this._records=new Map;r.set(De,{token:De,fn:Oe,deps:Pe,value:this,useNew:!1}),r.set(Ne,{token:Ne,fn:Oe,deps:Pe,value:this,useNew:!1}),function e(t,n){if(n)if((n=Ee(n))instanceof Array)for(var r=0;r<n.length;r++)e(t,n[r]);else{if("function"==typeof n)throw qe("Function/Class not supported",n);if(!n||"object"!=typeof n||!n.provide)throw qe("Unexpected provider",n);var o=Ee(n.provide),i=function(e){var t=function(e){var t=Pe,n=e.deps;if(n&&n.length){t=[];for(var r=0;r<n.length;r++){var o=6;if((a=Ee(n[r]))instanceof Array)for(var i=0,s=a;i<s.length;i++){var u=s[i];u instanceof xe||u==xe?o|=1:u instanceof ke||u==ke?o&=-3:u instanceof Te||u==Te?o&=-5:a=u instanceof Ce?u.token:Ee(u)}t.push({token:a,options:o})}}else if(e.useExisting){var a;t=[{token:a=Ee(e.useExisting),options:6}]}else if(!(n||je in e))throw qe("'deps' required",e);return t}(e),n=Oe,r=Pe,o=!1,i=Ee(e.provide);if(je in e)r=e.useValue;else if(e.useFactory)n=e.useFactory;else if(e.useExisting);else if(e.useClass)o=!0,n=Ee(e.useClass);else{if("function"!=typeof i)throw qe("StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable",e);o=!0,n=i}return{deps:t,fn:n,useNew:o,value:r}}(n);if(!0===n.multi){var s=t.get(o);if(s){if(s.fn!==Me)throw Ue(o)}else t.set(o,s={token:n.provide,deps:[],useNew:!1,fn:Me,value:Pe});o=n,s.deps.push({token:o,options:6})}var u=t.get(o);if(u&&u.fn==Me)throw Ue(o);t.set(o,i)}}(r,e)}return e.prototype.get=function(e,t,n){void 0===n&&(n=0);var r=this._records.get(e);try{return function e(t,n,r,o,i,s){try{return function(t,n,r,o,i,s){var u,c;if(!n||4&s)2&s||(u=o.get(t,i,0));else{if((u=n.value)==Re)throw Error(Be+"Circular dependency");if(u===Pe){n.value=Re;var l=n.useNew,d=n.fn,f=n.deps,p=Pe;if(f.length){p=[];for(var h=0;h<f.length;h++){var v=f[h],y=v.options,g=2&y?r.get(v.token):void 0;p.push(e(v.token,g,r,g||4&y?o:Fe,1&y?null:De.THROW_IF_NOT_FOUND,0))}}n.value=u=l?new((c=d).bind.apply(c,a([void 0],p))):d.apply(void 0,p)}}return u}(t,n,r,o,i,s)}catch(r){throw r instanceof Error||(r=new Error(r)),(r[He]=r[He]||[]).unshift(t),n&&n.value==Re&&(n.value=Pe),r}}(e,r,this._records,this.parent,t,n)}catch(t){var o=t[He];throw e[Ie]&&o.unshift(e[Ie]),t.message=Ze("\n"+t.message,o,this.source),t.ngTokenPath=o,t[He]=null,t}},e.prototype.toString=function(){var e=[];return this._records.forEach(function(t,n){return e.push(_e(n))}),"StaticInjector["+e.join(", ")+"]"},e}();function Ue(e){return qe("Cannot mix multi providers and regular providers",e)}function Ze(e,t,n){void 0===n&&(n=null),e=e&&"\n"===e.charAt(0)&&e.charAt(1)==Be?e.substr(2):e;var r=_e(t);if(t instanceof Array)r=t.map(_e).join(" -> ");else if("object"==typeof t){var o=[];for(var i in t)if(t.hasOwnProperty(i)){var s=t[i];o.push(i+":"+("string"==typeof s?JSON.stringify(s):_e(s)))}r="{"+o.join(", ")+"}"}return"StaticInjectorError"+(n?"("+n+")":"")+"["+r+"]: "+e.replace(Le,"\n  ")}function qe(e,t){return new Error(Ze(e,t))}var Qe=void 0;function We(e){var t=Qe;return Qe=e,t}var Ke=function(e){return e[e.Emulated=0]="Emulated",e[e.Native=1]="Native",e[e.None=2]="None",e}({}),Ge=new function(e){this.full=e,this.major=e.split(".")[0],this.minor=e.split(".")[1],this.patch=e.split(".").slice(2).join(".")}("6.0.7"),Ye="ngDebugContext",Je="ngOriginalError",$e="ngErrorLogger";function Xe(e){return e[Ye]}function et(e){return e[Je]}function tt(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];e.error.apply(e,a(t))}var nt=function(){function e(){this._console=console}return e.prototype.handleError=function(e){var t=this._findOriginalError(e),n=this._findContext(e),r=function(e){return e[$e]||tt}(e);r(this._console,"ERROR",e),t&&r(this._console,"ORIGINAL ERROR",t),n&&r(this._console,"ERROR CONTEXT",n)},e.prototype._findContext=function(e){return e?Xe(e)?Xe(e):this._findContext(et(e)):null},e.prototype._findOriginalError=function(e){for(var t=et(e);t&&et(t);)t=et(t);return t},e}(),rt=new ae("The presence of this token marks an injector as being the root injector.");function ot(e){return!!e&&"function"==typeof e.then}var it=new ae("Application Initializer"),st=function(){function e(e){var t=this;this.appInits=e,this.initialized=!1,this.done=!1,this.donePromise=new Promise(function(e,n){t.resolve=e,t.reject=n})}return e.prototype.runInitializers=function(){var e=this;if(!this.initialized){var t=[],n=function(){e.done=!0,e.resolve()};if(this.appInits)for(var r=0;r<this.appInits.length;r++){var o=this.appInits[r]();ot(o)&&t.push(o)}Promise.all(t).then(function(){n()}).catch(function(t){e.reject(t)}),0===t.length&&n(),this.initialized=!0}},e}(),ut=new ae("AppId");function at(){return""+ct()+ct()+ct()}function ct(){return String.fromCharCode(97+Math.floor(25*Math.random()))}var lt=new ae("Platform Initializer"),dt=new ae("Platform ID"),ft=new ae("appBootstrapListener"),pt=function(){function e(){}return e.prototype.log=function(e){console.log(e)},e.prototype.warn=function(e){console.warn(e)},e}();function ht(){throw new Error("Runtime compiler is not loaded")}var vt=function(){function e(){}return e.prototype.compileModuleSync=function(e){throw ht()},e.prototype.compileModuleAsync=function(e){throw ht()},e.prototype.compileModuleAndAllComponentsSync=function(e){throw ht()},e.prototype.compileModuleAndAllComponentsAsync=function(e){throw ht()},e.prototype.clearCache=function(){},e.prototype.clearCacheFor=function(e){},e}(),yt=function(){},gt=function(){},mt=function(){};function bt(e){var t=Error("No component factory found for "+_e(e)+". Did you add it to @NgModule.entryComponents?");return t[Et]=e,t}var _t,wt,Et="ngComponent",Ct=function(){function e(){}return e.prototype.resolveComponentFactory=function(e){throw bt(e)},e}(),xt=function(){function e(){}return e.NULL=new Ct,e}(),Tt=function(){function e(e,t,n){this._parent=t,this._ngModule=n,this._factories=new Map;for(var r=0;r<e.length;r++){var o=e[r];this._factories.set(o.componentType,o)}}return e.prototype.resolveComponentFactory=function(e){var t=this._factories.get(e);if(!t&&this._parent&&(t=this._parent.resolveComponentFactory(e)),!t)throw bt(e);return new kt(t,this._ngModule)},e}(),kt=function(e){function t(t,n){var r=e.call(this)||this;return r.factory=t,r.ngModule=n,r.selector=t.selector,r.componentType=t.componentType,r.ngContentSelectors=t.ngContentSelectors,r.inputs=t.inputs,r.outputs=t.outputs,r}return o(t,e),t.prototype.create=function(e,t,n,r){return this.factory.create(e,t,n,r||this.ngModule)},t}(mt),It=function(){},St=function(){},Nt=function(){var e=he.wtf;return!(!e||!(_t=e.trace)||(wt=_t.events,0))}();function At(e,t){return null}var Dt=Nt?function(e,t){return void 0===t&&(t=null),wt.createScope(e,t)}:function(e,t){return At},Ot=Nt?function(e,t){return _t.leaveScope(e,t),t}:function(e,t){return t},Pt=function(e){function t(t){void 0===t&&(t=!1);var n=e.call(this)||this;return n.__isAsync=t,n}return o(t,e),t.prototype.emit=function(t){e.prototype.next.call(this,t)},t.prototype.subscribe=function(t,n,r){var o,i=function(e){return null},s=function(){return null};t&&"object"==typeof t?(o=this.__isAsync?function(e){setTimeout(function(){return t.next(e)})}:function(e){t.next(e)},t.error&&(i=this.__isAsync?function(e){setTimeout(function(){return t.error(e)})}:function(e){t.error(e)}),t.complete&&(s=this.__isAsync?function(){setTimeout(function(){return t.complete()})}:function(){t.complete()})):(o=this.__isAsync?function(e){setTimeout(function(){return t(e)})}:function(e){t(e)},n&&(i=this.__isAsync?function(e){setTimeout(function(){return n(e)})}:function(e){n(e)}),r&&(s=this.__isAsync?function(){setTimeout(function(){return r()})}:function(){r()}));var u=e.prototype.subscribe.call(this,o,i,s);return t instanceof w&&t.add(u),u},t}($),Rt=function(){function e(e){var t=e.enableLongStackTrace,n=void 0!==t&&t;if(this.hasPendingMicrotasks=!1,this.hasPendingMacrotasks=!1,this.isStable=!0,this.onUnstable=new Pt(!1),this.onMicrotaskEmpty=new Pt(!1),this.onStable=new Pt(!1),this.onError=new Pt(!1),"undefined"==typeof Zone)throw new Error("In this configuration Angular requires Zone.js");Zone.assertZonePatched(),this._nesting=0,this._outer=this._inner=Zone.current,Zone.wtfZoneSpec&&(this._inner=this._inner.fork(Zone.wtfZoneSpec)),Zone.TaskTrackingZoneSpec&&(this._inner=this._inner.fork(new Zone.TaskTrackingZoneSpec)),n&&Zone.longStackTraceZoneSpec&&(this._inner=this._inner.fork(Zone.longStackTraceZoneSpec)),function(e){e._inner=e._inner.fork({name:"angular",properties:{isAngularZone:!0},onInvokeTask:function(t,n,r,o,i,s){try{return Ht(e),t.invokeTask(r,o,i,s)}finally{Ft(e)}},onInvoke:function(t,n,r,o,i,s,u){try{return Ht(e),t.invoke(r,o,i,s,u)}finally{Ft(e)}},onHasTask:function(t,n,r,o){t.hasTask(r,o),n===r&&("microTask"==o.change?(e.hasPendingMicrotasks=o.microTask,jt(e)):"macroTask"==o.change&&(e.hasPendingMacrotasks=o.macroTask))},onHandleError:function(t,n,r,o){return t.handleError(r,o),e.runOutsideAngular(function(){return e.onError.emit(o)}),!1}})}(this)}return e.isInAngularZone=function(){return!0===Zone.current.get("isAngularZone")},e.assertInAngularZone=function(){if(!e.isInAngularZone())throw new Error("Expected to be in Angular Zone, but it is not!")},e.assertNotInAngularZone=function(){if(e.isInAngularZone())throw new Error("Expected to not be in Angular Zone, but it is!")},e.prototype.run=function(e,t,n){return this._inner.run(e,t,n)},e.prototype.runTask=function(e,t,n,r){var o=this._inner,i=o.scheduleEventTask("NgZoneEvent: "+r,e,Vt,Mt,Mt);try{return o.runTask(i,t,n)}finally{o.cancelTask(i)}},e.prototype.runGuarded=function(e,t,n){return this._inner.runGuarded(e,t,n)},e.prototype.runOutsideAngular=function(e){return this._outer.run(e)},e}();function Mt(){}var Vt={};function jt(e){if(0==e._nesting&&!e.hasPendingMicrotasks&&!e.isStable)try{e._nesting++,e.onMicrotaskEmpty.emit(null)}finally{if(e._nesting--,!e.hasPendingMicrotasks)try{e.runOutsideAngular(function(){return e.onStable.emit(null)})}finally{e.isStable=!0}}}function Ht(e){e._nesting++,e.isStable&&(e.isStable=!1,e.onUnstable.emit(null))}function Ft(e){e._nesting--,jt(e)}var Lt,Bt=function(){function e(){this.hasPendingMicrotasks=!1,this.hasPendingMacrotasks=!1,this.isStable=!0,this.onUnstable=new Pt,this.onMicrotaskEmpty=new Pt,this.onStable=new Pt,this.onError=new Pt}return e.prototype.run=function(e){return e()},e.prototype.runGuarded=function(e){return e()},e.prototype.runOutsideAngular=function(e){return e()},e.prototype.runTask=function(e){return e()},e}(),zt=function(){function e(e){var t=this;this._ngZone=e,this._pendingCount=0,this._isZoneStable=!0,this._didWork=!1,this._callbacks=[],this._watchAngularEvents(),e.run(function(){t.taskTrackingZone=Zone.current.get("TaskTrackingZone")})}return e.prototype._watchAngularEvents=function(){var e=this;this._ngZone.onUnstable.subscribe({next:function(){e._didWork=!0,e._isZoneStable=!1}}),this._ngZone.runOutsideAngular(function(){e._ngZone.onStable.subscribe({next:function(){Rt.assertNotInAngularZone(),me(function(){e._isZoneStable=!0,e._runCallbacksIfReady()})}})})},e.prototype.increasePendingRequestCount=function(){return this._pendingCount+=1,this._didWork=!0,this._pendingCount},e.prototype.decreasePendingRequestCount=function(){if(this._pendingCount-=1,this._pendingCount<0)throw new Error("pending async requests below zero");return this._runCallbacksIfReady(),this._pendingCount},e.prototype.isStable=function(){return this._isZoneStable&&0===this._pendingCount&&!this._ngZone.hasPendingMacrotasks},e.prototype._runCallbacksIfReady=function(){var e=this;if(this.isStable())me(function(){for(;0!==e._callbacks.length;){var t=e._callbacks.pop();clearTimeout(t.timeoutId),t.doneCb(e._didWork)}e._didWork=!1});else{var t=this.getPendingTasks();this._callbacks=this._callbacks.filter(function(e){return!e.updateCb||!e.updateCb(t)||(clearTimeout(e.timeoutId),!1)}),this._didWork=!0}},e.prototype.getPendingTasks=function(){return this.taskTrackingZone?this.taskTrackingZone.macroTasks.map(function(e){return{source:e.source,isPeriodic:e.data.isPeriodic,delay:e.data.delay,creationLocation:e.creationLocation,xhr:e.data.target}}):[]},e.prototype.addCallback=function(e,t,n){var r=this,o=-1;t&&t>0&&(o=setTimeout(function(){r._callbacks=r._callbacks.filter(function(e){return e.timeoutId!==o}),e(r._didWork,r.getPendingTasks())},t)),this._callbacks.push({doneCb:e,timeoutId:o,updateCb:n})},e.prototype.whenStable=function(e,t,n){if(n&&!this.taskTrackingZone)throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/dist/task-tracking.js" loaded?');this.addCallback(e,t,n),this._runCallbacksIfReady()},e.prototype.getPendingRequestCount=function(){return this._pendingCount},e.prototype.findProviders=function(e,t,n){return[]},e}(),Ut=function(){function e(){this._applications=new Map,Zt.addToWindow(this)}return e.prototype.registerApplication=function(e,t){this._applications.set(e,t)},e.prototype.unregisterApplication=function(e){this._applications.delete(e)},e.prototype.unregisterAllApplications=function(){this._applications.clear()},e.prototype.getTestability=function(e){return this._applications.get(e)||null},e.prototype.getAllTestabilities=function(){return Array.from(this._applications.values())},e.prototype.getAllRootElements=function(){return Array.from(this._applications.keys())},e.prototype.findTestabilityInTree=function(e,t){return void 0===t&&(t=!0),Zt.findTestabilityInTree(this,e,t)},e.ctorParameters=function(){return[]},e}(),Zt=new(function(){function e(){}return e.prototype.addToWindow=function(e){},e.prototype.findTestabilityInTree=function(e,t,n){return null},e}()),qt=!0,Qt=!1,Wt=new ae("AllowMultipleToken");function Kt(){return Qt=!0,qt}var Gt=function(e,t){this.name=e,this.token=t};function Yt(e,t,n){void 0===n&&(n=[]);var r="Platform: "+t,o=new ae(r);return function(t){void 0===t&&(t=[]);var i=Jt();if(!i||i.injector.get(Wt,!1))if(e)e(n.concat(t).concat({provide:o,useValue:!0}));else{var s=n.concat(t).concat({provide:o,useValue:!0});!function(e){if(Lt&&!Lt.destroyed&&!Lt.injector.get(Wt,!1))throw new Error("There can be only one platform. Destroy the previous one to create a new one.");Lt=e.get($t);var t=e.get(lt,null);t&&t.forEach(function(e){return e()})}(De.create({providers:s,name:r}))}return function(e){var t=Jt();if(!t)throw new Error("No platform exists!");if(!t.injector.get(e,null))throw new Error("A platform with a different configuration has been created. Please destroy it first.");return t}(o)}}function Jt(){return Lt&&!Lt.destroyed?Lt:null}var $t=function(){function e(e){this._injector=e,this._modules=[],this._destroyListeners=[],this._destroyed=!1}return e.prototype.bootstrapModuleFactory=function(e,t){var n=this,r=function(e){return"noop"===e?new Bt:("zone.js"===e?void 0:e)||new Rt({enableLongStackTrace:Kt()})}(t?t.ngZone:void 0),o=[{provide:Rt,useValue:r}];return r.run(function(){var t=De.create({providers:o,parent:n.injector,name:e.moduleType.name}),i=e.create(t),s=i.injector.get(nt,null);if(!s)throw new Error("No ErrorHandler. Is platform module (BrowserModule) included?");return i.onDestroy(function(){return tn(n._modules,i)}),r.runOutsideAngular(function(){return r.onError.subscribe({next:function(e){s.handleError(e)}})}),function(e,t,n){try{var r=n();return ot(r)?r.catch(function(n){throw t.runOutsideAngular(function(){return e.handleError(n)}),n}):r}catch(n){throw t.runOutsideAngular(function(){return e.handleError(n)}),n}}(s,r,function(){var e=i.injector.get(st);return e.runInitializers(),e.donePromise.then(function(){return n._moduleDoBootstrap(i),i})})})},e.prototype.bootstrapModule=function(e,t){var n=this;void 0===t&&(t=[]);var r=this.injector.get(yt),o=Xt({},t);return r.createCompiler([o]).compileModuleAsync(e).then(function(e){return n.bootstrapModuleFactory(e,o)})},e.prototype._moduleDoBootstrap=function(e){var t=e.injector.get(en);if(e._bootstrapComponents.length>0)e._bootstrapComponents.forEach(function(e){return t.bootstrap(e)});else{if(!e.instance.ngDoBootstrap)throw new Error("The module "+_e(e.instance.constructor)+' was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.');e.instance.ngDoBootstrap(t)}this._modules.push(e)},e.prototype.onDestroy=function(e){this._destroyListeners.push(e)},Object.defineProperty(e.prototype,"injector",{get:function(){return this._injector},enumerable:!0,configurable:!0}),e.prototype.destroy=function(){if(this._destroyed)throw new Error("The platform has already been destroyed!");this._modules.slice().forEach(function(e){return e.destroy()}),this._destroyListeners.forEach(function(e){return e()}),this._destroyed=!0},Object.defineProperty(e.prototype,"destroyed",{get:function(){return this._destroyed},enumerable:!0,configurable:!0}),e}();function Xt(e,t){return Array.isArray(t)?t.reduce(Xt,e):i({},e,t)}var en=function(){function e(e,t,n,r,o,i){var s=this;this._zone=e,this._console=t,this._injector=n,this._exceptionHandler=r,this._componentFactoryResolver=o,this._initStatus=i,this._bootstrapListeners=[],this._views=[],this._runningTick=!1,this._enforceNoNewChanges=!1,this._stable=!0,this.componentTypes=[],this.components=[],this._enforceNoNewChanges=Kt(),this._zone.onMicrotaskEmpty.subscribe({next:function(){s._zone.run(function(){s.tick()})}});var u=new S(function(e){s._stable=s._zone.isStable&&!s._zone.hasPendingMacrotasks&&!s._zone.hasPendingMicrotasks,s._zone.runOutsideAngular(function(){e.next(s._stable),e.complete()})}),a=new S(function(e){var t;s._zone.runOutsideAngular(function(){t=s._zone.onStable.subscribe(function(){Rt.assertNotInAngularZone(),me(function(){s._stable||s._zone.hasPendingMacrotasks||s._zone.hasPendingMicrotasks||(s._stable=!0,e.next(!0))})})});var n=s._zone.onUnstable.subscribe(function(){Rt.assertInAngularZone(),s._stable&&(s._stable=!1,s._zone.runOutsideAngular(function(){e.next(!1)}))});return function(){t.unsubscribe(),n.unsubscribe()}});this.isStable=K(u,a.pipe(function(e){return ee()(function(e,t){return function(t){var n;n="function"==typeof e?e:function(){return e};var r=Object.create(t,oe);return r.source=t,r.subjectFactory=n,r}}(se)(e))}))}return e.prototype.bootstrap=function(e,t){var n,r=this;if(!this._initStatus.done)throw new Error("Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.");n=e instanceof mt?e:this._componentFactoryResolver.resolveComponentFactory(e),this.componentTypes.push(n.componentType);var o=n instanceof kt?null:this._injector.get(It),i=t||n.selector,s=n.create(De.NULL,[],i,o);s.onDestroy(function(){r._unloadComponent(s)});var u=s.injector.get(zt,null);return u&&s.injector.get(Ut).registerApplication(s.location.nativeElement,u),this._loadComponent(s),Kt()&&this._console.log("Angular is running in the development mode. Call enableProdMode() to enable the production mode."),s},e.prototype.tick=function(){var t=this;if(this._runningTick)throw new Error("ApplicationRef.tick is called recursively");var n=e._tickScope();try{this._runningTick=!0,this._views.forEach(function(e){return e.detectChanges()}),this._enforceNoNewChanges&&this._views.forEach(function(e){return e.checkNoChanges()})}catch(e){this._zone.runOutsideAngular(function(){return t._exceptionHandler.handleError(e)})}finally{this._runningTick=!1,Ot(n)}},e.prototype.attachView=function(e){var t=e;this._views.push(t),t.attachToAppRef(this)},e.prototype.detachView=function(e){var t=e;tn(this._views,t),t.detachFromAppRef()},e.prototype._loadComponent=function(e){this.attachView(e.hostView),this.tick(),this.components.push(e),this._injector.get(ft,[]).concat(this._bootstrapListeners).forEach(function(t){return t(e)})},e.prototype._unloadComponent=function(e){this.detachView(e.hostView),tn(this.components,e)},e.prototype.ngOnDestroy=function(){this._views.slice().forEach(function(e){return e.destroy()})},Object.defineProperty(e.prototype,"viewCount",{get:function(){return this._views.length},enumerable:!0,configurable:!0}),e._tickScope=Dt("ApplicationRef#tick()"),e}();function tn(e,t){var n=e.indexOf(t);n>-1&&e.splice(n,1)}var nn=function(){},rn=function(){},on=function(e){return e[e.Important=1]="Important",e[e.DashCase=2]="DashCase",e}({}),sn=function(){},un=function(e){this.nativeElement=e},an=function(){function e(){this.dirty=!0,this._results=[],this.changes=new Pt,this.length=0}return e.prototype.map=function(e){return this._results.map(e)},e.prototype.filter=function(e){return this._results.filter(e)},e.prototype.find=function(e){return this._results.find(e)},e.prototype.reduce=function(e,t){return this._results.reduce(e,t)},e.prototype.forEach=function(e){this._results.forEach(e)},e.prototype.some=function(e){return this._results.some(e)},e.prototype.toArray=function(){return this._results.slice()},e.prototype[ge()]=function(){return this._results[ge()]()},e.prototype.toString=function(){return this._results.toString()},e.prototype.reset=function(e){this._results=function e(t){return t.reduce(function(t,n){var r=Array.isArray(n)?e(n):n;return t.concat(r)},[])}(e),this.dirty=!1,this.length=this._results.length,this.last=this._results[this.length-1],this.first=this._results[0]},e.prototype.notifyOnChanges=function(){this.changes.emit(this)},e.prototype.setDirty=function(){this.dirty=!0},e.prototype.destroy=function(){this.changes.complete(),this.changes.unsubscribe()},e}(),cn=function(){},ln=function(){},dn=function(){},fn=function(e,t){this.name=e,this.callback=t},pn=function(){function e(e,t,n){this._debugContext=n,this.nativeNode=e,t&&t instanceof hn?t.addChild(this):this.parent=null,this.listeners=[]}return Object.defineProperty(e.prototype,"injector",{get:function(){return this._debugContext.injector},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"componentInstance",{get:function(){return this._debugContext.component},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"context",{get:function(){return this._debugContext.context},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"references",{get:function(){return this._debugContext.references},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"providerTokens",{get:function(){return this._debugContext.providerTokens},enumerable:!0,configurable:!0}),e}(),hn=function(e){function t(t,n,r){var o=e.call(this,t,n,r)||this;return o.properties={},o.attributes={},o.classes={},o.styles={},o.childNodes=[],o.nativeElement=t,o}return o(t,e),t.prototype.addChild=function(e){e&&(this.childNodes.push(e),e.parent=this)},t.prototype.removeChild=function(e){var t=this.childNodes.indexOf(e);-1!==t&&(e.parent=null,this.childNodes.splice(t,1))},t.prototype.insertChildrenAfter=function(e,t){var n,r=this,o=this.childNodes.indexOf(e);-1!==o&&((n=this.childNodes).splice.apply(n,a([o+1,0],t)),t.forEach(function(e){e.parent&&e.parent.removeChild(e),e.parent=r}))},t.prototype.insertBefore=function(e,t){var n=this.childNodes.indexOf(e);-1===n?this.addChild(t):(t.parent&&t.parent.removeChild(t),t.parent=this,this.childNodes.splice(n,0,t))},t.prototype.query=function(e){return this.queryAll(e)[0]||null},t.prototype.queryAll=function(e){var t=[];return function e(t,n,r){t.childNodes.forEach(function(t){t instanceof hn&&(n(t)&&r.push(t),e(t,n,r))})}(this,e,t),t},t.prototype.queryAllNodes=function(e){var t=[];return function e(t,n,r){t instanceof hn&&t.childNodes.forEach(function(t){n(t)&&r.push(t),t instanceof hn&&e(t,n,r)})}(this,e,t),t},Object.defineProperty(t.prototype,"children",{get:function(){return this.childNodes.filter(function(e){return e instanceof t})},enumerable:!0,configurable:!0}),t.prototype.triggerEventHandler=function(e,t){this.listeners.forEach(function(n){n.name==e&&n.callback(t)})},t}(pn),vn=new Map;function yn(e){return vn.get(e)||null}function gn(e){vn.set(e.nativeNode,e)}function mn(e,t){var n=wn(e),r=wn(t);return n&&r?function(e,t,n){for(var r=e[ge()](),o=t[ge()]();;){var i=r.next(),s=o.next();if(i.done&&s.done)return!0;if(i.done||s.done)return!1;if(!n(i.value,s.value))return!1}}(e,t,mn):!(n||!e||"object"!=typeof e&&"function"!=typeof e||r||!t||"object"!=typeof t&&"function"!=typeof t)||be(e,t)}var bn=function(){function e(e){this.wrapped=e}return e.wrap=function(t){return new e(t)},e.unwrap=function(t){return e.isWrapped(t)?t.wrapped:t},e.isWrapped=function(t){return t instanceof e},e}(),_n=function(){function e(e,t,n){this.previousValue=e,this.currentValue=t,this.firstChange=n}return e.prototype.isFirstChange=function(){return this.firstChange},e}();function wn(e){return!!En(e)&&(Array.isArray(e)||!(e instanceof Map)&&ge()in e)}function En(e){return null!==e&&("function"==typeof e||"object"==typeof e)}var Cn=function(){function e(){}return e.prototype.supports=function(e){return wn(e)},e.prototype.create=function(e){return new Tn(e)},e}(),xn=function(e,t){return t},Tn=function(){function e(e){this.length=0,this._linkedRecords=null,this._unlinkedRecords=null,this._previousItHead=null,this._itHead=null,this._itTail=null,this._additionsHead=null,this._additionsTail=null,this._movesHead=null,this._movesTail=null,this._removalsHead=null,this._removalsTail=null,this._identityChangesHead=null,this._identityChangesTail=null,this._trackByFn=e||xn}return e.prototype.forEachItem=function(e){var t;for(t=this._itHead;null!==t;t=t._next)e(t)},e.prototype.forEachOperation=function(e){for(var t=this._itHead,n=this._removalsHead,r=0,o=null;t||n;){var i=!n||t&&t.currentIndex<Nn(n,r,o)?t:n,s=Nn(i,r,o),u=i.currentIndex;if(i===n)r--,n=n._nextRemoved;else if(t=t._next,null==i.previousIndex)r++;else{o||(o=[]);var a=s-r,c=u-r;if(a!=c){for(var l=0;l<a;l++){var d=l<o.length?o[l]:o[l]=0,f=d+l;c<=f&&f<a&&(o[l]=d+1)}o[i.previousIndex]=c-a}}s!==u&&e(i,s,u)}},e.prototype.forEachPreviousItem=function(e){var t;for(t=this._previousItHead;null!==t;t=t._nextPrevious)e(t)},e.prototype.forEachAddedItem=function(e){var t;for(t=this._additionsHead;null!==t;t=t._nextAdded)e(t)},e.prototype.forEachMovedItem=function(e){var t;for(t=this._movesHead;null!==t;t=t._nextMoved)e(t)},e.prototype.forEachRemovedItem=function(e){var t;for(t=this._removalsHead;null!==t;t=t._nextRemoved)e(t)},e.prototype.forEachIdentityChange=function(e){var t;for(t=this._identityChangesHead;null!==t;t=t._nextIdentityChange)e(t)},e.prototype.diff=function(e){if(null==e&&(e=[]),!wn(e))throw new Error("Error trying to diff '"+_e(e)+"'. Only arrays and iterables are allowed");return this.check(e)?this:null},e.prototype.onDestroy=function(){},e.prototype.check=function(e){var t=this;this._reset();var n,r,o,i=this._itHead,s=!1;if(Array.isArray(e)){this.length=e.length;for(var u=0;u<this.length;u++)r=e[u],o=this._trackByFn(u,r),null!==i&&be(i.trackById,o)?(s&&(i=this._verifyReinsertion(i,r,o,u)),be(i.item,r)||this._addIdentityChange(i,r)):(i=this._mismatch(i,r,o,u),s=!0),i=i._next}else n=0,function(e,t){if(Array.isArray(e))for(var n=0;n<e.length;n++)t(e[n]);else for(var r=e[ge()](),o=void 0;!(o=r.next()).done;)t(o.value)}(e,function(e){o=t._trackByFn(n,e),null!==i&&be(i.trackById,o)?(s&&(i=t._verifyReinsertion(i,e,o,n)),be(i.item,e)||t._addIdentityChange(i,e)):(i=t._mismatch(i,e,o,n),s=!0),i=i._next,n++}),this.length=n;return this._truncate(i),this.collection=e,this.isDirty},Object.defineProperty(e.prototype,"isDirty",{get:function(){return null!==this._additionsHead||null!==this._movesHead||null!==this._removalsHead||null!==this._identityChangesHead},enumerable:!0,configurable:!0}),e.prototype._reset=function(){if(this.isDirty){var e=void 0,t=void 0;for(e=this._previousItHead=this._itHead;null!==e;e=e._next)e._nextPrevious=e._next;for(e=this._additionsHead;null!==e;e=e._nextAdded)e.previousIndex=e.currentIndex;for(this._additionsHead=this._additionsTail=null,e=this._movesHead;null!==e;e=t)e.previousIndex=e.currentIndex,t=e._nextMoved;this._movesHead=this._movesTail=null,this._removalsHead=this._removalsTail=null,this._identityChangesHead=this._identityChangesTail=null}},e.prototype._mismatch=function(e,t,n,r){var o;return null===e?o=this._itTail:(o=e._prev,this._remove(e)),null!==(e=null===this._linkedRecords?null:this._linkedRecords.get(n,r))?(be(e.item,t)||this._addIdentityChange(e,t),this._moveAfter(e,o,r)):null!==(e=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null))?(be(e.item,t)||this._addIdentityChange(e,t),this._reinsertAfter(e,o,r)):e=this._addAfter(new kn(t,n),o,r),e},e.prototype._verifyReinsertion=function(e,t,n,r){var o=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null);return null!==o?e=this._reinsertAfter(o,e._prev,r):e.currentIndex!=r&&(e.currentIndex=r,this._addToMoves(e,r)),e},e.prototype._truncate=function(e){for(;null!==e;){var t=e._next;this._addToRemovals(this._unlink(e)),e=t}null!==this._unlinkedRecords&&this._unlinkedRecords.clear(),null!==this._additionsTail&&(this._additionsTail._nextAdded=null),null!==this._movesTail&&(this._movesTail._nextMoved=null),null!==this._itTail&&(this._itTail._next=null),null!==this._removalsTail&&(this._removalsTail._nextRemoved=null),null!==this._identityChangesTail&&(this._identityChangesTail._nextIdentityChange=null)},e.prototype._reinsertAfter=function(e,t,n){null!==this._unlinkedRecords&&this._unlinkedRecords.remove(e);var r=e._prevRemoved,o=e._nextRemoved;return null===r?this._removalsHead=o:r._nextRemoved=o,null===o?this._removalsTail=r:o._prevRemoved=r,this._insertAfter(e,t,n),this._addToMoves(e,n),e},e.prototype._moveAfter=function(e,t,n){return this._unlink(e),this._insertAfter(e,t,n),this._addToMoves(e,n),e},e.prototype._addAfter=function(e,t,n){return this._insertAfter(e,t,n),null===this._additionsTail?this._additionsTail=this._additionsHead=e:this._additionsTail=this._additionsTail._nextAdded=e,e},e.prototype._insertAfter=function(e,t,n){var r=null===t?this._itHead:t._next;return e._next=r,e._prev=t,null===r?this._itTail=e:r._prev=e,null===t?this._itHead=e:t._next=e,null===this._linkedRecords&&(this._linkedRecords=new Sn),this._linkedRecords.put(e),e.currentIndex=n,e},e.prototype._remove=function(e){return this._addToRemovals(this._unlink(e))},e.prototype._unlink=function(e){null!==this._linkedRecords&&this._linkedRecords.remove(e);var t=e._prev,n=e._next;return null===t?this._itHead=n:t._next=n,null===n?this._itTail=t:n._prev=t,e},e.prototype._addToMoves=function(e,t){return e.previousIndex===t?e:(null===this._movesTail?this._movesTail=this._movesHead=e:this._movesTail=this._movesTail._nextMoved=e,e)},e.prototype._addToRemovals=function(e){return null===this._unlinkedRecords&&(this._unlinkedRecords=new Sn),this._unlinkedRecords.put(e),e.currentIndex=null,e._nextRemoved=null,null===this._removalsTail?(this._removalsTail=this._removalsHead=e,e._prevRemoved=null):(e._prevRemoved=this._removalsTail,this._removalsTail=this._removalsTail._nextRemoved=e),e},e.prototype._addIdentityChange=function(e,t){return e.item=t,null===this._identityChangesTail?this._identityChangesTail=this._identityChangesHead=e:this._identityChangesTail=this._identityChangesTail._nextIdentityChange=e,e},e}(),kn=function(e,t){this.item=e,this.trackById=t,this.currentIndex=null,this.previousIndex=null,this._nextPrevious=null,this._prev=null,this._next=null,this._prevDup=null,this._nextDup=null,this._prevRemoved=null,this._nextRemoved=null,this._nextAdded=null,this._nextMoved=null,this._nextIdentityChange=null},In=function(){function e(){this._head=null,this._tail=null}return e.prototype.add=function(e){null===this._head?(this._head=this._tail=e,e._nextDup=null,e._prevDup=null):(this._tail._nextDup=e,e._prevDup=this._tail,e._nextDup=null,this._tail=e)},e.prototype.get=function(e,t){var n;for(n=this._head;null!==n;n=n._nextDup)if((null===t||t<=n.currentIndex)&&be(n.trackById,e))return n;return null},e.prototype.remove=function(e){var t=e._prevDup,n=e._nextDup;return null===t?this._head=n:t._nextDup=n,null===n?this._tail=t:n._prevDup=t,null===this._head},e}(),Sn=function(){function e(){this.map=new Map}return e.prototype.put=function(e){var t=e.trackById,n=this.map.get(t);n||(n=new In,this.map.set(t,n)),n.add(e)},e.prototype.get=function(e,t){var n=e,r=this.map.get(n);return r?r.get(e,t):null},e.prototype.remove=function(e){var t=e.trackById;return this.map.get(t).remove(e)&&this.map.delete(t),e},Object.defineProperty(e.prototype,"isEmpty",{get:function(){return 0===this.map.size},enumerable:!0,configurable:!0}),e.prototype.clear=function(){this.map.clear()},e}();function Nn(e,t,n){var r=e.previousIndex;if(null===r)return r;var o=0;return n&&r<n.length&&(o=n[r]),r+t+o}var An=function(){function e(){}return e.prototype.supports=function(e){return e instanceof Map||En(e)},e.prototype.create=function(){return new Dn},e}(),Dn=function(){function e(){this._records=new Map,this._mapHead=null,this._appendAfter=null,this._previousMapHead=null,this._changesHead=null,this._changesTail=null,this._additionsHead=null,this._additionsTail=null,this._removalsHead=null,this._removalsTail=null}return Object.defineProperty(e.prototype,"isDirty",{get:function(){return null!==this._additionsHead||null!==this._changesHead||null!==this._removalsHead},enumerable:!0,configurable:!0}),e.prototype.forEachItem=function(e){var t;for(t=this._mapHead;null!==t;t=t._next)e(t)},e.prototype.forEachPreviousItem=function(e){var t;for(t=this._previousMapHead;null!==t;t=t._nextPrevious)e(t)},e.prototype.forEachChangedItem=function(e){var t;for(t=this._changesHead;null!==t;t=t._nextChanged)e(t)},e.prototype.forEachAddedItem=function(e){var t;for(t=this._additionsHead;null!==t;t=t._nextAdded)e(t)},e.prototype.forEachRemovedItem=function(e){var t;for(t=this._removalsHead;null!==t;t=t._nextRemoved)e(t)},e.prototype.diff=function(e){if(e){if(!(e instanceof Map||En(e)))throw new Error("Error trying to diff '"+_e(e)+"'. Only maps and objects are allowed")}else e=new Map;return this.check(e)?this:null},e.prototype.onDestroy=function(){},e.prototype.check=function(e){var t=this;this._reset();var n=this._mapHead;if(this._appendAfter=null,this._forEach(e,function(e,r){if(n&&n.key===r)t._maybeAddToChanges(n,e),t._appendAfter=n,n=n._next;else{var o=t._getOrCreateRecordForKey(r,e);n=t._insertBeforeOrAppend(n,o)}}),n){n._prev&&(n._prev._next=null),this._removalsHead=n;for(var r=n;null!==r;r=r._nextRemoved)r===this._mapHead&&(this._mapHead=null),this._records.delete(r.key),r._nextRemoved=r._next,r.previousValue=r.currentValue,r.currentValue=null,r._prev=null,r._next=null}return this._changesTail&&(this._changesTail._nextChanged=null),this._additionsTail&&(this._additionsTail._nextAdded=null),this.isDirty},e.prototype._insertBeforeOrAppend=function(e,t){if(e){var n=e._prev;return t._next=e,t._prev=n,e._prev=t,n&&(n._next=t),e===this._mapHead&&(this._mapHead=t),this._appendAfter=e,e}return this._appendAfter?(this._appendAfter._next=t,t._prev=this._appendAfter):this._mapHead=t,this._appendAfter=t,null},e.prototype._getOrCreateRecordForKey=function(e,t){if(this._records.has(e)){var n=this._records.get(e);this._maybeAddToChanges(n,t);var r=n._prev,o=n._next;return r&&(r._next=o),o&&(o._prev=r),n._next=null,n._prev=null,n}var i=new On(e);return this._records.set(e,i),i.currentValue=t,this._addToAdditions(i),i},e.prototype._reset=function(){if(this.isDirty){var e=void 0;for(this._previousMapHead=this._mapHead,e=this._previousMapHead;null!==e;e=e._next)e._nextPrevious=e._next;for(e=this._changesHead;null!==e;e=e._nextChanged)e.previousValue=e.currentValue;for(e=this._additionsHead;null!=e;e=e._nextAdded)e.previousValue=e.currentValue;this._changesHead=this._changesTail=null,this._additionsHead=this._additionsTail=null,this._removalsHead=null}},e.prototype._maybeAddToChanges=function(e,t){be(t,e.currentValue)||(e.previousValue=e.currentValue,e.currentValue=t,this._addToChanges(e))},e.prototype._addToAdditions=function(e){null===this._additionsHead?this._additionsHead=this._additionsTail=e:(this._additionsTail._nextAdded=e,this._additionsTail=e)},e.prototype._addToChanges=function(e){null===this._changesHead?this._changesHead=this._changesTail=e:(this._changesTail._nextChanged=e,this._changesTail=e)},e.prototype._forEach=function(e,t){e instanceof Map?e.forEach(t):Object.keys(e).forEach(function(n){return t(e[n],n)})},e}(),On=function(e){this.key=e,this.previousValue=null,this.currentValue=null,this._nextPrevious=null,this._next=null,this._prev=null,this._nextAdded=null,this._nextRemoved=null,this._nextChanged=null},Pn=function(){function e(e){this.factories=e}return e.create=function(t,n){if(null!=n){var r=n.factories.slice();t=t.concat(r)}return new e(t)},e.extend=function(t){return{provide:e,useFactory:function(n){if(!n)throw new Error("Cannot extend IterableDiffers without a parent injector");return e.create(t,n)},deps:[[e,new ke,new xe]]}},e.prototype.find=function(e){var t=this.factories.find(function(t){return t.supports(e)});if(null!=t)return t;throw new Error("Cannot find a differ supporting object '"+e+"' of type '"+function(e){return e.name||typeof e}(e)+"'")},e.ngInjectableDef=ue({providedIn:"root",factory:function(){return new e([new Cn])}}),e}(),Rn=function(){function e(e){this.factories=e}return e.create=function(t,n){if(n){var r=n.factories.slice();t=t.concat(r)}return new e(t)},e.extend=function(t){return{provide:e,useFactory:function(n){if(!n)throw new Error("Cannot extend KeyValueDiffers without a parent injector");return e.create(t,n)},deps:[[e,new ke,new xe]]}},e.prototype.find=function(e){var t=this.factories.find(function(t){return t.supports(e)});if(t)return t;throw new Error("Cannot find a differ supporting object '"+e+"'")},e}(),Mn=[new An],Vn=new Pn([new Cn]),jn=new Rn(Mn),Hn=Yt(null,"core",[{provide:dt,useValue:"unknown"},{provide:$t,deps:[De]},{provide:Ut,deps:[]},{provide:pt,deps:[]}]),Fn=new ae("LocaleId");function Ln(){return Vn}function Bn(){return jn}function zn(e){return e||"en-US"}var Un=function(e){},Zn=function(){function e(e){if(this.defaultDoc=e,this.inertDocument=this.defaultDoc.implementation.createHTMLDocument("sanitization-inert"),this.inertBodyElement=this.inertDocument.body,null==this.inertBodyElement){var t=this.inertDocument.createElement("html");this.inertDocument.appendChild(t),this.inertBodyElement=this.inertDocument.createElement("body"),t.appendChild(this.inertBodyElement)}this.inertBodyElement.innerHTML='<svg><g onload="this.parentNode.remove()"></g></svg>',!this.inertBodyElement.querySelector||this.inertBodyElement.querySelector("svg")?(this.inertBodyElement.innerHTML='<svg><p><style><img src="</style><img src=x onerror=alert(1)//">',this.inertBodyElement.querySelector&&this.inertBodyElement.querySelector("svg img")&&function(){try{return!!window.DOMParser}catch(e){return!1}}()?this.getInertBodyElement=this.getInertBodyElement_DOMParser:this.getInertBodyElement=this.getInertBodyElement_InertDocument):this.getInertBodyElement=this.getInertBodyElement_XHR}return e.prototype.getInertBodyElement_XHR=function(e){e="<body><remove></remove>"+e+"</body>";try{e=encodeURI(e)}catch(e){return null}var t=new XMLHttpRequest;t.responseType="document",t.open("GET","data:text/html;charset=utf-8,"+e,!1),t.send(null);var n=t.response.body;return n.removeChild(n.firstChild),n},e.prototype.getInertBodyElement_DOMParser=function(e){e="<body><remove></remove>"+e+"</body>";try{var t=(new window.DOMParser).parseFromString(e,"text/html").body;return t.removeChild(t.firstChild),t}catch(e){return null}},e.prototype.getInertBodyElement_InertDocument=function(e){var t=this.inertDocument.createElement("template");return"content"in t?(t.innerHTML=e,t):(this.inertBodyElement.innerHTML=e,this.defaultDoc.documentMode&&this.stripCustomNsAttrs(this.inertBodyElement),this.inertBodyElement)},e.prototype.stripCustomNsAttrs=function(e){for(var t=e.attributes,n=t.length-1;0<n;n--){var r=t.item(n).name;"xmlns:ns1"!==r&&0!==r.indexOf("ns1:")||e.removeAttribute(r)}for(var o=e.firstChild;o;)o.nodeType===Node.ELEMENT_NODE&&this.stripCustomNsAttrs(o),o=o.nextSibling},e}(),qn=/^(?:(?:https?|mailto|ftp|tel|file):|[^&:\/?#]*(?:[\/?#]|$))/gi,Qn=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;function Wn(e){return(e=String(e)).match(qn)||e.match(Qn)?e:(Kt()&&console.warn("WARNING: sanitizing unsafe URL value "+e+" (see http://g.co/ng/security#xss)"),"unsafe:"+e)}function Kn(e){return(e=String(e)).split(",").map(function(e){return Wn(e.trim())}).join(", ")}function Gn(e){var t,n,r={};try{for(var o=s(e.split(",")),i=o.next();!i.done;i=o.next())r[i.value]=!0}catch(e){t={error:e}}finally{try{i&&!i.done&&(n=o.return)&&n.call(o)}finally{if(t)throw t.error}}return r}function Yn(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var n,r,o={};try{for(var i=s(e),u=i.next();!u.done;u=i.next()){var a=u.value;for(var c in a)a.hasOwnProperty(c)&&(o[c]=!0)}}catch(e){n={error:e}}finally{try{u&&!u.done&&(r=i.return)&&r.call(i)}finally{if(n)throw n.error}}return o}var Jn,$n=Gn("area,br,col,hr,img,wbr"),Xn=Gn("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),er=Gn("rp,rt"),tr=Yn(er,Xn),nr=Yn($n,Yn(Xn,Gn("address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul")),Yn(er,Gn("a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video")),tr),rr=Gn("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),or=Gn("srcset"),ir=Yn(rr,or,Gn("abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width")),sr=function(){function e(){this.sanitizedSomething=!1,this.buf=[]}return e.prototype.sanitizeChildren=function(e){for(var t=e.firstChild;t;)if(t.nodeType===Node.ELEMENT_NODE?this.startElement(t):t.nodeType===Node.TEXT_NODE?this.chars(t.nodeValue):this.sanitizedSomething=!0,t.firstChild)t=t.firstChild;else for(;t;){t.nodeType===Node.ELEMENT_NODE&&this.endElement(t);var n=this.checkClobberedElement(t,t.nextSibling);if(n){t=n;break}t=this.checkClobberedElement(t,t.parentNode)}return this.buf.join("")},e.prototype.startElement=function(e){var t=e.nodeName.toLowerCase();if(nr.hasOwnProperty(t)){this.buf.push("<"),this.buf.push(t);for(var n=e.attributes,r=0;r<n.length;r++){var o=n.item(r),i=o.name,s=i.toLowerCase();if(ir.hasOwnProperty(s)){var u=o.value;rr[s]&&(u=Wn(u)),or[s]&&(u=Kn(u)),this.buf.push(" ",i,'="',cr(u),'"')}else this.sanitizedSomething=!0}this.buf.push(">")}else this.sanitizedSomething=!0},e.prototype.endElement=function(e){var t=e.nodeName.toLowerCase();nr.hasOwnProperty(t)&&!$n.hasOwnProperty(t)&&(this.buf.push("</"),this.buf.push(t),this.buf.push(">"))},e.prototype.chars=function(e){this.buf.push(cr(e))},e.prototype.checkClobberedElement=function(e,t){if(t&&(e.compareDocumentPosition(t)&Node.DOCUMENT_POSITION_CONTAINED_BY)===Node.DOCUMENT_POSITION_CONTAINED_BY)throw new Error("Failed to sanitize html because the element is clobbered: "+e.outerHTML);return t},e}(),ur=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,ar=/([^\#-~ |!])/g;function cr(e){return e.replace(/&/g,"&amp;").replace(ur,function(e){return"&#"+(1024*(e.charCodeAt(0)-55296)+(e.charCodeAt(1)-56320)+65536)+";"}).replace(ar,function(e){return"&#"+e.charCodeAt(0)+";"}).replace(/</g,"&lt;").replace(/>/g,"&gt;")}function lr(e){return"content"in e&&function(e){return e.nodeType===Node.ELEMENT_NODE&&"TEMPLATE"===e.nodeName}(e)?e.content:null}var dr=new RegExp("^([-,.\"'%_!# a-zA-Z0-9]+|(?:(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?|(?:rgb|hsl)a?|(?:repeating-)?(?:linear|radial)-gradient|(?:calc|attr))\\([-0-9.%, #a-zA-Z]+\\))$","g"),fr=/^url\(([^)]+)\)$/;var pr=function(e){return e[e.NONE=0]="NONE",e[e.HTML=1]="HTML",e[e.STYLE=2]="STYLE",e[e.SCRIPT=3]="SCRIPT",e[e.URL=4]="URL",e[e.RESOURCE_URL=5]="RESOURCE_URL",e}({}),hr=function(){};function vr(e,t,n){var r=e.state,o=1792&r;return o===t?(e.state=-1793&r|n,e.initIndex=-1,!0):o===n}function yr(e,t,n){return(1792&e.state)===t&&e.initIndex<=n&&(e.initIndex=n+1,!0)}function gr(e,t){return e.nodes[t]}function mr(e,t){return e.nodes[t]}function br(e,t){return e.nodes[t]}function _r(e,t){return e.nodes[t]}function wr(e,t){return e.nodes[t]}var Er={setCurrentNode:void 0,createRootView:void 0,createEmbeddedView:void 0,createComponentView:void 0,createNgModuleRef:void 0,overrideProvider:void 0,overrideComponentView:void 0,clearOverrides:void 0,checkAndUpdateView:void 0,checkNoChangesView:void 0,destroyView:void 0,resolveDep:void 0,createDebugContext:void 0,handleEvent:void 0,updateDirectives:void 0,updateRenderer:void 0,dirtyParentQueries:void 0};function Cr(e,t,n,r){var o="ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '"+t+"'. Current value: '"+n+"'.";return r&&(o+=" It seems like the view has been created after its parent and its children have been dirty checked. Has it been created in a change detection hook ?"),function(e,t){var n=new Error(o);return xr(n,t),n}(0,e)}function xr(e,t){e[Ye]=t,e[$e]=t.logError.bind(t)}function Tr(e){return new Error("ViewDestroyedError: Attempt to use a destroyed view: "+e)}var kr=function(){},Ir=new Map;function Sr(e){var t=Ir.get(e);return t||(t=_e(e)+"_"+Ir.size,Ir.set(e,t)),t}var Nr="$$undefined",Ar="$$empty",Dr=0;function Or(e,t,n,r){var o=e.oldValues;return!(!(2&e.state)&&be(o[t.bindingIndex+n],r))}function Pr(e,t,n,r){return!!Or(e,t,n,r)&&(e.oldValues[t.bindingIndex+n]=r,!0)}function Rr(e,t,n,r){var o=e.oldValues[t.bindingIndex+n];if(1&e.state||!mn(o,r)){var i=t.bindings[n].name;throw Cr(Er.createDebugContext(e,t.nodeIndex),i+": "+o,i+": "+r,0!=(1&e.state))}}function Mr(e){for(var t=e;t;)2&t.def.flags&&(t.state|=8),t=t.viewContainerParent||t.parent}function Vr(e,t){for(var n=e;n&&n!==t;)n.state|=64,n=n.viewContainerParent||n.parent}function jr(e,t,n,r){try{return Mr(33554432&e.def.nodes[t].flags?mr(e,t).componentView:e),Er.handleEvent(e,t,n,r)}catch(t){e.root.errorHandler.handleError(t)}}function Hr(e){return e.parent?mr(e.parent,e.parentNodeDef.nodeIndex):null}function Fr(e){return e.parent?e.parentNodeDef.parent:null}function Lr(e,t){switch(201347067&t.flags){case 1:return mr(e,t.nodeIndex).renderElement;case 2:return gr(e,t.nodeIndex).renderText}}function Br(e,t){return e?e+":"+t:t}function zr(e){return!!e.parent&&!!(32768&e.parentNodeDef.flags)}function Ur(e){return!(!e.parent||32768&e.parentNodeDef.flags)}function Zr(e){var t={},n=0,r={};return e&&e.forEach(function(e){var o=u(e,2),i=o[0],s=o[1];"number"==typeof i?(t[i]=s,n|=function(e){return 1<<e%32}(i)):r[i]=s}),{matchedQueries:t,references:r,matchedQueryIds:n}}function qr(e,t){return e.map(function(e){var n,r,o;return Array.isArray(e)?(r=(o=u(e,2))[0],n=o[1]):(r=0,n=e),n&&("function"==typeof n||"object"==typeof n)&&t&&Object.defineProperty(n,Ie,{value:t,configurable:!0}),{flags:r,token:n,tokenKey:Sr(n)}})}function Qr(e,t,n){var r=n.renderParent;return r?0==(1&r.flags)||0==(33554432&r.flags)||r.element.componentRendererType&&r.element.componentRendererType.encapsulation===Ke.Native?mr(e,n.renderParent.nodeIndex).renderElement:void 0:t}var Wr=new WeakMap;function Kr(e){var t=Wr.get(e);return t||((t=e(function(){return kr})).factory=e,Wr.set(e,t)),t}function Gr(e,t,n,r,o){3===t&&(n=e.renderer.parentNode(Lr(e,e.def.lastRenderRootNode))),Yr(e,t,0,e.def.nodes.length-1,n,r,o)}function Yr(e,t,n,r,o,i,s){for(var u=n;u<=r;u++){var a=e.def.nodes[u];11&a.flags&&$r(e,a,t,o,i,s),u+=a.childCount}}function Jr(e,t,n,r,o,i){for(var s=e;s&&!zr(s);)s=s.parent;for(var u=s.parent,a=Fr(s),c=a.nodeIndex+1,l=a.nodeIndex+a.childCount,d=c;d<=l;d++){var f=u.def.nodes[d];f.ngContentIndex===t&&$r(u,f,n,r,o,i),d+=f.childCount}if(!u.parent){var p=e.root.projectableNodes[t];if(p)for(d=0;d<p.length;d++)Xr(e,p[d],n,r,o,i)}}function $r(e,t,n,r,o,i){if(8&t.flags)Jr(e,t.ngContent.index,n,r,o,i);else{var s=Lr(e,t);if(3===n&&33554432&t.flags&&48&t.bindingFlags?(16&t.bindingFlags&&Xr(e,s,n,r,o,i),32&t.bindingFlags&&Xr(mr(e,t.nodeIndex).componentView,s,n,r,o,i)):Xr(e,s,n,r,o,i),16777216&t.flags)for(var u=mr(e,t.nodeIndex).viewContainer._embeddedViews,a=0;a<u.length;a++)Gr(u[a],n,r,o,i);1&t.flags&&!t.element.name&&Yr(e,n,t.nodeIndex+1,t.nodeIndex+t.childCount,r,o,i)}}function Xr(e,t,n,r,o,i){var s=e.renderer;switch(n){case 1:s.appendChild(r,t);break;case 2:s.insertBefore(r,t,o);break;case 3:s.removeChild(r,t);break;case 0:i.push(t)}}var eo=/^:([^:]+):(.+)$/;function to(e){if(":"===e[0]){var t=e.match(eo);return[t[1],t[2]]}return["",e]}function no(e){for(var t=0,n=0;n<e.length;n++)t|=e[n].flags;return t}function ro(e,t,n,r,o,i,s,a,c,l,d,f){void 0===s&&(s=[]),l||(l=kr);var p=Zr(n),h=p.matchedQueries,v=p.references,y=p.matchedQueryIds,g=null,m=null;i&&(g=(R=u(to(i),2))[0],m=R[1]),a=a||[];for(var b=new Array(a.length),_=0;_<a.length;_++){var w=u(a[_],3),E=w[0],C=w[1],x=w[2],T=u(to(C),2),k=T[0],I=T[1],S=void 0,N=void 0;switch(15&E){case 4:N=x;break;case 1:case 8:S=x}b[_]={flags:E,ns:k,name:I,nonMinifiedName:I,securityContext:S,suffix:N}}c=c||[];var A=new Array(c.length);for(_=0;_<c.length;_++){var D=u(c[_],2),O=D[0],P=D[1];A[_]={type:0,target:O,eventName:P,propName:null}}var R,M=(s=s||[]).map(function(e){var t=u(e,2),n=t[0],r=t[1],o=u(to(n),2);return[o[0],o[1],r]});return f=function(e){if(e&&e.id===Nr){var t=null!=e.encapsulation&&e.encapsulation!==Ke.None||e.styles.length||Object.keys(e.data).length;e.id=t?"c"+Dr++:Ar}return e&&e.id===Ar&&(e=null),e||null}(f),d&&(t|=33554432),{nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,checkIndex:e,flags:t|=1,childFlags:0,directChildFlags:0,childMatchedQueries:0,matchedQueries:h,matchedQueryIds:y,references:v,ngContentIndex:r,childCount:o,bindings:b,bindingFlags:no(b),outputs:A,element:{ns:g,name:m,attrs:M,template:null,componentProvider:null,componentView:d||null,componentRendererType:f,publicProviders:null,allProviders:null,handleEvent:l||kr},provider:null,text:null,query:null,ngContent:null}}function oo(e,t,n){var r,o=n.element,i=e.root.selectorOrNode,s=e.renderer;if(e.parent||!i){r=o.name?s.createElement(o.name,o.ns):s.createComment("");var a=Qr(e,t,n);a&&s.appendChild(a,r)}else r=s.selectRootElement(i);if(o.attrs)for(var c=0;c<o.attrs.length;c++){var l=u(o.attrs[c],3),d=l[0],f=l[1],p=l[2];s.setAttribute(r,f,p,d)}return r}function io(e,t,n,r){for(var o=0;o<n.outputs.length;o++){var i=n.outputs[o],s=so(e,n.nodeIndex,Br(i.target,i.eventName)),u=i.target,a=e;"component"===i.target&&(u=null,a=t);var c=a.renderer.listen(u||r,i.eventName,s);e.disposables[n.outputIndex+o]=c}}function so(e,t,n){return function(r){return jr(e,t,n,r)}}function uo(e,t,n,r){if(!Pr(e,t,n,r))return!1;var o=t.bindings[n],i=mr(e,t.nodeIndex),s=i.renderElement,u=o.name;switch(15&o.flags){case 1:!function(e,t,n,r,o,i){var s=t.securityContext,u=s?e.root.sanitizer.sanitize(s,i):i;u=null!=u?u.toString():null;var a=e.renderer;null!=i?a.setAttribute(n,o,u,r):a.removeAttribute(n,o,r)}(e,o,s,o.ns,u,r);break;case 2:!function(e,t,n,r){var o=e.renderer;r?o.addClass(t,n):o.removeClass(t,n)}(e,s,u,r);break;case 4:!function(e,t,n,r,o){var i=e.root.sanitizer.sanitize(pr.STYLE,o);if(null!=i){i=i.toString();var s=t.suffix;null!=s&&(i+=s)}else i=null;var u=e.renderer;null!=i?u.setStyle(n,r,i):u.removeStyle(n,r)}(e,o,s,u,r);break;case 8:!function(e,t,n,r,o){var i=t.securityContext,s=i?e.root.sanitizer.sanitize(i,o):o;e.renderer.setProperty(n,r,s)}(33554432&t.flags&&32&o.flags?i.componentView:e,o,s,u,r)}return!0}var ao=new Object,co=Sr(De),lo=Sr(Ne),fo=Sr(It);function po(e,t,n,r){return n=Ee(n),{index:-1,deps:qr(r,_e(t)),flags:e,token:t,value:n}}function ho(e,t,n){void 0===n&&(n=De.THROW_IF_NOT_FOUND);var r=We(e);try{if(8&t.flags)return t.token;if(2&t.flags&&(n=null),1&t.flags)return e._parent.get(t.token,n);var o=t.tokenKey;switch(o){case co:case lo:case fo:return e}var i=e._def.providersByKey[o];if(i){var s=e._providers[i.index];return void 0===s&&(s=e._providers[i.index]=vo(e,i)),s===ao?void 0:s}if(t.token.ngInjectableDef&&function(e,t){return null!=t.providedIn&&(function(e,t){return e._def.modules.indexOf(t)>-1}(e,t.providedIn)||"root"===t.providedIn&&e._def.isRoot)}(e,t.token.ngInjectableDef)){var u=t.token.ngInjectableDef,a=e._providers.length;return e._def.providersByKey[t.tokenKey]={flags:5120,value:u.factory,deps:[],index:a,token:t.token},e._providers[a]=ao,e._providers[a]=vo(e,e._def.providersByKey[t.tokenKey])}return 4&t.flags?n:e._parent.get(t.token,n)}finally{We(r)}}function vo(e,t){var n;switch(201347067&t.flags){case 512:n=function(e,t,n){var r=n.length;switch(r){case 0:return new t;case 1:return new t(ho(e,n[0]));case 2:return new t(ho(e,n[0]),ho(e,n[1]));case 3:return new t(ho(e,n[0]),ho(e,n[1]),ho(e,n[2]));default:for(var o=new Array(r),i=0;i<r;i++)o[i]=ho(e,n[i]);return new(t.bind.apply(t,a([void 0],o)))}}(e,t.value,t.deps);break;case 1024:n=function(e,t,n){var r=n.length;switch(r){case 0:return t();case 1:return t(ho(e,n[0]));case 2:return t(ho(e,n[0]),ho(e,n[1]));case 3:return t(ho(e,n[0]),ho(e,n[1]),ho(e,n[2]));default:for(var o=Array(r),i=0;i<r;i++)o[i]=ho(e,n[i]);return t.apply(void 0,a(o))}}(e,t.value,t.deps);break;case 2048:n=ho(e,t.deps[0]);break;case 256:n=t.value}return n===ao||null==n||"object"!=typeof n||131072&t.flags||"function"!=typeof n.ngOnDestroy||(t.flags|=131072),void 0===n?ao:n}function yo(e,t){var n=e.viewContainer._embeddedViews;if((null==t||t>=n.length)&&(t=n.length-1),t<0)return null;var r=n[t];return r.viewContainerParent=null,_o(n,t),Er.dirtyParentQueries(r),mo(r),r}function go(e,t,n){var r=t?Lr(t,t.def.lastRenderRootNode):e.renderElement;Gr(n,2,n.renderer.parentNode(r),n.renderer.nextSibling(r),void 0)}function mo(e){Gr(e,3,null,null,void 0)}function bo(e,t,n){t>=e.length?e.push(n):e.splice(t,0,n)}function _o(e,t){t>=e.length-1?e.pop():e.splice(t,1)}var wo=new Object,Eo=function(e){function t(t,n,r,o,i,s){var u=e.call(this)||this;return u.selector=t,u.componentType=n,u._inputs=o,u._outputs=i,u.ngContentSelectors=s,u.viewDefFactory=r,u}return o(t,e),Object.defineProperty(t.prototype,"inputs",{get:function(){var e=[],t=this._inputs;for(var n in t){var r=t[n];e.push({propName:n,templateName:r})}return e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"outputs",{get:function(){var e=[];for(var t in this._outputs){var n=this._outputs[t];e.push({propName:t,templateName:n})}return e},enumerable:!0,configurable:!0}),t.prototype.create=function(e,t,n,r){if(!r)throw new Error("ngModule should be provided");var o=Kr(this.viewDefFactory),i=o.nodes[0].element.componentProvider.nodeIndex,s=Er.createRootView(e,t||[],n,o,r,wo),u=br(s,i).instance;return n&&s.renderer.setAttribute(mr(s,0).renderElement,"ng-version",Ge.full),new Co(s,new Io(s),u)},t}(mt),Co=function(e){function t(t,n,r){var o=e.call(this)||this;return o._view=t,o._viewRef=n,o._component=r,o._elDef=o._view.def.nodes[0],o.hostView=n,o.changeDetectorRef=n,o.instance=r,o}return o(t,e),Object.defineProperty(t.prototype,"location",{get:function(){return new un(mr(this._view,this._elDef.nodeIndex).renderElement)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"injector",{get:function(){return new Do(this._view,this._elDef)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"componentType",{get:function(){return this._component.constructor},enumerable:!0,configurable:!0}),t.prototype.destroy=function(){this._viewRef.destroy()},t.prototype.onDestroy=function(e){this._viewRef.onDestroy(e)},t}(gt);function xo(e,t,n){return new To(e,t,n)}var To=function(){function e(e,t,n){this._view=e,this._elDef=t,this._data=n,this._embeddedViews=[]}return Object.defineProperty(e.prototype,"element",{get:function(){return new un(this._data.renderElement)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"injector",{get:function(){return new Do(this._view,this._elDef)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"parentInjector",{get:function(){for(var e=this._view,t=this._elDef.parent;!t&&e;)t=Fr(e),e=e.parent;return e?new Do(e,t):new Do(this._view,null)},enumerable:!0,configurable:!0}),e.prototype.clear=function(){for(var e=this._embeddedViews.length-1;e>=0;e--){var t=yo(this._data,e);Er.destroyView(t)}},e.prototype.get=function(e){var t=this._embeddedViews[e];if(t){var n=new Io(t);return n.attachToViewContainerRef(this),n}return null},Object.defineProperty(e.prototype,"length",{get:function(){return this._embeddedViews.length},enumerable:!0,configurable:!0}),e.prototype.createEmbeddedView=function(e,t,n){var r=e.createEmbeddedView(t||{});return this.insert(r,n),r},e.prototype.createComponent=function(e,t,n,r,o){var i=n||this.parentInjector;o||e instanceof kt||(o=i.get(It));var s=e.create(i,r,void 0,o);return this.insert(s.hostView,t),s},e.prototype.insert=function(e,t){if(e.destroyed)throw new Error("Cannot insert a destroyed View in a ViewContainer!");var n=e,r=n._view;return function(e,t,n,r){var o=t.viewContainer._embeddedViews;null!=n||(n=o.length),r.viewContainerParent=e,bo(o,n,r),function(e,t){var n=Hr(t);if(n&&n!==e&&!(16&t.state)){t.state|=16;var r=n.template._projectedViews;r||(r=n.template._projectedViews=[]),r.push(t),function(e,t){if(!(4&t.flags)){e.nodeFlags|=4,t.flags|=4;for(var n=t.parent;n;)n.childFlags|=4,n=n.parent}}(t.parent.def,t.parentNodeDef)}}(t,r),Er.dirtyParentQueries(r),go(t,n>0?o[n-1]:null,r)}(this._view,this._data,t,r),n.attachToViewContainerRef(this),e},e.prototype.move=function(e,t){if(e.destroyed)throw new Error("Cannot move a destroyed View in a ViewContainer!");var n=this._embeddedViews.indexOf(e._view);return function(e,t,n){var r=e.viewContainer._embeddedViews,o=r[t];_o(r,t),null==n&&(n=r.length),bo(r,n,o),Er.dirtyParentQueries(o),mo(o),go(e,n>0?r[n-1]:null,o)}(this._data,n,t),e},e.prototype.indexOf=function(e){return this._embeddedViews.indexOf(e._view)},e.prototype.remove=function(e){var t=yo(this._data,e);t&&Er.destroyView(t)},e.prototype.detach=function(e){var t=yo(this._data,e);return t?new Io(t):null},e}();function ko(e){return new Io(e)}var Io=function(){function e(e){this._view=e,this._viewContainerRef=null,this._appRef=null}return Object.defineProperty(e.prototype,"rootNodes",{get:function(){return Gr(this._view,0,void 0,void 0,e=[]),e;var e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"context",{get:function(){return this._view.context},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"destroyed",{get:function(){return 0!=(128&this._view.state)},enumerable:!0,configurable:!0}),e.prototype.markForCheck=function(){Mr(this._view)},e.prototype.detach=function(){this._view.state&=-5},e.prototype.detectChanges=function(){var e=this._view.root.rendererFactory;e.begin&&e.begin();try{Er.checkAndUpdateView(this._view)}finally{e.end&&e.end()}},e.prototype.checkNoChanges=function(){Er.checkNoChangesView(this._view)},e.prototype.reattach=function(){this._view.state|=4},e.prototype.onDestroy=function(e){this._view.disposables||(this._view.disposables=[]),this._view.disposables.push(e)},e.prototype.destroy=function(){this._appRef?this._appRef.detachView(this):this._viewContainerRef&&this._viewContainerRef.detach(this._viewContainerRef.indexOf(this)),Er.destroyView(this._view)},e.prototype.detachFromAppRef=function(){this._appRef=null,mo(this._view),Er.dirtyParentQueries(this._view)},e.prototype.attachToAppRef=function(e){if(this._viewContainerRef)throw new Error("This view is already attached to a ViewContainer!");this._appRef=e},e.prototype.attachToViewContainerRef=function(e){if(this._appRef)throw new Error("This view is already attached directly to the ApplicationRef!");this._viewContainerRef=e},e}();function So(e,t){return new No(e,t)}var No=function(e){function t(t,n){var r=e.call(this)||this;return r._parentView=t,r._def=n,r}return o(t,e),t.prototype.createEmbeddedView=function(e){return new Io(Er.createEmbeddedView(this._parentView,this._def,this._def.element.template,e))},Object.defineProperty(t.prototype,"elementRef",{get:function(){return new un(mr(this._parentView,this._def.nodeIndex).renderElement)},enumerable:!0,configurable:!0}),t}(cn);function Ao(e,t){return new Do(e,t)}var Do=function(){function e(e,t){this.view=e,this.elDef=t}return e.prototype.get=function(e,t){void 0===t&&(t=De.THROW_IF_NOT_FOUND);var n=!!this.elDef&&0!=(33554432&this.elDef.flags);return Er.resolveDep(this.view,this.elDef,n,{flags:0,token:e,tokenKey:Sr(e)},t)},e}();function Oo(e){return new Po(e.renderer)}var Po=function(){function e(e){this.delegate=e}return e.prototype.selectRootElement=function(e){return this.delegate.selectRootElement(e)},e.prototype.createElement=function(e,t){var n=u(to(t),2),r=n[0],o=n[1],i=this.delegate.createElement(o,r);return e&&this.delegate.appendChild(e,i),i},e.prototype.createViewRoot=function(e){return e},e.prototype.createTemplateAnchor=function(e){var t=this.delegate.createComment("");return e&&this.delegate.appendChild(e,t),t},e.prototype.createText=function(e,t){var n=this.delegate.createText(t);return e&&this.delegate.appendChild(e,n),n},e.prototype.projectNodes=function(e,t){for(var n=0;n<t.length;n++)this.delegate.appendChild(e,t[n])},e.prototype.attachViewAfter=function(e,t){for(var n=this.delegate.parentNode(e),r=this.delegate.nextSibling(e),o=0;o<t.length;o++)this.delegate.insertBefore(n,t[o],r)},e.prototype.detachView=function(e){for(var t=0;t<e.length;t++){var n=e[t],r=this.delegate.parentNode(n);this.delegate.removeChild(r,n)}},e.prototype.destroyView=function(e,t){for(var n=0;n<t.length;n++)this.delegate.destroyNode(t[n])},e.prototype.listen=function(e,t,n){return this.delegate.listen(e,t,n)},e.prototype.listenGlobal=function(e,t,n){return this.delegate.listen(e,t,n)},e.prototype.setElementProperty=function(e,t,n){this.delegate.setProperty(e,t,n)},e.prototype.setElementAttribute=function(e,t,n){var r=u(to(t),2),o=r[0],i=r[1];null!=n?this.delegate.setAttribute(e,i,n,o):this.delegate.removeAttribute(e,i,o)},e.prototype.setBindingDebugInfo=function(e,t,n){},e.prototype.setElementClass=function(e,t,n){n?this.delegate.addClass(e,t):this.delegate.removeClass(e,t)},e.prototype.setElementStyle=function(e,t,n){null!=n?this.delegate.setStyle(e,t,n):this.delegate.removeStyle(e,t)},e.prototype.invokeElementMethod=function(e,t,n){e[t].apply(e,n)},e.prototype.setText=function(e,t){this.delegate.setValue(e,t)},e.prototype.animate=function(){throw new Error("Renderer.animate is no longer supported!")},e}();function Ro(e,t,n,r){return new Mo(e,t,n,r)}var Mo=function(){function e(e,t,n,r){this._moduleType=e,this._parent=t,this._bootstrapComponents=n,this._def=r,this._destroyListeners=[],this._destroyed=!1,this.injector=this,function(e){for(var t=e._def,n=e._providers=new Array(t.providers.length),r=0;r<t.providers.length;r++){var o=t.providers[r];4096&o.flags||void 0===n[r]&&(n[r]=vo(e,o))}}(this)}return e.prototype.get=function(e,t,n){void 0===t&&(t=De.THROW_IF_NOT_FOUND),void 0===n&&(n=0);var r=0;return 4&n?r|=1:2&n&&(r|=4),ho(this,{token:e,tokenKey:Sr(e),flags:r},t)},Object.defineProperty(e.prototype,"instance",{get:function(){return this.get(this._moduleType)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"componentFactoryResolver",{get:function(){return this.get(xt)},enumerable:!0,configurable:!0}),e.prototype.destroy=function(){if(this._destroyed)throw new Error("The ng module "+_e(this.instance.constructor)+" has already been destroyed.");this._destroyed=!0,function(e,t){for(var n=e._def,r=new Set,o=0;o<n.providers.length;o++)if(131072&n.providers[o].flags){var i=e._providers[o];if(i&&i!==ao){var s=i.ngOnDestroy;"function"!=typeof s||r.has(i)||(s.apply(i),r.add(i))}}}(this),this._destroyListeners.forEach(function(e){return e()})},e.prototype.onDestroy=function(e){this._destroyListeners.push(e)},e}(),Vo=Sr(nn),jo=Sr(sn),Ho=Sr(un),Fo=Sr(ln),Lo=Sr(cn),Bo=Sr(dn),zo=Sr(De),Uo=Sr(Ne);function Zo(e,t){return Ko(e,t)}function qo(e,t){for(var n=e;n.parent&&!zr(n);)n=n.parent;return Go(n.parent,Fr(n),!0,t.provider.value,t.provider.deps)}function Qo(e,t){var n=(32768&t.flags)>0,r=Go(e,t.parent,n,t.provider.value,t.provider.deps);if(t.outputs.length)for(var o=0;o<t.outputs.length;o++){var i=t.outputs[o],s=r[i.propName].subscribe(Wo(e,t.parent.nodeIndex,i.eventName));e.disposables[t.outputIndex+o]=s.unsubscribe.bind(s)}return r}function Wo(e,t,n){return function(r){return jr(e,t,n,r)}}function Ko(e,t){var n=(8192&t.flags)>0,r=t.provider;switch(201347067&t.flags){case 512:return Go(e,t.parent,n,r.value,r.deps);case 1024:return function(e,t,n,r,o){var i=o.length;switch(i){case 0:return r();case 1:return r(Jo(e,t,n,o[0]));case 2:return r(Jo(e,t,n,o[0]),Jo(e,t,n,o[1]));case 3:return r(Jo(e,t,n,o[0]),Jo(e,t,n,o[1]),Jo(e,t,n,o[2]));default:for(var s=Array(i),u=0;u<i;u++)s[u]=Jo(e,t,n,o[u]);return r.apply(void 0,a(s))}}(e,t.parent,n,r.value,r.deps);case 2048:return Jo(e,t.parent,n,r.deps[0]);case 256:return r.value}}function Go(e,t,n,r,o){var i=o.length;switch(i){case 0:return new r;case 1:return new r(Jo(e,t,n,o[0]));case 2:return new r(Jo(e,t,n,o[0]),Jo(e,t,n,o[1]));case 3:return new r(Jo(e,t,n,o[0]),Jo(e,t,n,o[1]),Jo(e,t,n,o[2]));default:for(var s=new Array(i),u=0;u<i;u++)s[u]=Jo(e,t,n,o[u]);return new(r.bind.apply(r,a([void 0],s)))}}var Yo={};function Jo(e,t,n,r,o){if(void 0===o&&(o=De.THROW_IF_NOT_FOUND),8&r.flags)return r.token;var i=e;2&r.flags&&(o=null);var s=r.tokenKey;s===Bo&&(n=!(!t||!t.element.componentView)),t&&1&r.flags&&(n=!1,t=t.parent);for(var u=e;u;){if(t)switch(s){case Vo:return Oo($o(u,t,n));case jo:return $o(u,t,n).renderer;case Ho:return new un(mr(u,t.nodeIndex).renderElement);case Fo:return mr(u,t.nodeIndex).viewContainer;case Lo:if(t.element.template)return mr(u,t.nodeIndex).template;break;case Bo:return ko($o(u,t,n));case zo:case Uo:return Ao(u,t);default:var a=(n?t.element.allProviders:t.element.publicProviders)[s];if(a){var c=br(u,a.nodeIndex);return c||(c={instance:Ko(u,a)},u.nodes[a.nodeIndex]=c),c.instance}}n=zr(u),t=Fr(u),u=u.parent,4&r.flags&&(u=null)}var l=i.root.injector.get(r.token,Yo);return l!==Yo||o===Yo?l:i.root.ngModule.injector.get(r.token,o)}function $o(e,t,n){var r;if(n)r=mr(e,t.nodeIndex).componentView;else for(r=e;r.parent&&!zr(r);)r=r.parent;return r}function Xo(e,t,n,r,o,i){if(32768&n.flags){var s=mr(e,n.parent.nodeIndex).componentView;2&s.def.flags&&(s.state|=8)}var u=n.bindings[r].name;if(t.instance[u]=o,524288&n.flags){i=i||{};var a=bn.unwrap(e.oldValues[n.bindingIndex+r]);i[n.bindings[r].nonMinifiedName]=new _n(a,o,0!=(2&e.state))}return e.oldValues[n.bindingIndex+r]=o,i}function ei(e,t){if(e.def.nodeFlags&t)for(var n=e.def.nodes,r=0,o=0;o<n.length;o++){var i=n[o],s=i.parent;for(!s&&i.flags&t&&ni(e,o,i.flags&t,r++),0==(i.childFlags&t)&&(o+=i.childCount);s&&1&s.flags&&o===s.nodeIndex+s.childCount;)s.directChildFlags&t&&(r=ti(e,s,t,r)),s=s.parent}}function ti(e,t,n,r){for(var o=t.nodeIndex+1;o<=t.nodeIndex+t.childCount;o++){var i=e.def.nodes[o];i.flags&n&&ni(e,o,i.flags&n,r++),o+=i.childCount}return r}function ni(e,t,n,r){var o=br(e,t);if(o){var i=o.instance;i&&(Er.setCurrentNode(e,t),1048576&n&&yr(e,512,r)&&i.ngAfterContentInit(),2097152&n&&i.ngAfterContentChecked(),4194304&n&&yr(e,768,r)&&i.ngAfterViewInit(),8388608&n&&i.ngAfterViewChecked(),131072&n&&i.ngOnDestroy())}}function ri(e){for(var t=e.def.nodeMatchedQueries;e.parent&&Ur(e);){var n=e.parentNodeDef;e=e.parent;for(var r=n.nodeIndex+n.childCount,o=0;o<=r;o++)67108864&(i=e.def.nodes[o]).flags&&536870912&i.flags&&(i.query.filterId&t)===i.query.filterId&&wr(e,o).setDirty(),!(1&i.flags&&o+i.childCount<n.nodeIndex)&&67108864&i.childFlags&&536870912&i.childFlags||(o+=i.childCount)}if(134217728&e.def.nodeFlags)for(o=0;o<e.def.nodes.length;o++){var i;134217728&(i=e.def.nodes[o]).flags&&536870912&i.flags&&wr(e,o).setDirty(),o+=i.childCount}}function oi(e,t){var n=wr(e,t.nodeIndex);if(n.dirty){var r,o=void 0;if(67108864&t.flags){var i=t.parent.parent;o=ii(e,i.nodeIndex,i.nodeIndex+i.childCount,t.query,[]),r=br(e,t.parent.nodeIndex).instance}else 134217728&t.flags&&(o=ii(e,0,e.def.nodes.length-1,t.query,[]),r=e.component);n.reset(o);for(var s=t.query.bindings,u=!1,a=0;a<s.length;a++){var c=s[a],l=void 0;switch(c.bindingType){case 0:l=n.first;break;case 1:l=n,u=!0}r[c.propName]=l}u&&n.notifyOnChanges()}}function ii(e,t,n,r,o){for(var i=t;i<=n;i++){var s=e.def.nodes[i],u=s.matchedQueries[r.id];if(null!=u&&o.push(si(e,s,u)),1&s.flags&&s.element.template&&(s.element.template.nodeMatchedQueries&r.filterId)===r.filterId){var a=mr(e,i);if((s.childMatchedQueries&r.filterId)===r.filterId&&(ii(e,i+1,i+s.childCount,r,o),i+=s.childCount),16777216&s.flags)for(var c=a.viewContainer._embeddedViews,l=0;l<c.length;l++){var d=c[l],f=Hr(d);f&&f===a&&ii(d,0,d.def.nodes.length-1,r,o)}var p=a.template._projectedViews;if(p)for(l=0;l<p.length;l++){var h=p[l];ii(h,0,h.def.nodes.length-1,r,o)}}(s.childMatchedQueries&r.filterId)!==r.filterId&&(i+=s.childCount)}return o}function si(e,t,n){if(null!=n)switch(n){case 1:return mr(e,t.nodeIndex).renderElement;case 0:return new un(mr(e,t.nodeIndex).renderElement);case 2:return mr(e,t.nodeIndex).template;case 3:return mr(e,t.nodeIndex).viewContainer;case 4:return br(e,t.nodeIndex).instance}}function ui(e,t,n){var r=Qr(e,t,n);r&&Jr(e,n.ngContent.index,1,r,null,void 0)}function ai(e,t,n){for(var r=new Array(n.length-1),o=1;o<n.length;o++)r[o-1]={flags:8,name:null,ns:null,nonMinifiedName:null,securityContext:null,suffix:n[o]};return{nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,checkIndex:e,flags:2,childFlags:0,directChildFlags:0,childMatchedQueries:0,matchedQueries:{},matchedQueryIds:0,references:{},ngContentIndex:t,childCount:0,bindings:r,bindingFlags:8,outputs:[],element:null,provider:null,text:{prefix:n[0]},query:null,ngContent:null}}function ci(e,t,n){var r,o=e.renderer;r=o.createText(n.text.prefix);var i=Qr(e,t,n);return i&&o.appendChild(i,r),{renderText:r}}function li(e,t){return(null!=e?e.toString():"")+t.suffix}function di(e,t,n,r){for(var o=0,i=0,s=0,u=0,a=0,c=null,l=null,d=!1,f=!1,p=null,h=0;h<t.length;h++){var v=t[h];if(v.nodeIndex=h,v.parent=c,v.bindingIndex=o,v.outputIndex=i,v.renderParent=l,s|=v.flags,a|=v.matchedQueryIds,v.element){var y=v.element;y.publicProviders=c?c.element.publicProviders:Object.create(null),y.allProviders=y.publicProviders,d=!1,f=!1,v.element.template&&(a|=v.element.template.nodeMatchedQueries)}if(pi(c,v,t.length),o+=v.bindings.length,i+=v.outputs.length,!l&&3&v.flags&&(p=v),20224&v.flags){d||(d=!0,c.element.publicProviders=Object.create(c.element.publicProviders),c.element.allProviders=c.element.publicProviders);var g=0!=(8192&v.flags),m=0!=(32768&v.flags);!g||m?c.element.publicProviders[Sr(v.provider.token)]=v:(f||(f=!0,c.element.allProviders=Object.create(c.element.publicProviders)),c.element.allProviders[Sr(v.provider.token)]=v),m&&(c.element.componentProvider=v)}if(c?(c.childFlags|=v.flags,c.directChildFlags|=v.flags,c.childMatchedQueries|=v.matchedQueryIds,v.element&&v.element.template&&(c.childMatchedQueries|=v.element.template.nodeMatchedQueries)):u|=v.flags,v.childCount>0)c=v,fi(v)||(l=v);else for(;c&&h===c.nodeIndex+c.childCount;){var b=c.parent;b&&(b.childFlags|=c.childFlags,b.childMatchedQueries|=c.childMatchedQueries),l=(c=b)&&fi(c)?c.renderParent:c}}return{factory:null,nodeFlags:s,rootNodeFlags:u,nodeMatchedQueries:a,flags:e,nodes:t,updateDirectives:n||kr,updateRenderer:r||kr,handleEvent:function(e,n,r,o){return t[n].element.handleEvent(e,r,o)},bindingCount:o,outputCount:i,lastRenderRootNode:p}}function fi(e){return 0!=(1&e.flags)&&null===e.element.name}function pi(e,t,n){var r=t.element&&t.element.template;if(r){if(!r.lastRenderRootNode)throw new Error("Illegal State: Embedded templates without nodes are not allowed!");if(r.lastRenderRootNode&&16777216&r.lastRenderRootNode.flags)throw new Error("Illegal State: Last root node of a template can't have embedded views, at index "+t.nodeIndex+"!")}if(20224&t.flags&&0==(1&(e?e.flags:0)))throw new Error("Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index "+t.nodeIndex+"!");if(t.query){if(67108864&t.flags&&(!e||0==(16384&e.flags)))throw new Error("Illegal State: Content Query nodes need to be children of directives, at index "+t.nodeIndex+"!");if(134217728&t.flags&&e)throw new Error("Illegal State: View Query nodes have to be top level nodes, at index "+t.nodeIndex+"!")}if(t.childCount){var o=e?e.nodeIndex+e.childCount:n-1;if(t.nodeIndex<=o&&t.nodeIndex+t.childCount>o)throw new Error("Illegal State: childCount of node leads outside of parent, at index "+t.nodeIndex+"!")}}function hi(e,t,n,r){var o=gi(e.root,e.renderer,e,t,n);return mi(o,e.component,r),bi(o),o}function vi(e,t,n){var r=gi(e,e.renderer,null,null,t);return mi(r,n,n),bi(r),r}function yi(e,t,n,r){var o,i=t.element.componentRendererType;return o=i?e.root.rendererFactory.createRenderer(r,i):e.root.renderer,gi(e.root,o,e,t.element.componentProvider,n)}function gi(e,t,n,r,o){var i=new Array(o.nodes.length),s=o.outputCount?new Array(o.outputCount):null;return{def:o,parent:n,viewContainerParent:null,parentNodeDef:r,context:null,component:null,nodes:i,state:13,root:e,renderer:t,oldValues:new Array(o.bindingCount),disposables:s,initIndex:-1}}function mi(e,t,n){e.component=t,e.context=n}function bi(e){var t;if(zr(e)){var n=e.parentNodeDef;t=mr(e.parent,n.parent.nodeIndex).renderElement}for(var r=e.def,o=e.nodes,i=0;i<r.nodes.length;i++){var s=r.nodes[i];Er.setCurrentNode(e,i);var u=void 0;switch(201347067&s.flags){case 1:var a=oo(e,t,s),c=void 0;if(33554432&s.flags){var l=Kr(s.element.componentView);c=Er.createComponentView(e,s,l,a)}io(e,c,s,a),u={renderElement:a,componentView:c,viewContainer:null,template:s.element.template?So(e,s):void 0},16777216&s.flags&&(u.viewContainer=xo(e,s,u));break;case 2:u=ci(e,t,s);break;case 512:case 1024:case 2048:case 256:(u=o[i])||4096&s.flags||(u={instance:Zo(e,s)});break;case 16:u={instance:qo(e,s)};break;case 16384:(u=o[i])||(u={instance:Qo(e,s)}),32768&s.flags&&mi(mr(e,s.parent.nodeIndex).componentView,u.instance,u.instance);break;case 32:case 64:case 128:u={value:void 0};break;case 67108864:case 134217728:u=new an;break;case 8:ui(e,t,s),u=void 0}o[i]=u}Si(e,Ii.CreateViewNodes),Oi(e,201326592,268435456,0)}function _i(e){Ci(e),Er.updateDirectives(e,1),Ni(e,Ii.CheckNoChanges),Er.updateRenderer(e,1),Si(e,Ii.CheckNoChanges),e.state&=-97}function wi(e){1&e.state?(e.state&=-2,e.state|=2):e.state&=-3,vr(e,0,256),Ci(e),Er.updateDirectives(e,0),Ni(e,Ii.CheckAndUpdate),Oi(e,67108864,536870912,0);var t=vr(e,256,512);ei(e,2097152|(t?1048576:0)),Er.updateRenderer(e,0),Si(e,Ii.CheckAndUpdate),Oi(e,134217728,536870912,0),ei(e,8388608|((t=vr(e,512,768))?4194304:0)),2&e.def.flags&&(e.state&=-9),e.state&=-97,vr(e,768,1024)}function Ei(e,t,n,r,o,i,s,u,c,l,d,f,p){return 0===n?function(e,t,n,r,o,i,s,u,a,c,l,d){switch(201347067&t.flags){case 1:return function(e,t,n,r,o,i,s,u,a,c,l,d){var f=t.bindings.length,p=!1;return f>0&&uo(e,t,0,n)&&(p=!0),f>1&&uo(e,t,1,r)&&(p=!0),f>2&&uo(e,t,2,o)&&(p=!0),f>3&&uo(e,t,3,i)&&(p=!0),f>4&&uo(e,t,4,s)&&(p=!0),f>5&&uo(e,t,5,u)&&(p=!0),f>6&&uo(e,t,6,a)&&(p=!0),f>7&&uo(e,t,7,c)&&(p=!0),f>8&&uo(e,t,8,l)&&(p=!0),f>9&&uo(e,t,9,d)&&(p=!0),p}(e,t,n,r,o,i,s,u,a,c,l,d);case 2:return function(e,t,n,r,o,i,s,u,a,c,l,d){var f=!1,p=t.bindings,h=p.length;if(h>0&&Pr(e,t,0,n)&&(f=!0),h>1&&Pr(e,t,1,r)&&(f=!0),h>2&&Pr(e,t,2,o)&&(f=!0),h>3&&Pr(e,t,3,i)&&(f=!0),h>4&&Pr(e,t,4,s)&&(f=!0),h>5&&Pr(e,t,5,u)&&(f=!0),h>6&&Pr(e,t,6,a)&&(f=!0),h>7&&Pr(e,t,7,c)&&(f=!0),h>8&&Pr(e,t,8,l)&&(f=!0),h>9&&Pr(e,t,9,d)&&(f=!0),f){var v=t.text.prefix;h>0&&(v+=li(n,p[0])),h>1&&(v+=li(r,p[1])),h>2&&(v+=li(o,p[2])),h>3&&(v+=li(i,p[3])),h>4&&(v+=li(s,p[4])),h>5&&(v+=li(u,p[5])),h>6&&(v+=li(a,p[6])),h>7&&(v+=li(c,p[7])),h>8&&(v+=li(l,p[8])),h>9&&(v+=li(d,p[9]));var y=gr(e,t.nodeIndex).renderText;e.renderer.setValue(y,v)}return f}(e,t,n,r,o,i,s,u,a,c,l,d);case 16384:return function(e,t,n,r,o,i,s,u,a,c,l,d){var f=br(e,t.nodeIndex),p=f.instance,h=!1,v=void 0,y=t.bindings.length;return y>0&&Or(e,t,0,n)&&(h=!0,v=Xo(e,f,t,0,n,v)),y>1&&Or(e,t,1,r)&&(h=!0,v=Xo(e,f,t,1,r,v)),y>2&&Or(e,t,2,o)&&(h=!0,v=Xo(e,f,t,2,o,v)),y>3&&Or(e,t,3,i)&&(h=!0,v=Xo(e,f,t,3,i,v)),y>4&&Or(e,t,4,s)&&(h=!0,v=Xo(e,f,t,4,s,v)),y>5&&Or(e,t,5,u)&&(h=!0,v=Xo(e,f,t,5,u,v)),y>6&&Or(e,t,6,a)&&(h=!0,v=Xo(e,f,t,6,a,v)),y>7&&Or(e,t,7,c)&&(h=!0,v=Xo(e,f,t,7,c,v)),y>8&&Or(e,t,8,l)&&(h=!0,v=Xo(e,f,t,8,l,v)),y>9&&Or(e,t,9,d)&&(h=!0,v=Xo(e,f,t,9,d,v)),v&&p.ngOnChanges(v),65536&t.flags&&yr(e,256,t.nodeIndex)&&p.ngOnInit(),262144&t.flags&&p.ngDoCheck(),h}(e,t,n,r,o,i,s,u,a,c,l,d);case 32:case 64:case 128:return function(e,t,n,r,o,i,s,u,a,c,l,d){var f=t.bindings,p=!1,h=f.length;if(h>0&&Pr(e,t,0,n)&&(p=!0),h>1&&Pr(e,t,1,r)&&(p=!0),h>2&&Pr(e,t,2,o)&&(p=!0),h>3&&Pr(e,t,3,i)&&(p=!0),h>4&&Pr(e,t,4,s)&&(p=!0),h>5&&Pr(e,t,5,u)&&(p=!0),h>6&&Pr(e,t,6,a)&&(p=!0),h>7&&Pr(e,t,7,c)&&(p=!0),h>8&&Pr(e,t,8,l)&&(p=!0),h>9&&Pr(e,t,9,d)&&(p=!0),p){var v=_r(e,t.nodeIndex),y=void 0;switch(201347067&t.flags){case 32:y=new Array(f.length),h>0&&(y[0]=n),h>1&&(y[1]=r),h>2&&(y[2]=o),h>3&&(y[3]=i),h>4&&(y[4]=s),h>5&&(y[5]=u),h>6&&(y[6]=a),h>7&&(y[7]=c),h>8&&(y[8]=l),h>9&&(y[9]=d);break;case 64:y={},h>0&&(y[f[0].name]=n),h>1&&(y[f[1].name]=r),h>2&&(y[f[2].name]=o),h>3&&(y[f[3].name]=i),h>4&&(y[f[4].name]=s),h>5&&(y[f[5].name]=u),h>6&&(y[f[6].name]=a),h>7&&(y[f[7].name]=c),h>8&&(y[f[8].name]=l),h>9&&(y[f[9].name]=d);break;case 128:var g=n;switch(h){case 1:y=g.transform(n);break;case 2:y=g.transform(r);break;case 3:y=g.transform(r,o);break;case 4:y=g.transform(r,o,i);break;case 5:y=g.transform(r,o,i,s);break;case 6:y=g.transform(r,o,i,s,u);break;case 7:y=g.transform(r,o,i,s,u,a);break;case 8:y=g.transform(r,o,i,s,u,a,c);break;case 9:y=g.transform(r,o,i,s,u,a,c,l);break;case 10:y=g.transform(r,o,i,s,u,a,c,l,d)}}v.value=y}return p}(e,t,n,r,o,i,s,u,a,c,l,d);default:throw"unreachable"}}(e,t,r,o,i,s,u,c,l,d,f,p):function(e,t,n){switch(201347067&t.flags){case 1:return function(e,t,n){for(var r=!1,o=0;o<n.length;o++)uo(e,t,o,n[o])&&(r=!0);return r}(e,t,n);case 2:return function(e,t,n){for(var r=t.bindings,o=!1,i=0;i<n.length;i++)Pr(e,t,i,n[i])&&(o=!0);if(o){var s="";for(i=0;i<n.length;i++)s+=li(n[i],r[i]);s=t.text.prefix+s;var u=gr(e,t.nodeIndex).renderText;e.renderer.setValue(u,s)}return o}(e,t,n);case 16384:return function(e,t,n){for(var r=br(e,t.nodeIndex),o=r.instance,i=!1,s=void 0,u=0;u<n.length;u++)Or(e,t,u,n[u])&&(i=!0,s=Xo(e,r,t,u,n[u],s));return s&&o.ngOnChanges(s),65536&t.flags&&yr(e,256,t.nodeIndex)&&o.ngOnInit(),262144&t.flags&&o.ngDoCheck(),i}(e,t,n);case 32:case 64:case 128:return function(e,t,n){for(var r=t.bindings,o=!1,i=0;i<n.length;i++)Pr(e,t,i,n[i])&&(o=!0);if(o){var s=_r(e,t.nodeIndex),u=void 0;switch(201347067&t.flags){case 32:u=n;break;case 64:for(u={},i=0;i<n.length;i++)u[r[i].name]=n[i];break;case 128:var c=n[0],l=n.slice(1);u=c.transform.apply(c,a(l))}s.value=u}return o}(e,t,n);default:throw"unreachable"}}(e,t,r)}function Ci(e){var t=e.def;if(4&t.nodeFlags)for(var n=0;n<t.nodes.length;n++){var r=t.nodes[n];if(4&r.flags){var o=mr(e,n).template._projectedViews;if(o)for(var i=0;i<o.length;i++){var s=o[i];s.state|=32,Vr(s,e)}}else 0==(4&r.childFlags)&&(n+=r.childCount)}}function xi(e,t,n,r,o,i,s,u,a,c,l,d,f){return 0===n?function(e,t,n,r,o,i,s,u,a,c,l,d){var f=t.bindings.length;f>0&&Rr(e,t,0,n),f>1&&Rr(e,t,1,r),f>2&&Rr(e,t,2,o),f>3&&Rr(e,t,3,i),f>4&&Rr(e,t,4,s),f>5&&Rr(e,t,5,u),f>6&&Rr(e,t,6,a),f>7&&Rr(e,t,7,c),f>8&&Rr(e,t,8,l),f>9&&Rr(e,t,9,d)}(e,t,r,o,i,s,u,a,c,l,d,f):function(e,t,n){for(var r=0;r<n.length;r++)Rr(e,t,r,n[r])}(e,t,r),!1}function Ti(e,t){if(wr(e,t.nodeIndex).dirty)throw Cr(Er.createDebugContext(e,t.nodeIndex),"Query "+t.query.id+" not dirty","Query "+t.query.id+" dirty",0!=(1&e.state))}function ki(e){if(!(128&e.state)){if(Ni(e,Ii.Destroy),Si(e,Ii.Destroy),ei(e,131072),e.disposables)for(var t=0;t<e.disposables.length;t++)e.disposables[t]();!function(e){if(16&e.state){var t=Hr(e);if(t){var n=t.template._projectedViews;n&&(_o(n,n.indexOf(e)),Er.dirtyParentQueries(e))}}}(e),e.renderer.destroyNode&&function(e){for(var t=e.def.nodes.length,n=0;n<t;n++){var r=e.def.nodes[n];1&r.flags?e.renderer.destroyNode(mr(e,n).renderElement):2&r.flags?e.renderer.destroyNode(gr(e,n).renderText):(67108864&r.flags||134217728&r.flags)&&wr(e,n).destroy()}}(e),zr(e)&&e.renderer.destroy(),e.state|=128}}var Ii=function(e){return e[e.CreateViewNodes=0]="CreateViewNodes",e[e.CheckNoChanges=1]="CheckNoChanges",e[e.CheckNoChangesProjectedViews=2]="CheckNoChangesProjectedViews",e[e.CheckAndUpdate=3]="CheckAndUpdate",e[e.CheckAndUpdateProjectedViews=4]="CheckAndUpdateProjectedViews",e[e.Destroy=5]="Destroy",e}({});function Si(e,t){var n=e.def;if(33554432&n.nodeFlags)for(var r=0;r<n.nodes.length;r++){var o=n.nodes[r];33554432&o.flags?Ai(mr(e,r).componentView,t):0==(33554432&o.childFlags)&&(r+=o.childCount)}}function Ni(e,t){var n=e.def;if(16777216&n.nodeFlags)for(var r=0;r<n.nodes.length;r++){var o=n.nodes[r];if(16777216&o.flags)for(var i=mr(e,r).viewContainer._embeddedViews,s=0;s<i.length;s++)Ai(i[s],t);else 0==(16777216&o.childFlags)&&(r+=o.childCount)}}function Ai(e,t){var n=e.state;switch(t){case Ii.CheckNoChanges:0==(128&n)&&(12==(12&n)?_i(e):64&n&&Di(e,Ii.CheckNoChangesProjectedViews));break;case Ii.CheckNoChangesProjectedViews:0==(128&n)&&(32&n?_i(e):64&n&&Di(e,t));break;case Ii.CheckAndUpdate:0==(128&n)&&(12==(12&n)?wi(e):64&n&&Di(e,Ii.CheckAndUpdateProjectedViews));break;case Ii.CheckAndUpdateProjectedViews:0==(128&n)&&(32&n?wi(e):64&n&&Di(e,t));break;case Ii.Destroy:ki(e);break;case Ii.CreateViewNodes:bi(e)}}function Di(e,t){Ni(e,t),Si(e,t)}function Oi(e,t,n,r){if(e.def.nodeFlags&t&&e.def.nodeFlags&n)for(var o=e.def.nodes.length,i=0;i<o;i++){var s=e.def.nodes[i];if(s.flags&t&&s.flags&n)switch(Er.setCurrentNode(e,s.nodeIndex),r){case 0:oi(e,s);break;case 1:Ti(e,s)}s.childFlags&t&&s.childFlags&n||(i+=s.childCount)}}var Pi=!1;function Ri(e,t,n,r,o,i){return vi(Vi(e,o,o.injector.get(rn),t,n),r,i)}function Mi(e,t,n,r,o,i){var s=o.injector.get(rn),u=Vi(e,o,new gs(s),t,n),a=Qi(r);return vs(ts.create,vi,null,[u,a,i])}function Vi(e,t,n,r,o){var i=t.injector.get(hr),s=t.injector.get(nt);return{ngModule:t,injector:e,projectableNodes:r,selectorOrNode:o,sanitizer:i,rendererFactory:n,renderer:n.createRenderer(null,null),errorHandler:s}}function ji(e,t,n,r){var o=Qi(n);return vs(ts.create,hi,null,[e,t,o,r])}function Hi(e,t,n,r){return n=zi.get(t.element.componentProvider.provider.token)||Qi(n),vs(ts.create,yi,null,[e,t,n,r])}function Fi(e,t,n,r){return Ro(e,t,n,function(e){var t=function(e){var t=!1,n=!1;return 0===Li.size?{hasOverrides:t,hasDeprecatedOverrides:n}:(e.providers.forEach(function(e){var r=Li.get(e.token);3840&e.flags&&r&&(t=!0,n=n||r.deprecatedBehavior)}),e.modules.forEach(function(e){Bi.forEach(function(r,o){o.ngInjectableDef.providedIn===e&&(t=!0,n=n||r.deprecatedBehavior)})}),{hasOverrides:t,hasDeprecatedOverrides:n})}(e),n=t.hasOverrides,r=t.hasDeprecatedOverrides;return n?(function(e){for(var t=0;t<e.providers.length;t++){var n=e.providers[t];r&&(n.flags|=4096);var o=Li.get(n.token);o&&(n.flags=-3841&n.flags|o.flags,n.deps=qr(o.deps),n.value=o.value)}if(Bi.size>0){var i=new Set(e.modules);Bi.forEach(function(t,n){if(i.has(n.ngInjectableDef.providedIn)){var o={token:n,flags:t.flags|(r?4096:0),deps:qr(t.deps),value:t.value,index:e.providers.length};e.providers.push(o),e.providersByKey[Sr(n)]=o}})}}(e=e.factory(function(){return kr})),e):e}(r))}var Li=new Map,Bi=new Map,zi=new Map;function Ui(e){Li.set(e.token,e),"function"==typeof e.token&&e.token.ngInjectableDef&&"function"==typeof e.token.ngInjectableDef.providedIn&&Bi.set(e.token,e)}function Zi(e,t){var n=Kr(Kr(t.viewDefFactory).nodes[0].element.componentView);zi.set(e,n)}function qi(){Li.clear(),Bi.clear(),zi.clear()}function Qi(e){if(0===Li.size)return e;var t=function(e){for(var t=[],n=null,r=0;r<e.nodes.length;r++){var o=e.nodes[r];1&o.flags&&(n=o),n&&3840&o.flags&&Li.has(o.provider.token)&&(t.push(n.nodeIndex),n=null)}return t}(e);if(0===t.length)return e;e=e.factory(function(){return kr});for(var n=0;n<t.length;n++)r(e,t[n]);return e;function r(e,t){for(var n=t+1;n<e.nodes.length;n++){var r=e.nodes[n];if(1&r.flags)return;if(3840&r.flags){var o=r.provider,i=Li.get(o.token);i&&(r.flags=-3841&r.flags|i.flags,o.deps=qr(i.deps),o.value=i.value)}}}}function Wi(e,t,n,r,o,i,s,u,a,c,l,d,f){var p=e.def.nodes[t];return Ei(e,p,n,r,o,i,s,u,a,c,l,d,f),224&p.flags?_r(e,t).value:void 0}function Ki(e,t,n,r,o,i,s,u,a,c,l,d,f){var p=e.def.nodes[t];return xi(e,p,n,r,o,i,s,u,a,c,l,d,f),224&p.flags?_r(e,t).value:void 0}function Gi(e){return vs(ts.detectChanges,wi,null,[e])}function Yi(e){return vs(ts.checkNoChanges,_i,null,[e])}function Ji(e){return vs(ts.destroy,ki,null,[e])}var $i,Xi,es,ts=function(e){return e[e.create=0]="create",e[e.detectChanges=1]="detectChanges",e[e.checkNoChanges=2]="checkNoChanges",e[e.destroy=3]="destroy",e[e.handleEvent=4]="handleEvent",e}({});function ns(e,t){Xi=e,es=t}function rs(e,t,n,r){return ns(e,t),vs(ts.handleEvent,e.def.handleEvent,null,[e,t,n,r])}function os(e,t){if(128&e.state)throw Tr(ts[$i]);return ns(e,ds(e,0)),e.def.updateDirectives(function(e,n,r){for(var o=[],i=3;i<arguments.length;i++)o[i-3]=arguments[i];var s=e.def.nodes[n];return 0===t?ss(e,s,r,o):us(e,s,r,o),16384&s.flags&&ns(e,ds(e,n)),224&s.flags?_r(e,s.nodeIndex).value:void 0},e)}function is(e,t){if(128&e.state)throw Tr(ts[$i]);return ns(e,fs(e,0)),e.def.updateRenderer(function(e,n,r){for(var o=[],i=3;i<arguments.length;i++)o[i-3]=arguments[i];var s=e.def.nodes[n];return 0===t?ss(e,s,r,o):us(e,s,r,o),3&s.flags&&ns(e,fs(e,n)),224&s.flags?_r(e,s.nodeIndex).value:void 0},e)}function ss(e,t,n,r){if(Ei.apply(void 0,a([e,t,n],r))){var o=1===n?r[0]:r;if(16384&t.flags){for(var i={},s=0;s<t.bindings.length;s++){var u=t.bindings[s],c=o[s];8&u.flags&&(i[as(u.nonMinifiedName)]=ls(c))}var l=t.parent,d=mr(e,l.nodeIndex).renderElement;if(l.element.name)for(var f in i)null!=(c=i[f])?e.renderer.setAttribute(d,f,c):e.renderer.removeAttribute(d,f);else e.renderer.setValue(d,"bindings="+JSON.stringify(i,null,2))}}}function us(e,t,n,r){xi.apply(void 0,a([e,t,n],r))}function as(e){return"ng-reflect-"+function(e){return e.replace(cs,function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return"-"+e[1].toLowerCase()})}(e.replace(/[$@]/g,"_"))}var cs=/([A-Z])/g;function ls(e){try{return null!=e?e.toString().slice(0,30):e}catch(e){return"[ERROR] Exception while trying to serialize the value"}}function ds(e,t){for(var n=t;n<e.def.nodes.length;n++){var r=e.def.nodes[n];if(16384&r.flags&&r.bindings&&r.bindings.length)return n}return null}function fs(e,t){for(var n=t;n<e.def.nodes.length;n++){var r=e.def.nodes[n];if(3&r.flags&&r.bindings&&r.bindings.length)return n}return null}var ps=function(){function e(e,t){this.view=e,this.nodeIndex=t,null==t&&(this.nodeIndex=t=0),this.nodeDef=e.def.nodes[t];for(var n=this.nodeDef,r=e;n&&0==(1&n.flags);)n=n.parent;if(!n)for(;!n&&r;)n=Fr(r),r=r.parent;this.elDef=n,this.elView=r}return Object.defineProperty(e.prototype,"elOrCompView",{get:function(){return mr(this.elView,this.elDef.nodeIndex).componentView||this.view},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"injector",{get:function(){return Ao(this.elView,this.elDef)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"component",{get:function(){return this.elOrCompView.component},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"context",{get:function(){return this.elOrCompView.context},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"providerTokens",{get:function(){var e=[];if(this.elDef)for(var t=this.elDef.nodeIndex+1;t<=this.elDef.nodeIndex+this.elDef.childCount;t++){var n=this.elView.def.nodes[t];20224&n.flags&&e.push(n.provider.token),t+=n.childCount}return e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"references",{get:function(){var e={};if(this.elDef){hs(this.elView,this.elDef,e);for(var t=this.elDef.nodeIndex+1;t<=this.elDef.nodeIndex+this.elDef.childCount;t++){var n=this.elView.def.nodes[t];20224&n.flags&&hs(this.elView,n,e),t+=n.childCount}}return e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"componentRenderElement",{get:function(){var e=function(e){for(;e&&!zr(e);)e=e.parent;return e.parent?mr(e.parent,Fr(e).nodeIndex):null}(this.elOrCompView);return e?e.renderElement:void 0},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"renderNode",{get:function(){return 2&this.nodeDef.flags?Lr(this.view,this.nodeDef):Lr(this.elView,this.elDef)},enumerable:!0,configurable:!0}),e.prototype.logError=function(e){for(var t,n,r=[],o=1;o<arguments.length;o++)r[o-1]=arguments[o];2&this.nodeDef.flags?(t=this.view.def,n=this.nodeDef.nodeIndex):(t=this.elView.def,n=this.elDef.nodeIndex);var i=function(e,t){for(var n=-1,r=0;r<=t;r++){3&e.nodes[r].flags&&n++}return n}(t,n),s=-1;t.factory(function(){return++s===i?(t=e.error).bind.apply(t,a([e],r)):kr;var t}),s<i&&(e.error("Illegal state: the ViewDefinitionFactory did not call the logger!"),e.error.apply(e,a(r)))},e}();function hs(e,t,n){for(var r in t.references)n[r]=si(e,t,t.references[r])}function vs(e,t,n,r){var o=$i,i=Xi,s=es;try{$i=e;var u=t.apply(n,r);return Xi=i,es=s,$i=o,u}catch(e){if(function(e){return!!Xe(e)}(e)||!Xi)throw e;throw function(e,t){return e instanceof Error||(e=new Error(e.toString())),xr(e,t),e}(e,ys())}}function ys(){return Xi?new ps(Xi,es):null}var gs=function(){function e(e){this.delegate=e}return e.prototype.createRenderer=function(e,t){return new ms(this.delegate.createRenderer(e,t))},e.prototype.begin=function(){this.delegate.begin&&this.delegate.begin()},e.prototype.end=function(){this.delegate.end&&this.delegate.end()},e.prototype.whenRenderingDone=function(){return this.delegate.whenRenderingDone?this.delegate.whenRenderingDone():Promise.resolve(null)},e}(),ms=function(){function e(e){this.delegate=e,this.data=this.delegate.data}return e.prototype.destroyNode=function(e){!function(e){vn.delete(e.nativeNode)}(yn(e)),this.delegate.destroyNode&&this.delegate.destroyNode(e)},e.prototype.destroy=function(){this.delegate.destroy()},e.prototype.createElement=function(e,t){var n=this.delegate.createElement(e,t),r=ys();if(r){var o=new hn(n,null,r);o.name=e,gn(o)}return n},e.prototype.createComment=function(e){var t=this.delegate.createComment(e),n=ys();return n&&gn(new pn(t,null,n)),t},e.prototype.createText=function(e){var t=this.delegate.createText(e),n=ys();return n&&gn(new pn(t,null,n)),t},e.prototype.appendChild=function(e,t){var n=yn(e),r=yn(t);n&&r&&n instanceof hn&&n.addChild(r),this.delegate.appendChild(e,t)},e.prototype.insertBefore=function(e,t,n){var r=yn(e),o=yn(t),i=yn(n);r&&o&&r instanceof hn&&r.insertBefore(i,o),this.delegate.insertBefore(e,t,n)},e.prototype.removeChild=function(e,t){var n=yn(e),r=yn(t);n&&r&&n instanceof hn&&n.removeChild(r),this.delegate.removeChild(e,t)},e.prototype.selectRootElement=function(e){var t=this.delegate.selectRootElement(e),n=ys();return n&&gn(new hn(t,null,n)),t},e.prototype.setAttribute=function(e,t,n,r){var o=yn(e);if(o&&o instanceof hn){var i=r?r+":"+t:t;o.attributes[i]=n}this.delegate.setAttribute(e,t,n,r)},e.prototype.removeAttribute=function(e,t,n){var r=yn(e);if(r&&r instanceof hn){var o=n?n+":"+t:t;r.attributes[o]=null}this.delegate.removeAttribute(e,t,n)},e.prototype.addClass=function(e,t){var n=yn(e);n&&n instanceof hn&&(n.classes[t]=!0),this.delegate.addClass(e,t)},e.prototype.removeClass=function(e,t){var n=yn(e);n&&n instanceof hn&&(n.classes[t]=!1),this.delegate.removeClass(e,t)},e.prototype.setStyle=function(e,t,n,r){var o=yn(e);o&&o instanceof hn&&(o.styles[t]=n),this.delegate.setStyle(e,t,n,r)},e.prototype.removeStyle=function(e,t,n){var r=yn(e);r&&r instanceof hn&&(r.styles[t]=null),this.delegate.removeStyle(e,t,n)},e.prototype.setProperty=function(e,t,n){var r=yn(e);r&&r instanceof hn&&(r.properties[t]=n),this.delegate.setProperty(e,t,n)},e.prototype.listen=function(e,t,n){if("string"!=typeof e){var r=yn(e);r&&r.listeners.push(new fn(t,n))}return this.delegate.listen(e,t,n)},e.prototype.parentNode=function(e){return this.delegate.parentNode(e)},e.prototype.nextSibling=function(e){return this.delegate.nextSibling(e)},e.prototype.setValue=function(e,t){return this.delegate.setValue(e,t)},e}(),bs=function(e){function t(t,n,r){var o=e.call(this)||this;return o.moduleType=t,o._bootstrapComponents=n,o._ngModuleDefFactory=r,o}return o(t,e),t.prototype.create=function(e){!function(){if(!Pi){Pi=!0;var e=Kt()?{setCurrentNode:ns,createRootView:Mi,createEmbeddedView:ji,createComponentView:Hi,createNgModuleRef:Fi,overrideProvider:Ui,overrideComponentView:Zi,clearOverrides:qi,checkAndUpdateView:Gi,checkNoChangesView:Yi,destroyView:Ji,createDebugContext:function(e,t){return new ps(e,t)},handleEvent:rs,updateDirectives:os,updateRenderer:is}:{setCurrentNode:function(){},createRootView:Ri,createEmbeddedView:hi,createComponentView:yi,createNgModuleRef:Ro,overrideProvider:kr,overrideComponentView:kr,clearOverrides:kr,checkAndUpdateView:wi,checkNoChangesView:_i,destroyView:ki,createDebugContext:function(e,t){return new ps(e,t)},handleEvent:function(e,t,n,r){return e.def.handleEvent(e,t,n,r)},updateDirectives:function(e,t){return e.def.updateDirectives(0===t?Wi:Ki,e)},updateRenderer:function(e,t){return e.def.updateRenderer(0===t?Wi:Ki,e)}};Er.setCurrentNode=e.setCurrentNode,Er.createRootView=e.createRootView,Er.createEmbeddedView=e.createEmbeddedView,Er.createComponentView=e.createComponentView,Er.createNgModuleRef=e.createNgModuleRef,Er.overrideProvider=e.overrideProvider,Er.overrideComponentView=e.overrideComponentView,Er.clearOverrides=e.clearOverrides,Er.checkAndUpdateView=e.checkAndUpdateView,Er.checkNoChangesView=e.checkNoChangesView,Er.destroyView=e.destroyView,Er.resolveDep=Jo,Er.createDebugContext=e.createDebugContext,Er.handleEvent=e.handleEvent,Er.updateDirectives=e.updateDirectives,Er.updateRenderer=e.updateRenderer,Er.dirtyParentQueries=ri}}();var t=Kr(this._ngModuleDefFactory);return Er.createNgModuleRef(this.moduleType,e||De.NULL,this._bootstrapComponents,t)},t}(St);function _s(e,t,n){e!=t&&Cs(n)}function ws(e,t){null!=e&&Cs(t)}function Es(e,t){null==e&&Cs(t)}function Cs(e){throw new Error("ASSERTION ERROR: "+e)}function xs(e,t,n,r){var o=r?t:n;o&&function(e,t){for(var n=0;n<t.length;n+=2)t[n+1].call(e[t[n]])}(e,o)}"undefined"==typeof ngDevMode&&("undefined"!=typeof window&&(window.ngDevMode=!0),"undefined"!=typeof self&&(self.ngDevMode=!0),"undefined"!=typeof global&&(global.ngDevMode=!0));var Ts,ks,Is,Ss,Ns,As,Ds,Os,Ps,Rs="__ngHostLNode__",Ms=Promise.resolve(null),Vs=[0,0],js=null,Hs=!1;function Fs(e,t){var n=js;return Os=e&&e.data,Ps=e&&e.directives,Ns=e&&e.tView.data,Ds=e&&1==(1&e.flags),e&&e.tView.firstTemplatePass,e&&e.cleanup,Ts=e&&e.renderer,e&&e.bindingIndex<0&&(e.bindingIndex=e.bindingStartIndex),null!=t&&(Is=t,Ss=!0),js=e,As=e&&e.queries,n}function Ls(e){Hs||xs(Ps,js.tView.viewHooks,js.tView.viewCheckHooks,Ds),js.flags&=-6,js.lifecycleStage=1,js.bindingIndex=-1,Fs(e,null)}function Bs(){Us();var e=js.tView;e.firstTemplatePass=!1,zs(e.hostBindings),function(e){if(null!=e)for(var t=0;t<e.length;t+=2)Ks(e[t],e[t+1])}(e.components)}function zs(e){if(null!=e)for(var t=js.tView.directives,n=0;n<e.length;n+=2){var r=e[n],o=t[r];o.hostBindings&&o.hostBindings(r,e[n+1])}}function Us(){if(!Hs){var e=js.tView;(function(e,t,n){1===e.lifecycleStage&&(xs(e.directives,t.initHooks,t.checkHooks,n),e.lifecycleStage=2)})(js,e,Ds),xs(Ps,e.contentHooks,e.contentCheckHooks,Ds)}}function Zs(e,t,n,r){var o=Ss?Is:Is&&Is.parent,i=(Ss?As:Is&&Is.queries)||o&&o.queries&&o.queries.child(),s=null!=r,u=function(e,t,n,r,o,i){return{type:e,native:r,view:t,parent:n,child:null,next:null,nodeInjector:n?n.nodeInjector:null,data:o,queries:i,tNode:null,pNextOrParent:null,dynamicLContainerNode:null}}(t,js,o,n,s?r:null,i);return 2==(2&t)&&s&&(ngDevMode&&ws(r.node,"LView.node should not have been initialized"),r.node=u),null!=e&&(ngDevMode&&function(e,t){null==t&&(t=Os),_s(t.length,e,"index "+e+" expected to be at the end of arr (length "+t.length+")")}(e),Os[e]=u,e>=Ns.length?Ns[e]=null:u.tNode=Ns[e],Ss?(As=null,Is.view!==js&&2!==Is.type||(ngDevMode&&ws(Is.child,"previousOrParentNode's child should not have been set."),Is.child=u)):Is&&(ngDevMode&&ws(Is.next,"previousOrParentNode's next property should not have been set "+e+"."),Is.next=u,Is.dynamicLContainerNode&&(Is.dynamicLContainerNode.next=u))),Is=u,Ss=!0,u}function qs(e,t,n,r,o,i){var s,u=Ss,a=Is;try{Ss=!0,Is=null;var c=2;null==e&&(e=Zs(null,2,null,function(e,t,n,r,o,i){return{parent:js,id:e,flags:9|i,node:null,data:[],directives:null,tView:n,cleanup:null,renderer:t,child:null,tail:null,next:null,bindingStartIndex:-1,bindingIndex:-1,template:r,context:o,dynamicViewCount:0,lifecycleStage:1,queries:null,injector:js&&js.injector}}(-1,r,function(e,t,n){return e.ngPrivateData||(e.ngPrivateData=function(e,t){return{data:[],directives:null,firstTemplatePass:!0,initHooks:null,checkHooks:null,contentHooks:null,contentCheckHooks:null,viewHooks:null,viewCheckHooks:null,destroyHooks:null,pipeDestroyHooks:null,hostBindings:null,components:null,directiveRegistry:"function"==typeof e?e():e,pipeRegistry:"function"==typeof t?t():t,currentMatches:null}}(t,n))}(t,o||null,i||null),t,n,2)),c=1),s=Fs(e.data,e),t(c,n),Bs(),Ws()}finally{Ls(s),Ss=u,Is=a}return e}function Qs(e){return 1&e.flags?3:2}function Ws(){for(var e=js.child;null!==e;e=e.next)if(0!==e.dynamicViewCount&&e.views)for(var t=e,n=0;n<t.views.length;n++){var r=t.views[n];qs(r,r.data.template,r.data.context,Ts)}}function Ks(e,t){ngDevMode&&$s(t);var n=Os[t];ngDevMode&&function(e,t){Es(e,"should be called with a node"),_s(e.type,t,"should be a "+function(e){return 1==e?"Projection":0==e?"Container":2==e?"View":3==e?"Element":"<unknown>"}(t))}(n,3),ngDevMode&&Es(n.data,"Component's host node should have an LView attached.");var r=n.data;8==(8&r.flags)&&6&r.flags&&(ngDevMode&&$s(e,Ps),Js(r,n,js.tView.directives[e],function(e){return Array.isArray(e)?e[0]:e}(Ps[e])))}function Gs(e){for(var t=e;null!=t.parent;)t.flags|=4,t=t.parent;t.flags|=4,ngDevMode&&Es(t.context,"rootContext"),function(e){var t;e.clean==Ms&&(e.clean=new Promise(function(e){return t=e}),e.scheduler(function(){!function(e){var t=function(e){ngDevMode&&Es(e,"component");for(var t=Xs(e).view;t.parent;)t=t.parent;return t}(e),n=t.context.component,r=Xs(n);ngDevMode&&Es(r.data,"Component host node should be attached to an LView"),function(e,t,n,r){var o=Fs(t,e);try{ks.begin&&ks.begin(),Us(),zs(Vs),Ks(0,0)}finally{ks.end&&ks.end(),Ls(o)}}(r,t)}(e.component),t(null),e.clean=Ms}))}(t.context)}function Ys(e){var t=Xs(e);ngDevMode&&Es(t.data,"Component host node should be attached to an LView");var n=t.tNode.flags>>13,r=t.view.tView.directives[n];Js(t.data,t,r,e)}function Js(e,t,n,r){var o=Fs(e,t),i=n.template;try{i(Qs(e),r),Bs(),Ws()}finally{Ls(o)}}function $s(e,t){null==t&&(t=Os),function(e,t,n){e>=t&&Cs(n)}(e,t?t.length:0,"index expected to be a valid data index")}function Xs(e){ngDevMode&&Es(e,"expecting component got null");var t=e[Rs];return ngDevMode&&Es(e,"object is not a component"),t}!function(e){o(function(t,n,r){var o=e.call(this,t.data,r)||this;return o._lViewNode=t,o},e)}(function(){function e(e,t){this._view=e,this.context=t}return e.prototype._setComponentContext=function(e,t){this._view=e,this.context=t},e.prototype.destroy=function(){},e.prototype.onDestroy=function(e){},e.prototype.markForCheck=function(){Gs(this._view)},e.prototype.detach=function(){this._view.flags&=-9},e.prototype.reattach=function(){this._view.flags|=8},e.prototype.detectChanges=function(){Ys(this.context)},e.prototype.checkNoChanges=function(){!function(e){Hs=!0;try{Ys(e)}finally{Hs=!1}}(this.context)},e}());var eu=function(){},tu=Element.prototype,nu=tu.matches||tu.matchesSelector||tu.mozMatchesSelector||tu.msMatchesSelector||tu.oMatchesSelector||tu.webkitMatchesSelector,ru={schedule:function(e,t){var n=setTimeout(e,t);return function(){return clearTimeout(n)}},scheduleBeforeRender:function(e){if("undefined"==typeof window)return ru.schedule(e,0);if(void 0===window.requestAnimationFrame)return ru.schedule(e,16);var t=window.requestAnimationFrame(e);return function(){return window.cancelAnimationFrame(t)}}};function ou(e,t,n){var r=n;return function(e){return e.nodeType===Node.ELEMENT_NODE}(e)&&t.some(function(t,n){return!("*"===t||!function(e,t){return nu.call(e,t)}(e,t)||(r=n,0))}),r}var iu=function(){function e(e,t){this.component=e,this.injector=t,this.componentFactory=t.get(xt).resolveComponentFactory(e)}return e.prototype.create=function(e){return new su(this.componentFactory,e)},e}(),su=function(){function e(e,t){this.componentFactory=e,this.injector=t,this.inputChanges=null,this.implementsOnChanges=!1,this.scheduledChangeDetectionFn=null,this.scheduledDestroyFn=null,this.initialInputValues=new Map,this.uninitializedInputs=new Set}return e.prototype.connect=function(e){if(null!==this.scheduledDestroyFn)return this.scheduledDestroyFn(),void(this.scheduledDestroyFn=null);this.componentRef||this.initializeComponent(e)},e.prototype.disconnect=function(){var e=this;this.componentRef&&null===this.scheduledDestroyFn&&(this.scheduledDestroyFn=ru.schedule(function(){e.componentRef&&(e.componentRef.destroy(),e.componentRef=null)},10))},e.prototype.getInputValue=function(e){return this.componentRef?this.componentRef.instance[e]:this.initialInputValues.get(e)},e.prototype.setInputValue=function(e,t){(function(e,t){return e===t||e!=e&&t!=t})(t,this.getInputValue(e))||(this.componentRef?(this.recordInputChange(e,t),this.componentRef.instance[e]=t,this.scheduleDetectChanges()):this.initialInputValues.set(e,t))},e.prototype.initializeComponent=function(e){var t=De.create({providers:[],parent:this.injector}),n=function(e,t){var n=e.childNodes,r=t.map(function(){return[]}),o=-1;t.some(function(e,t){return"*"===e&&(o=t,!0)});for(var i=0,s=n.length;i<s;++i){var u=n[i],a=ou(u,t,o);-1!==a&&r[a].push(u)}return r}(e,this.componentFactory.ngContentSelectors);this.componentRef=this.componentFactory.create(t,n,e),this.implementsOnChanges=function(e){return"function"==typeof e}(this.componentRef.instance.ngOnChanges),this.initializeInputs(),this.initializeOutputs(),this.detectChanges(),this.injector.get(en).attachView(this.componentRef.hostView)},e.prototype.initializeInputs=function(){var e=this;this.componentFactory.inputs.forEach(function(t){var n=t.propName,r=e.initialInputValues.get(n);r?e.setInputValue(n,r):e.uninitializedInputs.add(n)}),this.initialInputValues.clear()},e.prototype.initializeOutputs=function(){var e=this,t=this.componentFactory.outputs.map(function(t){var n=t.propName,r=t.templateName;return e.componentRef.instance[n].pipe(L(function(e){return{name:r,value:e}}))});this.events=K.apply(void 0,a(t))},e.prototype.callNgOnChanges=function(){if(this.implementsOnChanges&&null!==this.inputChanges){var e=this.inputChanges;this.inputChanges=null,this.componentRef.instance.ngOnChanges(e)}},e.prototype.scheduleDetectChanges=function(){var e=this;this.scheduledChangeDetectionFn||(this.scheduledChangeDetectionFn=ru.scheduleBeforeRender(function(){e.scheduledChangeDetectionFn=null,e.detectChanges()}))},e.prototype.recordInputChange=function(e,t){if(!this.componentRef||this.implementsOnChanges){null===this.inputChanges&&(this.inputChanges={});var n=this.inputChanges[e];if(n)n.currentValue=t;else{var r=this.uninitializedInputs.has(e);this.uninitializedInputs.delete(e);var o=r?void 0:this.getInputValue(e);this.inputChanges[e]=new _n(o,t,r)}}},e.prototype.detectChanges=function(){this.componentRef&&(this.callNgOnChanges(),this.componentRef.changeDetectorRef.detectChanges())},e}(),uu=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.ngElementEventsSubscription=null,t}return o(t,e),t}(HTMLElement);var au=function(){function e(e){this.injector=e}return e.prototype.ngDoBootstrap=function(){var e=function(e,t){var n=function(e,t){return t.get(xt).resolveComponentFactory(e).inputs}(e,t.injector),r=t.strategyFactory||new iu(e,t.injector),i=function(e){var t={};return n.forEach(function(e){var n=e.propName,r=e.templateName;t[r.replace(/[A-Z]/g,function(e){return"-"+e.toLowerCase()})]=n}),t}(),s=function(e){function n(n){var o=e.call(this)||this;return o.ngElementStrategy=r.create(n||t.injector),o}return o(n,e),n.prototype.attributeChangedCallback=function(e,n,o,s){this.ngElementStrategy||(this.ngElementStrategy=r.create(t.injector));var u=i[e];this.ngElementStrategy.setInputValue(u,o)},n.prototype.connectedCallback=function(){var e=this;this.ngElementStrategy||(this.ngElementStrategy=r.create(t.injector)),this.ngElementStrategy.connect(this),this.ngElementEventsSubscription=this.ngElementStrategy.events.subscribe(function(t){var n=function(e,t,n){if("function"!=typeof CustomEvent){var r=e.createEvent("CustomEvent");return r.initCustomEvent(t,!1,!1,n),r}return new CustomEvent(t,{bubbles:!1,cancelable:!1,detail:n})}(e.ownerDocument,t.name,t.value);e.dispatchEvent(n)})},n.prototype.disconnectedCallback=function(){this.ngElementStrategy&&this.ngElementStrategy.disconnect(),this.ngElementEventsSubscription&&(this.ngElementEventsSubscription.unsubscribe(),this.ngElementEventsSubscription=null)},n.observedAttributes=Object.keys(i),n}(uu);return n.map(function(e){return e.propName}).forEach(function(e){Object.defineProperty(s.prototype,e,{get:function(){return this.ngElementStrategy.getInputValue(e)},set:function(t){this.ngElementStrategy.setInputValue(e,t)},configurable:!0,enumerable:!0})}),s}(eu,{injector:this.injector});customElements.define("external-dashboard-tile",e)},e}(),cu=function(e){return{id:Nr,styles:e.styles,encapsulation:e.encapsulation,data:e.data}}({encapsulation:0,styles:[[""]],data:{}});function lu(e){return di(0,[(e()(),ro(0,0,null,null,23,"div",[["class","card"]],null,null,null,null,null)),(e()(),ro(1,0,null,null,2,"div",[["class","header"]],null,null,null,null,null)),(e()(),ro(2,0,null,null,1,"h1",[["class","title"]],null,null,null,null,null)),(e()(),ai(-1,null,["External"])),(e()(),ro(4,0,null,null,19,"div",[["class","content"]],null,null,null,null,null)),(e()(),ro(5,0,null,null,18,"div",[["style","height:200px;"]],null,null,null,null,null)),(e()(),ro(6,0,null,null,0,"br",[],null,null,null,null,null)),(e()(),ro(7,0,null,null,16,"table",[["class","table table-contensed"]],null,null,null,null,null)),(e()(),ro(8,0,null,null,15,"tbody",[],null,null,null,null,null)),(e()(),ro(9,0,null,null,4,"tr",[],null,null,null,null,null)),(e()(),ro(10,0,null,null,1,"td",[],null,null,null,null,null)),(e()(),ai(-1,null,["A"])),(e()(),ro(12,0,null,null,1,"td",[],null,null,null,null,null)),(e()(),ai(13,null,["",""])),(e()(),ro(14,0,null,null,4,"tr",[],null,null,null,null,null)),(e()(),ro(15,0,null,null,1,"td",[],null,null,null,null,null)),(e()(),ai(-1,null,["B"])),(e()(),ro(17,0,null,null,1,"td",[],null,null,null,null,null)),(e()(),ai(18,null,["",""])),(e()(),ro(19,0,null,null,4,"tr",[],null,null,null,null,null)),(e()(),ro(20,0,null,null,1,"td",[],null,null,null,null,null)),(e()(),ai(-1,null,["C"])),(e()(),ro(22,0,null,null,1,"td",[],null,null,null,null,null)),(e()(),ai(23,null,["",""]))],null,function(e,t){var n=t.component;e(t,13,0,n.a),e(t,18,0,n.b),e(t,23,0,n.c)})}var du=new Eo("ng-component",eu,function(e){return di(0,[(e()(),ro(0,0,null,null,1,"ng-component",[],null,null,null,lu,cu)),(t=49152,n=eu,r=[],o=[],function(e,t,n,r,o,i,s,u,a){var c=Zr(n),l=c.matchedQueries,d=c.references,f=c.matchedQueryIds;a||(a=[]),u||(u=[]),i=Ee(i);var p=qr(s,_e(o));return{nodeIndex:-1,parent:null,renderParent:null,bindingIndex:-1,outputIndex:-1,checkIndex:e,flags:t,childFlags:0,directChildFlags:0,childMatchedQueries:0,matchedQueries:l,matchedQueryIds:f,references:d,ngContentIndex:-1,childCount:r,bindings:u,bindingFlags:no(u),outputs:a,element:null,provider:{token:o,value:i,deps:p},text:null,query:null,ngContent:null}}(1,t|=16384,null,0,n,n,[],r,o))],null,null);var t,n,r,o},{a:"a",b:"b",c:"c"},{},[]),fu=function(){},pu=void 0,hu=["en",[["a","p"],["AM","PM"],pu],[["AM","PM"],pu,pu],[["S","M","T","W","T","F","S"],["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],["Su","Mo","Tu","We","Th","Fr","Sa"]],pu,[["J","F","M","A","M","J","J","A","S","O","N","D"],["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],["January","February","March","April","May","June","July","August","September","October","November","December"]],pu,[["B","A"],["BC","AD"],["Before Christ","Anno Domini"]],0,[6,0],["M/d/yy","MMM d, y","MMMM d, y","EEEE, MMMM d, y"],["h:mm a","h:mm:ss a","h:mm:ss a z","h:mm:ss a zzzz"],["{1}, {0}",pu,"{1} 'at' {0}",pu],[".",",",";","%","+","-","E","×","‰","∞","NaN",":"],["#,##0.###","#,##0%","¤#,##0.00","#E0"],"$","US Dollar",{},function(e){var t=Math.floor(Math.abs(e)),n=e.toString().replace(/^[^.]*\.?/,"").length;return 1===t&&0===n?1:5}],vu={},yu=function(e){return e[e.Zero=0]="Zero",e[e.One=1]="One",e[e.Two=2]="Two",e[e.Few=3]="Few",e[e.Many=4]="Many",e[e.Other=5]="Other",e}({});var gu=new ae("UseV4Plurals"),mu=function(){},bu=function(e){function t(t,n){var r=e.call(this)||this;return r.locale=t,r.deprecatedPluralFn=n,r}return o(t,e),t.prototype.getPluralCategory=function(e,t){switch(this.deprecatedPluralFn?this.deprecatedPluralFn(t||this.locale,e):function(e){return function(e){var t=e.toLowerCase().replace(/_/g,"-"),n=vu[t];if(n)return n;var r=t.split("-")[0];if(n=vu[r])return n;if("en"===r)return hu;throw new Error('Missing locale data for the locale "'+e+'".')}(e)[18]}(t||this.locale)(e)){case yu.Zero:return"zero";case yu.One:return"one";case yu.Two:return"two";case yu.Few:return"few";case yu.Many:return"many";default:return"other"}},t}(mu),_u=function(){},wu=new ae("DocumentToken"),Eu="server",Cu=null;function xu(){return Cu}var Tu,ku=function(e){function t(){var t=e.call(this)||this;t._animationPrefix=null,t._transitionEnd=null;try{var n=t.createElement("div",document);if(null!=t.getStyle(n,"animationName"))t._animationPrefix="";else for(var r=["Webkit","Moz","O","ms"],o=0;o<r.length;o++)if(null!=t.getStyle(n,r[o]+"AnimationName")){t._animationPrefix="-"+r[o].toLowerCase()+"-";break}var i={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};Object.keys(i).forEach(function(e){null!=t.getStyle(n,e)&&(t._transitionEnd=i[e])})}catch(e){t._animationPrefix=null,t._transitionEnd=null}return t}return o(t,e),t.prototype.getDistributedNodes=function(e){return e.getDistributedNodes()},t.prototype.resolveAndSetHref=function(e,t,n){e.href=null==n?t:t+"/../"+n},t.prototype.supportsDOMEvents=function(){return!0},t.prototype.supportsNativeShadowDOM=function(){return"function"==typeof document.body.createShadowRoot},t.prototype.getAnimationPrefix=function(){return this._animationPrefix?this._animationPrefix:""},t.prototype.getTransitionEnd=function(){return this._transitionEnd?this._transitionEnd:""},t.prototype.supportsAnimation=function(){return null!=this._animationPrefix&&null!=this._transitionEnd},t}(function(){function e(){this.resourceLoaderType=null}return Object.defineProperty(e.prototype,"attrToPropMap",{get:function(){return this._attrToPropMap},set:function(e){this._attrToPropMap=e},enumerable:!0,configurable:!0}),e}()),Iu={class:"className",innerHtml:"innerHTML",readonly:"readOnly",tabindex:"tabIndex"},Su={"\b":"Backspace","\t":"Tab","":"Delete","":"Escape",Del:"Delete",Esc:"Escape",Left:"ArrowLeft",Right:"ArrowRight",Up:"ArrowUp",Down:"ArrowDown",Menu:"ContextMenu",Scroll:"ScrollLock",Win:"OS"},Nu={A:"1",B:"2",C:"3",D:"4",E:"5",F:"6",G:"7",H:"8",I:"9",J:"*",K:"+",M:"-",N:".",O:"/","`":"0","":"NumLock"};he.Node&&(Tu=he.Node.prototype.contains||function(e){return!!(16&this.compareDocumentPosition(e))});var Au,Du=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.parse=function(e){throw new Error("parse not implemented")},t.makeCurrent=function(){var e;e=new t,Cu||(Cu=e)},t.prototype.hasProperty=function(e,t){return t in e},t.prototype.setProperty=function(e,t,n){e[t]=n},t.prototype.getProperty=function(e,t){return e[t]},t.prototype.invoke=function(e,t,n){var r;(r=e)[t].apply(r,a(n))},t.prototype.logError=function(e){window.console&&(console.error?console.error(e):console.log(e))},t.prototype.log=function(e){window.console&&window.console.log&&window.console.log(e)},t.prototype.logGroup=function(e){window.console&&window.console.group&&window.console.group(e)},t.prototype.logGroupEnd=function(){window.console&&window.console.groupEnd&&window.console.groupEnd()},Object.defineProperty(t.prototype,"attrToPropMap",{get:function(){return Iu},enumerable:!0,configurable:!0}),t.prototype.contains=function(e,t){return Tu.call(e,t)},t.prototype.querySelector=function(e,t){return e.querySelector(t)},t.prototype.querySelectorAll=function(e,t){return e.querySelectorAll(t)},t.prototype.on=function(e,t,n){e.addEventListener(t,n,!1)},t.prototype.onAndCancel=function(e,t,n){return e.addEventListener(t,n,!1),function(){e.removeEventListener(t,n,!1)}},t.prototype.dispatchEvent=function(e,t){e.dispatchEvent(t)},t.prototype.createMouseEvent=function(e){var t=this.getDefaultDocument().createEvent("MouseEvent");return t.initEvent(e,!0,!0),t},t.prototype.createEvent=function(e){var t=this.getDefaultDocument().createEvent("Event");return t.initEvent(e,!0,!0),t},t.prototype.preventDefault=function(e){e.preventDefault(),e.returnValue=!1},t.prototype.isPrevented=function(e){return e.defaultPrevented||null!=e.returnValue&&!e.returnValue},t.prototype.getInnerHTML=function(e){return e.innerHTML},t.prototype.getTemplateContent=function(e){return"content"in e&&this.isTemplateElement(e)?e.content:null},t.prototype.getOuterHTML=function(e){return e.outerHTML},t.prototype.nodeName=function(e){return e.nodeName},t.prototype.nodeValue=function(e){return e.nodeValue},t.prototype.type=function(e){return e.type},t.prototype.content=function(e){return this.hasProperty(e,"content")?e.content:e},t.prototype.firstChild=function(e){return e.firstChild},t.prototype.nextSibling=function(e){return e.nextSibling},t.prototype.parentElement=function(e){return e.parentNode},t.prototype.childNodes=function(e){return e.childNodes},t.prototype.childNodesAsList=function(e){for(var t=e.childNodes,n=new Array(t.length),r=0;r<t.length;r++)n[r]=t[r];return n},t.prototype.clearNodes=function(e){for(;e.firstChild;)e.removeChild(e.firstChild)},t.prototype.appendChild=function(e,t){e.appendChild(t)},t.prototype.removeChild=function(e,t){e.removeChild(t)},t.prototype.replaceChild=function(e,t,n){e.replaceChild(t,n)},t.prototype.remove=function(e){return e.parentNode&&e.parentNode.removeChild(e),e},t.prototype.insertBefore=function(e,t,n){e.insertBefore(n,t)},t.prototype.insertAllBefore=function(e,t,n){n.forEach(function(n){return e.insertBefore(n,t)})},t.prototype.insertAfter=function(e,t,n){e.insertBefore(n,t.nextSibling)},t.prototype.setInnerHTML=function(e,t){e.innerHTML=t},t.prototype.getText=function(e){return e.textContent},t.prototype.setText=function(e,t){e.textContent=t},t.prototype.getValue=function(e){return e.value},t.prototype.setValue=function(e,t){e.value=t},t.prototype.getChecked=function(e){return e.checked},t.prototype.setChecked=function(e,t){e.checked=t},t.prototype.createComment=function(e){return this.getDefaultDocument().createComment(e)},t.prototype.createTemplate=function(e){var t=this.getDefaultDocument().createElement("template");return t.innerHTML=e,t},t.prototype.createElement=function(e,t){return(t=t||this.getDefaultDocument()).createElement(e)},t.prototype.createElementNS=function(e,t,n){return(n=n||this.getDefaultDocument()).createElementNS(e,t)},t.prototype.createTextNode=function(e,t){return(t=t||this.getDefaultDocument()).createTextNode(e)},t.prototype.createScriptTag=function(e,t,n){var r=(n=n||this.getDefaultDocument()).createElement("SCRIPT");return r.setAttribute(e,t),r},t.prototype.createStyleElement=function(e,t){var n=(t=t||this.getDefaultDocument()).createElement("style");return this.appendChild(n,this.createTextNode(e,t)),n},t.prototype.createShadowRoot=function(e){return e.createShadowRoot()},t.prototype.getShadowRoot=function(e){return e.shadowRoot},t.prototype.getHost=function(e){return e.host},t.prototype.clone=function(e){return e.cloneNode(!0)},t.prototype.getElementsByClassName=function(e,t){return e.getElementsByClassName(t)},t.prototype.getElementsByTagName=function(e,t){return e.getElementsByTagName(t)},t.prototype.classList=function(e){return Array.prototype.slice.call(e.classList,0)},t.prototype.addClass=function(e,t){e.classList.add(t)},t.prototype.removeClass=function(e,t){e.classList.remove(t)},t.prototype.hasClass=function(e,t){return e.classList.contains(t)},t.prototype.setStyle=function(e,t,n){e.style[t]=n},t.prototype.removeStyle=function(e,t){e.style[t]=""},t.prototype.getStyle=function(e,t){return e.style[t]},t.prototype.hasStyle=function(e,t,n){var r=this.getStyle(e,t)||"";return n?r==n:r.length>0},t.prototype.tagName=function(e){return e.tagName},t.prototype.attributeMap=function(e){for(var t=new Map,n=e.attributes,r=0;r<n.length;r++){var o=n.item(r);t.set(o.name,o.value)}return t},t.prototype.hasAttribute=function(e,t){return e.hasAttribute(t)},t.prototype.hasAttributeNS=function(e,t,n){return e.hasAttributeNS(t,n)},t.prototype.getAttribute=function(e,t){return e.getAttribute(t)},t.prototype.getAttributeNS=function(e,t,n){return e.getAttributeNS(t,n)},t.prototype.setAttribute=function(e,t,n){e.setAttribute(t,n)},t.prototype.setAttributeNS=function(e,t,n,r){e.setAttributeNS(t,n,r)},t.prototype.removeAttribute=function(e,t){e.removeAttribute(t)},t.prototype.removeAttributeNS=function(e,t,n){e.removeAttributeNS(t,n)},t.prototype.templateAwareRoot=function(e){return this.isTemplateElement(e)?this.content(e):e},t.prototype.createHtmlDocument=function(){return document.implementation.createHTMLDocument("fakeTitle")},t.prototype.getDefaultDocument=function(){return document},t.prototype.getBoundingClientRect=function(e){try{return e.getBoundingClientRect()}catch(e){return{top:0,bottom:0,left:0,right:0,width:0,height:0}}},t.prototype.getTitle=function(e){return e.title},t.prototype.setTitle=function(e,t){e.title=t||""},t.prototype.elementMatches=function(e,t){return!!this.isElementNode(e)&&(e.matches&&e.matches(t)||e.msMatchesSelector&&e.msMatchesSelector(t)||e.webkitMatchesSelector&&e.webkitMatchesSelector(t))},t.prototype.isTemplateElement=function(e){return this.isElementNode(e)&&"TEMPLATE"===e.nodeName},t.prototype.isTextNode=function(e){return e.nodeType===Node.TEXT_NODE},t.prototype.isCommentNode=function(e){return e.nodeType===Node.COMMENT_NODE},t.prototype.isElementNode=function(e){return e.nodeType===Node.ELEMENT_NODE},t.prototype.hasShadowRoot=function(e){return null!=e.shadowRoot&&e instanceof HTMLElement},t.prototype.isShadowRoot=function(e){return e instanceof DocumentFragment},t.prototype.importIntoDoc=function(e){return document.importNode(this.templateAwareRoot(e),!0)},t.prototype.adoptNode=function(e){return document.adoptNode(e)},t.prototype.getHref=function(e){return e.getAttribute("href")},t.prototype.getEventKey=function(e){var t=e.key;if(null==t){if(null==(t=e.keyIdentifier))return"Unidentified";t.startsWith("U+")&&(t=String.fromCharCode(parseInt(t.substring(2),16)),3===e.location&&Nu.hasOwnProperty(t)&&(t=Nu[t]))}return Su[t]||t},t.prototype.getGlobalEventTarget=function(e,t){return"window"===t?window:"document"===t?e:"body"===t?e.body:null},t.prototype.getHistory=function(){return window.history},t.prototype.getLocation=function(){return window.location},t.prototype.getBaseHref=function(e){var t=Ou||(Ou=document.querySelector("base"))?Ou.getAttribute("href"):null;return null==t?null:function(e){return Au||(Au=document.createElement("a")),Au.setAttribute("href",e),"/"===Au.pathname.charAt(0)?Au.pathname:"/"+Au.pathname}(t)},t.prototype.resetBaseElement=function(){Ou=null},t.prototype.getUserAgent=function(){return window.navigator.userAgent},t.prototype.setData=function(e,t,n){this.setAttribute(e,"data-"+t,n)},t.prototype.getData=function(e,t){return this.getAttribute(e,"data-"+t)},t.prototype.getComputedStyle=function(e){return getComputedStyle(e)},t.prototype.supportsWebAnimation=function(){return"function"==typeof Element.prototype.animate},t.prototype.performanceNow=function(){return window.performance&&window.performance.now?window.performance.now():(new Date).getTime()},t.prototype.supportsCookies=function(){return!0},t.prototype.getCookie=function(e){return function(e,t){t=encodeURIComponent(t);try{for(var n=s(e.split(";")),r=n.next();!r.done;r=n.next()){var o=r.value,i=o.indexOf("="),a=u(-1==i?[o,""]:[o.slice(0,i),o.slice(i+1)],2),c=a[0],l=a[1];if(c.trim()===t)return decodeURIComponent(l)}}catch(e){d={error:e}}finally{try{r&&!r.done&&(f=n.return)&&f.call(n)}finally{if(d)throw d.error}}return null;var d,f}(document.cookie,e)},t.prototype.setCookie=function(e,t){document.cookie=encodeURIComponent(e)+"="+encodeURIComponent(t)},t}(ku),Ou=null,Pu=wu;function Ru(){return!!window.history.pushState}var Mu=function(e){function t(t){var n=e.call(this)||this;return n._doc=t,n._init(),n}return o(t,e),t.prototype._init=function(){this.location=xu().getLocation(),this._history=xu().getHistory()},t.prototype.getBaseHrefFromDOM=function(){return xu().getBaseHref(this._doc)},t.prototype.onPopState=function(e){xu().getGlobalEventTarget(this._doc,"window").addEventListener("popstate",e,!1)},t.prototype.onHashChange=function(e){xu().getGlobalEventTarget(this._doc,"window").addEventListener("hashchange",e,!1)},Object.defineProperty(t.prototype,"pathname",{get:function(){return this.location.pathname},set:function(e){this.location.pathname=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"search",{get:function(){return this.location.search},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hash",{get:function(){return this.location.hash},enumerable:!0,configurable:!0}),t.prototype.pushState=function(e,t,n){Ru()?this._history.pushState(e,t,n):this.location.hash=n},t.prototype.replaceState=function(e,t,n){Ru()?this._history.replaceState(e,t,n):this.location.hash=n},t.prototype.forward=function(){this._history.forward()},t.prototype.back=function(){this._history.back()},t.ctorParameters=function(){return[{type:void 0,decorators:[{type:Ce,args:[Pu]}]}]},t}(fu),Vu=function(){function e(e){this._doc=e,this._dom=xu()}return e.prototype.addTag=function(e,t){return void 0===t&&(t=!1),e?this._getOrCreateElement(e,t):null},e.prototype.addTags=function(e,t){var n=this;return void 0===t&&(t=!1),e?e.reduce(function(e,r){return r&&e.push(n._getOrCreateElement(r,t)),e},[]):[]},e.prototype.getTag=function(e){return e&&this._dom.querySelector(this._doc,"meta["+e+"]")||null},e.prototype.getTags=function(e){if(!e)return[];var t=this._dom.querySelectorAll(this._doc,"meta["+e+"]");return t?[].slice.call(t):[]},e.prototype.updateTag=function(e,t){if(!e)return null;t=t||this._parseSelector(e);var n=this.getTag(t);return n?this._setMetaElementAttributes(e,n):this._getOrCreateElement(e,!0)},e.prototype.removeTag=function(e){this.removeTagElement(this.getTag(e))},e.prototype.removeTagElement=function(e){e&&this._dom.remove(e)},e.prototype._getOrCreateElement=function(e,t){if(void 0===t&&(t=!1),!t){var n=this._parseSelector(e),r=this.getTag(n);if(r&&this._containsAttributes(e,r))return r}var o=this._dom.createElement("meta");this._setMetaElementAttributes(e,o);var i=this._dom.getElementsByTagName(this._doc,"head")[0];return this._dom.appendChild(i,o),o},e.prototype._setMetaElementAttributes=function(e,t){var n=this;return Object.keys(e).forEach(function(r){return n._dom.setAttribute(t,r,e[r])}),t},e.prototype._parseSelector=function(e){var t=e.name?"name":"property";return t+'="'+e[t]+'"'},e.prototype._containsAttributes=function(e,t){var n=this;return Object.keys(e).every(function(r){return n._dom.getAttribute(t,r)===e[r]})},e}(),ju=new ae("TRANSITION_ID"),Hu=[{provide:it,useFactory:function(e,t,n){return function(){n.get(st).donePromise.then(function(){var n=xu();Array.prototype.slice.apply(n.querySelectorAll(t,"style[ng-transition]")).filter(function(t){return n.getAttribute(t,"ng-transition")===e}).forEach(function(e){return n.remove(e)})})}},deps:[ju,Pu,De],multi:!0}],Fu=function(){function e(){}return e.init=function(){!function(e){Zt=e}(new e)},e.prototype.addToWindow=function(e){he.getAngularTestability=function(t,n){void 0===n&&(n=!0);var r=e.findTestabilityInTree(t,n);if(null==r)throw new Error("Could not find testability for element.");return r},he.getAllAngularTestabilities=function(){return e.getAllTestabilities()},he.getAllAngularRootElements=function(){return e.getAllRootElements()},he.frameworkStabilizers||(he.frameworkStabilizers=[]),he.frameworkStabilizers.push(function(e){var t=he.getAllAngularTestabilities(),n=t.length,r=!1,o=function(t){r=r||t,0==--n&&e(r)};t.forEach(function(e){e.whenStable(o)})})},e.prototype.findTestabilityInTree=function(e,t,n){if(null==t)return null;var r=e.getTestability(t);return null!=r?r:n?xu().isShadowRoot(t)?this.findTestabilityInTree(e,xu().getHost(t),!0):this.findTestabilityInTree(e,xu().parentElement(t),!0):null},e}(),Lu=function(){function e(e){this._doc=e}return e.prototype.getTitle=function(){return xu().getTitle(this._doc)},e.prototype.setTitle=function(e){xu().setTitle(this._doc,e)},e}();function Bu(e,t){"undefined"!=typeof COMPILED&&COMPILED||((he.ng=he.ng||{})[e]=t)}var zu={ApplicationRef:en,NgZone:Rt},Uu="probe",Zu="coreTokens";function qu(e){return yn(e)}function Qu(e){return Bu(Uu,qu),Bu(Zu,i({},zu,function(e){return e.reduce(function(e,t){return e[t.name]=t.token,e},{})}(e||[]))),function(){return qu}}var Wu=new ae("EventManagerPlugins"),Ku=function(){function e(e,t){var n=this;this._zone=t,this._eventNameToPlugin=new Map,e.forEach(function(e){return e.manager=n}),this._plugins=e.slice().reverse()}return e.prototype.addEventListener=function(e,t,n){return this._findPluginFor(t).addEventListener(e,t,n)},e.prototype.addGlobalEventListener=function(e,t,n){return this._findPluginFor(t).addGlobalEventListener(e,t,n)},e.prototype.getZone=function(){return this._zone},e.prototype._findPluginFor=function(e){var t=this._eventNameToPlugin.get(e);if(t)return t;for(var n=this._plugins,r=0;r<n.length;r++){var o=n[r];if(o.supports(e))return this._eventNameToPlugin.set(e,o),o}throw new Error("No event manager plugin found for event "+e)},e}(),Gu=function(){function e(e){this._doc=e}return e.prototype.addGlobalEventListener=function(e,t,n){var r=xu().getGlobalEventTarget(this._doc,e);if(!r)throw new Error("Unsupported event target "+r+" for event "+t);return this.addEventListener(r,t,n)},e}(),Yu=function(){function e(){this._stylesSet=new Set}return e.prototype.addStyles=function(e){var t=this,n=new Set;e.forEach(function(e){t._stylesSet.has(e)||(t._stylesSet.add(e),n.add(e))}),this.onStylesAdded(n)},e.prototype.onStylesAdded=function(e){},e.prototype.getAllStyles=function(){return Array.from(this._stylesSet)},e}(),Ju=function(e){function t(t){var n=e.call(this)||this;return n._doc=t,n._hostNodes=new Set,n._styleNodes=new Set,n._hostNodes.add(t.head),n}return o(t,e),t.prototype._addStylesToHost=function(e,t){var n=this;e.forEach(function(e){var r=n._doc.createElement("style");r.textContent=e,n._styleNodes.add(t.appendChild(r))})},t.prototype.addHost=function(e){this._addStylesToHost(this._stylesSet,e),this._hostNodes.add(e)},t.prototype.removeHost=function(e){this._hostNodes.delete(e)},t.prototype.onStylesAdded=function(e){var t=this;this._hostNodes.forEach(function(n){return t._addStylesToHost(e,n)})},t.prototype.ngOnDestroy=function(){this._styleNodes.forEach(function(e){return xu().remove(e)})},t}(Yu),$u={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},Xu=/%COMP%/g,ea="_nghost-%COMP%",ta="_ngcontent-%COMP%";function na(e,t,n){for(var r=0;r<t.length;r++){var o=t[r];Array.isArray(o)?na(e,o,n):(o=o.replace(Xu,e),n.push(o))}return n}function ra(e){return function(t){!1===e(t)&&(t.preventDefault(),t.returnValue=!1)}}var oa=function(){function e(e,t){this.eventManager=e,this.sharedStylesHost=t,this.rendererByCompId=new Map,this.defaultRenderer=new ia(e)}return e.prototype.createRenderer=function(e,t){if(!e||!t)return this.defaultRenderer;switch(t.encapsulation){case Ke.Emulated:var n=this.rendererByCompId.get(t.id);return n||(n=new ca(this.eventManager,this.sharedStylesHost,t),this.rendererByCompId.set(t.id,n)),n.applyToHost(e),n;case Ke.Native:return new la(this.eventManager,this.sharedStylesHost,e,t);default:if(!this.rendererByCompId.has(t.id)){var r=na(t.id,t.styles,[]);this.sharedStylesHost.addStyles(r),this.rendererByCompId.set(t.id,this.defaultRenderer)}return this.defaultRenderer}},e.prototype.begin=function(){},e.prototype.end=function(){},e}(),ia=function(){function e(e){this.eventManager=e,this.data=Object.create(null)}return e.prototype.destroy=function(){},e.prototype.createElement=function(e,t){return t?document.createElementNS($u[t],e):document.createElement(e)},e.prototype.createComment=function(e){return document.createComment(e)},e.prototype.createText=function(e){return document.createTextNode(e)},e.prototype.appendChild=function(e,t){e.appendChild(t)},e.prototype.insertBefore=function(e,t,n){e&&e.insertBefore(t,n)},e.prototype.removeChild=function(e,t){e&&e.removeChild(t)},e.prototype.selectRootElement=function(e){var t="string"==typeof e?document.querySelector(e):e;if(!t)throw new Error('The selector "'+e+'" did not match any elements');return t.textContent="",t},e.prototype.parentNode=function(e){return e.parentNode},e.prototype.nextSibling=function(e){return e.nextSibling},e.prototype.setAttribute=function(e,t,n,r){if(r){t=r+":"+t;var o=$u[r];o?e.setAttributeNS(o,t,n):e.setAttribute(t,n)}else e.setAttribute(t,n)},e.prototype.removeAttribute=function(e,t,n){if(n){var r=$u[n];r?e.removeAttributeNS(r,t):e.removeAttribute(n+":"+t)}else e.removeAttribute(t)},e.prototype.addClass=function(e,t){e.classList.add(t)},e.prototype.removeClass=function(e,t){e.classList.remove(t)},e.prototype.setStyle=function(e,t,n,r){r&on.DashCase?e.style.setProperty(t,n,r&on.Important?"important":""):e.style[t]=n},e.prototype.removeStyle=function(e,t,n){n&on.DashCase?e.style.removeProperty(t):e.style[t]=""},e.prototype.setProperty=function(e,t,n){ua(t,"property"),e[t]=n},e.prototype.setValue=function(e,t){e.nodeValue=t},e.prototype.listen=function(e,t,n){return ua(t,"listener"),"string"==typeof e?this.eventManager.addGlobalEventListener(e,t,ra(n)):this.eventManager.addEventListener(e,t,ra(n))},e}(),sa="@".charCodeAt(0);function ua(e,t){if(e.charCodeAt(0)===sa)throw new Error("Found the synthetic "+t+" "+e+'. Please include either "BrowserAnimationsModule" or "NoopAnimationsModule" in your application.')}var aa,ca=function(e){function t(t,n,r){var o=e.call(this,t)||this;o.component=r;var i=na(r.id,r.styles,[]);return n.addStyles(i),o.contentAttr=function(e){return ta.replace(Xu,e)}(r.id),o.hostAttr=function(e){return ea.replace(Xu,e)}(r.id),o}return o(t,e),t.prototype.applyToHost=function(t){e.prototype.setAttribute.call(this,t,this.hostAttr,"")},t.prototype.createElement=function(t,n){var r=e.prototype.createElement.call(this,t,n);return e.prototype.setAttribute.call(this,r,this.contentAttr,""),r},t}(ia),la=function(e){function t(t,n,r,o){var i=e.call(this,t)||this;i.sharedStylesHost=n,i.hostEl=r,i.component=o,i.shadowRoot=r.createShadowRoot(),i.sharedStylesHost.addHost(i.shadowRoot);for(var s=na(o.id,o.styles,[]),u=0;u<s.length;u++){var a=document.createElement("style");a.textContent=s[u],i.shadowRoot.appendChild(a)}return i}return o(t,e),t.prototype.nodeOrShadowRoot=function(e){return e===this.hostEl?this.shadowRoot:e},t.prototype.destroy=function(){this.sharedStylesHost.removeHost(this.shadowRoot)},t.prototype.appendChild=function(t,n){return e.prototype.appendChild.call(this,this.nodeOrShadowRoot(t),n)},t.prototype.insertBefore=function(t,n,r){return e.prototype.insertBefore.call(this,this.nodeOrShadowRoot(t),n,r)},t.prototype.removeChild=function(t,n){return e.prototype.removeChild.call(this,this.nodeOrShadowRoot(t),n)},t.prototype.parentNode=function(t){return this.nodeOrShadowRoot(e.prototype.parentNode.call(this,this.nodeOrShadowRoot(t)))},t}(ia),da="undefined"!=typeof Zone&&Zone.__symbol__||function(e){return"__zone_symbol__"+e},fa=da("addEventListener"),pa=da("removeEventListener"),ha={},va="__zone_symbol__propagationStopped";"undefined"!=typeof Zone&&Zone[da("BLACK_LISTED_EVENTS")]&&(aa={});var ya=function(e){return!!aa&&aa.hasOwnProperty(e)},ga=function(e){var t=ha[e.type];if(t){var n=this[t];if(n){var r=[e];if(1===n.length)return(s=n[0]).zone!==Zone.current?s.zone.run(s.handler,this,r):s.handler.apply(this,r);for(var o=n.slice(),i=0;i<o.length&&!0!==e[va];i++){var s;(s=o[i]).zone!==Zone.current?s.zone.run(s.handler,this,r):s.handler.apply(this,r)}}}},ma=function(e){function t(t,n,r){var o=e.call(this,t)||this;return o.ngZone=n,r&&r===Eu||o.patchEvent(),o}return o(t,e),t.prototype.patchEvent=function(){if("undefined"!=typeof Event&&Event&&Event.prototype&&!Event.prototype.__zone_symbol__stopImmediatePropagation){var e=Event.prototype.__zone_symbol__stopImmediatePropagation=Event.prototype.stopImmediatePropagation;Event.prototype.stopImmediatePropagation=function(){this&&(this[va]=!0),e&&e.apply(this,arguments)}}},t.prototype.supports=function(e){return!0},t.prototype.addEventListener=function(e,t,n){var r=this,o=n;if(!e[fa]||Rt.isInAngularZone()&&!ya(t))e.addEventListener(t,o,!1);else{var i=ha[t];i||(i=ha[t]=da("ANGULAR"+t+"FALSE"));var s=e[i],u=s&&s.length>0;s||(s=e[i]=[]);var a=ya(t)?Zone.root:Zone.current;if(0===s.length)s.push({zone:a,handler:o});else{for(var c=!1,l=0;l<s.length;l++)if(s[l].handler===o){c=!0;break}c||s.push({zone:a,handler:o})}u||e[fa](t,ga,!1)}return function(){return r.removeEventListener(e,t,o)}},t.prototype.removeEventListener=function(e,t,n){var r=e[pa];if(!r)return e.removeEventListener.apply(e,[t,n,!1]);var o=ha[t],i=o&&e[o];if(!i)return e.removeEventListener.apply(e,[t,n,!1]);for(var s=!1,u=0;u<i.length;u++)if(i[u].handler===n){s=!0,i.splice(u,1);break}s?0===i.length&&r.apply(e,[t,ga,!1]):e.removeEventListener.apply(e,[t,n,!1])},t}(Gu),ba={pan:!0,panstart:!0,panmove:!0,panend:!0,pancancel:!0,panleft:!0,panright:!0,panup:!0,pandown:!0,pinch:!0,pinchstart:!0,pinchmove:!0,pinchend:!0,pinchcancel:!0,pinchin:!0,pinchout:!0,press:!0,pressup:!0,rotate:!0,rotatestart:!0,rotatemove:!0,rotateend:!0,rotatecancel:!0,swipe:!0,swipeleft:!0,swiperight:!0,swipeup:!0,swipedown:!0,tap:!0},_a=new ae("HammerGestureConfig"),wa=function(){function e(){this.events=[],this.overrides={}}return e.prototype.buildHammer=function(e){var t=new Hammer(e,this.options);for(var n in t.get("pinch").set({enable:!0}),t.get("rotate").set({enable:!0}),this.overrides)t.get(n).set(this.overrides[n]);return t},e}(),Ea=function(e){function t(t,n,r){var o=e.call(this,t)||this;return o._config=n,o.console=r,o}return o(t,e),t.prototype.supports=function(e){return!(!ba.hasOwnProperty(e.toLowerCase())&&!this.isCustomEvent(e)||!window.Hammer&&(this.console.warn("Hammer.js is not loaded, can not bind '"+e+"' event."),1))},t.prototype.addEventListener=function(e,t,n){var r=this,o=this.manager.getZone();return t=t.toLowerCase(),o.runOutsideAngular(function(){var i=r._config.buildHammer(e),s=function(e){o.runGuarded(function(){n(e)})};return i.on(t,s),function(){return i.off(t,s)}})},t.prototype.isCustomEvent=function(e){return this._config.events.indexOf(e)>-1},t}(Gu),Ca=["alt","control","meta","shift"],xa={alt:function(e){return e.altKey},control:function(e){return e.ctrlKey},meta:function(e){return e.metaKey},shift:function(e){return e.shiftKey}},Ta=function(e){function t(t){return e.call(this,t)||this}return o(t,e),t.prototype.supports=function(e){return null!=t.parseEventName(e)},t.prototype.addEventListener=function(e,n,r){var o=t.parseEventName(n),i=t.eventCallback(o.fullKey,r,this.manager.getZone());return this.manager.getZone().runOutsideAngular(function(){return xu().onAndCancel(e,o.domEventName,i)})},t.parseEventName=function(e){var n=e.toLowerCase().split("."),r=n.shift();if(0===n.length||"keydown"!==r&&"keyup"!==r)return null;var o=t._normalizeKey(n.pop()),i="";if(Ca.forEach(function(e){var t=n.indexOf(e);t>-1&&(n.splice(t,1),i+=e+".")}),i+=o,0!=n.length||0===o.length)return null;var s={};return s.domEventName=r,s.fullKey=i,s},t.getEventFullKey=function(e){var t="",n=xu().getEventKey(e);return" "===(n=n.toLowerCase())?n="space":"."===n&&(n="dot"),Ca.forEach(function(r){r!=n&&(0,xa[r])(e)&&(t+=r+".")}),t+=n},t.eventCallback=function(e,n,r){return function(o){t.getEventFullKey(o)===e&&r.runGuarded(function(){return n(o)})}},t._normalizeKey=function(e){switch(e){case"esc":return"escape";default:return e}},t}(Gu),ka=function(){},Ia=function(e){function t(t){var n=e.call(this)||this;return n._doc=t,n}return o(t,e),t.prototype.sanitize=function(e,t){if(null==t)return null;switch(e){case pr.NONE:return t;case pr.HTML:return t instanceof Na?t.changingThisBreaksApplicationSecurity:(this.checkNotSafeValue(t,"HTML"),function(e,t){var n=null;try{Jn=Jn||new Zn(e);var r=t?String(t):"";n=Jn.getInertBodyElement(r);var o=5,i=r;do{if(0===o)throw new Error("Failed to sanitize html because the input is unstable");o--,r=i,i=n.innerHTML,n=Jn.getInertBodyElement(r)}while(r!==i);var s=new sr,u=s.sanitizeChildren(lr(n)||n);return Kt()&&s.sanitizedSomething&&console.warn("WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss)."),u}finally{if(n)for(var a=lr(n)||n;a.firstChild;)a.removeChild(a.firstChild)}}(this._doc,String(t)));case pr.STYLE:return t instanceof Aa?t.changingThisBreaksApplicationSecurity:(this.checkNotSafeValue(t,"Style"),function(e){if(!(e=String(e).trim()))return"";var t=e.match(fr);return t&&Wn(t[1])===t[1]||e.match(dr)&&function(e){for(var t=!0,n=!0,r=0;r<e.length;r++){var o=e.charAt(r);"'"===o&&n?t=!t:'"'===o&&t&&(n=!n)}return t&&n}(e)?e:(Kt()&&console.warn("WARNING: sanitizing unsafe style value "+e+" (see http://g.co/ng/security#xss)."),"unsafe")}(t));case pr.SCRIPT:if(t instanceof Da)return t.changingThisBreaksApplicationSecurity;throw this.checkNotSafeValue(t,"Script"),new Error("unsafe value used in a script context");case pr.URL:return t instanceof Pa||t instanceof Oa?t.changingThisBreaksApplicationSecurity:(this.checkNotSafeValue(t,"URL"),Wn(String(t)));case pr.RESOURCE_URL:if(t instanceof Pa)return t.changingThisBreaksApplicationSecurity;throw this.checkNotSafeValue(t,"ResourceURL"),new Error("unsafe value used in a resource URL context (see http://g.co/ng/security#xss)");default:throw new Error("Unexpected SecurityContext "+e+" (see http://g.co/ng/security#xss)")}},t.prototype.checkNotSafeValue=function(e,t){if(e instanceof Sa)throw new Error("Required a safe "+t+", got a "+e.getTypeName()+" (see http://g.co/ng/security#xss)")},t.prototype.bypassSecurityTrustHtml=function(e){return new Na(e)},t.prototype.bypassSecurityTrustStyle=function(e){return new Aa(e)},t.prototype.bypassSecurityTrustScript=function(e){return new Da(e)},t.prototype.bypassSecurityTrustUrl=function(e){return new Oa(e)},t.prototype.bypassSecurityTrustResourceUrl=function(e){return new Pa(e)},t}(ka),Sa=function(){function e(e){this.changingThisBreaksApplicationSecurity=e}return e.prototype.toString=function(){return"SafeValue must use [property]=binding: "+this.changingThisBreaksApplicationSecurity+" (see http://g.co/ng/security#xss)"},e}(),Na=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.getTypeName=function(){return"HTML"},t}(Sa),Aa=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.getTypeName=function(){return"Style"},t}(Sa),Da=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.getTypeName=function(){return"Script"},t}(Sa),Oa=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.getTypeName=function(){return"URL"},t}(Sa),Pa=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.getTypeName=function(){return"ResourceURL"},t}(Sa),Ra=Yt(Hn,"browser",[{provide:dt,useValue:"browser"},{provide:lt,useValue:function(){Du.makeCurrent(),Fu.init()},multi:!0},{provide:fu,useClass:Mu,deps:[Pu]},{provide:Pu,useFactory:function(){return document},deps:[]}]);function Ma(){return new nt}var Va=function(){function e(e){if(e)throw new Error("BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.")}return e.withServerTransition=function(t){return{ngModule:e,providers:[{provide:ut,useValue:t.appId},{provide:ju,useExisting:ut},Hu]}},e}();"undefined"!=typeof window&&window;var ja=new bs(au,[],function(e){return function(e){for(var t={},n=[],r=!1,o=0;o<e.length;o++){var i=e[o];i.token===rt&&(r=!0),1073741824&i.flags&&n.push(i.token),i.index=o,t[Sr(i.token)]=i}return{factory:null,providersByKey:t,providers:e,modules:n,isRoot:r}}([po(512,xt,Tt,[[8,[du]],[3,xt],It]),po(5120,Fn,zn,[[3,Fn]]),po(4608,mu,bu,[Fn,[2,gu]]),po(4608,vt,vt,[]),po(5120,ut,at,[]),po(5120,Pn,Ln,[]),po(5120,Rn,Bn,[]),po(4608,ka,Ia,[wu]),po(6144,hr,null,[ka]),po(4608,_a,wa,[]),po(5120,Wu,function(e,t,n,r,o,i,s){return[new ma(e,t,n),new Ta(r),new Ea(o,i,s)]},[wu,Rt,[2,dt],wu,wu,_a,pt]),po(4608,Ku,Ku,[Wu,Rt]),po(135680,Ju,Ju,[wu]),po(4608,oa,oa,[Ku,Ju]),po(6144,rn,null,[oa]),po(6144,Yu,null,[Ju]),po(4608,zt,zt,[Rt]),po(4608,Vu,Vu,[wu]),po(4608,Lu,Lu,[wu]),po(1073742336,_u,_u,[]),po(1024,nt,Ma,[]),po(1024,it,function(e){return[Qu(e)]},[[2,Gt]]),po(512,st,st,[[2,it]]),po(131584,en,en,[Rt,pt,De,nt,xt,st]),po(1073742336,Un,Un,[en]),po(1073742336,Va,Va,[[3,Va]]),po(1073742336,au,au,[De]),po(256,rt,!0,[])])});(function(){if(Qt)throw new Error("Cannot enable prod mode after platform setup.");qt=!1})(),Ra().bootstrapModuleFactory(ja).catch(function(e){return console.log(e)})},function(e,t,n){e.exports=n(1)}]);
';
