export const pocTable = '(()=>{"use strict";var e,r={},n={};function t(e){var o=n[e];if(void 0!==o)return o.exports;var a=n[e]={exports:{}};return r[e](a,a.exports,t),a.exports}t.m=r,e=[],t.O=(r,n,o,a)=>{if(!n){var l=1/0;for(u=0;u<e.length;u++){for(var[n,o,a]=e[u],s=!0,p=0;p<n.length;p++)(!1&a||l>=a)&&Object.keys(t.O).every(e=>t.O[e](n[p]))?n.splice(p--,1):(s=!1,a<l&&(l=a));s&&(e.splice(u--,1),r=o())}return r}a=a||0;for(var u=e.length;u>0&&e[u-1][2]>a;u--)e[u]=e[u-1];e[u]=[n,o,a]},t.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return t.d(r,{a:r}),r},t.d=(e,r)=>{for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},t.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),(()=>{var e={666:0};t.O.j=r=>0===e[r];var r=(r,n)=>{var o,a,[l,s,p]=n,u=0;for(o in s)t.o(s,o)&&(t.m[o]=s[o]);if(p)var f=p(t);for(r&&r(n);u<l.length;u++)t.o(e,a=l[u])&&e[a]&&e[a][0](),e[l[u]]=0;return t.O(f)},n=self.webpackChunkng_elements_example=self.webpackChunkng_elements_example||[];n.forEach(r.bind(null,0)),n.push=r.bind(null,n.push.bind(n))})()})();(self.webpackChunkng_elements_example=self.webpackChunkng_elements_example||[]).push([[429],{167:()=>{"use strict";!function(e){const t=e.performance;function n(e){t&&t.mark&&t.mark(e)}function o(e,n){t&&t.measure&&t.measure(e,n)}n("Zone");const r=e.__Zone_symbol_prefix||"__zone_symbol__";function s(e){return r+e}const a=!0===e[s("forceDuplicateZoneCheck")];if(e.Zone){if(a||"function"!=typeof e.Zone.__symbol__)throw new Error("Zone already loaded.");return e.Zone}class i{constructor(e,t){this._parent=e,this._name=t?t.name||"unnamed":"<root>",this._properties=t&&t.properties||{},this._zoneDelegate=new l(this,this._parent&&this._parent._zoneDelegate,t)}static assertZonePatched(){if(e.Promise!==O.ZoneAwarePromise)throw new Error("Zone.js has detected that ZoneAwarePromise `(window|global).Promise` has been overwritten.\nMost likely cause is that a Promise polyfill has been loaded after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. If you must load one, do so before loading zone.js.)")}static get root(){let e=i.current;for(;e.parent;)e=e.parent;return e}static get current(){return z.zone}static get currentTask(){return j}static __load_patch(t,r,s=!1){if(O.hasOwnProperty(t)){if(!s&&a)throw Error("Already loaded patch: "+t)}else if(!e["__Zone_disable_"+t]){const s="Zone:"+t;n(s),O[t]=r(e,i,C),o(s,s)}}get parent(){return this._parent}get name(){return this._name}get(e){const t=this.getZoneWith(e);if(t)return t._properties[e]}getZoneWith(e){let t=this;for(;t;){if(t._properties.hasOwnProperty(e))return t;t=t._parent}return null}fork(e){if(!e)throw new Error("ZoneSpec required!");return this._zoneDelegate.fork(this,e)}wrap(e,t){if("function"!=typeof e)throw new Error("Expecting function got: "+e);const n=this._zoneDelegate.intercept(this,e,t),o=this;return function(){return o.runGuarded(n,this,arguments,t)}}run(e,t,n,o){z={parent:z,zone:this};try{return this._zoneDelegate.invoke(this,e,t,n,o)}finally{z=z.parent}}runGuarded(e,t=null,n,o){z={parent:z,zone:this};try{try{return this._zoneDelegate.invoke(this,e,t,n,o)}catch(r){if(this._zoneDelegate.handleError(this,r))throw r}}finally{z=z.parent}}runTask(e,t,n){if(e.zone!=this)throw new Error("A task can only be run in the zone of creation! (Creation: "+(e.zone||y).name+"; Execution: "+this.name+")");if(e.state===v&&(e.type===P||e.type===D))return;const o=e.state!=E;o&&e._transitionTo(E,b),e.runCount++;const r=j;j=e,z={parent:z,zone:this};try{e.type==D&&e.data&&!e.data.isPeriodic&&(e.cancelFn=void 0);try{return this._zoneDelegate.invokeTask(this,e,t,n)}catch(s){if(this._zoneDelegate.handleError(this,s))throw s}}finally{e.state!==v&&e.state!==Z&&(e.type==P||e.data&&e.data.isPeriodic?o&&e._transitionTo(b,E):(e.runCount=0,this._updateTaskCount(e,-1),o&&e._transitionTo(v,E,v))),z=z.parent,j=r}}scheduleTask(e){if(e.zone&&e.zone!==this){let t=this;for(;t;){if(t===e.zone)throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${e.zone.name}`);t=t.parent}}e._transitionTo(T,v);const t=[];e._zoneDelegates=t,e._zone=this;try{e=this._zoneDelegate.scheduleTask(this,e)}catch(n){throw e._transitionTo(Z,T,v),this._zoneDelegate.handleError(this,n),n}return e._zoneDelegates===t&&this._updateTaskCount(e,1),e.state==T&&e._transitionTo(b,T),e}scheduleMicroTask(e,t,n,o){return this.scheduleTask(new u(S,e,t,n,o,void 0))}scheduleMacroTask(e,t,n,o,r){return this.scheduleTask(new u(D,e,t,n,o,r))}scheduleEventTask(e,t,n,o,r){return this.scheduleTask(new u(P,e,t,n,o,r))}cancelTask(e){if(e.zone!=this)throw new Error("A task can only be cancelled in the zone of creation! (Creation: "+(e.zone||y).name+"; Execution: "+this.name+")");e._transitionTo(w,b,E);try{this._zoneDelegate.cancelTask(this,e)}catch(t){throw e._transitionTo(Z,w),this._zoneDelegate.handleError(this,t),t}return this._updateTaskCount(e,-1),e._transitionTo(v,w),e.runCount=0,e}_updateTaskCount(e,t){const n=e._zoneDelegates;-1==t&&(e._zoneDelegates=null);for(let o=0;o<n.length;o++)n[o]._updateTaskCount(e.type,t)}}i.__symbol__=s;const c={name:"",onHasTask:(e,t,n,o)=>e.hasTask(n,o),onScheduleTask:(e,t,n,o)=>e.scheduleTask(n,o),onInvokeTask:(e,t,n,o,r,s)=>e.invokeTask(n,o,r,s),onCancelTask:(e,t,n,o)=>e.cancelTask(n,o)};class l{constructor(e,t,n){this._taskCounts={microTask:0,macroTask:0,eventTask:0},this.zone=e,this._parentDelegate=t,this._forkZS=n&&(n&&n.onFork?n:t._forkZS),this._forkDlgt=n&&(n.onFork?t:t._forkDlgt),this._forkCurrZone=n&&(n.onFork?this.zone:t._forkCurrZone),this._interceptZS=n&&(n.onIntercept?n:t._interceptZS),this._interceptDlgt=n&&(n.onIntercept?t:t._interceptDlgt),this._interceptCurrZone=n&&(n.onIntercept?this.zone:t._interceptCurrZone),this._invokeZS=n&&(n.onInvoke?n:t._invokeZS),this._invokeDlgt=n&&(n.onInvoke?t:t._invokeDlgt),this._invokeCurrZone=n&&(n.onInvoke?this.zone:t._invokeCurrZone),this._handleErrorZS=n&&(n.onHandleError?n:t._handleErrorZS),this._handleErrorDlgt=n&&(n.onHandleError?t:t._handleErrorDlgt),this._handleErrorCurrZone=n&&(n.onHandleError?this.zone:t._handleErrorCurrZone),this._scheduleTaskZS=n&&(n.onScheduleTask?n:t._scheduleTaskZS),this._scheduleTaskDlgt=n&&(n.onScheduleTask?t:t._scheduleTaskDlgt),this._scheduleTaskCurrZone=n&&(n.onScheduleTask?this.zone:t._scheduleTaskCurrZone),this._invokeTaskZS=n&&(n.onInvokeTask?n:t._invokeTaskZS),this._invokeTaskDlgt=n&&(n.onInvokeTask?t:t._invokeTaskDlgt),this._invokeTaskCurrZone=n&&(n.onInvokeTask?this.zone:t._invokeTaskCurrZone),this._cancelTaskZS=n&&(n.onCancelTask?n:t._cancelTaskZS),this._cancelTaskDlgt=n&&(n.onCancelTask?t:t._cancelTaskDlgt),this._cancelTaskCurrZone=n&&(n.onCancelTask?this.zone:t._cancelTaskCurrZone),this._hasTaskZS=null,this._hasTaskDlgt=null,this._hasTaskDlgtOwner=null,this._hasTaskCurrZone=null;const o=n&&n.onHasTask;(o||t&&t._hasTaskZS)&&(this._hasTaskZS=o?n:c,this._hasTaskDlgt=t,this._hasTaskDlgtOwner=this,this._hasTaskCurrZone=e,n.onScheduleTask||(this._scheduleTaskZS=c,this._scheduleTaskDlgt=t,this._scheduleTaskCurrZone=this.zone),n.onInvokeTask||(this._invokeTaskZS=c,this._invokeTaskDlgt=t,this._invokeTaskCurrZone=this.zone),n.onCancelTask||(this._cancelTaskZS=c,this._cancelTaskDlgt=t,this._cancelTaskCurrZone=this.zone))}fork(e,t){return this._forkZS?this._forkZS.onFork(this._forkDlgt,this.zone,e,t):new i(e,t)}intercept(e,t,n){return this._interceptZS?this._interceptZS.onIntercept(this._interceptDlgt,this._interceptCurrZone,e,t,n):t}invoke(e,t,n,o,r){return this._invokeZS?this._invokeZS.onInvoke(this._invokeDlgt,this._invokeCurrZone,e,t,n,o,r):t.apply(n,o)}handleError(e,t){return!this._handleErrorZS||this._handleErrorZS.onHandleError(this._handleErrorDlgt,this._handleErrorCurrZone,e,t)}scheduleTask(e,t){let n=t;if(this._scheduleTaskZS)this._hasTaskZS&&n._zoneDelegates.push(this._hasTaskDlgtOwner),n=this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt,this._scheduleTaskCurrZone,e,t),n||(n=t);else if(t.scheduleFn)t.scheduleFn(t);else{if(t.type!=S)throw new Error("Task is missing scheduleFn.");k(t)}return n}invokeTask(e,t,n,o){return this._invokeTaskZS?this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt,this._invokeTaskCurrZone,e,t,n,o):t.callback.apply(n,o)}cancelTask(e,t){let n;if(this._cancelTaskZS)n=this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt,this._cancelTaskCurrZone,e,t);else{if(!t.cancelFn)throw Error("Task is not cancelable");n=t.cancelFn(t)}return n}hasTask(e,t){try{this._hasTaskZS&&this._hasTaskZS.onHasTask(this._hasTaskDlgt,this._hasTaskCurrZone,e,t)}catch(n){this.handleError(e,n)}}_updateTaskCount(e,t){const n=this._taskCounts,o=n[e],r=n[e]=o+t;if(r<0)throw new Error("More tasks executed then were scheduled.");0!=o&&0!=r||this.hasTask(this.zone,{microTask:n.microTask>0,macroTask:n.macroTask>0,eventTask:n.eventTask>0,change:e})}}class u{constructor(t,n,o,r,s,a){if(this._zone=null,this.runCount=0,this._zoneDelegates=null,this._state="notScheduled",this.type=t,this.source=n,this.data=r,this.scheduleFn=s,this.cancelFn=a,!o)throw new Error("callback is not defined");this.callback=o;const i=this;this.invoke=t===P&&r&&r.useG?u.invokeTask:function(){return u.invokeTask.call(e,i,this,arguments)}}static invokeTask(e,t,n){e||(e=this),I++;try{return e.runCount++,e.zone.runTask(e,t,n)}finally{1==I&&m(),I--}}get zone(){return this._zone}get state(){return this._state}cancelScheduleRequest(){this._transitionTo(v,T)}_transitionTo(e,t,n){if(this._state!==t&&this._state!==n)throw new Error(`${this.type} '${this.source}': can not transition to '${e}', expecting state '${t}'${n?" or '"+n+"'":""}, was '${this._state}'.`);this._state=e,e==v&&(this._zoneDelegates=null)}toString(){return this.data&&void 0!==this.data.handleId?this.data.handleId.toString():Object.prototype.toString.call(this)}toJSON(){return{type:this.type,state:this.state,source:this.source,zone:this.zone.name,runCount:this.runCount}}}const h=s("setTimeout"),p=s("Promise"),f=s("then");let d,g=[],_=!1;function k(t){if(0===I&&0===g.length)if(d||e[p]&&(d=e[p].resolve(0)),d){let e=d[f];e||(e=d.then),e.call(d,m)}else e[h](m,0);t&&g.push(t)}function m(){if(!_){for(_=!0;g.length;){const t=g;g=[];for(let n=0;n<t.length;n++){const o=t[n];try{o.zone.runTask(o,null,null)}catch(e){C.onUnhandledError(e)}}}C.microtaskDrainDone(),_=!1}}const y={name:"NO ZONE"},v="notScheduled",T="scheduling",b="scheduled",E="running",w="canceling",Z="unknown",S="microTask",D="macroTask",P="eventTask",O={},C={symbol:s,currentZoneFrame:()=>z,onUnhandledError:R,microtaskDrainDone:R,scheduleMicroTask:k,showUncaughtError:()=>!i[s("ignoreConsoleErrorUncaughtError")],patchEventTarget:()=>[],patchOnProperties:R,patchMethod:()=>R,bindArguments:()=>[],patchThen:()=>R,patchMacroTask:()=>R,patchEventPrototype:()=>R,isIEOrEdge:()=>!1,getGlobalObjects:()=>{},ObjectDefineProperty:()=>R,ObjectGetOwnPropertyDescriptor:()=>{},ObjectCreate:()=>{},ArraySlice:()=>[],patchClass:()=>R,wrapWithCurrentZone:()=>R,filterProperties:()=>[],attachOriginToPatched:()=>R,_redefineProperty:()=>R,patchCallbacks:()=>R};let z={parent:null,zone:new i(null,null)},j=null,I=0;function R(){}o("Zone","Zone"),e.Zone=i}("undefined"!=typeof window&&window||"undefined"!=typeof self&&self||global);const e=Object.getOwnPropertyDescriptor,t=Object.defineProperty,n=Object.getPrototypeOf,o=Object.create,r=Array.prototype.slice,s="addEventListener",a="removeEventListener",i=Zone.__symbol__(s),c=Zone.__symbol__(a),l="true",u="false",h=Zone.__symbol__("");function p(e,t){return Zone.current.wrap(e,t)}function f(e,t,n,o,r){return Zone.current.scheduleMacroTask(e,t,n,o,r)}const d=Zone.__symbol__,g="undefined"!=typeof window,_=g?window:void 0,k=g&&_||"object"==typeof self&&self||global,m=[null];function y(e,t){for(let n=e.length-1;n>=0;n--)"function"==typeof e[n]&&(e[n]=p(e[n],t+"_"+n));return e}function v(e){return!e||!1!==e.writable&&!("function"==typeof e.get&&void 0===e.set)}const T="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope,b=!("nw"in k)&&void 0!==k.process&&"[object process]"==={}.toString.call(k.process),E=!b&&!T&&!(!g||!_.HTMLElement),w=void 0!==k.process&&"[object process]"==={}.toString.call(k.process)&&!T&&!(!g||!_.HTMLElement),Z={},S=function(e){if(!(e=e||k.event))return;let t=Z[e.type];t||(t=Z[e.type]=d("ON_PROPERTY"+e.type));const n=this||e.target||k,o=n[t];let r;if(E&&n===_&&"error"===e.type){const t=e;r=o&&o.call(this,t.message,t.filename,t.lineno,t.colno,t.error),!0===r&&e.preventDefault()}else r=o&&o.apply(this,arguments),null==r||r||e.preventDefault();return r};function D(n,o,r){let s=e(n,o);if(!s&&r&&e(r,o)&&(s={enumerable:!0,configurable:!0}),!s||!s.configurable)return;const a=d("on"+o+"patched");if(n.hasOwnProperty(a)&&n[a])return;delete s.writable,delete s.value;const i=s.get,c=s.set,l=o.substr(2);let u=Z[l];u||(u=Z[l]=d("ON_PROPERTY"+l)),s.set=function(e){let t=this;t||n!==k||(t=k),t&&(t[u]&&t.removeEventListener(l,S),c&&c.apply(t,m),"function"==typeof e?(t[u]=e,t.addEventListener(l,S,!1)):t[u]=null)},s.get=function(){let e=this;if(e||n!==k||(e=k),!e)return null;const t=e[u];if(t)return t;if(i){let t=i&&i.call(this);if(t)return s.set.call(this,t),"function"==typeof e.removeAttribute&&e.removeAttribute(o),t}return null},t(n,o,s),n[a]=!0}function P(e,t,n){if(t)for(let o=0;o<t.length;o++)D(e,"on"+t[o],n);else{const t=[];for(const n in e)"on"==n.substr(0,2)&&t.push(n);for(let o=0;o<t.length;o++)D(e,t[o],n)}}const O=d("originalInstance");function C(e){const n=k[e];if(!n)return;k[d(e)]=n,k[e]=function(){const t=y(arguments,e);switch(t.length){case 0:this[O]=new n;break;case 1:this[O]=new n(t[0]);break;case 2:this[O]=new n(t[0],t[1]);break;case 3:this[O]=new n(t[0],t[1],t[2]);break;case 4:this[O]=new n(t[0],t[1],t[2],t[3]);break;default:throw new Error("Arg list too long.")}},I(k[e],n);const o=new n(function(){});let r;for(r in o)"XMLHttpRequest"===e&&"responseBlob"===r||function(n){"function"==typeof o[n]?k[e].prototype[n]=function(){return this[O][n].apply(this[O],arguments)}:t(k[e].prototype,n,{set:function(t){"function"==typeof t?(this[O][n]=p(t,e+"."+n),I(this[O][n],t)):this[O][n]=t},get:function(){return this[O][n]}})}(r);for(r in n)"prototype"!==r&&n.hasOwnProperty(r)&&(k[e][r]=n[r])}function z(t,o,r){let s=t;for(;s&&!s.hasOwnProperty(o);)s=n(s);!s&&t[o]&&(s=t);const a=d(o);let i=null;if(s&&(!(i=s[a])||!s.hasOwnProperty(a))&&(i=s[a]=s[o],v(s&&e(s,o)))){const e=r(i,a,o);s[o]=function(){return e(this,arguments)},I(s[o],i)}return i}function j(e,t,n){let o=null;function r(e){const t=e.data;return t.args[t.cbIdx]=function(){e.invoke.apply(this,arguments)},o.apply(t.target,t.args),e}o=z(e,t,e=>function(t,o){const s=n(t,o);return s.cbIdx>=0&&"function"==typeof o[s.cbIdx]?f(s.name,o[s.cbIdx],s,r):e.apply(t,o)})}function I(e,t){e[d("OriginalDelegate")]=t}let R=!1,M=!1;function x(){try{const e=_.navigator.userAgent;if(-1!==e.indexOf("MSIE ")||-1!==e.indexOf("Trident/"))return!0}catch(e){}return!1}function N(){if(R)return M;R=!0;try{const e=_.navigator.userAgent;-1===e.indexOf("MSIE ")&&-1===e.indexOf("Trident/")&&-1===e.indexOf("Edge/")||(M=!0)}catch(e){}return M}Zone.__load_patch("ZoneAwarePromise",(e,t,n)=>{const o=Object.getOwnPropertyDescriptor,r=Object.defineProperty,s=n.symbol,a=[],i=!0===e[s("DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION")],c=s("Promise"),l=s("then");n.onUnhandledError=e=>{if(n.showUncaughtError()){const t=e&&e.rejection;t?console.error("Unhandled Promise rejection:",t instanceof Error?t.message:t,"; Zone:",e.zone.name,"; Task:",e.task&&e.task.source,"; Value:",t,t instanceof Error?t.stack:void 0):console.error(e)}},n.microtaskDrainDone=()=>{for(;a.length;){const t=a.shift();try{t.zone.runGuarded(()=>{if(t.throwOriginal)throw t.rejection;throw t})}catch(e){h(e)}}};const u=s("unhandledPromiseRejectionHandler");function h(e){n.onUnhandledError(e);try{const n=t[u];"function"==typeof n&&n.call(this,e)}catch(o){}}function p(e){return e&&e.then}function f(e){return e}function d(e){return C.reject(e)}const g=s("state"),_=s("value"),k=s("finally"),m=s("parentPromiseValue"),y=s("parentPromiseState"),v=null,T=!0,b=!1;function E(e,t){return n=>{try{Z(e,t,n)}catch(o){Z(e,!1,o)}}}const w=s("currentTaskTrace");function Z(e,o,s){const c=function(){let e=!1;return function(t){return function(){e||(e=!0,t.apply(null,arguments))}}}();if(e===s)throw new TypeError("Promise resolved with itself");if(e[g]===v){let h=null;try{"object"!=typeof s&&"function"!=typeof s||(h=s&&s.then)}catch(u){return c(()=>{Z(e,!1,u)})(),e}if(o!==b&&s instanceof C&&s.hasOwnProperty(g)&&s.hasOwnProperty(_)&&s[g]!==v)D(s),Z(e,s[g],s[_]);else if(o!==b&&"function"==typeof h)try{h.call(s,c(E(e,o)),c(E(e,!1)))}catch(u){c(()=>{Z(e,!1,u)})()}else{e[g]=o;const c=e[_];if(e[_]=s,e[k]===k&&o===T&&(e[g]=e[y],e[_]=e[m]),o===b&&s instanceof Error){const e=t.currentTask&&t.currentTask.data&&t.currentTask.data.__creationTrace__;e&&r(s,w,{configurable:!0,enumerable:!1,writable:!0,value:e})}for(let t=0;t<c.length;)P(e,c[t++],c[t++],c[t++],c[t++]);if(0==c.length&&o==b){e[g]=0;let o=s;try{throw new Error("Uncaught (in promise): "+((l=s)&&l.toString===Object.prototype.toString?(l.constructor&&l.constructor.name||"")+": "+JSON.stringify(l):l?l.toString():Object.prototype.toString.call(l))+(s&&s.stack?"\n"+s.stack:""))}catch(u){o=u}i&&(o.throwOriginal=!0),o.rejection=s,o.promise=e,o.zone=t.current,o.task=t.currentTask,a.push(o),n.scheduleMicroTask()}}}var l;return e}const S=s("rejectionHandledHandler");function D(e){if(0===e[g]){try{const n=t[S];n&&"function"==typeof n&&n.call(this,{rejection:e[_],promise:e})}catch(n){}e[g]=b;for(let t=0;t<a.length;t++)e===a[t].promise&&a.splice(t,1)}}function P(e,t,n,o,r){D(e);const s=e[g],a=s?"function"==typeof o?o:f:"function"==typeof r?r:d;t.scheduleMicroTask("Promise.then",()=>{try{const o=e[_],r=!!n&&k===n[k];r&&(n[m]=o,n[y]=s);const i=t.run(a,void 0,r&&a!==d&&a!==f?[]:[o]);Z(n,!0,i)}catch(o){Z(n,!1,o)}},n)}const O=function(){};class C{static toString(){return"function ZoneAwarePromise() { [native code] }"}static resolve(e){return Z(new this(null),T,e)}static reject(e){return Z(new this(null),b,e)}static race(e){let t,n,o=new this((e,o)=>{t=e,n=o});function r(e){t(e)}function s(e){n(e)}for(let a of e)p(a)||(a=this.resolve(a)),a.then(r,s);return o}static all(e){return C.allWithCallback(e)}static allSettled(e){return(this&&this.prototype instanceof C?this:C).allWithCallback(e,{thenCallback:e=>({status:"fulfilled",value:e}),errorCallback:e=>({status:"rejected",reason:e})})}static allWithCallback(e,t){let n,o,r=new this((e,t)=>{n=e,o=t}),s=2,a=0;const i=[];for(let l of e){p(l)||(l=this.resolve(l));const e=a;try{l.then(o=>{i[e]=t?t.thenCallback(o):o,s--,0===s&&n(i)},r=>{t?(i[e]=t.errorCallback(r),s--,0===s&&n(i)):o(r)})}catch(c){o(c)}s++,a++}return s-=2,0===s&&n(i),r}constructor(e){const t=this;if(!(t instanceof C))throw new Error("Must be an instanceof Promise.");t[g]=v,t[_]=[];try{e&&e(E(t,T),E(t,b))}catch(n){Z(t,!1,n)}}get[Symbol.toStringTag](){return"Promise"}get[Symbol.species](){return C}then(e,n){let o=this.constructor[Symbol.species];o&&"function"==typeof o||(o=this.constructor||C);const r=new o(O),s=t.current;return this[g]==v?this[_].push(s,r,e,n):P(this,s,r,e,n),r}catch(e){return this.then(null,e)}finally(e){let n=this.constructor[Symbol.species];n&&"function"==typeof n||(n=C);const o=new n(O);o[k]=k;const r=t.current;return this[g]==v?this[_].push(r,o,e,e):P(this,r,o,e,e),o}}C.resolve=C.resolve,C.reject=C.reject,C.race=C.race,C.all=C.all;const j=e[c]=e.Promise;e.Promise=C;const I=s("thenPatched");function R(e){const t=e.prototype,n=o(t,"then");if(n&&(!1===n.writable||!n.configurable))return;const r=t.then;t[l]=r,e.prototype.then=function(e,t){return new C((e,t)=>{r.call(this,e,t)}).then(e,t)},e[I]=!0}return n.patchThen=R,j&&(R(j),z(e,"fetch",e=>{return t=e,function(e,n){let o=t.apply(e,n);if(o instanceof C)return o;let r=o.constructor;return r[I]||R(r),o};var t})),Promise[t.__symbol__("uncaughtPromiseErrors")]=a,C}),Zone.__load_patch("toString",e=>{const t=Function.prototype.toString,n=d("OriginalDelegate"),o=d("Promise"),r=d("Error"),s=function(){if("function"==typeof this){const s=this[n];if(s)return"function"==typeof s?t.call(s):Object.prototype.toString.call(s);if(this===Promise){const n=e[o];if(n)return t.call(n)}if(this===Error){const n=e[r];if(n)return t.call(n)}}return t.call(this)};s[n]=t,Function.prototype.toString=s;const a=Object.prototype.toString;Object.prototype.toString=function(){return"function"==typeof Promise&&this instanceof Promise?"[object Promise]":a.call(this)}});let L=!1;if("undefined"!=typeof window)try{const e=Object.defineProperty({},"passive",{get:function(){L=!0}});window.addEventListener("test",e,e),window.removeEventListener("test",e,e)}catch(he){L=!1}const A={useG:!0},H={},F={},q=new RegExp("^"+h+"(\\w+)(true|false)$"),G=d("propagationStopped");function B(e,t){const n=(t?t(e):e)+u,o=(t?t(e):e)+l,r=h+n,s=h+o;H[e]={},H[e].false=r,H[e].true=s}function W(e,t,o){const r=o&&o.add||s,i=o&&o.rm||a,c=o&&o.listeners||"eventListeners",p=o&&o.rmAll||"removeAllListeners",f=d(r),g="."+r+":",_=function(e,t,n){if(e.isRemoved)return;const o=e.callback;"object"==typeof o&&o.handleEvent&&(e.callback=e=>o.handleEvent(e),e.originalDelegate=o),e.invoke(e,t,[n]);const r=e.options;r&&"object"==typeof r&&r.once&&t[i].call(t,n.type,e.originalDelegate?e.originalDelegate:e.callback,r)},k=function(t){if(!(t=t||e.event))return;const n=this||t.target||e,o=n[H[t.type].false];if(o)if(1===o.length)_(o[0],n,t);else{const e=o.slice();for(let o=0;o<e.length&&(!t||!0!==t[G]);o++)_(e[o],n,t)}},m=function(t){if(!(t=t||e.event))return;const n=this||t.target||e,o=n[H[t.type].true];if(o)if(1===o.length)_(o[0],n,t);else{const e=o.slice();for(let o=0;o<e.length&&(!t||!0!==t[G]);o++)_(e[o],n,t)}};function y(t,o){if(!t)return!1;let s=!0;o&&void 0!==o.useG&&(s=o.useG);const a=o&&o.vh;let _=!0;o&&void 0!==o.chkDup&&(_=o.chkDup);let y=!1;o&&void 0!==o.rt&&(y=o.rt);let v=t;for(;v&&!v.hasOwnProperty(r);)v=n(v);if(!v&&t[r]&&(v=t),!v)return!1;if(v[f])return!1;const T=o&&o.eventNameToString,E={},w=v[f]=v[r],Z=v[d(i)]=v[i],S=v[d(c)]=v[c],D=v[d(p)]=v[p];let P;function O(e,t){return!L&&"object"==typeof e&&e?!!e.capture:L&&t?"boolean"==typeof e?{capture:e,passive:!0}:e?"object"==typeof e&&!1!==e.passive?Object.assign(Object.assign({},e),{passive:!0}):e:{passive:!0}:e}o&&o.prepend&&(P=v[d(o.prepend)]=v[o.prepend]);const C=s?function(e){if(!E.isExisting)return w.call(E.target,E.eventName,E.capture?m:k,E.options)}:function(e){return w.call(E.target,E.eventName,e.invoke,E.options)},z=s?function(e){if(!e.isRemoved){const t=H[e.eventName];let n;t&&(n=t[e.capture?l:u]);const o=n&&e.target[n];if(o)for(let r=0;r<o.length;r++)if(o[r]===e){o.splice(r,1),e.isRemoved=!0,0===o.length&&(e.allRemoved=!0,e.target[n]=null);break}}if(e.allRemoved)return Z.call(e.target,e.eventName,e.capture?m:k,e.options)}:function(e){return Z.call(e.target,e.eventName,e.invoke,e.options)},j=o&&o.diff?o.diff:function(e,t){const n=typeof t;return"function"===n&&e.callback===t||"object"===n&&e.originalDelegate===t},R=Zone[d("UNPATCHED_EVENTS")],M=e[d("PASSIVE_EVENTS")],x=function(t,n,r,i,c=!1,h=!1){return function(){const p=this||e;let f=arguments[0];o&&o.transferEventName&&(f=o.transferEventName(f));let d=arguments[1];if(!d)return t.apply(this,arguments);if(b&&"uncaughtException"===f)return t.apply(this,arguments);let g=!1;if("function"!=typeof d){if(!d.handleEvent)return t.apply(this,arguments);g=!0}if(a&&!a(t,d,p,arguments))return;const k=L&&!!M&&-1!==M.indexOf(f),m=O(arguments[2],k);if(R)for(let e=0;e<R.length;e++)if(f===R[e])return k?t.call(p,f,d,m):t.apply(this,arguments);const y=!!m&&("boolean"==typeof m||m.capture),v=!(!m||"object"!=typeof m)&&m.once,w=Zone.current;let Z=H[f];Z||(B(f,T),Z=H[f]);const S=Z[y?l:u];let D,P=p[S],C=!1;if(P){if(C=!0,_)for(let e=0;e<P.length;e++)if(j(P[e],d))return}else P=p[S]=[];const z=p.constructor.name,I=F[z];I&&(D=I[f]),D||(D=z+n+(T?T(f):f)),E.options=m,v&&(E.options.once=!1),E.target=p,E.capture=y,E.eventName=f,E.isExisting=C;const x=s?A:void 0;x&&(x.taskData=E);const N=w.scheduleEventTask(D,d,x,r,i);return E.target=null,x&&(x.taskData=null),v&&(m.once=!0),(L||"boolean"!=typeof N.options)&&(N.options=m),N.target=p,N.capture=y,N.eventName=f,g&&(N.originalDelegate=d),h?P.unshift(N):P.push(N),c?p:void 0}};return v[r]=x(w,g,C,z,y),P&&(v.prependListener=x(P,".prependListener:",function(e){return P.call(E.target,E.eventName,e.invoke,E.options)},z,y,!0)),v[i]=function(){const t=this||e;let n=arguments[0];o&&o.transferEventName&&(n=o.transferEventName(n));const r=arguments[2],s=!!r&&("boolean"==typeof r||r.capture),i=arguments[1];if(!i)return Z.apply(this,arguments);if(a&&!a(Z,i,t,arguments))return;const c=H[n];let p;c&&(p=c[s?l:u]);const f=p&&t[p];if(f)for(let e=0;e<f.length;e++){const o=f[e];if(j(o,i))return f.splice(e,1),o.isRemoved=!0,0===f.length&&(o.allRemoved=!0,t[p]=null,"string"==typeof n)&&(t[h+"ON_PROPERTY"+n]=null),o.zone.cancelTask(o),y?t:void 0}return Z.apply(this,arguments)},v[c]=function(){const t=this||e;let n=arguments[0];o&&o.transferEventName&&(n=o.transferEventName(n));const r=[],s=U(t,T?T(n):n);for(let e=0;e<s.length;e++){const t=s[e];r.push(t.originalDelegate?t.originalDelegate:t.callback)}return r},v[p]=function(){const t=this||e;let n=arguments[0];if(n){o&&o.transferEventName&&(n=o.transferEventName(n));const e=H[n];if(e){const o=t[e.false],r=t[e.true];if(o){const e=o.slice();for(let t=0;t<e.length;t++){const o=e[t];this[i].call(this,n,o.originalDelegate?o.originalDelegate:o.callback,o.options)}}if(r){const e=r.slice();for(let t=0;t<e.length;t++){const o=e[t];this[i].call(this,n,o.originalDelegate?o.originalDelegate:o.callback,o.options)}}}}else{const e=Object.keys(t);for(let t=0;t<e.length;t++){const n=q.exec(e[t]);let o=n&&n[1];o&&"removeListener"!==o&&this[p].call(this,o)}this[p].call(this,"removeListener")}if(y)return this},I(v[r],w),I(v[i],Z),D&&I(v[p],D),S&&I(v[c],S),!0}let v=[];for(let n=0;n<t.length;n++)v[n]=y(t[n],o);return v}function U(e,t){if(!t){const n=[];for(let o in e){const r=q.exec(o);let s=r&&r[1];if(s&&(!t||s===t)){const t=e[o];if(t)for(let e=0;e<t.length;e++)n.push(t[e])}}return n}let n=H[t];n||(B(t),n=H[t]);const o=e[n.false],r=e[n.true];return o?r?o.concat(r):o.slice():r?r.slice():[]}function V(e,t){const n=e.Event;n&&n.prototype&&t.patchMethod(n.prototype,"stopImmediatePropagation",e=>function(t,n){t[G]=!0,e&&e.apply(t,n)})}function $(e,t,n,o,r){const s=Zone.__symbol__(o);if(t[s])return;const a=t[s]=t[o];t[o]=function(s,i,c){return i&&i.prototype&&r.forEach(function(t){const r=`${n}.${o}::`+t,s=i.prototype;if(s.hasOwnProperty(t)){const n=e.ObjectGetOwnPropertyDescriptor(s,t);n&&n.value?(n.value=e.wrapWithCurrentZone(n.value,r),e._redefineProperty(i.prototype,t,n)):s[t]&&(s[t]=e.wrapWithCurrentZone(s[t],r))}else s[t]&&(s[t]=e.wrapWithCurrentZone(s[t],r))}),a.call(t,s,i,c)},e.attachOriginToPatched(t[o],a)}const X=["absolutedeviceorientation","afterinput","afterprint","appinstalled","beforeinstallprompt","beforeprint","beforeunload","devicelight","devicemotion","deviceorientation","deviceorientationabsolute","deviceproximity","hashchange","languagechange","message","mozbeforepaint","offline","online","paint","pageshow","pagehide","popstate","rejectionhandled","storage","unhandledrejection","unload","userproximity","vrdisplayconnected","vrdisplaydisconnected","vrdisplaypresentchange"],Y=["encrypted","waitingforkey","msneedkey","mozinterruptbegin","mozinterruptend"],J=["load"],K=["blur","error","focus","load","resize","scroll","messageerror"],Q=["bounce","finish","start"],ee=["loadstart","progress","abort","error","load","progress","timeout","loadend","readystatechange"],te=["upgradeneeded","complete","abort","success","error","blocked","versionchange","close"],ne=["close","error","open","message"],oe=["error","message"],re=["abort","animationcancel","animationend","animationiteration","auxclick","beforeinput","blur","cancel","canplay","canplaythrough","change","compositionstart","compositionupdate","compositionend","cuechange","click","close","contextmenu","curechange","dblclick","drag","dragend","dragenter","dragexit","dragleave","dragover","drop","durationchange","emptied","ended","error","focus","focusin","focusout","gotpointercapture","input","invalid","keydown","keypress","keyup","load","loadstart","loadeddata","loadedmetadata","lostpointercapture","mousedown","mouseenter","mouseleave","mousemove","mouseout","mouseover","mouseup","mousewheel","orientationchange","pause","play","playing","pointercancel","pointerdown","pointerenter","pointerleave","pointerlockchange","mozpointerlockchange","webkitpointerlockerchange","pointerlockerror","mozpointerlockerror","webkitpointerlockerror","pointermove","pointout","pointerover","pointerup","progress","ratechange","reset","resize","scroll","seeked","seeking","select","selectionchange","selectstart","show","sort","stalled","submit","suspend","timeupdate","volumechange","touchcancel","touchmove","touchstart","touchend","transitioncancel","transitionend","waiting","wheel"].concat(["webglcontextrestored","webglcontextlost","webglcontextcreationerror"],["autocomplete","autocompleteerror"],["toggle"],["afterscriptexecute","beforescriptexecute","DOMContentLoaded","freeze","fullscreenchange","mozfullscreenchange","webkitfullscreenchange","msfullscreenchange","fullscreenerror","mozfullscreenerror","webkitfullscreenerror","msfullscreenerror","readystatechange","visibilitychange","resume"],X,["beforecopy","beforecut","beforepaste","copy","cut","paste","dragstart","loadend","animationstart","search","transitionrun","transitionstart","webkitanimationend","webkitanimationiteration","webkitanimationstart","webkittransitionend"],["activate","afterupdate","ariarequest","beforeactivate","beforedeactivate","beforeeditfocus","beforeupdate","cellchange","controlselect","dataavailable","datasetchanged","datasetcomplete","errorupdate","filterchange","layoutcomplete","losecapture","move","moveend","movestart","propertychange","resizeend","resizestart","rowenter","rowexit","rowsdelete","rowsinserted","command","compassneedscalibration","deactivate","help","mscontentzoom","msmanipulationstatechanged","msgesturechange","msgesturedoubletap","msgestureend","msgesturehold","msgesturestart","msgesturetap","msgotpointercapture","msinertiastart","mslostpointercapture","mspointercancel","mspointerdown","mspointerenter","mspointerhover","mspointerleave","mspointermove","mspointerout","mspointerover","mspointerup","pointerout","mssitemodejumplistitemremoved","msthumbnailclick","stop","storagecommit"]);function se(e,t,n){if(!n||0===n.length)return t;const o=n.filter(t=>t.target===e);if(!o||0===o.length)return t;const r=o[0].ignoreProperties;return t.filter(e=>-1===r.indexOf(e))}function ae(e,t,n,o){e&&P(e,se(e,t,n),o)}function ie(e,t){if(b&&!w)return;if(Zone[e.symbol("patchEvents")])return;const o="undefined"!=typeof WebSocket,r=t.__Zone_ignore_on_properties;if(E){const e=window,t=x()?[{target:e,ignoreProperties:["error"]}]:[];ae(e,re.concat(["messageerror"]),r?r.concat(t):r,n(e)),ae(Document.prototype,re,r),void 0!==e.SVGElement&&ae(e.SVGElement.prototype,re,r),ae(Element.prototype,re,r),ae(HTMLElement.prototype,re,r),ae(HTMLMediaElement.prototype,Y,r),ae(HTMLFrameSetElement.prototype,X.concat(K),r),ae(HTMLBodyElement.prototype,X.concat(K),r),ae(HTMLFrameElement.prototype,J,r),ae(HTMLIFrameElement.prototype,J,r);const o=e.HTMLMarqueeElement;o&&ae(o.prototype,Q,r);const s=e.Worker;s&&ae(s.prototype,oe,r)}const s=t.XMLHttpRequest;s&&ae(s.prototype,ee,r);const a=t.XMLHttpRequestEventTarget;a&&ae(a&&a.prototype,ee,r),"undefined"!=typeof IDBIndex&&(ae(IDBIndex.prototype,te,r),ae(IDBRequest.prototype,te,r),ae(IDBOpenDBRequest.prototype,te,r),ae(IDBDatabase.prototype,te,r),ae(IDBTransaction.prototype,te,r),ae(IDBCursor.prototype,te,r)),o&&ae(WebSocket.prototype,ne,r)}Zone.__load_patch("util",(n,i,c)=>{c.patchOnProperties=P,c.patchMethod=z,c.bindArguments=y,c.patchMacroTask=j;const f=i.__symbol__("BLACK_LISTED_EVENTS"),d=i.__symbol__("UNPATCHED_EVENTS");n[d]&&(n[f]=n[d]),n[f]&&(i[f]=i[d]=n[f]),c.patchEventPrototype=V,c.patchEventTarget=W,c.isIEOrEdge=N,c.ObjectDefineProperty=t,c.ObjectGetOwnPropertyDescriptor=e,c.ObjectCreate=o,c.ArraySlice=r,c.patchClass=C,c.wrapWithCurrentZone=p,c.filterProperties=se,c.attachOriginToPatched=I,c._redefineProperty=Object.defineProperty,c.patchCallbacks=$,c.getGlobalObjects=()=>({globalSources:F,zoneSymbolEventNames:H,eventNames:re,isBrowser:E,isMix:w,isNode:b,TRUE_STR:l,FALSE_STR:u,ZONE_SYMBOL_PREFIX:h,ADD_EVENT_LISTENER_STR:s,REMOVE_EVENT_LISTENER_STR:a})});const ce=d("zoneTask");function le(e,t,n,o){let r=null,s=null;n+=o;const a={};function i(t){const n=t.data;return n.args[0]=function(){return t.invoke.apply(this,arguments)},n.handleId=r.apply(e,n.args),t}function c(t){return s.call(e,t.data.handleId)}r=z(e,t+=o,n=>function(r,s){if("function"==typeof s[0]){const e={isPeriodic:"Interval"===o,delay:"Timeout"===o||"Interval"===o?s[1]||0:void 0,args:s},n=s[0];s[0]=function(){try{return n.apply(this,arguments)}finally{e.isPeriodic||("number"==typeof e.handleId?delete a[e.handleId]:e.handleId&&(e.handleId[ce]=null))}};const r=f(t,s[0],e,i,c);if(!r)return r;const l=r.data.handleId;return"number"==typeof l?a[l]=r:l&&(l[ce]=r),l&&l.ref&&l.unref&&"function"==typeof l.ref&&"function"==typeof l.unref&&(r.ref=l.ref.bind(l),r.unref=l.unref.bind(l)),"number"==typeof l||l?l:r}return n.apply(e,s)}),s=z(e,n,t=>function(n,o){const r=o[0];let s;"number"==typeof r?s=a[r]:(s=r&&r[ce],s||(s=r)),s&&"string"==typeof s.type?"notScheduled"!==s.state&&(s.cancelFn&&s.data.isPeriodic||0===s.runCount)&&("number"==typeof r?delete a[r]:r&&(r[ce]=null),s.zone.cancelTask(s)):t.apply(e,o)})}function ue(e,t){if(Zone[t.symbol("patchEventTarget")])return;const{eventNames:n,zoneSymbolEventNames:o,TRUE_STR:r,FALSE_STR:s,ZONE_SYMBOL_PREFIX:a}=t.getGlobalObjects();for(let c=0;c<n.length;c++){const e=n[c],t=a+(e+s),i=a+(e+r);o[e]={},o[e][s]=t,o[e][r]=i}const i=e.EventTarget;return i&&i.prototype?(t.patchEventTarget(e,[i&&i.prototype]),!0):void 0}Zone.__load_patch("legacy",e=>{const t=e[Zone.__symbol__("legacyPatch")];t&&t()}),Zone.__load_patch("queueMicrotask",(e,t,n)=>{n.patchMethod(e,"queueMicrotask",e=>function(e,n){t.current.scheduleMicroTask("queueMicrotask",n[0])})}),Zone.__load_patch("timers",e=>{const t="set",n="clear";le(e,t,n,"Timeout"),le(e,t,n,"Interval"),le(e,t,n,"Immediate")}),Zone.__load_patch("requestAnimationFrame",e=>{le(e,"request","cancel","AnimationFrame"),le(e,"mozRequest","mozCancel","AnimationFrame"),le(e,"webkitRequest","webkitCancel","AnimationFrame")}),Zone.__load_patch("blocking",(e,t)=>{const n=["alert","prompt","confirm"];for(let o=0;o<n.length;o++)z(e,n[o],(n,o,r)=>function(o,s){return t.current.run(n,e,s,r)})}),Zone.__load_patch("EventTarget",(e,t,n)=>{!function(e,t){t.patchEventPrototype(e,t)}(e,n),ue(e,n);const o=e.XMLHttpRequestEventTarget;o&&o.prototype&&n.patchEventTarget(e,[o.prototype])}),Zone.__load_patch("MutationObserver",(e,t,n)=>{C("MutationObserver"),C("WebKitMutationObserver")}),Zone.__load_patch("IntersectionObserver",(e,t,n)=>{C("IntersectionObserver")}),Zone.__load_patch("FileReader",(e,t,n)=>{C("FileReader")}),Zone.__load_patch("on_property",(e,t,n)=>{ie(n,e)}),Zone.__load_patch("customElements",(e,t,n)=>{!function(e,t){const{isBrowser:n,isMix:o}=t.getGlobalObjects();(n||o)&&e.customElements&&"customElements"in e&&t.patchCallbacks(t,e.customElements,"customElements","define",["connectedCallback","disconnectedCallback","adoptedCallback","attributeChangedCallback"])}(e,n)}),Zone.__load_patch("XHR",(e,t)=>{!function(e){const u=e.XMLHttpRequest;if(!u)return;const h=u.prototype;let p=h[i],g=h[c];if(!p){const t=e.XMLHttpRequestEventTarget;if(t){const e=t.prototype;p=e[i],g=e[c]}}const _="readystatechange",k="scheduled";function m(e){const o=e.data,a=o.target;a[s]=!1,a[l]=!1;const u=a[r];p||(p=a[i],g=a[c]),u&&g.call(a,_,u);const h=a[r]=()=>{if(a.readyState===a.DONE)if(!o.aborted&&a[s]&&e.state===k){const n=a[t.__symbol__("loadfalse")];if(0!==a.status&&n&&n.length>0){const r=e.invoke;e.invoke=function(){const n=a[t.__symbol__("loadfalse")];for(let t=0;t<n.length;t++)n[t]===e&&n.splice(t,1);o.aborted||e.state!==k||r.call(e)},n.push(e)}else e.invoke()}else o.aborted||!1!==a[s]||(a[l]=!0)};return p.call(a,_,h),a[n]||(a[n]=e),w.apply(a,o.args),a[s]=!0,e}function y(){}function v(e){const t=e.data;return t.aborted=!0,Z.apply(t.target,t.args)}const T=z(h,"open",()=>function(e,t){return e[o]=0==t[2],e[a]=t[1],T.apply(e,t)}),b=d("fetchTaskAborting"),E=d("fetchTaskScheduling"),w=z(h,"send",()=>function(e,n){if(!0===t.current[E])return w.apply(e,n);if(e[o])return w.apply(e,n);{const t={target:e,url:e[a],isPeriodic:!1,args:n,aborted:!1},o=f("XMLHttpRequest.send",y,t,m,v);e&&!0===e[l]&&!t.aborted&&o.state===k&&o.invoke()}}),Z=z(h,"abort",()=>function(e,o){const r=e[n];if(r&&"string"==typeof r.type){if(null==r.cancelFn||r.data&&r.data.aborted)return;r.zone.cancelTask(r)}else if(!0===t.current[b])return Z.apply(e,o)})}(e);const n=d("xhrTask"),o=d("xhrSync"),r=d("xhrListener"),s=d("xhrScheduled"),a=d("xhrURL"),l=d("xhrErrorBeforeScheduled")}),Zone.__load_patch("geolocation",t=>{t.navigator&&t.navigator.geolocation&&function(t,n){const o=t.constructor.name;for(let r=0;r<n.length;r++){const s=n[r],a=t[s];if(a){if(!v(e(t,s)))continue;t[s]=(e=>{const t=function(){return e.apply(this,y(arguments,o+"."+s))};return I(t,e),t})(a)}}}(t.navigator.geolocation,["getCurrentPosition","watchPosition"])}),Zone.__load_patch("PromiseRejectionEvent",(e,t)=>{function n(t){return function(n){U(e,t).forEach(o=>{const r=e.PromiseRejectionEvent;if(r){const e=new r(t,{promise:n.promise,reason:n.rejection});o.invoke(e)}})}}e.PromiseRejectionEvent&&(t[d("unhandledPromiseRejectionHandler")]=n("unhandledrejection"),t[d("rejectionHandledHandler")]=n("rejectionhandled"))})},469:(e,t,n)=>{"use strict";n(167)}},e=>{"use strict";e(e.s=469)}]);(self.webpackChunkng_elements_example=self.webpackChunkng_elements_example||[]).push([[179],{511:(t,e,n)=>{"use strict";function r(t){return"function"==typeof t}let s=!1;const i={Promise:void 0,set useDeprecatedSynchronousErrorHandling(t){if(t){const t=new Error;console.warn("DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n"+t.stack)}else s&&console.log("RxJS: Back to a better error behavior. Thank you. <3");s=t},get useDeprecatedSynchronousErrorHandling(){return s}};function o(t){setTimeout(()=>{throw t},0)}const a={closed:!0,next(t){},error(t){if(i.useDeprecatedSynchronousErrorHandling)throw t;o(t)},complete(){}},l=(()=>Array.isArray||(t=>t&&"number"==typeof t.length))();function u(t){return null!==t&&"object"==typeof t}const c=(()=>{function t(t){return Error.call(this),this.message=t?`${t.length} errors occurred during unsubscription:\n${t.map((t,e)=>`${e+1}) ${t.toString()}`).join("\n  ")}`:"",this.name="UnsubscriptionError",this.errors=t,this}return t.prototype=Object.create(Error.prototype),t})();let h=(()=>{class t{constructor(t){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,t&&(this._ctorUnsubscribe=!0,this._unsubscribe=t)}unsubscribe(){let e;if(this.closed)return;let{_parentOrParents:n,_ctorUnsubscribe:s,_unsubscribe:i,_subscriptions:o}=this;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,n instanceof t)n.remove(this);else if(null!==n)for(let t=0;t<n.length;++t)n[t].remove(this);if(r(i)){s&&(this._unsubscribe=void 0);try{i.call(this)}catch(a){e=a instanceof c?d(a.errors):[a]}}if(l(o)){let t=-1,n=o.length;for(;++t<n;){const n=o[t];if(u(n))try{n.unsubscribe()}catch(a){e=e||[],a instanceof c?e=e.concat(d(a.errors)):e.push(a)}}}if(e)throw new c(e)}add(e){let n=e;if(!e)return t.EMPTY;switch(typeof e){case"function":n=new t(e);case"object":if(n===this||n.closed||"function"!=typeof n.unsubscribe)return n;if(this.closed)return n.unsubscribe(),n;if(!(n instanceof t)){const e=n;n=new t,n._subscriptions=[e]}break;default:throw new Error("unrecognized teardown "+e+" added to Subscription.")}let{_parentOrParents:r}=n;if(null===r)n._parentOrParents=this;else if(r instanceof t){if(r===this)return n;n._parentOrParents=[r,this]}else{if(-1!==r.indexOf(this))return n;r.push(this)}const s=this._subscriptions;return null===s?this._subscriptions=[n]:s.push(n),n}remove(t){const e=this._subscriptions;if(e){const n=e.indexOf(t);-1!==n&&e.splice(n,1)}}}return t.EMPTY=function(t){return t.closed=!0,t}(new t),t})();function d(t){return t.reduce((t,e)=>t.concat(e instanceof c?e.errors:e),[])}const p=(()=>"function"==typeof Symbol?Symbol("rxSubscriber"):"@@rxSubscriber_"+Math.random())();class f extends h{constructor(t,e,n){switch(super(),this.syncErrorValue=null,this.syncErrorThrown=!1,this.syncErrorThrowable=!1,this.isStopped=!1,arguments.length){case 0:this.destination=a;break;case 1:if(!t){this.destination=a;break}if("object"==typeof t){t instanceof f?(this.syncErrorThrowable=t.syncErrorThrowable,this.destination=t,t.add(this)):(this.syncErrorThrowable=!0,this.destination=new g(this,t));break}default:this.syncErrorThrowable=!0,this.destination=new g(this,t,e,n)}}[p](){return this}static create(t,e,n){const r=new f(t,e,n);return r.syncErrorThrowable=!1,r}next(t){this.isStopped||this._next(t)}error(t){this.isStopped||(this.isStopped=!0,this._error(t))}complete(){this.isStopped||(this.isStopped=!0,this._complete())}unsubscribe(){this.closed||(this.isStopped=!0,super.unsubscribe())}_next(t){this.destination.next(t)}_error(t){this.destination.error(t),this.unsubscribe()}_complete(){this.destination.complete(),this.unsubscribe()}_unsubscribeAndRecycle(){const{_parentOrParents:t}=this;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=t,this}}class g extends f{constructor(t,e,n,s){let i;super(),this._parentSubscriber=t;let o=this;r(e)?i=e:e&&(i=e.next,n=e.error,s=e.complete,e!==a&&(o=Object.create(e),r(o.unsubscribe)&&this.add(o.unsubscribe.bind(o)),o.unsubscribe=this.unsubscribe.bind(this))),this._context=o,this._next=i,this._error=n,this._complete=s}next(t){if(!this.isStopped&&this._next){const{_parentSubscriber:e}=this;i.useDeprecatedSynchronousErrorHandling&&e.syncErrorThrowable?this.__tryOrSetError(e,this._next,t)&&this.unsubscribe():this.__tryOrUnsub(this._next,t)}}error(t){if(!this.isStopped){const{_parentSubscriber:e}=this,{useDeprecatedSynchronousErrorHandling:n}=i;if(this._error)n&&e.syncErrorThrowable?(this.__tryOrSetError(e,this._error,t),this.unsubscribe()):(this.__tryOrUnsub(this._error,t),this.unsubscribe());else if(e.syncErrorThrowable)n?(e.syncErrorValue=t,e.syncErrorThrown=!0):o(t),this.unsubscribe();else{if(this.unsubscribe(),n)throw t;o(t)}}}complete(){if(!this.isStopped){const{_parentSubscriber:t}=this;if(this._complete){const e=()=>this._complete.call(this._context);i.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?(this.__tryOrSetError(t,e),this.unsubscribe()):(this.__tryOrUnsub(e),this.unsubscribe())}else this.unsubscribe()}}__tryOrUnsub(t,e){try{t.call(this._context,e)}catch(n){if(this.unsubscribe(),i.useDeprecatedSynchronousErrorHandling)throw n;o(n)}}__tryOrSetError(t,e,n){if(!i.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{e.call(this._context,n)}catch(r){return i.useDeprecatedSynchronousErrorHandling?(t.syncErrorValue=r,t.syncErrorThrown=!0,!0):(o(r),!0)}return!1}_unsubscribe(){const{_parentSubscriber:t}=this;this._context=null,this._parentSubscriber=null,t.unsubscribe()}}const m=(()=>"function"==typeof Symbol&&Symbol.observable||"@@observable")();function y(t){return t}let v=(()=>{class t{constructor(t){this._isScalar=!1,t&&(this._subscribe=t)}lift(e){const n=new t;return n.source=this,n.operator=e,n}subscribe(t,e,n){const{operator:r}=this,s=function(t,e,n){if(t){if(t instanceof f)return t;if(t[p])return t[p]()}return t||e||n?new f(t,e,n):new f(a)}(t,e,n);if(s.add(r?r.call(s,this.source):this.source||i.useDeprecatedSynchronousErrorHandling&&!s.syncErrorThrowable?this._subscribe(s):this._trySubscribe(s)),i.useDeprecatedSynchronousErrorHandling&&s.syncErrorThrowable&&(s.syncErrorThrowable=!1,s.syncErrorThrown))throw s.syncErrorValue;return s}_trySubscribe(t){try{return this._subscribe(t)}catch(e){i.useDeprecatedSynchronousErrorHandling&&(t.syncErrorThrown=!0,t.syncErrorValue=e),function(t){for(;t;){const{closed:e,destination:n,isStopped:r}=t;if(e||r)return!1;t=n&&n instanceof f?n:null}return!0}(t)?t.error(e):console.warn(e)}}forEach(t,e){return new(e=b(e))((e,n)=>{let r;r=this.subscribe(e=>{try{t(e)}catch(s){n(s),r&&r.unsubscribe()}},n,e)})}_subscribe(t){const{source:e}=this;return e&&e.subscribe(t)}[m](){return this}pipe(...t){return 0===t.length?this:(0===(e=t).length?y:1===e.length?e[0]:function(t){return e.reduce((t,e)=>e(t),t)})(this);var e}toPromise(t){return new(t=b(t))((t,e)=>{let n;this.subscribe(t=>n=t,t=>e(t),()=>t(n))})}}return t.create=e=>new t(e),t})();function b(t){if(t||(t=i.Promise||Promise),!t)throw new Error("no Promise impl found");return t}const w=(()=>{function t(){return Error.call(this),this.message="object unsubscribed",this.name="ObjectUnsubscribedError",this}return t.prototype=Object.create(Error.prototype),t})();class C extends h{constructor(t,e){super(),this.subject=t,this.subscriber=e,this.closed=!1}unsubscribe(){if(this.closed)return;this.closed=!0;const t=this.subject,e=t.observers;if(this.subject=null,!e||0===e.length||t.isStopped||t.closed)return;const n=e.indexOf(this.subscriber);-1!==n&&e.splice(n,1)}}class _ extends f{constructor(t){super(t),this.destination=t}}let D=(()=>{class t extends v{constructor(){super(),this.observers=[],this.closed=!1,this.isStopped=!1,this.hasError=!1,this.thrownError=null}[p](){return new _(this)}lift(t){const e=new E(this,this);return e.operator=t,e}next(t){if(this.closed)throw new w;if(!this.isStopped){const{observers:e}=this,n=e.length,r=e.slice();for(let s=0;s<n;s++)r[s].next(t)}}error(t){if(this.closed)throw new w;this.hasError=!0,this.thrownError=t,this.isStopped=!0;const{observers:e}=this,n=e.length,r=e.slice();for(let s=0;s<n;s++)r[s].error(t);this.observers.length=0}complete(){if(this.closed)throw new w;this.isStopped=!0;const{observers:t}=this,e=t.length,n=t.slice();for(let r=0;r<e;r++)n[r].complete();this.observers.length=0}unsubscribe(){this.isStopped=!0,this.closed=!0,this.observers=null}_trySubscribe(t){if(this.closed)throw new w;return super._trySubscribe(t)}_subscribe(t){if(this.closed)throw new w;return this.hasError?(t.error(this.thrownError),h.EMPTY):this.isStopped?(t.complete(),h.EMPTY):(this.observers.push(t),new C(this,t))}asObservable(){const t=new v;return t.source=this,t}}return t.create=(t,e)=>new E(t,e),t})();class E extends D{constructor(t,e){super(),this.destination=t,this.source=e}next(t){const{destination:e}=this;e&&e.next&&e.next(t)}error(t){const{destination:e}=this;e&&e.error&&this.destination.error(t)}complete(){const{destination:t}=this;t&&t.complete&&this.destination.complete()}_subscribe(t){const{source:e}=this;return e?this.source.subscribe(t):h.EMPTY}}function S(t){return t&&"function"==typeof t.schedule}function x(t,e){return function(n){if("function"!=typeof t)throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");return n.lift(new A(t,e))}}class A{constructor(t,e){this.project=t,this.thisArg=e}call(t,e){return e.subscribe(new T(t,this.project,this.thisArg))}}class T extends f{constructor(t,e,n){super(t),this.project=e,this.count=0,this.thisArg=n||this}_next(t){let e;try{e=this.project.call(this.thisArg,t,this.count++)}catch(n){return void this.destination.error(n)}this.destination.next(e)}}const O=t=>e=>{for(let n=0,r=t.length;n<r&&!e.closed;n++)e.next(t[n]);e.complete()};function F(){return"function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator"}const k=F(),I=t=>t&&"number"==typeof t.length&&"function"!=typeof t;function R(t){return!!t&&"function"!=typeof t.subscribe&&"function"==typeof t.then}const P=t=>{if(t&&"function"==typeof t[m])return n=t,t=>{const e=n[m]();if("function"!=typeof e.subscribe)throw new TypeError("Provided object does not correctly implement Symbol.observable");return e.subscribe(t)};if(I(t))return O(t);if(R(t))return(t=>e=>(t.then(t=>{e.closed||(e.next(t),e.complete())},t=>e.error(t)).then(null,o),e))(t);if(t&&"function"==typeof t[k])return e=t,t=>{const n=e[k]();for(;;){let e;try{e=n.next()}catch(r){return t.error(r),t}if(e.done){t.complete();break}if(t.next(e.value),t.closed)break}return"function"==typeof n.return&&t.add(()=>{n.return&&n.return()}),t};{const e=u(t)?"an invalid object":`'${t}'`;throw new TypeError(`You provided ${e} where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.`)}var e,n};function L(t,e){return new v(n=>{const r=new h;let s=0;return r.add(e.schedule(function(){s!==t.length?(n.next(t[s++]),n.closed||r.add(this.schedule())):n.complete()})),r})}function N(t,e){return e?function(t,e){if(null!=t){if(function(t){return t&&"function"==typeof t[m]}(t))return function(t,e){return new v(n=>{const r=new h;return r.add(e.schedule(()=>{const s=t[m]();r.add(s.subscribe({next(t){r.add(e.schedule(()=>n.next(t)))},error(t){r.add(e.schedule(()=>n.error(t)))},complete(){r.add(e.schedule(()=>n.complete()))}}))})),r})}(t,e);if(R(t))return function(t,e){return new v(n=>{const r=new h;return r.add(e.schedule(()=>t.then(t=>{r.add(e.schedule(()=>{n.next(t),r.add(e.schedule(()=>n.complete()))}))},t=>{r.add(e.schedule(()=>n.error(t)))}))),r})}(t,e);if(I(t))return L(t,e);if(function(t){return t&&"function"==typeof t[k]}(t)||"string"==typeof t)return function(t,e){if(!t)throw new Error("Iterable cannot be null");return new v(n=>{const r=new h;let s;return r.add(()=>{s&&"function"==typeof s.return&&s.return()}),r.add(e.schedule(()=>{s=t[k](),r.add(e.schedule(function(){if(n.closed)return;let t,e;try{const n=s.next();t=n.value,e=n.done}catch(r){return void n.error(r)}e?n.complete():(n.next(t),this.schedule())}))})),r})}(t,e)}throw new TypeError((null!==t&&typeof t||t)+" is not observable")}(t,e):t instanceof v?t:new v(P(t))}class j extends f{constructor(t){super(),this.parent=t}_next(t){this.parent.notifyNext(t)}_error(t){this.parent.notifyError(t),this.unsubscribe()}_complete(){this.parent.notifyComplete(),this.unsubscribe()}}class M extends f{notifyNext(t){this.destination.next(t)}notifyError(t){this.destination.error(t)}notifyComplete(){this.destination.complete()}}function V(t,e){if(e.closed)return;if(t instanceof v)return t.subscribe(e);let n;try{n=P(t)(e)}catch(r){e.error(r)}return n}function B(t,e,n=Number.POSITIVE_INFINITY){return"function"==typeof e?r=>r.pipe(B((n,r)=>N(t(n,r)).pipe(x((t,s)=>e(n,t,r,s))),n)):("number"==typeof e&&(n=e),e=>e.lift(new H(t,n)))}class H{constructor(t,e=Number.POSITIVE_INFINITY){this.project=t,this.concurrent=e}call(t,e){return e.subscribe(new U(t,this.project,this.concurrent))}}class U extends M{constructor(t,e,n=Number.POSITIVE_INFINITY){super(t),this.project=e,this.concurrent=n,this.hasCompleted=!1,this.buffer=[],this.active=0,this.index=0}_next(t){this.active<this.concurrent?this._tryNext(t):this.buffer.push(t)}_tryNext(t){let e;const n=this.index++;try{e=this.project(t,n)}catch(r){return void this.destination.error(r)}this.active++,this._innerSub(e)}_innerSub(t){const e=new j(this),n=this.destination;n.add(e);const r=V(t,e);r!==e&&n.add(r)}_complete(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&this.destination.complete(),this.unsubscribe()}notifyNext(t){this.destination.next(t)}notifyComplete(){const t=this.buffer;this.active--,t.length>0?this._next(t.shift()):0===this.active&&this.hasCompleted&&this.destination.complete()}}function $(t=Number.POSITIVE_INFINITY){return B(y,t)}function z(t,e){return e?L(t,e):new v(O(t))}function q(...t){let e=Number.POSITIVE_INFINITY,n=null,r=t[t.length-1];return S(r)?(n=t.pop(),t.length>1&&"number"==typeof t[t.length-1]&&(e=t.pop())):"number"==typeof r&&(e=t.pop()),null===n&&1===t.length&&t[0]instanceof v?t[0]:$(e)(z(t,n))}function W(){return function(t){return t.lift(new G(t))}}class G{constructor(t){this.connectable=t}call(t,e){const{connectable:n}=this;n._refCount++;const r=new Z(t,n),s=e.subscribe(r);return r.closed||(r.connection=n.connect()),s}}class Z extends f{constructor(t,e){super(t),this.connectable=e}_unsubscribe(){const{connectable:t}=this;if(!t)return void(this.connection=null);this.connectable=null;const e=t._refCount;if(e<=0)return void(this.connection=null);if(t._refCount=e-1,e>1)return void(this.connection=null);const{connection:n}=this,r=t._connection;this.connection=null,!r||n&&r!==n||r.unsubscribe()}}class Y extends v{constructor(t,e){super(),this.source=t,this.subjectFactory=e,this._refCount=0,this._isComplete=!1}_subscribe(t){return this.getSubject().subscribe(t)}getSubject(){const t=this._subject;return t&&!t.isStopped||(this._subject=this.subjectFactory()),this._subject}connect(){let t=this._connection;return t||(this._isComplete=!1,t=this._connection=new h,t.add(this.source.subscribe(new Q(this.getSubject(),this))),t.closed&&(this._connection=null,t=h.EMPTY)),t}refCount(){return W()(this)}}const K=(()=>{const t=Y.prototype;return{operator:{value:null},_refCount:{value:0,writable:!0},_subject:{value:null,writable:!0},_connection:{value:null,writable:!0},_subscribe:{value:t._subscribe},_isComplete:{value:t._isComplete,writable:!0},getSubject:{value:t.getSubject},connect:{value:t.connect},refCount:{value:t.refCount}}})();class Q extends _{constructor(t,e){super(t),this.connectable=e}_error(t){this._unsubscribe(),super._error(t)}_complete(){this.connectable._isComplete=!0,this._unsubscribe(),super._complete()}_unsubscribe(){const t=this.connectable;if(t){this.connectable=null;const e=t._connection;t._refCount=0,t._subject=null,t._connection=null,e&&e.unsubscribe()}}}function X(){return new D}function J(t){for(let e in t)if(t[e]===J)return e;throw Error("Could not find renamed property on target object.")}function tt(t,e){for(const n in e)e.hasOwnProperty(n)&&!t.hasOwnProperty(n)&&(t[n]=e[n])}function et(t){if("string"==typeof t)return t;if(Array.isArray(t))return"["+t.map(et).join(", ")+"]";if(null==t)return""+t;if(t.overriddenName)return`${t.overriddenName}`;if(t.name)return`${t.name}`;const e=t.toString();if(null==e)return""+e;const n=e.indexOf("\n");return-1===n?e:e.substring(0,n)}function nt(t,e){return null==t||""===t?null===e?"":e:null==e||""===e?t:t+" "+e}const rt=J({__forward_ref__:J});function st(t){return t.__forward_ref__=st,t.toString=function(){return et(this())},t}function it(t){return ot(t)?t():t}function ot(t){return"function"==typeof t&&t.hasOwnProperty(rt)&&t.__forward_ref__===st}class at extends Error{constructor(t,e){super(function(t,e){return`${t?`NG0${t}: `:""}${e}`}(t,e)),this.code=t}}function lt(t){return"string"==typeof t?t:null==t?"":String(t)}function ut(t){return"function"==typeof t?t.name||t.toString():"object"==typeof t&&null!=t&&"function"==typeof t.type?t.type.name||t.type.toString():lt(t)}function ct(t,e){const n=e?` in ${e}`:"";throw new at("201",`No provider for ${ut(t)} found${n}`)}function ht(t){return{token:t.token,providedIn:t.providedIn||null,factory:t.factory,value:void 0}}function dt(t){return{providers:t.providers||[],imports:t.imports||[]}}function pt(t){return ft(t,mt)||ft(t,vt)}function ft(t,e){return t.hasOwnProperty(e)?t[e]:null}function gt(t){return t&&(t.hasOwnProperty(yt)||t.hasOwnProperty(bt))?t[yt]:null}const mt=J({"\u0275prov":J}),yt=J({"\u0275inj":J}),vt=J({ngInjectableDef:J}),bt=J({ngInjectorDef:J});var wt=function(t){return t[t.Default=0]="Default",t[t.Host=1]="Host",t[t.Self=2]="Self",t[t.SkipSelf=4]="SkipSelf",t[t.Optional=8]="Optional",t}({});let Ct;function _t(t){const e=Ct;return Ct=t,e}function Dt(t,e,n){const r=pt(t);return r&&"root"==r.providedIn?void 0===r.value?r.value=r.factory():r.value:n&wt.Optional?null:void 0!==e?e:void ct(et(t),"Injector")}function Et(t){return{toString:t}.toString()}var St=function(t){return t[t.OnPush=0]="OnPush",t[t.Default=1]="Default",t}({}),xt=function(t){return t[t.Emulated=0]="Emulated",t[t.None=2]="None",t[t.ShadowDom=3]="ShadowDom",t}({});const At="undefined"!=typeof globalThis&&globalThis,Tt="undefined"!=typeof window&&window,Ot="undefined"!=typeof self&&"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,Ft="undefined"!=typeof global&&global,kt=At||Ft||Tt||Ot,It={},Rt=[],Pt=J({"\u0275cmp":J}),Lt=J({"\u0275dir":J}),Nt=J({"\u0275pipe":J}),jt=J({"\u0275mod":J}),Mt=J({"\u0275loc":J}),Vt=J({"\u0275fac":J}),Bt=J({__NG_ELEMENT_ID__:J});let Ht=0;function Ut(t){return Et(()=>{const e={},n={type:t.type,providersResolver:null,decls:t.decls,vars:t.vars,factory:null,template:t.template||null,consts:t.consts||null,ngContentSelectors:t.ngContentSelectors,hostBindings:t.hostBindings||null,hostVars:t.hostVars||0,hostAttrs:t.hostAttrs||null,contentQueries:t.contentQueries||null,declaredInputs:e,inputs:null,outputs:null,exportAs:t.exportAs||null,onPush:t.changeDetection===St.OnPush,directiveDefs:null,pipeDefs:null,selectors:t.selectors||Rt,viewQuery:t.viewQuery||null,features:t.features||null,data:t.data||{},encapsulation:t.encapsulation||xt.Emulated,id:"c",styles:t.styles||Rt,_:null,setInput:null,schemas:t.schemas||null,tView:null},r=t.directives,s=t.features,i=t.pipes;return n.id+=Ht++,n.inputs=Gt(t.inputs,e),n.outputs=Gt(t.outputs),s&&s.forEach(t=>t(n)),n.directiveDefs=r?()=>("function"==typeof r?r():r).map($t):null,n.pipeDefs=i?()=>("function"==typeof i?i():i).map(zt):null,n})}function $t(t){return Kt(t)||function(t){return t[Lt]||null}(t)}function zt(t){return function(t){return t[Nt]||null}(t)}const qt={};function Wt(t){return Et(()=>{const e={type:t.type,bootstrap:t.bootstrap||Rt,declarations:t.declarations||Rt,imports:t.imports||Rt,exports:t.exports||Rt,transitiveCompileScopes:null,schemas:t.schemas||null,id:t.id||null};return null!=t.id&&(qt[t.id]=t.type),e})}function Gt(t,e){if(null==t)return It;const n={};for(const r in t)if(t.hasOwnProperty(r)){let s=t[r],i=s;Array.isArray(s)&&(i=s[1],s=s[0]),n[s]=r,e&&(e[s]=i)}return n}const Zt=Ut;function Yt(t){return{type:t.type,name:t.name,factory:null,pure:!1!==t.pure,onDestroy:t.type.prototype.ngOnDestroy||null}}function Kt(t){return t[Pt]||null}function Qt(t,e){const n=t[jt]||null;if(!n&&!0===e)throw new Error(`Type ${et(t)} does not have '\u0275mod' property.`);return n}const Xt=20,Jt=10;function te(t){return Array.isArray(t)&&"object"==typeof t[1]}function ee(t){return Array.isArray(t)&&!0===t[1]}function ne(t){return 0!=(8&t.flags)}function re(t){return 2==(2&t.flags)}function se(t){return 1==(1&t.flags)}function ie(t){return null!==t.template}function oe(t,e){return t.hasOwnProperty(Vt)?t[Vt]:null}class ae{constructor(t,e,n){this.previousValue=t,this.currentValue=e,this.firstChange=n}isFirstChange(){return this.firstChange}}function le(){return ue}function ue(t){return t.type.prototype.ngOnChanges&&(t.setInput=he),ce}function ce(){const t=de(this),e=null==t?void 0:t.current;if(e){const n=t.previous;if(n===It)t.previous=e;else for(let t in e)n[t]=e[t];t.current=null,this.ngOnChanges(e)}}function he(t,e,n,r){const s=de(t)||function(t,e){return t.__ngSimpleChanges__=e}(t,{previous:It,current:null}),i=s.current||(s.current={}),o=s.previous,a=this.declaredInputs[n],l=o[a];i[a]=new ae(l&&l.currentValue,e,o===It),t[r]=e}function de(t){return t.__ngSimpleChanges__||null}let pe;function fe(){return void 0!==pe?pe:"undefined"!=typeof document?document:void 0}function ge(t){return!!t.listen}le.ngInherit=!0;const me={createRenderer:(t,e)=>fe()};function ye(t){for(;Array.isArray(t);)t=t[0];return t}function ve(t,e){return ye(e[t])}function be(t,e){return ye(e[t.index])}function we(t,e){return t.data[e]}function Ce(t,e){const n=e[t];return te(n)?n:n[0]}function _e(t){return 4==(4&t[2])}function De(t){return 128==(128&t[2])}function Ee(t,e){return null==e?null:t[e]}function Se(t){t[18]=0}function xe(t,e){t[5]+=e;let n=t,r=t[3];for(;null!==r&&(1===e&&1===n[5]||-1===e&&0===n[5]);)r[5]+=e,n=r,r=r[3]}const Ae={lFrame:Ke(null),bindingsEnabled:!0,isInCheckNoChangesMode:!1};function Te(){return Ae.bindingsEnabled}function Oe(){return Ae.lFrame.lView}function Fe(){return Ae.lFrame.tView}function ke(t){return Ae.lFrame.contextLView=t,t[8]}function Ie(){let t=Re();for(;null!==t&&64===t.type;)t=t.parent;return t}function Re(){return Ae.lFrame.currentTNode}function Pe(t,e){const n=Ae.lFrame;n.currentTNode=t,n.isParent=e}function Le(){return Ae.lFrame.isParent}function Ne(){Ae.lFrame.isParent=!1}function je(){return Ae.isInCheckNoChangesMode}function Me(t){Ae.isInCheckNoChangesMode=t}function Ve(){const t=Ae.lFrame;let e=t.bindingRootIndex;return-1===e&&(e=t.bindingRootIndex=t.tView.bindingStartIndex),e}function Be(){return Ae.lFrame.bindingIndex++}function He(t){const e=Ae.lFrame,n=e.bindingIndex;return e.bindingIndex=e.bindingIndex+t,n}function Ue(t,e){const n=Ae.lFrame;n.bindingIndex=n.bindingRootIndex=t,$e(e)}function $e(t){Ae.lFrame.currentDirectiveIndex=t}function ze(){return Ae.lFrame.currentQueryIndex}function qe(t){Ae.lFrame.currentQueryIndex=t}function We(t){const e=t[1];return 2===e.type?e.declTNode:1===e.type?t[6]:null}function Ge(t,e,n){if(n&wt.SkipSelf){let r=e,s=t;for(;r=r.parent,!(null!==r||n&wt.Host||(r=We(s),null===r)||(s=s[15],10&r.type)););if(null===r)return!1;e=r,t=s}const r=Ae.lFrame=Ye();return r.currentTNode=e,r.lView=t,!0}function Ze(t){const e=Ye(),n=t[1];Ae.lFrame=e,e.currentTNode=n.firstChild,e.lView=t,e.tView=n,e.contextLView=t,e.bindingIndex=n.bindingStartIndex,e.inI18n=!1}function Ye(){const t=Ae.lFrame,e=null===t?null:t.child;return null===e?Ke(t):e}function Ke(t){const e={currentTNode:null,isParent:!0,lView:null,tView:null,selectedIndex:-1,contextLView:null,elementDepthCount:0,currentNamespace:null,currentDirectiveIndex:-1,bindingRootIndex:-1,bindingIndex:-1,currentQueryIndex:0,parent:t,child:null,inI18n:!1};return null!==t&&(t.child=e),e}function Qe(){const t=Ae.lFrame;return Ae.lFrame=t.parent,t.currentTNode=null,t.lView=null,t}const Xe=Qe;function Je(){const t=Qe();t.isParent=!0,t.tView=null,t.selectedIndex=-1,t.contextLView=null,t.elementDepthCount=0,t.currentDirectiveIndex=-1,t.currentNamespace=null,t.bindingRootIndex=-1,t.bindingIndex=-1,t.currentQueryIndex=0}function tn(){return Ae.lFrame.selectedIndex}function en(t){Ae.lFrame.selectedIndex=t}function nn(){const t=Ae.lFrame;return we(t.tView,t.selectedIndex)}function rn(t,e){for(let n=e.directiveStart,r=e.directiveEnd;n<r;n++){const e=t.data[n].type.prototype,{ngAfterContentInit:r,ngAfterContentChecked:s,ngAfterViewInit:i,ngAfterViewChecked:o,ngOnDestroy:a}=e;r&&(t.contentHooks||(t.contentHooks=[])).push(-n,r),s&&((t.contentHooks||(t.contentHooks=[])).push(n,s),(t.contentCheckHooks||(t.contentCheckHooks=[])).push(n,s)),i&&(t.viewHooks||(t.viewHooks=[])).push(-n,i),o&&((t.viewHooks||(t.viewHooks=[])).push(n,o),(t.viewCheckHooks||(t.viewCheckHooks=[])).push(n,o)),null!=a&&(t.destroyHooks||(t.destroyHooks=[])).push(n,a)}}function sn(t,e,n){ln(t,e,3,n)}function on(t,e,n,r){(3&t[2])===n&&ln(t,e,n,r)}function an(t,e){let n=t[2];(3&n)===e&&(n&=2047,n+=1,t[2]=n)}function ln(t,e,n,r){const s=null!=r?r:-1,i=e.length-1;let o=0;for(let a=void 0!==r?65535&t[18]:0;a<i;a++)if("number"==typeof e[a+1]){if(o=e[a],null!=r&&o>=r)break}else e[a]<0&&(t[18]+=65536),(o<s||-1==s)&&(un(t,n,e,a),t[18]=(4294901760&t[18])+a+2),a++}function un(t,e,n,r){const s=n[r]<0,i=n[r+1],o=t[s?-n[r]:n[r]];if(s){if(t[2]>>11<t[18]>>16&&(3&t[2])===e){t[2]+=2048;try{i.call(o)}finally{}}}else try{i.call(o)}finally{}}const cn=-1;class hn{constructor(t,e,n){this.factory=t,this.resolving=!1,this.canSeeViewProviders=e,this.injectImpl=n}}function dn(t,e,n){const r=ge(t);let s=0;for(;s<n.length;){const i=n[s];if("number"==typeof i){if(0!==i)break;s++;const o=n[s++],a=n[s++],l=n[s++];r?t.setAttribute(e,a,l,o):e.setAttributeNS(o,a,l)}else{const o=i,a=n[++s];fn(o)?r&&t.setProperty(e,o,a):r?t.setAttribute(e,o,a):e.setAttribute(o,a),s++}}return s}function pn(t){return 3===t||4===t||6===t}function fn(t){return 64===t.charCodeAt(0)}function gn(t,e){if(null===e||0===e.length);else if(null===t||0===t.length)t=e.slice();else{let n=-1;for(let r=0;r<e.length;r++){const s=e[r];"number"==typeof s?n=s:0===n||mn(t,n,s,null,-1===n||2===n?e[++r]:null)}}return t}function mn(t,e,n,r,s){let i=0,o=t.length;if(-1===e)o=-1;else for(;i<t.length;){const n=t[i++];if("number"==typeof n){if(n===e){o=-1;break}if(n>e){o=i-1;break}}}for(;i<t.length;){const e=t[i];if("number"==typeof e)break;if(e===n){if(null===r)return void(null!==s&&(t[i+1]=s));if(r===t[i+1])return void(t[i+2]=s)}i++,null!==r&&i++,null!==s&&i++}-1!==o&&(t.splice(o,0,e),i=o+1),t.splice(i++,0,n),null!==r&&t.splice(i++,0,r),null!==s&&t.splice(i++,0,s)}function yn(t){return t!==cn}function vn(t){return 32767&t}function bn(t,e){let n=t>>16,r=e;for(;n>0;)r=r[15],n--;return r}let wn=!0;function Cn(t){const e=wn;return wn=t,e}let _n=0;function Dn(t,e){const n=Sn(t,e);if(-1!==n)return n;const r=e[1];r.firstCreatePass&&(t.injectorIndex=e.length,En(r.data,t),En(e,null),En(r.blueprint,null));const s=xn(t,e),i=t.injectorIndex;if(yn(s)){const t=vn(s),n=bn(s,e),r=n[1].data;for(let s=0;s<8;s++)e[i+s]=n[t+s]|r[t+s]}return e[i+8]=s,i}function En(t,e){t.push(0,0,0,0,0,0,0,0,e)}function Sn(t,e){return-1===t.injectorIndex||t.parent&&t.parent.injectorIndex===t.injectorIndex||null===e[t.injectorIndex+8]?-1:t.injectorIndex}function xn(t,e){if(t.parent&&-1!==t.parent.injectorIndex)return t.parent.injectorIndex;let n=0,r=null,s=e;for(;null!==s;){const t=s[1],e=t.type;if(r=2===e?t.declTNode:1===e?s[6]:null,null===r)return cn;if(n++,s=s[15],-1!==r.injectorIndex)return r.injectorIndex|n<<16}return cn}function An(t,e,n){!function(t,e,n){let r;"string"==typeof n?r=n.charCodeAt(0)||0:n.hasOwnProperty(Bt)&&(r=n[Bt]),null==r&&(r=n[Bt]=_n++);const s=255&r;e.data[t+(s>>5)]|=1<<s}(t,e,n)}function Tn(t,e,n){if(n&wt.Optional)return t;ct(e,"NodeInjector")}function On(t,e,n,r){if(n&wt.Optional&&void 0===r&&(r=null),0==(n&(wt.Self|wt.Host))){const s=t[9],i=_t(void 0);try{return s?s.get(e,r,n&wt.Optional):Dt(e,r,n&wt.Optional)}finally{_t(i)}}return Tn(r,e,n)}function Fn(t,e,n,r=wt.Default,s){if(null!==t){const i=function(t){if("string"==typeof t)return t.charCodeAt(0)||0;const e=t.hasOwnProperty(Bt)?t[Bt]:void 0;return"number"==typeof e?e>=0?255&e:In:e}(n);if("function"==typeof i){if(!Ge(e,t,r))return r&wt.Host?Tn(s,n,r):On(e,n,r,s);try{const t=i(r);if(null!=t||r&wt.Optional)return t;ct(n)}finally{Xe()}}else if("number"==typeof i){let s=null,o=Sn(t,e),a=cn,l=r&wt.Host?e[16][6]:null;for((-1===o||r&wt.SkipSelf)&&(a=-1===o?xn(t,e):e[o+8],a!==cn&&jn(r,!1)?(s=e[1],o=vn(a),e=bn(a,e)):o=-1);-1!==o;){const t=e[1];if(Nn(i,o,t.data)){const t=Rn(o,e,n,s,r,l);if(t!==kn)return t}a=e[o+8],a!==cn&&jn(r,e[1].data[o+8]===l)&&Nn(i,o,e)?(s=t,o=vn(a),e=bn(a,e)):o=-1}}}return On(e,n,r,s)}const kn={};function In(){return new Mn(Ie(),Oe())}function Rn(t,e,n,r,s,i){const o=e[1],a=o.data[t+8],l=Pn(a,o,n,null==r?re(a)&&wn:r!=o&&0!=(3&a.type),s&wt.Host&&i===a);return null!==l?Ln(e,o,l,a):kn}function Pn(t,e,n,r,s){const i=t.providerIndexes,o=e.data,a=1048575&i,l=t.directiveStart,u=i>>20,c=s?a+u:t.directiveEnd;for(let h=r?a:a+u;h<c;h++){const t=o[h];if(h<l&&n===t||h>=l&&t.type===n)return h}if(s){const t=o[l];if(t&&ie(t)&&t.type===n)return l}return null}function Ln(t,e,n,r){let s=t[n];const i=e.data;if(s instanceof hn){const o=s;o.resolving&&function(t,e){throw new at("200",`Circular dependency in DI detected for ${t}`)}(ut(i[n]));const a=Cn(o.canSeeViewProviders);o.resolving=!0;const l=o.injectImpl?_t(o.injectImpl):null;Ge(t,r,wt.Default);try{s=t[n]=o.factory(void 0,i,t,r),e.firstCreatePass&&n>=r.directiveStart&&function(t,e,n){const{ngOnChanges:r,ngOnInit:s,ngDoCheck:i}=e.type.prototype;if(r){const r=ue(e);(n.preOrderHooks||(n.preOrderHooks=[])).push(t,r),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(t,r)}s&&(n.preOrderHooks||(n.preOrderHooks=[])).push(0-t,s),i&&((n.preOrderHooks||(n.preOrderHooks=[])).push(t,i),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(t,i))}(n,i[n],e)}finally{null!==l&&_t(l),Cn(a),o.resolving=!1,Xe()}}return s}function Nn(t,e,n){return!!(n[e+(t>>5)]&1<<t)}function jn(t,e){return!(t&wt.Self||t&wt.Host&&e)}class Mn{constructor(t,e){this._tNode=t,this._lView=e}get(t,e){return Fn(this._tNode,this._lView,t,void 0,e)}}function Vn(t){return Et(()=>{const e=t.prototype.constructor,n=e[Vt]||Bn(e),r=Object.prototype;let s=Object.getPrototypeOf(t.prototype).constructor;for(;s&&s!==r;){const t=s[Vt]||Bn(s);if(t&&t!==n)return t;s=Object.getPrototypeOf(s)}return t=>new t})}function Bn(t){return ot(t)?()=>{const e=Bn(it(t));return e&&e()}:oe(t)}const Hn="__parameters__";function Un(t,e,n){return Et(()=>{const r=function(t){return function(...e){if(t){const n=t(...e);for(const t in n)this[t]=n[t]}}}(e);function s(...t){if(this instanceof s)return r.apply(this,t),this;const e=new s(...t);return n.annotation=e,n;function n(t,n,r){const s=t.hasOwnProperty(Hn)?t[Hn]:Object.defineProperty(t,Hn,{value:[]})[Hn];for(;s.length<=r;)s.push(null);return(s[r]=s[r]||[]).push(e),t}}return n&&(s.prototype=Object.create(n.prototype)),s.prototype.ngMetadataName=t,s.annotationCls=s,s})}class $n{constructor(t,e){this._desc=t,this.ngMetadataName="InjectionToken",this.\u0275prov=void 0,"number"==typeof e?this.__NG_ELEMENT_ID__=e:void 0!==e&&(this.\u0275prov=ht({token:this,providedIn:e.providedIn||"root",factory:e.factory}))}toString(){return`InjectionToken ${this._desc}`}}const zn=new $n("AnalyzeForEntryComponents"),qn=Function;function Wn(t,e){void 0===e&&(e=t);for(let n=0;n<t.length;n++){let r=t[n];Array.isArray(r)?(e===t&&(e=t.slice(0,n)),Wn(r,e)):e!==t&&e.push(r)}return e}function Gn(t,e){t.forEach(t=>Array.isArray(t)?Gn(t,e):e(t))}function Zn(t,e,n){e>=t.length?t.push(n):t.splice(e,0,n)}function Yn(t,e){return e>=t.length-1?t.pop():t.splice(e,1)[0]}function Kn(t,e){const n=[];for(let r=0;r<t;r++)n.push(e);return n}function Qn(t,e,n){let r=Jn(t,e);return r>=0?t[1|r]=n:(r=~r,function(t,e,n,r){let s=t.length;if(s==e)t.push(n,r);else if(1===s)t.push(r,t[0]),t[0]=n;else{for(s--,t.push(t[s-1],t[s]);s>e;)t[s]=t[s-2],s--;t[e]=n,t[e+1]=r}}(t,r,e,n)),r}function Xn(t,e){const n=Jn(t,e);if(n>=0)return t[1|n]}function Jn(t,e){return function(t,e,n){let r=0,s=t.length>>1;for(;s!==r;){const n=r+(s-r>>1),i=t[n<<1];if(e===i)return n<<1;i>e?s=n:r=n+1}return~(s<<1)}(t,e)}const tr={},er=/\n/gm,nr="__source",rr=J({provide:String,useValue:J});let sr;function ir(t){const e=sr;return sr=t,e}function or(t,e=wt.Default){if(void 0===sr)throw new Error("inject() must be called from an injection context");return null===sr?Dt(t,void 0,e):sr.get(t,e&wt.Optional?null:void 0,e)}function ar(t,e=wt.Default){return(Ct||or)(it(t),e)}function lr(t){const e=[];for(let n=0;n<t.length;n++){const r=it(t[n]);if(Array.isArray(r)){if(0===r.length)throw new Error("Arguments array must have arguments.");let t,n=wt.Default;for(let e=0;e<r.length;e++){const s=r[e],i=s.__NG_DI_FLAG__;"number"==typeof i?-1===i?t=s.token:n|=i:t=s}e.push(ar(t,n))}else e.push(ar(r))}return e}function ur(t,e){return t.__NG_DI_FLAG__=e,t.prototype.__NG_DI_FLAG__=e,t}const cr=ur(Un("Inject",t=>({token:t})),-1),hr=ur(Un("Optional"),8),dr=ur(Un("SkipSelf"),4);let pr,fr;function gr(t){var e;return(null===(e=function(){if(void 0===pr&&(pr=null,kt.trustedTypes))try{pr=kt.trustedTypes.createPolicy("angular",{createHTML:t=>t,createScript:t=>t,createScriptURL:t=>t})}catch(e){}return pr}())||void 0===e?void 0:e.createHTML(t))||t}function mr(t){var e;return(null===(e=function(){if(void 0===fr&&(fr=null,kt.trustedTypes))try{fr=kt.trustedTypes.createPolicy("angular#unsafe-bypass",{createHTML:t=>t,createScript:t=>t,createScriptURL:t=>t})}catch(e){}return fr}())||void 0===e?void 0:e.createHTML(t))||t}class yr{constructor(t){this.changingThisBreaksApplicationSecurity=t}toString(){return`SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`}}class vr extends yr{getTypeName(){return"HTML"}}class br extends yr{getTypeName(){return"Style"}}class wr extends yr{getTypeName(){return"Script"}}class Cr extends yr{getTypeName(){return"URL"}}class _r extends yr{getTypeName(){return"ResourceURL"}}function Dr(t){return t instanceof yr?t.changingThisBreaksApplicationSecurity:t}function Er(t,e){const n=Sr(t);if(null!=n&&n!==e){if("ResourceURL"===n&&"URL"===e)return!0;throw new Error(`Required a safe ${e}, got a ${n} (see https://g.co/ng/security#xss)`)}return n===e}function Sr(t){return t instanceof yr&&t.getTypeName()||null}class xr{constructor(t){this.inertDocumentHelper=t}getInertBodyElement(t){t="<body><remove></remove>"+t;try{const e=(new window.DOMParser).parseFromString(gr(t),"text/html").body;return null===e?this.inertDocumentHelper.getInertBodyElement(t):(e.removeChild(e.firstChild),e)}catch(e){return null}}}class Ar{constructor(t){if(this.defaultDoc=t,this.inertDocument=this.defaultDoc.implementation.createHTMLDocument("sanitization-inert"),null==this.inertDocument.body){const t=this.inertDocument.createElement("html");this.inertDocument.appendChild(t);const e=this.inertDocument.createElement("body");t.appendChild(e)}}getInertBodyElement(t){const e=this.inertDocument.createElement("template");if("content"in e)return e.innerHTML=gr(t),e;const n=this.inertDocument.createElement("body");return n.innerHTML=gr(t),this.defaultDoc.documentMode&&this.stripCustomNsAttrs(n),n}stripCustomNsAttrs(t){const e=t.attributes;for(let r=e.length-1;0<r;r--){const n=e.item(r).name;"xmlns:ns1"!==n&&0!==n.indexOf("ns1:")||t.removeAttribute(n)}let n=t.firstChild;for(;n;)n.nodeType===Node.ELEMENT_NODE&&this.stripCustomNsAttrs(n),n=n.nextSibling}}const Tr=/^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,Or=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;function Fr(t){return(t=String(t)).match(Tr)||t.match(Or)?t:"unsafe:"+t}function kr(t){const e={};for(const n of t.split(","))e[n]=!0;return e}function Ir(...t){const e={};for(const n of t)for(const t in n)n.hasOwnProperty(t)&&(e[t]=!0);return e}const Rr=kr("area,br,col,hr,img,wbr"),Pr=kr("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),Lr=kr("rp,rt"),Nr=Ir(Lr,Pr),jr=Ir(Rr,Ir(Pr,kr("address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul")),Ir(Lr,kr("a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video")),Nr),Mr=kr("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),Vr=kr("srcset"),Br=Ir(Mr,Vr,kr("abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"),kr("aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext")),Hr=kr("script,style,template");class Ur{constructor(){this.sanitizedSomething=!1,this.buf=[]}sanitizeChildren(t){let e=t.firstChild,n=!0;for(;e;)if(e.nodeType===Node.ELEMENT_NODE?n=this.startElement(e):e.nodeType===Node.TEXT_NODE?this.chars(e.nodeValue):this.sanitizedSomething=!0,n&&e.firstChild)e=e.firstChild;else for(;e;){e.nodeType===Node.ELEMENT_NODE&&this.endElement(e);let t=this.checkClobberedElement(e,e.nextSibling);if(t){e=t;break}e=this.checkClobberedElement(e,e.parentNode)}return this.buf.join("")}startElement(t){const e=t.nodeName.toLowerCase();if(!jr.hasOwnProperty(e))return this.sanitizedSomething=!0,!Hr.hasOwnProperty(e);this.buf.push("<"),this.buf.push(e);const n=t.attributes;for(let s=0;s<n.length;s++){const t=n.item(s),e=t.name,i=e.toLowerCase();if(!Br.hasOwnProperty(i)){this.sanitizedSomething=!0;continue}let o=t.value;Mr[i]&&(o=Fr(o)),Vr[i]&&(r=o,o=(r=String(r)).split(",").map(t=>Fr(t.trim())).join(", ")),this.buf.push(" ",e,'="',qr(o),'"')}var r;return this.buf.push(">"),!0}endElement(t){const e=t.nodeName.toLowerCase();jr.hasOwnProperty(e)&&!Rr.hasOwnProperty(e)&&(this.buf.push("</"),this.buf.push(e),this.buf.push(">"))}chars(t){this.buf.push(qr(t))}checkClobberedElement(t,e){if(e&&(t.compareDocumentPosition(e)&Node.DOCUMENT_POSITION_CONTAINED_BY)===Node.DOCUMENT_POSITION_CONTAINED_BY)throw new Error(`Failed to sanitize html because the element is clobbered: ${t.outerHTML}`);return e}}const $r=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,zr=/([^\#-~ |!])/g;function qr(t){return t.replace(/&/g,"&amp;").replace($r,function(t){return"&#"+(1024*(t.charCodeAt(0)-55296)+(t.charCodeAt(1)-56320)+65536)+";"}).replace(zr,function(t){return"&#"+t.charCodeAt(0)+";"}).replace(/</g,"&lt;").replace(/>/g,"&gt;")}let Wr;function Gr(t,e){let n=null;try{Wr=Wr||function(t){const e=new Ar(t);return function(){try{return!!(new window.DOMParser).parseFromString(gr(""),"text/html")}catch(t){return!1}}()?new xr(e):e}(t);let r=e?String(e):"";n=Wr.getInertBodyElement(r);let s=5,i=r;do{if(0===s)throw new Error("Failed to sanitize html because the input is unstable");s--,r=i,i=n.innerHTML,n=Wr.getInertBodyElement(r)}while(r!==i);return gr((new Ur).sanitizeChildren(Zr(n)||n))}finally{if(n){const t=Zr(n)||n;for(;t.firstChild;)t.removeChild(t.firstChild)}}}function Zr(t){return"content"in t&&function(t){return t.nodeType===Node.ELEMENT_NODE&&"TEMPLATE"===t.nodeName}(t)?t.content:null}var Yr=function(t){return t[t.NONE=0]="NONE",t[t.HTML=1]="HTML",t[t.STYLE=2]="STYLE",t[t.SCRIPT=3]="SCRIPT",t[t.URL=4]="URL",t[t.RESOURCE_URL=5]="RESOURCE_URL",t}({});function Kr(t){const e=function(){const t=Oe();return t&&t[12]}();return e?mr(e.sanitize(Yr.HTML,t)||""):Er(t,"HTML")?mr(Dr(t)):Gr(fe(),lt(t))}function Qr(t,e){t.__ngContext__=e}function Xr(t){const e=function(t){return t.__ngContext__||null}(t);return e?Array.isArray(e)?e:e.lView:null}function Jr(t){return t.ngDebugContext}function ts(t){return t.ngOriginalError}function es(t,...e){t.error(...e)}class ns{constructor(){this._console=console}handleError(t){const e=this._findOriginalError(t),n=this._findContext(t),r=function(t){return t.ngErrorLogger||es}(t);r(this._console,"ERROR",t),e&&r(this._console,"ORIGINAL ERROR",e),n&&r(this._console,"ERROR CONTEXT",n)}_findContext(t){return t?Jr(t)?Jr(t):this._findContext(ts(t)):null}_findOriginalError(t){let e=ts(t);for(;e&&ts(e);)e=ts(e);return e}}const rs=(()=>("undefined"!=typeof requestAnimationFrame&&requestAnimationFrame||setTimeout).bind(kt))();function ss(t){return t instanceof Function?t():t}var is=function(t){return t[t.Important=1]="Important",t[t.DashCase=2]="DashCase",t}({});function os(t,e){return(void 0)(t,e)}function as(t){const e=t[3];return ee(e)?e[3]:e}function ls(t){return cs(t[13])}function us(t){return cs(t[4])}function cs(t){for(;null!==t&&!ee(t);)t=t[4];return t}function hs(t,e,n,r,s){if(null!=r){let i,o=!1;ee(r)?i=r:te(r)&&(o=!0,r=r[0]);const a=ye(r);0===t&&null!==n?null==s?bs(e,n,a):vs(e,n,a,s||null,!0):1===t&&null!==n?vs(e,n,a,s||null,!0):2===t?function(t,e,n){const r=Cs(t,e);r&&function(t,e,n,r){ge(t)?t.removeChild(e,n,r):e.removeChild(n)}(t,r,e,n)}(e,a,o):3===t&&e.destroyNode(a),null!=i&&function(t,e,n,r,s){const i=n[7];i!==ye(n)&&hs(e,t,r,i,s);for(let o=Jt;o<n.length;o++){const s=n[o];Os(s[1],s,t,e,r,i)}}(e,t,i,n,s)}}function ds(t,e,n){return ge(t)?t.createElement(e,n):null===n?t.createElement(e):t.createElementNS(n,e)}function ps(t,e){const n=t[9],r=n.indexOf(e),s=e[3];1024&e[2]&&(e[2]&=-1025,xe(s,-1)),n.splice(r,1)}function fs(t,e){if(t.length<=Jt)return;const n=Jt+e,r=t[n];if(r){const i=r[17];null!==i&&i!==t&&ps(i,r),e>0&&(t[n-1][4]=r[4]);const o=Yn(t,Jt+e);Os(r[1],s=r,s[11],2,null,null),s[0]=null,s[6]=null;const a=o[19];null!==a&&a.detachView(o[1]),r[3]=null,r[4]=null,r[2]&=-129}var s;return r}function gs(t,e){if(!(256&e[2])){const n=e[11];ge(n)&&n.destroyNode&&Os(t,e,n,3,null,null),function(t){let e=t[13];if(!e)return ms(t[1],t);for(;e;){let n=null;if(te(e))n=e[13];else{const t=e[10];t&&(n=t)}if(!n){for(;e&&!e[4]&&e!==t;)te(e)&&ms(e[1],e),e=e[3];null===e&&(e=t),te(e)&&ms(e[1],e),n=e&&e[4]}e=n}}(e)}}function ms(t,e){if(!(256&e[2])){e[2]&=-129,e[2]|=256,function(t,e){let n;if(null!=t&&null!=(n=t.destroyHooks))for(let r=0;r<n.length;r+=2){const t=e[n[r]];if(!(t instanceof hn)){const e=n[r+1];if(Array.isArray(e))for(let n=0;n<e.length;n+=2){const r=t[e[n]],s=e[n+1];try{s.call(r)}finally{}}else try{e.call(t)}finally{}}}}(t,e),function(t,e){const n=t.cleanup,r=e[7];let s=-1;if(null!==n)for(let i=0;i<n.length-1;i+=2)if("string"==typeof n[i]){const t=n[i+1],o="function"==typeof t?t(e):ye(e[t]),a=r[s=n[i+2]],l=n[i+3];"boolean"==typeof l?o.removeEventListener(n[i],a,l):l>=0?r[s=l]():r[s=-l].unsubscribe(),i+=2}else{const t=r[s=n[i+1]];n[i].call(t)}if(null!==r){for(let t=s+1;t<r.length;t++)(0,r[t])();e[7]=null}}(t,e),1===e[1].type&&ge(e[11])&&e[11].destroy();const n=e[17];if(null!==n&&ee(e[3])){n!==e[3]&&ps(n,e);const r=e[19];null!==r&&r.detachView(t)}}}function ys(t,e,n){return function(t,e,n){let r=e;for(;null!==r&&40&r.type;)r=(e=r).parent;if(null===r)return n[0];if(2&r.flags){const e=t.data[r.directiveStart].encapsulation;if(e===xt.None||e===xt.Emulated)return null}return be(r,n)}(t,e.parent,n)}function vs(t,e,n,r,s){ge(t)?t.insertBefore(e,n,r,s):e.insertBefore(n,r,s)}function bs(t,e,n){ge(t)?t.appendChild(e,n):e.appendChild(n)}function ws(t,e,n,r,s){null!==r?vs(t,e,n,r,s):bs(t,e,n)}function Cs(t,e){return ge(t)?t.parentNode(e):e.parentNode}function _s(t,e,n){return Ds(t,e,n)}let Ds=function(t,e,n){return 40&t.type?be(t,n):null};function Es(t,e,n,r){const s=ys(t,r,e),i=e[11],o=_s(r.parent||e[6],r,e);if(null!=s)if(Array.isArray(n))for(let a=0;a<n.length;a++)ws(i,s,n[a],o,!1);else ws(i,s,n,o,!1)}function Ss(t,e){if(null!==e){const n=e.type;if(3&n)return be(e,t);if(4&n)return As(-1,t[e.index]);if(8&n){const n=e.child;if(null!==n)return Ss(t,n);{const n=t[e.index];return ee(n)?As(-1,n):ye(n)}}if(32&n)return os(e,t)()||ye(t[e.index]);{const n=xs(t,e);return null!==n?Array.isArray(n)?n[0]:Ss(as(t[16]),n):Ss(t,e.next)}}return null}function xs(t,e){return null!==e?t[16][6].projection[e.projection]:null}function As(t,e){const n=Jt+t+1;if(n<e.length){const t=e[n],r=t[1].firstChild;if(null!==r)return Ss(t,r)}return e[7]}function Ts(t,e,n,r,s,i,o){for(;null!=n;){const a=r[n.index],l=n.type;if(o&&0===e&&(a&&Qr(ye(a),r),n.flags|=4),64!=(64&n.flags))if(8&l)Ts(t,e,n.child,r,s,i,!1),hs(e,t,s,a,i);else if(32&l){const o=os(n,r);let l;for(;l=o();)hs(e,t,s,l,i);hs(e,t,s,a,i)}else 16&l?Fs(t,e,r,n,s,i):hs(e,t,s,a,i);n=o?n.projectionNext:n.next}}function Os(t,e,n,r,s,i){Ts(n,r,t.firstChild,e,s,i,!1)}function Fs(t,e,n,r,s,i){const o=n[16],a=o[6].projection[r.projection];if(Array.isArray(a))for(let l=0;l<a.length;l++)hs(e,t,s,a[l],i);else Ts(t,e,a,o[3],s,i,!0)}function ks(t,e,n){ge(t)?t.setAttribute(e,"style",n):e.style.cssText=n}function Is(t,e,n){ge(t)?""===n?t.removeAttribute(e,"class"):t.setAttribute(e,"class",n):e.className=n}function Rs(t,e,n){let r=t.length;for(;;){const s=t.indexOf(e,n);if(-1===s)return s;if(0===s||t.charCodeAt(s-1)<=32){const n=e.length;if(s+n===r||t.charCodeAt(s+n)<=32)return s}n=s+1}}const Ps="ng-template";function Ls(t,e,n){let r=0;for(;r<t.length;){let s=t[r++];if(n&&"class"===s){if(s=t[r],-1!==Rs(s.toLowerCase(),e,0))return!0}else if(1===s){for(;r<t.length&&"string"==typeof(s=t[r++]);)if(s.toLowerCase()===e)return!0;return!1}}return!1}function Ns(t){return 4===t.type&&t.value!==Ps}function js(t,e,n){return e===(4!==t.type||n?t.value:Ps)}function Ms(t,e,n){let r=4;const s=t.attrs||[],i=function(t){for(let e=0;e<t.length;e++)if(pn(t[e]))return e;return t.length}(s);let o=!1;for(let a=0;a<e.length;a++){const l=e[a];if("number"!=typeof l){if(!o)if(4&r){if(r=2|1&r,""!==l&&!js(t,l,n)||""===l&&1===e.length){if(Vs(r))return!1;o=!0}}else{const u=8&r?l:e[++a];if(8&r&&null!==t.attrs){if(!Ls(t.attrs,u,n)){if(Vs(r))return!1;o=!0}continue}const c=Bs(8&r?"class":l,s,Ns(t),n);if(-1===c){if(Vs(r))return!1;o=!0;continue}if(""!==u){let t;t=c>i?"":s[c+1].toLowerCase();const e=8&r?t:null;if(e&&-1!==Rs(e,u,0)||2&r&&u!==t){if(Vs(r))return!1;o=!0}}}}else{if(!o&&!Vs(r)&&!Vs(l))return!1;if(o&&Vs(l))continue;o=!1,r=l|1&r}}return Vs(r)||o}function Vs(t){return 0==(1&t)}function Bs(t,e,n,r){if(null===e)return-1;let s=0;if(r||!n){let n=!1;for(;s<e.length;){const r=e[s];if(r===t)return s;if(3===r||6===r)n=!0;else{if(1===r||2===r){let t=e[++s];for(;"string"==typeof t;)t=e[++s];continue}if(4===r)break;if(0===r){s+=4;continue}}s+=n?1:2}return-1}return function(t,e){let n=t.indexOf(4);if(n>-1)for(n++;n<t.length;){const r=t[n];if("number"==typeof r)return-1;if(r===e)return n;n++}return-1}(e,t)}function Hs(t,e,n=!1){for(let r=0;r<e.length;r++)if(Ms(t,e[r],n))return!0;return!1}function Us(t,e){t:for(let n=0;n<e.length;n++){const r=e[n];if(t.length===r.length){for(let e=0;e<t.length;e++)if(t[e]!==r[e])continue t;return!0}}return!1}function $s(t,e){return t?":not("+e.trim()+")":e}function zs(t){let e=t[0],n=1,r=2,s="",i=!1;for(;n<t.length;){let o=t[n];if("string"==typeof o)if(2&r){const e=t[++n];s+="["+o+(e.length>0?'="'+e+'"':"")+"]"}else 8&r?s+="."+o:4&r&&(s+=" "+o);else""===s||Vs(o)||(e+=$s(i,s),s=""),r=o,i=i||!Vs(r);n++}return""!==s&&(e+=$s(i,s)),e}const qs={};function Ws(t){Gs(Fe(),Oe(),tn()+t,je())}function Gs(t,e,n,r){if(!r)if(3==(3&e[2])){const r=t.preOrderCheckHooks;null!==r&&sn(e,r,n)}else{const r=t.preOrderHooks;null!==r&&on(e,r,0,n)}en(n)}function Zs(t,e){return t<<17|e<<2}function Ys(t){return t>>17&32767}function Ks(t){return 2|t}function Qs(t){return(131068&t)>>2}function Xs(t,e){return-131069&t|e<<2}function Js(t){return 1|t}function ti(t,e){const n=t.contentQueries;if(null!==n)for(let r=0;r<n.length;r+=2){const s=n[r],i=n[r+1];if(-1!==i){const n=t.data[i];qe(s),n.contentQueries(2,e[i],i)}}}function ei(t,e,n,r,s,i,o,a,l,u){const c=e.blueprint.slice();return c[0]=s,c[2]=140|r,Se(c),c[3]=c[15]=t,c[8]=n,c[10]=o||t&&t[10],c[11]=a||t&&t[11],c[12]=l||t&&t[12]||null,c[9]=u||t&&t[9]||null,c[6]=i,c[16]=2==e.type?t[16]:c,c}function ni(t,e,n,r,s){let i=t.data[e];if(null===i)i=function(t,e,n,r,s){const i=Re(),o=Le(),a=t.data[e]=function(t,e,n,r,s,i){return{type:n,index:r,insertBeforeIndex:null,injectorIndex:e?e.injectorIndex:-1,directiveStart:-1,directiveEnd:-1,directiveStylingLast:-1,propertyBindings:null,flags:0,providerIndexes:0,value:s,attrs:i,mergedAttrs:null,localNames:null,initialInputs:void 0,inputs:null,outputs:null,tViews:null,next:null,projectionNext:null,child:null,parent:e,projection:null,styles:null,stylesWithoutHost:null,residualStyles:void 0,classes:null,classesWithoutHost:null,residualClasses:void 0,classBindings:0,styleBindings:0}}(0,o?i:i&&i.parent,n,e,r,s);return null===t.firstChild&&(t.firstChild=a),null!==i&&(o?null==i.child&&null!==a.parent&&(i.child=a):null===i.next&&(i.next=a)),a}(t,e,n,r,s),Ae.lFrame.inI18n&&(i.flags|=64);else if(64&i.type){i.type=n,i.value=r,i.attrs=s;const t=function(){const t=Ae.lFrame,e=t.currentTNode;return t.isParent?e:e.parent}();i.injectorIndex=null===t?-1:t.injectorIndex}return Pe(i,!0),i}function ri(t,e,n,r){if(0===n)return-1;const s=e.length;for(let i=0;i<n;i++)e.push(r),t.blueprint.push(r),t.data.push(null);return s}function si(t,e,n){Ze(e);try{const r=t.viewQuery;null!==r&&Ri(1,r,n);const s=t.template;null!==s&&ai(t,e,s,1,n),t.firstCreatePass&&(t.firstCreatePass=!1),t.staticContentQueries&&ti(t,e),t.staticViewQueries&&Ri(2,t.viewQuery,n);const i=t.components;null!==i&&function(t,e){for(let n=0;n<e.length;n++)Ti(t,e[n])}(e,i)}catch(r){throw t.firstCreatePass&&(t.incompleteFirstPass=!0),r}finally{e[2]&=-5,Je()}}function ii(t,e,n,r){const s=e[2];if(256==(256&s))return;Ze(e);const i=je();try{Se(e),Ae.lFrame.bindingIndex=t.bindingStartIndex,null!==n&&ai(t,e,n,2,r);const o=3==(3&s);if(!i)if(o){const n=t.preOrderCheckHooks;null!==n&&sn(e,n,null)}else{const n=t.preOrderHooks;null!==n&&on(e,n,0,null),an(e,0)}if(function(t){for(let e=ls(t);null!==e;e=us(e)){if(!e[2])continue;const t=e[9];for(let e=0;e<t.length;e++){const n=t[e],r=n[3];0==(1024&n[2])&&xe(r,1),n[2]|=1024}}}(e),function(t){for(let e=ls(t);null!==e;e=us(e))for(let t=Jt;t<e.length;t++){const n=e[t],r=n[1];De(n)&&ii(r,n,r.template,n[8])}}(e),null!==t.contentQueries&&ti(t,e),!i)if(o){const n=t.contentCheckHooks;null!==n&&sn(e,n)}else{const n=t.contentHooks;null!==n&&on(e,n,1),an(e,1)}!function(t,e){const n=t.hostBindingOpCodes;if(null!==n)try{for(let t=0;t<n.length;t++){const r=n[t];if(r<0)en(~r);else{const s=r,i=n[++t],o=n[++t];Ue(i,s),o(2,e[s])}}}finally{en(-1)}}(t,e);const a=t.components;null!==a&&function(t,e){for(let n=0;n<e.length;n++)xi(t,e[n])}(e,a);const l=t.viewQuery;if(null!==l&&Ri(2,l,r),!i)if(o){const n=t.viewCheckHooks;null!==n&&sn(e,n)}else{const n=t.viewHooks;null!==n&&on(e,n,2),an(e,2)}!0===t.firstUpdatePass&&(t.firstUpdatePass=!1),i||(e[2]&=-73),1024&e[2]&&(e[2]&=-1025,xe(e[3],-1))}finally{Je()}}function oi(t,e,n,r){const s=e[10],i=!je(),o=_e(e);try{i&&!o&&s.begin&&s.begin(),o&&si(t,e,r),ii(t,e,n,r)}finally{i&&!o&&s.end&&s.end()}}function ai(t,e,n,r,s){const i=tn(),o=2&r;try{en(-1),o&&e.length>Xt&&Gs(t,e,Xt,je()),n(r,s)}finally{en(i)}}function li(t,e,n){if(ne(e)){const r=e.directiveEnd;for(let s=e.directiveStart;s<r;s++){const e=t.data[s];e.contentQueries&&e.contentQueries(1,n[s],s)}}}function ui(t,e,n){Te()&&(function(t,e,n,r){const s=n.directiveStart,i=n.directiveEnd;t.firstCreatePass||Dn(n,e),Qr(r,e);const o=n.initialInputs;for(let a=s;a<i;a++){const r=t.data[a],i=ie(r);i&&_i(e,n,r);const l=Ln(e,t,a,n);Qr(l,e),null!==o&&Di(0,a-s,l,r,0,o),i&&(Ce(n.index,e)[8]=l)}}(t,e,n,be(n,e)),128==(128&n.flags)&&function(t,e,n){const r=n.directiveStart,s=n.directiveEnd,i=n.index,o=Ae.lFrame.currentDirectiveIndex;try{en(i);for(let n=r;n<s;n++){const r=t.data[n],s=e[n];$e(n),null===r.hostBindings&&0===r.hostVars&&null===r.hostAttrs||yi(r,s)}}finally{en(-1),$e(o)}}(t,e,n))}function ci(t,e,n=be){const r=e.localNames;if(null!==r){let s=e.index+1;for(let i=0;i<r.length;i+=2){const o=r[i+1],a=-1===o?n(e,t):t[o];t[s++]=a}}}function hi(t){const e=t.tView;return null===e||e.incompleteFirstPass?t.tView=di(1,null,t.template,t.decls,t.vars,t.directiveDefs,t.pipeDefs,t.viewQuery,t.schemas,t.consts):e}function di(t,e,n,r,s,i,o,a,l,u){const c=Xt+r,h=c+s,d=function(t,e){const n=[];for(let r=0;r<e;r++)n.push(r<t?null:qs);return n}(c,h),p="function"==typeof u?u():u;return d[1]={type:t,blueprint:d,template:n,queries:null,viewQuery:a,declTNode:e,data:d.slice().fill(null,c),bindingStartIndex:c,expandoStartIndex:h,hostBindingOpCodes:null,firstCreatePass:!0,firstUpdatePass:!0,staticViewQueries:!1,staticContentQueries:!1,preOrderHooks:null,preOrderCheckHooks:null,contentHooks:null,contentCheckHooks:null,viewHooks:null,viewCheckHooks:null,destroyHooks:null,cleanup:null,contentQueries:null,components:null,directiveRegistry:"function"==typeof i?i():i,pipeRegistry:"function"==typeof o?o():o,firstChild:null,schemas:l,consts:p,incompleteFirstPass:!1}}function pi(t,e,n,r){const s=Li(e);null===n?s.push(r):(s.push(n),t.firstCreatePass&&Ni(t).push(r,s.length-1))}function fi(t,e,n){for(let r in t)if(t.hasOwnProperty(r)){const s=t[r];(n=null===n?{}:n).hasOwnProperty(r)?n[r].push(e,s):n[r]=[e,s]}return n}function gi(t,e,n,r){let s=!1;if(Te()){const i=function(t,e,n){const r=t.directiveRegistry;let s=null;if(r)for(let i=0;i<r.length;i++){const o=r[i];Hs(n,o.selectors,!1)&&(s||(s=[]),An(Dn(n,e),t,o.type),ie(o)?(vi(t,n),s.unshift(o)):s.push(o))}return s}(t,e,n),o=null===r?null:{"":-1};if(null!==i){s=!0,wi(n,t.data.length,i.length);for(let t=0;t<i.length;t++){const e=i[t];e.providersResolver&&e.providersResolver(e)}let r=!1,a=!1,l=ri(t,e,i.length,null);for(let s=0;s<i.length;s++){const u=i[s];n.mergedAttrs=gn(n.mergedAttrs,u.hostAttrs),Ci(t,n,e,l,u),bi(l,u,o),null!==u.contentQueries&&(n.flags|=8),null===u.hostBindings&&null===u.hostAttrs&&0===u.hostVars||(n.flags|=128);const c=u.type.prototype;!r&&(c.ngOnChanges||c.ngOnInit||c.ngDoCheck)&&((t.preOrderHooks||(t.preOrderHooks=[])).push(n.index),r=!0),a||!c.ngOnChanges&&!c.ngDoCheck||((t.preOrderCheckHooks||(t.preOrderCheckHooks=[])).push(n.index),a=!0),l++}!function(t,e){const n=e.directiveEnd,r=t.data,s=e.attrs,i=[];let o=null,a=null;for(let l=e.directiveStart;l<n;l++){const t=r[l],n=t.inputs,u=null===s||Ns(e)?null:Ei(n,s);i.push(u),o=fi(n,l,o),a=fi(t.outputs,l,a)}null!==o&&(o.hasOwnProperty("class")&&(e.flags|=16),o.hasOwnProperty("style")&&(e.flags|=32)),e.initialInputs=i,e.inputs=o,e.outputs=a}(t,n)}o&&function(t,e,n){if(e){const r=t.localNames=[];for(let t=0;t<e.length;t+=2){const s=n[e[t+1]];if(null==s)throw new at("301",`Export of name '${e[t+1]}' not found!`);r.push(e[t],s)}}}(n,r,o)}return n.mergedAttrs=gn(n.mergedAttrs,n.attrs),s}function mi(t,e,n,r,s,i){const o=i.hostBindings;if(o){let n=t.hostBindingOpCodes;null===n&&(n=t.hostBindingOpCodes=[]);const i=~e.index;(function(t){let e=t.length;for(;e>0;){const n=t[--e];if("number"==typeof n&&n<0)return n}return 0})(n)!=i&&n.push(i),n.push(r,s,o)}}function yi(t,e){null!==t.hostBindings&&t.hostBindings(1,e)}function vi(t,e){e.flags|=2,(t.components||(t.components=[])).push(e.index)}function bi(t,e,n){if(n){if(e.exportAs)for(let r=0;r<e.exportAs.length;r++)n[e.exportAs[r]]=t;ie(e)&&(n[""]=t)}}function wi(t,e,n){t.flags|=1,t.directiveStart=e,t.directiveEnd=e+n,t.providerIndexes=e}function Ci(t,e,n,r,s){t.data[r]=s;const i=s.factory||(s.factory=oe(s.type)),o=new hn(i,ie(s),null);t.blueprint[r]=o,n[r]=o,mi(t,e,0,r,ri(t,n,s.hostVars,qs),s)}function _i(t,e,n){const r=be(e,t),s=hi(n),i=t[10],o=Oi(t,ei(t,s,null,n.onPush?64:16,r,e,i,i.createRenderer(r,n),null,null));t[e.index]=o}function Di(t,e,n,r,s,i){const o=i[e];if(null!==o){const t=r.setInput;for(let e=0;e<o.length;){const s=o[e++],i=o[e++],a=o[e++];null!==t?r.setInput(n,a,s,i):n[i]=a}}}function Ei(t,e){let n=null,r=0;for(;r<e.length;){const s=e[r];if(0!==s)if(5!==s){if("number"==typeof s)break;t.hasOwnProperty(s)&&(null===n&&(n=[]),n.push(s,t[s],e[r+1])),r+=2}else r+=2;else r+=4}return n}function Si(t,e,n,r){return new Array(t,!0,!1,e,null,0,r,n,null,null)}function xi(t,e){const n=Ce(e,t);if(De(n)){const t=n[1];80&n[2]?ii(t,n,t.template,n[8]):n[5]>0&&Ai(n)}}function Ai(t){for(let n=ls(t);null!==n;n=us(n))for(let t=Jt;t<n.length;t++){const e=n[t];if(1024&e[2]){const t=e[1];ii(t,e,t.template,e[8])}else e[5]>0&&Ai(e)}const e=t[1].components;if(null!==e)for(let n=0;n<e.length;n++){const r=Ce(e[n],t);De(r)&&r[5]>0&&Ai(r)}}function Ti(t,e){const n=Ce(e,t),r=n[1];!function(t,e){for(let n=e.length;n<t.blueprint.length;n++)e.push(t.blueprint[n])}(r,n),si(r,n,n[8])}function Oi(t,e){return t[13]?t[14][4]=e:t[13]=e,t[14]=e,e}function Fi(t){for(;t;){t[2]|=64;const e=as(t);if(0!=(512&t[2])&&!e)return t;t=e}return null}function ki(t,e,n){const r=e[10];r.begin&&r.begin();try{ii(t,e,t.template,n)}catch(s){throw ji(e,s),s}finally{r.end&&r.end()}}function Ii(t){!function(t){for(let e=0;e<t.components.length;e++){const n=t.components[e],r=Xr(n),s=r[1];oi(s,r,s.template,n)}}(t[8])}function Ri(t,e,n){qe(0),e(t,n)}const Pi=(()=>Promise.resolve(null))();function Li(t){return t[7]||(t[7]=[])}function Ni(t){return t.cleanup||(t.cleanup=[])}function ji(t,e){const n=t[9],r=n?n.get(ns,null):null;r&&r.handleError(e)}function Mi(t,e,n,r,s){for(let i=0;i<n.length;){const o=n[i++],a=n[i++],l=e[o],u=t.data[o];null!==u.setInput?u.setInput(l,s,r,a):l[a]=s}}function Vi(t,e,n){let r=n?t.styles:null,s=n?t.classes:null,i=0;if(null!==e)for(let o=0;o<e.length;o++){const t=e[o];"number"==typeof t?i=t:1==i?s=nt(s,t):2==i&&(r=nt(r,t+": "+e[++o]+";"))}n?t.styles=r:t.stylesWithoutHost=r,n?t.classes=s:t.classesWithoutHost=s}const Bi=new $n("INJECTOR",-1);class Hi{get(t,e=tr){if(e===tr){const e=new Error(`NullInjectorError: No provider for ${et(t)}!`);throw e.name="NullInjectorError",e}return e}}const Ui=new $n("Set Injector scope."),$i={},zi={};let qi;function Wi(){return void 0===qi&&(qi=new Hi),qi}function Gi(t,e=null,n=null,r){return new Zi(t,n,e||Wi(),r)}class Zi{constructor(t,e,n,r=null){this.parent=n,this.records=new Map,this.injectorDefTypes=new Set,this.onDestroy=new Set,this._destroyed=!1;const s=[];e&&Gn(e,n=>this.processProvider(n,t,e)),Gn([t],t=>this.processInjectorType(t,[],s)),this.records.set(Bi,Qi(void 0,this));const i=this.records.get(Ui);this.scope=null!=i?i.value:null,this.source=r||("object"==typeof t?null:et(t))}get destroyed(){return this._destroyed}destroy(){this.assertNotDestroyed(),this._destroyed=!0;try{this.onDestroy.forEach(t=>t.ngOnDestroy())}finally{this.records.clear(),this.onDestroy.clear(),this.injectorDefTypes.clear()}}get(t,e=tr,n=wt.Default){this.assertNotDestroyed();const r=ir(this);try{if(!(n&wt.SkipSelf)){let e=this.records.get(t);if(void 0===e){const n=("function"==typeof(s=t)||"object"==typeof s&&s instanceof $n)&&pt(t);e=n&&this.injectableDefInScope(n)?Qi(Yi(t),$i):null,this.records.set(t,e)}if(null!=e)return this.hydrate(t,e)}return(n&wt.Self?Wi():this.parent).get(t,e=n&wt.Optional&&e===tr?null:e)}catch(i){if("NullInjectorError"===i.name){if((i.ngTempTokenPath=i.ngTempTokenPath||[]).unshift(et(t)),r)throw i;return function(t,e,n,r){const s=t.ngTempTokenPath;throw e[nr]&&s.unshift(e[nr]),t.message=function(t,e,n,r=null){t=t&&"\n"===t.charAt(0)&&"\u0275"==t.charAt(1)?t.substr(2):t;let s=et(e);if(Array.isArray(e))s=e.map(et).join(" -> ");else if("object"==typeof e){let t=[];for(let n in e)if(e.hasOwnProperty(n)){let r=e[n];t.push(n+":"+("string"==typeof r?JSON.stringify(r):et(r)))}s=`{${t.join(", ")}}`}return`${n}${r?"("+r+")":""}[${s}]: ${t.replace(er,"\n  ")}`}("\n"+t.message,s,n,r),t.ngTokenPath=s,t.ngTempTokenPath=null,t}(i,t,"R3InjectorError",this.source)}throw i}finally{ir(r)}var s}_resolveInjectorDefTypes(){this.injectorDefTypes.forEach(t=>this.get(t))}toString(){const t=[];return this.records.forEach((e,n)=>t.push(et(n))),`R3Injector[${t.join(", ")}]`}assertNotDestroyed(){if(this._destroyed)throw new Error("Injector has already been destroyed.")}processInjectorType(t,e,n){if(!(t=it(t)))return!1;let r=gt(t);const s=null==r&&t.ngModule||void 0,i=void 0===s?t:s,o=-1!==n.indexOf(i);if(void 0!==s&&(r=gt(s)),null==r)return!1;if(null!=r.imports&&!o){let t;n.push(i);try{Gn(r.imports,r=>{this.processInjectorType(r,e,n)&&(void 0===t&&(t=[]),t.push(r))})}finally{}if(void 0!==t)for(let e=0;e<t.length;e++){const{ngModule:n,providers:r}=t[e];Gn(r,t=>this.processProvider(t,n,r||Rt))}}this.injectorDefTypes.add(i);const a=oe(i)||(()=>new i);this.records.set(i,Qi(a,$i));const l=r.providers;if(null!=l&&!o){const e=t;Gn(l,t=>this.processProvider(t,e,l))}return void 0!==s&&void 0!==t.providers}processProvider(t,e,n){let r=Ji(t=it(t))?t:it(t&&t.provide);const s=function(t,e,n){return Xi(t)?Qi(void 0,t.useValue):Qi(Ki(t),$i)}(t);if(Ji(t)||!0!==t.multi)this.records.get(r);else{let e=this.records.get(r);e||(e=Qi(void 0,$i,!0),e.factory=()=>lr(e.multi),this.records.set(r,e)),r=t,e.multi.push(t)}this.records.set(r,s)}hydrate(t,e){var n;return e.value===$i&&(e.value=zi,e.value=e.factory()),"object"==typeof e.value&&e.value&&null!==(n=e.value)&&"object"==typeof n&&"function"==typeof n.ngOnDestroy&&this.onDestroy.add(e.value),e.value}injectableDefInScope(t){if(!t.providedIn)return!1;const e=it(t.providedIn);return"string"==typeof e?"any"===e||e===this.scope:this.injectorDefTypes.has(e)}}function Yi(t){const e=pt(t),n=null!==e?e.factory:oe(t);if(null!==n)return n;if(t instanceof $n)throw new Error(`Token ${et(t)} is missing a \u0275prov definition.`);if(t instanceof Function)return function(t){const e=t.length;if(e>0){const n=Kn(e,"?");throw new Error(`Can't resolve all parameters for ${et(t)}: (${n.join(", ")}).`)}const n=function(t){const e=t&&(t[mt]||t[vt]);if(e){const n=function(t){if(t.hasOwnProperty("name"))return t.name;const e=(""+t).match(/^function\s*([^\s(]+)/);return null===e?"":e[1]}(t);return console.warn(`DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${n}" class.`),e}return null}(t);return null!==n?()=>n.factory(t):()=>new t}(t);throw new Error("unreachable")}function Ki(t,e,n){let r;if(Ji(t)){const e=it(t);return oe(e)||Yi(e)}if(Xi(t))r=()=>it(t.useValue);else if((s=t)&&s.useFactory)r=()=>t.useFactory(...lr(t.deps||[]));else if(function(t){return!(!t||!t.useExisting)}(t))r=()=>ar(it(t.useExisting));else{const e=it(t&&(t.useClass||t.provide));if(!function(t){return!!t.deps}(t))return oe(e)||Yi(e);r=()=>new e(...lr(t.deps))}var s;return r}function Qi(t,e,n=!1){return{factory:t,value:e,multi:n?[]:void 0}}function Xi(t){return null!==t&&"object"==typeof t&&rr in t}function Ji(t){return"function"==typeof t}const to=function(t,e,n){return function(t,e=null,n=null,r){const s=Gi(t,e,n,r);return s._resolveInjectorDefTypes(),s}({name:n},e,t,n)};let eo=(()=>{class t{static create(t,e){return Array.isArray(t)?to(t,e,""):to(t.providers,t.parent,t.name||"")}}return t.THROW_IF_NOT_FOUND=tr,t.NULL=new Hi,t.\u0275prov=ht({token:t,providedIn:"any",factory:()=>ar(Bi)}),t.__NG_ELEMENT_ID__=-1,t})();function no(t,e){rn(Xr(t)[1],Ie())}function ro(t){let e=Object.getPrototypeOf(t.type.prototype).constructor,n=!0;const r=[t];for(;e;){let s;if(ie(t))s=e.\u0275cmp||e.\u0275dir;else{if(e.\u0275cmp)throw new Error("Directives cannot inherit Components");s=e.\u0275dir}if(s){if(n){r.push(s);const e=t;e.inputs=so(t.inputs),e.declaredInputs=so(t.declaredInputs),e.outputs=so(t.outputs);const n=s.hostBindings;n&&ao(t,n);const i=s.viewQuery,o=s.contentQueries;if(i&&io(t,i),o&&oo(t,o),tt(t.inputs,s.inputs),tt(t.declaredInputs,s.declaredInputs),tt(t.outputs,s.outputs),ie(s)&&s.data.animation){const e=t.data;e.animation=(e.animation||[]).concat(s.data.animation)}}const e=s.features;if(e)for(let r=0;r<e.length;r++){const s=e[r];s&&s.ngInherit&&s(t),s===ro&&(n=!1)}}e=Object.getPrototypeOf(e)}!function(t){let e=0,n=null;for(let r=t.length-1;r>=0;r--){const s=t[r];s.hostVars=e+=s.hostVars,s.hostAttrs=gn(s.hostAttrs,n=gn(n,s.hostAttrs))}}(r)}function so(t){return t===It?{}:t===Rt?[]:t}function io(t,e){const n=t.viewQuery;t.viewQuery=n?(t,r)=>{e(t,r),n(t,r)}:e}function oo(t,e){const n=t.contentQueries;t.contentQueries=n?(t,r,s)=>{e(t,r,s),n(t,r,s)}:e}function ao(t,e){const n=t.hostBindings;t.hostBindings=n?(t,r)=>{e(t,r),n(t,r)}:e}let lo=null;function uo(){if(!lo){const t=kt.Symbol;if(t&&t.iterator)lo=t.iterator;else{const t=Object.getOwnPropertyNames(Map.prototype);for(let e=0;e<t.length;++e){const n=t[e];"entries"!==n&&"size"!==n&&Map.prototype[n]===Map.prototype.entries&&(lo=n)}}}return lo}function co(t){return!!ho(t)&&(Array.isArray(t)||!(t instanceof Map)&&uo()in t)}function ho(t){return null!==t&&("function"==typeof t||"object"==typeof t)}function po(t,e,n){return t[e]=n}function fo(t,e,n){return!Object.is(t[e],n)&&(t[e]=n,!0)}function go(t,e,n,r){const s=fo(t,e,n);return fo(t,e+1,r)||s}function mo(t,e,n,r){const s=Oe();return fo(s,Be(),e)&&(Fe(),function(t,e,n,r,s,i){const o=be(t,e);!function(t,e,n,r,s,i,o){if(null==i)ge(t)?t.removeAttribute(e,s,n):e.removeAttribute(s);else{const a=null==o?lt(i):o(i,r||"",s);ge(t)?t.setAttribute(e,s,a,n):n?e.setAttributeNS(n,s,a):e.setAttribute(s,a)}}(e[11],o,i,t.value,n,r,s)}(nn(),s,t,e,n,r)),mo}function yo(t,e,n,r){return fo(t,Be(),n)?e+lt(n)+r:qs}function vo(t,e,n,r,s,i,o,a){const l=Oe(),u=Fe(),c=t+Xt,h=u.firstCreatePass?function(t,e,n,r,s,i,o,a,l){const u=e.consts,c=ni(e,t,4,o||null,Ee(u,a));gi(e,n,c,Ee(u,l)),rn(e,c);const h=c.tViews=di(2,c,r,s,i,e.directiveRegistry,e.pipeRegistry,null,e.schemas,u);return null!==e.queries&&(e.queries.template(e,c),h.queries=e.queries.embeddedTView(c)),c}(c,u,l,e,n,r,s,i,o):u.data[c];Pe(h,!1);const d=l[11].createComment("");Es(u,l,d,h),Qr(d,l),Oi(l,l[c]=Si(d,l,d,h)),se(h)&&ui(u,l,h),null!=o&&ci(l,h,a)}function bo(t){return function(t,e){return t[e]}(Ae.lFrame.contextLView,Xt+t)}function wo(t,e=wt.Default){const n=Oe();return null===n?ar(t,e):Fn(Ie(),n,it(t),e)}function Co(t,e,n){const r=Oe();return fo(r,Be(),e)&&function(t,e,n,r,s,i,o,a){const l=be(e,n);let u,c=e.inputs;var h;null!=c&&(u=c[r])?(Mi(t,n,u,r,s),re(e)&&function(t,e){const n=Ce(e,t);16&n[2]||(n[2]|=64)}(n,e.index)):3&e.type&&(r="class"===(h=r)?"className":"for"===h?"htmlFor":"formaction"===h?"formAction":"innerHtml"===h?"innerHTML":"readonly"===h?"readOnly":"tabindex"===h?"tabIndex":h,s=null!=o?o(s,e.value||"",r):s,ge(i)?i.setProperty(l,r,s):fn(r)||(l.setProperty?l.setProperty(r,s):l[r]=s))}(Fe(),nn(),r,t,e,r[11],n),Co}function _o(t,e,n,r,s){const i=s?"class":"style";Mi(t,n,e.inputs[i],i,r)}function Do(t,e,n,r){const s=Oe(),i=Fe(),o=Xt+t,a=s[11],l=s[o]=ds(a,e,Ae.lFrame.currentNamespace),u=i.firstCreatePass?function(t,e,n,r,s,i,o){const a=e.consts,l=ni(e,t,2,s,Ee(a,i));return gi(e,n,l,Ee(a,o)),null!==l.attrs&&Vi(l,l.attrs,!1),null!==l.mergedAttrs&&Vi(l,l.mergedAttrs,!0),null!==e.queries&&e.queries.elementStart(e,l),l}(o,i,s,0,e,n,r):i.data[o];Pe(u,!0);const c=u.mergedAttrs;null!==c&&dn(a,l,c);const h=u.classes;null!==h&&Is(a,l,h);const d=u.styles;null!==d&&ks(a,l,d),64!=(64&u.flags)&&Es(i,s,l,u),0===Ae.lFrame.elementDepthCount&&Qr(l,s),Ae.lFrame.elementDepthCount++,se(u)&&(ui(i,s,u),li(i,u,s)),null!==r&&ci(s,u)}function Eo(){let t=Ie();Le()?Ne():(t=t.parent,Pe(t,!1));const e=t;Ae.lFrame.elementDepthCount--;const n=Fe();n.firstCreatePass&&(rn(n,t),ne(t)&&n.queries.elementEnd(t)),null!=e.classesWithoutHost&&function(t){return 0!=(16&t.flags)}(e)&&_o(n,e,Oe(),e.classesWithoutHost,!0),null!=e.stylesWithoutHost&&function(t){return 0!=(32&t.flags)}(e)&&_o(n,e,Oe(),e.stylesWithoutHost,!1)}function So(t,e,n,r){Do(t,e,n,r),Eo()}function xo(t,e,n){(function(t,e,n){const r=Oe(),s=Fe(),i=t+Xt,o=s.firstCreatePass?function(t,e,n,r,s){const i=e.consts,o=Ee(i,r),a=ni(e,t,8,"ng-container",o);return null!==o&&Vi(a,o,!0),gi(e,n,a,Ee(i,s)),null!==e.queries&&e.queries.elementStart(e,a),a}(i,s,r,e,n):s.data[i];Pe(o,!0);const a=r[i]=r[11].createComment("");Es(s,r,a,o),Qr(a,r),se(o)&&(ui(s,r,o),li(s,o,r)),null!=n&&ci(r,o)})(t,e,n),function(){let t=Ie();const e=Fe();Le()?Ne():(t=t.parent,Pe(t,!1)),e.firstCreatePass&&(rn(e,t),ne(t)&&e.queries.elementEnd(t))}()}function Ao(){return Oe()}function To(t){return!!t&&"function"==typeof t.then}const Oo=function(t){return!!t&&"function"==typeof t.subscribe};function Fo(t,e,n,r){const s=Oe(),i=Fe(),o=Ie();return function(t,e,n,r,s,i,o,a){const l=se(r),u=t.firstCreatePass&&Ni(t),c=Li(e);let h=!0;if(3&r.type||a){const d=be(r,e),p=a?a(d):d,f=c.length,g=a?t=>a(ye(t[r.index])):r.index;if(ge(n)){let o=null;if(!a&&l&&(o=function(t,e,n,r){const s=t.cleanup;if(null!=s)for(let i=0;i<s.length-1;i+=2){const t=s[i];if(t===n&&s[i+1]===r){const t=e[7],n=s[i+2];return t.length>n?t[n]:null}"string"==typeof t&&(i+=2)}return null}(t,e,s,r.index)),null!==o)(o.__ngLastListenerFn__||o).__ngNextListenerFn__=i,o.__ngLastListenerFn__=i,h=!1;else{i=Io(r,e,0,i,!1);const t=n.listen(p,s,i);c.push(i,t),u&&u.push(s,g,f,f+1)}}else i=Io(r,e,0,i,!0),p.addEventListener(s,i,o),c.push(i),u&&u.push(s,g,f,o)}else i=Io(r,e,0,i,!1);const d=r.outputs;let p;if(h&&null!==d&&(p=d[s])){const t=p.length;if(t)for(let n=0;n<t;n+=2){const t=e[p[n]][p[n+1]].subscribe(i),o=c.length;c.push(i,t),u&&u.push(s,r.index,o,-(o+1))}}}(i,s,s[11],o,t,e,!!n,r),Fo}function ko(t,e,n,r){try{return!1!==n(r)}catch(s){return ji(t,s),!1}}function Io(t,e,n,r,s){return function n(i){if(i===Function)return r;const o=2&t.flags?Ce(t.index,e):e;0==(32&e[2])&&Fi(o);let a=ko(e,0,r,i),l=n.__ngNextListenerFn__;for(;l;)a=ko(e,0,l,i)&&a,l=l.__ngNextListenerFn__;return s&&!1===a&&(i.preventDefault(),i.returnValue=!1),a}}function Ro(t=1){return function(t){return(Ae.lFrame.contextLView=function(t,e){for(;t>0;)e=e[15],t--;return e}(t,Ae.lFrame.contextLView))[8]}(t)}function Po(t,e){let n=null;const r=function(t){const e=t.attrs;if(null!=e){const t=e.indexOf(5);if(0==(1&t))return e[t+1]}return null}(t);for(let s=0;s<e.length;s++){const i=e[s];if("*"!==i){if(null===r?Hs(t,i,!0):Us(r,i))return s}else n=s}return n}function Lo(t){const e=Oe()[16][6];if(!e.projection){const n=e.projection=Kn(t?t.length:1,null),r=n.slice();let s=e.child;for(;null!==s;){const e=t?Po(s,t):0;null!==e&&(r[e]?r[e].projectionNext=s:n[e]=s,r[e]=s),s=s.next}}}function No(t,e=0,n){const r=Oe(),s=Fe(),i=ni(s,Xt+t,16,null,n||null);null===i.projection&&(i.projection=e),Ne(),64!=(64&i.flags)&&function(t,e,n){Fs(e[11],0,e,n,ys(t,n,e),_s(n.parent||e[6],n,e))}(s,r,i)}function jo(t,e,n,r,s){const i=t[n+1],o=null===e;let a=r?Ys(i):Qs(i),l=!1;for(;0!==a&&(!1===l||o);){const n=t[a+1];Mo(t[a],e)&&(l=!0,t[a+1]=r?Js(n):Ks(n)),a=r?Ys(n):Qs(n)}l&&(t[n+1]=r?Ks(i):Js(i))}function Mo(t,e){return null===t||null==e||(Array.isArray(t)?t[1]:t)===e||!(!Array.isArray(t)||"string"!=typeof e)&&Jn(t,e)>=0}const Vo={textEnd:0,key:0,keyEnd:0,value:0,valueEnd:0};function Bo(t){return t.substring(Vo.key,Vo.keyEnd)}function Ho(t,e){const n=Vo.textEnd;return n===e?-1:(e=Vo.keyEnd=function(t,e,n){for(;e<n&&t.charCodeAt(e)>32;)e++;return e}(t,Vo.key=e,n),Uo(t,e,n))}function Uo(t,e,n){for(;e<n&&t.charCodeAt(e)<=32;)e++;return e}function $o(t,e){return function(t,e,n,r){const s=Oe(),i=Fe(),o=He(2);i.firstUpdatePass&&Go(i,t,o,true),e!==qs&&fo(s,o,e)&&Ko(i,i.data[tn()],s,s[11],t,s[o+1]=function(t,e){return null==t||"object"==typeof t&&(t=et(Dr(t))),t}(e),true,o)}(t,e),$o}function zo(t,e){for(let n=function(t){return function(t){Vo.key=0,Vo.keyEnd=0,Vo.value=0,Vo.valueEnd=0,Vo.textEnd=t.length}(t),Ho(t,Uo(t,0,Vo.textEnd))}(e);n>=0;n=Ho(e,n))Qn(t,Bo(e),!0)}function qo(t,e,n,r){const s=Fe(),i=He(2);s.firstUpdatePass&&Go(s,null,i,r);const o=Oe();if(n!==qs&&fo(o,i,n)){const a=s.data[tn()];if(Jo(a,r)&&!Wo(s,i)){let t=r?a.classesWithoutHost:a.stylesWithoutHost;null!==t&&(n=nt(t,n||"")),_o(s,a,o,n,r)}else!function(t,e,n,r,s,i,o,a){s===qs&&(s=Rt);let l=0,u=0,c=0<s.length?s[0]:null,h=0<i.length?i[0]:null;for(;null!==c||null!==h;){const d=l<s.length?s[l+1]:void 0,p=u<i.length?i[u+1]:void 0;let f,g=null;c===h?(l+=2,u+=2,d!==p&&(g=h,f=p)):null===h||null!==c&&c<h?(l+=2,g=c):(u+=2,g=h,f=p),null!==g&&Ko(t,e,n,r,g,f,o,a),c=l<s.length?s[l]:null,h=u<i.length?i[u]:null}}(s,a,o,o[11],o[i+1],o[i+1]=function(t,e,n){if(null==n||""===n)return Rt;const r=[],s=Dr(n);if(Array.isArray(s))for(let i=0;i<s.length;i++)t(r,s[i],!0);else if("object"==typeof s)for(const i in s)s.hasOwnProperty(i)&&t(r,i,s[i]);else"string"==typeof s&&e(r,s);return r}(t,e,n),r,i)}}function Wo(t,e){return e>=t.expandoStartIndex}function Go(t,e,n,r){const s=t.data;if(null===s[n+1]){const i=s[tn()],o=Wo(t,n);Jo(i,r)&&null===e&&!o&&(e=!1),e=function(t,e,n,r){const s=function(t){const e=Ae.lFrame.currentDirectiveIndex;return-1===e?null:t[e]}(t);let i=r?e.residualClasses:e.residualStyles;if(null===s)0===(r?e.classBindings:e.styleBindings)&&(n=Yo(n=Zo(null,t,e,n,r),e.attrs,r),i=null);else{const o=e.directiveStylingLast;if(-1===o||t[o]!==s)if(n=Zo(s,t,e,n,r),null===i){let n=function(t,e,n){const r=n?e.classBindings:e.styleBindings;if(0!==Qs(r))return t[Ys(r)]}(t,e,r);void 0!==n&&Array.isArray(n)&&(n=Zo(null,t,e,n[1],r),n=Yo(n,e.attrs,r),function(t,e,n,r){t[Ys(n?e.classBindings:e.styleBindings)]=r}(t,e,r,n))}else i=function(t,e,n){let r;const s=e.directiveEnd;for(let i=1+e.directiveStylingLast;i<s;i++)r=Yo(r,t[i].hostAttrs,n);return Yo(r,e.attrs,n)}(t,e,r)}return void 0!==i&&(r?e.residualClasses=i:e.residualStyles=i),n}(s,i,e,r),function(t,e,n,r,s,i){let o=i?e.classBindings:e.styleBindings,a=Ys(o),l=Qs(o);t[r]=n;let u,c=!1;if(Array.isArray(n)){const t=n;u=t[1],(null===u||Jn(t,u)>0)&&(c=!0)}else u=n;if(s)if(0!==l){const e=Ys(t[a+1]);t[r+1]=Zs(e,a),0!==e&&(t[e+1]=Xs(t[e+1],r)),t[a+1]=131071&t[a+1]|r<<17}else t[r+1]=Zs(a,0),0!==a&&(t[a+1]=Xs(t[a+1],r)),a=r;else t[r+1]=Zs(l,0),0===a?a=r:t[l+1]=Xs(t[l+1],r),l=r;c&&(t[r+1]=Ks(t[r+1])),jo(t,u,r,!0),jo(t,u,r,!1),function(t,e,n,r,s){const i=s?t.residualClasses:t.residualStyles;null!=i&&"string"==typeof e&&Jn(i,e)>=0&&(n[r+1]=Js(n[r+1]))}(e,u,t,r,i),o=Zs(a,l),i?e.classBindings=o:e.styleBindings=o}(s,i,e,n,o,r)}}function Zo(t,e,n,r,s){let i=null;const o=n.directiveEnd;let a=n.directiveStylingLast;for(-1===a?a=n.directiveStart:a++;a<o&&(i=e[a],r=Yo(r,i.hostAttrs,s),i!==t);)a++;return null!==t&&(n.directiveStylingLast=a),r}function Yo(t,e,n){const r=n?1:2;let s=-1;if(null!==e)for(let i=0;i<e.length;i++){const o=e[i];"number"==typeof o?s=o:s===r&&(Array.isArray(t)||(t=void 0===t?[]:["",t]),Qn(t,o,!!n||e[++i]))}return void 0===t?null:t}function Ko(t,e,n,r,s,i,o,a){if(!(3&e.type))return;const l=t.data,u=l[a+1];Xo(1==(1&u)?Qo(l,e,n,s,Qs(u),o):void 0)||(Xo(i)||2==(2&u)&&(i=Qo(l,null,n,s,a,o)),function(t,e,n,r,s){const i=ge(t);if(e)s?i?t.addClass(n,r):n.classList.add(r):i?t.removeClass(n,r):n.classList.remove(r);else{let e=-1===r.indexOf("-")?void 0:is.DashCase;if(null==s)i?t.removeStyle(n,r,e):n.style.removeProperty(r);else{const o="string"==typeof s&&s.endsWith("!important");o&&(s=s.slice(0,-10),e|=is.Important),i?t.setStyle(n,r,s,e):n.style.setProperty(r,s,o?"important":"")}}}(r,o,ve(tn(),n),s,i))}function Qo(t,e,n,r,s,i){const o=null===e;let a;for(;s>0;){const e=t[s],i=Array.isArray(e),l=i?e[1]:e,u=null===l;let c=n[s+1];c===qs&&(c=u?Rt:void 0);let h=u?Xn(c,r):l===r?c:void 0;if(i&&!Xo(h)&&(h=Xn(e,r)),Xo(h)&&(a=h,o))return a;const d=t[s+1];s=o?Ys(d):Qs(d)}if(null!==e){let t=i?e.residualClasses:e.residualStyles;null!=t&&(a=Xn(t,r))}return a}function Xo(t){return void 0!==t}function Jo(t,e){return 0!=(t.flags&(e?16:32))}function ta(t,e=""){const n=Oe(),r=Fe(),s=t+Xt,i=r.firstCreatePass?ni(r,s,1,e,null):r.data[s],o=n[s]=function(t,e){return ge(t)?t.createText(e):t.createTextNode(e)}(n[11],e);Es(r,n,o,i),Pe(i,!1)}function ea(t){return na("",t,""),ea}function na(t,e,n){const r=Oe(),s=yo(r,t,e,n);return s!==qs&&function(t,e,n){const r=ve(e,t);!function(t,e,n){ge(t)?t.setValue(e,n):e.textContent=n}(t[11],r,n)}(r,tn(),s),na}function ra(t,e,n){qo(Qn,zo,yo(Oe(),t,e,n),!0)}const sa=void 0;var ia=["en",[["a","p"],["AM","PM"],sa],[["AM","PM"],sa,sa],[["S","M","T","W","T","F","S"],["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],["Su","Mo","Tu","We","Th","Fr","Sa"]],sa,[["J","F","M","A","M","J","J","A","S","O","N","D"],["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],["January","February","March","April","May","June","July","August","September","October","November","December"]],sa,[["B","A"],["BC","AD"],["Before Christ","Anno Domini"]],0,[6,0],["M/d/yy","MMM d, y","MMMM d, y","EEEE, MMMM d, y"],["h:mm a","h:mm:ss a","h:mm:ss a z","h:mm:ss a zzzz"],["{1}, {0}",sa,"{1} 'at' {0}",sa],[".",",",";","%","+","-","E","\xd7","\u2030","\u221e","NaN",":"],["#,##0.###","#,##0%","\xa4#,##0.00","#E0"],"USD","$","US Dollar",{},"ltr",function(t){let e=Math.floor(Math.abs(t)),n=t.toString().replace(/^[^.]*\.?/,"").length;return 1===e&&0===n?1:5}];let oa={};function aa(t){const e=function(t){return t.toLowerCase().replace(/_/g,"-")}(t);let n=la(e);if(n)return n;const r=e.split("-")[0];if(n=la(r),n)return n;if("en"===r)return ia;throw new Error(`Missing locale data for the locale "${t}".`)}function la(t){return t in oa||(oa[t]=kt.ng&&kt.ng.common&&kt.ng.common.locales&&kt.ng.common.locales[t]),oa[t]}var ua=function(t){return t[t.LocaleId=0]="LocaleId",t[t.DayPeriodsFormat=1]="DayPeriodsFormat",t[t.DayPeriodsStandalone=2]="DayPeriodsStandalone",t[t.DaysFormat=3]="DaysFormat",t[t.DaysStandalone=4]="DaysStandalone",t[t.MonthsFormat=5]="MonthsFormat",t[t.MonthsStandalone=6]="MonthsStandalone",t[t.Eras=7]="Eras",t[t.FirstDayOfWeek=8]="FirstDayOfWeek",t[t.WeekendRange=9]="WeekendRange",t[t.DateFormat=10]="DateFormat",t[t.TimeFormat=11]="TimeFormat",t[t.DateTimeFormat=12]="DateTimeFormat",t[t.NumberSymbols=13]="NumberSymbols",t[t.NumberFormats=14]="NumberFormats",t[t.CurrencyCode=15]="CurrencyCode",t[t.CurrencySymbol=16]="CurrencySymbol",t[t.CurrencyName=17]="CurrencyName",t[t.Currencies=18]="Currencies",t[t.Directionality=19]="Directionality",t[t.PluralCase=20]="PluralCase",t[t.ExtraData=21]="ExtraData",t}({});const ca="en-US";let ha=ca;function da(t){var e,n;n="Expected localeId to be defined",null==(e=t)&&function(t,e,n,r){throw new Error(`ASSERTION ERROR: ${t} [Expected=> null != ${e} <=Actual]`)}(n,e),"string"==typeof t&&(ha=t.toLowerCase().replace(/_/g,"-"))}function pa(t,e,n,r,s){if(t=it(t),Array.isArray(t))for(let i=0;i<t.length;i++)pa(t[i],e,n,r,s);else{const i=Fe(),o=Oe();let a=Ji(t)?t:it(t.provide),l=Ki(t);const u=Ie(),c=1048575&u.providerIndexes,h=u.directiveStart,d=u.providerIndexes>>20;if(Ji(t)||!t.multi){const r=new hn(l,s,wo),p=ma(a,e,s?c:c+d,h);-1===p?(An(Dn(u,o),i,a),fa(i,t,e.length),e.push(a),u.directiveStart++,u.directiveEnd++,s&&(u.providerIndexes+=1048576),n.push(r),o.push(r)):(n[p]=r,o[p]=r)}else{const p=ma(a,e,c+d,h),f=ma(a,e,c,c+d),g=p>=0&&n[p],m=f>=0&&n[f];if(s&&!m||!s&&!g){An(Dn(u,o),i,a);const c=function(t,e,n,r,s){const i=new hn(t,n,wo);return i.multi=[],i.index=e,i.componentProviders=0,ga(i,s,r&&!n),i}(s?va:ya,n.length,s,r,l);!s&&m&&(n[f].providerFactory=c),fa(i,t,e.length,0),e.push(a),u.directiveStart++,u.directiveEnd++,s&&(u.providerIndexes+=1048576),n.push(c),o.push(c)}else fa(i,t,p>-1?p:f,ga(n[s?f:p],l,!s&&r));!s&&r&&m&&n[f].componentProviders++}}}function fa(t,e,n,r){const s=Ji(e);if(s||e.useClass){const i=(e.useClass||e).prototype.ngOnDestroy;if(i){const o=t.destroyHooks||(t.destroyHooks=[]);if(!s&&e.multi){const t=o.indexOf(n);-1===t?o.push(n,[r,i]):o[t+1].push(r,i)}else o.push(n,i)}}}function ga(t,e,n){return n&&t.componentProviders++,t.multi.push(e)-1}function ma(t,e,n,r){for(let s=n;s<r;s++)if(e[s]===t)return s;return-1}function ya(t,e,n,r){return ba(this.multi,[])}function va(t,e,n,r){const s=this.multi;let i;if(this.providerFactory){const t=this.providerFactory.componentProviders,e=Ln(n,n[1],this.providerFactory.index,r);i=e.slice(0,t),ba(s,i);for(let n=t;n<e.length;n++)i.push(e[n])}else i=[],ba(s,i);return i}function ba(t,e){for(let n=0;n<t.length;n++)e.push((0,t[n])());return e}function wa(t,e=[]){return n=>{n.providersResolver=(n,r)=>function(t,e,n){const r=Fe();if(r.firstCreatePass){const s=ie(t);pa(n,r.data,r.blueprint,s,!0),pa(e,r.data,r.blueprint,s,!1)}}(n,r?r(t):t,e)}}class Ca{}class _a{resolveComponentFactory(t){throw function(t){const e=Error(`No component factory found for ${et(t)}. Did you add it to @NgModule.entryComponents?`);return e.ngComponent=t,e}(t)}}let Da=(()=>{class t{}return t.NULL=new _a,t})();function Ea(...t){}function Sa(t,e){return new Aa(be(t,e))}const xa=function(){return Sa(Ie(),Oe())};let Aa=(()=>{class t{constructor(t){this.nativeElement=t}}return t.__NG_ELEMENT_ID__=xa,t})();function Ta(t){return t instanceof Aa?t.nativeElement:t}class Oa{}let Fa=(()=>{class t{}return t.__NG_ELEMENT_ID__=()=>ka(),t})();const ka=function(){const t=Oe(),e=Ce(Ie().index,t);return function(t){return t[11]}(te(e)?e:t)};let Ia=(()=>{class t{}return t.\u0275prov=ht({token:t,providedIn:"root",factory:()=>null}),t})();class Ra{constructor(t){this.full=t,this.major=t.split(".")[0],this.minor=t.split(".")[1],this.patch=t.split(".").slice(2).join(".")}}const Pa=new Ra("12.0.5");class La{constructor(){}supports(t){return co(t)}create(t){return new ja(t)}}const Na=(t,e)=>e;class ja{constructor(t){this.length=0,this._linkedRecords=null,this._unlinkedRecords=null,this._previousItHead=null,this._itHead=null,this._itTail=null,this._additionsHead=null,this._additionsTail=null,this._movesHead=null,this._movesTail=null,this._removalsHead=null,this._removalsTail=null,this._identityChangesHead=null,this._identityChangesTail=null,this._trackByFn=t||Na}forEachItem(t){let e;for(e=this._itHead;null!==e;e=e._next)t(e)}forEachOperation(t){let e=this._itHead,n=this._removalsHead,r=0,s=null;for(;e||n;){const i=!n||e&&e.currentIndex<Ha(n,r,s)?e:n,o=Ha(i,r,s),a=i.currentIndex;if(i===n)r--,n=n._nextRemoved;else if(e=e._next,null==i.previousIndex)r++;else{s||(s=[]);const t=o-r,e=a-r;if(t!=e){for(let n=0;n<t;n++){const r=n<s.length?s[n]:s[n]=0,i=r+n;e<=i&&i<t&&(s[n]=r+1)}s[i.previousIndex]=e-t}}o!==a&&t(i,o,a)}}forEachPreviousItem(t){let e;for(e=this._previousItHead;null!==e;e=e._nextPrevious)t(e)}forEachAddedItem(t){let e;for(e=this._additionsHead;null!==e;e=e._nextAdded)t(e)}forEachMovedItem(t){let e;for(e=this._movesHead;null!==e;e=e._nextMoved)t(e)}forEachRemovedItem(t){let e;for(e=this._removalsHead;null!==e;e=e._nextRemoved)t(e)}forEachIdentityChange(t){let e;for(e=this._identityChangesHead;null!==e;e=e._nextIdentityChange)t(e)}diff(t){if(null==t&&(t=[]),!co(t))throw new Error(`Error trying to diff '${et(t)}'. Only arrays and iterables are allowed`);return this.check(t)?this:null}onDestroy(){}check(t){this._reset();let e,n,r,s=this._itHead,i=!1;if(Array.isArray(t)){this.length=t.length;for(let e=0;e<this.length;e++)n=t[e],r=this._trackByFn(e,n),null!==s&&Object.is(s.trackById,r)?(i&&(s=this._verifyReinsertion(s,n,r,e)),Object.is(s.item,n)||this._addIdentityChange(s,n)):(s=this._mismatch(s,n,r,e),i=!0),s=s._next}else e=0,function(t,e){if(Array.isArray(t))for(let n=0;n<t.length;n++)e(t[n]);else{const n=t[uo()]();let r;for(;!(r=n.next()).done;)e(r.value)}}(t,t=>{r=this._trackByFn(e,t),null!==s&&Object.is(s.trackById,r)?(i&&(s=this._verifyReinsertion(s,t,r,e)),Object.is(s.item,t)||this._addIdentityChange(s,t)):(s=this._mismatch(s,t,r,e),i=!0),s=s._next,e++}),this.length=e;return this._truncate(s),this.collection=t,this.isDirty}get isDirty(){return null!==this._additionsHead||null!==this._movesHead||null!==this._removalsHead||null!==this._identityChangesHead}_reset(){if(this.isDirty){let t;for(t=this._previousItHead=this._itHead;null!==t;t=t._next)t._nextPrevious=t._next;for(t=this._additionsHead;null!==t;t=t._nextAdded)t.previousIndex=t.currentIndex;for(this._additionsHead=this._additionsTail=null,t=this._movesHead;null!==t;t=t._nextMoved)t.previousIndex=t.currentIndex;this._movesHead=this._movesTail=null,this._removalsHead=this._removalsTail=null,this._identityChangesHead=this._identityChangesTail=null}}_mismatch(t,e,n,r){let s;return null===t?s=this._itTail:(s=t._prev,this._remove(t)),null!==(t=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null))?(Object.is(t.item,e)||this._addIdentityChange(t,e),this._reinsertAfter(t,s,r)):null!==(t=null===this._linkedRecords?null:this._linkedRecords.get(n,r))?(Object.is(t.item,e)||this._addIdentityChange(t,e),this._moveAfter(t,s,r)):t=this._addAfter(new Ma(e,n),s,r),t}_verifyReinsertion(t,e,n,r){let s=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null);return null!==s?t=this._reinsertAfter(s,t._prev,r):t.currentIndex!=r&&(t.currentIndex=r,this._addToMoves(t,r)),t}_truncate(t){for(;null!==t;){const e=t._next;this._addToRemovals(this._unlink(t)),t=e}null!==this._unlinkedRecords&&this._unlinkedRecords.clear(),null!==this._additionsTail&&(this._additionsTail._nextAdded=null),null!==this._movesTail&&(this._movesTail._nextMoved=null),null!==this._itTail&&(this._itTail._next=null),null!==this._removalsTail&&(this._removalsTail._nextRemoved=null),null!==this._identityChangesTail&&(this._identityChangesTail._nextIdentityChange=null)}_reinsertAfter(t,e,n){null!==this._unlinkedRecords&&this._unlinkedRecords.remove(t);const r=t._prevRemoved,s=t._nextRemoved;return null===r?this._removalsHead=s:r._nextRemoved=s,null===s?this._removalsTail=r:s._prevRemoved=r,this._insertAfter(t,e,n),this._addToMoves(t,n),t}_moveAfter(t,e,n){return this._unlink(t),this._insertAfter(t,e,n),this._addToMoves(t,n),t}_addAfter(t,e,n){return this._insertAfter(t,e,n),this._additionsTail=null===this._additionsTail?this._additionsHead=t:this._additionsTail._nextAdded=t,t}_insertAfter(t,e,n){const r=null===e?this._itHead:e._next;return t._next=r,t._prev=e,null===r?this._itTail=t:r._prev=t,null===e?this._itHead=t:e._next=t,null===this._linkedRecords&&(this._linkedRecords=new Ba),this._linkedRecords.put(t),t.currentIndex=n,t}_remove(t){return this._addToRemovals(this._unlink(t))}_unlink(t){null!==this._linkedRecords&&this._linkedRecords.remove(t);const e=t._prev,n=t._next;return null===e?this._itHead=n:e._next=n,null===n?this._itTail=e:n._prev=e,t}_addToMoves(t,e){return t.previousIndex===e||(this._movesTail=null===this._movesTail?this._movesHead=t:this._movesTail._nextMoved=t),t}_addToRemovals(t){return null===this._unlinkedRecords&&(this._unlinkedRecords=new Ba),this._unlinkedRecords.put(t),t.currentIndex=null,t._nextRemoved=null,null===this._removalsTail?(this._removalsTail=this._removalsHead=t,t._prevRemoved=null):(t._prevRemoved=this._removalsTail,this._removalsTail=this._removalsTail._nextRemoved=t),t}_addIdentityChange(t,e){return t.item=e,this._identityChangesTail=null===this._identityChangesTail?this._identityChangesHead=t:this._identityChangesTail._nextIdentityChange=t,t}}class Ma{constructor(t,e){this.item=t,this.trackById=e,this.currentIndex=null,this.previousIndex=null,this._nextPrevious=null,this._prev=null,this._next=null,this._prevDup=null,this._nextDup=null,this._prevRemoved=null,this._nextRemoved=null,this._nextAdded=null,this._nextMoved=null,this._nextIdentityChange=null}}class Va{constructor(){this._head=null,this._tail=null}add(t){null===this._head?(this._head=this._tail=t,t._nextDup=null,t._prevDup=null):(this._tail._nextDup=t,t._prevDup=this._tail,t._nextDup=null,this._tail=t)}get(t,e){let n;for(n=this._head;null!==n;n=n._nextDup)if((null===e||e<=n.currentIndex)&&Object.is(n.trackById,t))return n;return null}remove(t){const e=t._prevDup,n=t._nextDup;return null===e?this._head=n:e._nextDup=n,null===n?this._tail=e:n._prevDup=e,null===this._head}}class Ba{constructor(){this.map=new Map}put(t){const e=t.trackById;let n=this.map.get(e);n||(n=new Va,this.map.set(e,n)),n.add(t)}get(t,e){const n=this.map.get(t);return n?n.get(t,e):null}remove(t){const e=t.trackById;return this.map.get(e).remove(t)&&this.map.delete(e),t}get isEmpty(){return 0===this.map.size}clear(){this.map.clear()}}function Ha(t,e,n){const r=t.previousIndex;if(null===r)return r;let s=0;return n&&r<n.length&&(s=n[r]),r+e+s}class Ua{constructor(){}supports(t){return t instanceof Map||ho(t)}create(){return new $a}}class $a{constructor(){this._records=new Map,this._mapHead=null,this._appendAfter=null,this._previousMapHead=null,this._changesHead=null,this._changesTail=null,this._additionsHead=null,this._additionsTail=null,this._removalsHead=null,this._removalsTail=null}get isDirty(){return null!==this._additionsHead||null!==this._changesHead||null!==this._removalsHead}forEachItem(t){let e;for(e=this._mapHead;null!==e;e=e._next)t(e)}forEachPreviousItem(t){let e;for(e=this._previousMapHead;null!==e;e=e._nextPrevious)t(e)}forEachChangedItem(t){let e;for(e=this._changesHead;null!==e;e=e._nextChanged)t(e)}forEachAddedItem(t){let e;for(e=this._additionsHead;null!==e;e=e._nextAdded)t(e)}forEachRemovedItem(t){let e;for(e=this._removalsHead;null!==e;e=e._nextRemoved)t(e)}diff(t){if(t){if(!(t instanceof Map||ho(t)))throw new Error(`Error trying to diff '${et(t)}'. Only maps and objects are allowed`)}else t=new Map;return this.check(t)?this:null}onDestroy(){}check(t){this._reset();let e=this._mapHead;if(this._appendAfter=null,this._forEach(t,(t,n)=>{if(e&&e.key===n)this._maybeAddToChanges(e,t),this._appendAfter=e,e=e._next;else{const r=this._getOrCreateRecordForKey(n,t);e=this._insertBeforeOrAppend(e,r)}}),e){e._prev&&(e._prev._next=null),this._removalsHead=e;for(let t=e;null!==t;t=t._nextRemoved)t===this._mapHead&&(this._mapHead=null),this._records.delete(t.key),t._nextRemoved=t._next,t.previousValue=t.currentValue,t.currentValue=null,t._prev=null,t._next=null}return this._changesTail&&(this._changesTail._nextChanged=null),this._additionsTail&&(this._additionsTail._nextAdded=null),this.isDirty}_insertBeforeOrAppend(t,e){if(t){const n=t._prev;return e._next=t,e._prev=n,t._prev=e,n&&(n._next=e),t===this._mapHead&&(this._mapHead=e),this._appendAfter=t,t}return this._appendAfter?(this._appendAfter._next=e,e._prev=this._appendAfter):this._mapHead=e,this._appendAfter=e,null}_getOrCreateRecordForKey(t,e){if(this._records.has(t)){const n=this._records.get(t);this._maybeAddToChanges(n,e);const r=n._prev,s=n._next;return r&&(r._next=s),s&&(s._prev=r),n._next=null,n._prev=null,n}const n=new za(t);return this._records.set(t,n),n.currentValue=e,this._addToAdditions(n),n}_reset(){if(this.isDirty){let t;for(this._previousMapHead=this._mapHead,t=this._previousMapHead;null!==t;t=t._next)t._nextPrevious=t._next;for(t=this._changesHead;null!==t;t=t._nextChanged)t.previousValue=t.currentValue;for(t=this._additionsHead;null!=t;t=t._nextAdded)t.previousValue=t.currentValue;this._changesHead=this._changesTail=null,this._additionsHead=this._additionsTail=null,this._removalsHead=null}}_maybeAddToChanges(t,e){Object.is(e,t.currentValue)||(t.previousValue=t.currentValue,t.currentValue=e,this._addToChanges(t))}_addToAdditions(t){null===this._additionsHead?this._additionsHead=this._additionsTail=t:(this._additionsTail._nextAdded=t,this._additionsTail=t)}_addToChanges(t){null===this._changesHead?this._changesHead=this._changesTail=t:(this._changesTail._nextChanged=t,this._changesTail=t)}_forEach(t,e){t instanceof Map?t.forEach(e):Object.keys(t).forEach(n=>e(t[n],n))}}class za{constructor(t){this.key=t,this.previousValue=null,this.currentValue=null,this._nextPrevious=null,this._next=null,this._prev=null,this._nextAdded=null,this._nextRemoved=null,this._nextChanged=null}}function qa(){return new Wa([new La])}let Wa=(()=>{class t{constructor(t){this.factories=t}static create(e,n){if(null!=n){const t=n.factories.slice();e=e.concat(t)}return new t(e)}static extend(e){return{provide:t,useFactory:n=>t.create(e,n||qa()),deps:[[t,new dr,new hr]]}}find(t){const e=this.factories.find(e=>e.supports(t));if(null!=e)return e;throw new Error(`Cannot find a differ supporting object '${t}' of type '${n=t,n.name||typeof n}'`);var n}}return t.\u0275prov=ht({token:t,providedIn:"root",factory:qa}),t})();function Ga(){return new Za([new Ua])}let Za=(()=>{class t{constructor(t){this.factories=t}static create(e,n){if(n){const t=n.factories.slice();e=e.concat(t)}return new t(e)}static extend(e){return{provide:t,useFactory:n=>t.create(e,n||Ga()),deps:[[t,new dr,new hr]]}}find(t){const e=this.factories.find(e=>e.supports(t));if(e)return e;throw new Error(`Cannot find a differ supporting object '${t}'`)}}return t.\u0275prov=ht({token:t,providedIn:"root",factory:Ga}),t})();function Ya(t,e,n,r,s=!1){for(;null!==n;){const i=e[n.index];if(null!==i&&r.push(ye(i)),ee(i))for(let t=Jt;t<i.length;t++){const e=i[t],n=e[1].firstChild;null!==n&&Ya(e[1],e,n,r)}const o=n.type;if(8&o)Ya(t,e,n.child,r);else if(32&o){const t=os(n,e);let s;for(;s=t();)r.push(s)}else if(16&o){const t=xs(e,n);if(Array.isArray(t))r.push(...t);else{const n=as(e[16]);Ya(n[1],n,t,r,!0)}}n=s?n.projectionNext:n.next}return r}class Ka{constructor(t,e){this._lView=t,this._cdRefInjectingView=e,this._appRef=null,this._attachedToViewContainer=!1}get rootNodes(){const t=this._lView,e=t[1];return Ya(e,t,e.firstChild,[])}get context(){return this._lView[8]}set context(t){this._lView[8]=t}get destroyed(){return 256==(256&this._lView[2])}destroy(){if(this._appRef)this._appRef.detachView(this);else if(this._attachedToViewContainer){const t=this._lView[3];if(ee(t)){const e=t[8],n=e?e.indexOf(this):-1;n>-1&&(fs(t,n),Yn(e,n))}this._attachedToViewContainer=!1}gs(this._lView[1],this._lView)}onDestroy(t){pi(this._lView[1],this._lView,null,t)}markForCheck(){Fi(this._cdRefInjectingView||this._lView)}detach(){this._lView[2]&=-129}reattach(){this._lView[2]|=128}detectChanges(){ki(this._lView[1],this._lView,this.context)}checkNoChanges(){!function(t,e,n){Me(!0);try{ki(t,e,n)}finally{Me(!1)}}(this._lView[1],this._lView,this.context)}attachToViewContainerRef(){if(this._appRef)throw new Error("This view is already attached directly to the ApplicationRef!");this._attachedToViewContainer=!0}detachFromAppRef(){var t;this._appRef=null,Os(this._lView[1],t=this._lView,t[11],2,null,null)}attachToAppRef(t){if(this._attachedToViewContainer)throw new Error("This view is already attached to a ViewContainer!");this._appRef=t}}class Qa extends Ka{constructor(t){super(t),this._view=t}detectChanges(){Ii(this._view)}checkNoChanges(){!function(t){Me(!0);try{Ii(t)}finally{Me(!1)}}(this._view)}get context(){return null}}const Xa=function(t){return function(t,e,n){if(re(t)&&!n){const n=Ce(t.index,e);return new Ka(n,n)}return 47&t.type?new Ka(e[16],e):null}(Ie(),Oe(),16==(16&t))};let Ja=(()=>{class t{}return t.__NG_ELEMENT_ID__=Xa,t})();const tl=[new Ua],el=new Wa([new La]),nl=new Za(tl),rl=function(){return al(Ie(),Oe())};let sl=(()=>{class t{}return t.__NG_ELEMENT_ID__=rl,t})();const il=sl,ol=class extends il{constructor(t,e,n){super(),this._declarationLView=t,this._declarationTContainer=e,this.elementRef=n}createEmbeddedView(t){const e=this._declarationTContainer.tViews,n=ei(this._declarationLView,e,t,16,null,e.declTNode,null,null,null,null);n[17]=this._declarationLView[this._declarationTContainer.index];const r=this._declarationLView[19];return null!==r&&(n[19]=r.createEmbeddedView(e)),si(e,n,t),new Ka(n)}};function al(t,e){return 4&t.type?new ol(e,t,Sa(t,e)):null}class ll{}class ul{}const cl=function(){return ml(Ie(),Oe())};let hl=(()=>{class t{}return t.__NG_ELEMENT_ID__=cl,t})();const dl=hl,pl=class extends dl{constructor(t,e,n){super(),this._lContainer=t,this._hostTNode=e,this._hostLView=n}get element(){return Sa(this._hostTNode,this._hostLView)}get injector(){return new Mn(this._hostTNode,this._hostLView)}get parentInjector(){const t=xn(this._hostTNode,this._hostLView);if(yn(t)){const e=bn(t,this._hostLView),n=vn(t);return new Mn(e[1].data[n+8],e)}return new Mn(null,this._hostLView)}clear(){for(;this.length>0;)this.remove(this.length-1)}get(t){const e=fl(this._lContainer);return null!==e&&e[t]||null}get length(){return this._lContainer.length-Jt}createEmbeddedView(t,e,n){const r=t.createEmbeddedView(e||{});return this.insert(r,n),r}createComponent(t,e,n,r,s){const i=n||this.parentInjector;if(!s&&null==t.ngModule&&i){const t=i.get(ll,null);t&&(s=t)}const o=t.create(i,r,void 0,s);return this.insert(o.hostView,e),o}insert(t,e){const n=t._lView,r=n[1];if(ee(n[3])){const e=this.indexOf(t);if(-1!==e)this.detach(e);else{const e=n[3],r=new pl(e,e[6],e[3]);r.detach(r.indexOf(t))}}const s=this._adjustIndex(e),i=this._lContainer;!function(t,e,n,r){const s=Jt+r,i=n.length;r>0&&(n[s-1][4]=e),r<i-Jt?(e[4]=n[s],Zn(n,Jt+r,e)):(n.push(e),e[4]=null),e[3]=n;const o=e[17];null!==o&&n!==o&&function(t,e){const n=t[9];e[16]!==e[3][3][16]&&(t[2]=!0),null===n?t[9]=[e]:n.push(e)}(o,e);const a=e[19];null!==a&&a.insertView(t),e[2]|=128}(r,n,i,s);const o=As(s,i),a=n[11],l=Cs(a,i[7]);return null!==l&&function(t,e,n,r,s,i){r[0]=s,r[6]=e,Os(t,r,n,1,s,i)}(r,i[6],a,n,l,o),t.attachToViewContainerRef(),Zn(gl(i),s,t),t}move(t,e){return this.insert(t,e)}indexOf(t){const e=fl(this._lContainer);return null!==e?e.indexOf(t):-1}remove(t){const e=this._adjustIndex(t,-1),n=fs(this._lContainer,e);n&&(Yn(gl(this._lContainer),e),gs(n[1],n))}detach(t){const e=this._adjustIndex(t,-1),n=fs(this._lContainer,e);return n&&null!=Yn(gl(this._lContainer),e)?new Ka(n):null}_adjustIndex(t,e=0){return null==t?this.length+e:t}};function fl(t){return t[8]}function gl(t){return t[8]||(t[8]=[])}function ml(t,e){let n;const r=e[t.index];if(ee(r))n=r;else{let s;if(8&t.type)s=ye(r);else{const n=e[11];s=n.createComment("");const r=be(t,e);vs(n,Cs(n,r),s,function(t,e){return ge(t)?t.nextSibling(e):e.nextSibling}(n,r),!1)}e[t.index]=n=Si(r,e,s,t),Oi(e,n)}return new pl(n,t,e)}const yl={};class vl extends Da{constructor(t){super(),this.ngModule=t}resolveComponentFactory(t){const e=Kt(t);return new Cl(e,this.ngModule)}}function bl(t){const e=[];for(let n in t)t.hasOwnProperty(n)&&e.push({propName:t[n],templateName:n});return e}const wl=new $n("SCHEDULER_TOKEN",{providedIn:"root",factory:()=>rs});class Cl extends Ca{constructor(t,e){super(),this.componentDef=t,this.ngModule=e,this.componentType=t.type,this.selector=t.selectors.map(zs).join(","),this.ngContentSelectors=t.ngContentSelectors?t.ngContentSelectors:[],this.isBoundToModule=!!e}get inputs(){return bl(this.componentDef.inputs)}get outputs(){return bl(this.componentDef.outputs)}create(t,e,n,r){const s=(r=r||this.ngModule)?function(t,e){return{get:(n,r,s)=>{const i=t.get(n,yl,s);return i!==yl||r===yl?i:e.get(n,r,s)}}}(t,r.injector):t,i=s.get(Oa,me),o=s.get(Ia,null),a=i.createRenderer(null,this.componentDef),l=this.componentDef.selectors[0][0]||"div",u=n?function(t,e,n){if(ge(t))return t.selectRootElement(e,n===xt.ShadowDom);let r="string"==typeof e?t.querySelector(e):e;return r.textContent="",r}(a,n,this.componentDef.encapsulation):ds(i.createRenderer(null,this.componentDef),l,function(t){const e=t.toLowerCase();return"svg"===e?"http://www.w3.org/2000/svg":"math"===e?"http://www.w3.org/1998/MathML/":null}(l)),c=this.componentDef.onPush?576:528,h={components:[],scheduler:rs,clean:Pi,playerHandler:null,flags:0},d=di(0,null,null,1,0,null,null,null,null,null),p=ei(null,d,h,c,null,null,i,a,o,s);let f,g;Ze(p);try{const t=function(t,e,n,r,s,i){const o=n[1];n[20]=t;const a=ni(o,20,2,"#host",null),l=a.mergedAttrs=e.hostAttrs;null!==l&&(Vi(a,l,!0),null!==t&&(dn(s,t,l),null!==a.classes&&Is(s,t,a.classes),null!==a.styles&&ks(s,t,a.styles)));const u=r.createRenderer(t,e),c=ei(n,hi(e),null,e.onPush?64:16,n[20],a,r,u,null,null);return o.firstCreatePass&&(An(Dn(a,n),o,e.type),vi(o,a),wi(a,n.length,1)),Oi(n,c),n[20]=c}(u,this.componentDef,p,i,a);if(u)if(n)dn(a,u,["ng-version",Pa.full]);else{const{attrs:t,classes:e}=function(t){const e=[],n=[];let r=1,s=2;for(;r<t.length;){let i=t[r];if("string"==typeof i)2===s?""!==i&&e.push(i,t[++r]):8===s&&n.push(i);else{if(!Vs(s))break;s=i}r++}return{attrs:e,classes:n}}(this.componentDef.selectors[0]);t&&dn(a,u,t),e&&e.length>0&&Is(a,u,e.join(" "))}if(g=we(d,Xt),void 0!==e){const t=g.projection=[];for(let n=0;n<this.ngContentSelectors.length;n++){const r=e[n];t.push(null!=r?Array.from(r):null)}}f=function(t,e,n,r,s){const i=n[1],o=function(t,e,n){const r=Ie();t.firstCreatePass&&(n.providersResolver&&n.providersResolver(n),Ci(t,r,e,ri(t,e,1,null),n));const s=Ln(e,t,r.directiveStart,r);Qr(s,e);const i=be(r,e);return i&&Qr(i,e),s}(i,n,e);if(r.components.push(o),t[8]=o,s&&s.forEach(t=>t(o,e)),e.contentQueries){const t=Ie();e.contentQueries(1,o,t.directiveStart)}const a=Ie();return!i.firstCreatePass||null===e.hostBindings&&null===e.hostAttrs||(en(a.index),mi(n[1],a,0,a.directiveStart,a.directiveEnd,e),yi(e,o)),o}(t,this.componentDef,p,h,[no]),si(d,p,null)}finally{Je()}return new _l(this.componentType,f,Sa(g,p),p,g)}}class _l extends class{}{constructor(t,e,n,r,s){super(),this.location=n,this._rootLView=r,this._tNode=s,this.instance=e,this.hostView=this.changeDetectorRef=new Qa(r),this.componentType=t}get injector(){return new Mn(this._tNode,this._rootLView)}destroy(){this.hostView.destroy()}onDestroy(t){this.hostView.onDestroy(t)}}const Dl=new Map;class El extends ll{constructor(t,e){super(),this._parent=e,this._bootstrapComponents=[],this.injector=this,this.destroyCbs=[],this.componentFactoryResolver=new vl(this);const n=Qt(t),r=t[Mt]||null;r&&da(r),this._bootstrapComponents=ss(n.bootstrap),this._r3Injector=Gi(t,e,[{provide:ll,useValue:this},{provide:Da,useValue:this.componentFactoryResolver}],et(t)),this._r3Injector._resolveInjectorDefTypes(),this.instance=this.get(t)}get(t,e=eo.THROW_IF_NOT_FOUND,n=wt.Default){return t===eo||t===ll||t===Bi?this:this._r3Injector.get(t,e,n)}destroy(){const t=this._r3Injector;!t.destroyed&&t.destroy(),this.destroyCbs.forEach(t=>t()),this.destroyCbs=null}onDestroy(t){this.destroyCbs.push(t)}}class Sl extends ul{constructor(t){super(),this.moduleType=t,null!==Qt(t)&&function(t){const e=new Set;!function t(n){const r=Qt(n,!0),s=r.id;null!==s&&(function(t,e,n){if(e&&e!==n)throw new Error(`Duplicate module registered for ${t} - ${et(e)} vs ${et(e.name)}`)}(s,Dl.get(s),n),Dl.set(s,n));const i=ss(r.imports);for(const o of i)e.has(o)||(e.add(o),t(o))}(t)}(t)}create(t){return new El(this.moduleType,t)}}function xl(t,e){const n=t[e];return n===qs?void 0:n}function Al(t){return e=>{setTimeout(t,void 0,e)}}const Tl=class extends D{constructor(t=!1){super(),this.__isAsync=t}emit(t){super.next(t)}subscribe(t,e,n){var r,s,i;let o=t,a=e||(()=>null),l=n;if(t&&"object"==typeof t){const e=t;o=null===(r=e.next)||void 0===r?void 0:r.bind(e),a=null===(s=e.error)||void 0===s?void 0:s.bind(e),l=null===(i=e.complete)||void 0===i?void 0:i.bind(e)}this.__isAsync&&(a=Al(a),o&&(o=Al(o)),l&&(l=Al(l)));const u=super.subscribe({next:o,error:a,complete:l});return t instanceof h&&t.add(u),u}};function Ol(){return this._results[uo()]()}class Fl{constructor(t=!1){this._emitDistinctChangesOnly=t,this.dirty=!0,this._results=[],this._changesDetected=!1,this._changes=null,this.length=0,this.first=void 0,this.last=void 0;const e=uo(),n=Fl.prototype;n[e]||(n[e]=Ol)}get changes(){return this._changes||(this._changes=new Tl)}get(t){return this._results[t]}map(t){return this._results.map(t)}filter(t){return this._results.filter(t)}find(t){return this._results.find(t)}reduce(t,e){return this._results.reduce(t,e)}forEach(t){this._results.forEach(t)}some(t){return this._results.some(t)}toArray(){return this._results.slice()}toString(){return this._results.toString()}reset(t,e){const n=this;n.dirty=!1;const r=Wn(t);(this._changesDetected=!function(t,e,n){if(t.length!==e.length)return!1;for(let r=0;r<t.length;r++){let s=t[r],i=e[r];if(n&&(s=n(s),i=n(i)),i!==s)return!1}return!0}(n._results,r,e))&&(n._results=r,n.length=r.length,n.last=r[this.length-1],n.first=r[0])}notifyOnChanges(){!this._changes||!this._changesDetected&&this._emitDistinctChangesOnly||this._changes.emit(this)}setDirty(){this.dirty=!0}destroy(){this.changes.complete(),this.changes.unsubscribe()}}class kl{constructor(t){this.queryList=t,this.matches=null}clone(){return new kl(this.queryList)}setDirty(){this.queryList.setDirty()}}class Il{constructor(t=[]){this.queries=t}createEmbeddedView(t){const e=t.queries;if(null!==e){const n=null!==t.contentQueries?t.contentQueries[0]:e.length,r=[];for(let t=0;t<n;t++){const n=e.getByIndex(t);r.push(this.queries[n.indexInDeclarationView].clone())}return new Il(r)}return null}insertView(t){this.dirtyQueriesWithMatches(t)}detachView(t){this.dirtyQueriesWithMatches(t)}dirtyQueriesWithMatches(t){for(let e=0;e<this.queries.length;e++)null!==Wl(t,e).matches&&this.queries[e].setDirty()}}class Rl{constructor(t,e,n=null){this.predicate=t,this.flags=e,this.read=n}}class Pl{constructor(t=[]){this.queries=t}elementStart(t,e){for(let n=0;n<this.queries.length;n++)this.queries[n].elementStart(t,e)}elementEnd(t){for(let e=0;e<this.queries.length;e++)this.queries[e].elementEnd(t)}embeddedTView(t){let e=null;for(let n=0;n<this.length;n++){const r=null!==e?e.length:0,s=this.getByIndex(n).embeddedTView(t,r);s&&(s.indexInDeclarationView=n,null!==e?e.push(s):e=[s])}return null!==e?new Pl(e):null}template(t,e){for(let n=0;n<this.queries.length;n++)this.queries[n].template(t,e)}getByIndex(t){return this.queries[t]}get length(){return this.queries.length}track(t){this.queries.push(t)}}class Ll{constructor(t,e=-1){this.metadata=t,this.matches=null,this.indexInDeclarationView=-1,this.crossesNgTemplate=!1,this._appliesToNextNode=!0,this._declarationNodeIndex=e}elementStart(t,e){this.isApplyingToNode(e)&&this.matchTNode(t,e)}elementEnd(t){this._declarationNodeIndex===t.index&&(this._appliesToNextNode=!1)}template(t,e){this.elementStart(t,e)}embeddedTView(t,e){return this.isApplyingToNode(t)?(this.crossesNgTemplate=!0,this.addMatch(-t.index,e),new Ll(this.metadata)):null}isApplyingToNode(t){if(this._appliesToNextNode&&1!=(1&this.metadata.flags)){const e=this._declarationNodeIndex;let n=t.parent;for(;null!==n&&8&n.type&&n.index!==e;)n=n.parent;return e===(null!==n?n.index:-1)}return this._appliesToNextNode}matchTNode(t,e){const n=this.metadata.predicate;if(Array.isArray(n))for(let r=0;r<n.length;r++){const s=n[r];this.matchTNodeWithReadOption(t,e,Nl(e,s)),this.matchTNodeWithReadOption(t,e,Pn(e,t,s,!1,!1))}else n===sl?4&e.type&&this.matchTNodeWithReadOption(t,e,-1):this.matchTNodeWithReadOption(t,e,Pn(e,t,n,!1,!1))}matchTNodeWithReadOption(t,e,n){if(null!==n){const r=this.metadata.read;if(null!==r)if(r===Aa||r===hl||r===sl&&4&e.type)this.addMatch(e.index,-2);else{const n=Pn(e,t,r,!1,!1);null!==n&&this.addMatch(e.index,n)}else this.addMatch(e.index,n)}}addMatch(t,e){null===this.matches?this.matches=[t,e]:this.matches.push(t,e)}}function Nl(t,e){const n=t.localNames;if(null!==n)for(let r=0;r<n.length;r+=2)if(n[r]===e)return n[r+1];return null}function jl(t,e,n,r){return-1===n?function(t,e){return 11&t.type?Sa(t,e):4&t.type?al(t,e):null}(e,t):-2===n?function(t,e,n){return n===Aa?Sa(e,t):n===sl?al(e,t):n===hl?ml(e,t):void 0}(t,e,r):Ln(t,t[1],n,e)}function Ml(t,e,n,r){const s=e[19].queries[r];if(null===s.matches){const r=t.data,i=n.matches,o=[];for(let t=0;t<i.length;t+=2){const s=i[t];o.push(s<0?null:jl(e,r[s],i[t+1],n.metadata.read))}s.matches=o}return s.matches}function Vl(t,e,n,r){const s=t.queries.getByIndex(n),i=s.matches;if(null!==i){const o=Ml(t,e,s,n);for(let t=0;t<i.length;t+=2){const n=i[t];if(n>0)r.push(o[t/2]);else{const s=i[t+1],o=e[-n];for(let t=Jt;t<o.length;t++){const e=o[t];e[17]===e[3]&&Vl(e[1],e,s,r)}if(null!==o[9]){const t=o[9];for(let e=0;e<t.length;e++){const n=t[e];Vl(n[1],n,s,r)}}}}}return r}function Bl(t){const e=Oe(),n=Fe(),r=ze();qe(r+1);const s=Wl(n,r);if(t.dirty&&_e(e)===(2==(2&s.metadata.flags))){if(null===s.matches)t.reset([]);else{const i=s.crossesNgTemplate?Vl(n,e,r,[]):Ml(n,e,s,r);t.reset(i,Ta),t.notifyOnChanges()}return!0}return!1}function Hl(t,e,n){const r=Fe();r.firstCreatePass&&(ql(r,new Rl(t,e,n),-1),2==(2&e)&&(r.staticViewQueries=!0)),zl(r,Oe(),e)}function Ul(t,e,n,r){const s=Fe();if(s.firstCreatePass){const i=Ie();ql(s,new Rl(e,n,r),i.index),function(t,e){const n=t.contentQueries||(t.contentQueries=[]);e!==(n.length?n[n.length-1]:-1)&&n.push(t.queries.length-1,e)}(s,t),2==(2&n)&&(s.staticContentQueries=!0)}zl(s,Oe(),n)}function $l(){return t=Oe(),e=ze(),t[19].queries[e].queryList;var t,e}function zl(t,e,n){const r=new Fl(4==(4&n));pi(t,e,r,r.destroy),null===e[19]&&(e[19]=new Il),e[19].queries.push(new kl(r))}function ql(t,e,n){null===t.queries&&(t.queries=new Pl),t.queries.track(new Ll(e,n))}function Wl(t,e){return t.queries.getByIndex(e)}function Gl(t,e){return al(t,e)}const Zl=new $n("Application Initializer");let Yl=(()=>{class t{constructor(t){this.appInits=t,this.resolve=Ea,this.reject=Ea,this.initialized=!1,this.done=!1,this.donePromise=new Promise((t,e)=>{this.resolve=t,this.reject=e})}runInitializers(){if(this.initialized)return;const t=[],e=()=>{this.done=!0,this.resolve()};if(this.appInits)for(let n=0;n<this.appInits.length;n++){const e=this.appInits[n]();if(To(e))t.push(e);else if(Oo(e)){const n=new Promise((t,n)=>{e.subscribe({complete:t,error:n})});t.push(n)}}Promise.all(t).then(()=>{e()}).catch(t=>{this.reject(t)}),0===t.length&&e(),this.initialized=!0}}return t.\u0275fac=function(e){return new(e||t)(ar(Zl,8))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const Kl=new $n("AppId"),Ql={provide:Kl,useFactory:function(){return`${Xl()}${Xl()}${Xl()}`},deps:[]};function Xl(){return String.fromCharCode(97+Math.floor(25*Math.random()))}const Jl=new $n("Platform Initializer"),tu=new $n("Platform ID"),eu=new $n("appBootstrapListener");let nu=(()=>{class t{log(t){console.log(t)}warn(t){console.warn(t)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const ru=new $n("LocaleId"),su=new $n("DefaultCurrencyCode");class iu{constructor(t,e){this.ngModuleFactory=t,this.componentFactories=e}}const ou=function(t){return new Sl(t)},au=ou,lu=function(t){return Promise.resolve(ou(t))},uu=function(t){const e=ou(t),n=ss(Qt(t).declarations).reduce((t,e)=>{const n=Kt(e);return n&&t.push(new Cl(n)),t},[]);return new iu(e,n)},cu=uu,hu=function(t){return Promise.resolve(uu(t))};let du=(()=>{class t{constructor(){this.compileModuleSync=au,this.compileModuleAsync=lu,this.compileModuleAndAllComponentsSync=cu,this.compileModuleAndAllComponentsAsync=hu}clearCache(){}clearCacheFor(t){}getModuleId(t){}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const pu=(()=>Promise.resolve(0))();function fu(t){"undefined"==typeof Zone?pu.then(()=>{t&&t.apply(null,null)}):Zone.current.scheduleMicroTask("scheduleMicrotask",t)}class gu{constructor({enableLongStackTrace:t=!1,shouldCoalesceEventChangeDetection:e=!1,shouldCoalesceRunChangeDetection:n=!1}){if(this.hasPendingMacrotasks=!1,this.hasPendingMicrotasks=!1,this.isStable=!0,this.onUnstable=new Tl(!1),this.onMicrotaskEmpty=new Tl(!1),this.onStable=new Tl(!1),this.onError=new Tl(!1),"undefined"==typeof Zone)throw new Error("In this configuration Angular requires Zone.js");Zone.assertZonePatched();const r=this;r._nesting=0,r._outer=r._inner=Zone.current,Zone.TaskTrackingZoneSpec&&(r._inner=r._inner.fork(new Zone.TaskTrackingZoneSpec)),t&&Zone.longStackTraceZoneSpec&&(r._inner=r._inner.fork(Zone.longStackTraceZoneSpec)),r.shouldCoalesceEventChangeDetection=!n&&e,r.shouldCoalesceRunChangeDetection=n,r.lastRequestAnimationFrameId=-1,r.nativeRequestAnimationFrame=function(){let t=kt.requestAnimationFrame,e=kt.cancelAnimationFrame;if("undefined"!=typeof Zone&&t&&e){const n=t[Zone.__symbol__("OriginalDelegate")];n&&(t=n);const r=e[Zone.__symbol__("OriginalDelegate")];r&&(e=r)}return{nativeRequestAnimationFrame:t,nativeCancelAnimationFrame:e}}().nativeRequestAnimationFrame,function(t){const e=()=>{!function(t){t.isCheckStableRunning||-1!==t.lastRequestAnimationFrameId||(t.lastRequestAnimationFrameId=t.nativeRequestAnimationFrame.call(kt,()=>{t.fakeTopEventTask||(t.fakeTopEventTask=Zone.root.scheduleEventTask("fakeTopEventTask",()=>{t.lastRequestAnimationFrameId=-1,vu(t),t.isCheckStableRunning=!0,yu(t),t.isCheckStableRunning=!1},void 0,()=>{},()=>{})),t.fakeTopEventTask.invoke()}),vu(t))}(t)};t._inner=t._inner.fork({name:"angular",properties:{isAngularZone:!0},onInvokeTask:(n,r,s,i,o,a)=>{try{return bu(t),n.invokeTask(s,i,o,a)}finally{(t.shouldCoalesceEventChangeDetection&&"eventTask"===i.type||t.shouldCoalesceRunChangeDetection)&&e(),wu(t)}},onInvoke:(n,r,s,i,o,a,l)=>{try{return bu(t),n.invoke(s,i,o,a,l)}finally{t.shouldCoalesceRunChangeDetection&&e(),wu(t)}},onHasTask:(e,n,r,s)=>{e.hasTask(r,s),n===r&&("microTask"==s.change?(t._hasPendingMicrotasks=s.microTask,vu(t),yu(t)):"macroTask"==s.change&&(t.hasPendingMacrotasks=s.macroTask))},onHandleError:(e,n,r,s)=>(e.handleError(r,s),t.runOutsideAngular(()=>t.onError.emit(s)),!1)})}(r)}static isInAngularZone(){return!0===Zone.current.get("isAngularZone")}static assertInAngularZone(){if(!gu.isInAngularZone())throw new Error("Expected to be in Angular Zone, but it is not!")}static assertNotInAngularZone(){if(gu.isInAngularZone())throw new Error("Expected to not be in Angular Zone, but it is!")}run(t,e,n){return this._inner.run(t,e,n)}runTask(t,e,n,r){const s=this._inner,i=s.scheduleEventTask("NgZoneEvent: "+r,t,mu,Ea,Ea);try{return s.runTask(i,e,n)}finally{s.cancelTask(i)}}runGuarded(t,e,n){return this._inner.runGuarded(t,e,n)}runOutsideAngular(t){return this._outer.run(t)}}const mu={};function yu(t){if(0==t._nesting&&!t.hasPendingMicrotasks&&!t.isStable)try{t._nesting++,t.onMicrotaskEmpty.emit(null)}finally{if(t._nesting--,!t.hasPendingMicrotasks)try{t.runOutsideAngular(()=>t.onStable.emit(null))}finally{t.isStable=!0}}}function vu(t){t.hasPendingMicrotasks=!!(t._hasPendingMicrotasks||(t.shouldCoalesceEventChangeDetection||t.shouldCoalesceRunChangeDetection)&&-1!==t.lastRequestAnimationFrameId)}function bu(t){t._nesting++,t.isStable&&(t.isStable=!1,t.onUnstable.emit(null))}function wu(t){t._nesting--,yu(t)}class Cu{constructor(){this.hasPendingMicrotasks=!1,this.hasPendingMacrotasks=!1,this.isStable=!0,this.onUnstable=new Tl,this.onMicrotaskEmpty=new Tl,this.onStable=new Tl,this.onError=new Tl}run(t,e,n){return t.apply(e,n)}runGuarded(t,e,n){return t.apply(e,n)}runOutsideAngular(t){return t()}runTask(t,e,n,r){return t.apply(e,n)}}let _u=(()=>{class t{constructor(t){this._ngZone=t,this._pendingCount=0,this._isZoneStable=!0,this._didWork=!1,this._callbacks=[],this.taskTrackingZone=null,this._watchAngularEvents(),t.run(()=>{this.taskTrackingZone="undefined"==typeof Zone?null:Zone.current.get("TaskTrackingZone")})}_watchAngularEvents(){this._ngZone.onUnstable.subscribe({next:()=>{this._didWork=!0,this._isZoneStable=!1}}),this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.subscribe({next:()=>{gu.assertNotInAngularZone(),fu(()=>{this._isZoneStable=!0,this._runCallbacksIfReady()})}})})}increasePendingRequestCount(){return this._pendingCount+=1,this._didWork=!0,this._pendingCount}decreasePendingRequestCount(){if(this._pendingCount-=1,this._pendingCount<0)throw new Error("pending async requests below zero");return this._runCallbacksIfReady(),this._pendingCount}isStable(){return this._isZoneStable&&0===this._pendingCount&&!this._ngZone.hasPendingMacrotasks}_runCallbacksIfReady(){if(this.isStable())fu(()=>{for(;0!==this._callbacks.length;){let t=this._callbacks.pop();clearTimeout(t.timeoutId),t.doneCb(this._didWork)}this._didWork=!1});else{let t=this.getPendingTasks();this._callbacks=this._callbacks.filter(e=>!e.updateCb||!e.updateCb(t)||(clearTimeout(e.timeoutId),!1)),this._didWork=!0}}getPendingTasks(){return this.taskTrackingZone?this.taskTrackingZone.macroTasks.map(t=>({source:t.source,creationLocation:t.creationLocation,data:t.data})):[]}addCallback(t,e,n){let r=-1;e&&e>0&&(r=setTimeout(()=>{this._callbacks=this._callbacks.filter(t=>t.timeoutId!==r),t(this._didWork,this.getPendingTasks())},e)),this._callbacks.push({doneCb:t,timeoutId:r,updateCb:n})}whenStable(t,e,n){if(n&&!this.taskTrackingZone)throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?');this.addCallback(t,e,n),this._runCallbacksIfReady()}getPendingRequestCount(){return this._pendingCount}findProviders(t,e,n){return[]}}return t.\u0275fac=function(e){return new(e||t)(ar(gu))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Du=(()=>{class t{constructor(){this._applications=new Map,xu.addToWindow(this)}registerApplication(t,e){this._applications.set(t,e)}unregisterApplication(t){this._applications.delete(t)}unregisterAllApplications(){this._applications.clear()}getTestability(t){return this._applications.get(t)||null}getAllTestabilities(){return Array.from(this._applications.values())}getAllRootElements(){return Array.from(this._applications.keys())}findTestabilityInTree(t,e=!0){return xu.findTestabilityInTree(this,t,e)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();class Eu{addToWindow(t){}findTestabilityInTree(t,e,n){return null}}let Su,xu=new Eu,Au=!0,Tu=!1;const Ou=new $n("AllowMultipleToken");class Fu{constructor(t,e){this.name=t,this.token=e}}function ku(t,e,n=[]){const r=`Platform: ${e}`,s=new $n(r);return(e=[])=>{let i=Iu();if(!i||i.injector.get(Ou,!1))if(t)t(n.concat(e).concat({provide:s,useValue:!0}));else{const t=n.concat(e).concat({provide:s,useValue:!0},{provide:Ui,useValue:"platform"});!function(t){if(Su&&!Su.destroyed&&!Su.injector.get(Ou,!1))throw new Error("There can be only one platform. Destroy the previous one to create a new one.");Su=t.get(Ru);const e=t.get(Jl,null);e&&e.forEach(t=>t())}(eo.create({providers:t,name:r}))}return function(t){const e=Iu();if(!e)throw new Error("No platform exists!");if(!e.injector.get(t,null))throw new Error("A platform with a different configuration has been created. Please destroy it first.");return e}(s)}}function Iu(){return Su&&!Su.destroyed?Su:null}let Ru=(()=>{class t{constructor(t){this._injector=t,this._modules=[],this._destroyListeners=[],this._destroyed=!1}bootstrapModuleFactory(t,e){const n=function(t,e){let n;return n="noop"===t?new Cu:("zone.js"===t?void 0:t)||new gu({enableLongStackTrace:(Tu=!0,Au),shouldCoalesceEventChangeDetection:!!(null==e?void 0:e.ngZoneEventCoalescing),shouldCoalesceRunChangeDetection:!!(null==e?void 0:e.ngZoneRunCoalescing)}),n}(e?e.ngZone:void 0,{ngZoneEventCoalescing:e&&e.ngZoneEventCoalescing||!1,ngZoneRunCoalescing:e&&e.ngZoneRunCoalescing||!1}),r=[{provide:gu,useValue:n}];return n.run(()=>{const e=eo.create({providers:r,parent:this.injector,name:t.moduleType.name}),s=t.create(e),i=s.injector.get(ns,null);if(!i)throw new Error("No ErrorHandler. Is platform module (BrowserModule) included?");return n.runOutsideAngular(()=>{const t=n.onError.subscribe({next:t=>{i.handleError(t)}});s.onDestroy(()=>{Nu(this._modules,s),t.unsubscribe()})}),function(t,e,n){try{const r=n();return To(r)?r.catch(n=>{throw e.runOutsideAngular(()=>t.handleError(n)),n}):r}catch(r){throw e.runOutsideAngular(()=>t.handleError(r)),r}}(i,n,()=>{const t=s.injector.get(Yl);return t.runInitializers(),t.donePromise.then(()=>(da(s.injector.get(ru,ca)||ca),this._moduleDoBootstrap(s),s))})})}bootstrapModule(t,e=[]){const n=Pu({},e);return function(t,e,n){const r=new Sl(n);return Promise.resolve(r)}(0,0,t).then(t=>this.bootstrapModuleFactory(t,n))}_moduleDoBootstrap(t){const e=t.injector.get(Lu);if(t._bootstrapComponents.length>0)t._bootstrapComponents.forEach(t=>e.bootstrap(t));else{if(!t.instance.ngDoBootstrap)throw new Error(`The module ${et(t.instance.constructor)} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.`);t.instance.ngDoBootstrap(e)}this._modules.push(t)}onDestroy(t){this._destroyListeners.push(t)}get injector(){return this._injector}destroy(){if(this._destroyed)throw new Error("The platform has already been destroyed!");this._modules.slice().forEach(t=>t.destroy()),this._destroyListeners.forEach(t=>t()),this._destroyed=!0}get destroyed(){return this._destroyed}}return t.\u0275fac=function(e){return new(e||t)(ar(eo))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function Pu(t,e){return Array.isArray(e)?e.reduce(Pu,t):Object.assign(Object.assign({},t),e)}let Lu=(()=>{class t{constructor(t,e,n,r,s){this._zone=t,this._injector=e,this._exceptionHandler=n,this._componentFactoryResolver=r,this._initStatus=s,this._bootstrapListeners=[],this._views=[],this._runningTick=!1,this._stable=!0,this.componentTypes=[],this.components=[],this._onMicrotaskEmptySubscription=this._zone.onMicrotaskEmpty.subscribe({next:()=>{this._zone.run(()=>{this.tick()})}});const i=new v(t=>{this._stable=this._zone.isStable&&!this._zone.hasPendingMacrotasks&&!this._zone.hasPendingMicrotasks,this._zone.runOutsideAngular(()=>{t.next(this._stable),t.complete()})}),o=new v(t=>{let e;this._zone.runOutsideAngular(()=>{e=this._zone.onStable.subscribe(()=>{gu.assertNotInAngularZone(),fu(()=>{this._stable||this._zone.hasPendingMacrotasks||this._zone.hasPendingMicrotasks||(this._stable=!0,t.next(!0))})})});const n=this._zone.onUnstable.subscribe(()=>{gu.assertInAngularZone(),this._stable&&(this._stable=!1,this._zone.runOutsideAngular(()=>{t.next(!1)}))});return()=>{e.unsubscribe(),n.unsubscribe()}});this.isStable=q(i,o.pipe(t=>{return W()((e=X,function(t){let n;n="function"==typeof e?e:function(){return e};const r=Object.create(t,K);return r.source=t,r.subjectFactory=n,r})(t));var e}))}bootstrap(t,e){if(!this._initStatus.done)throw new Error("Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.");let n;n=t instanceof Ca?t:this._componentFactoryResolver.resolveComponentFactory(t),this.componentTypes.push(n.componentType);const r=n.isBoundToModule?void 0:this._injector.get(ll),s=n.create(eo.NULL,[],e||n.selector,r),i=s.location.nativeElement,o=s.injector.get(_u,null),a=o&&s.injector.get(Du);return o&&a&&a.registerApplication(i,o),s.onDestroy(()=>{this.detachView(s.hostView),Nu(this.components,s),a&&a.unregisterApplication(i)}),this._loadComponent(s),s}tick(){if(this._runningTick)throw new Error("ApplicationRef.tick is called recursively");try{this._runningTick=!0;for(let t of this._views)t.detectChanges()}catch(t){this._zone.runOutsideAngular(()=>this._exceptionHandler.handleError(t))}finally{this._runningTick=!1}}attachView(t){const e=t;this._views.push(e),e.attachToAppRef(this)}detachView(t){const e=t;Nu(this._views,e),e.detachFromAppRef()}_loadComponent(t){this.attachView(t.hostView),this.tick(),this.components.push(t),this._injector.get(eu,[]).concat(this._bootstrapListeners).forEach(e=>e(t))}ngOnDestroy(){this._views.slice().forEach(t=>t.destroy()),this._onMicrotaskEmptySubscription.unsubscribe()}get viewCount(){return this._views.length}}return t.\u0275fac=function(e){return new(e||t)(ar(gu),ar(eo),ar(ns),ar(Da),ar(Yl))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function Nu(t,e){const n=t.indexOf(e);n>-1&&t.splice(n,1)}class ju{}class Mu{}const Vu={factoryPathPrefix:"",factoryPathSuffix:".ngfactory"};let Bu=(()=>{class t{constructor(t,e){this._compiler=t,this._config=e||Vu}load(t){return this.loadAndCompile(t)}loadAndCompile(t){let[e,r]=t.split("#");return void 0===r&&(r="default"),n(615)(e).then(t=>t[r]).then(t=>Hu(t,e,r)).then(t=>this._compiler.compileModuleAsync(t))}loadFactory(t){let[e,r]=t.split("#"),s="NgFactory";return void 0===r&&(r="default",s=""),n(615)(this._config.factoryPathPrefix+e+this._config.factoryPathSuffix).then(t=>t[r+s]).then(t=>Hu(t,e,r))}}return t.\u0275fac=function(e){return new(e||t)(ar(du),ar(Mu,8))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function Hu(t,e,n){if(!t)throw new Error(`Cannot find '${n}' in '${e}'`);return t}const Uu=ku(null,"core",[{provide:tu,useValue:"unknown"},{provide:Ru,deps:[eo]},{provide:Du,deps:[]},{provide:nu,deps:[]}]),$u=[{provide:Lu,useClass:Lu,deps:[gu,eo,ns,Da,Yl]},{provide:wl,deps:[gu],useFactory:function(t){let e=[];return t.onStable.subscribe(()=>{for(;e.length;)e.pop()()}),function(t){e.push(t)}}},{provide:Yl,useClass:Yl,deps:[[new hr,Zl]]},{provide:du,useClass:du,deps:[]},Ql,{provide:Wa,useFactory:function(){return el},deps:[]},{provide:Za,useFactory:function(){return nl},deps:[]},{provide:ru,useFactory:function(t){return da(t=t||"undefined"!=typeof $localize&&$localize.locale||ca),t},deps:[[new cr(ru),new hr,new dr]]},{provide:su,useValue:"USD"}];let zu=(()=>{class t{constructor(t){}}return t.\u0275fac=function(e){return new(e||t)(ar(Lu))},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:$u}),t})(),qu=null;function Wu(){return qu}const Gu=new $n("DocumentToken");let Zu=(()=>{class t{historyGo(t){throw new Error("Not implemented")}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:Yu,token:t,providedIn:"platform"}),t})();function Yu(){return ar(Qu)}const Ku=new $n("Location Initialized");let Qu=(()=>{class t extends Zu{constructor(t){super(),this._doc=t,this._init()}_init(){this.location=window.location,this._history=window.history}getBaseHrefFromDOM(){return Wu().getBaseHref(this._doc)}onPopState(t){const e=Wu().getGlobalEventTarget(this._doc,"window");return e.addEventListener("popstate",t,!1),()=>e.removeEventListener("popstate",t)}onHashChange(t){const e=Wu().getGlobalEventTarget(this._doc,"window");return e.addEventListener("hashchange",t,!1),()=>e.removeEventListener("hashchange",t)}get href(){return this.location.href}get protocol(){return this.location.protocol}get hostname(){return this.location.hostname}get port(){return this.location.port}get pathname(){return this.location.pathname}get search(){return this.location.search}get hash(){return this.location.hash}set pathname(t){this.location.pathname=t}pushState(t,e,n){Xu()?this._history.pushState(t,e,n):this.location.hash=n}replaceState(t,e,n){Xu()?this._history.replaceState(t,e,n):this.location.hash=n}forward(){this._history.forward()}back(){this._history.back()}historyGo(t=0){this._history.go(t)}getState(){return this._history.state}}return t.\u0275fac=function(e){return new(e||t)(ar(Gu))},t.\u0275prov=ht({factory:Ju,token:t,providedIn:"platform"}),t})();function Xu(){return!!window.history.pushState}function Ju(){return new Qu(ar(Gu))}function tc(t,e){if(0==t.length)return e;if(0==e.length)return t;let n=0;return t.endsWith("/")&&n++,e.startsWith("/")&&n++,2==n?t+e.substring(1):1==n?t+e:t+"/"+e}function ec(t){const e=t.match(/#|\?|$/),n=e&&e.index||t.length;return t.slice(0,n-("/"===t[n-1]?1:0))+t.slice(n)}function nc(t){return t&&"?"!==t[0]?"?"+t:t}let rc=(()=>{class t{historyGo(t){throw new Error("Not implemented")}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:sc,token:t,providedIn:"root"}),t})();function sc(t){const e=ar(Gu).location;return new oc(ar(Zu),e&&e.origin||"")}const ic=new $n("appBaseHref");let oc=(()=>{class t extends rc{constructor(t,e){if(super(),this._platformLocation=t,this._removeListenerFns=[],null==e&&(e=this._platformLocation.getBaseHrefFromDOM()),null==e)throw new Error("No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.");this._baseHref=e}ngOnDestroy(){for(;this._removeListenerFns.length;)this._removeListenerFns.pop()()}onPopState(t){this._removeListenerFns.push(this._platformLocation.onPopState(t),this._platformLocation.onHashChange(t))}getBaseHref(){return this._baseHref}prepareExternalUrl(t){return tc(this._baseHref,t)}path(t=!1){const e=this._platformLocation.pathname+nc(this._platformLocation.search),n=this._platformLocation.hash;return n&&t?`${e}${n}`:e}pushState(t,e,n,r){const s=this.prepareExternalUrl(n+nc(r));this._platformLocation.pushState(t,e,s)}replaceState(t,e,n,r){const s=this.prepareExternalUrl(n+nc(r));this._platformLocation.replaceState(t,e,s)}forward(){this._platformLocation.forward()}back(){this._platformLocation.back()}historyGo(t=0){var e,n;null===(n=(e=this._platformLocation).historyGo)||void 0===n||n.call(e,t)}}return t.\u0275fac=function(e){return new(e||t)(ar(Zu),ar(ic,8))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),ac=(()=>{class t extends rc{constructor(t,e){super(),this._platformLocation=t,this._baseHref="",this._removeListenerFns=[],null!=e&&(this._baseHref=e)}ngOnDestroy(){for(;this._removeListenerFns.length;)this._removeListenerFns.pop()()}onPopState(t){this._removeListenerFns.push(this._platformLocation.onPopState(t),this._platformLocation.onHashChange(t))}getBaseHref(){return this._baseHref}path(t=!1){let e=this._platformLocation.hash;return null==e&&(e="#"),e.length>0?e.substring(1):e}prepareExternalUrl(t){const e=tc(this._baseHref,t);return e.length>0?"#"+e:e}pushState(t,e,n,r){let s=this.prepareExternalUrl(n+nc(r));0==s.length&&(s=this._platformLocation.pathname),this._platformLocation.pushState(t,e,s)}replaceState(t,e,n,r){let s=this.prepareExternalUrl(n+nc(r));0==s.length&&(s=this._platformLocation.pathname),this._platformLocation.replaceState(t,e,s)}forward(){this._platformLocation.forward()}back(){this._platformLocation.back()}historyGo(t=0){var e,n;null===(n=(e=this._platformLocation).historyGo)||void 0===n||n.call(e,t)}}return t.\u0275fac=function(e){return new(e||t)(ar(Zu),ar(ic,8))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),lc=(()=>{class t{constructor(t,e){this._subject=new Tl,this._urlChangeListeners=[],this._platformStrategy=t;const n=this._platformStrategy.getBaseHref();this._platformLocation=e,this._baseHref=ec(cc(n)),this._platformStrategy.onPopState(t=>{this._subject.emit({url:this.path(!0),pop:!0,state:t.state,type:t.type})})}path(t=!1){return this.normalize(this._platformStrategy.path(t))}getState(){return this._platformLocation.getState()}isCurrentPathEqualTo(t,e=""){return this.path()==this.normalize(t+nc(e))}normalize(e){return t.stripTrailingSlash(function(t,e){return t&&e.startsWith(t)?e.substring(t.length):e}(this._baseHref,cc(e)))}prepareExternalUrl(t){return t&&"/"!==t[0]&&(t="/"+t),this._platformStrategy.prepareExternalUrl(t)}go(t,e="",n=null){this._platformStrategy.pushState(n,"",t,e),this._notifyUrlChangeListeners(this.prepareExternalUrl(t+nc(e)),n)}replaceState(t,e="",n=null){this._platformStrategy.replaceState(n,"",t,e),this._notifyUrlChangeListeners(this.prepareExternalUrl(t+nc(e)),n)}forward(){this._platformStrategy.forward()}back(){this._platformStrategy.back()}historyGo(t=0){var e,n;null===(n=(e=this._platformStrategy).historyGo)||void 0===n||n.call(e,t)}onUrlChange(t){this._urlChangeListeners.push(t),this._urlChangeSubscription||(this._urlChangeSubscription=this.subscribe(t=>{this._notifyUrlChangeListeners(t.url,t.state)}))}_notifyUrlChangeListeners(t="",e){this._urlChangeListeners.forEach(n=>n(t,e))}subscribe(t,e,n){return this._subject.subscribe({next:t,error:e,complete:n})}}return t.\u0275fac=function(e){return new(e||t)(ar(rc),ar(Zu))},t.normalizeQueryParams=nc,t.joinWithSlash=tc,t.stripTrailingSlash=ec,t.\u0275prov=ht({factory:uc,token:t,providedIn:"root"}),t})();function uc(){return new lc(ar(rc),ar(Zu))}function cc(t){return t.replace(/\/index.html$/,"")}const hc={ADP:[void 0,void 0,0],AFN:[void 0,void 0,0],ALL:[void 0,void 0,0],AMD:[void 0,void 0,2],AOA:[void 0,"Kz"],ARS:[void 0,"$"],AUD:["A$","$"],BAM:[void 0,"KM"],BBD:[void 0,"$"],BDT:[void 0,"\u09f3"],BHD:[void 0,void 0,3],BIF:[void 0,void 0,0],BMD:[void 0,"$"],BND:[void 0,"$"],BOB:[void 0,"Bs"],BRL:["R$"],BSD:[void 0,"$"],BWP:[void 0,"P"],BYN:[void 0,"\u0440.",2],BYR:[void 0,void 0,0],BZD:[void 0,"$"],CAD:["CA$","$",2],CHF:[void 0,void 0,2],CLF:[void 0,void 0,4],CLP:[void 0,"$",0],CNY:["CN\xa5","\xa5"],COP:[void 0,"$",2],CRC:[void 0,"\u20a1",2],CUC:[void 0,"$"],CUP:[void 0,"$"],CZK:[void 0,"K\u010d",2],DJF:[void 0,void 0,0],DKK:[void 0,"kr",2],DOP:[void 0,"$"],EGP:[void 0,"E\xa3"],ESP:[void 0,"\u20a7",0],EUR:["\u20ac"],FJD:[void 0,"$"],FKP:[void 0,"\xa3"],GBP:["\xa3"],GEL:[void 0,"\u20be"],GIP:[void 0,"\xa3"],GNF:[void 0,"FG",0],GTQ:[void 0,"Q"],GYD:[void 0,"$",2],HKD:["HK$","$"],HNL:[void 0,"L"],HRK:[void 0,"kn"],HUF:[void 0,"Ft",2],IDR:[void 0,"Rp",2],ILS:["\u20aa"],INR:["\u20b9"],IQD:[void 0,void 0,0],IRR:[void 0,void 0,0],ISK:[void 0,"kr",0],ITL:[void 0,void 0,0],JMD:[void 0,"$"],JOD:[void 0,void 0,3],JPY:["\xa5",void 0,0],KHR:[void 0,"\u17db"],KMF:[void 0,"CF",0],KPW:[void 0,"\u20a9",0],KRW:["\u20a9",void 0,0],KWD:[void 0,void 0,3],KYD:[void 0,"$"],KZT:[void 0,"\u20b8"],LAK:[void 0,"\u20ad",0],LBP:[void 0,"L\xa3",0],LKR:[void 0,"Rs"],LRD:[void 0,"$"],LTL:[void 0,"Lt"],LUF:[void 0,void 0,0],LVL:[void 0,"Ls"],LYD:[void 0,void 0,3],MGA:[void 0,"Ar",0],MGF:[void 0,void 0,0],MMK:[void 0,"K",0],MNT:[void 0,"\u20ae",2],MRO:[void 0,void 0,0],MUR:[void 0,"Rs",2],MXN:["MX$","$"],MYR:[void 0,"RM"],NAD:[void 0,"$"],NGN:[void 0,"\u20a6"],NIO:[void 0,"C$"],NOK:[void 0,"kr",2],NPR:[void 0,"Rs"],NZD:["NZ$","$"],OMR:[void 0,void 0,3],PHP:[void 0,"\u20b1"],PKR:[void 0,"Rs",2],PLN:[void 0,"z\u0142"],PYG:[void 0,"\u20b2",0],RON:[void 0,"lei"],RSD:[void 0,void 0,0],RUB:[void 0,"\u20bd"],RUR:[void 0,"\u0440."],RWF:[void 0,"RF",0],SBD:[void 0,"$"],SEK:[void 0,"kr",2],SGD:[void 0,"$"],SHP:[void 0,"\xa3"],SLL:[void 0,void 0,0],SOS:[void 0,void 0,0],SRD:[void 0,"$"],SSP:[void 0,"\xa3"],STD:[void 0,void 0,0],STN:[void 0,"Db"],SYP:[void 0,"\xa3",0],THB:[void 0,"\u0e3f"],TMM:[void 0,void 0,0],TND:[void 0,void 0,3],TOP:[void 0,"T$"],TRL:[void 0,void 0,0],TRY:[void 0,"\u20ba"],TTD:[void 0,"$"],TWD:["NT$","$",2],TZS:[void 0,void 0,2],UAH:[void 0,"\u20b4"],UGX:[void 0,void 0,0],USD:["$"],UYI:[void 0,void 0,0],UYU:[void 0,"$"],UYW:[void 0,void 0,4],UZS:[void 0,void 0,2],VEF:[void 0,"Bs",2],VND:["\u20ab",void 0,0],VUV:[void 0,void 0,0],XAF:["FCFA",void 0,0],XCD:["EC$","$"],XOF:["CFA",void 0,0],XPF:["CFPF",void 0,0],XXX:["\xa4"],YER:[void 0,void 0,0],ZAR:[void 0,"R"],ZMK:[void 0,void 0,0],ZMW:[void 0,"ZK"],ZWD:[void 0,void 0,0]};var dc=function(t){return t[t.Decimal=0]="Decimal",t[t.Percent=1]="Percent",t[t.Currency=2]="Currency",t[t.Scientific=3]="Scientific",t}({}),pc=function(t){return t[t.Zero=0]="Zero",t[t.One=1]="One",t[t.Two=2]="Two",t[t.Few=3]="Few",t[t.Many=4]="Many",t[t.Other=5]="Other",t}({}),fc=function(t){return t[t.Format=0]="Format",t[t.Standalone=1]="Standalone",t}({}),gc=function(t){return t[t.Narrow=0]="Narrow",t[t.Abbreviated=1]="Abbreviated",t[t.Wide=2]="Wide",t[t.Short=3]="Short",t}({}),mc=function(t){return t[t.Short=0]="Short",t[t.Medium=1]="Medium",t[t.Long=2]="Long",t[t.Full=3]="Full",t}({}),yc=function(t){return t[t.Decimal=0]="Decimal",t[t.Group=1]="Group",t[t.List=2]="List",t[t.PercentSign=3]="PercentSign",t[t.PlusSign=4]="PlusSign",t[t.MinusSign=5]="MinusSign",t[t.Exponential=6]="Exponential",t[t.SuperscriptingExponent=7]="SuperscriptingExponent",t[t.PerMille=8]="PerMille",t[t[1/0]=9]="Infinity",t[t.NaN=10]="NaN",t[t.TimeSeparator=11]="TimeSeparator",t[t.CurrencyDecimal=12]="CurrencyDecimal",t[t.CurrencyGroup=13]="CurrencyGroup",t}({});function vc(t,e){return Ec(aa(t)[ua.DateFormat],e)}function bc(t,e){return Ec(aa(t)[ua.TimeFormat],e)}function wc(t,e){return Ec(aa(t)[ua.DateTimeFormat],e)}function Cc(t,e){const n=aa(t),r=n[ua.NumberSymbols][e];if(void 0===r){if(e===yc.CurrencyDecimal)return n[ua.NumberSymbols][yc.Decimal];if(e===yc.CurrencyGroup)return n[ua.NumberSymbols][yc.Group]}return r}function _c(t,e){return aa(t)[ua.NumberFormats][e]}function Dc(t){if(!t[ua.ExtraData])throw new Error(`Missing extra locale data for the locale "${t[ua.LocaleId]}". Use "registerLocaleData" to load new data. See the "I18n guide" on angular.io to know more.`)}function Ec(t,e){for(let n=e;n>-1;n--)if(void 0!==t[n])return t[n];throw new Error("Locale data API: locale data undefined")}function Sc(t){const[e,n]=t.split(":");return{hours:+e,minutes:+n}}const xc=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/,Ac={},Tc=/((?:[^BEGHLMOSWYZabcdhmswyz']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|Y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|c{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\s\S]*)/;var Oc=function(t){return t[t.Short=0]="Short",t[t.ShortGMT=1]="ShortGMT",t[t.Long=2]="Long",t[t.Extended=3]="Extended",t}({}),Fc=function(t){return t[t.FullYear=0]="FullYear",t[t.Month=1]="Month",t[t.Date=2]="Date",t[t.Hours=3]="Hours",t[t.Minutes=4]="Minutes",t[t.Seconds=5]="Seconds",t[t.FractionalSeconds=6]="FractionalSeconds",t[t.Day=7]="Day",t}({}),kc=function(t){return t[t.DayPeriods=0]="DayPeriods",t[t.Days=1]="Days",t[t.Months=2]="Months",t[t.Eras=3]="Eras",t}({});function Ic(t,e,n,r){let s=function(t){if(qc(t))return t;if("number"==typeof t&&!isNaN(t))return new Date(t);if("string"==typeof t){if(t=t.trim(),/^(\d{4}(-\d{1,2}(-\d{1,2})?)?)$/.test(t)){const[e,n=1,r=1]=t.split("-").map(t=>+t);return Rc(e,n-1,r)}const e=parseFloat(t);if(!isNaN(t-e))return new Date(e);let n;if(n=t.match(xc))return function(t){const e=new Date(0);let n=0,r=0;const s=t[8]?e.setUTCFullYear:e.setFullYear,i=t[8]?e.setUTCHours:e.setHours;t[9]&&(n=Number(t[9]+t[10]),r=Number(t[9]+t[11])),s.call(e,Number(t[1]),Number(t[2])-1,Number(t[3]));const o=Number(t[4]||0)-n,a=Number(t[5]||0)-r,l=Number(t[6]||0),u=Math.floor(1e3*parseFloat("0."+(t[7]||0)));return i.call(e,o,a,l,u),e}(n)}const e=new Date(t);if(!qc(e))throw new Error(`Unable to convert "${t}" into a date`);return e}(t);e=Pc(n,e)||e;let i,o=[];for(;e;){if(i=Tc.exec(e),!i){o.push(e);break}{o=o.concat(i.slice(1));const t=o.pop();if(!t)break;e=t}}let a=s.getTimezoneOffset();r&&(a=zc(r,a),s=function(t,e,n){const r=t.getTimezoneOffset();return function(t,e){return(t=new Date(t.getTime())).setMinutes(t.getMinutes()+e),t}(t,-1*(zc(e,r)-r))}(s,r));let l="";return o.forEach(t=>{const e=function(t){if($c[t])return $c[t];let e;switch(t){case"G":case"GG":case"GGG":e=Mc(kc.Eras,gc.Abbreviated);break;case"GGGG":e=Mc(kc.Eras,gc.Wide);break;case"GGGGG":e=Mc(kc.Eras,gc.Narrow);break;case"y":e=jc(Fc.FullYear,1,0,!1,!0);break;case"yy":e=jc(Fc.FullYear,2,0,!0,!0);break;case"yyy":e=jc(Fc.FullYear,3,0,!1,!0);break;case"yyyy":e=jc(Fc.FullYear,4,0,!1,!0);break;case"Y":e=Uc(1);break;case"YY":e=Uc(2,!0);break;case"YYY":e=Uc(3);break;case"YYYY":e=Uc(4);break;case"M":case"L":e=jc(Fc.Month,1,1);break;case"MM":case"LL":e=jc(Fc.Month,2,1);break;case"MMM":e=Mc(kc.Months,gc.Abbreviated);break;case"MMMM":e=Mc(kc.Months,gc.Wide);break;case"MMMMM":e=Mc(kc.Months,gc.Narrow);break;case"LLL":e=Mc(kc.Months,gc.Abbreviated,fc.Standalone);break;case"LLLL":e=Mc(kc.Months,gc.Wide,fc.Standalone);break;case"LLLLL":e=Mc(kc.Months,gc.Narrow,fc.Standalone);break;case"w":e=Hc(1);break;case"ww":e=Hc(2);break;case"W":e=Hc(1,!0);break;case"d":e=jc(Fc.Date,1);break;case"dd":e=jc(Fc.Date,2);break;case"c":case"cc":e=jc(Fc.Day,1);break;case"ccc":e=Mc(kc.Days,gc.Abbreviated,fc.Standalone);break;case"cccc":e=Mc(kc.Days,gc.Wide,fc.Standalone);break;case"ccccc":e=Mc(kc.Days,gc.Narrow,fc.Standalone);break;case"cccccc":e=Mc(kc.Days,gc.Short,fc.Standalone);break;case"E":case"EE":case"EEE":e=Mc(kc.Days,gc.Abbreviated);break;case"EEEE":e=Mc(kc.Days,gc.Wide);break;case"EEEEE":e=Mc(kc.Days,gc.Narrow);break;case"EEEEEE":e=Mc(kc.Days,gc.Short);break;case"a":case"aa":case"aaa":e=Mc(kc.DayPeriods,gc.Abbreviated);break;case"aaaa":e=Mc(kc.DayPeriods,gc.Wide);break;case"aaaaa":e=Mc(kc.DayPeriods,gc.Narrow);break;case"b":case"bb":case"bbb":e=Mc(kc.DayPeriods,gc.Abbreviated,fc.Standalone,!0);break;case"bbbb":e=Mc(kc.DayPeriods,gc.Wide,fc.Standalone,!0);break;case"bbbbb":e=Mc(kc.DayPeriods,gc.Narrow,fc.Standalone,!0);break;case"B":case"BB":case"BBB":e=Mc(kc.DayPeriods,gc.Abbreviated,fc.Format,!0);break;case"BBBB":e=Mc(kc.DayPeriods,gc.Wide,fc.Format,!0);break;case"BBBBB":e=Mc(kc.DayPeriods,gc.Narrow,fc.Format,!0);break;case"h":e=jc(Fc.Hours,1,-12);break;case"hh":e=jc(Fc.Hours,2,-12);break;case"H":e=jc(Fc.Hours,1);break;case"HH":e=jc(Fc.Hours,2);break;case"m":e=jc(Fc.Minutes,1);break;case"mm":e=jc(Fc.Minutes,2);break;case"s":e=jc(Fc.Seconds,1);break;case"ss":e=jc(Fc.Seconds,2);break;case"S":e=jc(Fc.FractionalSeconds,1);break;case"SS":e=jc(Fc.FractionalSeconds,2);break;case"SSS":e=jc(Fc.FractionalSeconds,3);break;case"Z":case"ZZ":case"ZZZ":e=Vc(Oc.Short);break;case"ZZZZZ":e=Vc(Oc.Extended);break;case"O":case"OO":case"OOO":case"z":case"zz":case"zzz":e=Vc(Oc.ShortGMT);break;case"OOOO":case"ZZZZ":case"zzzz":e=Vc(Oc.Long);break;default:return null}return $c[t]=e,e}(t);l+=e?e(s,n,a):"''"===t?"'":t.replace(/(^'|'$)/g,"").replace(/''/g,"'")}),l}function Rc(t,e,n){const r=new Date(0);return r.setFullYear(t,e,n),r.setHours(0,0,0),r}function Pc(t,e){const n=function(t){return aa(t)[ua.LocaleId]}(t);if(Ac[n]=Ac[n]||{},Ac[n][e])return Ac[n][e];let r="";switch(e){case"shortDate":r=vc(t,mc.Short);break;case"mediumDate":r=vc(t,mc.Medium);break;case"longDate":r=vc(t,mc.Long);break;case"fullDate":r=vc(t,mc.Full);break;case"shortTime":r=bc(t,mc.Short);break;case"mediumTime":r=bc(t,mc.Medium);break;case"longTime":r=bc(t,mc.Long);break;case"fullTime":r=bc(t,mc.Full);break;case"short":const e=Pc(t,"shortTime"),n=Pc(t,"shortDate");r=Lc(wc(t,mc.Short),[e,n]);break;case"medium":const s=Pc(t,"mediumTime"),i=Pc(t,"mediumDate");r=Lc(wc(t,mc.Medium),[s,i]);break;case"long":const o=Pc(t,"longTime"),a=Pc(t,"longDate");r=Lc(wc(t,mc.Long),[o,a]);break;case"full":const l=Pc(t,"fullTime"),u=Pc(t,"fullDate");r=Lc(wc(t,mc.Full),[l,u])}return r&&(Ac[n][e]=r),r}function Lc(t,e){return e&&(t=t.replace(/\{([^}]+)}/g,function(t,n){return null!=e&&n in e?e[n]:t})),t}function Nc(t,e,n="-",r,s){let i="";(t<0||s&&t<=0)&&(s?t=1-t:(t=-t,i=n));let o=String(t);for(;o.length<e;)o="0"+o;return r&&(o=o.substr(o.length-e)),i+o}function jc(t,e,n=0,r=!1,s=!1){return function(i,o){let a=function(t,e){switch(t){case Fc.FullYear:return e.getFullYear();case Fc.Month:return e.getMonth();case Fc.Date:return e.getDate();case Fc.Hours:return e.getHours();case Fc.Minutes:return e.getMinutes();case Fc.Seconds:return e.getSeconds();case Fc.FractionalSeconds:return e.getMilliseconds();case Fc.Day:return e.getDay();default:throw new Error(`Unknown DateType value "${t}".`)}}(t,i);if((n>0||a>-n)&&(a+=n),t===Fc.Hours)0===a&&-12===n&&(a=12);else if(t===Fc.FractionalSeconds)return l=e,Nc(a,3).substr(0,l);var l;const u=Cc(o,yc.MinusSign);return Nc(a,e,u,r,s)}}function Mc(t,e,n=fc.Format,r=!1){return function(s,i){return function(t,e,n,r,s,i){switch(n){case kc.Months:return function(t,e,n){const r=aa(t),s=Ec([r[ua.MonthsFormat],r[ua.MonthsStandalone]],e);return Ec(s,n)}(e,s,r)[t.getMonth()];case kc.Days:return function(t,e,n){const r=aa(t),s=Ec([r[ua.DaysFormat],r[ua.DaysStandalone]],e);return Ec(s,n)}(e,s,r)[t.getDay()];case kc.DayPeriods:const o=t.getHours(),a=t.getMinutes();if(i){const t=function(t){const e=aa(t);return Dc(e),(e[ua.ExtraData][2]||[]).map(t=>"string"==typeof t?Sc(t):[Sc(t[0]),Sc(t[1])])}(e),n=function(t,e,n){const r=aa(t);Dc(r);const s=Ec([r[ua.ExtraData][0],r[ua.ExtraData][1]],e)||[];return Ec(s,n)||[]}(e,s,r),i=t.findIndex(t=>{if(Array.isArray(t)){const[e,n]=t,r=o>=e.hours&&a>=e.minutes,s=o<n.hours||o===n.hours&&a<n.minutes;if(e.hours<n.hours){if(r&&s)return!0}else if(r||s)return!0}else if(t.hours===o&&t.minutes===a)return!0;return!1});if(-1!==i)return n[i]}return function(t,e,n){const r=aa(t),s=Ec([r[ua.DayPeriodsFormat],r[ua.DayPeriodsStandalone]],e);return Ec(s,n)}(e,s,r)[o<12?0:1];case kc.Eras:return function(t,e){return Ec(aa(t)[ua.Eras],e)}(e,r)[t.getFullYear()<=0?0:1];default:throw new Error(`unexpected translation type ${n}`)}}(s,i,t,e,n,r)}}function Vc(t){return function(e,n,r){const s=-1*r,i=Cc(n,yc.MinusSign),o=s>0?Math.floor(s/60):Math.ceil(s/60);switch(t){case Oc.Short:return(s>=0?"+":"")+Nc(o,2,i)+Nc(Math.abs(s%60),2,i);case Oc.ShortGMT:return"GMT"+(s>=0?"+":"")+Nc(o,1,i);case Oc.Long:return"GMT"+(s>=0?"+":"")+Nc(o,2,i)+":"+Nc(Math.abs(s%60),2,i);case Oc.Extended:return 0===r?"Z":(s>=0?"+":"")+Nc(o,2,i)+":"+Nc(Math.abs(s%60),2,i);default:throw new Error(`Unknown zone width "${t}"`)}}}function Bc(t){return Rc(t.getFullYear(),t.getMonth(),t.getDate()+(4-t.getDay()))}function Hc(t,e=!1){return function(n,r){let s;if(e){const t=new Date(n.getFullYear(),n.getMonth(),1).getDay()-1,e=n.getDate();s=1+Math.floor((e+t)/7)}else{const t=Bc(n),e=function(t){const e=Rc(t,0,1).getDay();return Rc(t,0,1+(e<=4?4:11)-e)}(t.getFullYear()),r=t.getTime()-e.getTime();s=1+Math.round(r/6048e5)}return Nc(s,t,Cc(r,yc.MinusSign))}}function Uc(t,e=!1){return function(n,r){return Nc(Bc(n).getFullYear(),t,Cc(r,yc.MinusSign),e)}}const $c={};function zc(t,e){t=t.replace(/:/g,"");const n=Date.parse("Jan 01, 1970 00:00:00 "+t)/6e4;return isNaN(n)?e:n}function qc(t){return t instanceof Date&&!isNaN(t.valueOf())}const Wc=/^(\d+)?\.((\d+)(-(\d+))?)?$/,Gc=".",Zc="0";function Yc(t,e,n,r,s,i,o=!1){let a="",l=!1;if(isFinite(t)){let u=function(t){let e,n,r,s,i,o=Math.abs(t)+"",a=0;for((n=o.indexOf(Gc))>-1&&(o=o.replace(Gc,"")),(r=o.search(/e/i))>0?(n<0&&(n=r),n+=+o.slice(r+1),o=o.substring(0,r)):n<0&&(n=o.length),r=0;o.charAt(r)===Zc;r++);if(r===(i=o.length))e=[0],n=1;else{for(i--;o.charAt(i)===Zc;)i--;for(n-=r,e=[],s=0;r<=i;r++,s++)e[s]=Number(o.charAt(r))}return n>22&&(e=e.splice(0,21),a=n-1,n=1),{digits:e,exponent:a,integerLen:n}}(t);o&&(u=function(t){if(0===t.digits[0])return t;const e=t.digits.length-t.integerLen;return t.exponent?t.exponent+=2:(0===e?t.digits.push(0,0):1===e&&t.digits.push(0),t.integerLen+=2),t}(u));let c=e.minInt,h=e.minFrac,d=e.maxFrac;if(i){const t=i.match(Wc);if(null===t)throw new Error(`${i} is not a valid digit info`);const e=t[1],n=t[3],r=t[5];null!=e&&(c=Qc(e)),null!=n&&(h=Qc(n)),null!=r?d=Qc(r):null!=n&&h>d&&(d=h)}!function(t,e,n){if(e>n)throw new Error(`The minimum number of digits after fraction (${e}) is higher than the maximum (${n}).`);let r=t.digits,s=r.length-t.integerLen;const i=Math.min(Math.max(e,s),n);let o=i+t.integerLen,a=r[o];if(o>0){r.splice(Math.max(t.integerLen,o));for(let t=o;t<r.length;t++)r[t]=0}else{s=Math.max(0,s),t.integerLen=1,r.length=Math.max(1,o=i+1),r[0]=0;for(let t=1;t<o;t++)r[t]=0}if(a>=5)if(o-1<0){for(let e=0;e>o;e--)r.unshift(0),t.integerLen++;r.unshift(1),t.integerLen++}else r[o-1]++;for(;s<Math.max(0,i);s++)r.push(0);let l=0!==i;const u=e+t.integerLen,c=r.reduceRight(function(t,e,n,r){return r[n]=(e+=t)<10?e:e-10,l&&(0===r[n]&&n>=u?r.pop():l=!1),e>=10?1:0},0);c&&(r.unshift(c),t.integerLen++)}(u,h,d);let p=u.digits,f=u.integerLen;const g=u.exponent;let m=[];for(l=p.every(t=>!t);f<c;f++)p.unshift(0);for(;f<0;f++)p.unshift(0);f>0?m=p.splice(f,p.length):(m=p,p=[0]);const y=[];for(p.length>=e.lgSize&&y.unshift(p.splice(-e.lgSize,p.length).join(""));p.length>e.gSize;)y.unshift(p.splice(-e.gSize,p.length).join(""));p.length&&y.unshift(p.join("")),a=y.join(Cc(n,r)),m.length&&(a+=Cc(n,s)+m.join("")),g&&(a+=Cc(n,yc.Exponential)+"+"+g)}else a=Cc(n,yc.Infinity);return a=t<0&&!l?e.negPre+a+e.negSuf:e.posPre+a+e.posSuf,a}function Kc(t,e="-"){const n={minInt:1,minFrac:0,maxFrac:0,posPre:"",posSuf:"",negPre:"",negSuf:"",gSize:0,lgSize:0},r=t.split(";"),s=r[0],i=r[1],o=-1!==s.indexOf(Gc)?s.split(Gc):[s.substring(0,s.lastIndexOf(Zc)+1),s.substring(s.lastIndexOf(Zc)+1)],a=o[0],l=o[1]||"";n.posPre=a.substr(0,a.indexOf("#"));for(let c=0;c<l.length;c++){const t=l.charAt(c);t===Zc?n.minFrac=n.maxFrac=c+1:"#"===t?n.maxFrac=c+1:n.posSuf+=t}const u=a.split(",");if(n.gSize=u[1]?u[1].length:0,n.lgSize=u[2]||u[1]?(u[2]||u[1]).length:0,i){const t=s.length-n.posPre.length-n.posSuf.length,e=i.indexOf("#");n.negPre=i.substr(0,e).replace(/'/g,""),n.negSuf=i.substr(e+t).replace(/'/g,"")}else n.negPre=e+n.posPre,n.negSuf=n.posSuf;return n}function Qc(t){const e=parseInt(t);if(isNaN(e))throw new Error("Invalid integer literal when parsing "+t);return e}class Xc{}let Jc=(()=>{class t extends Xc{constructor(t){super(),this.locale=t}getPluralCategory(t,e){switch(function(t){return aa(t)[ua.PluralCase]}(e||this.locale)(t)){case pc.Zero:return"zero";case pc.One:return"one";case pc.Two:return"two";case pc.Few:return"few";case pc.Many:return"many";default:return"other"}}}return t.\u0275fac=function(e){return new(e||t)(ar(ru))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function th(t,e){e=encodeURIComponent(e);for(const n of t.split(";")){const t=n.indexOf("="),[r,s]=-1==t?[n,""]:[n.slice(0,t),n.slice(t+1)];if(r.trim()===e)return decodeURIComponent(s)}return null}let eh=(()=>{class t{constructor(t,e,n,r){this._iterableDiffers=t,this._keyValueDiffers=e,this._ngEl=n,this._renderer=r,this._iterableDiffer=null,this._keyValueDiffer=null,this._initialClasses=[],this._rawClass=null}set klass(t){this._removeClasses(this._initialClasses),this._initialClasses="string"==typeof t?t.split(/\s+/):[],this._applyClasses(this._initialClasses),this._applyClasses(this._rawClass)}set ngClass(t){this._removeClasses(this._rawClass),this._applyClasses(this._initialClasses),this._iterableDiffer=null,this._keyValueDiffer=null,this._rawClass="string"==typeof t?t.split(/\s+/):t,this._rawClass&&(co(this._rawClass)?this._iterableDiffer=this._iterableDiffers.find(this._rawClass).create():this._keyValueDiffer=this._keyValueDiffers.find(this._rawClass).create())}ngDoCheck(){if(this._iterableDiffer){const t=this._iterableDiffer.diff(this._rawClass);t&&this._applyIterableChanges(t)}else if(this._keyValueDiffer){const t=this._keyValueDiffer.diff(this._rawClass);t&&this._applyKeyValueChanges(t)}}_applyKeyValueChanges(t){t.forEachAddedItem(t=>this._toggleClass(t.key,t.currentValue)),t.forEachChangedItem(t=>this._toggleClass(t.key,t.currentValue)),t.forEachRemovedItem(t=>{t.previousValue&&this._toggleClass(t.key,!1)})}_applyIterableChanges(t){t.forEachAddedItem(t=>{if("string"!=typeof t.item)throw new Error(`NgClass can only toggle CSS classes expressed as strings, got ${et(t.item)}`);this._toggleClass(t.item,!0)}),t.forEachRemovedItem(t=>this._toggleClass(t.item,!1))}_applyClasses(t){t&&(Array.isArray(t)||t instanceof Set?t.forEach(t=>this._toggleClass(t,!0)):Object.keys(t).forEach(e=>this._toggleClass(e,!!t[e])))}_removeClasses(t){t&&(Array.isArray(t)||t instanceof Set?t.forEach(t=>this._toggleClass(t,!1)):Object.keys(t).forEach(t=>this._toggleClass(t,!1)))}_toggleClass(t,e){(t=t.trim())&&t.split(/\s+/g).forEach(t=>{e?this._renderer.addClass(this._ngEl.nativeElement,t):this._renderer.removeClass(this._ngEl.nativeElement,t)})}}return t.\u0275fac=function(e){return new(e||t)(wo(Wa),wo(Za),wo(Aa),wo(Fa))},t.\u0275dir=Zt({type:t,selectors:[["","ngClass",""]],inputs:{klass:["class","klass"],ngClass:"ngClass"}}),t})();class nh{constructor(t,e,n,r){this.$implicit=t,this.ngForOf=e,this.index=n,this.count=r}get first(){return 0===this.index}get last(){return this.index===this.count-1}get even(){return this.index%2==0}get odd(){return!this.even}}let rh=(()=>{class t{constructor(t,e,n){this._viewContainer=t,this._template=e,this._differs=n,this._ngForOf=null,this._ngForOfDirty=!0,this._differ=null}set ngForOf(t){this._ngForOf=t,this._ngForOfDirty=!0}set ngForTrackBy(t){this._trackByFn=t}get ngForTrackBy(){return this._trackByFn}set ngForTemplate(t){t&&(this._template=t)}ngDoCheck(){if(this._ngForOfDirty){this._ngForOfDirty=!1;const n=this._ngForOf;if(!this._differ&&n)try{this._differ=this._differs.find(n).create(this.ngForTrackBy)}catch(e){throw new Error(`Cannot find a differ supporting object '${n}' of type '${t=n,t.name||typeof t}'. NgFor only supports binding to Iterables such as Arrays.`)}}var t;if(this._differ){const t=this._differ.diff(this._ngForOf);t&&this._applyChanges(t)}}_applyChanges(t){const e=[];t.forEachOperation((t,n,r)=>{if(null==t.previousIndex){const n=this._viewContainer.createEmbeddedView(this._template,new nh(null,this._ngForOf,-1,-1),null===r?void 0:r),s=new sh(t,n);e.push(s)}else if(null==r)this._viewContainer.remove(null===n?void 0:n);else if(null!==n){const s=this._viewContainer.get(n);this._viewContainer.move(s,r);const i=new sh(t,s);e.push(i)}});for(let n=0;n<e.length;n++)this._perViewChange(e[n].view,e[n].record);for(let n=0,r=this._viewContainer.length;n<r;n++){const t=this._viewContainer.get(n);t.context.index=n,t.context.count=r,t.context.ngForOf=this._ngForOf}t.forEachIdentityChange(t=>{this._viewContainer.get(t.currentIndex).context.$implicit=t.item})}_perViewChange(t,e){t.context.$implicit=e.item}static ngTemplateContextGuard(t,e){return!0}}return t.\u0275fac=function(e){return new(e||t)(wo(hl),wo(sl),wo(Wa))},t.\u0275dir=Zt({type:t,selectors:[["","ngFor","","ngForOf",""]],inputs:{ngForOf:"ngForOf",ngForTrackBy:"ngForTrackBy",ngForTemplate:"ngForTemplate"}}),t})();class sh{constructor(t,e){this.record=t,this.view=e}}let ih=(()=>{class t{constructor(t,e){this._viewContainer=t,this._context=new oh,this._thenTemplateRef=null,this._elseTemplateRef=null,this._thenViewRef=null,this._elseViewRef=null,this._thenTemplateRef=e}set ngIf(t){this._context.$implicit=this._context.ngIf=t,this._updateView()}set ngIfThen(t){ah("ngIfThen",t),this._thenTemplateRef=t,this._thenViewRef=null,this._updateView()}set ngIfElse(t){ah("ngIfElse",t),this._elseTemplateRef=t,this._elseViewRef=null,this._updateView()}_updateView(){this._context.$implicit?this._thenViewRef||(this._viewContainer.clear(),this._elseViewRef=null,this._thenTemplateRef&&(this._thenViewRef=this._viewContainer.createEmbeddedView(this._thenTemplateRef,this._context))):this._elseViewRef||(this._viewContainer.clear(),this._thenViewRef=null,this._elseTemplateRef&&(this._elseViewRef=this._viewContainer.createEmbeddedView(this._elseTemplateRef,this._context)))}static ngTemplateContextGuard(t,e){return!0}}return t.\u0275fac=function(e){return new(e||t)(wo(hl),wo(sl))},t.\u0275dir=Zt({type:t,selectors:[["","ngIf",""]],inputs:{ngIf:"ngIf",ngIfThen:"ngIfThen",ngIfElse:"ngIfElse"}}),t})();class oh{constructor(){this.$implicit=null,this.ngIf=null}}function ah(t,e){if(e&&!e.createEmbeddedView)throw new Error(`${t} must be a TemplateRef, but received '${et(e)}'.`)}let lh=(()=>{class t{constructor(t){this._viewContainerRef=t,this._viewRef=null,this.ngTemplateOutletContext=null,this.ngTemplateOutlet=null}ngOnChanges(t){if(t.ngTemplateOutlet){const t=this._viewContainerRef;this._viewRef&&t.remove(t.indexOf(this._viewRef)),this._viewRef=this.ngTemplateOutlet?t.createEmbeddedView(this.ngTemplateOutlet,this.ngTemplateOutletContext):null}else this._viewRef&&t.ngTemplateOutletContext&&this.ngTemplateOutletContext&&(this._viewRef.context=this.ngTemplateOutletContext)}}return t.\u0275fac=function(e){return new(e||t)(wo(hl))},t.\u0275dir=Zt({type:t,selectors:[["","ngTemplateOutlet",""]],inputs:{ngTemplateOutletContext:"ngTemplateOutletContext",ngTemplateOutlet:"ngTemplateOutlet"},features:[le]}),t})();function uh(t,e){return Error(`InvalidPipeArgument: '${e}' for pipe '${et(t)}'`)}const ch=/(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D])\S*/g;let hh=(()=>{class t{transform(e){if(null==e)return null;if("string"!=typeof e)throw uh(t,e);return e.replace(ch,t=>t[0].toUpperCase()+t.substr(1).toLowerCase())}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275pipe=Yt({name:"titlecase",type:t,pure:!0}),t})(),dh=(()=>{class t{constructor(t){this.locale=t}transform(e,n="mediumDate",r,s){if(null==e||""===e||e!=e)return null;try{return Ic(e,n,s||this.locale,r)}catch(i){throw uh(t,i.message)}}}return t.\u0275fac=function(e){return new(e||t)(wo(ru,16))},t.\u0275pipe=Yt({name:"date",type:t,pure:!0}),t})(),ph=(()=>{class t{constructor(t){this._locale=t}transform(e,n,r){if(!gh(e))return null;r=r||this._locale;try{return function(t,e,n){return Yc(t,Kc(_c(e,dc.Decimal),Cc(e,yc.MinusSign)),e,yc.Group,yc.Decimal,n)}(mh(e),r,n)}catch(s){throw uh(t,s.message)}}}return t.\u0275fac=function(e){return new(e||t)(wo(ru,16))},t.\u0275pipe=Yt({name:"number",type:t,pure:!0}),t})(),fh=(()=>{class t{constructor(t,e="USD"){this._locale=t,this._defaultCurrencyCode=e}transform(e,n=this._defaultCurrencyCode,r="symbol",s,i){if(!gh(e))return null;i=i||this._locale,"boolean"==typeof r&&(r=r?"symbol":"code");let o=n||this._defaultCurrencyCode;"code"!==r&&(o="symbol"===r||"symbol-narrow"===r?function(t,e,n="en"){const r=function(t){return aa(t)[ua.Currencies]}(n)[t]||hc[t]||[],s=r[1];return"narrow"===e&&"string"==typeof s?s:r[0]||t}(o,"symbol"===r?"wide":"narrow",i):r);try{return function(t,e,n,r,s){const i=Kc(_c(e,dc.Currency),Cc(e,yc.MinusSign));return i.minFrac=function(t){let e;const n=hc[t];return n&&(e=n[2]),"number"==typeof e?e:2}(r),i.maxFrac=i.minFrac,Yc(t,i,e,yc.CurrencyGroup,yc.CurrencyDecimal,s).replace("\xa4",n).replace("\xa4","").trim()}(mh(e),i,o,n,s)}catch(a){throw uh(t,a.message)}}}return t.\u0275fac=function(e){return new(e||t)(wo(ru,16),wo(su,16))},t.\u0275pipe=Yt({name:"currency",type:t,pure:!0}),t})();function gh(t){return!(null==t||""===t||t!=t)}function mh(t){if("string"==typeof t&&!isNaN(Number(t)-parseFloat(t)))return Number(t);if("number"!=typeof t)throw new Error(`${t} is not a number`);return t}let yh=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[{provide:Xc,useClass:Jc}]}),t})(),vh=(()=>{class t{}return t.\u0275prov=ht({token:t,providedIn:"root",factory:()=>new bh(ar(Gu),window)}),t})();class bh{constructor(t,e){this.document=t,this.window=e,this.offset=()=>[0,0]}setOffset(t){this.offset=Array.isArray(t)?()=>t:t}getScrollPosition(){return this.supportsScrolling()?[this.window.pageXOffset,this.window.pageYOffset]:[0,0]}scrollToPosition(t){this.supportsScrolling()&&this.window.scrollTo(t[0],t[1])}scrollToAnchor(t){if(!this.supportsScrolling())return;const e=function(t,e){const n=t.getElementById(e)||t.getElementsByName(e)[0];if(n)return n;if("function"==typeof t.createTreeWalker&&t.body&&(t.body.createShadowRoot||t.body.attachShadow)){const n=t.createTreeWalker(t.body,NodeFilter.SHOW_ELEMENT);let r=n.currentNode;for(;r;){const t=r.shadowRoot;if(t){const n=t.getElementById(e)||t.querySelector(`[name="${e}"]`);if(n)return n}r=n.nextNode()}}return null}(this.document,t);e&&(this.scrollToElement(e),this.attemptFocus(e))}setHistoryScrollRestoration(t){if(this.supportScrollRestoration()){const e=this.window.history;e&&e.scrollRestoration&&(e.scrollRestoration=t)}}scrollToElement(t){const e=t.getBoundingClientRect(),n=e.left+this.window.pageXOffset,r=e.top+this.window.pageYOffset,s=this.offset();this.window.scrollTo(n-s[0],r-s[1])}attemptFocus(t){return t.focus(),this.document.activeElement===t}supportScrollRestoration(){try{if(!this.supportsScrolling())return!1;const t=wh(this.window.history)||wh(Object.getPrototypeOf(this.window.history));return!(!t||!t.writable&&!t.set)}catch(t){return!1}}supportsScrolling(){try{return!!this.window&&!!this.window.scrollTo&&"pageXOffset"in this.window}catch(t){return!1}}}function wh(t){return Object.getOwnPropertyDescriptor(t,"scrollRestoration")}class Ch{}class _h extends class extends class{}{constructor(){super(...arguments),this.supportsDOMEvents=!0}}{static makeCurrent(){var t;t=new _h,qu||(qu=t)}onAndCancel(t,e,n){return t.addEventListener(e,n,!1),()=>{t.removeEventListener(e,n,!1)}}dispatchEvent(t,e){t.dispatchEvent(e)}remove(t){t.parentNode&&t.parentNode.removeChild(t)}createElement(t,e){return(e=e||this.getDefaultDocument()).createElement(t)}createHtmlDocument(){return document.implementation.createHTMLDocument("fakeTitle")}getDefaultDocument(){return document}isElementNode(t){return t.nodeType===Node.ELEMENT_NODE}isShadowRoot(t){return t instanceof DocumentFragment}getGlobalEventTarget(t,e){return"window"===e?window:"document"===e?t:"body"===e?t.body:null}getBaseHref(t){const e=(Eh=Eh||document.querySelector("base"),Eh?Eh.getAttribute("href"):null);return null==e?null:function(t){Dh=Dh||document.createElement("a"),Dh.setAttribute("href",t);const e=Dh.pathname;return"/"===e.charAt(0)?e:`/${e}`}(e)}resetBaseElement(){Eh=null}getUserAgent(){return window.navigator.userAgent}getCookie(t){return th(document.cookie,t)}}let Dh,Eh=null;const Sh=new $n("TRANSITION_ID"),xh=[{provide:Zl,useFactory:function(t,e,n){return()=>{n.get(Yl).donePromise.then(()=>{const n=Wu();Array.prototype.slice.apply(e.querySelectorAll("style[ng-transition]")).filter(e=>e.getAttribute("ng-transition")===t).forEach(t=>n.remove(t))})}},deps:[Sh,Gu,eo],multi:!0}];class Ah{static init(){!function(t){xu=t}(new Ah)}addToWindow(t){kt.getAngularTestability=(e,n=!0)=>{const r=t.findTestabilityInTree(e,n);if(null==r)throw new Error("Could not find testability for element.");return r},kt.getAllAngularTestabilities=()=>t.getAllTestabilities(),kt.getAllAngularRootElements=()=>t.getAllRootElements(),kt.frameworkStabilizers||(kt.frameworkStabilizers=[]),kt.frameworkStabilizers.push(t=>{const e=kt.getAllAngularTestabilities();let n=e.length,r=!1;const s=function(e){r=r||e,n--,0==n&&t(r)};e.forEach(function(t){t.whenStable(s)})})}findTestabilityInTree(t,e,n){if(null==e)return null;const r=t.getTestability(e);return null!=r?r:n?Wu().isShadowRoot(e)?this.findTestabilityInTree(t,e.host,!0):this.findTestabilityInTree(t,e.parentElement,!0):null}}let Th=(()=>{class t{build(){return new XMLHttpRequest}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const Oh=new $n("EventManagerPlugins");let Fh=(()=>{class t{constructor(t,e){this._zone=e,this._eventNameToPlugin=new Map,t.forEach(t=>t.manager=this),this._plugins=t.slice().reverse()}addEventListener(t,e,n){return this._findPluginFor(e).addEventListener(t,e,n)}addGlobalEventListener(t,e,n){return this._findPluginFor(e).addGlobalEventListener(t,e,n)}getZone(){return this._zone}_findPluginFor(t){const e=this._eventNameToPlugin.get(t);if(e)return e;const n=this._plugins;for(let r=0;r<n.length;r++){const e=n[r];if(e.supports(t))return this._eventNameToPlugin.set(t,e),e}throw new Error(`No event manager plugin found for event ${t}`)}}return t.\u0275fac=function(e){return new(e||t)(ar(Oh),ar(gu))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();class kh{constructor(t){this._doc=t}addGlobalEventListener(t,e,n){const r=Wu().getGlobalEventTarget(this._doc,t);if(!r)throw new Error(`Unsupported event target ${r} for event ${e}`);return this.addEventListener(r,e,n)}}let Ih=(()=>{class t{constructor(){this._stylesSet=new Set}addStyles(t){const e=new Set;t.forEach(t=>{this._stylesSet.has(t)||(this._stylesSet.add(t),e.add(t))}),this.onStylesAdded(e)}onStylesAdded(t){}getAllStyles(){return Array.from(this._stylesSet)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Rh=(()=>{class t extends Ih{constructor(t){super(),this._doc=t,this._hostNodes=new Map,this._hostNodes.set(t.head,[])}_addStylesToHost(t,e,n){t.forEach(t=>{const r=this._doc.createElement("style");r.textContent=t,n.push(e.appendChild(r))})}addHost(t){const e=[];this._addStylesToHost(this._stylesSet,t,e),this._hostNodes.set(t,e)}removeHost(t){const e=this._hostNodes.get(t);e&&e.forEach(Ph),this._hostNodes.delete(t)}onStylesAdded(t){this._hostNodes.forEach((e,n)=>{this._addStylesToHost(t,n,e)})}ngOnDestroy(){this._hostNodes.forEach(t=>t.forEach(Ph))}}return t.\u0275fac=function(e){return new(e||t)(ar(Gu))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function Ph(t){Wu().remove(t)}const Lh={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},Nh=/%COMP%/g;function jh(t,e,n){for(let r=0;r<e.length;r++){let s=e[r];Array.isArray(s)?jh(t,s,n):(s=s.replace(Nh,t),n.push(s))}return n}function Mh(t){return e=>{if("__ngUnwrap__"===e)return t;!1===t(e)&&(e.preventDefault(),e.returnValue=!1)}}let Vh=(()=>{class t{constructor(t,e,n){this.eventManager=t,this.sharedStylesHost=e,this.appId=n,this.rendererByCompId=new Map,this.defaultRenderer=new Bh(t)}createRenderer(t,e){if(!t||!e)return this.defaultRenderer;switch(e.encapsulation){case xt.Emulated:{let n=this.rendererByCompId.get(e.id);return n||(n=new Hh(this.eventManager,this.sharedStylesHost,e,this.appId),this.rendererByCompId.set(e.id,n)),n.applyToHost(t),n}case 1:case xt.ShadowDom:return new Uh(this.eventManager,this.sharedStylesHost,t,e);default:if(!this.rendererByCompId.has(e.id)){const t=jh(e.id,e.styles,[]);this.sharedStylesHost.addStyles(t),this.rendererByCompId.set(e.id,this.defaultRenderer)}return this.defaultRenderer}}begin(){}end(){}}return t.\u0275fac=function(e){return new(e||t)(ar(Fh),ar(Rh),ar(Kl))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();class Bh{constructor(t){this.eventManager=t,this.data=Object.create(null)}destroy(){}createElement(t,e){return e?document.createElementNS(Lh[e]||e,t):document.createElement(t)}createComment(t){return document.createComment(t)}createText(t){return document.createTextNode(t)}appendChild(t,e){t.appendChild(e)}insertBefore(t,e,n){t&&t.insertBefore(e,n)}removeChild(t,e){t&&t.removeChild(e)}selectRootElement(t,e){let n="string"==typeof t?document.querySelector(t):t;if(!n)throw new Error(`The selector "${t}" did not match any elements`);return e||(n.textContent=""),n}parentNode(t){return t.parentNode}nextSibling(t){return t.nextSibling}setAttribute(t,e,n,r){if(r){e=r+":"+e;const s=Lh[r];s?t.setAttributeNS(s,e,n):t.setAttribute(e,n)}else t.setAttribute(e,n)}removeAttribute(t,e,n){if(n){const r=Lh[n];r?t.removeAttributeNS(r,e):t.removeAttribute(`${n}:${e}`)}else t.removeAttribute(e)}addClass(t,e){t.classList.add(e)}removeClass(t,e){t.classList.remove(e)}setStyle(t,e,n,r){r&(is.DashCase|is.Important)?t.style.setProperty(e,n,r&is.Important?"important":""):t.style[e]=n}removeStyle(t,e,n){n&is.DashCase?t.style.removeProperty(e):t.style[e]=""}setProperty(t,e,n){t[e]=n}setValue(t,e){t.nodeValue=e}listen(t,e,n){return"string"==typeof t?this.eventManager.addGlobalEventListener(t,e,Mh(n)):this.eventManager.addEventListener(t,e,Mh(n))}}class Hh extends Bh{constructor(t,e,n,r){super(t),this.component=n;const s=jh(r+"-"+n.id,n.styles,[]);e.addStyles(s),this.contentAttr="_ngcontent-%COMP%".replace(Nh,r+"-"+n.id),this.hostAttr="_nghost-%COMP%".replace(Nh,r+"-"+n.id)}applyToHost(t){super.setAttribute(t,this.hostAttr,"")}createElement(t,e){const n=super.createElement(t,e);return super.setAttribute(n,this.contentAttr,""),n}}class Uh extends Bh{constructor(t,e,n,r){super(t),this.sharedStylesHost=e,this.hostEl=n,this.shadowRoot=n.attachShadow({mode:"open"}),this.sharedStylesHost.addHost(this.shadowRoot);const s=jh(r.id,r.styles,[]);for(let i=0;i<s.length;i++){const t=document.createElement("style");t.textContent=s[i],this.shadowRoot.appendChild(t)}}nodeOrShadowRoot(t){return t===this.hostEl?this.shadowRoot:t}destroy(){this.sharedStylesHost.removeHost(this.shadowRoot)}appendChild(t,e){return super.appendChild(this.nodeOrShadowRoot(t),e)}insertBefore(t,e,n){return super.insertBefore(this.nodeOrShadowRoot(t),e,n)}removeChild(t,e){return super.removeChild(this.nodeOrShadowRoot(t),e)}parentNode(t){return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(t)))}}let $h=(()=>{class t extends kh{constructor(t){super(t)}supports(t){return!0}addEventListener(t,e,n){return t.addEventListener(e,n,!1),()=>this.removeEventListener(t,e,n)}removeEventListener(t,e,n){return t.removeEventListener(e,n)}}return t.\u0275fac=function(e){return new(e||t)(ar(Gu))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const zh=["alt","control","meta","shift"],qh={"\b":"Backspace","\t":"Tab","\x7f":"Delete","\x1b":"Escape",Del:"Delete",Esc:"Escape",Left:"ArrowLeft",Right:"ArrowRight",Up:"ArrowUp",Down:"ArrowDown",Menu:"ContextMenu",Scroll:"ScrollLock",Win:"OS"},Wh={A:"1",B:"2",C:"3",D:"4",E:"5",F:"6",G:"7",H:"8",I:"9",J:"*",K:"+",M:"-",N:".",O:"/","`":"0","\x90":"NumLock"},Gh={alt:t=>t.altKey,control:t=>t.ctrlKey,meta:t=>t.metaKey,shift:t=>t.shiftKey};let Zh=(()=>{class t extends kh{constructor(t){super(t)}supports(e){return null!=t.parseEventName(e)}addEventListener(e,n,r){const s=t.parseEventName(n),i=t.eventCallback(s.fullKey,r,this.manager.getZone());return this.manager.getZone().runOutsideAngular(()=>Wu().onAndCancel(e,s.domEventName,i))}static parseEventName(e){const n=e.toLowerCase().split("."),r=n.shift();if(0===n.length||"keydown"!==r&&"keyup"!==r)return null;const s=t._normalizeKey(n.pop());let i="";if(zh.forEach(t=>{const e=n.indexOf(t);e>-1&&(n.splice(e,1),i+=t+".")}),i+=s,0!=n.length||0===s.length)return null;const o={};return o.domEventName=r,o.fullKey=i,o}static getEventFullKey(t){let e="",n=function(t){let e=t.key;if(null==e){if(e=t.keyIdentifier,null==e)return"Unidentified";e.startsWith("U+")&&(e=String.fromCharCode(parseInt(e.substring(2),16)),3===t.location&&Wh.hasOwnProperty(e)&&(e=Wh[e]))}return qh[e]||e}(t);return n=n.toLowerCase()," "===n?n="space":"."===n&&(n="dot"),zh.forEach(r=>{r!=n&&(0,Gh[r])(t)&&(e+=r+".")}),e+=n,e}static eventCallback(e,n,r){return s=>{t.getEventFullKey(s)===e&&r.runGuarded(()=>n(s))}}static _normalizeKey(t){switch(t){case"esc":return"escape";default:return t}}}return t.\u0275fac=function(e){return new(e||t)(ar(Gu))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Yh=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:function(){return ar(Qh)},token:t,providedIn:"root"}),t})();function Kh(t){return new Qh(t.get(Gu))}let Qh=(()=>{class t extends Yh{constructor(t){super(),this._doc=t}sanitize(t,e){if(null==e)return null;switch(t){case Yr.NONE:return e;case Yr.HTML:return Er(e,"HTML")?Dr(e):Gr(this._doc,String(e)).toString();case Yr.STYLE:return Er(e,"Style")?Dr(e):e;case Yr.SCRIPT:if(Er(e,"Script"))return Dr(e);throw new Error("unsafe value used in a script context");case Yr.URL:return Sr(e),Er(e,"URL")?Dr(e):Fr(String(e));case Yr.RESOURCE_URL:if(Er(e,"ResourceURL"))return Dr(e);throw new Error("unsafe value used in a resource URL context (see https://g.co/ng/security#xss)");default:throw new Error(`Unexpected SecurityContext ${t} (see https://g.co/ng/security#xss)`)}}bypassSecurityTrustHtml(t){return new vr(t)}bypassSecurityTrustStyle(t){return new br(t)}bypassSecurityTrustScript(t){return new wr(t)}bypassSecurityTrustUrl(t){return new Cr(t)}bypassSecurityTrustResourceUrl(t){return new _r(t)}}return t.\u0275fac=function(e){return new(e||t)(ar(Gu))},t.\u0275prov=ht({factory:function(){return Kh(ar(Bi))},token:t,providedIn:"root"}),t})();const Xh=ku(Uu,"browser",[{provide:tu,useValue:"browser"},{provide:Jl,useValue:function(){_h.makeCurrent(),Ah.init()},multi:!0},{provide:Gu,useFactory:function(){return function(t){pe=t}(document),document},deps:[]}]),Jh=[[],{provide:Ui,useValue:"root"},{provide:ns,useFactory:function(){return new ns},deps:[]},{provide:Oh,useClass:$h,multi:!0,deps:[Gu,gu,tu]},{provide:Oh,useClass:Zh,multi:!0,deps:[Gu]},[],{provide:Vh,useClass:Vh,deps:[Fh,Rh,Kl]},{provide:Oa,useExisting:Vh},{provide:Ih,useExisting:Rh},{provide:Rh,useClass:Rh,deps:[Gu]},{provide:_u,useClass:_u,deps:[gu]},{provide:Fh,useClass:Fh,deps:[Oh,gu]},{provide:Ch,useClass:Th,deps:[]},[]];let td=(()=>{class t{constructor(t){if(t)throw new Error("BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.")}static withServerTransition(e){return{ngModule:t,providers:[{provide:Kl,useValue:e.appId},{provide:Sh,useExisting:Kl},xh]}}}return t.\u0275fac=function(e){return new(e||t)(ar(t,12))},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:Jh,imports:[yh,zu]}),t})();function ed(...t){let e=t[t.length-1];return S(e)?(t.pop(),L(t,e)):z(t)}function nd(t,e){return B(t,e,1)}function rd(t,e){return function(n){return n.lift(new sd(t,e))}}"undefined"!=typeof window&&window;class sd{constructor(t,e){this.predicate=t,this.thisArg=e}call(t,e){return e.subscribe(new id(t,this.predicate,this.thisArg))}}class id extends f{constructor(t,e,n){super(t),this.predicate=e,this.thisArg=n,this.count=0}_next(t){let e;try{e=this.predicate.call(this.thisArg,t,this.count++)}catch(n){return void this.destination.error(n)}e&&this.destination.next(t)}}class od{}class ad{}class ld{constructor(t){this.normalizedNames=new Map,this.lazyUpdate=null,t?this.lazyInit="string"==typeof t?()=>{this.headers=new Map,t.split("\n").forEach(t=>{const e=t.indexOf(":");if(e>0){const n=t.slice(0,e),r=n.toLowerCase(),s=t.slice(e+1).trim();this.maybeSetNormalizedName(n,r),this.headers.has(r)?this.headers.get(r).push(s):this.headers.set(r,[s])}})}:()=>{this.headers=new Map,Object.keys(t).forEach(e=>{let n=t[e];const r=e.toLowerCase();"string"==typeof n&&(n=[n]),n.length>0&&(this.headers.set(r,n),this.maybeSetNormalizedName(e,r))})}:this.headers=new Map}has(t){return this.init(),this.headers.has(t.toLowerCase())}get(t){this.init();const e=this.headers.get(t.toLowerCase());return e&&e.length>0?e[0]:null}keys(){return this.init(),Array.from(this.normalizedNames.values())}getAll(t){return this.init(),this.headers.get(t.toLowerCase())||null}append(t,e){return this.clone({name:t,value:e,op:"a"})}set(t,e){return this.clone({name:t,value:e,op:"s"})}delete(t,e){return this.clone({name:t,value:e,op:"d"})}maybeSetNormalizedName(t,e){this.normalizedNames.has(e)||this.normalizedNames.set(e,t)}init(){this.lazyInit&&(this.lazyInit instanceof ld?this.copyFrom(this.lazyInit):this.lazyInit(),this.lazyInit=null,this.lazyUpdate&&(this.lazyUpdate.forEach(t=>this.applyUpdate(t)),this.lazyUpdate=null))}copyFrom(t){t.init(),Array.from(t.headers.keys()).forEach(e=>{this.headers.set(e,t.headers.get(e)),this.normalizedNames.set(e,t.normalizedNames.get(e))})}clone(t){const e=new ld;return e.lazyInit=this.lazyInit&&this.lazyInit instanceof ld?this.lazyInit:this,e.lazyUpdate=(this.lazyUpdate||[]).concat([t]),e}applyUpdate(t){const e=t.name.toLowerCase();switch(t.op){case"a":case"s":let n=t.value;if("string"==typeof n&&(n=[n]),0===n.length)return;this.maybeSetNormalizedName(t.name,e);const r=("a"===t.op?this.headers.get(e):void 0)||[];r.push(...n),this.headers.set(e,r);break;case"d":const s=t.value;if(s){let t=this.headers.get(e);if(!t)return;t=t.filter(t=>-1===s.indexOf(t)),0===t.length?(this.headers.delete(e),this.normalizedNames.delete(e)):this.headers.set(e,t)}else this.headers.delete(e),this.normalizedNames.delete(e)}}forEach(t){this.init(),Array.from(this.normalizedNames.keys()).forEach(e=>t(this.normalizedNames.get(e),this.headers.get(e)))}}class ud{encodeKey(t){return cd(t)}encodeValue(t){return cd(t)}decodeKey(t){return decodeURIComponent(t)}decodeValue(t){return decodeURIComponent(t)}}function cd(t){return encodeURIComponent(t).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/gi,"$").replace(/%2C/gi,",").replace(/%3B/gi,";").replace(/%2B/gi,"+").replace(/%3D/gi,"=").replace(/%3F/gi,"?").replace(/%2F/gi,"/")}function hd(t){return`${t}`}class dd{constructor(t={}){if(this.updates=null,this.cloneFrom=null,this.encoder=t.encoder||new ud,t.fromString){if(t.fromObject)throw new Error("Cannot specify both fromString and fromObject.");this.map=function(t,e){const n=new Map;return t.length>0&&t.replace(/^\?/,"").split("&").forEach(t=>{const r=t.indexOf("="),[s,i]=-1==r?[e.decodeKey(t),""]:[e.decodeKey(t.slice(0,r)),e.decodeValue(t.slice(r+1))],o=n.get(s)||[];o.push(i),n.set(s,o)}),n}(t.fromString,this.encoder)}else t.fromObject?(this.map=new Map,Object.keys(t.fromObject).forEach(e=>{const n=t.fromObject[e];this.map.set(e,Array.isArray(n)?n:[n])})):this.map=null}has(t){return this.init(),this.map.has(t)}get(t){this.init();const e=this.map.get(t);return e?e[0]:null}getAll(t){return this.init(),this.map.get(t)||null}keys(){return this.init(),Array.from(this.map.keys())}append(t,e){return this.clone({param:t,value:e,op:"a"})}appendAll(t){const e=[];return Object.keys(t).forEach(n=>{const r=t[n];Array.isArray(r)?r.forEach(t=>{e.push({param:n,value:t,op:"a"})}):e.push({param:n,value:r,op:"a"})}),this.clone(e)}set(t,e){return this.clone({param:t,value:e,op:"s"})}delete(t,e){return this.clone({param:t,value:e,op:"d"})}toString(){return this.init(),this.keys().map(t=>{const e=this.encoder.encodeKey(t);return this.map.get(t).map(t=>e+"="+this.encoder.encodeValue(t)).join("&")}).filter(t=>""!==t).join("&")}clone(t){const e=new dd({encoder:this.encoder});return e.cloneFrom=this.cloneFrom||this,e.updates=(this.updates||[]).concat(t),e}init(){null===this.map&&(this.map=new Map),null!==this.cloneFrom&&(this.cloneFrom.init(),this.cloneFrom.keys().forEach(t=>this.map.set(t,this.cloneFrom.map.get(t))),this.updates.forEach(t=>{switch(t.op){case"a":case"s":const e=("a"===t.op?this.map.get(t.param):void 0)||[];e.push(hd(t.value)),this.map.set(t.param,e);break;case"d":if(void 0===t.value){this.map.delete(t.param);break}{let e=this.map.get(t.param)||[];const n=e.indexOf(hd(t.value));-1!==n&&e.splice(n,1),e.length>0?this.map.set(t.param,e):this.map.delete(t.param)}}}),this.cloneFrom=this.updates=null)}}class pd{constructor(){this.map=new Map}set(t,e){return this.map.set(t,e),this}get(t){return this.map.has(t)||this.map.set(t,t.defaultValue()),this.map.get(t)}delete(t){return this.map.delete(t),this}keys(){return this.map.keys()}}function fd(t){return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer}function gd(t){return"undefined"!=typeof Blob&&t instanceof Blob}function md(t){return"undefined"!=typeof FormData&&t instanceof FormData}class yd{constructor(t,e,n,r){let s;if(this.url=e,this.body=null,this.reportProgress=!1,this.withCredentials=!1,this.responseType="json",this.method=t.toUpperCase(),function(t){switch(t){case"DELETE":case"GET":case"HEAD":case"OPTIONS":case"JSONP":return!1;default:return!0}}(this.method)||r?(this.body=void 0!==n?n:null,s=r):s=n,s&&(this.reportProgress=!!s.reportProgress,this.withCredentials=!!s.withCredentials,s.responseType&&(this.responseType=s.responseType),s.headers&&(this.headers=s.headers),s.context&&(this.context=s.context),s.params&&(this.params=s.params)),this.headers||(this.headers=new ld),this.context||(this.context=new pd),this.params){const t=this.params.toString();if(0===t.length)this.urlWithParams=e;else{const n=e.indexOf("?");this.urlWithParams=e+(-1===n?"?":n<e.length-1?"&":"")+t}}else this.params=new dd,this.urlWithParams=e}serializeBody(){return null===this.body?null:fd(this.body)||gd(this.body)||md(this.body)||"string"==typeof this.body?this.body:this.body instanceof dd?this.body.toString():"object"==typeof this.body||"boolean"==typeof this.body||Array.isArray(this.body)?JSON.stringify(this.body):this.body.toString()}detectContentTypeHeader(){return null===this.body||md(this.body)?null:gd(this.body)?this.body.type||null:fd(this.body)?null:"string"==typeof this.body?"text/plain":this.body instanceof dd?"application/x-www-form-urlencoded;charset=UTF-8":"object"==typeof this.body||"number"==typeof this.body||"boolean"==typeof this.body?"application/json":null}clone(t={}){var e;const n=t.method||this.method,r=t.url||this.url,s=t.responseType||this.responseType,i=void 0!==t.body?t.body:this.body,o=void 0!==t.withCredentials?t.withCredentials:this.withCredentials,a=void 0!==t.reportProgress?t.reportProgress:this.reportProgress;let l=t.headers||this.headers,u=t.params||this.params;const c=null!==(e=t.context)&&void 0!==e?e:this.context;return void 0!==t.setHeaders&&(l=Object.keys(t.setHeaders).reduce((e,n)=>e.set(n,t.setHeaders[n]),l)),t.setParams&&(u=Object.keys(t.setParams).reduce((e,n)=>e.set(n,t.setParams[n]),u)),new yd(n,r,i,{params:u,headers:l,context:c,reportProgress:a,responseType:s,withCredentials:o})}}var vd=function(t){return t[t.Sent=0]="Sent",t[t.UploadProgress=1]="UploadProgress",t[t.ResponseHeader=2]="ResponseHeader",t[t.DownloadProgress=3]="DownloadProgress",t[t.Response=4]="Response",t[t.User=5]="User",t}({});class bd{constructor(t,e=200,n="OK"){this.headers=t.headers||new ld,this.status=void 0!==t.status?t.status:e,this.statusText=t.statusText||n,this.url=t.url||null,this.ok=this.status>=200&&this.status<300}}class wd extends bd{constructor(t={}){super(t),this.type=vd.ResponseHeader}clone(t={}){return new wd({headers:t.headers||this.headers,status:void 0!==t.status?t.status:this.status,statusText:t.statusText||this.statusText,url:t.url||this.url||void 0})}}class Cd extends bd{constructor(t={}){super(t),this.type=vd.Response,this.body=void 0!==t.body?t.body:null}clone(t={}){return new Cd({body:void 0!==t.body?t.body:this.body,headers:t.headers||this.headers,status:void 0!==t.status?t.status:this.status,statusText:t.statusText||this.statusText,url:t.url||this.url||void 0})}}class _d extends bd{constructor(t){super(t,0,"Unknown Error"),this.name="HttpErrorResponse",this.ok=!1,this.message=this.status>=200&&this.status<300?`Http failure during parsing for ${t.url||"(unknown url)"}`:`Http failure response for ${t.url||"(unknown url)"}: ${t.status} ${t.statusText}`,this.error=t.error||null}}function Dd(t,e){return{body:e,headers:t.headers,context:t.context,observe:t.observe,params:t.params,reportProgress:t.reportProgress,responseType:t.responseType,withCredentials:t.withCredentials}}let Ed=(()=>{class t{constructor(t){this.handler=t}request(t,e,n={}){let r;if(t instanceof yd)r=t;else{let s,i;s=n.headers instanceof ld?n.headers:new ld(n.headers),n.params&&(i=n.params instanceof dd?n.params:new dd({fromObject:n.params})),r=new yd(t,e,void 0!==n.body?n.body:null,{headers:s,context:n.context,params:i,reportProgress:n.reportProgress,responseType:n.responseType||"json",withCredentials:n.withCredentials})}const s=ed(r).pipe(nd(t=>this.handler.handle(t)));if(t instanceof yd||"events"===n.observe)return s;const i=s.pipe(rd(t=>t instanceof Cd));switch(n.observe||"body"){case"body":switch(r.responseType){case"arraybuffer":return i.pipe(x(t=>{if(null!==t.body&&!(t.body instanceof ArrayBuffer))throw new Error("Response is not an ArrayBuffer.");return t.body}));case"blob":return i.pipe(x(t=>{if(null!==t.body&&!(t.body instanceof Blob))throw new Error("Response is not a Blob.");return t.body}));case"text":return i.pipe(x(t=>{if(null!==t.body&&"string"!=typeof t.body)throw new Error("Response is not a string.");return t.body}));case"json":default:return i.pipe(x(t=>t.body))}case"response":return i;default:throw new Error(`Unreachable: unhandled observe type ${n.observe}}`)}}delete(t,e={}){return this.request("DELETE",t,e)}get(t,e={}){return this.request("GET",t,e)}head(t,e={}){return this.request("HEAD",t,e)}jsonp(t,e){return this.request("JSONP",t,{params:(new dd).append(e,"JSONP_CALLBACK"),observe:"body",responseType:"json"})}options(t,e={}){return this.request("OPTIONS",t,e)}patch(t,e,n={}){return this.request("PATCH",t,Dd(n,e))}post(t,e,n={}){return this.request("POST",t,Dd(n,e))}put(t,e,n={}){return this.request("PUT",t,Dd(n,e))}}return t.\u0275fac=function(e){return new(e||t)(ar(od))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();class Sd{constructor(t,e){this.next=t,this.interceptor=e}handle(t){return this.interceptor.intercept(t,this.next)}}const xd=new $n("HTTP_INTERCEPTORS");let Ad=(()=>{class t{intercept(t,e){return e.handle(t)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const Td=/^\)\]\}',?\n/;let Od=(()=>{class t{constructor(t){this.xhrFactory=t}handle(t){if("JSONP"===t.method)throw new Error("Attempted to construct Jsonp request without HttpClientJsonpModule installed.");return new v(e=>{const n=this.xhrFactory.build();if(n.open(t.method,t.urlWithParams),t.withCredentials&&(n.withCredentials=!0),t.headers.forEach((t,e)=>n.setRequestHeader(t,e.join(","))),t.headers.has("Accept")||n.setRequestHeader("Accept","application/json, text/plain, */*"),!t.headers.has("Content-Type")){const e=t.detectContentTypeHeader();null!==e&&n.setRequestHeader("Content-Type",e)}if(t.responseType){const e=t.responseType.toLowerCase();n.responseType="json"!==e?e:"text"}const r=t.serializeBody();let s=null;const i=()=>{if(null!==s)return s;const e=1223===n.status?204:n.status,r=n.statusText||"OK",i=new ld(n.getAllResponseHeaders()),o=function(t){return"responseURL"in t&&t.responseURL?t.responseURL:/^X-Request-URL:/m.test(t.getAllResponseHeaders())?t.getResponseHeader("X-Request-URL"):null}(n)||t.url;return s=new wd({headers:i,status:e,statusText:r,url:o}),s},o=()=>{let{headers:r,status:s,statusText:o,url:a}=i(),l=null;204!==s&&(l=void 0===n.response?n.responseText:n.response),0===s&&(s=l?200:0);let u=s>=200&&s<300;if("json"===t.responseType&&"string"==typeof l){const t=l;l=l.replace(Td,"");try{l=""!==l?JSON.parse(l):null}catch(c){l=t,u&&(u=!1,l={error:c,text:l})}}u?(e.next(new Cd({body:l,headers:r,status:s,statusText:o,url:a||void 0})),e.complete()):e.error(new _d({error:l,headers:r,status:s,statusText:o,url:a||void 0}))},a=t=>{const{url:r}=i(),s=new _d({error:t,status:n.status||0,statusText:n.statusText||"Unknown Error",url:r||void 0});e.error(s)};let l=!1;const u=r=>{l||(e.next(i()),l=!0);let s={type:vd.DownloadProgress,loaded:r.loaded};r.lengthComputable&&(s.total=r.total),"text"===t.responseType&&n.responseText&&(s.partialText=n.responseText),e.next(s)},c=t=>{let n={type:vd.UploadProgress,loaded:t.loaded};t.lengthComputable&&(n.total=t.total),e.next(n)};return n.addEventListener("load",o),n.addEventListener("error",a),n.addEventListener("timeout",a),n.addEventListener("abort",a),t.reportProgress&&(n.addEventListener("progress",u),null!==r&&n.upload&&n.upload.addEventListener("progress",c)),n.send(r),e.next({type:vd.Sent}),()=>{n.removeEventListener("error",a),n.removeEventListener("abort",a),n.removeEventListener("load",o),n.removeEventListener("timeout",a),t.reportProgress&&(n.removeEventListener("progress",u),null!==r&&n.upload&&n.upload.removeEventListener("progress",c)),n.readyState!==n.DONE&&n.abort()}})}}return t.\u0275fac=function(e){return new(e||t)(ar(Ch))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const Fd=new $n("XSRF_COOKIE_NAME"),kd=new $n("XSRF_HEADER_NAME");class Id{}let Rd=(()=>{class t{constructor(t,e,n){this.doc=t,this.platform=e,this.cookieName=n,this.lastCookieString="",this.lastToken=null,this.parseCount=0}getToken(){if("server"===this.platform)return null;const t=this.doc.cookie||"";return t!==this.lastCookieString&&(this.parseCount++,this.lastToken=th(t,this.cookieName),this.lastCookieString=t),this.lastToken}}return t.\u0275fac=function(e){return new(e||t)(ar(Gu),ar(tu),ar(Fd))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Pd=(()=>{class t{constructor(t,e){this.tokenService=t,this.headerName=e}intercept(t,e){const n=t.url.toLowerCase();if("GET"===t.method||"HEAD"===t.method||n.startsWith("http://")||n.startsWith("https://"))return e.handle(t);const r=this.tokenService.getToken();return null===r||t.headers.has(this.headerName)||(t=t.clone({headers:t.headers.set(this.headerName,r)})),e.handle(t)}}return t.\u0275fac=function(e){return new(e||t)(ar(Id),ar(kd))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Ld=(()=>{class t{constructor(t,e){this.backend=t,this.injector=e,this.chain=null}handle(t){if(null===this.chain){const t=this.injector.get(xd,[]);this.chain=t.reduceRight((t,e)=>new Sd(t,e),this.backend)}return this.chain.handle(t)}}return t.\u0275fac=function(e){return new(e||t)(ar(ad),ar(eo))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Nd=(()=>{class t{static disable(){return{ngModule:t,providers:[{provide:Pd,useClass:Ad}]}}static withOptions(e={}){return{ngModule:t,providers:[e.cookieName?{provide:Fd,useValue:e.cookieName}:[],e.headerName?{provide:kd,useValue:e.headerName}:[]]}}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[Pd,{provide:xd,useExisting:Pd,multi:!0},{provide:Id,useClass:Rd},{provide:Fd,useValue:"XSRF-TOKEN"},{provide:kd,useValue:"X-XSRF-TOKEN"}]}),t})(),jd=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[Ed,{provide:od,useClass:Ld},Od,{provide:ad,useExisting:Od}],imports:[[Nd.withOptions({cookieName:"XSRF-TOKEN",headerName:"X-XSRF-TOKEN"})]]}),t})();class Md extends h{constructor(t,e){super()}schedule(t,e=0){return this}}class Vd extends Md{constructor(t,e){super(t,e),this.scheduler=t,this.work=e,this.pending=!1}schedule(t,e=0){if(this.closed)return this;this.state=t;const n=this.id,r=this.scheduler;return null!=n&&(this.id=this.recycleAsyncId(r,n,e)),this.pending=!0,this.delay=e,this.id=this.id||this.requestAsyncId(r,this.id,e),this}requestAsyncId(t,e,n=0){return setInterval(t.flush.bind(t,this),n)}recycleAsyncId(t,e,n=0){if(null!==n&&this.delay===n&&!1===this.pending)return e;clearInterval(e)}execute(t,e){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;const n=this._execute(t,e);if(n)return n;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))}_execute(t,e){let n,r=!1;try{this.work(t)}catch(s){r=!0,n=!!s&&s||new Error(s)}if(r)return this.unsubscribe(),n}_unsubscribe(){const t=this.id,e=this.scheduler,n=e.actions,r=n.indexOf(this);this.work=null,this.state=null,this.pending=!1,this.scheduler=null,-1!==r&&n.splice(r,1),null!=t&&(this.id=this.recycleAsyncId(e,t,null)),this.delay=null}}class Bd extends Vd{constructor(t,e){super(t,e),this.scheduler=t,this.work=e}schedule(t,e=0){return e>0?super.schedule(t,e):(this.delay=e,this.state=t,this.scheduler.flush(this),this)}execute(t,e){return e>0||this.closed?super.execute(t,e):this._execute(t,e)}requestAsyncId(t,e,n=0){return null!==n&&n>0||null===n&&this.delay>0?super.requestAsyncId(t,e,n):t.flush(this)}}let Hd=(()=>{class t{constructor(e,n=t.now){this.SchedulerAction=e,this.now=n}schedule(t,e=0,n){return new this.SchedulerAction(this,t).schedule(n,e)}}return t.now=()=>Date.now(),t})();class Ud extends Hd{constructor(t,e=Hd.now){super(t,()=>Ud.delegate&&Ud.delegate!==this?Ud.delegate.now():e()),this.actions=[],this.active=!1,this.scheduled=void 0}schedule(t,e=0,n){return Ud.delegate&&Ud.delegate!==this?Ud.delegate.schedule(t,e,n):super.schedule(t,e,n)}flush(t){const{actions:e}=this;if(this.active)return void e.push(t);let n;this.active=!0;do{if(n=t.execute(t.state,t.delay))break}while(t=e.shift());if(this.active=!1,n){for(;t=e.shift();)t.unsubscribe();throw n}}}class $d extends Ud{}const zd=new $d(Bd),qd=new v(t=>t.complete());function Wd(t){return t?function(t){return new v(e=>t.schedule(()=>e.complete()))}(t):qd}function Gd(t,e){return new v(e?n=>e.schedule(Zd,0,{error:t,subscriber:n}):e=>e.error(t))}function Zd({error:t,subscriber:e}){e.error(t)}let Yd=(()=>{class t{constructor(t,e,n){this.kind=t,this.value=e,this.error=n,this.hasValue="N"===t}observe(t){switch(this.kind){case"N":return t.next&&t.next(this.value);case"E":return t.error&&t.error(this.error);case"C":return t.complete&&t.complete()}}do(t,e,n){switch(this.kind){case"N":return t&&t(this.value);case"E":return e&&e(this.error);case"C":return n&&n()}}accept(t,e,n){return t&&"function"==typeof t.next?this.observe(t):this.do(t,e,n)}toObservable(){switch(this.kind){case"N":return ed(this.value);case"E":return Gd(this.error);case"C":return Wd()}throw new Error("unexpected notification kind value")}static createNext(e){return void 0!==e?new t("N",e):t.undefinedValueNotification}static createError(e){return new t("E",void 0,e)}static createComplete(){return t.completeNotification}}return t.completeNotification=new t("C"),t.undefinedValueNotification=new t("N",void 0),t})();class Kd extends f{constructor(t,e,n=0){super(t),this.scheduler=e,this.delay=n}static dispatch(t){const{notification:e,destination:n}=t;e.observe(n),this.unsubscribe()}scheduleMessage(t){this.destination.add(this.scheduler.schedule(Kd.dispatch,this.delay,new Qd(t,this.destination)))}_next(t){this.scheduleMessage(Yd.createNext(t))}_error(t){this.scheduleMessage(Yd.createError(t)),this.unsubscribe()}_complete(){this.scheduleMessage(Yd.createComplete()),this.unsubscribe()}}class Qd{constructor(t,e){this.notification=t,this.destination=e}}class Xd extends D{constructor(t=Number.POSITIVE_INFINITY,e=Number.POSITIVE_INFINITY,n){super(),this.scheduler=n,this._events=[],this._infiniteTimeWindow=!1,this._bufferSize=t<1?1:t,this._windowTime=e<1?1:e,e===Number.POSITIVE_INFINITY?(this._infiniteTimeWindow=!0,this.next=this.nextInfiniteTimeWindow):this.next=this.nextTimeWindow}nextInfiniteTimeWindow(t){if(!this.isStopped){const e=this._events;e.push(t),e.length>this._bufferSize&&e.shift()}super.next(t)}nextTimeWindow(t){this.isStopped||(this._events.push(new Jd(this._getNow(),t)),this._trimBufferThenGetEvents()),super.next(t)}_subscribe(t){const e=this._infiniteTimeWindow,n=e?this._events:this._trimBufferThenGetEvents(),r=this.scheduler,s=n.length;let i;if(this.closed)throw new w;if(this.isStopped||this.hasError?i=h.EMPTY:(this.observers.push(t),i=new C(this,t)),r&&t.add(t=new Kd(t,r)),e)for(let o=0;o<s&&!t.closed;o++)t.next(n[o]);else for(let o=0;o<s&&!t.closed;o++)t.next(n[o].value);return this.hasError?t.error(this.thrownError):this.isStopped&&t.complete(),i}_getNow(){return(this.scheduler||zd).now()}_trimBufferThenGetEvents(){const t=this._getNow(),e=this._bufferSize,n=this._windowTime,r=this._events,s=r.length;let i=0;for(;i<s&&!(t-r[i].time<n);)i++;return s>e&&(i=Math.max(i,s-e)),i>0&&r.splice(0,i),r}}class Jd{constructor(t,e){this.time=t,this.value=e}}function tp(t,e){return"function"==typeof e?n=>n.pipe(tp((n,r)=>N(t(n,r)).pipe(x((t,s)=>e(n,t,r,s))))):e=>e.lift(new ep(t))}class ep{constructor(t){this.project=t}call(t,e){return e.subscribe(new np(t,this.project))}}class np extends M{constructor(t,e){super(t),this.project=e,this.index=0}_next(t){let e;const n=this.index++;try{e=this.project(t,n)}catch(r){return void this.destination.error(r)}this._innerSub(e)}_innerSub(t){const e=this.innerSubscription;e&&e.unsubscribe();const n=new j(this),r=this.destination;r.add(n),this.innerSubscription=V(t,n),this.innerSubscription!==n&&r.add(this.innerSubscription)}_complete(){const{innerSubscription:t}=this;t&&!t.closed||super._complete(),this.unsubscribe()}_unsubscribe(){this.innerSubscription=void 0}notifyComplete(){this.innerSubscription=void 0,this.isStopped&&super._complete()}notifyNext(t){this.destination.next(t)}}const rp={schedule(t,e){const n=setTimeout(t,e);return()=>clearTimeout(n)},scheduleBeforeRender(t){if("undefined"==typeof window)return rp.schedule(t,0);if(void 0===window.requestAnimationFrame)return rp.schedule(t,16);const e=window.requestAnimationFrame(t);return()=>window.cancelAnimationFrame(e)}};let sp;function ip(t,e,n){let r=n;return function(t){return!!t&&t.nodeType===Node.ELEMENT_NODE}(t)&&e.some((e,n)=>!("*"===e||!function(t,e){if(!sp){const t=Element.prototype;sp=t.matches||t.matchesSelector||t.mozMatchesSelector||t.msMatchesSelector||t.oMatchesSelector||t.webkitMatchesSelector}return t.nodeType===Node.ELEMENT_NODE&&sp.call(t,e)}(t,e)||(r=n,0))),r}class op{constructor(t,e){this.componentFactory=e.get(Da).resolveComponentFactory(t)}create(t){return new ap(this.componentFactory,t)}}class ap{constructor(t,e){this.componentFactory=t,this.injector=e,this.eventEmitters=new Xd(1),this.events=this.eventEmitters.pipe(tp(t=>q(...t))),this.componentRef=null,this.viewChangeDetectorRef=null,this.inputChanges=null,this.hasInputChanges=!1,this.implementsOnChanges=!1,this.scheduledChangeDetectionFn=null,this.scheduledDestroyFn=null,this.initialInputValues=new Map,this.unchangedInputs=new Set(this.componentFactory.inputs.map(({propName:t})=>t)),this.ngZone=this.injector.get(gu),this.elementZone="undefined"==typeof Zone?null:this.ngZone.run(()=>Zone.current)}connect(t){this.runInZone(()=>{if(null!==this.scheduledDestroyFn)return this.scheduledDestroyFn(),void(this.scheduledDestroyFn=null);null===this.componentRef&&this.initializeComponent(t)})}disconnect(){this.runInZone(()=>{null!==this.componentRef&&null===this.scheduledDestroyFn&&(this.scheduledDestroyFn=rp.schedule(()=>{null!==this.componentRef&&(this.componentRef.destroy(),this.componentRef=null,this.viewChangeDetectorRef=null)},10))})}getInputValue(t){return this.runInZone(()=>null===this.componentRef?this.initialInputValues.get(t):this.componentRef.instance[t])}setInputValue(t,e){this.runInZone(()=>{var n,r;null!==this.componentRef?((n=e)!==(r=this.getInputValue(t))&&(n==n||r==r)||void 0===e&&this.unchangedInputs.has(t))&&(this.recordInputChange(t,e),this.unchangedInputs.delete(t),this.hasInputChanges=!0,this.componentRef.instance[t]=e,this.scheduleDetectChanges()):this.initialInputValues.set(t,e)})}initializeComponent(t){const e=eo.create({providers:[],parent:this.injector}),n=function(t,e){const n=t.childNodes,r=e.map(()=>[]);let s=-1;e.some((t,e)=>"*"===t&&(s=e,!0));for(let i=0,o=n.length;i<o;++i){const t=n[i],o=ip(t,e,s);-1!==o&&r[o].push(t)}return r}(t,this.componentFactory.ngContentSelectors);this.componentRef=this.componentFactory.create(e,n,t),this.viewChangeDetectorRef=this.componentRef.injector.get(Ja),this.implementsOnChanges="function"==typeof this.componentRef.instance.ngOnChanges,this.initializeInputs(),this.initializeOutputs(this.componentRef),this.detectChanges(),this.injector.get(Lu).attachView(this.componentRef.hostView)}initializeInputs(){this.componentFactory.inputs.forEach(({propName:t})=>{this.initialInputValues.has(t)&&this.setInputValue(t,this.initialInputValues.get(t))}),this.initialInputValues.clear()}initializeOutputs(t){const e=this.componentFactory.outputs.map(({propName:e,templateName:n})=>t.instance[e].pipe(x(t=>({name:n,value:t}))));this.eventEmitters.next(e)}callNgOnChanges(t){if(!this.implementsOnChanges||null===this.inputChanges)return;const e=this.inputChanges;this.inputChanges=null,t.instance.ngOnChanges(e)}markViewForCheck(t){this.hasInputChanges&&(this.hasInputChanges=!1,t.markForCheck())}scheduleDetectChanges(){this.scheduledChangeDetectionFn||(this.scheduledChangeDetectionFn=rp.scheduleBeforeRender(()=>{this.scheduledChangeDetectionFn=null,this.detectChanges()}))}recordInputChange(t,e){if(!this.implementsOnChanges)return;null===this.inputChanges&&(this.inputChanges={});const n=this.inputChanges[t];if(n)return void(n.currentValue=e);const r=this.unchangedInputs.has(t),s=r?void 0:this.getInputValue(t);this.inputChanges[t]=new ae(s,e,r)}detectChanges(){null!==this.componentRef&&(this.callNgOnChanges(this.componentRef),this.markViewForCheck(this.viewChangeDetectorRef),this.componentRef.changeDetectorRef.detectChanges())}runInZone(t){return this.elementZone&&Zone.current!==this.elementZone?this.ngZone.run(t):t()}}class lp extends HTMLElement{constructor(){super(...arguments),this.ngElementEventsSubscription=null}}new Ra("12.0.5");const up=new $n("NgValueAccessor"),cp=new $n("NgValidators");let hp=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({}),t})(),dp=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[hp]]}),t})(),pp=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[dp]}),t})();function fp(t,e,n,s){return r(n)&&(s=n,n=void 0),s?fp(t,e,n).pipe(x(t=>l(t)?s(...t):s(t))):new v(r=>{gp(t,e,function(t){r.next(arguments.length>1?Array.prototype.slice.call(arguments):t)},r,n)})}function gp(t,e,n,r,s){let i;if(function(t){return t&&"function"==typeof t.addEventListener&&"function"==typeof t.removeEventListener}(t)){const r=t;t.addEventListener(e,n,s),i=()=>r.removeEventListener(e,n,s)}else if(function(t){return t&&"function"==typeof t.on&&"function"==typeof t.off}(t)){const r=t;t.on(e,n),i=()=>r.off(e,n)}else if(function(t){return t&&"function"==typeof t.addListener&&"function"==typeof t.removeListener}(t)){const r=t;t.addListener(e,n),i=()=>r.removeListener(e,n)}else{if(!t||!t.length)throw new TypeError("Invalid event target");for(let i=0,o=t.length;i<o;i++)gp(t[i],e,n,r,s)}r.add(i)}const mp=new Ud(Vd);function yp(t){return!l(t)&&t-parseFloat(t)+1>=0}function vp(t){const{index:e,period:n,subscriber:r}=t;if(r.next(e),!r.closed){if(-1===n)return r.complete();t.index=e+1,this.schedule(t,n)}}function bp(t,e=null){return{type:4,styles:e,timings:t}}function wp(t){return{type:6,styles:t,offset:null}}function Cp(t,e,n=null){return{type:1,expr:t,animation:e,options:n}}class _p extends D{constructor(t){super(),this._value=t}get value(){return this.getValue()}_subscribe(t){const e=super._subscribe(t);return e&&!e.closed&&t.next(this._value),e}getValue(){if(this.hasError)throw this.thrownError;if(this.closed)throw new w;return this._value}next(t){super.next(this._value=t)}}class Dp extends f{notifyNext(t,e,n,r,s){this.destination.next(e)}notifyError(t,e){this.destination.error(t)}notifyComplete(t){this.destination.complete()}}class Ep extends f{constructor(t,e,n){super(),this.parent=t,this.outerValue=e,this.outerIndex=n,this.index=0}_next(t){this.parent.notifyNext(this.outerValue,t,this.outerIndex,this.index++,this)}_error(t){this.parent.notifyError(t,this),this.unsubscribe()}_complete(){this.parent.notifyComplete(this),this.unsubscribe()}}function Sp(t,e,n,r,s=new Ep(t,n,r)){if(!s.closed)return e instanceof v?e.subscribe(s):P(e)(s)}const xp={};class Ap{constructor(t){this.resultSelector=t}call(t,e){return e.subscribe(new Tp(t,this.resultSelector))}}class Tp extends Dp{constructor(t,e){super(t),this.resultSelector=e,this.active=0,this.values=[],this.observables=[]}_next(t){this.values.push(xp),this.observables.push(t)}_complete(){const t=this.observables,e=t.length;if(0===e)this.destination.complete();else{this.active=e,this.toRespond=e;for(let n=0;n<e;n++)this.add(Sp(this,t[n],void 0,n))}}notifyComplete(t){0==(this.active-=1)&&this.destination.complete()}notifyNext(t,e,n){const r=this.values,s=this.toRespond?r[n]===xp?--this.toRespond:this.toRespond:0;r[n]=e,0===s&&(this.resultSelector?this._tryResultSelector(r):this.destination.next(r.slice()))}_tryResultSelector(t){let e;try{e=this.resultSelector.apply(this,t)}catch(n){return void this.destination.error(n)}this.destination.next(e)}}const Op=(()=>{function t(){return Error.call(this),this.message="no elements in sequence",this.name="EmptyError",this}return t.prototype=Object.create(Error.prototype),t})();function Fp(...t){return $(1)(ed(...t))}function kp(t){return new v(e=>{let n;try{n=t()}catch(r){return void e.error(r)}return(n?N(n):Wd()).subscribe(e)})}const Ip=(()=>{function t(){return Error.call(this),this.message="argument out of range",this.name="ArgumentOutOfRangeError",this}return t.prototype=Object.create(Error.prototype),t})();function Rp(t){return e=>0===t?Wd():e.lift(new Pp(t))}class Pp{constructor(t){if(this.total=t,this.total<0)throw new Ip}call(t,e){return e.subscribe(new Lp(t,this.total))}}class Lp extends f{constructor(t,e){super(t),this.total=e,this.count=0}_next(t){const e=this.total,n=++this.count;n<=e&&(this.destination.next(t),n===e&&(this.destination.complete(),this.unsubscribe()))}}function Np(t,e){let n=!1;return arguments.length>=2&&(n=!0),function(r){return r.lift(new jp(t,e,n))}}class jp{constructor(t,e,n=!1){this.accumulator=t,this.seed=e,this.hasSeed=n}call(t,e){return e.subscribe(new Mp(t,this.accumulator,this.seed,this.hasSeed))}}class Mp extends f{constructor(t,e,n,r){super(t),this.accumulator=e,this._seed=n,this.hasSeed=r,this.index=0}get seed(){return this._seed}set seed(t){this.hasSeed=!0,this._seed=t}_next(t){if(this.hasSeed)return this._tryNext(t);this.seed=t,this.destination.next(t)}_tryNext(t){const e=this.index++;let n;try{n=this.accumulator(this.seed,t,e)}catch(r){this.destination.error(r)}this.seed=n,this.destination.next(n)}}function Vp(t){return function(e){const n=new Bp(t),r=e.lift(n);return n.caught=r}}class Bp{constructor(t){this.selector=t}call(t,e){return e.subscribe(new Hp(t,this.selector,this.caught))}}class Hp extends M{constructor(t,e,n){super(t),this.selector=e,this.caught=n}error(t){if(!this.isStopped){let n;try{n=this.selector(t,this.caught)}catch(e){return void super.error(e)}this._unsubscribeAndRecycle();const r=new j(this);this.add(r);const s=V(n,r);s!==r&&this.add(s)}}}function Up(t){return function(e){return 0===t?Wd():e.lift(new $p(t))}}class $p{constructor(t){if(this.total=t,this.total<0)throw new Ip}call(t,e){return e.subscribe(new zp(t,this.total))}}class zp extends f{constructor(t,e){super(t),this.total=e,this.ring=new Array,this.count=0}_next(t){const e=this.ring,n=this.total,r=this.count++;e.length<n?e.push(t):e[r%n]=t}_complete(){const t=this.destination;let e=this.count;if(e>0){const n=this.count>=this.total?this.total:this.count,r=this.ring;for(let s=0;s<n;s++){const s=e++%n;t.next(r[s])}}t.complete()}}function qp(t=Zp){return e=>e.lift(new Wp(t))}class Wp{constructor(t){this.errorFactory=t}call(t,e){return e.subscribe(new Gp(t,this.errorFactory))}}class Gp extends f{constructor(t,e){super(t),this.errorFactory=e,this.hasValue=!1}_next(t){this.hasValue=!0,this.destination.next(t)}_complete(){if(this.hasValue)return this.destination.complete();{let e;try{e=this.errorFactory()}catch(t){e=t}this.destination.error(e)}}}function Zp(){return new Op}function Yp(t=null){return e=>e.lift(new Kp(t))}class Kp{constructor(t){this.defaultValue=t}call(t,e){return e.subscribe(new Qp(t,this.defaultValue))}}class Qp extends f{constructor(t,e){super(t),this.defaultValue=e,this.isEmpty=!0}_next(t){this.isEmpty=!1,this.destination.next(t)}_complete(){this.isEmpty&&this.destination.next(this.defaultValue),this.destination.complete()}}function Xp(t,e){const n=arguments.length>=2;return r=>r.pipe(t?rd((e,n)=>t(e,n,r)):y,Rp(1),n?Yp(e):qp(()=>new Op))}function Jp(){}function tf(t,e,n){return function(r){return r.lift(new ef(t,e,n))}}class ef{constructor(t,e,n){this.nextOrObserver=t,this.error=e,this.complete=n}call(t,e){return e.subscribe(new nf(t,this.nextOrObserver,this.error,this.complete))}}class nf extends f{constructor(t,e,n,s){super(t),this._tapNext=Jp,this._tapError=Jp,this._tapComplete=Jp,this._tapError=n||Jp,this._tapComplete=s||Jp,r(e)?(this._context=this,this._tapNext=e):e&&(this._context=e,this._tapNext=e.next||Jp,this._tapError=e.error||Jp,this._tapComplete=e.complete||Jp)}_next(t){try{this._tapNext.call(this._context,t)}catch(e){return void this.destination.error(e)}this.destination.next(t)}_error(t){try{this._tapError.call(this._context,t)}catch(t){return void this.destination.error(t)}this.destination.error(t)}_complete(){try{this._tapComplete.call(this._context)}catch(t){return void this.destination.error(t)}return this.destination.complete()}}class rf{constructor(t){this.callback=t}call(t,e){return e.subscribe(new sf(t,this.callback))}}class sf extends f{constructor(t,e){super(t),this.add(new h(e))}}class of{constructor(t,e){this.id=t,this.url=e}}class af extends of{constructor(t,e,n="imperative",r=null){super(t,e),this.navigationTrigger=n,this.restoredState=r}toString(){return`NavigationStart(id: ${this.id}, url: '${this.url}')`}}class lf extends of{constructor(t,e,n){super(t,e),this.urlAfterRedirects=n}toString(){return`NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`}}class uf extends of{constructor(t,e,n){super(t,e),this.reason=n}toString(){return`NavigationCancel(id: ${this.id}, url: '${this.url}')`}}class cf extends of{constructor(t,e,n){super(t,e),this.error=n}toString(){return`NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`}}class hf extends of{constructor(t,e,n,r){super(t,e),this.urlAfterRedirects=n,this.state=r}toString(){return`RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class df extends of{constructor(t,e,n,r){super(t,e),this.urlAfterRedirects=n,this.state=r}toString(){return`GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class pf extends of{constructor(t,e,n,r,s){super(t,e),this.urlAfterRedirects=n,this.state=r,this.shouldActivate=s}toString(){return`GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`}}class ff extends of{constructor(t,e,n,r){super(t,e),this.urlAfterRedirects=n,this.state=r}toString(){return`ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class gf extends of{constructor(t,e,n,r){super(t,e),this.urlAfterRedirects=n,this.state=r}toString(){return`ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class mf{constructor(t){this.route=t}toString(){return`RouteConfigLoadStart(path: ${this.route.path})`}}class yf{constructor(t){this.route=t}toString(){return`RouteConfigLoadEnd(path: ${this.route.path})`}}class vf{constructor(t){this.snapshot=t}toString(){return`ChildActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class bf{constructor(t){this.snapshot=t}toString(){return`ChildActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class wf{constructor(t){this.snapshot=t}toString(){return`ActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class Cf{constructor(t){this.snapshot=t}toString(){return`ActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class _f{constructor(t,e,n){this.routerEvent=t,this.position=e,this.anchor=n}toString(){return`Scroll(anchor: '${this.anchor}', position: '${this.position?`${this.position[0]}, ${this.position[1]}`:null}')`}}const Df="primary";class Ef{constructor(t){this.params=t||{}}has(t){return Object.prototype.hasOwnProperty.call(this.params,t)}get(t){if(this.has(t)){const e=this.params[t];return Array.isArray(e)?e[0]:e}return null}getAll(t){if(this.has(t)){const e=this.params[t];return Array.isArray(e)?e:[e]}return[]}get keys(){return Object.keys(this.params)}}function Sf(t){return new Ef(t)}function xf(t){const e=Error("NavigationCancelingError: "+t);return e.ngNavigationCancelingError=!0,e}function Af(t,e,n){const r=n.path.split("/");if(r.length>t.length)return null;if("full"===n.pathMatch&&(e.hasChildren()||r.length<t.length))return null;const s={};for(let i=0;i<r.length;i++){const e=r[i],n=t[i];if(e.startsWith(":"))s[e.substring(1)]=n;else if(e!==n.path)return null}return{consumed:t.slice(0,r.length),posParams:s}}function Tf(t,e){const n=t?Object.keys(t):void 0,r=e?Object.keys(e):void 0;if(!n||!r||n.length!=r.length)return!1;let s;for(let i=0;i<n.length;i++)if(s=n[i],!Of(t[s],e[s]))return!1;return!0}function Of(t,e){if(Array.isArray(t)&&Array.isArray(e)){if(t.length!==e.length)return!1;const n=[...t].sort(),r=[...e].sort();return n.every((t,e)=>r[e]===t)}return t===e}function Ff(t){return Array.prototype.concat.apply([],t)}function kf(t){return t.length>0?t[t.length-1]:null}function If(t,e){for(const n in t)t.hasOwnProperty(n)&&e(t[n],n)}function Rf(t){return Oo(t)?t:To(t)?N(Promise.resolve(t)):ed(t)}const Pf={exact:function t(e,n,r){if(!$f(e.segments,n.segments))return!1;if(!Vf(e.segments,n.segments,r))return!1;if(e.numberOfChildren!==n.numberOfChildren)return!1;for(const s in n.children){if(!e.children[s])return!1;if(!t(e.children[s],n.children[s],r))return!1}return!0},subset:jf},Lf={exact:function(t,e){return Tf(t,e)},subset:function(t,e){return Object.keys(e).length<=Object.keys(t).length&&Object.keys(e).every(n=>Of(t[n],e[n]))},ignored:()=>!0};function Nf(t,e,n){return Pf[n.paths](t.root,e.root,n.matrixParams)&&Lf[n.queryParams](t.queryParams,e.queryParams)&&!("exact"===n.fragment&&t.fragment!==e.fragment)}function jf(t,e,n){return Mf(t,e,e.segments,n)}function Mf(t,e,n,r){if(t.segments.length>n.length){const s=t.segments.slice(0,n.length);return!!$f(s,n)&&!e.hasChildren()&&!!Vf(s,n,r)}if(t.segments.length===n.length){if(!$f(t.segments,n))return!1;if(!Vf(t.segments,n,r))return!1;for(const n in e.children){if(!t.children[n])return!1;if(!jf(t.children[n],e.children[n],r))return!1}return!0}{const s=n.slice(0,t.segments.length),i=n.slice(t.segments.length);return!!$f(t.segments,s)&&!!Vf(t.segments,s,r)&&!!t.children.primary&&Mf(t.children.primary,e,i,r)}}function Vf(t,e,n){return e.every((e,r)=>Lf[n](t[r].parameters,e.parameters))}class Bf{constructor(t,e,n){this.root=t,this.queryParams=e,this.fragment=n}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=Sf(this.queryParams)),this._queryParamMap}toString(){return Wf.serialize(this)}}class Hf{constructor(t,e){this.segments=t,this.children=e,this.parent=null,If(e,(t,e)=>t.parent=this)}hasChildren(){return this.numberOfChildren>0}get numberOfChildren(){return Object.keys(this.children).length}toString(){return Gf(this)}}class Uf{constructor(t,e){this.path=t,this.parameters=e}get parameterMap(){return this._parameterMap||(this._parameterMap=Sf(this.parameters)),this._parameterMap}toString(){return tg(this)}}function $f(t,e){return t.length===e.length&&t.every((t,n)=>t.path===e[n].path)}class zf{}class qf{parse(t){const e=new ig(t);return new Bf(e.parseRootSegment(),e.parseQueryParams(),e.parseFragment())}serialize(t){var e;return`/${Zf(t.root,!0)}${function(t){const e=Object.keys(t).map(e=>{const n=t[e];return Array.isArray(n)?n.map(t=>`${Kf(e)}=${Kf(t)}`).join("&"):`${Kf(e)}=${Kf(n)}`}).filter(t=>!!t);return e.length?`?${e.join("&")}`:""}(t.queryParams)}${"string"==typeof t.fragment?`#${e=t.fragment,encodeURI(e)}`:""}`}}const Wf=new qf;function Gf(t){return t.segments.map(t=>tg(t)).join("/")}function Zf(t,e){if(!t.hasChildren())return Gf(t);if(e){const e=t.children.primary?Zf(t.children.primary,!1):"",n=[];return If(t.children,(t,e)=>{e!==Df&&n.push(`${e}:${Zf(t,!1)}`)}),n.length>0?`${e}(${n.join("//")})`:e}{const e=function(t,e){let n=[];return If(t.children,(t,r)=>{r===Df&&(n=n.concat(e(t,r)))}),If(t.children,(t,r)=>{r!==Df&&(n=n.concat(e(t,r)))}),n}(t,(e,n)=>n===Df?[Zf(t.children.primary,!1)]:[`${n}:${Zf(e,!1)}`]);return 1===Object.keys(t.children).length&&null!=t.children.primary?`${Gf(t)}/${e[0]}`:`${Gf(t)}/(${e.join("//")})`}}function Yf(t){return encodeURIComponent(t).replace(/%40/g,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",")}function Kf(t){return Yf(t).replace(/%3B/gi,";")}function Qf(t){return Yf(t).replace(/\(/g,"%28").replace(/\)/g,"%29").replace(/%26/gi,"&")}function Xf(t){return decodeURIComponent(t)}function Jf(t){return Xf(t.replace(/\+/g,"%20"))}function tg(t){return`${Qf(t.path)}${e=t.parameters,Object.keys(e).map(t=>`;${Qf(t)}=${Qf(e[t])}`).join("")}`;var e}const eg=/^[^\/()?;=#]+/;function ng(t){const e=t.match(eg);return e?e[0]:""}const rg=/^[^=?&#]+/,sg=/^[^?&#]+/;class ig{constructor(t){this.url=t,this.remaining=t}parseRootSegment(){return this.consumeOptional("/"),""===this.remaining||this.peekStartsWith("?")||this.peekStartsWith("#")?new Hf([],{}):new Hf([],this.parseChildren())}parseQueryParams(){const t={};if(this.consumeOptional("?"))do{this.parseQueryParam(t)}while(this.consumeOptional("&"));return t}parseFragment(){return this.consumeOptional("#")?decodeURIComponent(this.remaining):null}parseChildren(){if(""===this.remaining)return{};this.consumeOptional("/");const t=[];for(this.peekStartsWith("(")||t.push(this.parseSegment());this.peekStartsWith("/")&&!this.peekStartsWith("//")&&!this.peekStartsWith("/(");)this.capture("/"),t.push(this.parseSegment());let e={};this.peekStartsWith("/(")&&(this.capture("/"),e=this.parseParens(!0));let n={};return this.peekStartsWith("(")&&(n=this.parseParens(!1)),(t.length>0||Object.keys(e).length>0)&&(n.primary=new Hf(t,e)),n}parseSegment(){const t=ng(this.remaining);if(""===t&&this.peekStartsWith(";"))throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);return this.capture(t),new Uf(Xf(t),this.parseMatrixParams())}parseMatrixParams(){const t={};for(;this.consumeOptional(";");)this.parseParam(t);return t}parseParam(t){const e=ng(this.remaining);if(!e)return;this.capture(e);let n="";if(this.consumeOptional("=")){const t=ng(this.remaining);t&&(n=t,this.capture(n))}t[Xf(e)]=Xf(n)}parseQueryParam(t){const e=function(t){const e=t.match(rg);return e?e[0]:""}(this.remaining);if(!e)return;this.capture(e);let n="";if(this.consumeOptional("=")){const t=function(t){const e=t.match(sg);return e?e[0]:""}(this.remaining);t&&(n=t,this.capture(n))}const r=Jf(e),s=Jf(n);if(t.hasOwnProperty(r)){let e=t[r];Array.isArray(e)||(e=[e],t[r]=e),e.push(s)}else t[r]=s}parseParens(t){const e={};for(this.capture("(");!this.consumeOptional(")")&&this.remaining.length>0;){const n=ng(this.remaining),r=this.remaining[n.length];if("/"!==r&&")"!==r&&";"!==r)throw new Error(`Cannot parse url '${this.url}'`);let s;n.indexOf(":")>-1?(s=n.substr(0,n.indexOf(":")),this.capture(s),this.capture(":")):t&&(s=Df);const i=this.parseChildren();e[s]=1===Object.keys(i).length?i.primary:new Hf([],i),this.consumeOptional("//")}return e}peekStartsWith(t){return this.remaining.startsWith(t)}consumeOptional(t){return!!this.peekStartsWith(t)&&(this.remaining=this.remaining.substring(t.length),!0)}capture(t){if(!this.consumeOptional(t))throw new Error(`Expected "${t}".`)}}class og{constructor(t){this._root=t}get root(){return this._root.value}parent(t){const e=this.pathFromRoot(t);return e.length>1?e[e.length-2]:null}children(t){const e=ag(t,this._root);return e?e.children.map(t=>t.value):[]}firstChild(t){const e=ag(t,this._root);return e&&e.children.length>0?e.children[0].value:null}siblings(t){const e=lg(t,this._root);return e.length<2?[]:e[e.length-2].children.map(t=>t.value).filter(e=>e!==t)}pathFromRoot(t){return lg(t,this._root).map(t=>t.value)}}function ag(t,e){if(t===e.value)return e;for(const n of e.children){const e=ag(t,n);if(e)return e}return null}function lg(t,e){if(t===e.value)return[e];for(const n of e.children){const r=lg(t,n);if(r.length)return r.unshift(e),r}return[]}class ug{constructor(t,e){this.value=t,this.children=e}toString(){return`TreeNode(${this.value})`}}function cg(t){const e={};return t&&t.children.forEach(t=>e[t.value.outlet]=t),e}class hg extends og{constructor(t,e){super(t),this.snapshot=e,yg(this,t)}toString(){return this.snapshot.toString()}}function dg(t,e){const n=function(t,e){const n=new gg([],{},{},"",{},Df,e,null,t.root,-1,{});return new mg("",new ug(n,[]))}(t,e),r=new _p([new Uf("",{})]),s=new _p({}),i=new _p({}),o=new _p({}),a=new _p(""),l=new pg(r,s,o,a,i,Df,e,n.root);return l.snapshot=n.root,new hg(new ug(l,[]),n)}class pg{constructor(t,e,n,r,s,i,o,a){this.url=t,this.params=e,this.queryParams=n,this.fragment=r,this.data=s,this.outlet=i,this.component=o,this._futureSnapshot=a}get routeConfig(){return this._futureSnapshot.routeConfig}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=this.params.pipe(x(t=>Sf(t)))),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=this.queryParams.pipe(x(t=>Sf(t)))),this._queryParamMap}toString(){return this.snapshot?this.snapshot.toString():`Future(${this._futureSnapshot})`}}function fg(t,e="emptyOnly"){const n=t.pathFromRoot;let r=0;if("always"!==e)for(r=n.length-1;r>=1;){const t=n[r],e=n[r-1];if(t.routeConfig&&""===t.routeConfig.path)r--;else{if(e.component)break;r--}}return function(t){return t.reduce((t,e)=>({params:Object.assign(Object.assign({},t.params),e.params),data:Object.assign(Object.assign({},t.data),e.data),resolve:Object.assign(Object.assign({},t.resolve),e._resolvedData)}),{params:{},data:{},resolve:{}})}(n.slice(r))}class gg{constructor(t,e,n,r,s,i,o,a,l,u,c){this.url=t,this.params=e,this.queryParams=n,this.fragment=r,this.data=s,this.outlet=i,this.component=o,this.routeConfig=a,this._urlSegment=l,this._lastPathIndex=u,this._resolve=c}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=Sf(this.params)),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=Sf(this.queryParams)),this._queryParamMap}toString(){return`Route(url:'${this.url.map(t=>t.toString()).join("/")}', path:'${this.routeConfig?this.routeConfig.path:""}')`}}class mg extends og{constructor(t,e){super(e),this.url=t,yg(this,e)}toString(){return vg(this._root)}}function yg(t,e){e.value._routerState=t,e.children.forEach(e=>yg(t,e))}function vg(t){const e=t.children.length>0?` { ${t.children.map(vg).join(", ")} } `:"";return`${t.value}${e}`}function bg(t){if(t.snapshot){const e=t.snapshot,n=t._futureSnapshot;t.snapshot=n,Tf(e.queryParams,n.queryParams)||t.queryParams.next(n.queryParams),e.fragment!==n.fragment&&t.fragment.next(n.fragment),Tf(e.params,n.params)||t.params.next(n.params),function(t,e){if(t.length!==e.length)return!1;for(let n=0;n<t.length;++n)if(!Tf(t[n],e[n]))return!1;return!0}(e.url,n.url)||t.url.next(n.url),Tf(e.data,n.data)||t.data.next(n.data)}else t.snapshot=t._futureSnapshot,t.data.next(t._futureSnapshot.data)}function wg(t,e){var n,r;return Tf(t.params,e.params)&&$f(n=t.url,r=e.url)&&n.every((t,e)=>Tf(t.parameters,r[e].parameters))&&!(!t.parent!=!e.parent)&&(!t.parent||wg(t.parent,e.parent))}function Cg(t,e,n){if(n&&t.shouldReuseRoute(e.value,n.value.snapshot)){const r=n.value;r._futureSnapshot=e.value;const s=function(t,e,n){return e.children.map(e=>{for(const r of n.children)if(t.shouldReuseRoute(e.value,r.value.snapshot))return Cg(t,e,r);return Cg(t,e)})}(t,e,n);return new ug(r,s)}{if(t.shouldAttach(e.value)){const n=t.retrieve(e.value);if(null!==n){const t=n.route;return _g(e,t),t}}const n=new pg(new _p((r=e.value).url),new _p(r.params),new _p(r.queryParams),new _p(r.fragment),new _p(r.data),r.outlet,r.component,r),s=e.children.map(e=>Cg(t,e));return new ug(n,s)}var r}function _g(t,e){if(t.value.routeConfig!==e.value.routeConfig)throw new Error("Cannot reattach ActivatedRouteSnapshot created from a different route");if(t.children.length!==e.children.length)throw new Error("Cannot reattach ActivatedRouteSnapshot with a different number of children");e.value._futureSnapshot=t.value;for(let n=0;n<t.children.length;++n)_g(t.children[n],e.children[n])}function Dg(t){return"object"==typeof t&&null!=t&&!t.outlets&&!t.segmentPath}function Eg(t){return"object"==typeof t&&null!=t&&t.outlets}function Sg(t,e,n,r,s){let i={};return r&&If(r,(t,e)=>{i[e]=Array.isArray(t)?t.map(t=>`${t}`):`${t}`}),new Bf(n.root===t?e:xg(n.root,t,e),i,s)}function xg(t,e,n){const r={};return If(t.children,(t,s)=>{r[s]=t===e?n:xg(t,e,n)}),new Hf(t.segments,r)}class Ag{constructor(t,e,n){if(this.isAbsolute=t,this.numberOfDoubleDots=e,this.commands=n,t&&n.length>0&&Dg(n[0]))throw new Error("Root segment cannot have matrix parameters");const r=n.find(Eg);if(r&&r!==kf(n))throw new Error("{outlets:{}} has to be the last command")}toRoot(){return this.isAbsolute&&1===this.commands.length&&"/"==this.commands[0]}}class Tg{constructor(t,e,n){this.segmentGroup=t,this.processChildren=e,this.index=n}}function Og(t,e,n){if(t||(t=new Hf([],{})),0===t.segments.length&&t.hasChildren())return Fg(t,e,n);const r=function(t,e,n){let r=0,s=e;const i={match:!1,pathIndex:0,commandIndex:0};for(;s<t.segments.length;){if(r>=n.length)return i;const e=t.segments[s],o=n[r];if(Eg(o))break;const a=`${o}`,l=r<n.length-1?n[r+1]:null;if(s>0&&void 0===a)break;if(a&&l&&"object"==typeof l&&void 0===l.outlets){if(!Pg(a,l,e))return i;r+=2}else{if(!Pg(a,{},e))return i;r++}s++}return{match:!0,pathIndex:s,commandIndex:r}}(t,e,n),s=n.slice(r.commandIndex);if(r.match&&r.pathIndex<t.segments.length){const e=new Hf(t.segments.slice(0,r.pathIndex),{});return e.children.primary=new Hf(t.segments.slice(r.pathIndex),t.children),Fg(e,0,s)}return r.match&&0===s.length?new Hf(t.segments,{}):r.match&&!t.hasChildren()?kg(t,e,n):r.match?Fg(t,0,s):kg(t,e,n)}function Fg(t,e,n){if(0===n.length)return new Hf(t.segments,{});{const r=function(t){return Eg(t[0])?t[0].outlets:{[Df]:t}}(n),s={};return If(r,(n,r)=>{"string"==typeof n&&(n=[n]),null!==n&&(s[r]=Og(t.children[r],e,n))}),If(t.children,(t,e)=>{void 0===r[e]&&(s[e]=t)}),new Hf(t.segments,s)}}function kg(t,e,n){const r=t.segments.slice(0,e);let s=0;for(;s<n.length;){const i=n[s];if(Eg(i)){const t=Ig(i.outlets);return new Hf(r,t)}if(0===s&&Dg(n[0])){r.push(new Uf(t.segments[e].path,Rg(n[0]))),s++;continue}const o=Eg(i)?i.outlets.primary:`${i}`,a=s<n.length-1?n[s+1]:null;o&&a&&Dg(a)?(r.push(new Uf(o,Rg(a))),s+=2):(r.push(new Uf(o,{})),s++)}return new Hf(r,{})}function Ig(t){const e={};return If(t,(t,n)=>{"string"==typeof t&&(t=[t]),null!==t&&(e[n]=kg(new Hf([],{}),0,t))}),e}function Rg(t){const e={};return If(t,(t,n)=>e[n]=`${t}`),e}function Pg(t,e,n){return t==n.path&&Tf(e,n.parameters)}class Lg{constructor(t,e,n,r){this.routeReuseStrategy=t,this.futureState=e,this.currState=n,this.forwardEvent=r}activate(t){const e=this.futureState._root,n=this.currState?this.currState._root:null;this.deactivateChildRoutes(e,n,t),bg(this.futureState.root),this.activateChildRoutes(e,n,t)}deactivateChildRoutes(t,e,n){const r=cg(e);t.children.forEach(t=>{const e=t.value.outlet;this.deactivateRoutes(t,r[e],n),delete r[e]}),If(r,(t,e)=>{this.deactivateRouteAndItsChildren(t,n)})}deactivateRoutes(t,e,n){const r=t.value,s=e?e.value:null;if(r===s)if(r.component){const s=n.getContext(r.outlet);s&&this.deactivateChildRoutes(t,e,s.children)}else this.deactivateChildRoutes(t,e,n);else s&&this.deactivateRouteAndItsChildren(e,n)}deactivateRouteAndItsChildren(t,e){this.routeReuseStrategy.shouldDetach(t.value.snapshot)?this.detachAndStoreRouteSubtree(t,e):this.deactivateRouteAndOutlet(t,e)}detachAndStoreRouteSubtree(t,e){const n=e.getContext(t.value.outlet);if(n&&n.outlet){const e=n.outlet.detach(),r=n.children.onOutletDeactivated();this.routeReuseStrategy.store(t.value.snapshot,{componentRef:e,route:t,contexts:r})}}deactivateRouteAndOutlet(t,e){const n=e.getContext(t.value.outlet),r=n&&t.value.component?n.children:e,s=cg(t);for(const i of Object.keys(s))this.deactivateRouteAndItsChildren(s[i],r);n&&n.outlet&&(n.outlet.deactivate(),n.children.onOutletDeactivated(),n.attachRef=null,n.resolver=null,n.route=null)}activateChildRoutes(t,e,n){const r=cg(e);t.children.forEach(t=>{this.activateRoutes(t,r[t.value.outlet],n),this.forwardEvent(new Cf(t.value.snapshot))}),t.children.length&&this.forwardEvent(new bf(t.value.snapshot))}activateRoutes(t,e,n){const r=t.value,s=e?e.value:null;if(bg(r),r===s)if(r.component){const s=n.getOrCreateContext(r.outlet);this.activateChildRoutes(t,e,s.children)}else this.activateChildRoutes(t,e,n);else if(r.component){const e=n.getOrCreateContext(r.outlet);if(this.routeReuseStrategy.shouldAttach(r.snapshot)){const t=this.routeReuseStrategy.retrieve(r.snapshot);this.routeReuseStrategy.store(r.snapshot,null),e.children.onOutletReAttached(t.contexts),e.attachRef=t.componentRef,e.route=t.route.value,e.outlet&&e.outlet.attach(t.componentRef,t.route.value),Ng(t.route)}else{const n=function(t){for(let e=t.parent;e;e=e.parent){const t=e.routeConfig;if(t&&t._loadedConfig)return t._loadedConfig;if(t&&t.component)return null}return null}(r.snapshot),s=n?n.module.componentFactoryResolver:null;e.attachRef=null,e.route=r,e.resolver=s,e.outlet&&e.outlet.activateWith(r,s),this.activateChildRoutes(t,null,e.children)}}else this.activateChildRoutes(t,null,n)}}function Ng(t){bg(t.value),t.children.forEach(Ng)}class jg{constructor(t,e){this.routes=t,this.module=e}}function Mg(t){return"function"==typeof t}function Vg(t){return t instanceof Bf}const Bg=Symbol("INITIAL_VALUE");function Hg(){return tp(t=>function(...t){let e,n;return S(t[t.length-1])&&(n=t.pop()),"function"==typeof t[t.length-1]&&(e=t.pop()),1===t.length&&l(t[0])&&(t=t[0]),z(t,n).lift(new Ap(e))}(t.map(t=>t.pipe(Rp(1),function(...t){const e=t[t.length-1];return S(e)?(t.pop(),n=>Fp(t,n,e)):e=>Fp(t,e)}(Bg)))).pipe(Np((t,e)=>{let n=!1;return e.reduce((t,r,s)=>{if(t!==Bg)return t;if(r===Bg&&(n=!0),!n){if(!1===r)return r;if(s===e.length-1||Vg(r))return r}return t},t)},Bg),rd(t=>t!==Bg),x(t=>Vg(t)?t:!0===t),Rp(1)))}let Ug=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=Ut({type:t,selectors:[["ng-component"]],decls:1,vars:0,template:function(t,e){1&t&&So(0,"router-outlet")},directives:function(){return[Nm]},encapsulation:2}),t})();function $g(t,e=""){for(let n=0;n<t.length;n++){const r=t[n];zg(r,qg(e,r))}}function zg(t,e){t.children&&$g(t.children,e)}function qg(t,e){return e?t||e.path?t&&!e.path?`${t}/`:!t&&e.path?e.path:`${t}/${e.path}`:"":t}function Wg(t){const e=t.children&&t.children.map(Wg),n=e?Object.assign(Object.assign({},t),{children:e}):Object.assign({},t);return!n.component&&(e||n.loadChildren)&&n.outlet&&n.outlet!==Df&&(n.component=Ug),n}function Gg(t){return t.outlet||Df}function Zg(t,e){const n=t.filter(t=>Gg(t)===e);return n.push(...t.filter(t=>Gg(t)!==e)),n}const Yg={matched:!1,consumedSegments:[],lastChild:0,parameters:{},positionalParamSegments:{}};function Kg(t,e,n){var r;if(""===e.path)return"full"===e.pathMatch&&(t.hasChildren()||n.length>0)?Object.assign({},Yg):{matched:!0,consumedSegments:[],lastChild:0,parameters:{},positionalParamSegments:{}};const s=(e.matcher||Af)(n,t,e);if(!s)return Object.assign({},Yg);const i={};If(s.posParams,(t,e)=>{i[e]=t.path});const o=s.consumed.length>0?Object.assign(Object.assign({},i),s.consumed[s.consumed.length-1].parameters):i;return{matched:!0,consumedSegments:s.consumed,lastChild:s.consumed.length,parameters:o,positionalParamSegments:null!==(r=s.posParams)&&void 0!==r?r:{}}}function Qg(t,e,n,r,s="corrected"){if(n.length>0&&function(t,e,n){return n.some(n=>Xg(t,e,n)&&Gg(n)!==Df)}(t,n,r)){const s=new Hf(e,function(t,e,n,r){const s={};s.primary=r,r._sourceSegment=t,r._segmentIndexShift=e.length;for(const i of n)if(""===i.path&&Gg(i)!==Df){const n=new Hf([],{});n._sourceSegment=t,n._segmentIndexShift=e.length,s[Gg(i)]=n}return s}(t,e,r,new Hf(n,t.children)));return s._sourceSegment=t,s._segmentIndexShift=e.length,{segmentGroup:s,slicedSegments:[]}}if(0===n.length&&function(t,e,n){return n.some(n=>Xg(t,e,n))}(t,n,r)){const i=new Hf(t.segments,function(t,e,n,r,s,i){const o={};for(const a of r)if(Xg(t,n,a)&&!s[Gg(a)]){const n=new Hf([],{});n._sourceSegment=t,n._segmentIndexShift="legacy"===i?t.segments.length:e.length,o[Gg(a)]=n}return Object.assign(Object.assign({},s),o)}(t,e,n,r,t.children,s));return i._sourceSegment=t,i._segmentIndexShift=e.length,{segmentGroup:i,slicedSegments:n}}const i=new Hf(t.segments,t.children);return i._sourceSegment=t,i._segmentIndexShift=e.length,{segmentGroup:i,slicedSegments:n}}function Xg(t,e,n){return(!(t.hasChildren()||e.length>0)||"full"!==n.pathMatch)&&""===n.path}function Jg(t,e,n,r){return!!(Gg(t)===r||r!==Df&&Xg(e,n,t))&&("**"===t.path||Kg(e,t,n).matched)}function tm(t,e,n){return 0===e.length&&!t.children[n]}class em{constructor(t){this.segmentGroup=t||null}}class nm{constructor(t){this.urlTree=t}}function rm(t){return new v(e=>e.error(new em(t)))}function sm(t){return new v(e=>e.error(new nm(t)))}function im(t){return new v(e=>e.error(new Error(`Only absolute redirects can have named outlets. redirectTo: '${t}'`)))}class om{constructor(t,e,n,r,s){this.configLoader=e,this.urlSerializer=n,this.urlTree=r,this.config=s,this.allowRedirects=!0,this.ngModule=t.get(ll)}apply(){const t=Qg(this.urlTree.root,[],[],this.config).segmentGroup,e=new Hf(t.segments,t.children);return this.expandSegmentGroup(this.ngModule,this.config,e,Df).pipe(x(t=>this.createUrlTree(am(t),this.urlTree.queryParams,this.urlTree.fragment))).pipe(Vp(t=>{if(t instanceof nm)return this.allowRedirects=!1,this.match(t.urlTree);if(t instanceof em)throw this.noMatchError(t);throw t}))}match(t){return this.expandSegmentGroup(this.ngModule,this.config,t.root,Df).pipe(x(e=>this.createUrlTree(am(e),t.queryParams,t.fragment))).pipe(Vp(t=>{if(t instanceof em)throw this.noMatchError(t);throw t}))}noMatchError(t){return new Error(`Cannot match any routes. URL Segment: '${t.segmentGroup}'`)}createUrlTree(t,e,n){const r=t.segments.length>0?new Hf([],{[Df]:t}):t;return new Bf(r,e,n)}expandSegmentGroup(t,e,n,r){return 0===n.segments.length&&n.hasChildren()?this.expandChildren(t,e,n).pipe(x(t=>new Hf([],t))):this.expandSegment(t,n,e,n.segments,r,!0)}expandChildren(t,e,n){const r=[];for(const s of Object.keys(n.children))"primary"===s?r.unshift(s):r.push(s);return N(r).pipe(nd(r=>{const s=n.children[r],i=Zg(e,r);return this.expandSegmentGroup(t,i,s,r).pipe(x(t=>({segment:t,outlet:r})))}),Np((t,e)=>(t[e.outlet]=e.segment,t),{}),function(t,e){const n=arguments.length>=2;return r=>r.pipe(t?rd((e,n)=>t(e,n,r)):y,Up(1),n?Yp(e):qp(()=>new Op))}())}expandSegment(t,e,n,r,s,i){return N(n).pipe(nd(o=>this.expandSegmentAgainstRoute(t,e,n,o,r,s,i).pipe(Vp(t=>{if(t instanceof em)return ed(null);throw t}))),Xp(t=>!!t),Vp((t,n)=>{if(t instanceof Op||"EmptyError"===t.name){if(tm(e,r,s))return ed(new Hf([],{}));throw new em(e)}throw t}))}expandSegmentAgainstRoute(t,e,n,r,s,i,o){return Jg(r,e,s,i)?void 0===r.redirectTo?this.matchSegmentAgainstRoute(t,e,r,s,i):o&&this.allowRedirects?this.expandSegmentAgainstRouteUsingRedirect(t,e,n,r,s,i):rm(e):rm(e)}expandSegmentAgainstRouteUsingRedirect(t,e,n,r,s,i){return"**"===r.path?this.expandWildCardWithParamsAgainstRouteUsingRedirect(t,n,r,i):this.expandRegularSegmentAgainstRouteUsingRedirect(t,e,n,r,s,i)}expandWildCardWithParamsAgainstRouteUsingRedirect(t,e,n,r){const s=this.applyRedirectCommands([],n.redirectTo,{});return n.redirectTo.startsWith("/")?sm(s):this.lineralizeSegments(n,s).pipe(B(n=>{const s=new Hf(n,{});return this.expandSegment(t,s,e,n,r,!1)}))}expandRegularSegmentAgainstRouteUsingRedirect(t,e,n,r,s,i){const{matched:o,consumedSegments:a,lastChild:l,positionalParamSegments:u}=Kg(e,r,s);if(!o)return rm(e);const c=this.applyRedirectCommands(a,r.redirectTo,u);return r.redirectTo.startsWith("/")?sm(c):this.lineralizeSegments(r,c).pipe(B(r=>this.expandSegment(t,e,n,r.concat(s.slice(l)),i,!1)))}matchSegmentAgainstRoute(t,e,n,r,s){if("**"===n.path)return n.loadChildren?(n._loadedConfig?ed(n._loadedConfig):this.configLoader.load(t.injector,n)).pipe(x(t=>(n._loadedConfig=t,new Hf(r,{})))):ed(new Hf(r,{}));const{matched:i,consumedSegments:o,lastChild:a}=Kg(e,n,r);if(!i)return rm(e);const l=r.slice(a);return this.getChildConfig(t,n,r).pipe(B(t=>{const r=t.module,i=t.routes,{segmentGroup:a,slicedSegments:u}=Qg(e,o,l,i),c=new Hf(a.segments,a.children);if(0===u.length&&c.hasChildren())return this.expandChildren(r,i,c).pipe(x(t=>new Hf(o,t)));if(0===i.length&&0===u.length)return ed(new Hf(o,{}));const h=Gg(n)===s;return this.expandSegment(r,c,i,u,h?Df:s,!0).pipe(x(t=>new Hf(o.concat(t.segments),t.children)))}))}getChildConfig(t,e,n){return e.children?ed(new jg(e.children,t)):e.loadChildren?void 0!==e._loadedConfig?ed(e._loadedConfig):this.runCanLoadGuards(t.injector,e,n).pipe(B(n=>n?this.configLoader.load(t.injector,e).pipe(x(t=>(e._loadedConfig=t,t))):function(t){return new v(e=>e.error(xf(`Cannot load children because the guard of the route "path: '${t.path}'" returned false`)))}(e))):ed(new jg([],t))}runCanLoadGuards(t,e,n){const r=e.canLoad;return r&&0!==r.length?ed(r.map(r=>{const s=t.get(r);let i;if(function(t){return t&&Mg(t.canLoad)}(s))i=s.canLoad(e,n);else{if(!Mg(s))throw new Error("Invalid CanLoad guard");i=s(e,n)}return Rf(i)})).pipe(Hg(),tf(t=>{if(!Vg(t))return;const e=xf(`Redirecting to "${this.urlSerializer.serialize(t)}"`);throw e.url=t,e}),x(t=>!0===t)):ed(!0)}lineralizeSegments(t,e){let n=[],r=e.root;for(;;){if(n=n.concat(r.segments),0===r.numberOfChildren)return ed(n);if(r.numberOfChildren>1||!r.children.primary)return im(t.redirectTo);r=r.children.primary}}applyRedirectCommands(t,e,n){return this.applyRedirectCreatreUrlTree(e,this.urlSerializer.parse(e),t,n)}applyRedirectCreatreUrlTree(t,e,n,r){const s=this.createSegmentGroup(t,e.root,n,r);return new Bf(s,this.createQueryParams(e.queryParams,this.urlTree.queryParams),e.fragment)}createQueryParams(t,e){const n={};return If(t,(t,r)=>{if("string"==typeof t&&t.startsWith(":")){const s=t.substring(1);n[r]=e[s]}else n[r]=t}),n}createSegmentGroup(t,e,n,r){const s=this.createSegments(t,e.segments,n,r);let i={};return If(e.children,(e,s)=>{i[s]=this.createSegmentGroup(t,e,n,r)}),new Hf(s,i)}createSegments(t,e,n,r){return e.map(e=>e.path.startsWith(":")?this.findPosParam(t,e,r):this.findOrReturn(e,n))}findPosParam(t,e,n){const r=n[e.path.substring(1)];if(!r)throw new Error(`Cannot redirect to '${t}'. Cannot find '${e.path}'.`);return r}findOrReturn(t,e){let n=0;for(const r of e){if(r.path===t.path)return e.splice(n),r;n++}return t}}function am(t){const e={};for(const n of Object.keys(t.children)){const r=am(t.children[n]);(r.segments.length>0||r.hasChildren())&&(e[n]=r)}return function(t){if(1===t.numberOfChildren&&t.children.primary){const e=t.children.primary;return new Hf(t.segments.concat(e.segments),e.children)}return t}(new Hf(t.segments,e))}class lm{constructor(t){this.path=t,this.route=this.path[this.path.length-1]}}class um{constructor(t,e){this.component=t,this.route=e}}function cm(t,e,n){const r=t._root;return dm(r,e?e._root:null,n,[r.value])}function hm(t,e,n){const r=function(t){if(!t)return null;for(let e=t.parent;e;e=e.parent){const t=e.routeConfig;if(t&&t._loadedConfig)return t._loadedConfig}return null}(e);return(r?r.module.injector:n).get(t)}function dm(t,e,n,r,s={canDeactivateChecks:[],canActivateChecks:[]}){const i=cg(e);return t.children.forEach(t=>{!function(t,e,n,r,s={canDeactivateChecks:[],canActivateChecks:[]}){const i=t.value,o=e?e.value:null,a=n?n.getContext(t.value.outlet):null;if(o&&i.routeConfig===o.routeConfig){const l=function(t,e,n){if("function"==typeof n)return n(t,e);switch(n){case"pathParamsChange":return!$f(t.url,e.url);case"pathParamsOrQueryParamsChange":return!$f(t.url,e.url)||!Tf(t.queryParams,e.queryParams);case"always":return!0;case"paramsOrQueryParamsChange":return!wg(t,e)||!Tf(t.queryParams,e.queryParams);case"paramsChange":default:return!wg(t,e)}}(o,i,i.routeConfig.runGuardsAndResolvers);l?s.canActivateChecks.push(new lm(r)):(i.data=o.data,i._resolvedData=o._resolvedData),dm(t,e,i.component?a?a.children:null:n,r,s),l&&a&&a.outlet&&a.outlet.isActivated&&s.canDeactivateChecks.push(new um(a.outlet.component,o))}else o&&pm(e,a,s),s.canActivateChecks.push(new lm(r)),dm(t,null,i.component?a?a.children:null:n,r,s)}(t,i[t.value.outlet],n,r.concat([t.value]),s),delete i[t.value.outlet]}),If(i,(t,e)=>pm(t,n.getContext(e),s)),s}function pm(t,e,n){const r=cg(t),s=t.value;If(r,(t,r)=>{pm(t,s.component?e?e.children.getContext(r):null:e,n)}),n.canDeactivateChecks.push(new um(s.component&&e&&e.outlet&&e.outlet.isActivated?e.outlet.component:null,s))}class fm{}function gm(t){return new v(e=>e.error(t))}class mm{constructor(t,e,n,r,s,i){this.rootComponentType=t,this.config=e,this.urlTree=n,this.url=r,this.paramsInheritanceStrategy=s,this.relativeLinkResolution=i}recognize(){const t=Qg(this.urlTree.root,[],[],this.config.filter(t=>void 0===t.redirectTo),this.relativeLinkResolution).segmentGroup,e=this.processSegmentGroup(this.config,t,Df);if(null===e)return null;const n=new gg([],Object.freeze({}),Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,{},Df,this.rootComponentType,null,this.urlTree.root,-1,{}),r=new ug(n,e),s=new mg(this.url,r);return this.inheritParamsAndData(s._root),s}inheritParamsAndData(t){const e=t.value,n=fg(e,this.paramsInheritanceStrategy);e.params=Object.freeze(n.params),e.data=Object.freeze(n.data),t.children.forEach(t=>this.inheritParamsAndData(t))}processSegmentGroup(t,e,n){return 0===e.segments.length&&e.hasChildren()?this.processChildren(t,e):this.processSegment(t,e,e.segments,n)}processChildren(t,e){const n=[];for(const s of Object.keys(e.children)){const r=e.children[s],i=Zg(t,s),o=this.processSegmentGroup(i,r,s);if(null===o)return null;n.push(...o)}const r=vm(n);return r.sort((t,e)=>t.value.outlet===Df?-1:e.value.outlet===Df?1:t.value.outlet.localeCompare(e.value.outlet)),r}processSegment(t,e,n,r){for(const s of t){const t=this.processSegmentAgainstRoute(s,e,n,r);if(null!==t)return t}return tm(e,n,r)?[]:null}processSegmentAgainstRoute(t,e,n,r){if(t.redirectTo||!Jg(t,e,n,r))return null;let s,i=[],o=[];if("**"===t.path){const r=n.length>0?kf(n).parameters:{};s=new gg(n,r,Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,Cm(t),Gg(t),t.component,t,bm(e),wm(e)+n.length,_m(t))}else{const r=Kg(e,t,n);if(!r.matched)return null;i=r.consumedSegments,o=n.slice(r.lastChild),s=new gg(i,r.parameters,Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,Cm(t),Gg(t),t.component,t,bm(e),wm(e)+i.length,_m(t))}const a=function(t){return t.children?t.children:t.loadChildren?t._loadedConfig.routes:[]}(t),{segmentGroup:l,slicedSegments:u}=Qg(e,i,o,a.filter(t=>void 0===t.redirectTo),this.relativeLinkResolution);if(0===u.length&&l.hasChildren()){const t=this.processChildren(a,l);return null===t?null:[new ug(s,t)]}if(0===a.length&&0===u.length)return[new ug(s,[])];const c=Gg(t)===r,h=this.processSegment(a,l,u,c?Df:r);return null===h?null:[new ug(s,h)]}}function ym(t){const e=t.value.routeConfig;return e&&""===e.path&&void 0===e.redirectTo}function vm(t){const e=[],n=new Set;for(const r of t){if(!ym(r)){e.push(r);continue}const t=e.find(t=>r.value.routeConfig===t.value.routeConfig);void 0!==t?(t.children.push(...r.children),n.add(t)):e.push(r)}for(const r of n){const t=vm(r.children);e.push(new ug(r.value,t))}return e.filter(t=>!n.has(t))}function bm(t){let e=t;for(;e._sourceSegment;)e=e._sourceSegment;return e}function wm(t){let e=t,n=e._segmentIndexShift?e._segmentIndexShift:0;for(;e._sourceSegment;)e=e._sourceSegment,n+=e._segmentIndexShift?e._segmentIndexShift:0;return n-1}function Cm(t){return t.data||{}}function _m(t){return t.resolve||{}}function Dm(t){return tp(e=>{const n=t(e);return n?N(n).pipe(x(()=>e)):ed(e)})}class Em extends class{shouldDetach(t){return!1}store(t,e){}shouldAttach(t){return!1}retrieve(t){return null}shouldReuseRoute(t,e){return t.routeConfig===e.routeConfig}}{}const Sm=new $n("ROUTES");class xm{constructor(t,e,n,r){this.loader=t,this.compiler=e,this.onLoadStartListener=n,this.onLoadEndListener=r}load(t,e){if(e._loader$)return e._loader$;this.onLoadStartListener&&this.onLoadStartListener(e);const n=this.loadModuleFactory(e.loadChildren).pipe(x(n=>{this.onLoadEndListener&&this.onLoadEndListener(e);const r=n.create(t);return new jg(Ff(r.injector.get(Sm,void 0,wt.Self|wt.Optional)).map(Wg),r)}),Vp(t=>{throw e._loader$=void 0,t}));return e._loader$=new Y(n,()=>new D).pipe(W()),e._loader$}loadModuleFactory(t){return"string"==typeof t?N(this.loader.load(t)):Rf(t()).pipe(B(t=>t instanceof ul?ed(t):N(this.compiler.compileModuleAsync(t))))}}class Am{constructor(){this.outlet=null,this.route=null,this.resolver=null,this.children=new Tm,this.attachRef=null}}class Tm{constructor(){this.contexts=new Map}onChildOutletCreated(t,e){const n=this.getOrCreateContext(t);n.outlet=e,this.contexts.set(t,n)}onChildOutletDestroyed(t){const e=this.getContext(t);e&&(e.outlet=null)}onOutletDeactivated(){const t=this.contexts;return this.contexts=new Map,t}onOutletReAttached(t){this.contexts=t}getOrCreateContext(t){let e=this.getContext(t);return e||(e=new Am,this.contexts.set(t,e)),e}getContext(t){return this.contexts.get(t)||null}}class Om{shouldProcessUrl(t){return!0}extract(t){return t}merge(t,e){return t}}function Fm(t){throw t}function km(t,e,n){return e.parse("/")}function Im(t,e){return ed(null)}const Rm={paths:"exact",fragment:"ignored",matrixParams:"ignored",queryParams:"exact"},Pm={paths:"subset",fragment:"ignored",matrixParams:"ignored",queryParams:"subset"};let Lm=(()=>{class t{constructor(t,e,n,r,s,i,o,a){this.rootComponentType=t,this.urlSerializer=e,this.rootContexts=n,this.location=r,this.config=a,this.lastSuccessfulNavigation=null,this.currentNavigation=null,this.disposed=!1,this.lastLocationChangeInfo=null,this.navigationId=0,this.currentPageId=0,this.isNgZoneEnabled=!1,this.events=new D,this.errorHandler=Fm,this.malformedUriErrorHandler=km,this.navigated=!1,this.lastSuccessfulId=-1,this.hooks={beforePreactivation:Im,afterPreactivation:Im},this.urlHandlingStrategy=new Om,this.routeReuseStrategy=new Em,this.onSameUrlNavigation="ignore",this.paramsInheritanceStrategy="emptyOnly",this.urlUpdateStrategy="deferred",this.relativeLinkResolution="corrected",this.canceledNavigationResolution="replace",this.ngModule=s.get(ll),this.console=s.get(nu);const l=s.get(gu);this.isNgZoneEnabled=l instanceof gu&&gu.isInAngularZone(),this.resetConfig(a),this.currentUrlTree=new Bf(new Hf([],{}),{},null),this.rawUrlTree=this.currentUrlTree,this.browserUrlTree=this.currentUrlTree,this.configLoader=new xm(i,o,t=>this.triggerEvent(new mf(t)),t=>this.triggerEvent(new yf(t))),this.routerState=dg(this.currentUrlTree,this.rootComponentType),this.transitions=new _p({id:0,targetPageId:0,currentUrlTree:this.currentUrlTree,currentRawUrl:this.currentUrlTree,extractedUrl:this.urlHandlingStrategy.extract(this.currentUrlTree),urlAfterRedirects:this.urlHandlingStrategy.extract(this.currentUrlTree),rawUrl:this.currentUrlTree,extras:{},resolve:null,reject:null,promise:Promise.resolve(!0),source:"imperative",restoredState:null,currentSnapshot:this.routerState.snapshot,targetSnapshot:null,currentRouterState:this.routerState,targetRouterState:null,guards:{canActivateChecks:[],canDeactivateChecks:[]},guardsResult:null}),this.navigations=this.setupNavigations(this.transitions),this.processNavigations()}setupNavigations(t){const e=this.events;return t.pipe(rd(t=>0!==t.id),x(t=>Object.assign(Object.assign({},t),{extractedUrl:this.urlHandlingStrategy.extract(t.rawUrl)})),tp(t=>{let n=!1,r=!1;return ed(t).pipe(tf(t=>{this.currentNavigation={id:t.id,initialUrl:t.currentRawUrl,extractedUrl:t.extractedUrl,trigger:t.source,extras:t.extras,previousNavigation:this.lastSuccessfulNavigation?Object.assign(Object.assign({},this.lastSuccessfulNavigation),{previousNavigation:null}):null}}),tp(t=>{const n=!this.navigated||t.extractedUrl.toString()!==this.browserUrlTree.toString();if(("reload"===this.onSameUrlNavigation||n)&&this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl))return ed(t).pipe(tp(t=>{const n=this.transitions.getValue();return e.next(new af(t.id,this.serializeUrl(t.extractedUrl),t.source,t.restoredState)),n!==this.transitions.getValue()?qd:Promise.resolve(t)}),function(t,e,n,r){return tp(s=>function(t,e,n,r,s){return new om(t,e,n,r,s).apply()}(t,e,n,s.extractedUrl,r).pipe(x(t=>Object.assign(Object.assign({},s),{urlAfterRedirects:t}))))}(this.ngModule.injector,this.configLoader,this.urlSerializer,this.config),tf(t=>{this.currentNavigation=Object.assign(Object.assign({},this.currentNavigation),{finalUrl:t.urlAfterRedirects})}),function(t,e,n,r,s){return B(i=>function(t,e,n,r,s="emptyOnly",i="legacy"){try{const o=new mm(t,e,n,r,s,i).recognize();return null===o?gm(new fm):ed(o)}catch(o){return gm(o)}}(t,e,i.urlAfterRedirects,n(i.urlAfterRedirects),r,s).pipe(x(t=>Object.assign(Object.assign({},i),{targetSnapshot:t}))))}(this.rootComponentType,this.config,t=>this.serializeUrl(t),this.paramsInheritanceStrategy,this.relativeLinkResolution),tf(t=>{"eager"===this.urlUpdateStrategy&&(t.extras.skipLocationChange||this.setBrowserUrl(t.urlAfterRedirects,t),this.browserUrlTree=t.urlAfterRedirects);const n=new hf(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);e.next(n)}));if(n&&this.rawUrlTree&&this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)){const{id:n,extractedUrl:r,source:s,restoredState:i,extras:o}=t,a=new af(n,this.serializeUrl(r),s,i);e.next(a);const l=dg(r,this.rootComponentType).snapshot;return ed(Object.assign(Object.assign({},t),{targetSnapshot:l,urlAfterRedirects:r,extras:Object.assign(Object.assign({},o),{skipLocationChange:!1,replaceUrl:!1})}))}return this.rawUrlTree=t.rawUrl,this.browserUrlTree=t.urlAfterRedirects,t.resolve(null),qd}),Dm(t=>{const{targetSnapshot:e,id:n,extractedUrl:r,rawUrl:s,extras:{skipLocationChange:i,replaceUrl:o}}=t;return this.hooks.beforePreactivation(e,{navigationId:n,appliedUrlTree:r,rawUrlTree:s,skipLocationChange:!!i,replaceUrl:!!o})}),tf(t=>{const e=new df(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);this.triggerEvent(e)}),x(t=>Object.assign(Object.assign({},t),{guards:cm(t.targetSnapshot,t.currentSnapshot,this.rootContexts)})),function(t,e){return B(n=>{const{targetSnapshot:r,currentSnapshot:s,guards:{canActivateChecks:i,canDeactivateChecks:o}}=n;return 0===o.length&&0===i.length?ed(Object.assign(Object.assign({},n),{guardsResult:!0})):function(t,e,n,r){return N(t).pipe(B(t=>function(t,e,n,r,s){const i=e&&e.routeConfig?e.routeConfig.canDeactivate:null;return i&&0!==i.length?ed(i.map(i=>{const o=hm(i,e,s);let a;if(function(t){return t&&Mg(t.canDeactivate)}(o))a=Rf(o.canDeactivate(t,e,n,r));else{if(!Mg(o))throw new Error("Invalid CanDeactivate guard");a=Rf(o(t,e,n,r))}return a.pipe(Xp())})).pipe(Hg()):ed(!0)}(t.component,t.route,n,e,r)),Xp(t=>!0!==t,!0))}(o,r,s,t).pipe(B(n=>n&&"boolean"==typeof n?function(t,e,n,r){return N(e).pipe(nd(e=>Fp(function(t,e){return null!==t&&e&&e(new vf(t)),ed(!0)}(e.route.parent,r),function(t,e){return null!==t&&e&&e(new wf(t)),ed(!0)}(e.route,r),function(t,e,n){const r=e[e.length-1],s=e.slice(0,e.length-1).reverse().map(t=>function(t){const e=t.routeConfig?t.routeConfig.canActivateChild:null;return e&&0!==e.length?{node:t,guards:e}:null}(t)).filter(t=>null!==t).map(e=>kp(()=>ed(e.guards.map(s=>{const i=hm(s,e.node,n);let o;if(function(t){return t&&Mg(t.canActivateChild)}(i))o=Rf(i.canActivateChild(r,t));else{if(!Mg(i))throw new Error("Invalid CanActivateChild guard");o=Rf(i(r,t))}return o.pipe(Xp())})).pipe(Hg())));return ed(s).pipe(Hg())}(t,e.path,n),function(t,e,n){const r=e.routeConfig?e.routeConfig.canActivate:null;return r&&0!==r.length?ed(r.map(r=>kp(()=>{const s=hm(r,e,n);let i;if(function(t){return t&&Mg(t.canActivate)}(s))i=Rf(s.canActivate(e,t));else{if(!Mg(s))throw new Error("Invalid CanActivate guard");i=Rf(s(e,t))}return i.pipe(Xp())}))).pipe(Hg()):ed(!0)}(t,e.route,n))),Xp(t=>!0!==t,!0))}(r,i,t,e):ed(n)),x(t=>Object.assign(Object.assign({},n),{guardsResult:t})))})}(this.ngModule.injector,t=>this.triggerEvent(t)),tf(t=>{if(Vg(t.guardsResult)){const e=xf(`Redirecting to "${this.serializeUrl(t.guardsResult)}"`);throw e.url=t.guardsResult,e}const e=new pf(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot,!!t.guardsResult);this.triggerEvent(e)}),rd(t=>!!t.guardsResult||(this.cancelNavigationTransition(t,""),!1)),Dm(t=>{if(t.guards.canActivateChecks.length)return ed(t).pipe(tf(t=>{const e=new ff(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);this.triggerEvent(e)}),tp(t=>{let e=!1;return ed(t).pipe((n=this.paramsInheritanceStrategy,r=this.ngModule.injector,B(t=>{const{targetSnapshot:e,guards:{canActivateChecks:s}}=t;if(!s.length)return ed(t);let i=0;return N(s).pipe(nd(t=>function(t,e,n,r){return function(t,e,n,r){const s=Object.keys(t);if(0===s.length)return ed({});const i={};return N(s).pipe(B(s=>function(t,e,n,r){const s=hm(t,e,r);return Rf(s.resolve?s.resolve(e,n):s(e,n))}(t[s],e,n,r).pipe(tf(t=>{i[s]=t}))),Up(1),B(()=>Object.keys(i).length===s.length?ed(i):qd))}(t._resolve,t,e,r).pipe(x(e=>(t._resolvedData=e,t.data=Object.assign(Object.assign({},t.data),fg(t,n).resolve),null)))}(t.route,e,n,r)),tf(()=>i++),Up(1),B(e=>i===s.length?ed(t):qd))})),tf({next:()=>e=!0,complete:()=>{e||this.cancelNavigationTransition(t,"At least one route resolver didn't emit any value.")}}));var n,r}),tf(t=>{const e=new gf(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);this.triggerEvent(e)}))}),Dm(t=>{const{targetSnapshot:e,id:n,extractedUrl:r,rawUrl:s,extras:{skipLocationChange:i,replaceUrl:o}}=t;return this.hooks.afterPreactivation(e,{navigationId:n,appliedUrlTree:r,rawUrlTree:s,skipLocationChange:!!i,replaceUrl:!!o})}),x(t=>{const e=function(t,e,n){const r=Cg(t,e._root,n?n._root:void 0);return new hg(r,e)}(this.routeReuseStrategy,t.targetSnapshot,t.currentRouterState);return Object.assign(Object.assign({},t),{targetRouterState:e})}),tf(t=>{this.currentUrlTree=t.urlAfterRedirects,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,t.rawUrl),this.routerState=t.targetRouterState,"deferred"===this.urlUpdateStrategy&&(t.extras.skipLocationChange||this.setBrowserUrl(this.rawUrlTree,t),this.browserUrlTree=t.urlAfterRedirects)}),(i=this.rootContexts,o=this.routeReuseStrategy,a=t=>this.triggerEvent(t),x(t=>(new Lg(o,t.targetRouterState,t.currentRouterState,a).activate(i),t))),tf({next(){n=!0},complete(){n=!0}}),(s=()=>{n||r||this.cancelNavigationTransition(t,`Navigation ID ${t.id} is not equal to the current navigation id ${this.navigationId}`),this.currentNavigation=null},t=>t.lift(new rf(s))),Vp(n=>{if(r=!0,(s=n)&&s.ngNavigationCancelingError){const r=Vg(n.url);r||(this.navigated=!0,this.resetStateAndUrl(t.currentRouterState,t.currentUrlTree,t.rawUrl));const s=new uf(t.id,this.serializeUrl(t.extractedUrl),n.message);e.next(s),r?setTimeout(()=>{const e=this.urlHandlingStrategy.merge(n.url,this.rawUrlTree);this.scheduleNavigation(e,"imperative",null,{skipLocationChange:t.extras.skipLocationChange,replaceUrl:"eager"===this.urlUpdateStrategy},{resolve:t.resolve,reject:t.reject,promise:t.promise})},0):t.resolve(!1)}else{this.resetStateAndUrl(t.currentRouterState,t.currentUrlTree,t.rawUrl);const r=new cf(t.id,this.serializeUrl(t.extractedUrl),n);e.next(r);try{t.resolve(this.errorHandler(n))}catch(i){t.reject(i)}}var s;return qd}));var s,i,o,a}))}resetRootComponentType(t){this.rootComponentType=t,this.routerState.root.component=this.rootComponentType}getTransition(){const t=this.transitions.value;return t.urlAfterRedirects=this.browserUrlTree,t}setTransition(t){this.transitions.next(Object.assign(Object.assign({},this.getTransition()),t))}initialNavigation(){this.setUpLocationChangeListener(),0===this.navigationId&&this.navigateByUrl(this.location.path(!0),{replaceUrl:!0})}setUpLocationChangeListener(){this.locationSubscription||(this.locationSubscription=this.location.subscribe(t=>{const e=this.extractLocationChangeInfoFromEvent(t);this.shouldScheduleNavigation(this.lastLocationChangeInfo,e)&&setTimeout(()=>{const{source:t,state:n,urlTree:r}=e,s={replaceUrl:!0};if(n){const t=Object.assign({},n);delete t.navigationId,delete t.\u0275routerPageId,0!==Object.keys(t).length&&(s.state=t)}this.scheduleNavigation(r,t,n,s)},0),this.lastLocationChangeInfo=e}))}extractLocationChangeInfoFromEvent(t){var e;return{source:"popstate"===t.type?"popstate":"hashchange",urlTree:this.parseUrl(t.url),state:(null===(e=t.state)||void 0===e?void 0:e.navigationId)?t.state:null,transitionId:this.getTransition().id}}shouldScheduleNavigation(t,e){if(!t)return!0;const n=e.urlTree.toString()===t.urlTree.toString();return!(e.transitionId===t.transitionId&&n&&("hashchange"===e.source&&"popstate"===t.source||"popstate"===e.source&&"hashchange"===t.source))}get url(){return this.serializeUrl(this.currentUrlTree)}getCurrentNavigation(){return this.currentNavigation}triggerEvent(t){this.events.next(t)}resetConfig(t){$g(t),this.config=t.map(Wg),this.navigated=!1,this.lastSuccessfulId=-1}ngOnDestroy(){this.dispose()}dispose(){this.transitions.complete(),this.locationSubscription&&(this.locationSubscription.unsubscribe(),this.locationSubscription=void 0),this.disposed=!0}createUrlTree(t,e={}){const{relativeTo:n,queryParams:r,fragment:s,queryParamsHandling:i,preserveFragment:o}=e,a=n||this.routerState.root,l=o?this.currentUrlTree.fragment:s;let u=null;switch(i){case"merge":u=Object.assign(Object.assign({},this.currentUrlTree.queryParams),r);break;case"preserve":u=this.currentUrlTree.queryParams;break;default:u=r||null}return null!==u&&(u=this.removeEmptyProps(u)),function(t,e,n,r,s){if(0===n.length)return Sg(e.root,e.root,e,r,s);const i=function(t){if("string"==typeof t[0]&&1===t.length&&"/"===t[0])return new Ag(!0,0,t);let e=0,n=!1;const r=t.reduce((t,r,s)=>{if("object"==typeof r&&null!=r){if(r.outlets){const e={};return If(r.outlets,(t,n)=>{e[n]="string"==typeof t?t.split("/"):t}),[...t,{outlets:e}]}if(r.segmentPath)return[...t,r.segmentPath]}return"string"!=typeof r?[...t,r]:0===s?(r.split("/").forEach((r,s)=>{0==s&&"."===r||(0==s&&""===r?n=!0:".."===r?e++:""!=r&&t.push(r))}),t):[...t,r]},[]);return new Ag(n,e,r)}(n);if(i.toRoot())return Sg(e.root,new Hf([],{}),e,r,s);const o=function(t,e,n){if(t.isAbsolute)return new Tg(e.root,!0,0);if(-1===n.snapshot._lastPathIndex){const t=n.snapshot._urlSegment;return new Tg(t,t===e.root,0)}const r=Dg(t.commands[0])?0:1;return function(t,e,n){let r=t,s=e,i=n;for(;i>s;){if(i-=s,r=r.parent,!r)throw new Error("Invalid number of '../'");s=r.segments.length}return new Tg(r,!1,s-i)}(n.snapshot._urlSegment,n.snapshot._lastPathIndex+r,t.numberOfDoubleDots)}(i,e,t),a=o.processChildren?Fg(o.segmentGroup,o.index,i.commands):Og(o.segmentGroup,o.index,i.commands);return Sg(o.segmentGroup,a,e,r,s)}(a,this.currentUrlTree,t,u,null!=l?l:null)}navigateByUrl(t,e={skipLocationChange:!1}){const n=Vg(t)?t:this.parseUrl(t),r=this.urlHandlingStrategy.merge(n,this.rawUrlTree);let s=null;return"computed"===this.canceledNavigationResolution&&(0===this.currentPageId||e.skipLocationChange||e.replaceUrl)&&(s=this.location.getState()),this.scheduleNavigation(r,"imperative",s,e)}navigate(t,e={skipLocationChange:!1}){return function(t){for(let e=0;e<t.length;e++){const n=t[e];if(null==n)throw new Error(`The requested path contains ${n} segment at index ${e}`)}}(t),this.navigateByUrl(this.createUrlTree(t,e),e)}serializeUrl(t){return this.urlSerializer.serialize(t)}parseUrl(t){let e;try{e=this.urlSerializer.parse(t)}catch(n){e=this.malformedUriErrorHandler(n,this.urlSerializer,t)}return e}isActive(t,e){let n;if(n=!0===e?Object.assign({},Rm):!1===e?Object.assign({},Pm):e,Vg(t))return Nf(this.currentUrlTree,t,n);const r=this.parseUrl(t);return Nf(this.currentUrlTree,r,n)}removeEmptyProps(t){return Object.keys(t).reduce((e,n)=>{const r=t[n];return null!=r&&(e[n]=r),e},{})}processNavigations(){this.navigations.subscribe(t=>{this.navigated=!0,this.lastSuccessfulId=t.id,this.currentPageId=t.targetPageId,this.events.next(new lf(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(this.currentUrlTree))),this.lastSuccessfulNavigation=this.currentNavigation,t.resolve(!0)},t=>{this.console.warn("Unhandled Navigation Error: ")})}scheduleNavigation(t,e,n,r,s){if(this.disposed)return Promise.resolve(!1);const i=this.getTransition(),o="imperative"!==e&&"imperative"===(null==i?void 0:i.source),a=(this.lastSuccessfulId===i.id||this.currentNavigation?i.rawUrl:i.urlAfterRedirects).toString()===t.toString();if(o&&a)return Promise.resolve(!0);let l,u,c;s?(l=s.resolve,u=s.reject,c=s.promise):c=new Promise((t,e)=>{l=t,u=e});const h=++this.navigationId;let d;return d="computed"===this.canceledNavigationResolution?n&&n.\u0275routerPageId?n.\u0275routerPageId:this.currentPageId+1:0,this.setTransition({id:h,targetPageId:d,source:e,restoredState:n,currentUrlTree:this.currentUrlTree,currentRawUrl:this.rawUrlTree,rawUrl:t,extras:r,resolve:l,reject:u,promise:c,currentSnapshot:this.routerState.snapshot,currentRouterState:this.routerState}),c.catch(t=>Promise.reject(t))}setBrowserUrl(t,e){const n=this.urlSerializer.serialize(t),r=Object.assign(Object.assign({},e.extras.state),this.generateNgRouterState(e.id,e.targetPageId));this.location.isCurrentPathEqualTo(n)||e.extras.replaceUrl?this.location.replaceState(n,"",r):this.location.go(n,"",r)}resetStateAndUrl(t,e,n){this.routerState=t,this.currentUrlTree=e,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,n),this.resetUrlToCurrentUrlTree()}resetUrlToCurrentUrlTree(){this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree),"",this.generateNgRouterState(this.lastSuccessfulId,this.currentPageId))}cancelNavigationTransition(t,e){"computed"===this.canceledNavigationResolution?"popstate"!==t.source&&"eager"!==this.urlUpdateStrategy||this.location.historyGo(this.currentPageId-t.targetPageId):this.resetUrlToCurrentUrlTree();const n=new uf(t.id,this.serializeUrl(t.extractedUrl),e);this.triggerEvent(n),t.resolve(!1)}generateNgRouterState(t,e){return"computed"===this.canceledNavigationResolution?{navigationId:t,"\u0275routerPageId":e}:{navigationId:t}}}return t.\u0275fac=function(e){return new(e||t)(ar(qn),ar(zf),ar(Tm),ar(lc),ar(eo),ar(ju),ar(du),ar(void 0))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Nm=(()=>{class t{constructor(t,e,n,r,s){this.parentContexts=t,this.location=e,this.resolver=n,this.changeDetector=s,this.activated=null,this._activatedRoute=null,this.activateEvents=new Tl,this.deactivateEvents=new Tl,this.name=r||Df,t.onChildOutletCreated(this.name,this)}ngOnDestroy(){this.parentContexts.onChildOutletDestroyed(this.name)}ngOnInit(){if(!this.activated){const t=this.parentContexts.getContext(this.name);t&&t.route&&(t.attachRef?this.attach(t.attachRef,t.route):this.activateWith(t.route,t.resolver||null))}}get isActivated(){return!!this.activated}get component(){if(!this.activated)throw new Error("Outlet is not activated");return this.activated.instance}get activatedRoute(){if(!this.activated)throw new Error("Outlet is not activated");return this._activatedRoute}get activatedRouteData(){return this._activatedRoute?this._activatedRoute.snapshot.data:{}}detach(){if(!this.activated)throw new Error("Outlet is not activated");this.location.detach();const t=this.activated;return this.activated=null,this._activatedRoute=null,t}attach(t,e){this.activated=t,this._activatedRoute=e,this.location.insert(t.hostView)}deactivate(){if(this.activated){const t=this.component;this.activated.destroy(),this.activated=null,this._activatedRoute=null,this.deactivateEvents.emit(t)}}activateWith(t,e){if(this.isActivated)throw new Error("Cannot activate an already activated outlet");this._activatedRoute=t;const n=(e=e||this.resolver).resolveComponentFactory(t._futureSnapshot.routeConfig.component),r=this.parentContexts.getOrCreateContext(this.name).children,s=new jm(t,r,this.location.injector);this.activated=this.location.createComponent(n,this.location.length,s),this.changeDetector.markForCheck(),this.activateEvents.emit(this.activated.instance)}}return t.\u0275fac=function(e){return new(e||t)(wo(Tm),wo(hl),wo(Da),("name",function(t,e){const n=t.attrs;if(n){const t=n.length;let r=0;for(;r<t;){const s=n[r];if(pn(s))break;if(0===s)r+=2;else if("number"==typeof s)for(r++;r<t&&"string"==typeof n[r];)r++;else{if(s===e)return n[r+1];r+=2}}}return null}(Ie(),"name")),wo(Ja))},t.\u0275dir=Zt({type:t,selectors:[["router-outlet"]],outputs:{activateEvents:"activate",deactivateEvents:"deactivate"},exportAs:["outlet"]}),t})();class jm{constructor(t,e,n){this.route=t,this.childContexts=e,this.parent=n}get(t,e){return t===pg?this.route:t===Tm?this.childContexts:this.parent.get(t,e)}}class Mm{}class Vm{preload(t,e){return ed(null)}}let Bm=(()=>{class t{constructor(t,e,n,r,s){this.router=t,this.injector=r,this.preloadingStrategy=s,this.loader=new xm(e,n,e=>t.triggerEvent(new mf(e)),e=>t.triggerEvent(new yf(e)))}setUpPreloading(){this.subscription=this.router.events.pipe(rd(t=>t instanceof lf),nd(()=>this.preload())).subscribe(()=>{})}preload(){const t=this.injector.get(ll);return this.processRoutes(t,this.router.config)}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}processRoutes(t,e){const n=[];for(const r of e)if(r.loadChildren&&!r.canLoad&&r._loadedConfig){const t=r._loadedConfig;n.push(this.processRoutes(t.module,t.routes))}else r.loadChildren&&!r.canLoad?n.push(this.preloadConfig(t,r)):r.children&&n.push(this.processRoutes(t,r.children));return N(n).pipe($(),x(t=>{}))}preloadConfig(t,e){return this.preloadingStrategy.preload(e,()=>(e._loadedConfig?ed(e._loadedConfig):this.loader.load(t.injector,e)).pipe(B(t=>(e._loadedConfig=t,this.processRoutes(t.module,t.routes)))))}}return t.\u0275fac=function(e){return new(e||t)(ar(Lm),ar(ju),ar(du),ar(eo),ar(Mm))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Hm=(()=>{class t{constructor(t,e,n={}){this.router=t,this.viewportScroller=e,this.options=n,this.lastId=0,this.lastSource="imperative",this.restoredId=0,this.store={},n.scrollPositionRestoration=n.scrollPositionRestoration||"disabled",n.anchorScrolling=n.anchorScrolling||"disabled"}init(){"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.setHistoryScrollRestoration("manual"),this.routerEventsSubscription=this.createScrollEvents(),this.scrollEventsSubscription=this.consumeScrollEvents()}createScrollEvents(){return this.router.events.subscribe(t=>{t instanceof af?(this.store[this.lastId]=this.viewportScroller.getScrollPosition(),this.lastSource=t.navigationTrigger,this.restoredId=t.restoredState?t.restoredState.navigationId:0):t instanceof lf&&(this.lastId=t.id,this.scheduleScrollEvent(t,this.router.parseUrl(t.urlAfterRedirects).fragment))})}consumeScrollEvents(){return this.router.events.subscribe(t=>{t instanceof _f&&(t.position?"top"===this.options.scrollPositionRestoration?this.viewportScroller.scrollToPosition([0,0]):"enabled"===this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition(t.position):t.anchor&&"enabled"===this.options.anchorScrolling?this.viewportScroller.scrollToAnchor(t.anchor):"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition([0,0]))})}scheduleScrollEvent(t,e){this.router.triggerEvent(new _f(t,"popstate"===this.lastSource?this.store[this.restoredId]:null,e))}ngOnDestroy(){this.routerEventsSubscription&&this.routerEventsSubscription.unsubscribe(),this.scrollEventsSubscription&&this.scrollEventsSubscription.unsubscribe()}}return t.\u0275fac=function(e){return new(e||t)(ar(Lm),ar(vh),ar(void 0))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const Um=new $n("ROUTER_CONFIGURATION"),$m=new $n("ROUTER_FORROOT_GUARD"),zm=[lc,{provide:zf,useClass:qf},{provide:Lm,useFactory:function(t,e,n,r,s,i,o,a={},l,u){const c=new Lm(null,t,e,n,r,s,i,Ff(o));return l&&(c.urlHandlingStrategy=l),u&&(c.routeReuseStrategy=u),function(t,e){t.errorHandler&&(e.errorHandler=t.errorHandler),t.malformedUriErrorHandler&&(e.malformedUriErrorHandler=t.malformedUriErrorHandler),t.onSameUrlNavigation&&(e.onSameUrlNavigation=t.onSameUrlNavigation),t.paramsInheritanceStrategy&&(e.paramsInheritanceStrategy=t.paramsInheritanceStrategy),t.relativeLinkResolution&&(e.relativeLinkResolution=t.relativeLinkResolution),t.urlUpdateStrategy&&(e.urlUpdateStrategy=t.urlUpdateStrategy)}(a,c),a.enableTracing&&c.events.subscribe(t=>{var e,n;null===(e=console.group)||void 0===e||e.call(console,`Router Event: ${t.constructor.name}`),console.log(t.toString()),console.log(t),null===(n=console.groupEnd)||void 0===n||n.call(console)}),c},deps:[zf,Tm,lc,eo,ju,du,Sm,Um,[class{},new hr],[class{},new hr]]},Tm,{provide:pg,useFactory:function(t){return t.routerState.root},deps:[Lm]},{provide:ju,useClass:Bu},Bm,Vm,class{preload(t,e){return e().pipe(Vp(()=>ed(null)))}},{provide:Um,useValue:{enableTracing:!1}}];function qm(){return new Fu("Router",Lm)}let Wm=(()=>{class t{constructor(t,e){}static forRoot(e,n){return{ngModule:t,providers:[zm,Km(e),{provide:$m,useFactory:Ym,deps:[[Lm,new hr,new dr]]},{provide:Um,useValue:n||{}},{provide:rc,useFactory:Zm,deps:[Zu,[new cr(ic),new hr],Um]},{provide:Hm,useFactory:Gm,deps:[Lm,vh,Um]},{provide:Mm,useExisting:n&&n.preloadingStrategy?n.preloadingStrategy:Vm},{provide:Fu,multi:!0,useFactory:qm},[Qm,{provide:Zl,multi:!0,useFactory:Xm,deps:[Qm]},{provide:ty,useFactory:Jm,deps:[Qm]},{provide:eu,multi:!0,useExisting:ty}]]}}static forChild(e){return{ngModule:t,providers:[Km(e)]}}}return t.\u0275fac=function(e){return new(e||t)(ar($m,8),ar(Lm,8))},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({}),t})();function Gm(t,e,n){return n.scrollOffset&&e.setOffset(n.scrollOffset),new Hm(t,e,n)}function Zm(t,e,n={}){return n.useHash?new ac(t,e):new oc(t,e)}function Ym(t){return"guarded"}function Km(t){return[{provide:zn,multi:!0,useValue:t},{provide:Sm,multi:!0,useValue:t}]}let Qm=(()=>{class t{constructor(t){this.injector=t,this.initNavigation=!1,this.resultOfPreactivationDone=new D}appInitializer(){return this.injector.get(Ku,Promise.resolve(null)).then(()=>{let t=null;const e=new Promise(e=>t=e),n=this.injector.get(Lm),r=this.injector.get(Um);return"disabled"===r.initialNavigation?(n.setUpLocationChangeListener(),t(!0)):"enabled"===r.initialNavigation||"enabledBlocking"===r.initialNavigation?(n.hooks.afterPreactivation=()=>this.initNavigation?ed(null):(this.initNavigation=!0,t(!0),this.resultOfPreactivationDone),n.initialNavigation()):t(!0),e})}bootstrapListener(t){const e=this.injector.get(Um),n=this.injector.get(Bm),r=this.injector.get(Hm),s=this.injector.get(Lm),i=this.injector.get(Lu);t===i.components[0]&&("enabledNonBlocking"!==e.initialNavigation&&void 0!==e.initialNavigation||s.initialNavigation(),n.setUpPreloading(),r.init(),s.resetRootComponentType(i.componentTypes[0]),this.resultOfPreactivationDone.next(null),this.resultOfPreactivationDone.complete())}}return t.\u0275fac=function(e){return new(e||t)(ar(eo))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function Xm(t){return t.appInitializer.bind(t)}function Jm(t){return t.bootstrapListener.bind(t)}const ty=new $n("Router Initializer");function ey(t,e,n,r){var s,i=arguments.length,o=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,r);else for(var a=t.length-1;a>=0;a--)(s=t[a])&&(o=(i<3?s(o):i>3?s(e,n,o):s(e,n))||o);return i>3&&o&&Object.defineProperty(e,n,o),o}class ny{constructor(t,e){this.dueTime=t,this.scheduler=e}call(t,e){return e.subscribe(new ry(t,this.dueTime,this.scheduler))}}class ry extends f{constructor(t,e,n){super(t),this.dueTime=e,this.scheduler=n,this.debouncedSubscription=null,this.lastValue=null,this.hasValue=!1}_next(t){this.clearDebounce(),this.lastValue=t,this.hasValue=!0,this.add(this.debouncedSubscription=this.scheduler.schedule(sy,this.dueTime,this))}_complete(){this.debouncedNext(),this.destination.complete()}debouncedNext(){if(this.clearDebounce(),this.hasValue){const{lastValue:t}=this;this.lastValue=null,this.hasValue=!1,this.destination.next(t)}}clearDebounce(){const t=this.debouncedSubscription;null!==t&&(this.remove(t),t.unsubscribe(),this.debouncedSubscription=null)}}function sy(t){t.debouncedNext()}class iy{constructor(t,e){this.compare=t,this.keySelector=e}call(t,e){return e.subscribe(new oy(t,this.compare,this.keySelector))}}class oy extends f{constructor(t,e,n){super(t),this.keySelector=n,this.hasKey=!1,"function"==typeof e&&(this.compare=e)}compare(t,e){return t===e}_next(t){let e;try{const{keySelector:n}=this;e=n?n(t):t}catch(r){return this.destination.error(r)}let n=!1;if(this.hasKey)try{const{compare:t}=this;n=t(this.key,e)}catch(r){return this.destination.error(r)}else this.hasKey=!0;n||(this.key=e,this.destination.next(t))}}class ay{constructor(t,e){this.predicate=t,this.inclusive=e}call(t,e){return e.subscribe(new ly(t,this.predicate,this.inclusive))}}class ly extends f{constructor(t,e,n){super(t),this.predicate=e,this.inclusive=n,this.index=0}_next(t){const e=this.destination;let n;try{n=this.predicate(t,this.index++)}catch(r){return void e.error(r)}this.nextOrComplete(t,n)}nextOrComplete(t,e){const n=this.destination;Boolean(e)?n.next(t):(this.inclusive&&n.next(t),n.complete())}}function uy(t,e){1&t&&No(0)}const cy=["*"];function hy(t,e){1&t&&xo(0)}function dy(t,e){if(1&t){const t=Ao();Do(0,"section",2),Do(1,"po-accordion-item-header",3),Fo("p-toggle",function(e){const n=ke(t).$implicit;return Ro().headerToggle(e,n)}),Eo(),Do(2,"po-accordion-item-body",4),vo(3,hy,1,0,"ng-container",5),Eo(),Eo()}if(2&t){const t=e.$implicit;$o("po-accordion-item-active",t.expanded),Ws(1),Co("p-expanded",t.expanded)("p-label",t.label),Ws(1),Co("p-expanded",t.expanded),Ws(1),Co("ngTemplateOutlet",t.templateRef)}}function py(t,e){1&t&&(Do(0,"div",1),Do(1,"div",2),No(2),Eo(),Eo()),2&t&&Co("@toggleBody",void 0)}function fy(t,e){1&t&&xo(0)}function gy(t,e){1&t&&So(0,"i",2),2&t&&qo(Qn,zo,Ro().class,!0)}function my(t,e){if(1&t&&(Do(0,"span",2),ta(1),Eo()),2&t){const t=Ro();Ws(1),ea(t.text)}}const yy=["button"];function vy(t,e){1&t&&(Do(0,"div",5),So(1,"po-loading-icon",6),Eo())}function by(t,e){1&t&&So(0,"po-icon",7),2&t&&Co("p-icon",Ro().icon)}function wy(t,e){if(1&t&&(Do(0,"span",8),ta(1),Eo()),2&t){const t=Ro();Ws(1),ea(t.label)}}function Cy(t,e){if(1&t&&(Do(0,"span",2),So(1,"span",3),ta(2),Eo()),2&t){const t=Ro();Ws(2),na(" ",t.errorPattern," ")}}function _y(t,e){if(1&t&&(Do(0,"span",5),ta(1),Eo()),2&t){const t=Ro();Ws(1),ea(t.literals.optional)}}function Dy(t,e){if(1&t&&(Do(0,"div",6),ta(1),Eo()),2&t){const t=Ro();Ws(1),ea(t.help)}}function Ey(t,e){if(1&t){const t=Ao();Do(0,"span",1),Fo("click",function(){return ke(t),Ro().clear()}),Eo()}}const Sy=["inp"],xy=["modalContent"];function Ay(t,e){if(1&t){const t=Ao();Do(0,"a",14),Fo("click",function(){return ke(t),Ro(2).close(!0)}),So(1,"span",15),Eo()}}function Ty(t,e){if(1&t){const t=Ao();Do(0,"po-button",16),Fo("p-click",function(){return ke(t),Ro(2).secondaryAction.action()}),Eo()}if(2&t){const t=Ro(2);Co("p-disabled",t.secondaryAction.disabled)("p-label",t.secondaryAction.label)("p-loading",t.secondaryAction.loading)("p-type",t.getSecondaryActionButtonType())}}function Oy(t,e){if(1&t){const t=Ao();Do(0,"div",1),Fo("keydown.esc",function(e){return ke(t),Ro().closeModalOnEscapeKey(e)}),Do(1,"div",2),Do(2,"div",3),Fo("mousedown",function(e){return ke(t),Ro().onClickOut(e)}),Do(3,"div",4),Do(4,"div",5,6),Do(6,"div",7),Do(7,"div",8),ta(8),Eo(),vo(9,Ay,2,0,"a",9),Eo(),Do(10,"div",10),No(11),Eo(),Do(12,"div",11),vo(13,Ty,1,4,"po-button",12),Do(14,"po-button",13),Fo("p-click",function(){return ke(t),Ro().primaryAction.action()}),Eo(),Eo(),Eo(),Eo(),Eo(),Eo(),Eo()}if(2&t){const t=Ro();Ws(4),ra("po-modal-content po-modal-",t.size,""),Ws(4),na(" ",t.title," "),Ws(1),Co("ngIf",!t.hideClose),Ws(4),Co("ngIf",t.secondaryAction),Ws(1),Co("p-disabled",t.primaryAction.disabled)("p-label",t.primaryAction.label)("p-loading",t.primaryAction.loading)("p-type",t.getPrimaryActionButtonType())}}const Fy=["toaster"];function ky(t,e){if(1&t){const t=Ao();Do(0,"div",7),Fo("click",function(e){return ke(t),Ro().poToasterAction(e)}),ta(1),Eo()}if(2&t){const t=Ro();Ws(1),na(" ",t.actionLabel," ")}}const Iy=function(t){return{$implicit:t}},Ry=["containerElement"],Py=["contentElement"],Ly=["iconArrow"];function Ny(t,e){if(1&t&&(Do(0,"div",16),So(1,"po-icon",17),Eo()),2&t){const t=Ro();Ws(1),$o("po-field-icon-disabled",t.disabled),Co("p-icon",t.icon)}}function jy(t,e){if(1&t){const t=Ao();Do(0,"po-clean",18),Fo("p-change-event",function(e){return ke(t),Ro().clear(e)}),Eo()}2&t&&Co("p-element-ref",Ro().inputEl)}function My(t,e){1&t&&xo(0)}function Vy(t,e){1&t&&(Do(0,"div",19),So(1,"po-loading"),Eo())}function By(t,e){1&t&&xo(0)}function Hy(t,e){if(1&t&&vo(0,By,1,0,"ng-container",11),2&t){const t=Ro(),e=bo(18),n=bo(20);Co("ngIf",t.visibleOptions.length)("ngIfThen",e)("ngIfElse",n)}}function Uy(t,e){1&t&&xo(0)}function $y(t,e){if(1&t&&(Do(0,"label",27),ta(1),Eo()),2&t){const t=Ro(2).$implicit;Ws(1),ea(t.label)}}function zy(t,e){if(1&t&&(Do(0,"a",28),So(1,"span",29),Eo()),2&t){const t=Ro(2).$implicit,e=Ro(2);Ws(1),Co("innerHTML",e.getLabelFormatted(null==t?null:t.label),Kr)}}function qy(t,e){if(1&t&&(vo(0,$y,2,1,"label",25),vo(1,zy,2,1,"ng-template",null,26,Gl)),2&t){const t=bo(2),e=Ro().$implicit;Co("ngIf",null==e?null:e.options)("ngIfElse",t)}}function Wy(t,e){1&t&&xo(0)}function Gy(t,e){}const Zy=function(t,e){return{$implicit:t,selected:e}};function Yy(t,e){if(1&t&&vo(0,Gy,0,0,"ng-template",32),2&t){const t=Ro(2).$implicit,e=Ro(2);Co("ngTemplateOutlet",null==e.comboOptionTemplate?null:e.comboOptionTemplate.templateRef)("ngTemplateOutletContext",(n=2,r=Zy,s=t,i=e.compareObjects(e.selectedView,t),function(t,e,n,r,s,i,o){const a=e+n;return go(t,a,s,i)?po(t,a+2,o?r.call(o,s,i):r(s,i)):xl(t,a+2)}(Oe(),Ve(),n,r,s,i,o)))}var n,r,s,i,o}function Ky(t,e){}function Qy(t,e){if(1&t&&(Do(0,"a",28),vo(1,Ky,0,0,"ng-template",32),Eo()),2&t){const t=Ro(2).$implicit,e=Ro(2);Ws(1),Co("ngTemplateOutlet",null==e.comboOptionTemplate?null:e.comboOptionTemplate.templateRef)("ngTemplateOutletContext",(n=2,r=Iy,s=t,function(t,e,n,r,s,i){const o=e+n;return fo(t,o,s)?po(t,o+1,i?r.call(i,s):r(s)):xl(t,o+1)}(Oe(),Ve(),n,r,s,i)))}var n,r,s,i}function Xy(t,e){if(1&t&&(vo(0,Wy,1,0,"ng-container",11),vo(1,Yy,1,5,"ng-template",null,30,Gl),vo(3,Qy,2,4,"ng-template",null,31,Gl)),2&t){const t=bo(2),e=bo(4);Co("ngIf",Ro(3).isOptionGroupList)("ngIfThen",t)("ngIfElse",e)}}function Jy(t,e){if(1&t){const t=Ao();Do(0,"li",7),Fo("click",function(e){const n=ke(t).$implicit,r=Ro(2);return null!=n&&n.options?void 0:r.onOptionClick(n,e)}),vo(1,Uy,1,0,"ng-container",11),vo(2,qy,3,2,"ng-template",null,23,Gl),vo(4,Xy,5,3,"ng-template",null,24,Gl),Eo()}if(2&t){const t=e.$implicit,n=bo(3),r=bo(5),s=Ro(2);$o("po-combo-item-selected",s.compareObjects(s.selectedView,t)),Ws(1),Co("ngIf",s.comboOptionTemplate)("ngIfThen",r)("ngIfElse",n)}}function tv(t,e){if(1&t&&(Do(0,"ul",20,21),vo(2,Jy,6,5,"li",22),Eo()),2&t){const t=Ro();Ws(2),Co("ngForOf",t.visibleOptions)}}function ev(t,e){if(1&t&&(Do(0,"div",33),Do(1,"div",34),Do(2,"span"),ta(3),Eo(),Eo(),Eo()),2&t){const t=Ro();Ws(3),na(" ",t.literals.noData," ")}}function nv(t,e){if(1&t&&(Do(0,"div",6),Do(1,"span",7),ta(2),Eo(),Eo()),2&t){const t=Ro();Ws(2),ea(t.tagOrientation?t.label+":":t.label)}}function rv(t,e){if(1&t&&So(0,"po-icon",8),2&t){const t=Ro();Co("p-icon",t.type?t.iconFromType:t.icon)}}function sv(t,e){if(1&t&&(Do(0,"div",6),So(1,"po-tag",7),Eo()),2&t){const t=Ro().$implicit,e=Ro();Ws(1),Co("p-color",e.typeColor(t.type))("p-value",e.typeValue(t.type))}}function iv(t,e){if(1&t&&(Do(0,"po-accordion-item",4),vo(1,sv,2,2,"div",5),Do(2,"div",1),Do(3,"p"),ta(4),Eo(),Eo(),Eo()),2&t){const t=e.$implicit;Co("p-label",Ro().formatDetailItemTitle(t)),Ws(1),Co("ngIf",t.type),Ws(3),ea(t.detailedMessage)}}let ov=(()=>{class t{constructor(){this.subjectChild=new D}receiveFromChildAccordionClicked(){return this.subjectChild.asObservable()}sendToParentAccordionItemClicked(t){this.subjectChild.next(t)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),av=(()=>{class t{constructor(t){this.accordionService=t}collapse(){this.expanded=!1,this.accordionService.sendToParentAccordionItemClicked(this)}expand(){this.expanded=!0,this.accordionService.sendToParentAccordionItemClicked(this)}}return t.\u0275fac=function(e){return new(e||t)(wo(ov))},t.\u0275cmp=Ut({type:t,selectors:[["po-accordion-item"]],viewQuery:function(t,e){if(1&t&&Hl(sl,7),2&t){let t;Bl(t=$l())&&(e.templateRef=t.first)}},inputs:{label:["p-label","label"]},ngContentSelectors:cy,decls:1,vars:0,template:function(t,e){1&t&&(Lo(),vo(0,uy,1,0,"ng-template"))},encapsulation:2}),t})(),lv=(()=>{class t extends class{}{constructor(t){super(),this.accordionService=t,this.receiveFromChildAccordionSubscription()}ngOnDestroy(){this.accordionServiceSubscription.unsubscribe()}headerToggle(t,e){e.expanded=t,this.toggle(e)}receiveFromChildAccordionSubscription(){this.accordionServiceSubscription=this.accordionService.receiveFromChildAccordionClicked().subscribe(t=>this.toggle(t))}toggle(t){t.expanded?(this.expandedActiveAccordionItem&&this.expandedActiveAccordionItem.collapse(),this.expandedActiveAccordionItem=t):this.expandedActiveAccordionItem=null}}return t.\u0275fac=function(e){return new(e||t)(wo(ov))},t.\u0275cmp=Ut({type:t,selectors:[["po-accordion"]],contentQueries:function(t,e,n){if(1&t&&Ul(n,av,4),2&t){let t;Bl(t=$l())&&(e.poAccordionItems=t)}},features:[wa([ov]),ro],decls:2,vars:1,consts:[[1,"po-accordion","po-container","po-container-no-padding"],["class","po-accordion-item",3,"po-accordion-item-active",4,"ngFor","ngForOf"],[1,"po-accordion-item"],[3,"p-expanded","p-label","p-toggle"],[3,"p-expanded"],[4,"ngTemplateOutlet"]],template:function(t,e){1&t&&(Do(0,"div",0),vo(1,dy,4,6,"section",1),Eo()),2&t&&(Ws(1),Co("ngForOf",e.poAccordionItems))},directives:function(){return[rh,cv,uv,lh]},encapsulation:2}),t})(),uv=(()=>{class t{constructor(){this.expanded=!1}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=Ut({type:t,selectors:[["po-accordion-item-body"]],inputs:{expanded:["p-expanded","expanded"]},ngContentSelectors:cy,decls:1,vars:1,consts:[["class","po-accordion-item-body",4,"ngIf"],[1,"po-accordion-item-body"],[1,"po-accordion-item-body-content"]],template:function(t,e){1&t&&(Lo(),vo(0,py,3,1,"div",0)),2&t&&Co("ngIf",e.expanded)},directives:[ih],encapsulation:2,data:{animation:[("toggleBody",e=[Cp("* => void",[wp({height:"*"}),bp(200,wp({height:0}))]),Cp("void => *",[wp({height:"0"}),bp(200,wp({height:"*"}))])],{type:7,name:"toggleBody",definitions:e,options:{}})]}}),t;var e})(),cv=(()=>{class t{constructor(){this.expanded=!1,this.toggle=new Tl}onClick(){this.expanded=!this.expanded,this.toggle.emit(this.expanded)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=Ut({type:t,selectors:[["po-accordion-item-header"]],inputs:{expanded:["p-expanded","expanded"],label:["p-label","label"]},outputs:{toggle:"p-toggle"},decls:6,vars:1,consts:[[1,"po-accordion-item-header"],[1,"po-accordion-item-header-button","po-clickable",3,"click"],[1,"po-text-ellipsis","po-accordion-item-header-title"],[1,"po-icon","po-accordion-item-header-icon","po-icon-arrow-down"],["icon",""]],template:function(t,e){1&t&&(Do(0,"header",0),Do(1,"button",1),Fo("click",function(){return e.onClick()}),Do(2,"div",2),ta(3),Eo(),So(4,"span",3,4),Eo(),Eo()),2&t&&(Ws(3),ea(e.label))},encapsulation:2,changeDetection:0}),t})(),hv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh]]}),t})(),dv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh]]}),t})();const pv=[{description:"English",language:"en"},{description:"Espa\xf1ol",language:"es"},{description:"Portugu\xeas",language:"pt"},{description:"P\u0443\u0441\u0441\u043a\u0438\u0439",language:"ru"}].map(t=>t.language),fv="pt",gv=[{separator:".",language:"en"},{separator:",",language:"es"},{separator:",",language:"pt"},{separator:",",language:"ru"}],mv=[{separator:",",language:"en"},{separator:".",language:"es"},{separator:".",language:"pt"},{separator:" ",language:"ru"}];function yv(t){return(t||fv).toLowerCase().substring(0,2)}function vv(t){return new RegExp("^[a-z]{2}(-[a-z]{2})?$","i").test(t)}function bv(t){return"string"==typeof t?"true"===(t=t.toLowerCase().trim())||"on"===t||""===t:"number"==typeof t?1===t:!!t}function wv(t,e){return typeof t===e}function Cv(t){return null!=t&&""!==t||!1===t}function _v(t){return wv(t,"object")&&!Array.isArray(t)?t:void 0}const Dv="PO_DEFAULT_LANGUAGE",Ev="PO_USER_LOCALE";let Sv=(()=>{class t{constructor(){}set languageDefault(t){t&&vv(t)&&localStorage.setItem(Dv,t)}get languageDefault(){return localStorage.getItem(Dv)}getLanguage(){const t=localStorage.getItem(Ev)||this.languageDefault||function(){const t=navigator.language||navigator.userLanguage,e=yv(t);return pv.includes(e)?t:fv}();return t&&t.toLowerCase()}getLanguageDefault(){return this.languageDefault}getShortLanguage(){const t=yv(this.getLanguage());return pv.includes(t)?t:fv}setLanguage(t){vv(t)&&localStorage.setItem(Ev,t.toLowerCase())}setLanguageDefault(t){this.languageDefault=t}getNumberSeparators(t){var e,n,r,s;t=t||this.getShortLanguage();const i=null!==(e=gv.find(e=>e.language===t))&&void 0!==e?e:{},o=null!==(n=mv.find(e=>e.language===t))&&void 0!==n?n:{};return{decimalSeparator:null!==(r=i.separator)&&void 0!==r?r:",",thousandSeparator:null!==(s=o.separator)&&void 0!==s?s:"."}}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:function(){return new t},token:t,providedIn:"root"}),t})(),xv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh,Wm]]}),t})(),Av=(()=>{class t{constructor(){}set icon(t){"string"==typeof t?this.addClasses(t):t instanceof sl&&(this._icon=t)}get icon(){return this._icon}addClasses(t){this.class=this.class=t.startsWith("po-icon-")?`po-icon ${t}`:`po-fonts-icon ${t}`}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=Ut({type:t,selectors:[["po-icon"]],inputs:{icon:["p-icon","icon"]},decls:3,vars:3,consts:[[4,"ngIf","ngIfThen","ngIfElse"],["fontTemplate",""],["aria-hidden","true"]],template:function(t,e){if(1&t&&(vo(0,fy,1,0,"ng-container",0),vo(1,gy,1,2,"ng-template",null,1,Gl)),2&t){const t=bo(2);Co("ngIf",e.class)("ngIfThen",t)("ngIfElse",e.icon)}},directives:[ih],encapsulation:2,changeDetection:0}),t})(),Tv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh]]}),t})();const Ov={en:{loading:"Loading"},es:{loading:"Cargando"},pt:{loading:"Carregando"},ru:{loading:"\u043f\u043e\u0433\u0440\u0443\u0437\u043a\u0430"}};let Fv=(()=>{class t{constructor(t){this.languageService=t,this._screenLock=!1,this.text=this.getTextDefault()}set screenLock(t){this._screenLock=bv(t)}get screenLock(){return this._screenLock}set text(t){this._text=t||this.getTextDefault()}get text(){return this._text}getTextDefault(){const t=this.languageService.getShortLanguage();return Ov[t].loading}}return t.\u0275fac=function(e){return new(e||t)(wo(Sv))},t.\u0275dir=Zt({type:t,inputs:{text:["p-text","text"],screenLock:["p-screen-lock","screenLock"]}}),t})(),kv=(()=>{class t extends Fv{constructor(t,e){super(e),this.changeDetector=t}}return t.\u0275fac=function(e){return new(e||t)(wo(Ja),wo(Sv))},t.\u0275cmp=Ut({type:t,selectors:[["po-loading-overlay"]],features:[ro],decls:2,vars:5,consts:[[1,"po-loading-overlay-content",3,"p-text"]],template:function(t,e){1&t&&(Do(0,"div"),So(1,"po-loading",0),Eo()),2&t&&($o("po-overlay-absolute",!e.screenLock)("po-overlay-fixed",e.screenLock),Ws(1),Co("p-text",e.text))},directives:function(){return[Pv]},encapsulation:2}),t})(),Iv=(()=>{class t{set neutralColor(t){this._neutralColor=bv(t)}get neutralColor(){return this._neutralColor}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=Ut({type:t,selectors:[["po-loading-icon"]],inputs:{neutralColor:["p-neutral-color","neutralColor"]},decls:9,vars:2,consts:[[1,"po-loading-icon"],[1,"po-loading-icon-bar","po-loading-icon-bar-1"],[1,"po-loading-icon-bar","po-loading-icon-bar-2"],[1,"po-loading-icon-bar","po-loading-icon-bar-3"],[1,"po-loading-icon-bar","po-loading-icon-bar-4"],[1,"po-loading-icon-bar","po-loading-icon-bar-5"],[1,"po-loading-icon-bar","po-loading-icon-bar-6"],[1,"po-loading-icon-bar","po-loading-icon-bar-7"],[1,"po-loading-icon-bar","po-loading-icon-bar-8"]],template:function(t,e){1&t&&(Do(0,"div",0),So(1,"span",1),So(2,"span",2),So(3,"span",3),So(4,"span",4),So(5,"span",5),So(6,"span",6),So(7,"span",7),So(8,"span",8),Eo()),2&t&&$o("po-loading-icon-neutral-color",e.neutralColor)},encapsulation:2}),t})(),Rv=(()=>{class t{constructor(){this.text="Carregando"}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Zt({type:t,inputs:{text:["p-text","text"]}}),t})(),Pv=(()=>{class t extends Rv{}return t.\u0275fac=function(){let e;return function(n){return(e||(e=Vn(t)))(n||t)}}(),t.\u0275cmp=Ut({type:t,selectors:[["po-loading"]],features:[ro],decls:3,vars:1,consts:[[1,"po-loading"],["class","po-loading-label po-text-ellipsis",4,"ngIf"],[1,"po-loading-label","po-text-ellipsis"]],template:function(t,e){1&t&&(Do(0,"div",0),So(1,"po-loading-icon"),vo(2,my,2,1,"span",1),Eo()),2&t&&(Ws(2),Co("ngIf",e.text))},directives:[Iv,ih],encapsulation:2}),t})(),Lv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[Sv]}),t})(),Nv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh,Lv]]}),t})();function jv(t,e,n){return function(r){t&&t.set&&t.set.bind(this)(e(r)),this[n]=e(r)}}function Mv(t,e){return function(){return t&&t.get?t.get.bind(this)():this[e]}}function Vv(){return function(t,e,n){return function(t,e,n){const{target:r,property:s,originalDescriptor:i}=t,o=function(t,e,n){const r=`$$__${e}`;return Object.prototype.hasOwnProperty.call(t,r)&&console.warn(`The prop "${r}" is already exist, it will be overrided by InputBoolean decorator.`),Object.defineProperty(t,r,{configurable:!0,writable:!0}),r}(r,s);return{get:Mv(i,o),set:jv(i,n,o)}}({target:t,property:e,originalDescriptor:n},0,bv)}}const Bv=["default","primary","danger","link"];let Hv=(()=>{class t{constructor(){this.autoFocus=!1,this.click=new Tl,this._disabled=!1,this._loading=!1,this._small=!1,this._type="default"}set loading(t){this._loading=bv(t)}get loading(){return this._loading}set small(t){this._small=""===t||bv(t)}get small(){return this._small}set type(t){this._type=Bv.includes(t)?t:"default"}get type(){return this._type}set disabled(t){this._disabled=""===t||bv(t)}get disabled(){return this._disabled}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Zt({type:t,inputs:{autoFocus:["p-auto-focus","autoFocus"],loading:["p-loading","loading"],small:["p-small","small"],type:["p-type","type"],disabled:["p-disabled","disabled"],label:["p-label","label"],icon:["p-icon","icon"]},outputs:{click:"p-click"}}),ey([Vv()],t.prototype,"autoFocus",void 0),t})(),Uv=(()=>{class t extends Hv{ngAfterViewInit(){this.autoFocus&&this.focus()}focus(){this.disabled||this.buttonElement.nativeElement.focus()}onClick(){this.click.emit(null)}}return t.\u0275fac=function(){let e;return function(n){return(e||(e=Vn(t)))(n||t)}}(),t.\u0275cmp=Ut({type:t,selectors:[["po-button"]],viewQuery:function(t,e){if(1&t&&Hl(yy,7),2&t){let t;Bl(t=$l())&&(e.buttonElement=t.first)}},features:[ro],decls:5,vars:14,consts:[["type","button",1,"po-button","po-text-ellipsis",3,"disabled","click"],["button",""],["class","po-button-loading-icon",4,"ngIf"],["class","po-button-icon",3,"p-icon",4,"ngIf"],["class","po-button-label",4,"ngIf"],[1,"po-button-loading-icon"],["p-neutral-color",""],[1,"po-button-icon",3,"p-icon"],[1,"po-button-label"]],template:function(t,e){1&t&&(Do(0,"button",0,1),Fo("click",function(){return e.onClick()}),vo(2,vy,2,0,"div",2),vo(3,by,1,1,"po-icon",3),vo(4,wy,2,1,"span",4),Eo()),2&t&&($o("po-button-danger","danger"===e.type)("po-button-link","link"===e.type)("po-button-primary","primary"===e.type)("po-button-sm",e.small)("po-clickable","link"===e.type),Co("disabled",e.disabled||e.loading),Ws(2),Co("ngIf",e.loading),Ws(1),Co("ngIf",e.icon),Ws(1),Co("ngIf",e.label))},directives:[ih,Iv,Av],encapsulation:2,changeDetection:0}),t})(),$v=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh,Nv,Tv]]}),t})();const zv=["bottom","bottom-left","bottom-right","left","left-top","left-bottom","top","top-right","top-left","right","right-bottom","right-top"];let qv=(()=>{class t{constructor(){this.differenceDiagonalToWidthArrow=3,this.isSetElementWidth=!1,this.offsetArrow=12}adjustPosition(t){const e=t||"bottom";this.elementPosition(e),this.customPositions&&this.customPositions.length?this.adjustCustomPosition(e):this.adjustDefaultPosition(e)}getArrowDirection(){return this.arrowDirection}setElements(t,e,n,r,s=!1,i=!1){this.element=t instanceof Aa?t.nativeElement:t,this.targetElement=n instanceof Aa?n.nativeElement:n,this.elementOffset=e,this.customPositions=r,this.isSetElementWidth=s,this.isCornerAligned=i}adjustCustomPosition(t){const e=this.customPositions.length;let n=0;for(;n++<e;)this.overflowAllSides(t)&&(t=this.nextPosition(t,this.customPositions),this.elementPosition(t))}adjustDefaultPosition(t){const e=this.getMainPositions(),n=e.length;let r=0;for(;r++<n;){const n=this.getMainPosition(t);if(this.elementPosition(t),!this.overflowMain(n))return this.overflowAllSides(t)?void this.verifySubPositions(t):void 0;t=this.nextPosition(n,e)}}elementPosition(t){this.isCornerAligned?this.setAlignedElementPosition(t):this.setElementPosition(t)}getMainPosition(t){return t.indexOf("-")>-1?t.substring(0,t.indexOf("-")):t}getMainPositions(){return this.customPositions&&this.customPositions.length?this.getMainPositionsByCustomPositions(this.customPositions):["top","right","bottom","left"]}getMainPositionsByCustomPositions(t){const e=[],n=t.length;for(let r=0;r<n;r++){const n=this.getMainPosition(t[r]);e.includes(n)||e.push(n)}return e}getOverflows(){const t=this.getSizesAndPositions();return{right:t.element.right>t.window.innerWidth,top:t.element.top<=0,left:t.element.left<=0,bottom:t.element.bottom>t.window.innerHeight}}getSizesAndPositions(){return{window:{scrollY:window.scrollY,scrollX:window.scrollX,innerWidth:window.innerWidth,innerHeight:window.innerHeight},element:this.element.getBoundingClientRect(),target:this.targetElement?this.targetElement.getBoundingClientRect():{top:0,bottom:0,right:0,left:0}}}nextPosition(t,e=[]){const n=e.indexOf(t),r=n+1;return n>-1&&r<e.length?e[r]:e[0]}overflowAllSides(t){const e=this.getOverflows();switch(t){case"top":case"top-right":return e.top||e.right||e.left;case"top-left":return e.top||e.left||e.right;case"right":return e.right||e.top||e.bottom;case"right-top":return e.right||e.top;case"right-bottom":return e.right||e.bottom;case"bottom":case"bottom-right":return e.bottom||e.right||e.left;case"bottom-left":return e.bottom||e.left||e.right;case"left":return e.left||e.top||e.bottom;case"left-top":return e.left||e.top;case"left-bottom":return e.left||e.bottom}}overflowMain(t){const e=this.getOverflows();switch(t){case"top":return e.top;case"right":return e.right;case"bottom":return e.bottom;case"left":return e.left}}setAlignedArrowDirection(t){switch(t){case"top-left":return"bottom-left";case"top-right":return"bottom-right";case"bottom-right":return"top-right";case"bottom-left":return"top-left"}}setAlignedBottomPositions(t,e){this.element.style.top=e.target.bottom+this.elementOffset+"px",this.element.style.left=e.target.left-t+"px"}setAlignedElementPosition(t){this.setElementWidth();const e=this.getSizesAndPositions();switch(t){case"bottom-left":this.setAlignedBottomPositions(0,e);break;case"bottom-right":this.setAlignedBottomPositions(e.element.width-e.target.width,e);break;case"top-left":this.setAlignedTopPositions(0,e);break;case"top-right":this.setAlignedTopPositions(e.element.width-e.target.width,e)}this.arrowDirection=this.setAlignedArrowDirection(t)}setAlignedTopPositions(t,e){this.element.style.top=e.target.top-e.element.height-this.elementOffset+"px",this.element.style.left=e.target.left-t+"px"}setArrowDirection(t){switch(t){case"top":return"bottom";case"top-left":return"bottom-right";case"top-right":return"bottom-left";case"right":return"left";case"right-top":return"left-bottom";case"right-bottom":return"left-top";case"bottom":return"top";case"bottom-right":return"top-left";case"bottom-left":return"top-right";case"left":return"right";case"left-bottom":return"right-top";case"left-top":return"right-bottom"}}setBottomPositions(t,e){this.element.style.top=e.target.bottom+this.elementOffset+"px",this.element.style.left=e.target.left+e.target.width/2-t+"px"}setElementPosition(t){this.setElementWidth();const e=this.getSizesAndPositions();switch(t){case"top":this.setTopPositions(e.element.width/2,e);break;case"top-left":this.setTopPositions(e.element.width-this.offsetArrow-this.differenceDiagonalToWidthArrow,e);break;case"top-right":this.setTopPositions(this.offsetArrow+this.differenceDiagonalToWidthArrow,e);break;case"right":this.setRightPositions(e.element.height/2,e);break;case"right-top":this.setRightPositions(e.element.height-this.offsetArrow-this.differenceDiagonalToWidthArrow,e);break;case"right-bottom":this.setRightPositions(this.offsetArrow,e);break;case"bottom":this.setBottomPositions(e.element.width/2,e);break;case"bottom-right":this.setBottomPositions(this.offsetArrow+this.differenceDiagonalToWidthArrow,e);break;case"bottom-left":this.setBottomPositions(e.element.width-this.offsetArrow-this.differenceDiagonalToWidthArrow,e);break;case"left":this.setLeftPositions(e.element.height/2,e);break;case"left-bottom":this.setLeftPositions(this.offsetArrow,e);break;case"left-top":this.setLeftPositions(e.element.height-this.offsetArrow,e)}this.arrowDirection=this.setArrowDirection(t)}setElementWidth(){this.isSetElementWidth&&this.targetElement&&(this.element.style.width=`${this.targetElement.clientWidth}px`)}setLeftPositions(t,e){this.element.style.top=e.target.top-t+e.target.height/2+"px",this.element.style.left=e.target.left-e.element.width-this.elementOffset+"px"}setRightPositions(t,e){this.element.style.top=e.target.top-t+e.target.height/2+"px",this.element.style.left=e.target.right+this.elementOffset+"px"}setTopPositions(t,e){this.element.style.top=e.target.top-e.element.height-this.elementOffset+"px",this.element.style.left=e.target.left+e.target.width/2-t+"px"}verifySubPositions(t){t.indexOf("-")>-1&&(t=t.substring(0,t.indexOf("-")),this.elementPosition(t));let e=0;for(;e++<3;){if(!this.overflowAllSides(t))return null;t=this.nextPosition(t,zv),this.elementPosition(t)}}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Wv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh]]}),t})(),Gv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh,$v,Wv]]}),t})(),Zv=(()=>{class t{constructor(){this.dateRegex=new RegExp("^(?:[0-9])\\d{1}(?:[0-9])\\d{1}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12]\\d|3[01])$"),this.isoRegex=new RegExp("^(?:[0-9])\\d{1}(?:[0-9])\\d{1}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12]\\d|3[01])T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:Z|-0[1-9]|-1\\d|-2[0-3]|-00:?(?:0[1-9]|[0-5]\\d)|\\+[01]\\d|\\+2[0-3])(?:|:?[0-5]\\d)$")}convertIsoToDate(t,e,n){if(t){const{year:r,month:s,day:i}=this.getDateFromIso(t);if(e){const t=new Date(r,s-1,i,0,0,0);return this.setYearFrom0To100(t,r),t}if(n){const t=new Date(r,s-1,i,23,59,59);return this.setYearFrom0To100(t,r),t}{const e=Date.parse(t),n=6e4*(new Date).getTimezoneOffset();return new Date(e+n)}}}convertDateToISO(t){if(t){const e=t.getFullYear(),n=t.getMonth()+1,r=t.getDate()<10?"0"+t.getDate():t.getDate(),s=n<10?"0"+n:n;return this.formatYear(e)+"-"+s+"-"+r}return null}formatYear(t){return t>999?t.toString():t>99&&t<1e3?`0${t}`:t>9&&t<100?`00${t}`:t>=0&&t<10?`000${t}`:void 0}getDateFromIso(t){const e=parseInt(t.substring(8,10),10),n=parseInt(t.substring(5,7),10);return{year:parseInt(t.substring(0,4),10),month:n,day:e}}getDateForDateRange(t,e){const n=e?[0,0,0]:[23,59,59];if(t instanceof Date){const{year:e,month:r,day:s}=this.splitDate(t),i=new Date(e,r,s,...n);return this.setYearFrom0To100(i,e),i}if(this.isValidIso(t))return this.convertIsoToDate(t,e,!e)}isDateRangeValid(t="",e=""){const n=t.split("-").map(t=>parseInt(t,10)),r=e.split("-").map(t=>parseInt(t,10));for(let s=0;s<=n.length;s++){if(n[s]>r[s])return!0;if(n[s]<r[s])return!1}return!0}isValidIso(t){return this.dateRegex.test(t)||this.isoRegex.test(t)}setYearFrom0To100(t,e){e>=0&&e<100&&t.setFullYear(e)}splitDate(t){return{year:t.getFullYear(),month:t.getMonth(),day:t.getDate()}}validateDateRange(t,e,n){return e&&n?t>=e&&t<=n:e&&!n?t>=e:!(!e&&n)||t<=n}validateDate(t){const e=t instanceof Date?this.convertDateToISO(t):t;return this.isValidIso(e)?e:void 0}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:function(){return new t},token:t,providedIn:"root"}),t})(),Yv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[Zv]}),t})(),Kv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh]]}),t})();Math,Math,Math.floor(25);var Qv=function(t){return t.Color01="color-01",t.Color02="color-02",t.Color03="color-03",t.Color04="color-04",t.Color05="color-05",t.Color06="color-06",t.Color07="color-07",t.Color08="color-08",t.Color09="color-09",t.Color10="color-10",t.Color11="color-11",t.Color12="color-12",t}({});Object.values(Qv),Math,Math.floor(25),Math,Math;let Xv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh,Wv]]}),t})(),Jv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh]]}),t})(),tb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh]]}),t})(),eb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh,tb]]}),t})(),nb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh]]}),t})(),rb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[yh,Tv]]}),t})(),sb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh,rb]]}),t})(),ib=(()=>{class t{constructor(){this.errorPattern=""}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=Ut({type:t,selectors:[["po-field-container-bottom"]],inputs:{errorPattern:["p-error-pattern","errorPattern"]},decls:2,vars:1,consts:[[1,"po-field-container-bottom"],["class","po-field-container-bottom-text-error",4,"ngIf"],[1,"po-field-container-bottom-text-error"],[1,"po-icon","po-icon-warning","po-field-container-icon-error"]],template:function(t,e){1&t&&(Do(0,"div",0),vo(1,Cy,3,1,"span",1),Eo()),2&t&&(Ws(1),Co("ngIf",e.errorPattern))},directives:[ih],encapsulation:2,changeDetection:0}),t})();const ob={en:{optional:"(Optional)"},es:{optional:"(Opcional)"},pt:{optional:"(Opcional)"},ru:{optional:"(\u041f\u043e\u0436\u0435\u043b\u0430\u043d\u0438\u044e)"}};let ab=(()=>{class t{constructor(t){this._optional=!1;const e=t.getShortLanguage();this.literals=Object.assign({},ob[e])}set optional(t){this._optional=bv(t)}get optional(){return this._optional}}return t.\u0275fac=function(e){return new(e||t)(wo(Sv))},t.\u0275cmp=Ut({type:t,selectors:[["po-field-container"]],inputs:{optional:["p-optional","optional"],label:["p-label","label"],help:["p-help","help"]},ngContentSelectors:cy,decls:7,vars:3,consts:[[1,"po-field-container"],[1,"po-field-container-title"],[1,"po-field-title"],["class","po-field-optional",4,"ngIf"],["class","po-field-help",4,"ngIf"],[1,"po-field-optional"],[1,"po-field-help"]],template:function(t,e){1&t&&(Lo(),Do(0,"div",0),Do(1,"div",1),Do(2,"span",2),ta(3),Eo(),vo(4,_y,2,1,"span",3),Eo(),vo(5,Dy,2,1,"div",4),No(6),Eo()),2&t&&(Ws(3),ea(e.label),Ws(1),Co("ngIf",e.optional&&(e.label||e.help)),Ws(1),Co("ngIf",e.help))},directives:[ih],encapsulation:2,changeDetection:0}),t})(),lb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh]]}),t})(),ub=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh,pp,lb]]}),t})(),cb=(()=>{class t{constructor(){this.defaultValue="",this.changeEvent=new Tl}clear(){this.setInputValue(this.defaultValue),this.changeEvent.emit(this.defaultValue)}showIcon(){return this.defaultValue!==this.getInputValue()}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Zt({type:t,inputs:{defaultValue:["p-default-value","defaultValue"],inputRef:["p-element-ref","inputRef"]},outputs:{changeEvent:"p-change-event"}}),t})(),hb=(()=>{class t extends cb{setInputValue(t){this.inputRef&&this.inputRef.nativeElement&&(this.inputRef.nativeElement.value=t)}getInputValue(){if(this.inputRef&&this.inputRef.nativeElement)return this.inputRef.nativeElement.value}}return t.\u0275fac=function(){let e;return function(n){return(e||(e=Vn(t)))(n||t)}}(),t.\u0275cmp=Ut({type:t,selectors:[["po-clean"]],features:[ro],decls:1,vars:1,consts:[["class","po-icon po-field-icon po-icon-close",3,"click",4,"ngIf"],[1,"po-icon","po-field-icon","po-icon-close",3,"click"]],template:function(t,e){1&t&&vo(0,Ey,1,0,"span",0),2&t&&Co("ngIf",e.showIcon())},directives:[ih],encapsulation:2}),t})(),db=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh]]}),t})(),pb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh,pp,lb,db,Kv]]}),t})();const fb={en:{close:"Close"},es:{close:"Cerrar"},pt:{close:"Fechar"},ru:{close:"\u0431\u043b\u0438\u0437\u043a\u043e"}};let gb=(()=>{class t{constructor(t){this.isHidden=!0,this.onXClosed=new Tl,this._hideClose=!1,this._size="md",this.clickOut=!1,this.language=t.getShortLanguage(),this.literals=Object.assign({},fb[this.language])}set size(t){this._size=["sm","md","lg","xl","auto"].indexOf(t)>-1?t:"md"}get size(){return this._size}set setClickOut(t){this.clickOut=""!==t&&bv(t)}set hideClose(t){this._hideClose=bv(t)}get hideClose(){return this._hideClose}close(t=!1){this.isHidden=!0,t&&this.onXClosed.emit(t)}open(){this.validPrimaryAction(),this.isHidden=!1}validPrimaryAction(){this.primaryAction||(this.primaryAction={action:()=>this.close(),label:this.literals.close}),this.primaryAction.action||(this.primaryAction.action=()=>this.close()),this.primaryAction.label||(this.primaryAction.label=this.literals.close)}}return t.\u0275fac=function(e){return new(e||t)(wo(Sv))},t.\u0275dir=Zt({type:t,inputs:{size:["p-size","size"],setClickOut:["p-click-out","setClickOut"],hideClose:["p-hide-close","hideClose"],primaryAction:["p-primary-action","primaryAction"],title:["p-title","title"],secondaryAction:["p-secondary-action","secondaryAction"]}}),t})(),mb=(()=>{class t{constructor(){this.activeOverlay=[]}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:function(){return new t},token:t,providedIn:"root"}),t})(),yb=(()=>{class t extends gb{constructor(t,e){super(e),this.poActiveOverlayService=t,this.focusableElements="input, select, textarea, button:not([disabled]), a",this.id=function(){function t(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return t()+t()+"-"+t()+"-"+t()+"-"+t()+"-"+t()+t()+t()}()}close(t=!1){this.poActiveOverlayService.activeOverlay.pop(),super.close(t),this.removeEventListeners(),this.sourceElement&&this.sourceElement.focus()}closeModalOnEscapeKey(t){this.hideClose||(t.preventDefault(),t.stopPropagation(),this.close())}getPrimaryActionButtonType(){return this.primaryAction.danger?"danger":"primary"}getSecondaryActionButtonType(){return this.secondaryAction&&this.secondaryAction.danger&&!this.primaryAction.danger?"danger":"default"}onClickOut(t){this.clickOut&&!this.modalContent.nativeElement.contains(t.target)&&this.close()}open(){this.sourceElement=document.activeElement,super.open(),this.handleFocus()}handleFocus(){this.poActiveOverlayService.activeOverlay.push(this.id),setTimeout(()=>{this.modalContent&&(this.initFocus(),document.addEventListener("focus",this.focusFunction,!0))})}initFocus(){this.focusFunction=t=>{this.modalContent.nativeElement.contains(t.target)||this.poActiveOverlayService.activeOverlay[this.poActiveOverlayService.activeOverlay.length-1]!==this.id||(t.stopPropagation(),this.firstElement.focus())},this.setFirstElement(),this.hideClose?this.firstElement.focus():(this.modalContent.nativeElement.querySelectorAll(this.focusableElements)[1]||this.modalContent.nativeElement).focus()}removeEventListeners(){document.removeEventListener("focus",this.focusFunction,!0)}setFirstElement(){this.firstElement=this.modalContent.nativeElement.querySelector(this.focusableElements)||this.modalContent.nativeElement}}return t.\u0275fac=function(e){return new(e||t)(wo(mb),wo(Sv))},t.\u0275cmp=Ut({type:t,selectors:[["po-modal"]],viewQuery:function(t,e){if(1&t&&Hl(xy,5,Aa),2&t){let t;Bl(t=$l())&&(e.modalContent=t.first)}},features:[ro],ngContentSelectors:cy,decls:1,vars:1,consts:[["class","po-modal","tabindex","0",3,"keydown.esc",4,"ngIf"],["tabindex","0",1,"po-modal",3,"keydown.esc"],[1,"po-modal-overlay"],[1,"po-modal-container","po-pb-2","po-pt-2",3,"mousedown"],[1,"po-modal-vertical-align"],["tabindex","-1"],["modalContent",""],[1,"po-modal-header"],[1,"po-modal-title","po-text-ellipsis"],["class","po-modal-header-close-button","tabindex","0",3,"click",4,"ngIf"],[1,"po-modal-body"],[1,"po-modal-footer"],[3,"p-disabled","p-label","p-loading","p-type","p-click",4,"ngIf"],[1,"po-button-modal-first-action",3,"p-disabled","p-label","p-loading","p-type","p-click"],["tabindex","0",1,"po-modal-header-close-button",3,"click"],[1,"po-icon","po-icon-close"],[3,"p-disabled","p-label","p-loading","p-type","p-click"]],template:function(t,e){1&t&&(Lo(),vo(0,Oy,15,10,"div",0)),2&t&&Co("ngIf",!e.isHidden)},directives:[ih,Uv],encapsulation:2}),t})(),vb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh,$v]]}),t})(),bb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh]]}),t})(),wb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[mb]}),t})(),Cb=(()=>{class t{getColor(t){return Object.values(Qv).includes(t.color)?t.color:this.getColorFromType(t.type||t.color)}getColorFromType(t){switch(t){case"danger":return Qv.Color07;case"success":return Qv.Color11;case"warning":return Qv.Color08;default:return Qv.Color01}}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),_b=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[Cb]}),t})(),Db=(()=>{class t{constructor(t,e,n){this.componentResolver=t,this.applicationRef=e,this.injector=n}createComponentInApplication(t){const e=this.componentResolver.resolveComponentFactory(t).create(this.injector);return this.applicationRef.attachView(e.hostView),document.body.appendChild(e.hostView.rootNodes[0]),e}destroyComponentInApplication(t){this.applicationRef.detachView(t.hostView),t.destroy()}}return t.\u0275fac=function(e){return new(e||t)(ar(Da),ar(Lu),ar(eo))},t.\u0275prov=ht({factory:function(){return new t(ar(Da),ar(Lu),ar(Bi))},token:t,providedIn:"root"}),t})(),Eb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[Db],imports:[[]]}),t})(),Sb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[qv]}),t})();var xb=function(t){return t[t.Alert=0]="Alert",t[t.Confirm=1]="Confirm",t}({});const Ab={en:{ok:"Ok"},es:{ok:"Ok"},pt:{ok:"Ok"},ru:{ok:"\u041e\u043a"}},Tb={en:{cancel:"Cancel",confirm:"Confirm"},es:{cancel:"Cancelar",confirm:"Confirmar"},pt:{cancel:"Cancelar",confirm:"Confirmar"},ru:{cancel:"\u043e\u0442\u043c\u0435\u043d\u0438\u0442\u044c",confirm:"\u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c"}};let Ob=(()=>{class t{constructor(t){this.primaryAction={label:"ok",action:()=>{}},this.language=t.getShortLanguage()}ngOnDestroy(){this.closeSubscription.unsubscribe()}ngOnInit(){this.closeSubscription=this.poModal.onXClosed.subscribe(t=>this.close(!0))}close(t=!1){t&&this.closeAction&&this.closeAction(),this.poModal.close(),this.destroy()}destroy(){this.componentRef&&this.componentRef.destroy()}configDialog(t,e,n,r,s){this.primaryAction={label:t,action:()=>{e&&e(),this.close()}},n&&(this.secondaryAction={label:n,action:()=>{r&&r(),this.close()}}),this.closeAction=s}open(t,e,n){switch(this.title=t.title,this.message=t.message,this.componentRef=n,this.setDialogLiterals(t,e),e){case xb.Confirm:this.configDialog(this.literalsConfirm.confirm,t.confirm,this.literalsConfirm.cancel,t.cancel,t.close);break;case xb.Alert:this.configDialog(this.literalsAlert.ok,t.ok)}this.poModal.open()}setDialogLiterals(t,e){const n=Ab,r=Tb,s=t.literals;e===xb.Alert?this.literalsAlert=Object.assign(Object.assign(Object.assign({},n.pt),n[this.language]),s):this.literalsConfirm=Object.assign(Object.assign(Object.assign({},r.pt),r[this.language]),s)}}return t.\u0275fac=function(e){return new(e||t)(wo(Sv))},t.\u0275cmp=Ut({type:t,selectors:[["ng-component"]],viewQuery:function(t,e){if(1&t&&Hl(yb,7),2&t){let t;Bl(t=$l())&&(e.poModal=t.first)}},decls:2,vars:4,consts:[[3,"p-title","p-primary-action","p-secondary-action"],[3,"innerHtml"]],template:function(t,e){1&t&&(Do(0,"po-modal",0),So(1,"div",1),Eo()),2&t&&(Co("p-title",e.title)("p-primary-action",e.primaryAction)("p-secondary-action",e.secondaryAction),Ws(1),Co("innerHtml",e.message,Kr))},directives:[yb],encapsulation:2}),t})(),Fb=(()=>{class t extends class{confirm(t){this.openDialog(xb.Confirm,t)}alert(t){this.openDialog(xb.Alert,t)}}{constructor(t){super(),this.poComponentInjector=t}openDialog(t,e){const n=this.poComponentInjector.createComponentInApplication(Ob);n.changeDetectorRef.detectChanges(),n.instance.open(e,t,n)}}return t.\u0275fac=function(e){return new(e||t)(ar(Db))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),kb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[Fb],imports:[[vb]]}),t})();var Ib=function(t){return t[t.Bottom=0]="Bottom",t[t.Top=1]="Top",t}({}),Rb=function(t){return t[t.Error=0]="Error",t[t.Information=1]="Information",t[t.Success=2]="Success",t[t.Warning=3]="Warning",t}({});let Pb=(()=>{class t extends class{constructor(){this.orientation=Ib.Bottom}}{constructor(t,e,n,r){super(),this.changeDetector=e,this.elementeRef=n,this.renderer=r,this.alive=!0,this.margin=20,this.observableOnClose=new D,this.toasterPosition="po-toaster-bottom"}ngOnDestroy(){this.alive=!1}ngAfterViewInit(){setTimeout(()=>this.renderer.addClass(this.toaster.nativeElement,"po-toaster-visible"))}changePosition(t){this.elementeRef.nativeElement.style.display="table",this.margin=6+44*t+6*t,this.orientation===Ib.Top?this.toaster.nativeElement.style.top=this.margin+"px":this.toaster.nativeElement.style.bottom=this.margin+"px"}close(){this.observableOnClose.next(!0)}setFadeOut(){this.renderer.removeClass(this.toaster.nativeElement,"po-toaster-visible"),this.renderer.addClass(this.toaster.nativeElement,"po-toaster-invisible")}configToaster(t){switch(this.type=t.type,this.message=t.message,this.orientation=t.orientation,this.position=t.position,this.action=t.action,this.actionLabel=t.actionLabel,this.componentRef=t.componentRef,this.orientation===Ib.Top&&(this.toasterPosition="po-toaster-top"),this.changePosition(this.position),this.type){case Rb.Error:this.toasterType="po-toaster-error",this.icon="po-icon-warning";break;case Rb.Information:this.toasterType="po-toaster-info",this.icon="po-icon-info";break;case Rb.Success:this.toasterType="po-toaster-success",this.icon="po-icon-ok";break;case Rb.Warning:this.toasterType="po-toaster-warning",this.icon="po-icon-warning"}this.changeDetector.detectChanges()}getIcon(){return this.icon}getToasterPosition(){return this.toasterPosition}getToasterType(){return this.toasterType}onButtonClose(t){t.preventDefault(),t.stopPropagation(),this.action&&!this.actionLabel?this.poToasterAction(t):this.close()}poToasterAction(t){t.preventDefault(),t.stopPropagation(),this.action(this)}}return t.\u0275fac=function(e){return new(e||t)(wo(Sv),wo(Ja),wo(Aa),wo(Fa))},t.\u0275cmp=Ut({type:t,selectors:[["po-toaster"]],viewQuery:function(t,e){if(1&t&&Hl(Fy,5),2&t){let t;Bl(t=$l())&&(e.toaster=t.first)}},features:[ro],decls:9,vars:9,consts:[[3,"click"],["toaster",""],[1,"po-toaster-icon"],[1,"po-toaster-message"],["class","po-toaster-action",3,"click",4,"ngIf"],[1,"po-toaster-close",3,"click"],[1,"po-icon","po-icon-close"],[1,"po-toaster-action",3,"click"]],template:function(t,e){var n,r;1&t&&(Do(0,"div",0,1),Fo("click",function(){return e.close()}),Do(2,"div",2),So(3,"span"),Eo(),Do(4,"div",3),ta(5),Eo(),vo(6,ky,2,1,"div",4),Do(7,"button",5),Fo("click",function(t){return e.onButtonClose(t)}),So(8,"span",6),Eo(),Eo()),2&t&&("po-toaster ",n=e.getToasterType()," ",r=e.getToasterPosition()," po-clickable",qo(Qn,zo,function(t,e,n,r,s,i){const o=go(t,Ae.lFrame.bindingIndex,n,s);return He(2),o?e+lt(n)+r+lt(s)+i:qs}(Oe(),"po-toaster ",n," ",r," po-clickable"),!0),Ws(3),ra("po-icon ",e.getIcon(),""),Ws(2),ea(e.message),Ws(1),Co("ngIf",e.action&&e.actionLabel))},directives:[ih],encapsulation:2}),t})(),Lb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[yh]]}),t})(),Nb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[wb,_b,Eb,Sb,Yv,kb,Lv,Lb],wb,_b,Eb,Sb,Yv,kb,Lb]}),t})(),jb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh]]}),t})(),Mb=(()=>{class t{transform(t,e){if(wv(t,"string")&&/^(([0-1][0-9])|(2[0-3])):[0-5][0-9]:[0-5][0-9][\.]?([0-9]{1,6})?$/g.test(t)){const n=e?e.lastIndexOf("f")-e.indexOf("f")+1:0,r=this.addDotMiliseconds(t.substring(9,9+n),n),s=this.getFormatMiliseconds(n);return this.formatValue(t,e,s,r)}return null}addDotMiliseconds(t,e){return t&&e&&(t="."+t),t}formatValue(t,e,n,r){if(t&&e){const s=t.substring(0,2),i=t.substring(3,5),o=t.substring(6,8);return(e=(e=(e=e.replace("HH",s)).replace("mm",i)).replace("ss",o)).replace(`.${n}`,r)}return t}getFormatMiliseconds(t){let e="";for(let n=0;n<t;n++)e+="f";return e}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275pipe=Yt({name:"po_time",type:t,pure:!0}),t})(),Vb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[]]}),t})(),Bb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[ph],imports:[[yh,pp,Wm,$v,ub,Jv,Nv,vb,jb,rb,Vb,Wv,Tv]]}),t})();var Hb=function(t){return t[t.arrowDown=40]="arrowDown",t[t.arrowUp=38]="arrowUp",t[t.backspace=8]="backspace",t[t.delete=46]="delete",t[t.enter=13]="enter",t[t.esc=27]="esc",t[t.keyK=75]="keyK",t[t.keyL=76]="keyL",t[t.space=32]="space",t[t.tab=9]="tab",t}({}),Ub=function(t){return t[t.startsWith=0]="startsWith",t[t.contains=1]="contains",t[t.endsWith=2]="endsWith",t}({});const $b={en:{noData:"No data found"},es:{noData:"Datos no encontrados"},pt:{noData:"Nenhum dado encontrado"},ru:{noData:"\u0414\u0430\u043d\u043d\u044b\u0435 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b"}};let zb=(()=>{class t{constructor(t){this.autoFocus=!1,this.emitObjectValue=!1,this.disabledTabFilter=!1,this.change=new Tl,this.ngModelChange=new Tl,this.cacheOptions=[],this.firstInWriteValue=!0,this.isFirstFilter=!0,this.isFiltering=!1,this.previousSearchValue="",this.visibleOptions=[],this.cacheStaticOptions=[],this.comboOptionsList=[],this.onModelTouched=null,this._changeOnEnter=!1,this._debounceTime=400,this._disabled=!1,this._disabledInitFilter=!1,this._fieldLabel="label",this._fieldValue="value",this._filterMinlength=0,this._filterMode=Ub.startsWith,this._options=[],this._placeholder="",this._required=!1,this._sort=!1,this.fromWriteValue=!1,this.language=t.getShortLanguage()}set placeholder(t){this._placeholder=t||""}get placeholder(){return this._placeholder}set debounceTime(t){const e=parseInt(t,10);this._debounceTime=!isNaN(e)&&e>0?e:400}get debounceTime(){return this._debounceTime}set disabledInitFilter(t){this._disabledInitFilter=bv(t)}get disabledInitFilter(){return this._disabledInitFilter}set fieldValue(t){this._fieldValue=t||"value",wv(this.filterService,"string")&&this.service&&(this.service.fieldValue=this._fieldValue)}get fieldValue(){return this._fieldValue}set fieldLabel(t){this._fieldLabel=t||"label",wv(this.filterService,"string")&&this.service&&(this.service.fieldLabel=this._fieldLabel)}get fieldLabel(){return this._fieldLabel}set filterMinlength(t){const e="string"==typeof t?parseInt(t,10):t;this._filterMinlength=Number.isInteger(e)?e:0}get filterMinlength(){return this._filterMinlength}set required(t){this._required=bv(t),this.validateModel(this.selectedValue)}get required(){return this._required}set changeOnEnter(t){this._changeOnEnter=bv(t)}get changeOnEnter(){return this._changeOnEnter}set disabled(t){this._disabled=bv(t),this.validateModel(this.selectedValue)}get disabled(){return this._disabled}set sort(t){this._sort=bv(t),this.comboListDefinitions()}get sort(){return this._sort}set options(t){this._options=Array.isArray(t)?t:[],this.comboListDefinitions()}get options(){return this._options}set filterMode(t){switch(this._filterMode=t in Ub?t:Ub.startsWith,this._filterMode.toString()){case"startsWith":this._filterMode=Ub.startsWith;break;case"contains":this._filterMode=Ub.contains;break;case"endsWith":this._filterMode=Ub.endsWith}}get filterMode(){return this._filterMode}set filterParams(t){this._filterParams=t||0===t||!1===t?t:void 0}get filterParams(){return this._filterParams}set literals(t){this._literals=t instanceof Object&&!(t instanceof Array)?Object.assign(Object.assign(Object.assign({},$b.pt),$b[this.language]),t):$b[this.language]}get literals(){return this._literals||$b[this.language]}get isOptionGroupList(){return this._options.length&&this._options[0].hasOwnProperty("options")}ngOnInit(){this.updateComboList()}onInitService(){this.filterService&&(this.setService(this.filterService),this.initInputObservable())}setService(t){t&&(wv(t,"object")?this.service=t:(this.service=this.defaultService,this.service.configProperties(t,this.fieldLabel,this.fieldValue)))}compareMethod(t,e,n){switch(n){case Ub.startsWith:return this.startsWith(t,e);case Ub.contains:return this.contains(t,e);case Ub.endsWith:return this.endsWith(t,e)}}startsWith(t,e){return e.label.toLowerCase().startsWith(t.toLowerCase())}contains(t,e){return e.label.toLowerCase().indexOf(t.toLowerCase())>-1}endsWith(t,e){return e.label.toLowerCase().endsWith(t.toLowerCase())}getOptionFromValue(t,e){return e?e.find(e=>this.isEqual(e.value,t)):null}getOptionFromLabel(t,e){return e?e.find(e=>e.label.toString().toLowerCase()===t.toString().toLowerCase()):null}updateSelectedValue(t,e=!0){const n=t&&t.label||"";this.updateInternalVariables(t),this.changeOnEnter&&e?this.setInputValue(n):this.changeOnEnter||this.setInputValue(n),e&&this.updateModel(t&&t.value||void 0)}callModelChange(t){return this.onModelChange?this.onModelChange(t):this.ngModelChange.emit(t)}isEqual(t,e){return(t||0===t)&&e?t.toString()===e.toString():((null===t&&null!==e||void 0===t&&void 0!==e)&&(t=`${t}`),t===e)}searchForLabel(t,e,n){if(t&&e&&e.length){const r=[];let s,i=!1;e.forEach(e=>{if("options"in e)return i=!1,s=e;e.label&&(this.compareMethod(t,e,n)||this.service)&&(this.isOptionGroupList&&!i&&(r.push(s),i=!0),r.push(e))}),this.selectedView=r[this.isOptionGroupList?1:0],this.updateComboList(r)}else this.updateComboList()}updateComboList(t){const e=t||[...this.comboOptionsList],n=!t&&this.selectedValue?[Object.assign({},this.selectedOption)]:e;this.visibleOptions=n,!this.selectedView&&this.visibleOptions.length&&(this.selectedView=e.find(t=>void 0!==t.value))}getNextOption(t,e,n=!1){const r=n?e.slice(0).reverse():e.slice(0);let s=null,i=!1;for(const o of r){if(o.value&&!s&&(s=o),o.value&&i)return o;this.isEqual(o.value,t)&&(i=!0)}return s}getIndexSelectedView(){for(let t=0;t<this.visibleOptions.length;t++)if(this.compareObjects(this.visibleOptions[t],this.selectedView))return t;return null}compareObjects(t,e){return JSON.stringify(t)===JSON.stringify(e)}verifyValidOption(){const t=this.getInputValue(),e=this.getOptionFromLabel(t,this.comboOptionsList);if(this.service||this.updateComboList([...this.cacheStaticOptions]),e&&e.value!==this.selectedValue)this.updateSelectedValue(e),this.previousSearchValue=e.label;else{if(this.selectedValue&&this.selectedOption&&this.selectedOption.label!==t)return this.updateSelectedValueWithOldOption(),void(this.previousSearchValue=this.selectedOption.label);if(t&&!e)return this.updateSelectedValue(null,!(!this.selectedOption||this.selectedOption.label===t)||this.changeOnEnter),void(this.previousSearchValue="")}}writeValue(t){if(this.fromWriteValue=!0,Cv(t)&&!this.service&&this.comboOptionsList&&this.comboOptionsList.length){const e=this.getOptionFromValue(t,this.comboOptionsList);return this.updateSelectedValue(e),void this.updateComboList()}if(t&&this.service)return this.getObjectByValue(t);this.updateSelectedValue(null),this.updateComboList()}setDisabledState(t){this.disabled=t}registerOnChange(t){this.onModelChange=t}registerOnTouched(t){this.onModelTouched=t}registerOnValidatorChange(t){this.validatorChange=t}validate(t){if(e=t.value,this.required&&!this.disabled&&!("string"==typeof e&&e||"object"==typeof e&&e&&e.length||"number"==typeof e&&(e||0===e)||"boolean"==typeof e&&e))return{required:{valid:!1}};var e}clear(t){this.callModelChange(t),this.updateSelectedValue(null),this.updateComboList()}configAfterSetFilterService(t){t?(this.comboOptionsList=[],this.unsubscribeKeyupObservable(),this.onInitService()):(this.service=void 0,this.comboOptionsList=this.cacheStaticOptions),this.visibleOptions=[],this.isFirstFilter=!0}unsubscribeKeyupObservable(){this.keyupSubscribe&&this.keyupSubscribe.unsubscribe()}validateModel(t){this.validatorChange&&this.validatorChange(t)}comboListDefinitions(){this.comboOptionsList=this.options.length>0?this.listingComboOptions(this.options):this.options,this.cacheStaticOptions=this.comboOptionsList,this.updateComboList()}compareOptions(t,e){const n=t.label.toString().toLowerCase(),r=e.label.toString().toLowerCase();return n<r?-1:n>r?1:0}hasDuplicatedOption(t,e,n){return t.some(t=>t.label===e)||n&&n.some(t=>t.label===e)}listingComboOptions(t){const e=t.concat(),n=this.verifyComboOptions(e);return this.sortOptions(n),this.isOptionGroupList&&n.length>0?this.verifyComboOptionsGroup(n):n}sortOptions(t){if(t.length>0&&this.sort)return t.sort(this.compareOptions)}validateValue(t,e=!1){const{label:n,options:r,value:s}=t;return this.isOptionGroupList?Cv(n)&&r&&r.length>0||!0===e&&Cv(s):Cv(s)&&!r}verifyComboOptions(t,e=!1,n){return t.reduce((t,r)=>this.verifyIfHasLabel(r)&&!this.hasDuplicatedOption(t,r.label,n)&&this.validateValue(r,e)?(t.push(r),t):t,[])}verifyComboOptionsGroup(t){return t.reduce((t,e)=>{const{options:n,label:r}=e,s=this.verifyComboOptions(n,!0,t);return s.length>0&&(this.sortOptions(s),t.push({label:r,options:!0},...s)),t},[])}verifyIfHasLabel(t={}){const{label:e,options:n,value:r}=t;return!(this.isOptionGroupList&&n&&!e||!e&&!r||!this.isOptionGroupList&&n||(t.label||(t.label=t.value.toString()),0))}updateInternalVariables(t){t?(this.selectedView=t,this.selectedOption=t):(this.selectedView=void 0,this.selectedOption=void 0)}updateModel(t){t!==this.selectedValue&&(this.fromWriteValue||this.callModelChange(t),this.change.emit(this.emitObjectValue?this.selectedOption:t)),this.selectedValue=t,this.fromWriteValue=!1}updateSelectedValueWithOldOption(){const t=this.getOptionFromValue(this.selectedValue,this.comboOptionsList);if(t&&t.label)return this.updateSelectedValue(t)}}return t.\u0275fac=function(e){return new(e||t)(wo(Sv))},t.\u0275dir=Zt({type:t,inputs:{autoFocus:["p-auto-focus","autoFocus"],emitObjectValue:["p-emit-object-value","emitObjectValue"],disabledTabFilter:["p-disabled-tab-filter","disabledTabFilter"],placeholder:["p-placeholder","placeholder"],debounceTime:["p-debounce-time","debounceTime"],disabledInitFilter:["p-disabled-init-filter","disabledInitFilter"],fieldValue:["p-field-value","fieldValue"],fieldLabel:["p-field-label","fieldLabel"],filterMinlength:["p-filter-minlength","filterMinlength"],required:["p-required","required"],changeOnEnter:["p-change-on-enter","changeOnEnter"],disabled:["p-disabled","disabled"],sort:["p-sort","sort"],options:["p-options","options"],filterMode:["p-filter-mode","filterMode"],filterParams:["p-filter-params","filterParams"],literals:["p-literals","literals"],label:["p-label","label"],help:["p-help","help"],name:"name",filterService:["p-filter-service","filterService"],icon:["p-icon","icon"],optional:["p-optional","optional"],clean:["p-clean","clean"]},outputs:{change:"p-change",ngModelChange:"ngModelChange"}}),ey([Vv()],t.prototype,"autoFocus",void 0),ey([Vv()],t.prototype,"clean",void 0),ey([Vv()],t.prototype,"emitObjectValue",void 0),ey([Vv()],t.prototype,"disabledTabFilter",void 0),t})(),qb=(()=>{class t{constructor(t){this.http=t,this.fieldLabel="label",this.fieldValue="value",this.headers=new ld({"X-PO-No-Message":"true"}),this.messages=[]}get url(){return this._url}getFilteredData(t,e){const n=t.value,r=_v(e),s=Object.assign(Object.assign({},r),{filter:n});return this.http.get(`${this.url}`,{responseType:"json",params:s,headers:this.headers}).pipe(x(t=>this.parseToArrayComboOption(t.items)))}getObjectByValue(t,e){const n=_v(e);return this.http.get(`${this.url}/${t}`,{params:n,headers:this.headers}).pipe(x(t=>this.parseToComboOption(t)))}configProperties(t,e,n){this._url=t,this.fieldLabel=e,this.fieldValue=n}parseToArrayComboOption(t){if(t&&t.length>0){const e=t.map(t=>this.parseToComboOption(t));return this.displayMessages(),e}return[]}parseToComboOption(t){return(null==t?void 0:t[this.fieldValue])?{label:t[this.fieldLabel],value:t[this.fieldValue]}:(this.addMessage(t,this.fieldValue),{value:""})}addMessage(t,e){this.messages.push(`Cannot read property "${e}" of ${JSON.stringify(t)},\n      see [p-field-value] property at https://po-ui.io/documentation/po-combo`)}displayMessages(){this.messages.length&&(this.messages.forEach(t=>console.error(t)),this.messages=[])}}return t.\u0275fac=function(e){return new(e||t)(ar(Ed))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Wb=(()=>{class t{constructor(t){this.templateRef=t}}return t.\u0275fac=function(e){return new(e||t)(wo(sl))},t.\u0275dir=Zt({type:t,selectors:[["","p-combo-option-template",""]]}),t})(),Gb=(()=>{class t extends zb{constructor(t,e,n,r,s,i,o,a){super(a),this.element=t,this.differs=e,this.defaultService=n,this.renderer=r,this.changeDetector=s,this.controlPosition=i,this.sanitized=o,this.comboIcon="po-icon-arrow-down",this.comboOpen=!1,this.isProcessingValueByTab=!1,this.scrollTop=0,this.shouldMarkLetters=!0,this._isServerSearching=!1,this.onScroll=()=>{this.adjustContainerPosition()},this.differ=e.find([]).create(null)}set isServerSearching(t){t?(this._isServerSearching=t,this.changeDetector.detectChanges(),this.setContainerPosition(),this.initializeListeners()):this._isServerSearching=t}get isServerSearching(){return this._isServerSearching}ngAfterViewInit(){this.autoFocus&&this.focus()}ngOnChanges(t){t.debounceTime&&(this.unsubscribeKeyupObservable(),this.initInputObservable()),t.filterService&&this.configAfterSetFilterService(this.filterService)}ngOnDestroy(){this.removeListeners(),this.filterSubscription&&this.filterSubscription.unsubscribe(),this.getSubscription&&this.getSubscription.unsubscribe()}focus(){this.disabled||this.inputEl.nativeElement.focus()}onBlur(){var t;null===(t=this.onModelTouched)||void 0===t||t.call(this)}onKeyDown(t){const e=t.keyCode,n=t.target.value;if(this.service&&e===Hb.tab&&n&&!this.disabledTabFilter)return this.controlComboVisibility(!1),this.getObjectByValue(n);if(e===Hb.arrowUp||e===Hb.arrowDown)return t.preventDefault(),this.comboOpen&&(e===Hb.arrowUp?this.selectPreviousOption():this.selectNextOption()),this.controlComboVisibility(!0),this.isFiltering=!!this.changeOnEnter&&this.isFiltering,void(this.shouldMarkLetters=!!this.changeOnEnter&&this.shouldMarkLetters);if(e===Hb.tab||e===Hb.esc)return e===Hb.esc&&this.comboOpen&&(t.preventDefault(),t.stopPropagation()),this.controlComboVisibility(!1),this.verifyValidOption(),this.isProcessingValueByTab=!0,void(this.service||(this.selectedView=this.changeOnEnter&&!this.selectedValue?void 0:this.selectedView));if(e===Hb.enter&&this.selectedView&&this.comboOpen){const t=this.selectedView.value!==this.selectedValue||n!==this.selectedView.label;return this.controlComboVisibility(!1),this.updateSelectedValue(this.selectedView,t),this.isFiltering=!1,void(this.service||this.updateComboList([...this.cacheStaticOptions]))}e===Hb.enter&&this.controlComboVisibility(!0)}onKeyUp(t){const e=t.keyCode||t.which,n=t.target.value;if(e!==Hb.arrowUp&&e!==Hb.arrowDown&&e!==Hb.enter){if(n)this.service||this.previousSearchValue===n||(this.shouldMarkLetters=!0,this.isFiltering=!0,this.searchForLabel(n,this.comboOptionsList,this.filterMode));else{const t=this.service&&this.selectedValue&&this.selectedOption.label===this.previousSearchValue;this.updateSelectedValue(null),this.service?t&&this.updateComboList([...this.cacheOptions]):this.updateComboList(),this.isFiltering=!1}this.previousSearchValue!==n&&(this.changeDetector.detectChanges(),this.controlComboVisibility(!0))}this.previousSearchValue=n}initInputObservable(){if(this.service){const t=fp(this.inputEl.nativeElement,"keyup").pipe(rd(t=>this.isValidCharacterToSearch(t.keyCode)),x(t=>t.currentTarget.value),t=>t.lift(new iy(void 0,void 0)),tf(()=>{this.shouldMarkLetters=!1}),function(t,e=mp){return n=>n.lift(new ny(t,e))}(this.debounceTime));this.keyupSubscribe=t.subscribe(t=>{(t.length>=this.filterMinlength||!t)&&this.controlApplyFilter(t)})}}controlApplyFilter(t){this.isProcessingValueByTab||this.selectedOption&&t===this.selectedOption.label||this.applyFilter(t),this.isProcessingValueByTab=!1}applyFilter(t){this.controlComboVisibility(!1),this.isServerSearching=!0,this.filterSubscription=this.service.getFilteredData({property:this.fieldLabel,value:t},this.filterParams).subscribe(e=>this.setOptionsByApplyFilter(t,e),t=>this.onErrorFilteredData())}setOptionsByApplyFilter(t,e){this.shouldMarkLetters=!0,this.isServerSearching=!1,this.options=e,this.searchForLabel(t,e,this.filterMode),this.changeDetector.detectChanges(),this.controlComboVisibility(!0),this.isFirstFilter&&(this.isFirstFilter=!this.isFirstFilter,this.cacheOptions=this.comboOptionsList)}getObjectByValue(t){var e;this.selectedValue!==t&&(null===(e=this.selectedOption)||void 0===e?void 0:e.label)!==t&&(this.isProcessingValueByTab=!0,this.getSubscription=this.service.getObjectByValue(t,this.filterParams).subscribe(t=>this.updateOptionByFilteredValue(t),t=>this.onErrorGetObjectByValue()))}updateOptionByFilteredValue(t){t?(this.options=[t],this.onOptionClick(t)):this.updateSelectedValue(null),setTimeout(()=>{this.isProcessingValueByTab=!1},this.debounceTime)}selectPreviousOption(){const t=this.selectedView&&this.selectedView.value;if(t){const e=this.getNextOption(t,this.visibleOptions,!0);this.updateSelectedValue(e,e&&e.value!==t&&!this.changeOnEnter)}else if(this.visibleOptions.length){const e=this.visibleOptions[this.visibleOptions.length-1];this.updateSelectedValue(e,e.value!==t&&!this.changeOnEnter)}}selectNextOption(){const t=this.selectedView&&this.selectedView.value;if(t){const e=this.getNextOption(t,this.visibleOptions);this.updateSelectedValue(e,e&&e.value!==t&&!this.changeOnEnter)}else if(this.visibleOptions.length){const e=this.visibleOptions[this.changeOnEnter?1:0];this.updateSelectedValue(e,e.value!==t&&!this.changeOnEnter)}}toggleComboVisibility(){this.disabled||(this.service&&!this.disabledInitFilter&&this.applyFilterInFirstClick(),this.controlComboVisibility(!this.comboOpen))}applyFilterInFirstClick(){this.isFirstFilter&&!this.selectedValue&&this.applyFilter("")}controlComboVisibility(t){t?this.open():this.close()}onOptionClick(t,e){const n=this.getInputValue(),r=t.value!==this.selectedValue||!(!this.selectedView||n===this.selectedView.label);e&&e.stopPropagation(),this.updateSelectedValue(t,r),this.controlComboVisibility(!1),this.service||this.updateComboList([...this.cacheStaticOptions]),this.previousSearchValue=this.selectedView.label}scrollTo(t){const e=this.element.nativeElement.querySelectorAll(".po-combo-item-selected");this.setScrollTop(!e.length||t<=1?0:e[0].offsetTop-88)}getInputValue(){return this.inputEl.nativeElement.value}setInputValue(t){this.inputEl.nativeElement.value=t}wasClickedOnToggle(t){!this.comboOpen||this.inputEl.nativeElement.contains(t.target)||this.iconElement.nativeElement.contains(t.target)||this.contentElement&&this.contentElement.nativeElement.contains(t.target)?!this.service||this.getInputValue()||this.isFirstFilter||this.applyFilter(""):(this.controlComboVisibility(!1),this.verifyValidOption(),this.selectedView=this.changeOnEnter&&!this.selectedValue?void 0:this.selectedView)}getLabelFormatted(t){const e=this.sanitizeTagHTML(t);let n=e;if(this.isFiltering||this.service&&this.getInputValue()&&!this.compareObjects(this.cacheOptions,this.visibleOptions)&&this.shouldMarkLetters){const t=this.sanitizeTagHTML(this.getInputValue().toString().toLowerCase()),r=e.toLowerCase(),s='<span class="po-font-text-large-bold">',i="</span>";let o,a,l;switch(this.filterMode){case Ub.startsWith:case Ub.contains:const u=r.indexOf(t);u>-1&&(o=e.substring(0,u),a=e.substring(u,u+t.length),l=e.substring(u+t.length),n=o+s+a+i+l);break;case Ub.endsWith:const c=r.lastIndexOf(t);c>-1&&(o=e.substring(0,c),a=e.substring(c),n=o+s+a+i)}}return this.safeHtml(n)}safeHtml(t){return this.sanitized.bypassSecurityTrustHtml(t)}isValidCharacterToSearch(t){return 9!==t&&13!==t&&16!==t&&17!==t&&18!==t&&20!==t&&27!==t&&37!==t&&38!==t&&39!==t&&40!==t&&93!==t}searchOnEnter(t){this.service&&!this.selectedView&&t.length>=this.filterMinlength&&this.controlApplyFilter(t)}adjustContainerPosition(){this.controlPosition.adjustPosition("bottom")}close(){this.comboOpen=!1,this.changeDetector.detectChanges(),this.comboIcon="po-icon-arrow-down",this.removeListeners(),this.isFiltering=!1}initializeListeners(){this.removeListeners(),this.clickoutListener=this.renderer.listen("document","click",t=>{this.wasClickedOnToggle(t)}),this.eventResizeListener=this.renderer.listen("window","resize",()=>{setTimeout(()=>this.adjustContainerPosition(),250)}),window.addEventListener("scroll",this.onScroll,!0)}onErrorGetObjectByValue(){this.updateOptionByFilteredValue(null)}onErrorFilteredData(){this.isServerSearching=!1,this.updateComboList([]),this.controlComboVisibility(!0)}open(){this.comboOpen=!0,this.changeDetector.detectChanges(),this.comboIcon="po-icon-arrow-up",this.initializeListeners(),this.inputEl.nativeElement.focus(),this.scrollTo(this.getIndexSelectedView()),this.setContainerPosition()}removeListeners(){this.clickoutListener&&this.clickoutListener(),this.eventResizeListener&&this.eventResizeListener(),window.removeEventListener("scroll",this.onScroll,!0)}sanitizeTagHTML(t=""){return t.replace(/\</gm,"&lt;").replace(/\>/g,"&gt;")}setContainerPosition(){this.controlPosition.setElements(this.containerElement.nativeElement,8,this.inputEl,["top","bottom"],!0),this.adjustContainerPosition()}setScrollTop(t){this.contentElement&&(this.contentElement.nativeElement.scrollTop=t)}}return t.\u0275fac=function(e){return new(e||t)(wo(Aa),wo(Wa),wo(qb),wo(Fa),wo(Ja),wo(qv),wo(Yh),wo(Sv))},t.\u0275cmp=Ut({type:t,selectors:[["po-combo"]],contentQueries:function(t,e,n){if(1&t&&Ul(n,Wb,7),2&t){let t;Bl(t=$l())&&(e.comboOptionTemplate=t.first)}},viewQuery:function(t,e){if(1&t&&(Hl(Ry,5,Aa),Hl(Py,5,Aa),Hl(Ly,7,Aa),Hl(Sy,7,Aa)),2&t){let t;Bl(t=$l())&&(e.containerElement=t.first),Bl(t=$l())&&(e.contentElement=t.first),Bl(t=$l())&&(e.iconElement=t.first),Bl(t=$l())&&(e.inputEl=t.first)}},features:[wa([qb,qv,{provide:up,useExisting:st(()=>t),multi:!0},{provide:cp,useExisting:st(()=>t),multi:!0}]),ro,le],decls:21,vars:23,consts:[[3,"p-label","p-help","p-optional"],[1,"po-field-container-content"],["class","po-field-icon-container-left",4,"ngIf"],["autocomplete","off","type","text",1,"po-input","po-combo-input",3,"ngClass","disabled","placeholder","required","click","keyup","blur","keyup.enter","keydown"],["inp",""],[1,"po-field-icon-container-right"],[3,"p-element-ref","p-change-event",4,"ngIf"],[3,"click"],["iconArrow",""],[1,"po-combo-container",3,"hidden"],["containerElement",""],[4,"ngIf","ngIfThen","ngIfElse"],["loadingTemplate",""],["optionsTemplate",""],["visibleOptionsTemplate",""],["noDataTemplate",""],[1,"po-field-icon-container-left"],[1,"po-field-icon",3,"p-icon"],[3,"p-element-ref","p-change-event"],[1,"po-combo-container-loading"],[1,"po-combo-container-content"],["contentElement",""],[3,"po-combo-item-selected","click",4,"ngFor","ngForOf"],["defaultOptionTemplate",""],["optionTemplate",""],["class","po-combo-item-title",4,"ngIf","ngIfElse"],["optionLink",""],[1,"po-combo-item-title"],[1,"po-combo-item"],[3,"innerHTML"],["optionsGroupTemplate",""],["defaultOptionsTemplate",""],[3,"ngTemplateOutlet","ngTemplateOutletContext"],[1,"po-combo-container-no-data"],[1,"po-combo-no-data","po-text-center"]],template:function(t,e){if(1&t&&(Do(0,"po-field-container",0),Do(1,"div",1),vo(2,Ny,2,3,"div",2),Do(3,"input",3,4),Fo("click",function(){return e.toggleComboVisibility()})("keyup",function(t){return e.onKeyUp(t)})("blur",function(){return e.onBlur()})("keyup.enter",function(t){return e.searchOnEnter(t.target.value)})("keydown",function(t){return e.onKeyDown(t)}),Eo(),Do(5,"div",5),vo(6,jy,1,1,"po-clean",6),Do(7,"span",7,8),Fo("click",function(){return e.toggleComboVisibility()}),Eo(),Eo(),Eo(),Do(9,"div",9,10),vo(11,My,1,0,"ng-container",11),Eo(),So(12,"po-field-container-bottom"),Eo(),vo(13,Vy,2,0,"ng-template",null,12,Gl),vo(15,Hy,1,3,"ng-template",null,13,Gl),vo(17,tv,3,1,"ng-template",null,14,Gl),vo(19,ev,4,1,"ng-template",null,15,Gl)),2&t){const t=bo(4),n=bo(14),r=bo(16);Co("p-label",e.label)("p-help",e.help)("p-optional",!e.required&&e.optional),Ws(2),Co("ngIf",e.icon),Ws(1),$o("po-input-icon-left",e.icon),Co("ngClass",e.clean&&t.value?"po-input-double-icon-right":"po-input-icon-right")("disabled",e.disabled)("placeholder",e.placeholder)("required",e.required),mo("name",e.name),Ws(3),Co("ngIf",e.clean&&!e.disabled),Ws(1),ra("po-icon po-field-icon ",e.comboIcon,""),$o("po-field-icon-disabled",e.disabled)("po-field-icon",!e.disabled),Ws(2),Co("hidden",!e.comboOpen&&!e.isServerSearching),Ws(2),Co("ngIf",e.isServerSearching)("ngIfThen",n)("ngIfElse",r)}},directives:[ab,ih,eh,ib,Av,hb,Pv,rh,lh],encapsulation:2}),t})();class Zb{constructor(t){this.http=t}execute(t,e){return"string"==typeof t?this.post(t,e):ed(t(e))}post(t,e){return this.http.post(t,e)}setFormDefaultIfEmpty(t){return t||{value:{},fields:[],focus:void 0}}}let Yb=(()=>{class t extends Zb{constructor(t){super(t)}createAndUpdateFieldsForm(t=[],e=[]){return[...t].reduce((t,n)=>{const r=t.findIndex(t=>t.property===n.property);return r>=0?t[r]=Object.assign(Object.assign({},e[r]),n):t.push(n),t},[...e])}executeLoad(t,e){return this.execute(t,e).pipe(x(t=>this.setFormDefaultIfEmpty(t)))}}return t.\u0275fac=function(e){return new(e||t)(ar(Ed))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Kb=(()=>{class t extends Zb{constructor(t){super(t)}sendFieldChange(t,e){return this.execute(t.validate,{property:t.property,value:e}).pipe(x(t=>this.setFieldDefaultIfEmpty(t)))}sendFormChange(t,e,n){return this.execute(t,{property:e.property,value:n}).pipe(x(t=>this.setFormDefaultIfEmpty(t)))}updateFieldsForm(t=[],e=[]){return[...t].reduce((t,n)=>{const r=t.findIndex(t=>t.property===n.property);return r>=0&&(t[r]=Object.assign(Object.assign({},e[r]),n)),t},[...e])}setFieldDefaultIfEmpty(t){return t||{field:{}}}}return t.\u0275fac=function(e){return new(e||t)(ar(Ed))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Qb=(()=>{class t extends class{constructor(){this.stackTop=[],this.stackBottom=[],this.defaultDuration=1e4}success(t){this.createToaster(this.buildToaster(t,Rb.Success))}warning(t){this.createToaster(this.buildToaster(t,Rb.Warning))}error(t){this.createToaster(this.buildToaster(t,Rb.Error))}information(t){this.createToaster(this.buildToaster(t,Rb.Information))}setDefaultDuration(t){this.defaultDuration=t}buildToaster(t,e){let n,r=0;void 0===t.orientation||t.orientation===Ib.Bottom?(r=this.stackBottom.length,n=Ib.Bottom):(r=this.stackTop.length,n=Ib.Top);const s={componentRef:void 0,message:t.message||t,type:e,orientation:n,action:t.action,actionLabel:t.actionLabel,position:r,duration:t.duration||this.defaultDuration};return t.action&&(s.action=e=>{t.action(),this.destroyToaster(e.componentRef)}),s}}{constructor(t){super(),this.poComponentInjector=t}createToaster(t){const e=this.poComponentInjector.createComponentInApplication(Pb);t.componentRef=e,e.changeDetectorRef.detectChanges(),e.instance.configToaster(t);const n=t.orientation===Ib.Top?this.stackTop:this.stackBottom;n.push(e),this.verifyLimitToaster(n),this.observableOnClose(e),t.action&&t.actionLabel||function(t=0,e,n){let r=-1;return yp(e)?r=Number(e)<1?1:Number(e):S(e)&&(n=e),S(n)||(n=mp),new v(e=>{const s=yp(t)?t:+t-n.now();return n.schedule(vp,s,{index:0,period:r,subscriber:e})})}(t.duration).pipe(function(t,e=!1){return n=>n.lift(new ay(t,e))}(()=>e.instance.alive)).subscribe(()=>{this.destroyToaster(e)})}destroyToaster(t){let e;e=t.instance.orientation===Ib.Top?this.stackTop:this.stackBottom,t.instance.setFadeOut();const n=e.indexOf(t);e.splice(n,1),setTimeout(()=>{this.poComponentInjector.destroyComponentInApplication(t);for(let t=0;t<e.length;t++)e[t].instance.changePosition(t)},200)}observableOnClose(t){t.instance.observableOnClose.subscribe(()=>{this.destroyToaster(t)})}verifyLimitToaster(t){t.length>5&&this.destroyToaster(t[0])}}return t.\u0275fac=function(e){return new(e||t)(ar(Db))},t.\u0275prov=ht({factory:function(){return new t(ar(Db))},token:t,providedIn:"root"}),t})(),Xb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[yh,pp,jd,Gv,$v,db,Kv,ub,Jv,pb,eb,tb,lb,Nv,vb,bb,Nb,Bb,Wv,Tv],ub,db,pb,lb]}),t})(),Jb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[yh,Wm]]}),t})();var tw=function(t){return t.Horizontal="horizontal",t.Vertical="vertical",t}({}),ew=function(t){return t.Danger="danger",t.Info="info",t.Success="success",t.Warning="warning",t}({});const nw=Object.values(Qv),rw=tw.Vertical;let sw=(()=>{class t{constructor(){this.click=new Tl,this.poTagOrientation=tw,this._orientation=rw}set color(t){this._color=nw.includes(t)?t:void 0}get color(){return this._color}set icon(t){this._icon=this.type?bv(t):t}get icon(){return this._icon}set inverse(t){this._inverse=bv(t)}get inverse(){return this._inverse}set orientation(t){this._orientation=Object.values(tw).includes(t)?t:rw}get orientation(){return this._orientation}set type(t){this._type=Object.values(ew).includes(t)?t:void 0}get type(){return this._type}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Zt({type:t,inputs:{color:["p-color","color"],icon:["p-icon","icon"],inverse:["p-inverse","inverse"],orientation:["p-orientation","orientation"],type:["p-type","type"],label:["p-label","label"],value:["p-value","value"]},outputs:{click:"p-click"}}),t})();var iw=function(t){return t.Danger="po-icon-close",t.Info="po-icon-info",t.Success="po-icon-ok",t.Warning="po-icon-warning",t}({});const ow="po-tag-"+ew.Info;let aw=(()=>{class t extends sw{ngOnInit(){this.isClickable=this.click.observers.length>0}get iconFromType(){switch(this.type){case ew.Danger:return iw.Danger;case ew.Info:return iw.Info;case ew.Success:return iw.Success;case ew.Warning:return iw.Warning}}get tagColor(){return this.type?this.inverse?`po-tag-${this.type}-inverse`:`po-tag-${this.type}`:this.color?this.inverse?`po-text-${this.color}`:`po-${this.color}`:this.inverse?`${ow}-inverse`:ow}get tagOrientation(){return this.orientation===this.poTagOrientation.Horizontal}onClick(){this.click.emit({value:this.value,type:this.type})}onKeyPressed(t){t.preventDefault(),t.stopPropagation(),this.onClick()}}return t.\u0275fac=function(){let e;return function(n){return(e||(e=Vn(t)))(n||t)}}(),t.\u0275cmp=Ut({type:t,selectors:[["po-tag"]],features:[ro],decls:7,vars:10,consts:[[1,"po-tag-container"],["class","po-tag-title po-text-nowrap",4,"ngIf"],[1,"po-tag-sub-container"],["tabindex","0",1,"po-tag",3,"ngClass","click","keydown.enter","keydown.space","keyup.space"],["class","po-tag-icon",3,"p-icon",4,"ngIf"],[1,"po-tag-value"],[1,"po-tag-title","po-text-nowrap"],[1,"po-tag-label"],[1,"po-tag-icon",3,"p-icon"]],template:function(t,e){1&t&&(Do(0,"div",0),vo(1,nv,3,1,"div",1),Do(2,"div",2),Do(3,"div",3),Fo("click",function(){return e.onClick()})("keydown.enter",function(t){return e.onKeyPressed(t)})("keydown.space",function(t){return t.preventDefault()})("keyup.space",function(t){return e.onKeyPressed(t)}),vo(4,rv,1,1,"po-icon",4),Do(5,"span",5),ta(6),Eo(),Eo(),Eo(),Eo()),2&t&&($o("po-tag-container-horizontal",e.tagOrientation),Ws(1),Co("ngIf",e.label),Ws(2),$o("po-clickable",e.isClickable)("po-tag-inverse",e.inverse),Co("ngClass",e.tagColor),Ws(1),Co("ngIf",e.icon),Ws(2),ea(e.value))},directives:[ih,eh,Av],encapsulation:2,changeDetection:0}),t})(),lw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[yh,Tv]]}),t})(),uw=(()=>{class t{constructor(t){this.http=t}onLoad(t,e){return this.http.post(t,e).toPromise()}}return t.\u0275fac=function(e){return new(e||t)(ar(Ed))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),cw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[fh,dh,ph,Mb,hh,Yb,Kb,uw],imports:[[yh,pp,nb,Jb,Xb,lw,Vb]]}),t})();Math;let hw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh,Wv]]}),t})(),dw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh,pp,Xb]]}),t})(),pw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[yh,Wm,$v,rb]]}),t})(),fw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh]]}),t})(),gw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh,Wm,fw,Xb,Nv,Tv]]}),t})(),mw=(()=>{class t{constructor(){this.subjectChild=new D,this.subjectParent=new D}receiveFromChildMenuClicked(){return this.subjectChild.asObservable()}receiveFromParentMenuClicked(){return this.subjectParent.asObservable()}sendToParentMenuClicked(t){this.subjectChild.next(t)}sendToChildMenuClicked(t){this.subjectParent.next(t)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),yw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[mw],imports:[[yh,Wm,Xb,Wv]]}),t})(),vw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh,rb,Wv,Tv]]}),t})(),bw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh,Wm]]}),t})(),ww=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh,Wm]]}),t})(),Cw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh,vw,bw,ww,gw,Tv]]}),t})(),_w=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh,pp,Wm,xv,$v,eb,sb,Xb,Lv,vb]]}),t})(),Dw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[yh,Wm,Jv]]}),t})(),Ew=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh]]}),t})(),Sw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh,jb]]}),t})(),xw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[yh,dv,rb,Tv]]}),t})(),Aw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh,pp,Jv,Xb]]}),t})(),Tw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({imports:[[yh,Jv]]}),t})(),Ow=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[hv,dv,xv,$v,Gv,Kv,Xv,Jv,eb,tb,nb,sb,cw,Xb,hw,dw,Tv,Jb,pw,Nv,gw,yw,vb,Cw,_w,jb,rb,bb,Dw,Ew,Bb,Sw,lw,xw,Aw,Tw],hv,dv,xv,$v,Gv,Kv,Xv,Jv,eb,tb,nb,sb,cw,Xb,hw,dw,Tv,Jb,pw,Nv,gw,yw,vb,Cw,_w,jb,rb,bb,Dw,Ew,Bb,Sw,lw,xw,Aw,Tw]}),t})(),Fw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[Wv],Wv]}),t})(),kw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[]]}),t})();const Iw={en:{closeButton:"Close",details:"Details",detail:"Detail",error:"Error",warning:"Warning",information:"Information",success:"Success"},es:{closeButton:"Cerrar",details:"Detalles",detail:"Detalle",error:"Error",warning:"Advertencia",information:"Informacion",success:"\xc9xito"},pt:{closeButton:"Fechar",details:"Detalhes",detail:"Detalhe",error:"Erro",warning:"Aviso",information:"Informa\xe7\xe3o",success:"Sucesso"},ru:{closeButton:"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0442\u044c",details:"\u0414\u0435\u0442\u0430\u043b\u0438",detail:"\u0414\u0435\u0442\u0430\u043b\u044c",error:"\u041e\u0448\u0438\u0431\u043a\u0430",warning:"\u041f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435",information:"\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f",success:"Y\u0441\u043f\u0435\u0445"}},Rw={success:"color-11",error:"color-07",warning:"color-08",info:""};let Pw=(()=>{class t{constructor(t){this.languageService=t,this.closed=new Tl,this.details=[],this.language=this.languageService.getShortLanguage(),this.literals=Iw[this.language],this.primaryAction={action:()=>this.close(),label:this.literals.closeButton}}set detail(t){t&&t.length&&(this.details=this.filterByValidDetails(t)),this.title=this.formatTitle(this.details)}close(){this.modal.close(),this.closed.emit()}formatDetailItemTitle(t){return t.code?`${t.code} - ${t.message}`:t.message}open(){this.modal.open()}typeColor(t){return Rw[t]}typeValue(t){return Iw[this.language][t]||t}addValidDetail(t,e){return e.message?t.concat(this.getValidDetailProperties(e)):t}getValidDetailProperties({code:t,message:e,detailedMessage:n,type:r}){return{code:t,message:e,detailedMessage:n,type:r}}filterByValidDetails(t){return t.reduce((t,e)=>this.addValidDetail(t,e),[])}formatTitle(t){return t.length>1?`${this.literals.details} (${t.length})`:this.literals.detail}}return t.\u0275fac=function(e){return new(e||t)(wo(Sv))},t.\u0275cmp=Ut({type:t,selectors:[["po-http-interceptor-detail"]],viewQuery:function(t,e){if(1&t&&Hl(yb,7),2&t){let t;Bl(t=$l())&&(e.modal=t.first)}},decls:4,vars:3,consts:[["p-hide-close","","p-size","lg",3,"p-primary-action","p-title"],[1,"po-row"],[1,"po-md-12","po-mt-1","po-mb-1"],[3,"p-label",4,"ngFor","ngForOf"],[3,"p-label"],["class","po-row po-mb-1",4,"ngIf"],[1,"po-row","po-mb-1"],[3,"p-color","p-value"]],template:function(t,e){1&t&&(Do(0,"po-modal",0),Do(1,"div",1),Do(2,"po-accordion",2),vo(3,iv,5,3,"po-accordion-item",3),Eo(),Eo(),Eo()),2&t&&(Co("p-primary-action",e.primaryAction)("p-title",e.title),Ws(3),Co("ngForOf",e.details))},directives:[yb,lv,rh,av,ih,aw],encapsulation:2}),t})();const Lw={pt:{help:"Ajuda",details:"Detalhes",serverNotResponse:"Servidor n\xe3o est\xe1 respondendo"},en:{help:"Help",details:"Details",serverNotResponse:"Server is not responding"},es:{help:"Ayuda",details:"Detalles",serverNotResponse:"El servidor no est\xe1 respondiendo"},ru:{help:"\u041f\u043e\u043c\u043e\u0433\u0438\u0442\u0435",details:"\u0414\u0435\u0442\u0430\u043b\u0438",serverNotResponse:"\u0421\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442"}},Nw="X-PO-No-Error",jw="X-PO-No-Message";let Mw=(()=>{class t extends class{constructor(t,e,n){this.componentInjector=t,this.notification=e,this.languageService=n,this.notificationTypes=["success","warning","error","information"],this.literals=Lw[this.languageService.getShortLanguage()],this.httpInterceptorDetailComponent=void 0}intercept(t,e){const n=t.clone();return t=t&&this.hasParameters(t)?this.cloneRequestWithoutParameters(t):t,e.handle(t).pipe(tf(t=>{t instanceof Cd&&this.processResponse(t,n)},t=>{this.processErrorResponse(t,n)}))}processResponse(t,e){if(!this.hasNoMessageParam(e)&&t.body&&t.body._messages){const e=t.body._messages;e instanceof Array?e.forEach(t=>{this.showNotification(t)}):this.showNotification(e)}}processErrorResponse(t,e){const n=0!==t.status?t.error:{code:0,message:this.literals.serverNotResponse,detailedMessage:t.message},r=this.hasNoErrorParam(e),s=this.hasNoMessageParam(e),i=this.notificationTypes.slice(1);n&&n.message&&!r&&!s&&this.showNotification(Object.assign(Object.assign({},n),{type:i.includes(n.type)?n.type:"error"}))}cloneRequestWithoutParameters(t){const e=t.headers.delete(Nw).delete(jw);return t.clone({headers:e})}createModal(t){const e=t.details?[t,...t.details]:[t];this.httpInterceptorDetailComponent=this.componentInjector.createComponentInApplication(Pw),this.httpInterceptorDetailComponent.instance.detail=e,this.httpInterceptorDetailComponent.instance.closed.subscribe(()=>this.destroyModal()),this.httpInterceptorDetailComponent.instance.open()}destroyModal(){this.httpInterceptorDetailComponent&&(this.componentInjector.destroyComponentInApplication(this.httpInterceptorDetailComponent),this.httpInterceptorDetailComponent=void 0)}hasMessage(t){return t&&t.message}hasNoErrorParam(t){const e=t&&t.headers.get(Nw);return e&&"true"===e.toString().toLocaleLowerCase()}hasNoMessageParam(t){const e=t&&t.headers.get(jw);return e&&"true"===e.toString().toLocaleLowerCase()}hasParameters(t){return t.headers.has(Nw)||t.headers.has(jw)}showNotification(t){if(!this.hasMessage(t))return;const e=this.notificationTypes.includes(t.type)?t.type:"information",n=this.generateNotificationAction(t);this.notification[e]({message:t.message,actionLabel:n.label,action:n.action})}generateDetailModal(t){return()=>{this.httpInterceptorDetailComponent||this.createModal(t)}}generateNotificationAction(t){let e,n;return!t.helpUrl||t.detailedMessage||t.details?(t.detailedMessage||t.details)&&(n=this.literals.details,e=this.generateDetailModal(t)):(n=this.literals.help,e=this.generateUrlHelpFunction(t.helpUrl)),{label:n,action:e}}generateUrlHelpFunction(t){return()=>{window.open(t,"_blank")}}}{constructor(t,e,n){super(e,t,n)}}return t.\u0275fac=function(e){return new(e||t)(ar(Qb),ar(Db),ar(Sv))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Vw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[Mw,Qb,{provide:xd,useClass:Mw,multi:!0}],imports:[[yh,hv,vb,Lb,lw]]}),t})(),Bw=(()=>{class t{constructor(){this.controlHttpRequest=new D}getControlHttpRequest(){return this.controlHttpRequest.asObservable()}send(t=0){this.controlHttpRequest.next(t)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const Hw="X-PO-No-Count-Pending-Requests",Uw="X-PO-Screen-Lock";let $w=(()=>{class t{constructor(t,e){this.controlHttpRequest=t,this.poComponentInjector=e,this.loadingOverlayComponent=void 0,this.pendingRequests=0,this.overlayRequests=0}intercept(t,e){const n=t.clone();return t=this.requestCloneWithoutHeaderParam([Hw,Uw],t),this.setCountPendingRequests(!0,n),this.setCountOverlayRequests(!0,n),e.handle(t).pipe(tf(t=>{t instanceof Cd&&(this.setCountPendingRequests(!1,n),this.setCountOverlayRequests(!1,n))}),Vp(t=>(this.setCountPendingRequests(!1,n),this.setCountOverlayRequests(!1,n),Gd(t))))}getCountPendingRequests(){return this.controlHttpRequest.getControlHttpRequest()}buildLoading(){this.loadingOverlayComponent||(this.loadingOverlayComponent=this.poComponentInjector.createComponentInApplication(kv),this.loadingOverlayComponent.instance.screenLock=!0,this.loadingOverlayComponent.instance.changeDetector.detectChanges())}destroyLoading(){this.loadingOverlayComponent&&(this.poComponentInjector.destroyComponentInApplication(this.loadingOverlayComponent),this.loadingOverlayComponent=void 0)}requestCloneWithoutHeaderParam(t,e){let n=!1;return t.forEach(t=>{e.headers.has(t)&&(e.headers.delete(t),n=!0)}),n?e.clone({headers:e.headers}):e}setCountPendingRequests(t,e){const n=e.headers.has(Hw),r=e.headers.get(Hw);n&&"true"===r.toString().toLowerCase()||(this.pendingRequests+=t?1:-1,this.controlHttpRequest.send(this.pendingRequests))}setCountOverlayRequests(t,e){if(e.headers.has(Uw)){if("false"===e.headers.get(Uw).toString().toLowerCase())return;this.overlayRequests+=t?1:-1,this.overlayRequests>0?this.buildLoading():this.destroyLoading()}}}return t.\u0275fac=function(e){return new(e||t)(ar(Bw),ar(Db))},t.\u0275prov=ht({factory:function(){return new t(ar(Bw),ar(Db))},token:t,providedIn:"root"}),t})(),zw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[Bw,$w,Db,{provide:xd,useClass:$w,multi:!0}],imports:[[Nv]]}),t})(),qw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[Vw,zw],Vw,zw]}),t})(),Ww=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[Vb],Vb]}),t})(),Gw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[Qb],imports:[[Ow,Fw,kw,qw,Ww,Nb],Ow,Fw,qw,kw,Ww,Nb]}),t})();function Zw(...t){const e=t.length;if(0===e)throw new Error("list of properties cannot be empty.");return n=>x(function(t,e){return n=>{let r=n;for(let s=0;s<e;s++){const e=null!=r?r[t[s]]:void 0;if(void 0===e)return;r=e}return r}}(t,e))(n)}new $n("I18N_CONFIG");let Yw=(()=>{class t{constructor(t){this.http=t,this.title="form-people",this.value={value:0,label:"",id:0,name:"",nickname:"",email:""}}ngOnInit(){}onSelectPerson(t){console.log("item",t),this.http.get(`https://po-sample-api.herokuapp.com/v1/heroes?id=${t}`).pipe(Zw("items"),Zw("0")).subscribe(t=>this.prepareSend(t),t=>console.error(t))}prepareSend(t){let e=[];for(let n in t)e.push({name:n,value:t[n]});console.log({detail:e}),this.sendValue(e)}sendValue(t){console.log(t),document.dispatchEvent(new CustomEvent("emitValue",{detail:t}))}}return t.\u0275fac=function(e){return new(e||t)(wo(Ed))},t.\u0275cmp=Ut({type:t,selectors:[["fp-root"]],inputs:{teste:"teste"},decls:1,vars:0,consts:[["name","value","p-filter-service","https://po-sample-api.herokuapp.com/v1/heroes","p-label","Pessoas",1,"po-md-12",3,"[ngModel]","p-change"]],template:function(t,e){1&t&&(Do(0,"po-combo",0),Fo("[ngModel]",function(){return e.value})("p-change",function(t){return e.onSelectPerson(t)}),Eo())},directives:[Gb],encapsulation:2}),t})(),Kw=(()=>{class t{constructor(t){const e=function(t,e){const n=function(t,e){return e.get(Da).resolveComponentFactory(t).inputs}(t,e.injector),r=e.strategyFactory||new op(t,e.injector),s=function(t){const e={};return t.forEach(({propName:t,templateName:n})=>{var r;e[(r=n,r.replace(/[A-Z]/g,t=>`-${t.toLowerCase()}`))]=t}),e}(n);class i extends lp{constructor(t){super(),this.injector=t}get ngElementStrategy(){if(!this._ngElementStrategy){const t=this._ngElementStrategy=r.create(this.injector||e.injector);n.forEach(({propName:e})=>{if(!this.hasOwnProperty(e))return;const n=this[e];delete this[e],t.setInputValue(e,n)})}return this._ngElementStrategy}attributeChangedCallback(t,e,n,r){this.ngElementStrategy.setInputValue(s[t],n)}connectedCallback(){let t=!1;this.ngElementStrategy.events&&(this.subscribeToEvents(),t=!0),this.ngElementStrategy.connect(this),t||this.subscribeToEvents()}disconnectedCallback(){this._ngElementStrategy&&this._ngElementStrategy.disconnect(),this.ngElementEventsSubscription&&(this.ngElementEventsSubscription.unsubscribe(),this.ngElementEventsSubscription=null)}subscribeToEvents(){this.ngElementEventsSubscription=this.ngElementStrategy.events.subscribe(t=>{const e=function(t,e,n){if("function"!=typeof CustomEvent){const r=t.createEvent("CustomEvent");return r.initCustomEvent(e,!1,!1,n),r}return new CustomEvent(e,{bubbles:!1,cancelable:!1,detail:n})}(this.ownerDocument,t.name,t.value);this.dispatchEvent(e)})}}return i.observedAttributes=Object.keys(s),n.forEach(({propName:t})=>{Object.defineProperty(i.prototype,t,{get(){return this.ngElementStrategy.getInputValue(t)},set(e){this.ngElementStrategy.setInputValue(t,e)},configurable:!0,enumerable:!0})}),i}(Yw,{injector:t});customElements.define("fp-root",e)}ngDoBootstrap(){}}return t.\u0275fac=function(e){return new(e||t)(ar(eo))},t.\u0275mod=Wt({type:t}),t.\u0275inj=dt({providers:[],imports:[[td,pp,Gw,Xb,jd]]}),t})();(function(){if(Tu)throw new Error("Cannot enable prod mode after platform setup.");Au=!1})(),Xh().bootstrapModule(Kw).catch(t=>console.error(t))},615:t=>{function e(t){return Promise.resolve().then(()=>{var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e})}e.keys=()=>[],e.resolve=e,e.id=615,t.exports=e}},t=>{"use strict";t(t.s=511)}]);';