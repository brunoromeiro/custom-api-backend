export const pocCPF = '(()=>{"use strict";var e,r={},n={};function t(e){var o=n[e];if(void 0!==o)return o.exports;var a=n[e]={exports:{}};return r[e](a,a.exports,t),a.exports}t.m=r,e=[],t.O=(r,n,o,a)=>{if(!n){var l=1/0;for(u=0;u<e.length;u++){for(var[n,o,a]=e[u],s=!0,p=0;p<n.length;p++)(!1&a||l>=a)&&Object.keys(t.O).every(e=>t.O[e](n[p]))?n.splice(p--,1):(s=!1,a<l&&(l=a));s&&(e.splice(u--,1),r=o())}return r}a=a||0;for(var u=e.length;u>0&&e[u-1][2]>a;u--)e[u]=e[u-1];e[u]=[n,o,a]},t.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return t.d(r,{a:r}),r},t.d=(e,r)=>{for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},t.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),(()=>{var e={666:0};t.O.j=r=>0===e[r];var r=(r,n)=>{var o,a,[l,s,p]=n,u=0;for(o in s)t.o(s,o)&&(t.m[o]=s[o]);if(p)var f=p(t);for(r&&r(n);u<l.length;u++)t.o(e,a=l[u])&&e[a]&&e[a][0](),e[l[u]]=0;return t.O(f)},n=self.webpackChunkpoc_ng_elements=self.webpackChunkpoc_ng_elements||[];n.forEach(r.bind(null,0)),n.push=r.bind(null,n.push.bind(n))})()})();(self.webpackChunkpoc_ng_elements=self.webpackChunkpoc_ng_elements||[]).push([[429],{167:()=>{"use strict";!function(e){const t=e.performance;function n(e){t&&t.mark&&t.mark(e)}function o(e,n){t&&t.measure&&t.measure(e,n)}n("Zone");const r=e.__Zone_symbol_prefix||"__zone_symbol__";function s(e){return r+e}const a=!0===e[s("forceDuplicateZoneCheck")];if(e.Zone){if(a||"function"!=typeof e.Zone.__symbol__)throw new Error("Zone already loaded.");return e.Zone}class i{constructor(e,t){this._parent=e,this._name=t?t.name||"unnamed":"<root>",this._properties=t&&t.properties||{},this._zoneDelegate=new l(this,this._parent&&this._parent._zoneDelegate,t)}static assertZonePatched(){if(e.Promise!==O.ZoneAwarePromise)throw new Error("Zone.js has detected that ZoneAwarePromise `(window|global).Promise` has been overwritten.\nMost likely cause is that a Promise polyfill has been loaded after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. If you must load one, do so before loading zone.js.)")}static get root(){let e=i.current;for(;e.parent;)e=e.parent;return e}static get current(){return z.zone}static get currentTask(){return j}static __load_patch(t,r,s=!1){if(O.hasOwnProperty(t)){if(!s&&a)throw Error("Already loaded patch: "+t)}else if(!e["__Zone_disable_"+t]){const s="Zone:"+t;n(s),O[t]=r(e,i,C),o(s,s)}}get parent(){return this._parent}get name(){return this._name}get(e){const t=this.getZoneWith(e);if(t)return t._properties[e]}getZoneWith(e){let t=this;for(;t;){if(t._properties.hasOwnProperty(e))return t;t=t._parent}return null}fork(e){if(!e)throw new Error("ZoneSpec required!");return this._zoneDelegate.fork(this,e)}wrap(e,t){if("function"!=typeof e)throw new Error("Expecting function got: "+e);const n=this._zoneDelegate.intercept(this,e,t),o=this;return function(){return o.runGuarded(n,this,arguments,t)}}run(e,t,n,o){z={parent:z,zone:this};try{return this._zoneDelegate.invoke(this,e,t,n,o)}finally{z=z.parent}}runGuarded(e,t=null,n,o){z={parent:z,zone:this};try{try{return this._zoneDelegate.invoke(this,e,t,n,o)}catch(r){if(this._zoneDelegate.handleError(this,r))throw r}}finally{z=z.parent}}runTask(e,t,n){if(e.zone!=this)throw new Error("A task can only be run in the zone of creation! (Creation: "+(e.zone||y).name+"; Execution: "+this.name+")");if(e.state===v&&(e.type===P||e.type===D))return;const o=e.state!=E;o&&e._transitionTo(E,b),e.runCount++;const r=j;j=e,z={parent:z,zone:this};try{e.type==D&&e.data&&!e.data.isPeriodic&&(e.cancelFn=void 0);try{return this._zoneDelegate.invokeTask(this,e,t,n)}catch(s){if(this._zoneDelegate.handleError(this,s))throw s}}finally{e.state!==v&&e.state!==Z&&(e.type==P||e.data&&e.data.isPeriodic?o&&e._transitionTo(b,E):(e.runCount=0,this._updateTaskCount(e,-1),o&&e._transitionTo(v,E,v))),z=z.parent,j=r}}scheduleTask(e){if(e.zone&&e.zone!==this){let t=this;for(;t;){if(t===e.zone)throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${e.zone.name}`);t=t.parent}}e._transitionTo(T,v);const t=[];e._zoneDelegates=t,e._zone=this;try{e=this._zoneDelegate.scheduleTask(this,e)}catch(n){throw e._transitionTo(Z,T,v),this._zoneDelegate.handleError(this,n),n}return e._zoneDelegates===t&&this._updateTaskCount(e,1),e.state==T&&e._transitionTo(b,T),e}scheduleMicroTask(e,t,n,o){return this.scheduleTask(new u(S,e,t,n,o,void 0))}scheduleMacroTask(e,t,n,o,r){return this.scheduleTask(new u(D,e,t,n,o,r))}scheduleEventTask(e,t,n,o,r){return this.scheduleTask(new u(P,e,t,n,o,r))}cancelTask(e){if(e.zone!=this)throw new Error("A task can only be cancelled in the zone of creation! (Creation: "+(e.zone||y).name+"; Execution: "+this.name+")");e._transitionTo(w,b,E);try{this._zoneDelegate.cancelTask(this,e)}catch(t){throw e._transitionTo(Z,w),this._zoneDelegate.handleError(this,t),t}return this._updateTaskCount(e,-1),e._transitionTo(v,w),e.runCount=0,e}_updateTaskCount(e,t){const n=e._zoneDelegates;-1==t&&(e._zoneDelegates=null);for(let o=0;o<n.length;o++)n[o]._updateTaskCount(e.type,t)}}i.__symbol__=s;const c={name:"",onHasTask:(e,t,n,o)=>e.hasTask(n,o),onScheduleTask:(e,t,n,o)=>e.scheduleTask(n,o),onInvokeTask:(e,t,n,o,r,s)=>e.invokeTask(n,o,r,s),onCancelTask:(e,t,n,o)=>e.cancelTask(n,o)};class l{constructor(e,t,n){this._taskCounts={microTask:0,macroTask:0,eventTask:0},this.zone=e,this._parentDelegate=t,this._forkZS=n&&(n&&n.onFork?n:t._forkZS),this._forkDlgt=n&&(n.onFork?t:t._forkDlgt),this._forkCurrZone=n&&(n.onFork?this.zone:t._forkCurrZone),this._interceptZS=n&&(n.onIntercept?n:t._interceptZS),this._interceptDlgt=n&&(n.onIntercept?t:t._interceptDlgt),this._interceptCurrZone=n&&(n.onIntercept?this.zone:t._interceptCurrZone),this._invokeZS=n&&(n.onInvoke?n:t._invokeZS),this._invokeDlgt=n&&(n.onInvoke?t:t._invokeDlgt),this._invokeCurrZone=n&&(n.onInvoke?this.zone:t._invokeCurrZone),this._handleErrorZS=n&&(n.onHandleError?n:t._handleErrorZS),this._handleErrorDlgt=n&&(n.onHandleError?t:t._handleErrorDlgt),this._handleErrorCurrZone=n&&(n.onHandleError?this.zone:t._handleErrorCurrZone),this._scheduleTaskZS=n&&(n.onScheduleTask?n:t._scheduleTaskZS),this._scheduleTaskDlgt=n&&(n.onScheduleTask?t:t._scheduleTaskDlgt),this._scheduleTaskCurrZone=n&&(n.onScheduleTask?this.zone:t._scheduleTaskCurrZone),this._invokeTaskZS=n&&(n.onInvokeTask?n:t._invokeTaskZS),this._invokeTaskDlgt=n&&(n.onInvokeTask?t:t._invokeTaskDlgt),this._invokeTaskCurrZone=n&&(n.onInvokeTask?this.zone:t._invokeTaskCurrZone),this._cancelTaskZS=n&&(n.onCancelTask?n:t._cancelTaskZS),this._cancelTaskDlgt=n&&(n.onCancelTask?t:t._cancelTaskDlgt),this._cancelTaskCurrZone=n&&(n.onCancelTask?this.zone:t._cancelTaskCurrZone),this._hasTaskZS=null,this._hasTaskDlgt=null,this._hasTaskDlgtOwner=null,this._hasTaskCurrZone=null;const o=n&&n.onHasTask;(o||t&&t._hasTaskZS)&&(this._hasTaskZS=o?n:c,this._hasTaskDlgt=t,this._hasTaskDlgtOwner=this,this._hasTaskCurrZone=e,n.onScheduleTask||(this._scheduleTaskZS=c,this._scheduleTaskDlgt=t,this._scheduleTaskCurrZone=this.zone),n.onInvokeTask||(this._invokeTaskZS=c,this._invokeTaskDlgt=t,this._invokeTaskCurrZone=this.zone),n.onCancelTask||(this._cancelTaskZS=c,this._cancelTaskDlgt=t,this._cancelTaskCurrZone=this.zone))}fork(e,t){return this._forkZS?this._forkZS.onFork(this._forkDlgt,this.zone,e,t):new i(e,t)}intercept(e,t,n){return this._interceptZS?this._interceptZS.onIntercept(this._interceptDlgt,this._interceptCurrZone,e,t,n):t}invoke(e,t,n,o,r){return this._invokeZS?this._invokeZS.onInvoke(this._invokeDlgt,this._invokeCurrZone,e,t,n,o,r):t.apply(n,o)}handleError(e,t){return!this._handleErrorZS||this._handleErrorZS.onHandleError(this._handleErrorDlgt,this._handleErrorCurrZone,e,t)}scheduleTask(e,t){let n=t;if(this._scheduleTaskZS)this._hasTaskZS&&n._zoneDelegates.push(this._hasTaskDlgtOwner),n=this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt,this._scheduleTaskCurrZone,e,t),n||(n=t);else if(t.scheduleFn)t.scheduleFn(t);else{if(t.type!=S)throw new Error("Task is missing scheduleFn.");k(t)}return n}invokeTask(e,t,n,o){return this._invokeTaskZS?this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt,this._invokeTaskCurrZone,e,t,n,o):t.callback.apply(n,o)}cancelTask(e,t){let n;if(this._cancelTaskZS)n=this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt,this._cancelTaskCurrZone,e,t);else{if(!t.cancelFn)throw Error("Task is not cancelable");n=t.cancelFn(t)}return n}hasTask(e,t){try{this._hasTaskZS&&this._hasTaskZS.onHasTask(this._hasTaskDlgt,this._hasTaskCurrZone,e,t)}catch(n){this.handleError(e,n)}}_updateTaskCount(e,t){const n=this._taskCounts,o=n[e],r=n[e]=o+t;if(r<0)throw new Error("More tasks executed then were scheduled.");0!=o&&0!=r||this.hasTask(this.zone,{microTask:n.microTask>0,macroTask:n.macroTask>0,eventTask:n.eventTask>0,change:e})}}class u{constructor(t,n,o,r,s,a){if(this._zone=null,this.runCount=0,this._zoneDelegates=null,this._state="notScheduled",this.type=t,this.source=n,this.data=r,this.scheduleFn=s,this.cancelFn=a,!o)throw new Error("callback is not defined");this.callback=o;const i=this;this.invoke=t===P&&r&&r.useG?u.invokeTask:function(){return u.invokeTask.call(e,i,this,arguments)}}static invokeTask(e,t,n){e||(e=this),I++;try{return e.runCount++,e.zone.runTask(e,t,n)}finally{1==I&&m(),I--}}get zone(){return this._zone}get state(){return this._state}cancelScheduleRequest(){this._transitionTo(v,T)}_transitionTo(e,t,n){if(this._state!==t&&this._state!==n)throw new Error(`${this.type} '${this.source}': can not transition to '${e}', expecting state '${t}'${n?" or '"+n+"'":""}, was '${this._state}'.`);this._state=e,e==v&&(this._zoneDelegates=null)}toString(){return this.data&&void 0!==this.data.handleId?this.data.handleId.toString():Object.prototype.toString.call(this)}toJSON(){return{type:this.type,state:this.state,source:this.source,zone:this.zone.name,runCount:this.runCount}}}const h=s("setTimeout"),p=s("Promise"),f=s("then");let d,g=[],_=!1;function k(t){if(0===I&&0===g.length)if(d||e[p]&&(d=e[p].resolve(0)),d){let e=d[f];e||(e=d.then),e.call(d,m)}else e[h](m,0);t&&g.push(t)}function m(){if(!_){for(_=!0;g.length;){const t=g;g=[];for(let n=0;n<t.length;n++){const o=t[n];try{o.zone.runTask(o,null,null)}catch(e){C.onUnhandledError(e)}}}C.microtaskDrainDone(),_=!1}}const y={name:"NO ZONE"},v="notScheduled",T="scheduling",b="scheduled",E="running",w="canceling",Z="unknown",S="microTask",D="macroTask",P="eventTask",O={},C={symbol:s,currentZoneFrame:()=>z,onUnhandledError:R,microtaskDrainDone:R,scheduleMicroTask:k,showUncaughtError:()=>!i[s("ignoreConsoleErrorUncaughtError")],patchEventTarget:()=>[],patchOnProperties:R,patchMethod:()=>R,bindArguments:()=>[],patchThen:()=>R,patchMacroTask:()=>R,patchEventPrototype:()=>R,isIEOrEdge:()=>!1,getGlobalObjects:()=>{},ObjectDefineProperty:()=>R,ObjectGetOwnPropertyDescriptor:()=>{},ObjectCreate:()=>{},ArraySlice:()=>[],patchClass:()=>R,wrapWithCurrentZone:()=>R,filterProperties:()=>[],attachOriginToPatched:()=>R,_redefineProperty:()=>R,patchCallbacks:()=>R};let z={parent:null,zone:new i(null,null)},j=null,I=0;function R(){}o("Zone","Zone"),e.Zone=i}("undefined"!=typeof window&&window||"undefined"!=typeof self&&self||global);const e=Object.getOwnPropertyDescriptor,t=Object.defineProperty,n=Object.getPrototypeOf,o=Object.create,r=Array.prototype.slice,s="addEventListener",a="removeEventListener",i=Zone.__symbol__(s),c=Zone.__symbol__(a),l="true",u="false",h=Zone.__symbol__("");function p(e,t){return Zone.current.wrap(e,t)}function f(e,t,n,o,r){return Zone.current.scheduleMacroTask(e,t,n,o,r)}const d=Zone.__symbol__,g="undefined"!=typeof window,_=g?window:void 0,k=g&&_||"object"==typeof self&&self||global,m=[null];function y(e,t){for(let n=e.length-1;n>=0;n--)"function"==typeof e[n]&&(e[n]=p(e[n],t+"_"+n));return e}function v(e){return!e||!1!==e.writable&&!("function"==typeof e.get&&void 0===e.set)}const T="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope,b=!("nw"in k)&&void 0!==k.process&&"[object process]"==={}.toString.call(k.process),E=!b&&!T&&!(!g||!_.HTMLElement),w=void 0!==k.process&&"[object process]"==={}.toString.call(k.process)&&!T&&!(!g||!_.HTMLElement),Z={},S=function(e){if(!(e=e||k.event))return;let t=Z[e.type];t||(t=Z[e.type]=d("ON_PROPERTY"+e.type));const n=this||e.target||k,o=n[t];let r;if(E&&n===_&&"error"===e.type){const t=e;r=o&&o.call(this,t.message,t.filename,t.lineno,t.colno,t.error),!0===r&&e.preventDefault()}else r=o&&o.apply(this,arguments),null==r||r||e.preventDefault();return r};function D(n,o,r){let s=e(n,o);if(!s&&r&&e(r,o)&&(s={enumerable:!0,configurable:!0}),!s||!s.configurable)return;const a=d("on"+o+"patched");if(n.hasOwnProperty(a)&&n[a])return;delete s.writable,delete s.value;const i=s.get,c=s.set,l=o.substr(2);let u=Z[l];u||(u=Z[l]=d("ON_PROPERTY"+l)),s.set=function(e){let t=this;t||n!==k||(t=k),t&&(t[u]&&t.removeEventListener(l,S),c&&c.apply(t,m),"function"==typeof e?(t[u]=e,t.addEventListener(l,S,!1)):t[u]=null)},s.get=function(){let e=this;if(e||n!==k||(e=k),!e)return null;const t=e[u];if(t)return t;if(i){let t=i&&i.call(this);if(t)return s.set.call(this,t),"function"==typeof e.removeAttribute&&e.removeAttribute(o),t}return null},t(n,o,s),n[a]=!0}function P(e,t,n){if(t)for(let o=0;o<t.length;o++)D(e,"on"+t[o],n);else{const t=[];for(const n in e)"on"==n.substr(0,2)&&t.push(n);for(let o=0;o<t.length;o++)D(e,t[o],n)}}const O=d("originalInstance");function C(e){const n=k[e];if(!n)return;k[d(e)]=n,k[e]=function(){const t=y(arguments,e);switch(t.length){case 0:this[O]=new n;break;case 1:this[O]=new n(t[0]);break;case 2:this[O]=new n(t[0],t[1]);break;case 3:this[O]=new n(t[0],t[1],t[2]);break;case 4:this[O]=new n(t[0],t[1],t[2],t[3]);break;default:throw new Error("Arg list too long.")}},I(k[e],n);const o=new n(function(){});let r;for(r in o)"XMLHttpRequest"===e&&"responseBlob"===r||function(n){"function"==typeof o[n]?k[e].prototype[n]=function(){return this[O][n].apply(this[O],arguments)}:t(k[e].prototype,n,{set:function(t){"function"==typeof t?(this[O][n]=p(t,e+"."+n),I(this[O][n],t)):this[O][n]=t},get:function(){return this[O][n]}})}(r);for(r in n)"prototype"!==r&&n.hasOwnProperty(r)&&(k[e][r]=n[r])}function z(t,o,r){let s=t;for(;s&&!s.hasOwnProperty(o);)s=n(s);!s&&t[o]&&(s=t);const a=d(o);let i=null;if(s&&(!(i=s[a])||!s.hasOwnProperty(a))&&(i=s[a]=s[o],v(s&&e(s,o)))){const e=r(i,a,o);s[o]=function(){return e(this,arguments)},I(s[o],i)}return i}function j(e,t,n){let o=null;function r(e){const t=e.data;return t.args[t.cbIdx]=function(){e.invoke.apply(this,arguments)},o.apply(t.target,t.args),e}o=z(e,t,e=>function(t,o){const s=n(t,o);return s.cbIdx>=0&&"function"==typeof o[s.cbIdx]?f(s.name,o[s.cbIdx],s,r):e.apply(t,o)})}function I(e,t){e[d("OriginalDelegate")]=t}let R=!1,M=!1;function N(){try{const e=_.navigator.userAgent;if(-1!==e.indexOf("MSIE ")||-1!==e.indexOf("Trident/"))return!0}catch(e){}return!1}function x(){if(R)return M;R=!0;try{const e=_.navigator.userAgent;-1===e.indexOf("MSIE ")&&-1===e.indexOf("Trident/")&&-1===e.indexOf("Edge/")||(M=!0)}catch(e){}return M}Zone.__load_patch("ZoneAwarePromise",(e,t,n)=>{const o=Object.getOwnPropertyDescriptor,r=Object.defineProperty,s=n.symbol,a=[],i=!0===e[s("DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION")],c=s("Promise"),l=s("then");n.onUnhandledError=e=>{if(n.showUncaughtError()){const t=e&&e.rejection;t?console.error("Unhandled Promise rejection:",t instanceof Error?t.message:t,"; Zone:",e.zone.name,"; Task:",e.task&&e.task.source,"; Value:",t,t instanceof Error?t.stack:void 0):console.error(e)}},n.microtaskDrainDone=()=>{for(;a.length;){const t=a.shift();try{t.zone.runGuarded(()=>{if(t.throwOriginal)throw t.rejection;throw t})}catch(e){h(e)}}};const u=s("unhandledPromiseRejectionHandler");function h(e){n.onUnhandledError(e);try{const n=t[u];"function"==typeof n&&n.call(this,e)}catch(o){}}function p(e){return e&&e.then}function f(e){return e}function d(e){return C.reject(e)}const g=s("state"),_=s("value"),k=s("finally"),m=s("parentPromiseValue"),y=s("parentPromiseState"),v=null,T=!0,b=!1;function E(e,t){return n=>{try{Z(e,t,n)}catch(o){Z(e,!1,o)}}}const w=s("currentTaskTrace");function Z(e,o,s){const c=function(){let e=!1;return function(t){return function(){e||(e=!0,t.apply(null,arguments))}}}();if(e===s)throw new TypeError("Promise resolved with itself");if(e[g]===v){let h=null;try{"object"!=typeof s&&"function"!=typeof s||(h=s&&s.then)}catch(u){return c(()=>{Z(e,!1,u)})(),e}if(o!==b&&s instanceof C&&s.hasOwnProperty(g)&&s.hasOwnProperty(_)&&s[g]!==v)D(s),Z(e,s[g],s[_]);else if(o!==b&&"function"==typeof h)try{h.call(s,c(E(e,o)),c(E(e,!1)))}catch(u){c(()=>{Z(e,!1,u)})()}else{e[g]=o;const c=e[_];if(e[_]=s,e[k]===k&&o===T&&(e[g]=e[y],e[_]=e[m]),o===b&&s instanceof Error){const e=t.currentTask&&t.currentTask.data&&t.currentTask.data.__creationTrace__;e&&r(s,w,{configurable:!0,enumerable:!1,writable:!0,value:e})}for(let t=0;t<c.length;)P(e,c[t++],c[t++],c[t++],c[t++]);if(0==c.length&&o==b){e[g]=0;let o=s;try{throw new Error("Uncaught (in promise): "+((l=s)&&l.toString===Object.prototype.toString?(l.constructor&&l.constructor.name||"")+": "+JSON.stringify(l):l?l.toString():Object.prototype.toString.call(l))+(s&&s.stack?"\n"+s.stack:""))}catch(u){o=u}i&&(o.throwOriginal=!0),o.rejection=s,o.promise=e,o.zone=t.current,o.task=t.currentTask,a.push(o),n.scheduleMicroTask()}}}var l;return e}const S=s("rejectionHandledHandler");function D(e){if(0===e[g]){try{const n=t[S];n&&"function"==typeof n&&n.call(this,{rejection:e[_],promise:e})}catch(n){}e[g]=b;for(let t=0;t<a.length;t++)e===a[t].promise&&a.splice(t,1)}}function P(e,t,n,o,r){D(e);const s=e[g],a=s?"function"==typeof o?o:f:"function"==typeof r?r:d;t.scheduleMicroTask("Promise.then",()=>{try{const o=e[_],r=!!n&&k===n[k];r&&(n[m]=o,n[y]=s);const i=t.run(a,void 0,r&&a!==d&&a!==f?[]:[o]);Z(n,!0,i)}catch(o){Z(n,!1,o)}},n)}const O=function(){};class C{static toString(){return"function ZoneAwarePromise() { [native code] }"}static resolve(e){return Z(new this(null),T,e)}static reject(e){return Z(new this(null),b,e)}static race(e){let t,n,o=new this((e,o)=>{t=e,n=o});function r(e){t(e)}function s(e){n(e)}for(let a of e)p(a)||(a=this.resolve(a)),a.then(r,s);return o}static all(e){return C.allWithCallback(e)}static allSettled(e){return(this&&this.prototype instanceof C?this:C).allWithCallback(e,{thenCallback:e=>({status:"fulfilled",value:e}),errorCallback:e=>({status:"rejected",reason:e})})}static allWithCallback(e,t){let n,o,r=new this((e,t)=>{n=e,o=t}),s=2,a=0;const i=[];for(let l of e){p(l)||(l=this.resolve(l));const e=a;try{l.then(o=>{i[e]=t?t.thenCallback(o):o,s--,0===s&&n(i)},r=>{t?(i[e]=t.errorCallback(r),s--,0===s&&n(i)):o(r)})}catch(c){o(c)}s++,a++}return s-=2,0===s&&n(i),r}constructor(e){const t=this;if(!(t instanceof C))throw new Error("Must be an instanceof Promise.");t[g]=v,t[_]=[];try{e&&e(E(t,T),E(t,b))}catch(n){Z(t,!1,n)}}get[Symbol.toStringTag](){return"Promise"}get[Symbol.species](){return C}then(e,n){let o=this.constructor[Symbol.species];o&&"function"==typeof o||(o=this.constructor||C);const r=new o(O),s=t.current;return this[g]==v?this[_].push(s,r,e,n):P(this,s,r,e,n),r}catch(e){return this.then(null,e)}finally(e){let n=this.constructor[Symbol.species];n&&"function"==typeof n||(n=C);const o=new n(O);o[k]=k;const r=t.current;return this[g]==v?this[_].push(r,o,e,e):P(this,r,o,e,e),o}}C.resolve=C.resolve,C.reject=C.reject,C.race=C.race,C.all=C.all;const j=e[c]=e.Promise;e.Promise=C;const I=s("thenPatched");function R(e){const t=e.prototype,n=o(t,"then");if(n&&(!1===n.writable||!n.configurable))return;const r=t.then;t[l]=r,e.prototype.then=function(e,t){return new C((e,t)=>{r.call(this,e,t)}).then(e,t)},e[I]=!0}return n.patchThen=R,j&&(R(j),z(e,"fetch",e=>{return t=e,function(e,n){let o=t.apply(e,n);if(o instanceof C)return o;let r=o.constructor;return r[I]||R(r),o};var t})),Promise[t.__symbol__("uncaughtPromiseErrors")]=a,C}),Zone.__load_patch("toString",e=>{const t=Function.prototype.toString,n=d("OriginalDelegate"),o=d("Promise"),r=d("Error"),s=function(){if("function"==typeof this){const s=this[n];if(s)return"function"==typeof s?t.call(s):Object.prototype.toString.call(s);if(this===Promise){const n=e[o];if(n)return t.call(n)}if(this===Error){const n=e[r];if(n)return t.call(n)}}return t.call(this)};s[n]=t,Function.prototype.toString=s;const a=Object.prototype.toString;Object.prototype.toString=function(){return"function"==typeof Promise&&this instanceof Promise?"[object Promise]":a.call(this)}});let L=!1;if("undefined"!=typeof window)try{const e=Object.defineProperty({},"passive",{get:function(){L=!0}});window.addEventListener("test",e,e),window.removeEventListener("test",e,e)}catch(he){L=!1}const A={useG:!0},H={},F={},q=new RegExp("^"+h+"(\\w+)(true|false)$"),G=d("propagationStopped");function B(e,t){const n=(t?t(e):e)+u,o=(t?t(e):e)+l,r=h+n,s=h+o;H[e]={},H[e].false=r,H[e].true=s}function W(e,t,o){const r=o&&o.add||s,i=o&&o.rm||a,c=o&&o.listeners||"eventListeners",p=o&&o.rmAll||"removeAllListeners",f=d(r),g="."+r+":",_=function(e,t,n){if(e.isRemoved)return;const o=e.callback;"object"==typeof o&&o.handleEvent&&(e.callback=e=>o.handleEvent(e),e.originalDelegate=o),e.invoke(e,t,[n]);const r=e.options;r&&"object"==typeof r&&r.once&&t[i].call(t,n.type,e.originalDelegate?e.originalDelegate:e.callback,r)},k=function(t){if(!(t=t||e.event))return;const n=this||t.target||e,o=n[H[t.type].false];if(o)if(1===o.length)_(o[0],n,t);else{const e=o.slice();for(let o=0;o<e.length&&(!t||!0!==t[G]);o++)_(e[o],n,t)}},m=function(t){if(!(t=t||e.event))return;const n=this||t.target||e,o=n[H[t.type].true];if(o)if(1===o.length)_(o[0],n,t);else{const e=o.slice();for(let o=0;o<e.length&&(!t||!0!==t[G]);o++)_(e[o],n,t)}};function y(t,o){if(!t)return!1;let s=!0;o&&void 0!==o.useG&&(s=o.useG);const a=o&&o.vh;let _=!0;o&&void 0!==o.chkDup&&(_=o.chkDup);let y=!1;o&&void 0!==o.rt&&(y=o.rt);let v=t;for(;v&&!v.hasOwnProperty(r);)v=n(v);if(!v&&t[r]&&(v=t),!v)return!1;if(v[f])return!1;const T=o&&o.eventNameToString,E={},w=v[f]=v[r],Z=v[d(i)]=v[i],S=v[d(c)]=v[c],D=v[d(p)]=v[p];let P;function O(e,t){return!L&&"object"==typeof e&&e?!!e.capture:L&&t?"boolean"==typeof e?{capture:e,passive:!0}:e?"object"==typeof e&&!1!==e.passive?Object.assign(Object.assign({},e),{passive:!0}):e:{passive:!0}:e}o&&o.prepend&&(P=v[d(o.prepend)]=v[o.prepend]);const C=s?function(e){if(!E.isExisting)return w.call(E.target,E.eventName,E.capture?m:k,E.options)}:function(e){return w.call(E.target,E.eventName,e.invoke,E.options)},z=s?function(e){if(!e.isRemoved){const t=H[e.eventName];let n;t&&(n=t[e.capture?l:u]);const o=n&&e.target[n];if(o)for(let r=0;r<o.length;r++)if(o[r]===e){o.splice(r,1),e.isRemoved=!0,0===o.length&&(e.allRemoved=!0,e.target[n]=null);break}}if(e.allRemoved)return Z.call(e.target,e.eventName,e.capture?m:k,e.options)}:function(e){return Z.call(e.target,e.eventName,e.invoke,e.options)},j=o&&o.diff?o.diff:function(e,t){const n=typeof t;return"function"===n&&e.callback===t||"object"===n&&e.originalDelegate===t},R=Zone[d("UNPATCHED_EVENTS")],M=e[d("PASSIVE_EVENTS")],N=function(t,n,r,i,c=!1,h=!1){return function(){const p=this||e;let f=arguments[0];o&&o.transferEventName&&(f=o.transferEventName(f));let d=arguments[1];if(!d)return t.apply(this,arguments);if(b&&"uncaughtException"===f)return t.apply(this,arguments);let g=!1;if("function"!=typeof d){if(!d.handleEvent)return t.apply(this,arguments);g=!0}if(a&&!a(t,d,p,arguments))return;const k=L&&!!M&&-1!==M.indexOf(f),m=O(arguments[2],k);if(R)for(let e=0;e<R.length;e++)if(f===R[e])return k?t.call(p,f,d,m):t.apply(this,arguments);const y=!!m&&("boolean"==typeof m||m.capture),v=!(!m||"object"!=typeof m)&&m.once,w=Zone.current;let Z=H[f];Z||(B(f,T),Z=H[f]);const S=Z[y?l:u];let D,P=p[S],C=!1;if(P){if(C=!0,_)for(let e=0;e<P.length;e++)if(j(P[e],d))return}else P=p[S]=[];const z=p.constructor.name,I=F[z];I&&(D=I[f]),D||(D=z+n+(T?T(f):f)),E.options=m,v&&(E.options.once=!1),E.target=p,E.capture=y,E.eventName=f,E.isExisting=C;const N=s?A:void 0;N&&(N.taskData=E);const x=w.scheduleEventTask(D,d,N,r,i);return E.target=null,N&&(N.taskData=null),v&&(m.once=!0),(L||"boolean"!=typeof x.options)&&(x.options=m),x.target=p,x.capture=y,x.eventName=f,g&&(x.originalDelegate=d),h?P.unshift(x):P.push(x),c?p:void 0}};return v[r]=N(w,g,C,z,y),P&&(v.prependListener=N(P,".prependListener:",function(e){return P.call(E.target,E.eventName,e.invoke,E.options)},z,y,!0)),v[i]=function(){const t=this||e;let n=arguments[0];o&&o.transferEventName&&(n=o.transferEventName(n));const r=arguments[2],s=!!r&&("boolean"==typeof r||r.capture),i=arguments[1];if(!i)return Z.apply(this,arguments);if(a&&!a(Z,i,t,arguments))return;const c=H[n];let p;c&&(p=c[s?l:u]);const f=p&&t[p];if(f)for(let e=0;e<f.length;e++){const o=f[e];if(j(o,i))return f.splice(e,1),o.isRemoved=!0,0===f.length&&(o.allRemoved=!0,t[p]=null,"string"==typeof n)&&(t[h+"ON_PROPERTY"+n]=null),o.zone.cancelTask(o),y?t:void 0}return Z.apply(this,arguments)},v[c]=function(){const t=this||e;let n=arguments[0];o&&o.transferEventName&&(n=o.transferEventName(n));const r=[],s=U(t,T?T(n):n);for(let e=0;e<s.length;e++){const t=s[e];r.push(t.originalDelegate?t.originalDelegate:t.callback)}return r},v[p]=function(){const t=this||e;let n=arguments[0];if(n){o&&o.transferEventName&&(n=o.transferEventName(n));const e=H[n];if(e){const o=t[e.false],r=t[e.true];if(o){const e=o.slice();for(let t=0;t<e.length;t++){const o=e[t];this[i].call(this,n,o.originalDelegate?o.originalDelegate:o.callback,o.options)}}if(r){const e=r.slice();for(let t=0;t<e.length;t++){const o=e[t];this[i].call(this,n,o.originalDelegate?o.originalDelegate:o.callback,o.options)}}}}else{const e=Object.keys(t);for(let t=0;t<e.length;t++){const n=q.exec(e[t]);let o=n&&n[1];o&&"removeListener"!==o&&this[p].call(this,o)}this[p].call(this,"removeListener")}if(y)return this},I(v[r],w),I(v[i],Z),D&&I(v[p],D),S&&I(v[c],S),!0}let v=[];for(let n=0;n<t.length;n++)v[n]=y(t[n],o);return v}function U(e,t){if(!t){const n=[];for(let o in e){const r=q.exec(o);let s=r&&r[1];if(s&&(!t||s===t)){const t=e[o];if(t)for(let e=0;e<t.length;e++)n.push(t[e])}}return n}let n=H[t];n||(B(t),n=H[t]);const o=e[n.false],r=e[n.true];return o?r?o.concat(r):o.slice():r?r.slice():[]}function V(e,t){const n=e.Event;n&&n.prototype&&t.patchMethod(n.prototype,"stopImmediatePropagation",e=>function(t,n){t[G]=!0,e&&e.apply(t,n)})}function $(e,t,n,o,r){const s=Zone.__symbol__(o);if(t[s])return;const a=t[s]=t[o];t[o]=function(s,i,c){return i&&i.prototype&&r.forEach(function(t){const r=`${n}.${o}::`+t,s=i.prototype;if(s.hasOwnProperty(t)){const n=e.ObjectGetOwnPropertyDescriptor(s,t);n&&n.value?(n.value=e.wrapWithCurrentZone(n.value,r),e._redefineProperty(i.prototype,t,n)):s[t]&&(s[t]=e.wrapWithCurrentZone(s[t],r))}else s[t]&&(s[t]=e.wrapWithCurrentZone(s[t],r))}),a.call(t,s,i,c)},e.attachOriginToPatched(t[o],a)}const X=["absolutedeviceorientation","afterinput","afterprint","appinstalled","beforeinstallprompt","beforeprint","beforeunload","devicelight","devicemotion","deviceorientation","deviceorientationabsolute","deviceproximity","hashchange","languagechange","message","mozbeforepaint","offline","online","paint","pageshow","pagehide","popstate","rejectionhandled","storage","unhandledrejection","unload","userproximity","vrdisplayconnected","vrdisplaydisconnected","vrdisplaypresentchange"],Y=["encrypted","waitingforkey","msneedkey","mozinterruptbegin","mozinterruptend"],J=["load"],K=["blur","error","focus","load","resize","scroll","messageerror"],Q=["bounce","finish","start"],ee=["loadstart","progress","abort","error","load","progress","timeout","loadend","readystatechange"],te=["upgradeneeded","complete","abort","success","error","blocked","versionchange","close"],ne=["close","error","open","message"],oe=["error","message"],re=["abort","animationcancel","animationend","animationiteration","auxclick","beforeinput","blur","cancel","canplay","canplaythrough","change","compositionstart","compositionupdate","compositionend","cuechange","click","close","contextmenu","curechange","dblclick","drag","dragend","dragenter","dragexit","dragleave","dragover","drop","durationchange","emptied","ended","error","focus","focusin","focusout","gotpointercapture","input","invalid","keydown","keypress","keyup","load","loadstart","loadeddata","loadedmetadata","lostpointercapture","mousedown","mouseenter","mouseleave","mousemove","mouseout","mouseover","mouseup","mousewheel","orientationchange","pause","play","playing","pointercancel","pointerdown","pointerenter","pointerleave","pointerlockchange","mozpointerlockchange","webkitpointerlockerchange","pointerlockerror","mozpointerlockerror","webkitpointerlockerror","pointermove","pointout","pointerover","pointerup","progress","ratechange","reset","resize","scroll","seeked","seeking","select","selectionchange","selectstart","show","sort","stalled","submit","suspend","timeupdate","volumechange","touchcancel","touchmove","touchstart","touchend","transitioncancel","transitionend","waiting","wheel"].concat(["webglcontextrestored","webglcontextlost","webglcontextcreationerror"],["autocomplete","autocompleteerror"],["toggle"],["afterscriptexecute","beforescriptexecute","DOMContentLoaded","freeze","fullscreenchange","mozfullscreenchange","webkitfullscreenchange","msfullscreenchange","fullscreenerror","mozfullscreenerror","webkitfullscreenerror","msfullscreenerror","readystatechange","visibilitychange","resume"],X,["beforecopy","beforecut","beforepaste","copy","cut","paste","dragstart","loadend","animationstart","search","transitionrun","transitionstart","webkitanimationend","webkitanimationiteration","webkitanimationstart","webkittransitionend"],["activate","afterupdate","ariarequest","beforeactivate","beforedeactivate","beforeeditfocus","beforeupdate","cellchange","controlselect","dataavailable","datasetchanged","datasetcomplete","errorupdate","filterchange","layoutcomplete","losecapture","move","moveend","movestart","propertychange","resizeend","resizestart","rowenter","rowexit","rowsdelete","rowsinserted","command","compassneedscalibration","deactivate","help","mscontentzoom","msmanipulationstatechanged","msgesturechange","msgesturedoubletap","msgestureend","msgesturehold","msgesturestart","msgesturetap","msgotpointercapture","msinertiastart","mslostpointercapture","mspointercancel","mspointerdown","mspointerenter","mspointerhover","mspointerleave","mspointermove","mspointerout","mspointerover","mspointerup","pointerout","mssitemodejumplistitemremoved","msthumbnailclick","stop","storagecommit"]);function se(e,t,n){if(!n||0===n.length)return t;const o=n.filter(t=>t.target===e);if(!o||0===o.length)return t;const r=o[0].ignoreProperties;return t.filter(e=>-1===r.indexOf(e))}function ae(e,t,n,o){e&&P(e,se(e,t,n),o)}function ie(e,t){if(b&&!w)return;if(Zone[e.symbol("patchEvents")])return;const o="undefined"!=typeof WebSocket,r=t.__Zone_ignore_on_properties;if(E){const e=window,t=N()?[{target:e,ignoreProperties:["error"]}]:[];ae(e,re.concat(["messageerror"]),r?r.concat(t):r,n(e)),ae(Document.prototype,re,r),void 0!==e.SVGElement&&ae(e.SVGElement.prototype,re,r),ae(Element.prototype,re,r),ae(HTMLElement.prototype,re,r),ae(HTMLMediaElement.prototype,Y,r),ae(HTMLFrameSetElement.prototype,X.concat(K),r),ae(HTMLBodyElement.prototype,X.concat(K),r),ae(HTMLFrameElement.prototype,J,r),ae(HTMLIFrameElement.prototype,J,r);const o=e.HTMLMarqueeElement;o&&ae(o.prototype,Q,r);const s=e.Worker;s&&ae(s.prototype,oe,r)}const s=t.XMLHttpRequest;s&&ae(s.prototype,ee,r);const a=t.XMLHttpRequestEventTarget;a&&ae(a&&a.prototype,ee,r),"undefined"!=typeof IDBIndex&&(ae(IDBIndex.prototype,te,r),ae(IDBRequest.prototype,te,r),ae(IDBOpenDBRequest.prototype,te,r),ae(IDBDatabase.prototype,te,r),ae(IDBTransaction.prototype,te,r),ae(IDBCursor.prototype,te,r)),o&&ae(WebSocket.prototype,ne,r)}Zone.__load_patch("util",(n,i,c)=>{c.patchOnProperties=P,c.patchMethod=z,c.bindArguments=y,c.patchMacroTask=j;const f=i.__symbol__("BLACK_LISTED_EVENTS"),d=i.__symbol__("UNPATCHED_EVENTS");n[d]&&(n[f]=n[d]),n[f]&&(i[f]=i[d]=n[f]),c.patchEventPrototype=V,c.patchEventTarget=W,c.isIEOrEdge=x,c.ObjectDefineProperty=t,c.ObjectGetOwnPropertyDescriptor=e,c.ObjectCreate=o,c.ArraySlice=r,c.patchClass=C,c.wrapWithCurrentZone=p,c.filterProperties=se,c.attachOriginToPatched=I,c._redefineProperty=Object.defineProperty,c.patchCallbacks=$,c.getGlobalObjects=()=>({globalSources:F,zoneSymbolEventNames:H,eventNames:re,isBrowser:E,isMix:w,isNode:b,TRUE_STR:l,FALSE_STR:u,ZONE_SYMBOL_PREFIX:h,ADD_EVENT_LISTENER_STR:s,REMOVE_EVENT_LISTENER_STR:a})});const ce=d("zoneTask");function le(e,t,n,o){let r=null,s=null;n+=o;const a={};function i(t){const n=t.data;return n.args[0]=function(){return t.invoke.apply(this,arguments)},n.handleId=r.apply(e,n.args),t}function c(t){return s.call(e,t.data.handleId)}r=z(e,t+=o,n=>function(r,s){if("function"==typeof s[0]){const e={isPeriodic:"Interval"===o,delay:"Timeout"===o||"Interval"===o?s[1]||0:void 0,args:s},n=s[0];s[0]=function(){try{return n.apply(this,arguments)}finally{e.isPeriodic||("number"==typeof e.handleId?delete a[e.handleId]:e.handleId&&(e.handleId[ce]=null))}};const r=f(t,s[0],e,i,c);if(!r)return r;const l=r.data.handleId;return"number"==typeof l?a[l]=r:l&&(l[ce]=r),l&&l.ref&&l.unref&&"function"==typeof l.ref&&"function"==typeof l.unref&&(r.ref=l.ref.bind(l),r.unref=l.unref.bind(l)),"number"==typeof l||l?l:r}return n.apply(e,s)}),s=z(e,n,t=>function(n,o){const r=o[0];let s;"number"==typeof r?s=a[r]:(s=r&&r[ce],s||(s=r)),s&&"string"==typeof s.type?"notScheduled"!==s.state&&(s.cancelFn&&s.data.isPeriodic||0===s.runCount)&&("number"==typeof r?delete a[r]:r&&(r[ce]=null),s.zone.cancelTask(s)):t.apply(e,o)})}function ue(e,t){if(Zone[t.symbol("patchEventTarget")])return;const{eventNames:n,zoneSymbolEventNames:o,TRUE_STR:r,FALSE_STR:s,ZONE_SYMBOL_PREFIX:a}=t.getGlobalObjects();for(let c=0;c<n.length;c++){const e=n[c],t=a+(e+s),i=a+(e+r);o[e]={},o[e][s]=t,o[e][r]=i}const i=e.EventTarget;return i&&i.prototype?(t.patchEventTarget(e,[i&&i.prototype]),!0):void 0}Zone.__load_patch("legacy",e=>{const t=e[Zone.__symbol__("legacyPatch")];t&&t()}),Zone.__load_patch("queueMicrotask",(e,t,n)=>{n.patchMethod(e,"queueMicrotask",e=>function(e,n){t.current.scheduleMicroTask("queueMicrotask",n[0])})}),Zone.__load_patch("timers",e=>{const t="set",n="clear";le(e,t,n,"Timeout"),le(e,t,n,"Interval"),le(e,t,n,"Immediate")}),Zone.__load_patch("requestAnimationFrame",e=>{le(e,"request","cancel","AnimationFrame"),le(e,"mozRequest","mozCancel","AnimationFrame"),le(e,"webkitRequest","webkitCancel","AnimationFrame")}),Zone.__load_patch("blocking",(e,t)=>{const n=["alert","prompt","confirm"];for(let o=0;o<n.length;o++)z(e,n[o],(n,o,r)=>function(o,s){return t.current.run(n,e,s,r)})}),Zone.__load_patch("EventTarget",(e,t,n)=>{!function(e,t){t.patchEventPrototype(e,t)}(e,n),ue(e,n);const o=e.XMLHttpRequestEventTarget;o&&o.prototype&&n.patchEventTarget(e,[o.prototype])}),Zone.__load_patch("MutationObserver",(e,t,n)=>{C("MutationObserver"),C("WebKitMutationObserver")}),Zone.__load_patch("IntersectionObserver",(e,t,n)=>{C("IntersectionObserver")}),Zone.__load_patch("FileReader",(e,t,n)=>{C("FileReader")}),Zone.__load_patch("on_property",(e,t,n)=>{ie(n,e)}),Zone.__load_patch("customElements",(e,t,n)=>{!function(e,t){const{isBrowser:n,isMix:o}=t.getGlobalObjects();(n||o)&&e.customElements&&"customElements"in e&&t.patchCallbacks(t,e.customElements,"customElements","define",["connectedCallback","disconnectedCallback","adoptedCallback","attributeChangedCallback"])}(e,n)}),Zone.__load_patch("XHR",(e,t)=>{!function(e){const u=e.XMLHttpRequest;if(!u)return;const h=u.prototype;let p=h[i],g=h[c];if(!p){const t=e.XMLHttpRequestEventTarget;if(t){const e=t.prototype;p=e[i],g=e[c]}}const _="readystatechange",k="scheduled";function m(e){const o=e.data,a=o.target;a[s]=!1,a[l]=!1;const u=a[r];p||(p=a[i],g=a[c]),u&&g.call(a,_,u);const h=a[r]=()=>{if(a.readyState===a.DONE)if(!o.aborted&&a[s]&&e.state===k){const n=a[t.__symbol__("loadfalse")];if(0!==a.status&&n&&n.length>0){const r=e.invoke;e.invoke=function(){const n=a[t.__symbol__("loadfalse")];for(let t=0;t<n.length;t++)n[t]===e&&n.splice(t,1);o.aborted||e.state!==k||r.call(e)},n.push(e)}else e.invoke()}else o.aborted||!1!==a[s]||(a[l]=!0)};return p.call(a,_,h),a[n]||(a[n]=e),w.apply(a,o.args),a[s]=!0,e}function y(){}function v(e){const t=e.data;return t.aborted=!0,Z.apply(t.target,t.args)}const T=z(h,"open",()=>function(e,t){return e[o]=0==t[2],e[a]=t[1],T.apply(e,t)}),b=d("fetchTaskAborting"),E=d("fetchTaskScheduling"),w=z(h,"send",()=>function(e,n){if(!0===t.current[E])return w.apply(e,n);if(e[o])return w.apply(e,n);{const t={target:e,url:e[a],isPeriodic:!1,args:n,aborted:!1},o=f("XMLHttpRequest.send",y,t,m,v);e&&!0===e[l]&&!t.aborted&&o.state===k&&o.invoke()}}),Z=z(h,"abort",()=>function(e,o){const r=e[n];if(r&&"string"==typeof r.type){if(null==r.cancelFn||r.data&&r.data.aborted)return;r.zone.cancelTask(r)}else if(!0===t.current[b])return Z.apply(e,o)})}(e);const n=d("xhrTask"),o=d("xhrSync"),r=d("xhrListener"),s=d("xhrScheduled"),a=d("xhrURL"),l=d("xhrErrorBeforeScheduled")}),Zone.__load_patch("geolocation",t=>{t.navigator&&t.navigator.geolocation&&function(t,n){const o=t.constructor.name;for(let r=0;r<n.length;r++){const s=n[r],a=t[s];if(a){if(!v(e(t,s)))continue;t[s]=(e=>{const t=function(){return e.apply(this,y(arguments,o+"."+s))};return I(t,e),t})(a)}}}(t.navigator.geolocation,["getCurrentPosition","watchPosition"])}),Zone.__load_patch("PromiseRejectionEvent",(e,t)=>{function n(t){return function(n){U(e,t).forEach(o=>{const r=e.PromiseRejectionEvent;if(r){const e=new r(t,{promise:n.promise,reason:n.rejection});o.invoke(e)}})}}e.PromiseRejectionEvent&&(t[d("unhandledPromiseRejectionHandler")]=n("unhandledrejection"),t[d("rejectionHandledHandler")]=n("rejectionhandled"))})},561:(e,t,n)=>{"use strict";n(167)}},e=>{"use strict";e(e.s=561)}]);(self.webpackChunkpoc_ng_elements=self.webpackChunkpoc_ng_elements||[]).push([[179],{516:(e,t,n)=>{"use strict";function i(e){return"function"==typeof e}let s=!1;const o={Promise:void 0,set useDeprecatedSynchronousErrorHandling(e){if(e){const e=new Error;console.warn("DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n"+e.stack)}else s&&console.log("RxJS: Back to a better error behavior. Thank you. <3");s=e},get useDeprecatedSynchronousErrorHandling(){return s}};function r(e){setTimeout(()=>{throw e},0)}const a={closed:!0,next(e){},error(e){if(o.useDeprecatedSynchronousErrorHandling)throw e;r(e)},complete(){}},l=(()=>Array.isArray||(e=>e&&"number"==typeof e.length))();function c(e){return null!==e&&"object"==typeof e}const u=(()=>{function e(e){return Error.call(this),this.message=e?`${e.length} errors occurred during unsubscription:\n${e.map((e,t)=>`${t+1}) ${e.toString()}`).join("\n  ")}`:"",this.name="UnsubscriptionError",this.errors=e,this}return e.prototype=Object.create(Error.prototype),e})();let h=(()=>{class e{constructor(e){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,e&&(this._ctorUnsubscribe=!0,this._unsubscribe=e)}unsubscribe(){let t;if(this.closed)return;let{_parentOrParents:n,_ctorUnsubscribe:s,_unsubscribe:o,_subscriptions:r}=this;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,n instanceof e)n.remove(this);else if(null!==n)for(let e=0;e<n.length;++e)n[e].remove(this);if(i(o)){s&&(this._unsubscribe=void 0);try{o.call(this)}catch(a){t=a instanceof u?d(a.errors):[a]}}if(l(r)){let e=-1,n=r.length;for(;++e<n;){const n=r[e];if(c(n))try{n.unsubscribe()}catch(a){t=t||[],a instanceof u?t=t.concat(d(a.errors)):t.push(a)}}}if(t)throw new u(t)}add(t){let n=t;if(!t)return e.EMPTY;switch(typeof t){case"function":n=new e(t);case"object":if(n===this||n.closed||"function"!=typeof n.unsubscribe)return n;if(this.closed)return n.unsubscribe(),n;if(!(n instanceof e)){const t=n;n=new e,n._subscriptions=[t]}break;default:throw new Error("unrecognized teardown "+t+" added to Subscription.")}let{_parentOrParents:i}=n;if(null===i)n._parentOrParents=this;else if(i instanceof e){if(i===this)return n;n._parentOrParents=[i,this]}else{if(-1!==i.indexOf(this))return n;i.push(this)}const s=this._subscriptions;return null===s?this._subscriptions=[n]:s.push(n),n}remove(e){const t=this._subscriptions;if(t){const n=t.indexOf(e);-1!==n&&t.splice(n,1)}}}return e.EMPTY=function(e){return e.closed=!0,e}(new e),e})();function d(e){return e.reduce((e,t)=>e.concat(t instanceof u?t.errors:t),[])}const p=(()=>"function"==typeof Symbol?Symbol("rxSubscriber"):"@@rxSubscriber_"+Math.random())();class f extends h{constructor(e,t,n){switch(super(),this.syncErrorValue=null,this.syncErrorThrown=!1,this.syncErrorThrowable=!1,this.isStopped=!1,arguments.length){case 0:this.destination=a;break;case 1:if(!e){this.destination=a;break}if("object"==typeof e){e instanceof f?(this.syncErrorThrowable=e.syncErrorThrowable,this.destination=e,e.add(this)):(this.syncErrorThrowable=!0,this.destination=new g(this,e));break}default:this.syncErrorThrowable=!0,this.destination=new g(this,e,t,n)}}[p](){return this}static create(e,t,n){const i=new f(e,t,n);return i.syncErrorThrowable=!1,i}next(e){this.isStopped||this._next(e)}error(e){this.isStopped||(this.isStopped=!0,this._error(e))}complete(){this.isStopped||(this.isStopped=!0,this._complete())}unsubscribe(){this.closed||(this.isStopped=!0,super.unsubscribe())}_next(e){this.destination.next(e)}_error(e){this.destination.error(e),this.unsubscribe()}_complete(){this.destination.complete(),this.unsubscribe()}_unsubscribeAndRecycle(){const{_parentOrParents:e}=this;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=e,this}}class g extends f{constructor(e,t,n,s){let o;super(),this._parentSubscriber=e;let r=this;i(t)?o=t:t&&(o=t.next,n=t.error,s=t.complete,t!==a&&(r=Object.create(t),i(r.unsubscribe)&&this.add(r.unsubscribe.bind(r)),r.unsubscribe=this.unsubscribe.bind(this))),this._context=r,this._next=o,this._error=n,this._complete=s}next(e){if(!this.isStopped&&this._next){const{_parentSubscriber:t}=this;o.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?this.__tryOrSetError(t,this._next,e)&&this.unsubscribe():this.__tryOrUnsub(this._next,e)}}error(e){if(!this.isStopped){const{_parentSubscriber:t}=this,{useDeprecatedSynchronousErrorHandling:n}=o;if(this._error)n&&t.syncErrorThrowable?(this.__tryOrSetError(t,this._error,e),this.unsubscribe()):(this.__tryOrUnsub(this._error,e),this.unsubscribe());else if(t.syncErrorThrowable)n?(t.syncErrorValue=e,t.syncErrorThrown=!0):r(e),this.unsubscribe();else{if(this.unsubscribe(),n)throw e;r(e)}}}complete(){if(!this.isStopped){const{_parentSubscriber:e}=this;if(this._complete){const t=()=>this._complete.call(this._context);o.useDeprecatedSynchronousErrorHandling&&e.syncErrorThrowable?(this.__tryOrSetError(e,t),this.unsubscribe()):(this.__tryOrUnsub(t),this.unsubscribe())}else this.unsubscribe()}}__tryOrUnsub(e,t){try{e.call(this._context,t)}catch(n){if(this.unsubscribe(),o.useDeprecatedSynchronousErrorHandling)throw n;r(n)}}__tryOrSetError(e,t,n){if(!o.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{t.call(this._context,n)}catch(i){return o.useDeprecatedSynchronousErrorHandling?(e.syncErrorValue=i,e.syncErrorThrown=!0,!0):(r(i),!0)}return!1}_unsubscribe(){const{_parentSubscriber:e}=this;this._context=null,this._parentSubscriber=null,e.unsubscribe()}}const m=(()=>"function"==typeof Symbol&&Symbol.observable||"@@observable")();function v(e){return e}let b=(()=>{class e{constructor(e){this._isScalar=!1,e&&(this._subscribe=e)}lift(t){const n=new e;return n.source=this,n.operator=t,n}subscribe(e,t,n){const{operator:i}=this,s=function(e,t,n){if(e){if(e instanceof f)return e;if(e[p])return e[p]()}return e||t||n?new f(e,t,n):new f(a)}(e,t,n);if(s.add(i?i.call(s,this.source):this.source||o.useDeprecatedSynchronousErrorHandling&&!s.syncErrorThrowable?this._subscribe(s):this._trySubscribe(s)),o.useDeprecatedSynchronousErrorHandling&&s.syncErrorThrowable&&(s.syncErrorThrowable=!1,s.syncErrorThrown))throw s.syncErrorValue;return s}_trySubscribe(e){try{return this._subscribe(e)}catch(t){o.useDeprecatedSynchronousErrorHandling&&(e.syncErrorThrown=!0,e.syncErrorValue=t),function(e){for(;e;){const{closed:t,destination:n,isStopped:i}=e;if(t||i)return!1;e=n&&n instanceof f?n:null}return!0}(e)?e.error(t):console.warn(t)}}forEach(e,t){return new(t=y(t))((t,n)=>{let i;i=this.subscribe(t=>{try{e(t)}catch(s){n(s),i&&i.unsubscribe()}},n,t)})}_subscribe(e){const{source:t}=this;return t&&t.subscribe(e)}[m](){return this}pipe(...e){return 0===e.length?this:(0===(t=e).length?v:1===t.length?t[0]:function(e){return t.reduce((e,t)=>t(e),e)})(this);var t}toPromise(e){return new(e=y(e))((e,t)=>{let n;this.subscribe(e=>n=e,e=>t(e),()=>e(n))})}}return e.create=t=>new e(t),e})();function y(e){if(e||(e=o.Promise||Promise),!e)throw new Error("no Promise impl found");return e}const C=(()=>{function e(){return Error.call(this),this.message="object unsubscribed",this.name="ObjectUnsubscribedError",this}return e.prototype=Object.create(Error.prototype),e})();class w extends h{constructor(e,t){super(),this.subject=e,this.subscriber=t,this.closed=!1}unsubscribe(){if(this.closed)return;this.closed=!0;const e=this.subject,t=e.observers;if(this.subject=null,!t||0===t.length||e.isStopped||e.closed)return;const n=t.indexOf(this.subscriber);-1!==n&&t.splice(n,1)}}class _ extends f{constructor(e){super(e),this.destination=e}}let D=(()=>{class e extends b{constructor(){super(),this.observers=[],this.closed=!1,this.isStopped=!1,this.hasError=!1,this.thrownError=null}[p](){return new _(this)}lift(e){const t=new S(this,this);return t.operator=e,t}next(e){if(this.closed)throw new C;if(!this.isStopped){const{observers:t}=this,n=t.length,i=t.slice();for(let s=0;s<n;s++)i[s].next(e)}}error(e){if(this.closed)throw new C;this.hasError=!0,this.thrownError=e,this.isStopped=!0;const{observers:t}=this,n=t.length,i=t.slice();for(let s=0;s<n;s++)i[s].error(e);this.observers.length=0}complete(){if(this.closed)throw new C;this.isStopped=!0;const{observers:e}=this,t=e.length,n=e.slice();for(let i=0;i<t;i++)n[i].complete();this.observers.length=0}unsubscribe(){this.isStopped=!0,this.closed=!0,this.observers=null}_trySubscribe(e){if(this.closed)throw new C;return super._trySubscribe(e)}_subscribe(e){if(this.closed)throw new C;return this.hasError?(e.error(this.thrownError),h.EMPTY):this.isStopped?(e.complete(),h.EMPTY):(this.observers.push(e),new w(this,e))}asObservable(){const e=new b;return e.source=this,e}}return e.create=(e,t)=>new S(e,t),e})();class S extends D{constructor(e,t){super(),this.destination=e,this.source=t}next(e){const{destination:t}=this;t&&t.next&&t.next(e)}error(e){const{destination:t}=this;t&&t.error&&this.destination.error(e)}complete(){const{destination:e}=this;e&&e.complete&&this.destination.complete()}_subscribe(e){const{source:t}=this;return t?this.source.subscribe(e):h.EMPTY}}function E(e){return e&&"function"==typeof e.schedule}function k(e,t){return function(n){if("function"!=typeof e)throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");return n.lift(new x(e,t))}}class x{constructor(e,t){this.project=e,this.thisArg=t}call(e,t){return t.subscribe(new A(e,this.project,this.thisArg))}}class A extends f{constructor(e,t,n){super(e),this.project=t,this.count=0,this.thisArg=n||this}_next(e){let t;try{t=this.project.call(this.thisArg,e,this.count++)}catch(n){return void this.destination.error(n)}this.destination.next(t)}}const O=e=>t=>{for(let n=0,i=e.length;n<i&&!t.closed;n++)t.next(e[n]);t.complete()};function T(){return"function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator"}const F=T(),I=e=>e&&"number"==typeof e.length&&"function"!=typeof e;function M(e){return!!e&&"function"!=typeof e.subscribe&&"function"==typeof e.then}const P=e=>{if(e&&"function"==typeof e[m])return n=e,e=>{const t=n[m]();if("function"!=typeof t.subscribe)throw new TypeError("Provided object does not correctly implement Symbol.observable");return t.subscribe(e)};if(I(e))return O(e);if(M(e))return(e=>t=>(e.then(e=>{t.closed||(t.next(e),t.complete())},e=>t.error(e)).then(null,r),t))(e);if(e&&"function"==typeof e[F])return t=e,e=>{const n=t[F]();for(;;){let t;try{t=n.next()}catch(i){return e.error(i),e}if(t.done){e.complete();break}if(e.next(t.value),e.closed)break}return"function"==typeof n.return&&e.add(()=>{n.return&&n.return()}),e};{const t=c(e)?"an invalid object":`'${e}'`;throw new TypeError(`You provided ${t} where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.`)}var t,n};function V(e,t){return new b(n=>{const i=new h;let s=0;return i.add(t.schedule(function(){s!==e.length?(n.next(e[s++]),n.closed||i.add(this.schedule())):n.complete()})),i})}function L(e,t){return t?function(e,t){if(null!=e){if(function(e){return e&&"function"==typeof e[m]}(e))return function(e,t){return new b(n=>{const i=new h;return i.add(t.schedule(()=>{const s=e[m]();i.add(s.subscribe({next(e){i.add(t.schedule(()=>n.next(e)))},error(e){i.add(t.schedule(()=>n.error(e)))},complete(){i.add(t.schedule(()=>n.complete()))}}))})),i})}(e,t);if(M(e))return function(e,t){return new b(n=>{const i=new h;return i.add(t.schedule(()=>e.then(e=>{i.add(t.schedule(()=>{n.next(e),i.add(t.schedule(()=>n.complete()))}))},e=>{i.add(t.schedule(()=>n.error(e)))}))),i})}(e,t);if(I(e))return V(e,t);if(function(e){return e&&"function"==typeof e[F]}(e)||"string"==typeof e)return function(e,t){if(!e)throw new Error("Iterable cannot be null");return new b(n=>{const i=new h;let s;return i.add(()=>{s&&"function"==typeof s.return&&s.return()}),i.add(t.schedule(()=>{s=e[F](),i.add(t.schedule(function(){if(n.closed)return;let e,t;try{const n=s.next();e=n.value,t=n.done}catch(i){return void n.error(i)}t?n.complete():(n.next(e),this.schedule())}))})),i})}(e,t)}throw new TypeError((null!==e&&typeof e||e)+" is not observable")}(e,t):e instanceof b?e:new b(P(e))}class R extends f{constructor(e){super(),this.parent=e}_next(e){this.parent.notifyNext(e)}_error(e){this.parent.notifyError(e),this.unsubscribe()}_complete(){this.parent.notifyComplete(),this.unsubscribe()}}class j extends f{notifyNext(e){this.destination.next(e)}notifyError(e){this.destination.error(e)}notifyComplete(){this.destination.complete()}}function N(e,t){if(t.closed)return;if(e instanceof b)return e.subscribe(t);let n;try{n=P(e)(t)}catch(i){t.error(i)}return n}function B(e,t,n=Number.POSITIVE_INFINITY){return"function"==typeof t?i=>i.pipe(B((n,i)=>L(e(n,i)).pipe(k((e,s)=>t(n,e,i,s))),n)):("number"==typeof t&&(n=t),t=>t.lift(new $(e,n)))}class ${constructor(e,t=Number.POSITIVE_INFINITY){this.project=e,this.concurrent=t}call(e,t){return t.subscribe(new H(e,this.project,this.concurrent))}}class H extends j{constructor(e,t,n=Number.POSITIVE_INFINITY){super(e),this.project=t,this.concurrent=n,this.hasCompleted=!1,this.buffer=[],this.active=0,this.index=0}_next(e){this.active<this.concurrent?this._tryNext(e):this.buffer.push(e)}_tryNext(e){let t;const n=this.index++;try{t=this.project(e,n)}catch(i){return void this.destination.error(i)}this.active++,this._innerSub(t)}_innerSub(e){const t=new R(this),n=this.destination;n.add(t);const i=N(e,t);i!==t&&n.add(i)}_complete(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&this.destination.complete(),this.unsubscribe()}notifyNext(e){this.destination.next(e)}notifyComplete(){const e=this.buffer;this.active--,e.length>0?this._next(e.shift()):0===this.active&&this.hasCompleted&&this.destination.complete()}}function U(e=Number.POSITIVE_INFINITY){return B(v,e)}function q(e,t){return t?V(e,t):new b(O(e))}function z(...e){let t=Number.POSITIVE_INFINITY,n=null,i=e[e.length-1];return E(i)?(n=e.pop(),e.length>1&&"number"==typeof e[e.length-1]&&(t=e.pop())):"number"==typeof i&&(t=e.pop()),null===n&&1===e.length&&e[0]instanceof b?e[0]:U(t)(q(e,n))}function W(){return function(e){return e.lift(new G(e))}}class G{constructor(e){this.connectable=e}call(e,t){const{connectable:n}=this;n._refCount++;const i=new K(e,n),s=t.subscribe(i);return i.closed||(i.connection=n.connect()),s}}class K extends f{constructor(e,t){super(e),this.connectable=t}_unsubscribe(){const{connectable:e}=this;if(!e)return void(this.connection=null);this.connectable=null;const t=e._refCount;if(t<=0)return void(this.connection=null);if(e._refCount=t-1,t>1)return void(this.connection=null);const{connection:n}=this,i=e._connection;this.connection=null,!i||n&&i!==n||i.unsubscribe()}}class Y extends b{constructor(e,t){super(),this.source=e,this.subjectFactory=t,this._refCount=0,this._isComplete=!1}_subscribe(e){return this.getSubject().subscribe(e)}getSubject(){const e=this._subject;return e&&!e.isStopped||(this._subject=this.subjectFactory()),this._subject}connect(){let e=this._connection;return e||(this._isComplete=!1,e=this._connection=new h,e.add(this.source.subscribe(new Q(this.getSubject(),this))),e.closed&&(this._connection=null,e=h.EMPTY)),e}refCount(){return W()(this)}}const Z=(()=>{const e=Y.prototype;return{operator:{value:null},_refCount:{value:0,writable:!0},_subject:{value:null,writable:!0},_connection:{value:null,writable:!0},_subscribe:{value:e._subscribe},_isComplete:{value:e._isComplete,writable:!0},getSubject:{value:e.getSubject},connect:{value:e.connect},refCount:{value:e.refCount}}})();class Q extends _{constructor(e,t){super(e),this.connectable=t}_error(e){this._unsubscribe(),super._error(e)}_complete(){this.connectable._isComplete=!0,this._unsubscribe(),super._complete()}_unsubscribe(){const e=this.connectable;if(e){this.connectable=null;const t=e._connection;e._refCount=0,e._subject=null,e._connection=null,t&&t.unsubscribe()}}}function J(){return new D}function X(e){for(let t in e)if(e[t]===X)return t;throw Error("Could not find renamed property on target object.")}function ee(e,t){for(const n in t)t.hasOwnProperty(n)&&!e.hasOwnProperty(n)&&(e[n]=t[n])}function te(e){if("string"==typeof e)return e;if(Array.isArray(e))return"["+e.map(te).join(", ")+"]";if(null==e)return""+e;if(e.overriddenName)return`${e.overriddenName}`;if(e.name)return`${e.name}`;const t=e.toString();if(null==t)return""+t;const n=t.indexOf("\n");return-1===n?t:t.substring(0,n)}function ne(e,t){return null==e||""===e?null===t?"":t:null==t||""===t?e:e+" "+t}const ie=X({__forward_ref__:X});function se(e){return e.__forward_ref__=se,e.toString=function(){return te(this())},e}function oe(e){return re(e)?e():e}function re(e){return"function"==typeof e&&e.hasOwnProperty(ie)&&e.__forward_ref__===se}class ae extends Error{constructor(e,t){super(function(e,t){return`${e?`NG0${e}: `:""}${t}`}(e,t)),this.code=e}}function le(e){return"string"==typeof e?e:null==e?"":String(e)}function ce(e){return"function"==typeof e?e.name||e.toString():"object"==typeof e&&null!=e&&"function"==typeof e.type?e.type.name||e.type.toString():le(e)}function ue(e,t){const n=t?` in ${t}`:"";throw new ae("201",`No provider for ${ce(e)} found${n}`)}function he(e){return{token:e.token,providedIn:e.providedIn||null,factory:e.factory,value:void 0}}function de(e){return{providers:e.providers||[],imports:e.imports||[]}}function pe(e){return fe(e,me)||fe(e,be)}function fe(e,t){return e.hasOwnProperty(t)?e[t]:null}function ge(e){return e&&(e.hasOwnProperty(ve)||e.hasOwnProperty(ye))?e[ve]:null}const me=X({"\u0275prov":X}),ve=X({"\u0275inj":X}),be=X({ngInjectableDef:X}),ye=X({ngInjectorDef:X});var Ce=function(e){return e[e.Default=0]="Default",e[e.Host=1]="Host",e[e.Self=2]="Self",e[e.SkipSelf=4]="SkipSelf",e[e.Optional=8]="Optional",e}({});let we;function _e(e){const t=we;return we=e,t}function De(e,t,n){const i=pe(e);return i&&"root"==i.providedIn?void 0===i.value?i.value=i.factory():i.value:n&Ce.Optional?null:void 0!==t?t:void ue(te(e),"Injector")}function Se(e){return{toString:e}.toString()}var Ee=function(e){return e[e.OnPush=0]="OnPush",e[e.Default=1]="Default",e}({}),ke=function(e){return e[e.Emulated=0]="Emulated",e[e.None=2]="None",e[e.ShadowDom=3]="ShadowDom",e}({});const xe="undefined"!=typeof globalThis&&globalThis,Ae="undefined"!=typeof window&&window,Oe="undefined"!=typeof self&&"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,Te="undefined"!=typeof global&&global,Fe=xe||Te||Ae||Oe,Ie={},Me=[],Pe=X({"\u0275cmp":X}),Ve=X({"\u0275dir":X}),Le=X({"\u0275pipe":X}),Re=X({"\u0275mod":X}),je=X({"\u0275loc":X}),Ne=X({"\u0275fac":X}),Be=X({__NG_ELEMENT_ID__:X});let $e=0;function He(e){return Se(()=>{const t={},n={type:e.type,providersResolver:null,decls:e.decls,vars:e.vars,factory:null,template:e.template||null,consts:e.consts||null,ngContentSelectors:e.ngContentSelectors,hostBindings:e.hostBindings||null,hostVars:e.hostVars||0,hostAttrs:e.hostAttrs||null,contentQueries:e.contentQueries||null,declaredInputs:t,inputs:null,outputs:null,exportAs:e.exportAs||null,onPush:e.changeDetection===Ee.OnPush,directiveDefs:null,pipeDefs:null,selectors:e.selectors||Me,viewQuery:e.viewQuery||null,features:e.features||null,data:e.data||{},encapsulation:e.encapsulation||ke.Emulated,id:"c",styles:e.styles||Me,_:null,setInput:null,schemas:e.schemas||null,tView:null},i=e.directives,s=e.features,o=e.pipes;return n.id+=$e++,n.inputs=Ge(e.inputs,t),n.outputs=Ge(e.outputs),s&&s.forEach(e=>e(n)),n.directiveDefs=i?()=>("function"==typeof i?i():i).map(Ue):null,n.pipeDefs=o?()=>("function"==typeof o?o():o).map(qe):null,n})}function Ue(e){return Ze(e)||function(e){return e[Ve]||null}(e)}function qe(e){return function(e){return e[Le]||null}(e)}const ze={};function We(e){const t={type:e.type,bootstrap:e.bootstrap||Me,declarations:e.declarations||Me,imports:e.imports||Me,exports:e.exports||Me,transitiveCompileScopes:null,schemas:e.schemas||null,id:e.id||null};return null!=e.id&&Se(()=>{ze[e.id]=e.type}),t}function Ge(e,t){if(null==e)return Ie;const n={};for(const i in e)if(e.hasOwnProperty(i)){let s=e[i],o=s;Array.isArray(s)&&(o=s[1],s=s[0]),n[s]=i,t&&(t[s]=o)}return n}const Ke=He;function Ye(e){return{type:e.type,name:e.name,factory:null,pure:!1!==e.pure,onDestroy:e.type.prototype.ngOnDestroy||null}}function Ze(e){return e[Pe]||null}function Qe(e,t){const n=e[Re]||null;if(!n&&!0===t)throw new Error(`Type ${te(e)} does not have '\u0275mod' property.`);return n}const Je=20,Xe=10;function et(e){return Array.isArray(e)&&"object"==typeof e[1]}function tt(e){return Array.isArray(e)&&!0===e[1]}function nt(e){return 0!=(8&e.flags)}function it(e){return 2==(2&e.flags)}function st(e){return 1==(1&e.flags)}function ot(e){return null!==e.template}function rt(e,t){return e.hasOwnProperty(Ne)?e[Ne]:null}class at{constructor(e,t,n){this.previousValue=e,this.currentValue=t,this.firstChange=n}isFirstChange(){return this.firstChange}}function lt(){return ct}function ct(e){return e.type.prototype.ngOnChanges&&(e.setInput=ht),ut}function ut(){const e=dt(this),t=null==e?void 0:e.current;if(t){const n=e.previous;if(n===Ie)e.previous=t;else for(let e in t)n[e]=t[e];e.current=null,this.ngOnChanges(t)}}function ht(e,t,n,i){const s=dt(e)||function(e,t){return e.__ngSimpleChanges__=t}(e,{previous:Ie,current:null}),o=s.current||(s.current={}),r=s.previous,a=this.declaredInputs[n],l=r[a];o[a]=new at(l&&l.currentValue,t,r===Ie),e[i]=t}function dt(e){return e.__ngSimpleChanges__||null}let pt;function ft(){return void 0!==pt?pt:"undefined"!=typeof document?document:void 0}function gt(e){return!!e.listen}lt.ngInherit=!0;const mt={createRenderer:(e,t)=>ft()};function vt(e){for(;Array.isArray(e);)e=e[0];return e}function bt(e,t){return vt(t[e])}function yt(e,t){return vt(t[e.index])}function Ct(e,t){return e.data[t]}function wt(e,t){return e[t]}function _t(e,t){const n=t[e];return et(n)?n:n[0]}function Dt(e){return 4==(4&e[2])}function St(e){return 128==(128&e[2])}function Et(e,t){return null==t?null:e[t]}function kt(e){e[18]=0}function xt(e,t){e[5]+=t;let n=e,i=e[3];for(;null!==i&&(1===t&&1===n[5]||-1===t&&0===n[5]);)i[5]+=t,n=i,i=i[3]}const At={lFrame:Jt(null),bindingsEnabled:!0,isInCheckNoChangesMode:!1};function Ot(){return At.bindingsEnabled}function Tt(){return At.lFrame.lView}function Ft(){return At.lFrame.tView}function It(e){return At.lFrame.contextLView=e,e[8]}function Mt(){let e=Pt();for(;null!==e&&64===e.type;)e=e.parent;return e}function Pt(){return At.lFrame.currentTNode}function Vt(e,t){const n=At.lFrame;n.currentTNode=e,n.isParent=t}function Lt(){return At.lFrame.isParent}function Rt(){At.lFrame.isParent=!1}function jt(){return At.isInCheckNoChangesMode}function Nt(e){At.isInCheckNoChangesMode=e}function Bt(){const e=At.lFrame;let t=e.bindingRootIndex;return-1===t&&(t=e.bindingRootIndex=e.tView.bindingStartIndex),t}function $t(){return At.lFrame.bindingIndex}function Ht(){return At.lFrame.bindingIndex++}function Ut(e){const t=At.lFrame,n=t.bindingIndex;return t.bindingIndex=t.bindingIndex+e,n}function qt(e,t){const n=At.lFrame;n.bindingIndex=n.bindingRootIndex=e,zt(t)}function zt(e){At.lFrame.currentDirectiveIndex=e}function Wt(){return At.lFrame.currentQueryIndex}function Gt(e){At.lFrame.currentQueryIndex=e}function Kt(e){const t=e[1];return 2===t.type?t.declTNode:1===t.type?e[6]:null}function Yt(e,t,n){if(n&Ce.SkipSelf){let i=t,s=e;for(;i=i.parent,!(null!==i||n&Ce.Host||(i=Kt(s),null===i)||(s=s[15],10&i.type)););if(null===i)return!1;t=i,e=s}const i=At.lFrame=Qt();return i.currentTNode=t,i.lView=e,!0}function Zt(e){const t=Qt(),n=e[1];At.lFrame=t,t.currentTNode=n.firstChild,t.lView=e,t.tView=n,t.contextLView=e,t.bindingIndex=n.bindingStartIndex,t.inI18n=!1}function Qt(){const e=At.lFrame,t=null===e?null:e.child;return null===t?Jt(e):t}function Jt(e){const t={currentTNode:null,isParent:!0,lView:null,tView:null,selectedIndex:-1,contextLView:null,elementDepthCount:0,currentNamespace:null,currentDirectiveIndex:-1,bindingRootIndex:-1,bindingIndex:-1,currentQueryIndex:0,parent:e,child:null,inI18n:!1};return null!==e&&(e.child=t),t}function Xt(){const e=At.lFrame;return At.lFrame=e.parent,e.currentTNode=null,e.lView=null,e}const en=Xt;function tn(){const e=Xt();e.isParent=!0,e.tView=null,e.selectedIndex=-1,e.contextLView=null,e.elementDepthCount=0,e.currentDirectiveIndex=-1,e.currentNamespace=null,e.bindingRootIndex=-1,e.bindingIndex=-1,e.currentQueryIndex=0}function nn(){return At.lFrame.selectedIndex}function sn(e){At.lFrame.selectedIndex=e}function on(){const e=At.lFrame;return Ct(e.tView,e.selectedIndex)}function rn(e,t){for(let n=t.directiveStart,i=t.directiveEnd;n<i;n++){const t=e.data[n].type.prototype,{ngAfterContentInit:i,ngAfterContentChecked:s,ngAfterViewInit:o,ngAfterViewChecked:r,ngOnDestroy:a}=t;i&&(e.contentHooks||(e.contentHooks=[])).push(-n,i),s&&((e.contentHooks||(e.contentHooks=[])).push(n,s),(e.contentCheckHooks||(e.contentCheckHooks=[])).push(n,s)),o&&(e.viewHooks||(e.viewHooks=[])).push(-n,o),r&&((e.viewHooks||(e.viewHooks=[])).push(n,r),(e.viewCheckHooks||(e.viewCheckHooks=[])).push(n,r)),null!=a&&(e.destroyHooks||(e.destroyHooks=[])).push(n,a)}}function an(e,t,n){un(e,t,3,n)}function ln(e,t,n,i){(3&e[2])===n&&un(e,t,n,i)}function cn(e,t){let n=e[2];(3&n)===t&&(n&=2047,n+=1,e[2]=n)}function un(e,t,n,i){const s=null!=i?i:-1,o=t.length-1;let r=0;for(let a=void 0!==i?65535&e[18]:0;a<o;a++)if("number"==typeof t[a+1]){if(r=t[a],null!=i&&r>=i)break}else t[a]<0&&(e[18]+=65536),(r<s||-1==s)&&(hn(e,n,t,a),e[18]=(4294901760&e[18])+a+2),a++}function hn(e,t,n,i){const s=n[i]<0,o=n[i+1],r=e[s?-n[i]:n[i]];if(s){if(e[2]>>11<e[18]>>16&&(3&e[2])===t){e[2]+=2048;try{o.call(r)}finally{}}}else try{o.call(r)}finally{}}const dn=-1;class pn{constructor(e,t,n){this.factory=e,this.resolving=!1,this.canSeeViewProviders=t,this.injectImpl=n}}function fn(e,t,n){const i=gt(e);let s=0;for(;s<n.length;){const o=n[s];if("number"==typeof o){if(0!==o)break;s++;const r=n[s++],a=n[s++],l=n[s++];i?e.setAttribute(t,a,l,r):t.setAttributeNS(r,a,l)}else{const r=o,a=n[++s];mn(r)?i&&e.setProperty(t,r,a):i?e.setAttribute(t,r,a):t.setAttribute(r,a),s++}}return s}function gn(e){return 3===e||4===e||6===e}function mn(e){return 64===e.charCodeAt(0)}function vn(e,t){if(null===t||0===t.length);else if(null===e||0===e.length)e=t.slice();else{let n=-1;for(let i=0;i<t.length;i++){const s=t[i];"number"==typeof s?n=s:0===n||bn(e,n,s,null,-1===n||2===n?t[++i]:null)}}return e}function bn(e,t,n,i,s){let o=0,r=e.length;if(-1===t)r=-1;else for(;o<e.length;){const n=e[o++];if("number"==typeof n){if(n===t){r=-1;break}if(n>t){r=o-1;break}}}for(;o<e.length;){const t=e[o];if("number"==typeof t)break;if(t===n){if(null===i)return void(null!==s&&(e[o+1]=s));if(i===e[o+1])return void(e[o+2]=s)}o++,null!==i&&o++,null!==s&&o++}-1!==r&&(e.splice(r,0,t),o=r+1),e.splice(o++,0,n),null!==i&&e.splice(o++,0,i),null!==s&&e.splice(o++,0,s)}function yn(e){return e!==dn}function Cn(e){return 32767&e}function wn(e,t){let n=e>>16,i=t;for(;n>0;)i=i[15],n--;return i}let _n=!0;function Dn(e){const t=_n;return _n=e,t}let Sn=0;function En(e,t){const n=xn(e,t);if(-1!==n)return n;const i=t[1];i.firstCreatePass&&(e.injectorIndex=t.length,kn(i.data,e),kn(t,null),kn(i.blueprint,null));const s=An(e,t),o=e.injectorIndex;if(yn(s)){const e=Cn(s),n=wn(s,t),i=n[1].data;for(let s=0;s<8;s++)t[o+s]=n[e+s]|i[e+s]}return t[o+8]=s,o}function kn(e,t){e.push(0,0,0,0,0,0,0,0,t)}function xn(e,t){return-1===e.injectorIndex||e.parent&&e.parent.injectorIndex===e.injectorIndex||null===t[e.injectorIndex+8]?-1:e.injectorIndex}function An(e,t){if(e.parent&&-1!==e.parent.injectorIndex)return e.parent.injectorIndex;let n=0,i=null,s=t;for(;null!==s;){const e=s[1],t=e.type;if(i=2===t?e.declTNode:1===t?s[6]:null,null===i)return dn;if(n++,s=s[15],-1!==i.injectorIndex)return i.injectorIndex|n<<16}return dn}function On(e,t,n){!function(e,t,n){let i;"string"==typeof n?i=n.charCodeAt(0)||0:n.hasOwnProperty(Be)&&(i=n[Be]),null==i&&(i=n[Be]=Sn++);const s=255&i;t.data[e+(s>>5)]|=1<<s}(e,t,n)}function Tn(e,t,n){if(n&Ce.Optional)return e;ue(t,"NodeInjector")}function Fn(e,t,n,i){if(n&Ce.Optional&&void 0===i&&(i=null),0==(n&(Ce.Self|Ce.Host))){const s=e[9],o=_e(void 0);try{return s?s.get(t,i,n&Ce.Optional):De(t,i,n&Ce.Optional)}finally{_e(o)}}return Tn(i,t,n)}function In(e,t,n,i=Ce.Default,s){if(null!==e){const o=function(e){if("string"==typeof e)return e.charCodeAt(0)||0;const t=e.hasOwnProperty(Be)?e[Be]:void 0;return"number"==typeof t?t>=0?255&t:Pn:t}(n);if("function"==typeof o){if(!Yt(t,e,i))return i&Ce.Host?Tn(s,n,i):Fn(t,n,i,s);try{const e=o(i);if(null!=e||i&Ce.Optional)return e;ue(n)}finally{en()}}else if("number"==typeof o){let s=null,r=xn(e,t),a=dn,l=i&Ce.Host?t[16][6]:null;for((-1===r||i&Ce.SkipSelf)&&(a=-1===r?An(e,t):t[r+8],a!==dn&&Nn(i,!1)?(s=t[1],r=Cn(a),t=wn(a,t)):r=-1);-1!==r;){const e=t[1];if(jn(o,r,e.data)){const e=Vn(r,t,n,s,i,l);if(e!==Mn)return e}a=t[r+8],a!==dn&&Nn(i,t[1].data[r+8]===l)&&jn(o,r,t)?(s=e,r=Cn(a),t=wn(a,t)):r=-1}}}return Fn(t,n,i,s)}const Mn={};function Pn(){return new Bn(Mt(),Tt())}function Vn(e,t,n,i,s,o){const r=t[1],a=r.data[e+8],l=Ln(a,r,n,null==i?it(a)&&_n:i!=r&&0!=(3&a.type),s&Ce.Host&&o===a);return null!==l?Rn(t,r,l,a):Mn}function Ln(e,t,n,i,s){const o=e.providerIndexes,r=t.data,a=1048575&o,l=e.directiveStart,c=o>>20,u=s?a+c:e.directiveEnd;for(let h=i?a:a+c;h<u;h++){const e=r[h];if(h<l&&n===e||h>=l&&e.type===n)return h}if(s){const e=r[l];if(e&&ot(e)&&e.type===n)return l}return null}function Rn(e,t,n,i){let s=e[n];const o=t.data;if(s instanceof pn){const r=s;r.resolving&&function(e,t){throw new ae("200",`Circular dependency in DI detected for ${e}`)}(ce(o[n]));const a=Dn(r.canSeeViewProviders);r.resolving=!0;const l=r.injectImpl?_e(r.injectImpl):null;Yt(e,i,Ce.Default);try{s=e[n]=r.factory(void 0,o,e,i),t.firstCreatePass&&n>=i.directiveStart&&function(e,t,n){const{ngOnChanges:i,ngOnInit:s,ngDoCheck:o}=t.type.prototype;if(i){const i=ct(t);(n.preOrderHooks||(n.preOrderHooks=[])).push(e,i),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(e,i)}s&&(n.preOrderHooks||(n.preOrderHooks=[])).push(0-e,s),o&&((n.preOrderHooks||(n.preOrderHooks=[])).push(e,o),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(e,o))}(n,o[n],t)}finally{null!==l&&_e(l),Dn(a),r.resolving=!1,en()}}return s}function jn(e,t,n){return!!(n[t+(e>>5)]&1<<e)}function Nn(e,t){return!(e&Ce.Self||e&Ce.Host&&t)}class Bn{constructor(e,t){this._tNode=e,this._lView=t}get(e,t){return In(this._tNode,this._lView,e,void 0,t)}}function $n(e){return Se(()=>{const t=e.prototype.constructor,n=t[Ne]||Hn(t),i=Object.prototype;let s=Object.getPrototypeOf(e.prototype).constructor;for(;s&&s!==i;){const e=s[Ne]||Hn(s);if(e&&e!==n)return e;s=Object.getPrototypeOf(s)}return e=>new e})}function Hn(e){return re(e)?()=>{const t=Hn(oe(e));return t&&t()}:rt(e)}const Un="__parameters__";function qn(e,t,n){return Se(()=>{const i=function(e){return function(...t){if(e){const n=e(...t);for(const e in n)this[e]=n[e]}}}(t);function s(...e){if(this instanceof s)return i.apply(this,e),this;const t=new s(...e);return n.annotation=t,n;function n(e,n,i){const s=e.hasOwnProperty(Un)?e[Un]:Object.defineProperty(e,Un,{value:[]})[Un];for(;s.length<=i;)s.push(null);return(s[i]=s[i]||[]).push(t),e}}return n&&(s.prototype=Object.create(n.prototype)),s.prototype.ngMetadataName=e,s.annotationCls=s,s})}class zn{constructor(e,t){this._desc=e,this.ngMetadataName="InjectionToken",this.\u0275prov=void 0,"number"==typeof t?this.__NG_ELEMENT_ID__=t:void 0!==t&&(this.\u0275prov=he({token:this,providedIn:t.providedIn||"root",factory:t.factory}))}toString(){return`InjectionToken ${this._desc}`}}const Wn=new zn("AnalyzeForEntryComponents"),Gn=Function;function Kn(e,t){void 0===t&&(t=e);for(let n=0;n<e.length;n++){let i=e[n];Array.isArray(i)?(t===e&&(t=e.slice(0,n)),Kn(i,t)):t!==e&&t.push(i)}return t}function Yn(e,t){e.forEach(e=>Array.isArray(e)?Yn(e,t):t(e))}function Zn(e,t,n){t>=e.length?e.push(n):e.splice(t,0,n)}function Qn(e,t){return t>=e.length-1?e.pop():e.splice(t,1)[0]}function Jn(e,t){const n=[];for(let i=0;i<e;i++)n.push(t);return n}function Xn(e,t,n){let i=ti(e,t);return i>=0?e[1|i]=n:(i=~i,function(e,t,n,i){let s=e.length;if(s==t)e.push(n,i);else if(1===s)e.push(i,e[0]),e[0]=n;else{for(s--,e.push(e[s-1],e[s]);s>t;)e[s]=e[s-2],s--;e[t]=n,e[t+1]=i}}(e,i,t,n)),i}function ei(e,t){const n=ti(e,t);if(n>=0)return e[1|n]}function ti(e,t){return function(e,t,n){let i=0,s=e.length>>1;for(;s!==i;){const n=i+(s-i>>1),o=e[n<<1];if(t===o)return n<<1;o>t?s=n:i=n+1}return~(s<<1)}(e,t)}const ni={},ii=/\n/gm,si="__source",oi=X({provide:String,useValue:X});let ri;function ai(e){const t=ri;return ri=e,t}function li(e,t=Ce.Default){if(void 0===ri)throw new Error("inject() must be called from an injection context");return null===ri?De(e,void 0,t):ri.get(e,t&Ce.Optional?null:void 0,t)}function ci(e,t=Ce.Default){return(we||li)(oe(e),t)}function ui(e){const t=[];for(let n=0;n<e.length;n++){const i=oe(e[n]);if(Array.isArray(i)){if(0===i.length)throw new Error("Arguments array must have arguments.");let e,n=Ce.Default;for(let t=0;t<i.length;t++){const s=i[t],o=s.__NG_DI_FLAG__;"number"==typeof o?-1===o?e=s.token:n|=o:e=s}t.push(ci(e,n))}else t.push(ci(i))}return t}function hi(e,t){return e.__NG_DI_FLAG__=t,e.prototype.__NG_DI_FLAG__=t,e}const di=hi(qn("Inject",e=>({token:e})),-1),pi=hi(qn("Optional"),8),fi=hi(qn("SkipSelf"),4);let gi,mi;function vi(e){var t;return(null===(t=function(){if(void 0===gi&&(gi=null,Fe.trustedTypes))try{gi=Fe.trustedTypes.createPolicy("angular",{createHTML:e=>e,createScript:e=>e,createScriptURL:e=>e})}catch(t){}return gi}())||void 0===t?void 0:t.createHTML(e))||e}function bi(e){var t;return(null===(t=function(){if(void 0===mi&&(mi=null,Fe.trustedTypes))try{mi=Fe.trustedTypes.createPolicy("angular#unsafe-bypass",{createHTML:e=>e,createScript:e=>e,createScriptURL:e=>e})}catch(t){}return mi}())||void 0===t?void 0:t.createHTML(e))||e}class yi{constructor(e){this.changingThisBreaksApplicationSecurity=e}toString(){return`SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`}}class Ci extends yi{getTypeName(){return"HTML"}}class wi extends yi{getTypeName(){return"Style"}}class _i extends yi{getTypeName(){return"Script"}}class Di extends yi{getTypeName(){return"URL"}}class Si extends yi{getTypeName(){return"ResourceURL"}}function Ei(e){return e instanceof yi?e.changingThisBreaksApplicationSecurity:e}function ki(e,t){const n=xi(e);if(null!=n&&n!==t){if("ResourceURL"===n&&"URL"===t)return!0;throw new Error(`Required a safe ${t}, got a ${n} (see https://g.co/ng/security#xss)`)}return n===t}function xi(e){return e instanceof yi&&e.getTypeName()||null}class Ai{constructor(e){this.inertDocumentHelper=e}getInertBodyElement(e){e="<body><remove></remove>"+e;try{const t=(new window.DOMParser).parseFromString(vi(e),"text/html").body;return null===t?this.inertDocumentHelper.getInertBodyElement(e):(t.removeChild(t.firstChild),t)}catch(t){return null}}}class Oi{constructor(e){if(this.defaultDoc=e,this.inertDocument=this.defaultDoc.implementation.createHTMLDocument("sanitization-inert"),null==this.inertDocument.body){const e=this.inertDocument.createElement("html");this.inertDocument.appendChild(e);const t=this.inertDocument.createElement("body");e.appendChild(t)}}getInertBodyElement(e){const t=this.inertDocument.createElement("template");if("content"in t)return t.innerHTML=vi(e),t;const n=this.inertDocument.createElement("body");return n.innerHTML=vi(e),this.defaultDoc.documentMode&&this.stripCustomNsAttrs(n),n}stripCustomNsAttrs(e){const t=e.attributes;for(let i=t.length-1;0<i;i--){const n=t.item(i).name;"xmlns:ns1"!==n&&0!==n.indexOf("ns1:")||e.removeAttribute(n)}let n=e.firstChild;for(;n;)n.nodeType===Node.ELEMENT_NODE&&this.stripCustomNsAttrs(n),n=n.nextSibling}}const Ti=/^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,Fi=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;function Ii(e){return(e=String(e)).match(Ti)||e.match(Fi)?e:"unsafe:"+e}function Mi(e){const t={};for(const n of e.split(","))t[n]=!0;return t}function Pi(...e){const t={};for(const n of e)for(const e in n)n.hasOwnProperty(e)&&(t[e]=!0);return t}const Vi=Mi("area,br,col,hr,img,wbr"),Li=Mi("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),Ri=Mi("rp,rt"),ji=Pi(Ri,Li),Ni=Pi(Vi,Pi(Li,Mi("address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul")),Pi(Ri,Mi("a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video")),ji),Bi=Mi("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),$i=Mi("srcset"),Hi=Pi(Bi,$i,Mi("abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"),Mi("aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext")),Ui=Mi("script,style,template");class qi{constructor(){this.sanitizedSomething=!1,this.buf=[]}sanitizeChildren(e){let t=e.firstChild,n=!0;for(;t;)if(t.nodeType===Node.ELEMENT_NODE?n=this.startElement(t):t.nodeType===Node.TEXT_NODE?this.chars(t.nodeValue):this.sanitizedSomething=!0,n&&t.firstChild)t=t.firstChild;else for(;t;){t.nodeType===Node.ELEMENT_NODE&&this.endElement(t);let e=this.checkClobberedElement(t,t.nextSibling);if(e){t=e;break}t=this.checkClobberedElement(t,t.parentNode)}return this.buf.join("")}startElement(e){const t=e.nodeName.toLowerCase();if(!Ni.hasOwnProperty(t))return this.sanitizedSomething=!0,!Ui.hasOwnProperty(t);this.buf.push("<"),this.buf.push(t);const n=e.attributes;for(let s=0;s<n.length;s++){const e=n.item(s),t=e.name,o=t.toLowerCase();if(!Hi.hasOwnProperty(o)){this.sanitizedSomething=!0;continue}let r=e.value;Bi[o]&&(r=Ii(r)),$i[o]&&(i=r,r=(i=String(i)).split(",").map(e=>Ii(e.trim())).join(", ")),this.buf.push(" ",t,'="',Gi(r),'"')}var i;return this.buf.push(">"),!0}endElement(e){const t=e.nodeName.toLowerCase();Ni.hasOwnProperty(t)&&!Vi.hasOwnProperty(t)&&(this.buf.push("</"),this.buf.push(t),this.buf.push(">"))}chars(e){this.buf.push(Gi(e))}checkClobberedElement(e,t){if(t&&(e.compareDocumentPosition(t)&Node.DOCUMENT_POSITION_CONTAINED_BY)===Node.DOCUMENT_POSITION_CONTAINED_BY)throw new Error(`Failed to sanitize html because the element is clobbered: ${e.outerHTML}`);return t}}const zi=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,Wi=/([^\#-~ |!])/g;function Gi(e){return e.replace(/&/g,"&amp;").replace(zi,function(e){return"&#"+(1024*(e.charCodeAt(0)-55296)+(e.charCodeAt(1)-56320)+65536)+";"}).replace(Wi,function(e){return"&#"+e.charCodeAt(0)+";"}).replace(/</g,"&lt;").replace(/>/g,"&gt;")}let Ki;function Yi(e,t){let n=null;try{Ki=Ki||function(e){const t=new Oi(e);return function(){try{return!!(new window.DOMParser).parseFromString(vi(""),"text/html")}catch(e){return!1}}()?new Ai(t):t}(e);let i=t?String(t):"";n=Ki.getInertBodyElement(i);let s=5,o=i;do{if(0===s)throw new Error("Failed to sanitize html because the input is unstable");s--,i=o,o=n.innerHTML,n=Ki.getInertBodyElement(i)}while(i!==o);return vi((new qi).sanitizeChildren(Zi(n)||n))}finally{if(n){const e=Zi(n)||n;for(;e.firstChild;)e.removeChild(e.firstChild)}}}function Zi(e){return"content"in e&&function(e){return e.nodeType===Node.ELEMENT_NODE&&"TEMPLATE"===e.nodeName}(e)?e.content:null}var Qi=function(e){return e[e.NONE=0]="NONE",e[e.HTML=1]="HTML",e[e.STYLE=2]="STYLE",e[e.SCRIPT=3]="SCRIPT",e[e.URL=4]="URL",e[e.RESOURCE_URL=5]="RESOURCE_URL",e}({});function Ji(e){const t=es();return t?bi(t.sanitize(Qi.HTML,e)||""):ki(e,"HTML")?bi(Ei(e)):Yi(ft(),le(e))}function Xi(e){const t=es();return t?t.sanitize(Qi.URL,e)||"":ki(e,"URL")?Ei(e):Ii(le(e))}function es(){const e=Tt();return e&&e[12]}function ts(e,t){e.__ngContext__=t}function ns(e){const t=function(e){return e.__ngContext__||null}(e);return t?Array.isArray(t)?t:t.lView:null}function is(e){return e.ngDebugContext}function ss(e){return e.ngOriginalError}function os(e,...t){e.error(...t)}class rs{constructor(){this._console=console}handleError(e){const t=this._findOriginalError(e),n=this._findContext(e),i=function(e){return e.ngErrorLogger||os}(e);i(this._console,"ERROR",e),t&&i(this._console,"ORIGINAL ERROR",t),n&&i(this._console,"ERROR CONTEXT",n)}_findContext(e){return e?is(e)?is(e):this._findContext(ss(e)):null}_findOriginalError(e){let t=ss(e);for(;t&&ss(t);)t=ss(t);return t}}const as=(()=>("undefined"!=typeof requestAnimationFrame&&requestAnimationFrame||setTimeout).bind(Fe))();function ls(e){return e instanceof Function?e():e}var cs=function(e){return e[e.Important=1]="Important",e[e.DashCase=2]="DashCase",e}({});function us(e,t){return(void 0)(e,t)}function hs(e){const t=e[3];return tt(t)?t[3]:t}function ds(e){return fs(e[13])}function ps(e){return fs(e[4])}function fs(e){for(;null!==e&&!tt(e);)e=e[4];return e}function gs(e,t,n,i,s){if(null!=i){let o,r=!1;tt(i)?o=i:et(i)&&(r=!0,i=i[0]);const a=vt(i);0===e&&null!==n?null==s?Ds(t,n,a):_s(t,n,a,s||null,!0):1===e&&null!==n?_s(t,n,a,s||null,!0):2===e?function(e,t,n){const i=Es(e,t);i&&function(e,t,n,i){gt(e)?e.removeChild(t,n,i):t.removeChild(n)}(e,i,t,n)}(t,a,r):3===e&&t.destroyNode(a),null!=o&&function(e,t,n,i,s){const o=n[7];o!==vt(n)&&gs(t,e,i,o,s);for(let r=Xe;r<n.length;r++){const s=n[r];Ms(s[1],s,e,t,i,o)}}(t,e,o,n,s)}}function ms(e,t,n){return gt(e)?e.createElement(t,n):null===n?e.createElement(t):e.createElementNS(n,t)}function vs(e,t){const n=e[9],i=n.indexOf(t),s=t[3];1024&t[2]&&(t[2]&=-1025,xt(s,-1)),n.splice(i,1)}function bs(e,t){if(e.length<=Xe)return;const n=Xe+t,i=e[n];if(i){const o=i[17];null!==o&&o!==e&&vs(o,i),t>0&&(e[n-1][4]=i[4]);const r=Qn(e,Xe+t);Ms(i[1],s=i,s[11],2,null,null),s[0]=null,s[6]=null;const a=r[19];null!==a&&a.detachView(r[1]),i[3]=null,i[4]=null,i[2]&=-129}var s;return i}function ys(e,t){if(!(256&t[2])){const n=t[11];gt(n)&&n.destroyNode&&Ms(e,t,n,3,null,null),function(e){let t=e[13];if(!t)return Cs(e[1],e);for(;t;){let n=null;if(et(t))n=t[13];else{const e=t[10];e&&(n=e)}if(!n){for(;t&&!t[4]&&t!==e;)et(t)&&Cs(t[1],t),t=t[3];null===t&&(t=e),et(t)&&Cs(t[1],t),n=t&&t[4]}t=n}}(t)}}function Cs(e,t){if(!(256&t[2])){t[2]&=-129,t[2]|=256,function(e,t){let n;if(null!=e&&null!=(n=e.destroyHooks))for(let i=0;i<n.length;i+=2){const e=t[n[i]];if(!(e instanceof pn)){const t=n[i+1];if(Array.isArray(t))for(let n=0;n<t.length;n+=2){const i=e[t[n]],s=t[n+1];try{s.call(i)}finally{}}else try{t.call(e)}finally{}}}}(e,t),function(e,t){const n=e.cleanup,i=t[7];let s=-1;if(null!==n)for(let o=0;o<n.length-1;o+=2)if("string"==typeof n[o]){const e=n[o+1],r="function"==typeof e?e(t):vt(t[e]),a=i[s=n[o+2]],l=n[o+3];"boolean"==typeof l?r.removeEventListener(n[o],a,l):l>=0?i[s=l]():i[s=-l].unsubscribe(),o+=2}else{const e=i[s=n[o+1]];n[o].call(e)}if(null!==i){for(let e=s+1;e<i.length;e++)(0,i[e])();t[7]=null}}(e,t),1===t[1].type&&gt(t[11])&&t[11].destroy();const n=t[17];if(null!==n&&tt(t[3])){n!==t[3]&&vs(n,t);const i=t[19];null!==i&&i.detachView(e)}}}function ws(e,t,n){return function(e,t,n){let i=t;for(;null!==i&&40&i.type;)i=(t=i).parent;if(null===i)return n[0];if(2&i.flags){const t=e.data[i.directiveStart].encapsulation;if(t===ke.None||t===ke.Emulated)return null}return yt(i,n)}(e,t.parent,n)}function _s(e,t,n,i,s){gt(e)?e.insertBefore(t,n,i,s):t.insertBefore(n,i,s)}function Ds(e,t,n){gt(e)?e.appendChild(t,n):t.appendChild(n)}function Ss(e,t,n,i,s){null!==i?_s(e,t,n,i,s):Ds(e,t,n)}function Es(e,t){return gt(e)?e.parentNode(t):t.parentNode}function ks(e,t,n){return xs(e,t,n)}let xs=function(e,t,n){return 40&e.type?yt(e,n):null};function As(e,t,n,i){const s=ws(e,i,t),o=t[11],r=ks(i.parent||t[6],i,t);if(null!=s)if(Array.isArray(n))for(let a=0;a<n.length;a++)Ss(o,s,n[a],r,!1);else Ss(o,s,n,r,!1)}function Os(e,t){if(null!==t){const n=t.type;if(3&n)return yt(t,e);if(4&n)return Fs(-1,e[t.index]);if(8&n){const n=t.child;if(null!==n)return Os(e,n);{const n=e[t.index];return tt(n)?Fs(-1,n):vt(n)}}if(32&n)return us(t,e)()||vt(e[t.index]);{const n=Ts(e,t);return null!==n?Array.isArray(n)?n[0]:Os(hs(e[16]),n):Os(e,t.next)}}return null}function Ts(e,t){return null!==t?e[16][6].projection[t.projection]:null}function Fs(e,t){const n=Xe+e+1;if(n<t.length){const e=t[n],i=e[1].firstChild;if(null!==i)return Os(e,i)}return t[7]}function Is(e,t,n,i,s,o,r){for(;null!=n;){const a=i[n.index],l=n.type;if(r&&0===t&&(a&&ts(vt(a),i),n.flags|=4),64!=(64&n.flags))if(8&l)Is(e,t,n.child,i,s,o,!1),gs(t,e,s,a,o);else if(32&l){const r=us(n,i);let l;for(;l=r();)gs(t,e,s,l,o);gs(t,e,s,a,o)}else 16&l?Ps(e,t,i,n,s,o):gs(t,e,s,a,o);n=r?n.projectionNext:n.next}}function Ms(e,t,n,i,s,o){Is(n,i,e.firstChild,t,s,o,!1)}function Ps(e,t,n,i,s,o){const r=n[16],a=r[6].projection[i.projection];if(Array.isArray(a))for(let l=0;l<a.length;l++)gs(t,e,s,a[l],o);else Is(e,t,a,r[3],s,o,!0)}function Vs(e,t,n){gt(e)?e.setAttribute(t,"style",n):t.style.cssText=n}function Ls(e,t,n){gt(e)?""===n?e.removeAttribute(t,"class"):e.setAttribute(t,"class",n):t.className=n}function Rs(e,t,n){let i=e.length;for(;;){const s=e.indexOf(t,n);if(-1===s)return s;if(0===s||e.charCodeAt(s-1)<=32){const n=t.length;if(s+n===i||e.charCodeAt(s+n)<=32)return s}n=s+1}}const js="ng-template";function Ns(e,t,n){let i=0;for(;i<e.length;){let s=e[i++];if(n&&"class"===s){if(s=e[i],-1!==Rs(s.toLowerCase(),t,0))return!0}else if(1===s){for(;i<e.length&&"string"==typeof(s=e[i++]);)if(s.toLowerCase()===t)return!0;return!1}}return!1}function Bs(e){return 4===e.type&&e.value!==js}function $s(e,t,n){return t===(4!==e.type||n?e.value:js)}function Hs(e,t,n){let i=4;const s=e.attrs||[],o=function(e){for(let t=0;t<e.length;t++)if(gn(e[t]))return t;return e.length}(s);let r=!1;for(let a=0;a<t.length;a++){const l=t[a];if("number"!=typeof l){if(!r)if(4&i){if(i=2|1&i,""!==l&&!$s(e,l,n)||""===l&&1===t.length){if(Us(i))return!1;r=!0}}else{const c=8&i?l:t[++a];if(8&i&&null!==e.attrs){if(!Ns(e.attrs,c,n)){if(Us(i))return!1;r=!0}continue}const u=qs(8&i?"class":l,s,Bs(e),n);if(-1===u){if(Us(i))return!1;r=!0;continue}if(""!==c){let e;e=u>o?"":s[u+1].toLowerCase();const t=8&i?e:null;if(t&&-1!==Rs(t,c,0)||2&i&&c!==e){if(Us(i))return!1;r=!0}}}}else{if(!r&&!Us(i)&&!Us(l))return!1;if(r&&Us(l))continue;r=!1,i=l|1&i}}return Us(i)||r}function Us(e){return 0==(1&e)}function qs(e,t,n,i){if(null===t)return-1;let s=0;if(i||!n){let n=!1;for(;s<t.length;){const i=t[s];if(i===e)return s;if(3===i||6===i)n=!0;else{if(1===i||2===i){let e=t[++s];for(;"string"==typeof e;)e=t[++s];continue}if(4===i)break;if(0===i){s+=4;continue}}s+=n?1:2}return-1}return function(e,t){let n=e.indexOf(4);if(n>-1)for(n++;n<e.length;){const i=e[n];if("number"==typeof i)return-1;if(i===t)return n;n++}return-1}(t,e)}function zs(e,t,n=!1){for(let i=0;i<t.length;i++)if(Hs(e,t[i],n))return!0;return!1}function Ws(e,t){e:for(let n=0;n<t.length;n++){const i=t[n];if(e.length===i.length){for(let t=0;t<e.length;t++)if(e[t]!==i[t])continue e;return!0}}return!1}function Gs(e,t){return e?":not("+t.trim()+")":t}function Ks(e){let t=e[0],n=1,i=2,s="",o=!1;for(;n<e.length;){let r=e[n];if("string"==typeof r)if(2&i){const t=e[++n];s+="["+r+(t.length>0?'="'+t+'"':"")+"]"}else 8&i?s+="."+r:4&i&&(s+=" "+r);else""===s||Us(r)||(t+=Gs(o,s),s=""),i=r,o=o||!Us(i);n++}return""!==s&&(t+=Gs(o,s)),t}const Ys={};function Zs(e){Qs(Ft(),Tt(),nn()+e,jt())}function Qs(e,t,n,i){if(!i)if(3==(3&t[2])){const i=e.preOrderCheckHooks;null!==i&&an(t,i,n)}else{const i=e.preOrderHooks;null!==i&&ln(t,i,0,n)}sn(n)}function Js(e,t){return e<<17|t<<2}function Xs(e){return e>>17&32767}function eo(e){return 2|e}function to(e){return(131068&e)>>2}function no(e,t){return-131069&e|t<<2}function io(e){return 1|e}function so(e,t){const n=e.contentQueries;if(null!==n)for(let i=0;i<n.length;i+=2){const s=n[i],o=n[i+1];if(-1!==o){const n=e.data[o];Gt(s),n.contentQueries(2,t[o],o)}}}function oo(e,t,n,i,s,o,r,a,l,c){const u=t.blueprint.slice();return u[0]=s,u[2]=140|i,kt(u),u[3]=u[15]=e,u[8]=n,u[10]=r||e&&e[10],u[11]=a||e&&e[11],u[12]=l||e&&e[12]||null,u[9]=c||e&&e[9]||null,u[6]=o,u[16]=2==t.type?e[16]:u,u}function ro(e,t,n,i,s){let o=e.data[t];if(null===o)o=function(e,t,n,i,s){const o=Pt(),r=Lt(),a=e.data[t]=function(e,t,n,i,s,o){return{type:n,index:i,insertBeforeIndex:null,injectorIndex:t?t.injectorIndex:-1,directiveStart:-1,directiveEnd:-1,directiveStylingLast:-1,propertyBindings:null,flags:0,providerIndexes:0,value:s,attrs:o,mergedAttrs:null,localNames:null,initialInputs:void 0,inputs:null,outputs:null,tViews:null,next:null,projectionNext:null,child:null,parent:t,projection:null,styles:null,stylesWithoutHost:null,residualStyles:void 0,classes:null,classesWithoutHost:null,residualClasses:void 0,classBindings:0,styleBindings:0}}(0,r?o:o&&o.parent,n,t,i,s);return null===e.firstChild&&(e.firstChild=a),null!==o&&(r?null==o.child&&null!==a.parent&&(o.child=a):null===o.next&&(o.next=a)),a}(e,t,n,i,s),At.lFrame.inI18n&&(o.flags|=64);else if(64&o.type){o.type=n,o.value=i,o.attrs=s;const e=function(){const e=At.lFrame,t=e.currentTNode;return e.isParent?t:t.parent}();o.injectorIndex=null===e?-1:e.injectorIndex}return Vt(o,!0),o}function ao(e,t,n,i){if(0===n)return-1;const s=t.length;for(let o=0;o<n;o++)t.push(i),e.blueprint.push(i),e.data.push(null);return s}function lo(e,t,n){Zt(t);try{const i=e.viewQuery;null!==i&&No(1,i,n);const s=e.template;null!==s&&ho(e,t,s,1,n),e.firstCreatePass&&(e.firstCreatePass=!1),e.staticContentQueries&&so(e,t),e.staticViewQueries&&No(2,e.viewQuery,n);const o=e.components;null!==o&&function(e,t){for(let n=0;n<t.length;n++)Po(e,t[n])}(t,o)}catch(i){throw e.firstCreatePass&&(e.incompleteFirstPass=!0),i}finally{t[2]&=-5,tn()}}function co(e,t,n,i){const s=t[2];if(256==(256&s))return;Zt(t);const o=jt();try{kt(t),At.lFrame.bindingIndex=e.bindingStartIndex,null!==n&&ho(e,t,n,2,i);const r=3==(3&s);if(!o)if(r){const n=e.preOrderCheckHooks;null!==n&&an(t,n,null)}else{const n=e.preOrderHooks;null!==n&&ln(t,n,0,null),cn(t,0)}if(function(e){for(let t=ds(e);null!==t;t=ps(t)){if(!t[2])continue;const e=t[9];for(let t=0;t<e.length;t++){const n=e[t],i=n[3];0==(1024&n[2])&&xt(i,1),n[2]|=1024}}}(t),function(e){for(let t=ds(e);null!==t;t=ps(t))for(let e=Xe;e<t.length;e++){const n=t[e],i=n[1];St(n)&&co(i,n,i.template,n[8])}}(t),null!==e.contentQueries&&so(e,t),!o)if(r){const n=e.contentCheckHooks;null!==n&&an(t,n)}else{const n=e.contentHooks;null!==n&&ln(t,n,1),cn(t,1)}!function(e,t){const n=e.hostBindingOpCodes;if(null!==n)try{for(let e=0;e<n.length;e++){const i=n[e];if(i<0)sn(~i);else{const s=i,o=n[++e],r=n[++e];qt(o,s),r(2,t[s])}}}finally{sn(-1)}}(e,t);const a=e.components;null!==a&&function(e,t){for(let n=0;n<t.length;n++)Io(e,t[n])}(t,a);const l=e.viewQuery;if(null!==l&&No(2,l,i),!o)if(r){const n=e.viewCheckHooks;null!==n&&an(t,n)}else{const n=e.viewHooks;null!==n&&ln(t,n,2),cn(t,2)}!0===e.firstUpdatePass&&(e.firstUpdatePass=!1),o||(t[2]&=-73),1024&t[2]&&(t[2]&=-1025,xt(t[3],-1))}finally{tn()}}function uo(e,t,n,i){const s=t[10],o=!jt(),r=Dt(t);try{o&&!r&&s.begin&&s.begin(),r&&lo(e,t,i),co(e,t,n,i)}finally{o&&!r&&s.end&&s.end()}}function ho(e,t,n,i,s){const o=nn(),r=2&i;try{sn(-1),r&&t.length>Je&&Qs(e,t,Je,jt()),n(i,s)}finally{sn(o)}}function po(e,t,n){if(nt(t)){const i=t.directiveEnd;for(let s=t.directiveStart;s<i;s++){const t=e.data[s];t.contentQueries&&t.contentQueries(1,n[s],s)}}}function fo(e,t,n){Ot()&&(function(e,t,n,i){const s=n.directiveStart,o=n.directiveEnd;e.firstCreatePass||En(n,t),ts(i,t);const r=n.initialInputs;for(let a=s;a<o;a++){const i=e.data[a],o=ot(i);o&&Ao(t,n,i);const l=Rn(t,e,a,n);ts(l,t),null!==r&&Oo(0,a-s,l,i,0,r),o&&(_t(n.index,t)[8]=l)}}(e,t,n,yt(n,t)),128==(128&n.flags)&&function(e,t,n){const i=n.directiveStart,s=n.directiveEnd,o=n.index,r=At.lFrame.currentDirectiveIndex;try{sn(o);for(let n=i;n<s;n++){const i=e.data[n],s=t[n];zt(n),null===i.hostBindings&&0===i.hostVars&&null===i.hostAttrs||Do(i,s)}}finally{sn(-1),zt(r)}}(e,t,n))}function go(e,t,n=yt){const i=t.localNames;if(null!==i){let s=t.index+1;for(let o=0;o<i.length;o+=2){const r=i[o+1],a=-1===r?n(t,e):e[r];e[s++]=a}}}function mo(e){const t=e.tView;return null===t||t.incompleteFirstPass?e.tView=vo(1,null,e.template,e.decls,e.vars,e.directiveDefs,e.pipeDefs,e.viewQuery,e.schemas,e.consts):t}function vo(e,t,n,i,s,o,r,a,l,c){const u=Je+i,h=u+s,d=function(e,t){const n=[];for(let i=0;i<t;i++)n.push(i<e?null:Ys);return n}(u,h),p="function"==typeof c?c():c;return d[1]={type:e,blueprint:d,template:n,queries:null,viewQuery:a,declTNode:t,data:d.slice().fill(null,u),bindingStartIndex:u,expandoStartIndex:h,hostBindingOpCodes:null,firstCreatePass:!0,firstUpdatePass:!0,staticViewQueries:!1,staticContentQueries:!1,preOrderHooks:null,preOrderCheckHooks:null,contentHooks:null,contentCheckHooks:null,viewHooks:null,viewCheckHooks:null,destroyHooks:null,cleanup:null,contentQueries:null,components:null,directiveRegistry:"function"==typeof o?o():o,pipeRegistry:"function"==typeof r?r():r,firstChild:null,schemas:l,consts:p,incompleteFirstPass:!1}}function bo(e,t,n,i){const s=$o(t);null===n?s.push(i):(s.push(n),e.firstCreatePass&&Ho(e).push(i,s.length-1))}function yo(e,t,n){for(let i in e)if(e.hasOwnProperty(i)){const s=e[i];(n=null===n?{}:n).hasOwnProperty(i)?n[i].push(t,s):n[i]=[t,s]}return n}function Co(e,t,n,i,s,o,r,a){const l=yt(t,n);let c,u=t.inputs;var h;!a&&null!=u&&(c=u[i])?(qo(e,n,c,i,s),it(t)&&function(e,t){const n=_t(t,e);16&n[2]||(n[2]|=64)}(n,t.index)):3&t.type&&(i="class"===(h=i)?"className":"for"===h?"htmlFor":"formaction"===h?"formAction":"innerHtml"===h?"innerHTML":"readonly"===h?"readOnly":"tabindex"===h?"tabIndex":h,s=null!=r?r(s,t.value||"",i):s,gt(o)?o.setProperty(l,i,s):mn(i)||(l.setProperty?l.setProperty(i,s):l[i]=s))}function wo(e,t,n,i){let s=!1;if(Ot()){const o=function(e,t,n){const i=e.directiveRegistry;let s=null;if(i)for(let o=0;o<i.length;o++){const r=i[o];zs(n,r.selectors,!1)&&(s||(s=[]),On(En(n,t),e,r.type),ot(r)?(So(e,n),s.unshift(r)):s.push(r))}return s}(e,t,n),r=null===i?null:{"":-1};if(null!==o){s=!0,ko(n,e.data.length,o.length);for(let e=0;e<o.length;e++){const t=o[e];t.providersResolver&&t.providersResolver(t)}let i=!1,a=!1,l=ao(e,t,o.length,null);for(let s=0;s<o.length;s++){const c=o[s];n.mergedAttrs=vn(n.mergedAttrs,c.hostAttrs),xo(e,n,t,l,c),Eo(l,c,r),null!==c.contentQueries&&(n.flags|=8),null===c.hostBindings&&null===c.hostAttrs&&0===c.hostVars||(n.flags|=128);const u=c.type.prototype;!i&&(u.ngOnChanges||u.ngOnInit||u.ngDoCheck)&&((e.preOrderHooks||(e.preOrderHooks=[])).push(n.index),i=!0),a||!u.ngOnChanges&&!u.ngDoCheck||((e.preOrderCheckHooks||(e.preOrderCheckHooks=[])).push(n.index),a=!0),l++}!function(e,t){const n=t.directiveEnd,i=e.data,s=t.attrs,o=[];let r=null,a=null;for(let l=t.directiveStart;l<n;l++){const e=i[l],n=e.inputs,c=null===s||Bs(t)?null:To(n,s);o.push(c),r=yo(n,l,r),a=yo(e.outputs,l,a)}null!==r&&(r.hasOwnProperty("class")&&(t.flags|=16),r.hasOwnProperty("style")&&(t.flags|=32)),t.initialInputs=o,t.inputs=r,t.outputs=a}(e,n)}r&&function(e,t,n){if(t){const i=e.localNames=[];for(let e=0;e<t.length;e+=2){const s=n[t[e+1]];if(null==s)throw new ae("301",`Export of name '${t[e+1]}' not found!`);i.push(t[e],s)}}}(n,i,r)}return n.mergedAttrs=vn(n.mergedAttrs,n.attrs),s}function _o(e,t,n,i,s,o){const r=o.hostBindings;if(r){let n=e.hostBindingOpCodes;null===n&&(n=e.hostBindingOpCodes=[]);const o=~t.index;(function(e){let t=e.length;for(;t>0;){const n=e[--t];if("number"==typeof n&&n<0)return n}return 0})(n)!=o&&n.push(o),n.push(i,s,r)}}function Do(e,t){null!==e.hostBindings&&e.hostBindings(1,t)}function So(e,t){t.flags|=2,(e.components||(e.components=[])).push(t.index)}function Eo(e,t,n){if(n){if(t.exportAs)for(let i=0;i<t.exportAs.length;i++)n[t.exportAs[i]]=e;ot(t)&&(n[""]=e)}}function ko(e,t,n){e.flags|=1,e.directiveStart=t,e.directiveEnd=t+n,e.providerIndexes=t}function xo(e,t,n,i,s){e.data[i]=s;const o=s.factory||(s.factory=rt(s.type)),r=new pn(o,ot(s),null);e.blueprint[i]=r,n[i]=r,_o(e,t,0,i,ao(e,n,s.hostVars,Ys),s)}function Ao(e,t,n){const i=yt(t,e),s=mo(n),o=e[10],r=Vo(e,oo(e,s,null,n.onPush?64:16,i,t,o,o.createRenderer(i,n),null,null));e[t.index]=r}function Oo(e,t,n,i,s,o){const r=o[t];if(null!==r){const e=i.setInput;for(let t=0;t<r.length;){const s=r[t++],o=r[t++],a=r[t++];null!==e?i.setInput(n,a,s,o):n[o]=a}}}function To(e,t){let n=null,i=0;for(;i<t.length;){const s=t[i];if(0!==s)if(5!==s){if("number"==typeof s)break;e.hasOwnProperty(s)&&(null===n&&(n=[]),n.push(s,e[s],t[i+1])),i+=2}else i+=2;else i+=4}return n}function Fo(e,t,n,i){return new Array(e,!0,!1,t,null,0,i,n,null,null)}function Io(e,t){const n=_t(t,e);if(St(n)){const e=n[1];80&n[2]?co(e,n,e.template,n[8]):n[5]>0&&Mo(n)}}function Mo(e){for(let n=ds(e);null!==n;n=ps(n))for(let e=Xe;e<n.length;e++){const t=n[e];if(1024&t[2]){const e=t[1];co(e,t,e.template,t[8])}else t[5]>0&&Mo(t)}const t=e[1].components;if(null!==t)for(let n=0;n<t.length;n++){const i=_t(t[n],e);St(i)&&i[5]>0&&Mo(i)}}function Po(e,t){const n=_t(t,e),i=n[1];!function(e,t){for(let n=t.length;n<e.blueprint.length;n++)t.push(e.blueprint[n])}(i,n),lo(i,n,n[8])}function Vo(e,t){return e[13]?e[14][4]=t:e[13]=t,e[14]=t,t}function Lo(e){for(;e;){e[2]|=64;const t=hs(e);if(0!=(512&e[2])&&!t)return e;e=t}return null}function Ro(e,t,n){const i=t[10];i.begin&&i.begin();try{co(e,t,e.template,n)}catch(s){throw Uo(t,s),s}finally{i.end&&i.end()}}function jo(e){!function(e){for(let t=0;t<e.components.length;t++){const n=e.components[t],i=ns(n),s=i[1];uo(s,i,s.template,n)}}(e[8])}function No(e,t,n){Gt(0),t(e,n)}const Bo=(()=>Promise.resolve(null))();function $o(e){return e[7]||(e[7]=[])}function Ho(e){return e.cleanup||(e.cleanup=[])}function Uo(e,t){const n=e[9],i=n?n.get(rs,null):null;i&&i.handleError(t)}function qo(e,t,n,i,s){for(let o=0;o<n.length;){const r=n[o++],a=n[o++],l=t[r],c=e.data[r];null!==c.setInput?c.setInput(l,s,i,a):l[a]=s}}function zo(e,t,n){const i=bt(t,e);!function(e,t,n){gt(e)?e.setValue(t,n):t.textContent=n}(e[11],i,n)}function Wo(e,t,n){let i=n?e.styles:null,s=n?e.classes:null,o=0;if(null!==t)for(let r=0;r<t.length;r++){const e=t[r];"number"==typeof e?o=e:1==o?s=ne(s,e):2==o&&(i=ne(i,e+": "+t[++r]+";"))}n?e.styles=i:e.stylesWithoutHost=i,n?e.classes=s:e.classesWithoutHost=s}const Go=new zn("INJECTOR",-1);class Ko{get(e,t=ni){if(t===ni){const t=new Error(`NullInjectorError: No provider for ${te(e)}!`);throw t.name="NullInjectorError",t}return t}}const Yo=new zn("Set Injector scope."),Zo={},Qo={};let Jo;function Xo(){return void 0===Jo&&(Jo=new Ko),Jo}function er(e,t=null,n=null,i){return new tr(e,n,t||Xo(),i)}class tr{constructor(e,t,n,i=null){this.parent=n,this.records=new Map,this.injectorDefTypes=new Set,this.onDestroy=new Set,this._destroyed=!1;const s=[];t&&Yn(t,n=>this.processProvider(n,e,t)),Yn([e],e=>this.processInjectorType(e,[],s)),this.records.set(Go,sr(void 0,this));const o=this.records.get(Yo);this.scope=null!=o?o.value:null,this.source=i||("object"==typeof e?null:te(e))}get destroyed(){return this._destroyed}destroy(){this.assertNotDestroyed(),this._destroyed=!0;try{this.onDestroy.forEach(e=>e.ngOnDestroy())}finally{this.records.clear(),this.onDestroy.clear(),this.injectorDefTypes.clear()}}get(e,t=ni,n=Ce.Default){this.assertNotDestroyed();const i=ai(this);try{if(!(n&Ce.SkipSelf)){let t=this.records.get(e);if(void 0===t){const n=("function"==typeof(s=e)||"object"==typeof s&&s instanceof zn)&&pe(e);t=n&&this.injectableDefInScope(n)?sr(nr(e),Zo):null,this.records.set(e,t)}if(null!=t)return this.hydrate(e,t)}return(n&Ce.Self?Xo():this.parent).get(e,t=n&Ce.Optional&&t===ni?null:t)}catch(o){if("NullInjectorError"===o.name){if((o.ngTempTokenPath=o.ngTempTokenPath||[]).unshift(te(e)),i)throw o;return function(e,t,n,i){const s=e.ngTempTokenPath;throw t[si]&&s.unshift(t[si]),e.message=function(e,t,n,i=null){e=e&&"\n"===e.charAt(0)&&"\u0275"==e.charAt(1)?e.substr(2):e;let s=te(t);if(Array.isArray(t))s=t.map(te).join(" -> ");else if("object"==typeof t){let e=[];for(let n in t)if(t.hasOwnProperty(n)){let i=t[n];e.push(n+":"+("string"==typeof i?JSON.stringify(i):te(i)))}s=`{${e.join(", ")}}`}return`${n}${i?"("+i+")":""}[${s}]: ${e.replace(ii,"\n  ")}`}("\n"+e.message,s,n,i),e.ngTokenPath=s,e.ngTempTokenPath=null,e}(o,e,"R3InjectorError",this.source)}throw o}finally{ai(i)}var s}_resolveInjectorDefTypes(){this.injectorDefTypes.forEach(e=>this.get(e))}toString(){const e=[];return this.records.forEach((t,n)=>e.push(te(n))),`R3Injector[${e.join(", ")}]`}assertNotDestroyed(){if(this._destroyed)throw new Error("Injector has already been destroyed.")}processInjectorType(e,t,n){if(!(e=oe(e)))return!1;let i=ge(e);const s=null==i&&e.ngModule||void 0,o=void 0===s?e:s,r=-1!==n.indexOf(o);if(void 0!==s&&(i=ge(s)),null==i)return!1;if(null!=i.imports&&!r){let e;n.push(o);try{Yn(i.imports,i=>{this.processInjectorType(i,t,n)&&(void 0===e&&(e=[]),e.push(i))})}finally{}if(void 0!==e)for(let t=0;t<e.length;t++){const{ngModule:n,providers:i}=e[t];Yn(i,e=>this.processProvider(e,n,i||Me))}}this.injectorDefTypes.add(o);const a=rt(o)||(()=>new o);this.records.set(o,sr(a,Zo));const l=i.providers;if(null!=l&&!r){const t=e;Yn(l,e=>this.processProvider(e,t,l))}return void 0!==s&&void 0!==e.providers}processProvider(e,t,n){let i=rr(e=oe(e))?e:oe(e&&e.provide);const s=function(e,t,n){return or(e)?sr(void 0,e.useValue):sr(ir(e),Zo)}(e);if(rr(e)||!0!==e.multi)this.records.get(i);else{let t=this.records.get(i);t||(t=sr(void 0,Zo,!0),t.factory=()=>ui(t.multi),this.records.set(i,t)),i=e,t.multi.push(e)}this.records.set(i,s)}hydrate(e,t){var n;return t.value===Zo&&(t.value=Qo,t.value=t.factory()),"object"==typeof t.value&&t.value&&null!==(n=t.value)&&"object"==typeof n&&"function"==typeof n.ngOnDestroy&&this.onDestroy.add(t.value),t.value}injectableDefInScope(e){if(!e.providedIn)return!1;const t=oe(e.providedIn);return"string"==typeof t?"any"===t||t===this.scope:this.injectorDefTypes.has(t)}}function nr(e){const t=pe(e),n=null!==t?t.factory:rt(e);if(null!==n)return n;if(e instanceof zn)throw new Error(`Token ${te(e)} is missing a \u0275prov definition.`);if(e instanceof Function)return function(e){const t=e.length;if(t>0){const n=Jn(t,"?");throw new Error(`Can't resolve all parameters for ${te(e)}: (${n.join(", ")}).`)}const n=function(e){const t=e&&(e[me]||e[be]);if(t){const n=function(e){if(e.hasOwnProperty("name"))return e.name;const t=(""+e).match(/^function\s*([^\s(]+)/);return null===t?"":t[1]}(e);return console.warn(`DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${n}" class.`),t}return null}(e);return null!==n?()=>n.factory(e):()=>new e}(e);throw new Error("unreachable")}function ir(e,t,n){let i;if(rr(e)){const t=oe(e);return rt(t)||nr(t)}if(or(e))i=()=>oe(e.useValue);else if((s=e)&&s.useFactory)i=()=>e.useFactory(...ui(e.deps||[]));else if(function(e){return!(!e||!e.useExisting)}(e))i=()=>ci(oe(e.useExisting));else{const t=oe(e&&(e.useClass||e.provide));if(!function(e){return!!e.deps}(e))return rt(t)||nr(t);i=()=>new t(...ui(e.deps))}var s;return i}function sr(e,t,n=!1){return{factory:e,value:t,multi:n?[]:void 0}}function or(e){return null!==e&&"object"==typeof e&&oi in e}function rr(e){return"function"==typeof e}const ar=function(e,t,n){return function(e,t=null,n=null,i){const s=er(e,t,n,i);return s._resolveInjectorDefTypes(),s}({name:n},t,e,n)};let lr=(()=>{class e{static create(e,t){return Array.isArray(e)?ar(e,t,""):ar(e.providers,e.parent,e.name||"")}}return e.THROW_IF_NOT_FOUND=ni,e.NULL=new Ko,e.\u0275prov=he({token:e,providedIn:"any",factory:()=>ci(Go)}),e.__NG_ELEMENT_ID__=-1,e})();function cr(e,t){rn(ns(e)[1],Mt())}function ur(e){let t=Object.getPrototypeOf(e.type.prototype).constructor,n=!0;const i=[e];for(;t;){let s;if(ot(e))s=t.\u0275cmp||t.\u0275dir;else{if(t.\u0275cmp)throw new Error("Directives cannot inherit Components");s=t.\u0275dir}if(s){if(n){i.push(s);const t=e;t.inputs=hr(e.inputs),t.declaredInputs=hr(e.declaredInputs),t.outputs=hr(e.outputs);const n=s.hostBindings;n&&fr(e,n);const o=s.viewQuery,r=s.contentQueries;if(o&&dr(e,o),r&&pr(e,r),ee(e.inputs,s.inputs),ee(e.declaredInputs,s.declaredInputs),ee(e.outputs,s.outputs),ot(s)&&s.data.animation){const t=e.data;t.animation=(t.animation||[]).concat(s.data.animation)}}const t=s.features;if(t)for(let i=0;i<t.length;i++){const s=t[i];s&&s.ngInherit&&s(e),s===ur&&(n=!1)}}t=Object.getPrototypeOf(t)}!function(e){let t=0,n=null;for(let i=e.length-1;i>=0;i--){const s=e[i];s.hostVars=t+=s.hostVars,s.hostAttrs=vn(s.hostAttrs,n=vn(n,s.hostAttrs))}}(i)}function hr(e){return e===Ie?{}:e===Me?[]:e}function dr(e,t){const n=e.viewQuery;e.viewQuery=n?(e,i)=>{t(e,i),n(e,i)}:t}function pr(e,t){const n=e.contentQueries;e.contentQueries=n?(e,i,s)=>{t(e,i,s),n(e,i,s)}:t}function fr(e,t){const n=e.hostBindings;e.hostBindings=n?(e,i)=>{t(e,i),n(e,i)}:t}let gr=null;function mr(){if(!gr){const e=Fe.Symbol;if(e&&e.iterator)gr=e.iterator;else{const e=Object.getOwnPropertyNames(Map.prototype);for(let t=0;t<e.length;++t){const n=e[t];"entries"!==n&&"size"!==n&&Map.prototype[n]===Map.prototype.entries&&(gr=n)}}}return gr}class vr{constructor(e){this.wrapped=e}static wrap(e){return new vr(e)}static unwrap(e){return vr.isWrapped(e)?e.wrapped:e}static isWrapped(e){return e instanceof vr}}function br(e){return!!yr(e)&&(Array.isArray(e)||!(e instanceof Map)&&mr()in e)}function yr(e){return null!==e&&("function"==typeof e||"object"==typeof e)}function Cr(e,t,n){return e[t]=n}function wr(e,t,n){return!Object.is(e[t],n)&&(e[t]=n,!0)}function _r(e,t,n,i){const s=wr(e,t,n);return wr(e,t+1,i)||s}function Dr(e,t,n,i){const s=Tt();return wr(s,Ht(),t)&&(Ft(),function(e,t,n,i,s,o){const r=yt(e,t);!function(e,t,n,i,s,o,r){if(null==o)gt(e)?e.removeAttribute(t,s,n):t.removeAttribute(s);else{const a=null==r?le(o):r(o,i||"",s);gt(e)?e.setAttribute(t,s,a,n):n?t.setAttributeNS(n,s,a):t.setAttribute(s,a)}}(t[11],r,o,e.value,n,i,s)}(on(),s,e,t,n,i)),Dr}function Sr(e,t,n,i){return wr(e,Ht(),n)?t+le(n)+i:Ys}function Er(e,t,n,i,s,o){const r=_r(e,$t(),n,s);return Ut(2),r?t+le(n)+i+le(s)+o:Ys}function kr(e,t,n,i,s,o,r,a){const l=Tt(),c=Ft(),u=e+Je,h=c.firstCreatePass?function(e,t,n,i,s,o,r,a,l){const c=t.consts,u=ro(t,e,4,r||null,Et(c,a));wo(t,n,u,Et(c,l)),rn(t,u);const h=u.tViews=vo(2,u,i,s,o,t.directiveRegistry,t.pipeRegistry,null,t.schemas,c);return null!==t.queries&&(t.queries.template(t,u),h.queries=t.queries.embeddedTView(u)),u}(u,c,l,t,n,i,s,o,r):c.data[u];Vt(h,!1);const d=l[11].createComment("");As(c,l,d,h),ts(d,l),Vo(l,l[u]=Fo(d,l,d,h)),st(h)&&fo(c,l,h),null!=r&&go(l,h,a)}function xr(e){return wt(At.lFrame.contextLView,Je+e)}function Ar(e,t=Ce.Default){const n=Tt();return null===n?ci(e,t):In(Mt(),n,oe(e),t)}function Or(e,t,n){const i=Tt();return wr(i,Ht(),t)&&Co(Ft(),on(),i,e,t,i[11],n,!1),Or}function Tr(e,t,n,i,s){const o=s?"class":"style";qo(e,n,t.inputs[o],o,i)}function Fr(e,t,n,i){const s=Tt(),o=Ft(),r=Je+e,a=s[11],l=s[r]=ms(a,t,At.lFrame.currentNamespace),c=o.firstCreatePass?function(e,t,n,i,s,o,r){const a=t.consts,l=ro(t,e,2,s,Et(a,o));return wo(t,n,l,Et(a,r)),null!==l.attrs&&Wo(l,l.attrs,!1),null!==l.mergedAttrs&&Wo(l,l.mergedAttrs,!0),null!==t.queries&&t.queries.elementStart(t,l),l}(r,o,s,0,t,n,i):o.data[r];Vt(c,!0);const u=c.mergedAttrs;null!==u&&fn(a,l,u);const h=c.classes;null!==h&&Ls(a,l,h);const d=c.styles;null!==d&&Vs(a,l,d),64!=(64&c.flags)&&As(o,s,l,c),0===At.lFrame.elementDepthCount&&ts(l,s),At.lFrame.elementDepthCount++,st(c)&&(fo(o,s,c),po(o,c,s)),null!==i&&go(s,c)}function Ir(){let e=Mt();Lt()?Rt():(e=e.parent,Vt(e,!1));const t=e;At.lFrame.elementDepthCount--;const n=Ft();n.firstCreatePass&&(rn(n,e),nt(e)&&n.queries.elementEnd(e)),null!=t.classesWithoutHost&&function(e){return 0!=(16&e.flags)}(t)&&Tr(n,t,Tt(),t.classesWithoutHost,!0),null!=t.stylesWithoutHost&&function(e){return 0!=(32&e.flags)}(t)&&Tr(n,t,Tt(),t.stylesWithoutHost,!1)}function Mr(e,t,n,i){Fr(e,t,n,i),Ir()}function Pr(e,t,n){const i=Tt(),s=Ft(),o=e+Je,r=s.firstCreatePass?function(e,t,n,i,s){const o=t.consts,r=Et(o,i),a=ro(t,e,8,"ng-container",r);return null!==r&&Wo(a,r,!0),wo(t,n,a,Et(o,s)),null!==t.queries&&t.queries.elementStart(t,a),a}(o,s,i,t,n):s.data[o];Vt(r,!0);const a=i[o]=i[11].createComment("");As(s,i,a,r),ts(a,i),st(r)&&(fo(s,i,r),po(s,r,i)),null!=n&&go(i,r)}function Vr(){let e=Mt();const t=Ft();Lt()?Rt():(e=e.parent,Vt(e,!1)),t.firstCreatePass&&(rn(t,e),nt(e)&&t.queries.elementEnd(e))}function Lr(e,t,n){Pr(e,t,n),Vr()}function Rr(){return Tt()}function jr(e){return!!e&&"function"==typeof e.then}const Nr=function(e){return!!e&&"function"==typeof e.subscribe};function Br(e,t,n,i){const s=Tt(),o=Ft(),r=Mt();return function(e,t,n,i,s,o,r,a){const l=st(i),c=e.firstCreatePass&&Ho(e),u=$o(t);let h=!0;if(3&i.type||a){const d=yt(i,t),p=a?a(d):d,f=u.length,g=a?e=>a(vt(e[i.index])):i.index;if(gt(n)){let r=null;if(!a&&l&&(r=function(e,t,n,i){const s=e.cleanup;if(null!=s)for(let o=0;o<s.length-1;o+=2){const e=s[o];if(e===n&&s[o+1]===i){const e=t[7],n=s[o+2];return e.length>n?e[n]:null}"string"==typeof e&&(o+=2)}return null}(e,t,s,i.index)),null!==r)(r.__ngLastListenerFn__||r).__ngNextListenerFn__=o,r.__ngLastListenerFn__=o,h=!1;else{o=Hr(i,t,0,o,!1);const e=n.listen(p,s,o);u.push(o,e),c&&c.push(s,g,f,f+1)}}else o=Hr(i,t,0,o,!0),p.addEventListener(s,o,r),u.push(o),c&&c.push(s,g,f,r)}else o=Hr(i,t,0,o,!1);const d=i.outputs;let p;if(h&&null!==d&&(p=d[s])){const e=p.length;if(e)for(let n=0;n<e;n+=2){const e=t[p[n]][p[n+1]].subscribe(o),r=u.length;u.push(o,e),c&&c.push(s,i.index,r,-(r+1))}}}(o,s,s[11],r,e,t,!!n,i),Br}function $r(e,t,n,i){try{return!1!==n(i)}catch(s){return Uo(e,s),!1}}function Hr(e,t,n,i,s){return function n(o){if(o===Function)return i;const r=2&e.flags?_t(e.index,t):t;0==(32&t[2])&&Lo(r);let a=$r(t,0,i,o),l=n.__ngNextListenerFn__;for(;l;)a=$r(t,0,l,o)&&a,l=l.__ngNextListenerFn__;return s&&!1===a&&(o.preventDefault(),o.returnValue=!1),a}}function Ur(e=1){return function(e){return(At.lFrame.contextLView=function(e,t){for(;e>0;)t=t[15],e--;return t}(e,At.lFrame.contextLView))[8]}(e)}function qr(e,t){let n=null;const i=function(e){const t=e.attrs;if(null!=t){const e=t.indexOf(5);if(0==(1&e))return t[e+1]}return null}(e);for(let s=0;s<t.length;s++){const o=t[s];if("*"!==o){if(null===i?zs(e,o,!0):Ws(i,o))return s}else n=s}return n}function zr(e){const t=Tt()[16][6];if(!t.projection){const n=t.projection=Jn(e?e.length:1,null),i=n.slice();let s=t.child;for(;null!==s;){const t=e?qr(s,e):0;null!==t&&(i[t]?i[t].projectionNext=s:n[t]=s,i[t]=s),s=s.next}}}function Wr(e,t=0,n){const i=Tt(),s=Ft(),o=ro(s,Je+e,16,null,n||null);null===o.projection&&(o.projection=t),Rt(),64!=(64&o.flags)&&function(e,t,n){Ps(t[11],0,t,n,ws(e,n,t),ks(n.parent||t[6],n,t))}(s,i,o)}function Gr(e,t,n,i,s){const o=e[n+1],r=null===t;let a=i?Xs(o):to(o),l=!1;for(;0!==a&&(!1===l||r);){const n=e[a+1];Kr(e[a],t)&&(l=!0,e[a+1]=i?io(n):eo(n)),a=i?Xs(n):to(n)}l&&(e[n+1]=i?eo(o):io(o))}function Kr(e,t){return null===e||null==t||(Array.isArray(e)?e[1]:e)===t||!(!Array.isArray(e)||"string"!=typeof t)&&ti(e,t)>=0}const Yr={textEnd:0,key:0,keyEnd:0,value:0,valueEnd:0};function Zr(e){return e.substring(Yr.key,Yr.keyEnd)}function Qr(e,t){const n=Yr.textEnd;return n===t?-1:(t=Yr.keyEnd=function(e,t,n){for(;t<n&&e.charCodeAt(t)>32;)t++;return t}(e,Yr.key=t,n),Jr(e,t,n))}function Jr(e,t,n){for(;t<n&&e.charCodeAt(t)<=32;)t++;return t}function Xr(e,t,n){return ia(e,t,n,!1),Xr}function ea(e,t){return ia(e,t,null,!0),ea}function ta(e){sa(Xn,na,e,!0)}function na(e,t){for(let n=function(e){return function(e){Yr.key=0,Yr.keyEnd=0,Yr.value=0,Yr.valueEnd=0,Yr.textEnd=e.length}(e),Qr(e,Jr(e,0,Yr.textEnd))}(t);n>=0;n=Qr(t,n))Xn(e,Zr(t),!0)}function ia(e,t,n,i){const s=Tt(),o=Ft(),r=Ut(2);o.firstUpdatePass&&ra(o,e,r,i),t!==Ys&&wr(s,r,t)&&ca(o,o.data[nn()],s,s[11],e,s[r+1]=function(e,t){return null==e||("string"==typeof t?e+=t:"object"==typeof e&&(e=te(Ei(e)))),e}(t,n),i,r)}function sa(e,t,n,i){const s=Ft(),o=Ut(2);s.firstUpdatePass&&ra(s,null,o,i);const r=Tt();if(n!==Ys&&wr(r,o,n)){const a=s.data[nn()];if(da(a,i)&&!oa(s,o)){let e=i?a.classesWithoutHost:a.stylesWithoutHost;null!==e&&(n=ne(e,n||"")),Tr(s,a,r,n,i)}else!function(e,t,n,i,s,o,r,a){s===Ys&&(s=Me);let l=0,c=0,u=0<s.length?s[0]:null,h=0<o.length?o[0]:null;for(;null!==u||null!==h;){const d=l<s.length?s[l+1]:void 0,p=c<o.length?o[c+1]:void 0;let f,g=null;u===h?(l+=2,c+=2,d!==p&&(g=h,f=p)):null===h||null!==u&&u<h?(l+=2,g=u):(c+=2,g=h,f=p),null!==g&&ca(e,t,n,i,g,f,r,a),u=l<s.length?s[l]:null,h=c<o.length?o[c]:null}}(s,a,r,r[11],r[o+1],r[o+1]=function(e,t,n){if(null==n||""===n)return Me;const i=[],s=Ei(n);if(Array.isArray(s))for(let o=0;o<s.length;o++)e(i,s[o],!0);else if("object"==typeof s)for(const o in s)s.hasOwnProperty(o)&&e(i,o,s[o]);else"string"==typeof s&&t(i,s);return i}(e,t,n),i,o)}}function oa(e,t){return t>=e.expandoStartIndex}function ra(e,t,n,i){const s=e.data;if(null===s[n+1]){const o=s[nn()],r=oa(e,n);da(o,i)&&null===t&&!r&&(t=!1),t=function(e,t,n,i){const s=function(e){const t=At.lFrame.currentDirectiveIndex;return-1===t?null:e[t]}(e);let o=i?t.residualClasses:t.residualStyles;if(null===s)0===(i?t.classBindings:t.styleBindings)&&(n=la(n=aa(null,e,t,n,i),t.attrs,i),o=null);else{const r=t.directiveStylingLast;if(-1===r||e[r]!==s)if(n=aa(s,e,t,n,i),null===o){let n=function(e,t,n){const i=n?t.classBindings:t.styleBindings;if(0!==to(i))return e[Xs(i)]}(e,t,i);void 0!==n&&Array.isArray(n)&&(n=aa(null,e,t,n[1],i),n=la(n,t.attrs,i),function(e,t,n,i){e[Xs(n?t.classBindings:t.styleBindings)]=i}(e,t,i,n))}else o=function(e,t,n){let i;const s=t.directiveEnd;for(let o=1+t.directiveStylingLast;o<s;o++)i=la(i,e[o].hostAttrs,n);return la(i,t.attrs,n)}(e,t,i)}return void 0!==o&&(i?t.residualClasses=o:t.residualStyles=o),n}(s,o,t,i),function(e,t,n,i,s,o){let r=o?t.classBindings:t.styleBindings,a=Xs(r),l=to(r);e[i]=n;let c,u=!1;if(Array.isArray(n)){const e=n;c=e[1],(null===c||ti(e,c)>0)&&(u=!0)}else c=n;if(s)if(0!==l){const t=Xs(e[a+1]);e[i+1]=Js(t,a),0!==t&&(e[t+1]=no(e[t+1],i)),e[a+1]=131071&e[a+1]|i<<17}else e[i+1]=Js(a,0),0!==a&&(e[a+1]=no(e[a+1],i)),a=i;else e[i+1]=Js(l,0),0===a?a=i:e[l+1]=no(e[l+1],i),l=i;u&&(e[i+1]=eo(e[i+1])),Gr(e,c,i,!0),Gr(e,c,i,!1),function(e,t,n,i,s){const o=s?e.residualClasses:e.residualStyles;null!=o&&"string"==typeof t&&ti(o,t)>=0&&(n[i+1]=io(n[i+1]))}(t,c,e,i,o),r=Js(a,l),o?t.classBindings=r:t.styleBindings=r}(s,o,t,n,r,i)}}function aa(e,t,n,i,s){let o=null;const r=n.directiveEnd;let a=n.directiveStylingLast;for(-1===a?a=n.directiveStart:a++;a<r&&(o=t[a],i=la(i,o.hostAttrs,s),o!==e);)a++;return null!==e&&(n.directiveStylingLast=a),i}function la(e,t,n){const i=n?1:2;let s=-1;if(null!==t)for(let o=0;o<t.length;o++){const r=t[o];"number"==typeof r?s=r:s===i&&(Array.isArray(e)||(e=void 0===e?[]:["",e]),Xn(e,r,!!n||t[++o]))}return void 0===e?null:e}function ca(e,t,n,i,s,o,r,a){if(!(3&t.type))return;const l=e.data,c=l[a+1];ha(1==(1&c)?ua(l,t,n,s,to(c),r):void 0)||(ha(o)||2==(2&c)&&(o=ua(l,null,n,s,a,r)),function(e,t,n,i,s){const o=gt(e);if(t)s?o?e.addClass(n,i):n.classList.add(i):o?e.removeClass(n,i):n.classList.remove(i);else{let t=-1===i.indexOf("-")?void 0:cs.DashCase;if(null==s)o?e.removeStyle(n,i,t):n.style.removeProperty(i);else{const r="string"==typeof s&&s.endsWith("!important");r&&(s=s.slice(0,-10),t|=cs.Important),o?e.setStyle(n,i,s,t):n.style.setProperty(i,s,r?"important":"")}}}(i,r,bt(nn(),n),s,o))}function ua(e,t,n,i,s,o){const r=null===t;let a;for(;s>0;){const t=e[s],o=Array.isArray(t),l=o?t[1]:t,c=null===l;let u=n[s+1];u===Ys&&(u=c?Me:void 0);let h=c?ei(u,i):l===i?u:void 0;if(o&&!ha(h)&&(h=ei(t,i)),ha(h)&&(a=h,r))return a;const d=e[s+1];s=r?Xs(d):to(d)}if(null!==t){let e=o?t.residualClasses:t.residualStyles;null!=e&&(a=ei(e,i))}return a}function ha(e){return void 0!==e}function da(e,t){return 0!=(e.flags&(t?16:32))}function pa(e,t=""){const n=Tt(),i=Ft(),s=e+Je,o=i.firstCreatePass?ro(i,s,1,t,null):i.data[s],r=n[s]=function(e,t){return gt(e)?e.createText(t):e.createTextNode(t)}(n[11],t);As(i,n,r,o),Vt(o,!1)}function fa(e){return ga("",e,""),fa}function ga(e,t,n){const i=Tt(),s=Sr(i,e,t,n);return s!==Ys&&zo(i,nn(),s),ga}function ma(e,t,n,i,s){const o=Tt(),r=Er(o,e,t,n,i,s);return r!==Ys&&zo(o,nn(),r),ma}function va(e,t,n){sa(Xn,na,Sr(Tt(),e,t,n),!0)}function ba(e,t,n,i,s){sa(Xn,na,Er(Tt(),e,t,n,i,s),!0)}function ya(e,t,n){const i=Tt();return wr(i,Ht(),t)&&Co(Ft(),on(),i,e,t,i[11],n,!0),ya}const Ca=void 0;var wa=["en",[["a","p"],["AM","PM"],Ca],[["AM","PM"],Ca,Ca],[["S","M","T","W","T","F","S"],["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],["Su","Mo","Tu","We","Th","Fr","Sa"]],Ca,[["J","F","M","A","M","J","J","A","S","O","N","D"],["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],["January","February","March","April","May","June","July","August","September","October","November","December"]],Ca,[["B","A"],["BC","AD"],["Before Christ","Anno Domini"]],0,[6,0],["M/d/yy","MMM d, y","MMMM d, y","EEEE, MMMM d, y"],["h:mm a","h:mm:ss a","h:mm:ss a z","h:mm:ss a zzzz"],["{1}, {0}",Ca,"{1} 'at' {0}",Ca],[".",",",";","%","+","-","E","\xd7","\u2030","\u221e","NaN",":"],["#,##0.###","#,##0%","\xa4#,##0.00","#E0"],"USD","$","US Dollar",{},"ltr",function(e){let t=Math.floor(Math.abs(e)),n=e.toString().replace(/^[^.]*\.?/,"").length;return 1===t&&0===n?1:5}];let _a={};function Da(e){const t=function(e){return e.toLowerCase().replace(/_/g,"-")}(e);let n=Sa(t);if(n)return n;const i=t.split("-")[0];if(n=Sa(i),n)return n;if("en"===i)return wa;throw new Error(`Missing locale data for the locale "${e}".`)}function Sa(e){return e in _a||(_a[e]=Fe.ng&&Fe.ng.common&&Fe.ng.common.locales&&Fe.ng.common.locales[e]),_a[e]}var Ea=function(e){return e[e.LocaleId=0]="LocaleId",e[e.DayPeriodsFormat=1]="DayPeriodsFormat",e[e.DayPeriodsStandalone=2]="DayPeriodsStandalone",e[e.DaysFormat=3]="DaysFormat",e[e.DaysStandalone=4]="DaysStandalone",e[e.MonthsFormat=5]="MonthsFormat",e[e.MonthsStandalone=6]="MonthsStandalone",e[e.Eras=7]="Eras",e[e.FirstDayOfWeek=8]="FirstDayOfWeek",e[e.WeekendRange=9]="WeekendRange",e[e.DateFormat=10]="DateFormat",e[e.TimeFormat=11]="TimeFormat",e[e.DateTimeFormat=12]="DateTimeFormat",e[e.NumberSymbols=13]="NumberSymbols",e[e.NumberFormats=14]="NumberFormats",e[e.CurrencyCode=15]="CurrencyCode",e[e.CurrencySymbol=16]="CurrencySymbol",e[e.CurrencyName=17]="CurrencyName",e[e.Currencies=18]="Currencies",e[e.Directionality=19]="Directionality",e[e.PluralCase=20]="PluralCase",e[e.ExtraData=21]="ExtraData",e}({});const ka="en-US";let xa=ka;function Aa(e){var t,n;n="Expected localeId to be defined",null==(t=e)&&function(e,t,n,i){throw new Error(`ASSERTION ERROR: ${e} [Expected=> null != ${t} <=Actual]`)}(n,t),"string"==typeof e&&(xa=e.toLowerCase().replace(/_/g,"-"))}function Oa(e,t,n,i,s){if(e=oe(e),Array.isArray(e))for(let o=0;o<e.length;o++)Oa(e[o],t,n,i,s);else{const o=Ft(),r=Tt();let a=rr(e)?e:oe(e.provide),l=ir(e);const c=Mt(),u=1048575&c.providerIndexes,h=c.directiveStart,d=c.providerIndexes>>20;if(rr(e)||!e.multi){const i=new pn(l,s,Ar),p=Ia(a,t,s?u:u+d,h);-1===p?(On(En(c,r),o,a),Ta(o,e,t.length),t.push(a),c.directiveStart++,c.directiveEnd++,s&&(c.providerIndexes+=1048576),n.push(i),r.push(i)):(n[p]=i,r[p]=i)}else{const p=Ia(a,t,u+d,h),f=Ia(a,t,u,u+d),g=p>=0&&n[p],m=f>=0&&n[f];if(s&&!m||!s&&!g){On(En(c,r),o,a);const u=function(e,t,n,i,s){const o=new pn(e,n,Ar);return o.multi=[],o.index=t,o.componentProviders=0,Fa(o,s,i&&!n),o}(s?Pa:Ma,n.length,s,i,l);!s&&m&&(n[f].providerFactory=u),Ta(o,e,t.length,0),t.push(a),c.directiveStart++,c.directiveEnd++,s&&(c.providerIndexes+=1048576),n.push(u),r.push(u)}else Ta(o,e,p>-1?p:f,Fa(n[s?f:p],l,!s&&i));!s&&i&&m&&n[f].componentProviders++}}}function Ta(e,t,n,i){const s=rr(t);if(s||t.useClass){const o=(t.useClass||t).prototype.ngOnDestroy;if(o){const r=e.destroyHooks||(e.destroyHooks=[]);if(!s&&t.multi){const e=r.indexOf(n);-1===e?r.push(n,[i,o]):r[e+1].push(i,o)}else r.push(n,o)}}}function Fa(e,t,n){return n&&e.componentProviders++,e.multi.push(t)-1}function Ia(e,t,n,i){for(let s=n;s<i;s++)if(t[s]===e)return s;return-1}function Ma(e,t,n,i){return Va(this.multi,[])}function Pa(e,t,n,i){const s=this.multi;let o;if(this.providerFactory){const e=this.providerFactory.componentProviders,t=Rn(n,n[1],this.providerFactory.index,i);o=t.slice(0,e),Va(s,o);for(let n=e;n<t.length;n++)o.push(t[n])}else o=[],Va(s,o);return o}function Va(e,t){for(let n=0;n<e.length;n++)t.push((0,e[n])());return t}function La(e,t=[]){return n=>{n.providersResolver=(n,i)=>function(e,t,n){const i=Ft();if(i.firstCreatePass){const s=ot(e);Oa(n,i.data,i.blueprint,s,!0),Oa(t,i.data,i.blueprint,s,!1)}}(n,i?i(e):e,t)}}class Ra{}class ja{resolveComponentFactory(e){throw function(e){const t=Error(`No component factory found for ${te(e)}. Did you add it to @NgModule.entryComponents?`);return t.ngComponent=e,t}(e)}}let Na=(()=>{class e{}return e.NULL=new ja,e})();function Ba(...e){}function $a(e,t){return new Ua(yt(e,t))}const Ha=function(){return $a(Mt(),Tt())};let Ua=(()=>{class e{constructor(e){this.nativeElement=e}}return e.__NG_ELEMENT_ID__=Ha,e})();function qa(e){return e instanceof Ua?e.nativeElement:e}class za{}let Wa=(()=>{class e{}return e.__NG_ELEMENT_ID__=()=>Ga(),e})();const Ga=function(){const e=Tt(),t=_t(Mt().index,e);return function(e){return e[11]}(et(t)?t:e)};let Ka=(()=>{class e{}return e.\u0275prov=he({token:e,providedIn:"root",factory:()=>null}),e})();class Ya{constructor(e){this.full=e,this.major=e.split(".")[0],this.minor=e.split(".")[1],this.patch=e.split(".").slice(2).join(".")}}const Za=new Ya("12.0.1");class Qa{constructor(){}supports(e){return br(e)}create(e){return new Xa(e)}}const Ja=(e,t)=>t;class Xa{constructor(e){this.length=0,this._linkedRecords=null,this._unlinkedRecords=null,this._previousItHead=null,this._itHead=null,this._itTail=null,this._additionsHead=null,this._additionsTail=null,this._movesHead=null,this._movesTail=null,this._removalsHead=null,this._removalsTail=null,this._identityChangesHead=null,this._identityChangesTail=null,this._trackByFn=e||Ja}forEachItem(e){let t;for(t=this._itHead;null!==t;t=t._next)e(t)}forEachOperation(e){let t=this._itHead,n=this._removalsHead,i=0,s=null;for(;t||n;){const o=!n||t&&t.currentIndex<il(n,i,s)?t:n,r=il(o,i,s),a=o.currentIndex;if(o===n)i--,n=n._nextRemoved;else if(t=t._next,null==o.previousIndex)i++;else{s||(s=[]);const e=r-i,t=a-i;if(e!=t){for(let n=0;n<e;n++){const i=n<s.length?s[n]:s[n]=0,o=i+n;t<=o&&o<e&&(s[n]=i+1)}s[o.previousIndex]=t-e}}r!==a&&e(o,r,a)}}forEachPreviousItem(e){let t;for(t=this._previousItHead;null!==t;t=t._nextPrevious)e(t)}forEachAddedItem(e){let t;for(t=this._additionsHead;null!==t;t=t._nextAdded)e(t)}forEachMovedItem(e){let t;for(t=this._movesHead;null!==t;t=t._nextMoved)e(t)}forEachRemovedItem(e){let t;for(t=this._removalsHead;null!==t;t=t._nextRemoved)e(t)}forEachIdentityChange(e){let t;for(t=this._identityChangesHead;null!==t;t=t._nextIdentityChange)e(t)}diff(e){if(null==e&&(e=[]),!br(e))throw new Error(`Error trying to diff '${te(e)}'. Only arrays and iterables are allowed`);return this.check(e)?this:null}onDestroy(){}check(e){this._reset();let t,n,i,s=this._itHead,o=!1;if(Array.isArray(e)){this.length=e.length;for(let t=0;t<this.length;t++)n=e[t],i=this._trackByFn(t,n),null!==s&&Object.is(s.trackById,i)?(o&&(s=this._verifyReinsertion(s,n,i,t)),Object.is(s.item,n)||this._addIdentityChange(s,n)):(s=this._mismatch(s,n,i,t),o=!0),s=s._next}else t=0,function(e,t){if(Array.isArray(e))for(let n=0;n<e.length;n++)t(e[n]);else{const n=e[mr()]();let i;for(;!(i=n.next()).done;)t(i.value)}}(e,e=>{i=this._trackByFn(t,e),null!==s&&Object.is(s.trackById,i)?(o&&(s=this._verifyReinsertion(s,e,i,t)),Object.is(s.item,e)||this._addIdentityChange(s,e)):(s=this._mismatch(s,e,i,t),o=!0),s=s._next,t++}),this.length=t;return this._truncate(s),this.collection=e,this.isDirty}get isDirty(){return null!==this._additionsHead||null!==this._movesHead||null!==this._removalsHead||null!==this._identityChangesHead}_reset(){if(this.isDirty){let e;for(e=this._previousItHead=this._itHead;null!==e;e=e._next)e._nextPrevious=e._next;for(e=this._additionsHead;null!==e;e=e._nextAdded)e.previousIndex=e.currentIndex;for(this._additionsHead=this._additionsTail=null,e=this._movesHead;null!==e;e=e._nextMoved)e.previousIndex=e.currentIndex;this._movesHead=this._movesTail=null,this._removalsHead=this._removalsTail=null,this._identityChangesHead=this._identityChangesTail=null}}_mismatch(e,t,n,i){let s;return null===e?s=this._itTail:(s=e._prev,this._remove(e)),null!==(e=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null))?(Object.is(e.item,t)||this._addIdentityChange(e,t),this._reinsertAfter(e,s,i)):null!==(e=null===this._linkedRecords?null:this._linkedRecords.get(n,i))?(Object.is(e.item,t)||this._addIdentityChange(e,t),this._moveAfter(e,s,i)):e=this._addAfter(new el(t,n),s,i),e}_verifyReinsertion(e,t,n,i){let s=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null);return null!==s?e=this._reinsertAfter(s,e._prev,i):e.currentIndex!=i&&(e.currentIndex=i,this._addToMoves(e,i)),e}_truncate(e){for(;null!==e;){const t=e._next;this._addToRemovals(this._unlink(e)),e=t}null!==this._unlinkedRecords&&this._unlinkedRecords.clear(),null!==this._additionsTail&&(this._additionsTail._nextAdded=null),null!==this._movesTail&&(this._movesTail._nextMoved=null),null!==this._itTail&&(this._itTail._next=null),null!==this._removalsTail&&(this._removalsTail._nextRemoved=null),null!==this._identityChangesTail&&(this._identityChangesTail._nextIdentityChange=null)}_reinsertAfter(e,t,n){null!==this._unlinkedRecords&&this._unlinkedRecords.remove(e);const i=e._prevRemoved,s=e._nextRemoved;return null===i?this._removalsHead=s:i._nextRemoved=s,null===s?this._removalsTail=i:s._prevRemoved=i,this._insertAfter(e,t,n),this._addToMoves(e,n),e}_moveAfter(e,t,n){return this._unlink(e),this._insertAfter(e,t,n),this._addToMoves(e,n),e}_addAfter(e,t,n){return this._insertAfter(e,t,n),this._additionsTail=null===this._additionsTail?this._additionsHead=e:this._additionsTail._nextAdded=e,e}_insertAfter(e,t,n){const i=null===t?this._itHead:t._next;return e._next=i,e._prev=t,null===i?this._itTail=e:i._prev=e,null===t?this._itHead=e:t._next=e,null===this._linkedRecords&&(this._linkedRecords=new nl),this._linkedRecords.put(e),e.currentIndex=n,e}_remove(e){return this._addToRemovals(this._unlink(e))}_unlink(e){null!==this._linkedRecords&&this._linkedRecords.remove(e);const t=e._prev,n=e._next;return null===t?this._itHead=n:t._next=n,null===n?this._itTail=t:n._prev=t,e}_addToMoves(e,t){return e.previousIndex===t||(this._movesTail=null===this._movesTail?this._movesHead=e:this._movesTail._nextMoved=e),e}_addToRemovals(e){return null===this._unlinkedRecords&&(this._unlinkedRecords=new nl),this._unlinkedRecords.put(e),e.currentIndex=null,e._nextRemoved=null,null===this._removalsTail?(this._removalsTail=this._removalsHead=e,e._prevRemoved=null):(e._prevRemoved=this._removalsTail,this._removalsTail=this._removalsTail._nextRemoved=e),e}_addIdentityChange(e,t){return e.item=t,this._identityChangesTail=null===this._identityChangesTail?this._identityChangesHead=e:this._identityChangesTail._nextIdentityChange=e,e}}class el{constructor(e,t){this.item=e,this.trackById=t,this.currentIndex=null,this.previousIndex=null,this._nextPrevious=null,this._prev=null,this._next=null,this._prevDup=null,this._nextDup=null,this._prevRemoved=null,this._nextRemoved=null,this._nextAdded=null,this._nextMoved=null,this._nextIdentityChange=null}}class tl{constructor(){this._head=null,this._tail=null}add(e){null===this._head?(this._head=this._tail=e,e._nextDup=null,e._prevDup=null):(this._tail._nextDup=e,e._prevDup=this._tail,e._nextDup=null,this._tail=e)}get(e,t){let n;for(n=this._head;null!==n;n=n._nextDup)if((null===t||t<=n.currentIndex)&&Object.is(n.trackById,e))return n;return null}remove(e){const t=e._prevDup,n=e._nextDup;return null===t?this._head=n:t._nextDup=n,null===n?this._tail=t:n._prevDup=t,null===this._head}}class nl{constructor(){this.map=new Map}put(e){const t=e.trackById;let n=this.map.get(t);n||(n=new tl,this.map.set(t,n)),n.add(e)}get(e,t){const n=this.map.get(e);return n?n.get(e,t):null}remove(e){const t=e.trackById;return this.map.get(t).remove(e)&&this.map.delete(t),e}get isEmpty(){return 0===this.map.size}clear(){this.map.clear()}}function il(e,t,n){const i=e.previousIndex;if(null===i)return i;let s=0;return n&&i<n.length&&(s=n[i]),i+t+s}class sl{constructor(){}supports(e){return e instanceof Map||yr(e)}create(){return new ol}}class ol{constructor(){this._records=new Map,this._mapHead=null,this._appendAfter=null,this._previousMapHead=null,this._changesHead=null,this._changesTail=null,this._additionsHead=null,this._additionsTail=null,this._removalsHead=null,this._removalsTail=null}get isDirty(){return null!==this._additionsHead||null!==this._changesHead||null!==this._removalsHead}forEachItem(e){let t;for(t=this._mapHead;null!==t;t=t._next)e(t)}forEachPreviousItem(e){let t;for(t=this._previousMapHead;null!==t;t=t._nextPrevious)e(t)}forEachChangedItem(e){let t;for(t=this._changesHead;null!==t;t=t._nextChanged)e(t)}forEachAddedItem(e){let t;for(t=this._additionsHead;null!==t;t=t._nextAdded)e(t)}forEachRemovedItem(e){let t;for(t=this._removalsHead;null!==t;t=t._nextRemoved)e(t)}diff(e){if(e){if(!(e instanceof Map||yr(e)))throw new Error(`Error trying to diff '${te(e)}'. Only maps and objects are allowed`)}else e=new Map;return this.check(e)?this:null}onDestroy(){}check(e){this._reset();let t=this._mapHead;if(this._appendAfter=null,this._forEach(e,(e,n)=>{if(t&&t.key===n)this._maybeAddToChanges(t,e),this._appendAfter=t,t=t._next;else{const i=this._getOrCreateRecordForKey(n,e);t=this._insertBeforeOrAppend(t,i)}}),t){t._prev&&(t._prev._next=null),this._removalsHead=t;for(let e=t;null!==e;e=e._nextRemoved)e===this._mapHead&&(this._mapHead=null),this._records.delete(e.key),e._nextRemoved=e._next,e.previousValue=e.currentValue,e.currentValue=null,e._prev=null,e._next=null}return this._changesTail&&(this._changesTail._nextChanged=null),this._additionsTail&&(this._additionsTail._nextAdded=null),this.isDirty}_insertBeforeOrAppend(e,t){if(e){const n=e._prev;return t._next=e,t._prev=n,e._prev=t,n&&(n._next=t),e===this._mapHead&&(this._mapHead=t),this._appendAfter=e,e}return this._appendAfter?(this._appendAfter._next=t,t._prev=this._appendAfter):this._mapHead=t,this._appendAfter=t,null}_getOrCreateRecordForKey(e,t){if(this._records.has(e)){const n=this._records.get(e);this._maybeAddToChanges(n,t);const i=n._prev,s=n._next;return i&&(i._next=s),s&&(s._prev=i),n._next=null,n._prev=null,n}const n=new rl(e);return this._records.set(e,n),n.currentValue=t,this._addToAdditions(n),n}_reset(){if(this.isDirty){let e;for(this._previousMapHead=this._mapHead,e=this._previousMapHead;null!==e;e=e._next)e._nextPrevious=e._next;for(e=this._changesHead;null!==e;e=e._nextChanged)e.previousValue=e.currentValue;for(e=this._additionsHead;null!=e;e=e._nextAdded)e.previousValue=e.currentValue;this._changesHead=this._changesTail=null,this._additionsHead=this._additionsTail=null,this._removalsHead=null}}_maybeAddToChanges(e,t){Object.is(t,e.currentValue)||(e.previousValue=e.currentValue,e.currentValue=t,this._addToChanges(e))}_addToAdditions(e){null===this._additionsHead?this._additionsHead=this._additionsTail=e:(this._additionsTail._nextAdded=e,this._additionsTail=e)}_addToChanges(e){null===this._changesHead?this._changesHead=this._changesTail=e:(this._changesTail._nextChanged=e,this._changesTail=e)}_forEach(e,t){e instanceof Map?e.forEach(t):Object.keys(e).forEach(n=>t(e[n],n))}}class rl{constructor(e){this.key=e,this.previousValue=null,this.currentValue=null,this._nextPrevious=null,this._next=null,this._prev=null,this._nextAdded=null,this._nextRemoved=null,this._nextChanged=null}}function al(){return new ll([new Qa])}let ll=(()=>{class e{constructor(e){this.factories=e}static create(t,n){if(null!=n){const e=n.factories.slice();t=t.concat(e)}return new e(t)}static extend(t){return{provide:e,useFactory:n=>e.create(t,n||al()),deps:[[e,new fi,new pi]]}}find(e){const t=this.factories.find(t=>t.supports(e));if(null!=t)return t;throw new Error(`Cannot find a differ supporting object '${e}' of type '${n=e,n.name||typeof n}'`);var n}}return e.\u0275prov=he({token:e,providedIn:"root",factory:al}),e})();function cl(){return new ul([new sl])}let ul=(()=>{class e{constructor(e){this.factories=e}static create(t,n){if(n){const e=n.factories.slice();t=t.concat(e)}return new e(t)}static extend(t){return{provide:e,useFactory:n=>e.create(t,n||cl()),deps:[[e,new fi,new pi]]}}find(e){const t=this.factories.find(t=>t.supports(e));if(t)return t;throw new Error(`Cannot find a differ supporting object '${e}'`)}}return e.\u0275prov=he({token:e,providedIn:"root",factory:cl}),e})();function hl(e,t,n,i,s=!1){for(;null!==n;){const o=t[n.index];if(null!==o&&i.push(vt(o)),tt(o))for(let e=Xe;e<o.length;e++){const t=o[e],n=t[1].firstChild;null!==n&&hl(t[1],t,n,i)}const r=n.type;if(8&r)hl(e,t,n.child,i);else if(32&r){const e=us(n,t);let s;for(;s=e();)i.push(s)}else if(16&r){const e=Ts(t,n);if(Array.isArray(e))i.push(...e);else{const n=hs(t[16]);hl(n[1],n,e,i,!0)}}n=s?n.projectionNext:n.next}return i}class dl{constructor(e,t){this._lView=e,this._cdRefInjectingView=t,this._appRef=null,this._attachedToViewContainer=!1}get rootNodes(){const e=this._lView,t=e[1];return hl(t,e,t.firstChild,[])}get context(){return this._lView[8]}set context(e){this._lView[8]=e}get destroyed(){return 256==(256&this._lView[2])}destroy(){if(this._appRef)this._appRef.detachView(this);else if(this._attachedToViewContainer){const e=this._lView[3];if(tt(e)){const t=e[8],n=t?t.indexOf(this):-1;n>-1&&(bs(e,n),Qn(t,n))}this._attachedToViewContainer=!1}ys(this._lView[1],this._lView)}onDestroy(e){bo(this._lView[1],this._lView,null,e)}markForCheck(){Lo(this._cdRefInjectingView||this._lView)}detach(){this._lView[2]&=-129}reattach(){this._lView[2]|=128}detectChanges(){Ro(this._lView[1],this._lView,this.context)}checkNoChanges(){!function(e,t,n){Nt(!0);try{Ro(e,t,n)}finally{Nt(!1)}}(this._lView[1],this._lView,this.context)}attachToViewContainerRef(){if(this._appRef)throw new Error("This view is already attached directly to the ApplicationRef!");this._attachedToViewContainer=!0}detachFromAppRef(){var e;this._appRef=null,Ms(this._lView[1],e=this._lView,e[11],2,null,null)}attachToAppRef(e){if(this._attachedToViewContainer)throw new Error("This view is already attached to a ViewContainer!");this._appRef=e}}class pl extends dl{constructor(e){super(e),this._view=e}detectChanges(){jo(this._view)}checkNoChanges(){!function(e){Nt(!0);try{jo(e)}finally{Nt(!1)}}(this._view)}get context(){return null}}const fl=function(e){return function(e,t,n){if(it(e)&&!n){const n=_t(e.index,t);return new dl(n,n)}return 47&e.type?new dl(t[16],t):null}(Mt(),Tt(),16==(16&e))};let gl=(()=>{class e{}return e.__NG_ELEMENT_ID__=fl,e})();const ml=[new sl],vl=new ll([new Qa]),bl=new ul(ml),yl=function(){return Dl(Mt(),Tt())};let Cl=(()=>{class e{}return e.__NG_ELEMENT_ID__=yl,e})();const wl=Cl,_l=class extends wl{constructor(e,t,n){super(),this._declarationLView=e,this._declarationTContainer=t,this.elementRef=n}createEmbeddedView(e){const t=this._declarationTContainer.tViews,n=oo(this._declarationLView,t,e,16,null,t.declTNode,null,null,null,null);n[17]=this._declarationLView[this._declarationTContainer.index];const i=this._declarationLView[19];return null!==i&&(n[19]=i.createEmbeddedView(t)),lo(t,n,e),new dl(n)}};function Dl(e,t){return 4&e.type?new _l(t,e,$a(e,t)):null}class Sl{}class El{}const kl=function(){return Il(Mt(),Tt())};let xl=(()=>{class e{}return e.__NG_ELEMENT_ID__=kl,e})();const Al=xl,Ol=class extends Al{constructor(e,t,n){super(),this._lContainer=e,this._hostTNode=t,this._hostLView=n}get element(){return $a(this._hostTNode,this._hostLView)}get injector(){return new Bn(this._hostTNode,this._hostLView)}get parentInjector(){const e=An(this._hostTNode,this._hostLView);if(yn(e)){const t=wn(e,this._hostLView),n=Cn(e);return new Bn(t[1].data[n+8],t)}return new Bn(null,this._hostLView)}clear(){for(;this.length>0;)this.remove(this.length-1)}get(e){const t=Tl(this._lContainer);return null!==t&&t[e]||null}get length(){return this._lContainer.length-Xe}createEmbeddedView(e,t,n){const i=e.createEmbeddedView(t||{});return this.insert(i,n),i}createComponent(e,t,n,i,s){const o=n||this.parentInjector;if(!s&&null==e.ngModule&&o){const e=o.get(Sl,null);e&&(s=e)}const r=e.create(o,i,void 0,s);return this.insert(r.hostView,t),r}insert(e,t){const n=e._lView,i=n[1];if(tt(n[3])){const t=this.indexOf(e);if(-1!==t)this.detach(t);else{const t=n[3],i=new Ol(t,t[6],t[3]);i.detach(i.indexOf(e))}}const s=this._adjustIndex(t),o=this._lContainer;!function(e,t,n,i){const s=Xe+i,o=n.length;i>0&&(n[s-1][4]=t),i<o-Xe?(t[4]=n[s],Zn(n,Xe+i,t)):(n.push(t),t[4]=null),t[3]=n;const r=t[17];null!==r&&n!==r&&function(e,t){const n=e[9];t[16]!==t[3][3][16]&&(e[2]=!0),null===n?e[9]=[t]:n.push(t)}(r,t);const a=t[19];null!==a&&a.insertView(e),t[2]|=128}(i,n,o,s);const r=Fs(s,o),a=n[11],l=Es(a,o[7]);return null!==l&&function(e,t,n,i,s,o){i[0]=s,i[6]=t,Ms(e,i,n,1,s,o)}(i,o[6],a,n,l,r),e.attachToViewContainerRef(),Zn(Fl(o),s,e),e}move(e,t){return this.insert(e,t)}indexOf(e){const t=Tl(this._lContainer);return null!==t?t.indexOf(e):-1}remove(e){const t=this._adjustIndex(e,-1),n=bs(this._lContainer,t);n&&(Qn(Fl(this._lContainer),t),ys(n[1],n))}detach(e){const t=this._adjustIndex(e,-1),n=bs(this._lContainer,t);return n&&null!=Qn(Fl(this._lContainer),t)?new dl(n):null}_adjustIndex(e,t=0){return null==e?this.length+t:e}};function Tl(e){return e[8]}function Fl(e){return e[8]||(e[8]=[])}function Il(e,t){let n;const i=t[e.index];if(tt(i))n=i;else{let s;if(8&e.type)s=vt(i);else{const n=t[11];s=n.createComment("");const i=yt(e,t);_s(n,Es(n,i),s,function(e,t){return gt(e)?e.nextSibling(t):t.nextSibling}(n,i),!1)}t[e.index]=n=Fo(i,t,s,e),Vo(t,n)}return new Ol(n,e,t)}const Ml={};class Pl extends Na{constructor(e){super(),this.ngModule=e}resolveComponentFactory(e){const t=Ze(e);return new Rl(t,this.ngModule)}}function Vl(e){const t=[];for(let n in e)e.hasOwnProperty(n)&&t.push({propName:e[n],templateName:n});return t}const Ll=new zn("SCHEDULER_TOKEN",{providedIn:"root",factory:()=>as});class Rl extends Ra{constructor(e,t){super(),this.componentDef=e,this.ngModule=t,this.componentType=e.type,this.selector=e.selectors.map(Ks).join(","),this.ngContentSelectors=e.ngContentSelectors?e.ngContentSelectors:[],this.isBoundToModule=!!t}get inputs(){return Vl(this.componentDef.inputs)}get outputs(){return Vl(this.componentDef.outputs)}create(e,t,n,i){const s=(i=i||this.ngModule)?function(e,t){return{get:(n,i,s)=>{const o=e.get(n,Ml,s);return o!==Ml||i===Ml?o:t.get(n,i,s)}}}(e,i.injector):e,o=s.get(za,mt),r=s.get(Ka,null),a=o.createRenderer(null,this.componentDef),l=this.componentDef.selectors[0][0]||"div",c=n?function(e,t,n){if(gt(e))return e.selectRootElement(t,n===ke.ShadowDom);let i="string"==typeof t?e.querySelector(t):t;return i.textContent="",i}(a,n,this.componentDef.encapsulation):ms(o.createRenderer(null,this.componentDef),l,function(e){const t=e.toLowerCase();return"svg"===t?"http://www.w3.org/2000/svg":"math"===t?"http://www.w3.org/1998/MathML/":null}(l)),u=this.componentDef.onPush?576:528,h={components:[],scheduler:as,clean:Bo,playerHandler:null,flags:0},d=vo(0,null,null,1,0,null,null,null,null,null),p=oo(null,d,h,u,null,null,o,a,r,s);let f,g;Zt(p);try{const e=function(e,t,n,i,s,o){const r=n[1];n[20]=e;const a=ro(r,20,2,"#host",null),l=a.mergedAttrs=t.hostAttrs;null!==l&&(Wo(a,l,!0),null!==e&&(fn(s,e,l),null!==a.classes&&Ls(s,e,a.classes),null!==a.styles&&Vs(s,e,a.styles)));const c=i.createRenderer(e,t),u=oo(n,mo(t),null,t.onPush?64:16,n[20],a,i,c,null,null);return r.firstCreatePass&&(On(En(a,n),r,t.type),So(r,a),ko(a,n.length,1)),Vo(n,u),n[20]=u}(c,this.componentDef,p,o,a);if(c)if(n)fn(a,c,["ng-version",Za.full]);else{const{attrs:e,classes:t}=function(e){const t=[],n=[];let i=1,s=2;for(;i<e.length;){let o=e[i];if("string"==typeof o)2===s?""!==o&&t.push(o,e[++i]):8===s&&n.push(o);else{if(!Us(s))break;s=o}i++}return{attrs:t,classes:n}}(this.componentDef.selectors[0]);e&&fn(a,c,e),t&&t.length>0&&Ls(a,c,t.join(" "))}if(g=Ct(d,Je),void 0!==t){const e=g.projection=[];for(let n=0;n<this.ngContentSelectors.length;n++){const i=t[n];e.push(null!=i?Array.from(i):null)}}f=function(e,t,n,i,s){const o=n[1],r=function(e,t,n){const i=Mt();e.firstCreatePass&&(n.providersResolver&&n.providersResolver(n),xo(e,i,t,ao(e,t,1,null),n));const s=Rn(t,e,i.directiveStart,i);ts(s,t);const o=yt(i,t);return o&&ts(o,t),s}(o,n,t);if(i.components.push(r),e[8]=r,s&&s.forEach(e=>e(r,t)),t.contentQueries){const e=Mt();t.contentQueries(1,r,e.directiveStart)}const a=Mt();return!o.firstCreatePass||null===t.hostBindings&&null===t.hostAttrs||(sn(a.index),_o(n[1],a,0,a.directiveStart,a.directiveEnd,t),Do(t,r)),r}(e,this.componentDef,p,h,[cr]),lo(d,p,null)}finally{tn()}return new jl(this.componentType,f,$a(g,p),p,g)}}class jl extends class{}{constructor(e,t,n,i,s){super(),this.location=n,this._rootLView=i,this._tNode=s,this.instance=t,this.hostView=this.changeDetectorRef=new pl(i),this.componentType=e}get injector(){return new Bn(this._tNode,this._rootLView)}destroy(){this.hostView.destroy()}onDestroy(e){this.hostView.onDestroy(e)}}const Nl=new Map;class Bl extends Sl{constructor(e,t){super(),this._parent=t,this._bootstrapComponents=[],this.injector=this,this.destroyCbs=[],this.componentFactoryResolver=new Pl(this);const n=Qe(e),i=e[je]||null;i&&Aa(i),this._bootstrapComponents=ls(n.bootstrap),this._r3Injector=er(e,t,[{provide:Sl,useValue:this},{provide:Na,useValue:this.componentFactoryResolver}],te(e)),this._r3Injector._resolveInjectorDefTypes(),this.instance=this.get(e)}get(e,t=lr.THROW_IF_NOT_FOUND,n=Ce.Default){return e===lr||e===Sl||e===Go?this:this._r3Injector.get(e,t,n)}destroy(){const e=this._r3Injector;!e.destroyed&&e.destroy(),this.destroyCbs.forEach(e=>e()),this.destroyCbs=null}onDestroy(e){this.destroyCbs.push(e)}}class $l extends El{constructor(e){super(),this.moduleType=e,null!==Qe(e)&&function(e){const t=new Set;!function e(n){const i=Qe(n,!0),s=i.id;null!==s&&(function(e,t,n){if(t&&t!==n)throw new Error(`Duplicate module registered for ${e} - ${te(t)} vs ${te(t.name)}`)}(s,Nl.get(s),n),Nl.set(s,n));const o=ls(i.imports);for(const r of o)t.has(r)||(t.add(r),e(r))}(e)}(e)}create(e){return new Bl(this.moduleType,e)}}function Hl(e,t,n){const i=Bt()+e,s=Tt();return s[i]===Ys?Cr(s,i,n?t.call(n):t()):function(e,t){return e[t]}(s,i)}function Ul(e,t,n,i){return Wl(Tt(),Bt(),e,t,n,i)}function ql(e,t,n,i,s){return Gl(Tt(),Bt(),e,t,n,i,s)}function zl(e,t){const n=e[t];return n===Ys?void 0:n}function Wl(e,t,n,i,s,o){const r=t+n;return wr(e,r,s)?Cr(e,r+1,o?i.call(o,s):i(s)):zl(e,r+1)}function Gl(e,t,n,i,s,o,r){const a=t+n;return _r(e,a,s,o)?Cr(e,a+2,r?i.call(r,s,o):i(s,o)):zl(e,a+2)}function Kl(e,t){const n=Ft();let i;const s=e+Je;n.firstCreatePass?(i=function(e,t){if(t)for(let n=t.length-1;n>=0;n--){const i=t[n];if(e===i.name)return i}throw new ae("302",`The pipe '${e}' could not be found!`)}(t,n.pipeRegistry),n.data[s]=i,i.onDestroy&&(n.destroyHooks||(n.destroyHooks=[])).push(s,i.onDestroy)):i=n.data[s];const o=i.factory||(i.factory=rt(i.type)),r=_e(Ar);try{const e=Dn(!1),t=o();return Dn(e),function(e,t,n,i){n>=e.data.length&&(e.data[n]=null,e.blueprint[n]=null),t[n]=i}(n,Tt(),s,t),t}finally{_e(r)}}function Yl(e,t,n,i){const s=e+Je,o=Tt(),r=wt(o,s);return Jl(o,Ql(o,s)?Gl(o,Bt(),t,r.transform,n,i,r):r.transform(n,i))}function Zl(e,t,n,i,s,o){const r=e+Je,a=Tt(),l=wt(a,r);return Jl(a,Ql(a,r)?function(e,t,n,i,s,o,r,a,l){const c=t+n;return function(e,t,n,i,s,o){const r=_r(e,t,n,i);return _r(e,t+2,s,o)||r}(e,c,s,o,r,a)?Cr(e,c+4,l?i.call(l,s,o,r,a):i(s,o,r,a)):zl(e,c+4)}(a,Bt(),t,l.transform,n,i,s,o,l):l.transform(n,i,s,o))}function Ql(e,t){return e[1].data[t].pure}function Jl(e,t){return vr.isWrapped(t)&&(t=vr.unwrap(t),e[$t()]=Ys),t}function Xl(e){return t=>{setTimeout(e,void 0,t)}}const ec=class extends D{constructor(e=!1){super(),this.__isAsync=e}emit(e){super.next(e)}subscribe(e,t,n){var i,s,o;let r=e,a=t||(()=>null),l=n;if(e&&"object"==typeof e){const t=e;r=null===(i=t.next)||void 0===i?void 0:i.bind(t),a=null===(s=t.error)||void 0===s?void 0:s.bind(t),l=null===(o=t.complete)||void 0===o?void 0:o.bind(t)}this.__isAsync&&(a=Xl(a),r&&(r=Xl(r)),l&&(l=Xl(l)));const c=super.subscribe({next:r,error:a,complete:l});return e instanceof h&&e.add(c),c}};function tc(){return this._results[mr()]()}class nc{constructor(e=!1){this._emitDistinctChangesOnly=e,this.dirty=!0,this._results=[],this._changesDetected=!1,this._changes=null,this.length=0,this.first=void 0,this.last=void 0;const t=mr(),n=nc.prototype;n[t]||(n[t]=tc)}get changes(){return this._changes||(this._changes=new ec)}get(e){return this._results[e]}map(e){return this._results.map(e)}filter(e){return this._results.filter(e)}find(e){return this._results.find(e)}reduce(e,t){return this._results.reduce(e,t)}forEach(e){this._results.forEach(e)}some(e){return this._results.some(e)}toArray(){return this._results.slice()}toString(){return this._results.toString()}reset(e,t){const n=this;n.dirty=!1;const i=Kn(e);(this._changesDetected=!function(e,t,n){if(e.length!==t.length)return!1;for(let i=0;i<e.length;i++){let s=e[i],o=t[i];if(n&&(s=n(s),o=n(o)),o!==s)return!1}return!0}(n._results,i,t))&&(n._results=i,n.length=i.length,n.last=i[this.length-1],n.first=i[0])}notifyOnChanges(){!this._changes||!this._changesDetected&&this._emitDistinctChangesOnly||this._changes.emit(this)}setDirty(){this.dirty=!0}destroy(){this.changes.complete(),this.changes.unsubscribe()}}class ic{constructor(e){this.queryList=e,this.matches=null}clone(){return new ic(this.queryList)}setDirty(){this.queryList.setDirty()}}class sc{constructor(e=[]){this.queries=e}createEmbeddedView(e){const t=e.queries;if(null!==t){const n=null!==e.contentQueries?e.contentQueries[0]:t.length,i=[];for(let e=0;e<n;e++){const n=t.getByIndex(e);i.push(this.queries[n.indexInDeclarationView].clone())}return new sc(i)}return null}insertView(e){this.dirtyQueriesWithMatches(e)}detachView(e){this.dirtyQueriesWithMatches(e)}dirtyQueriesWithMatches(e){for(let t=0;t<this.queries.length;t++)null!==bc(e,t).matches&&this.queries[t].setDirty()}}class oc{constructor(e,t,n=null){this.predicate=e,this.flags=t,this.read=n}}class rc{constructor(e=[]){this.queries=e}elementStart(e,t){for(let n=0;n<this.queries.length;n++)this.queries[n].elementStart(e,t)}elementEnd(e){for(let t=0;t<this.queries.length;t++)this.queries[t].elementEnd(e)}embeddedTView(e){let t=null;for(let n=0;n<this.length;n++){const i=null!==t?t.length:0,s=this.getByIndex(n).embeddedTView(e,i);s&&(s.indexInDeclarationView=n,null!==t?t.push(s):t=[s])}return null!==t?new rc(t):null}template(e,t){for(let n=0;n<this.queries.length;n++)this.queries[n].template(e,t)}getByIndex(e){return this.queries[e]}get length(){return this.queries.length}track(e){this.queries.push(e)}}class ac{constructor(e,t=-1){this.metadata=e,this.matches=null,this.indexInDeclarationView=-1,this.crossesNgTemplate=!1,this._appliesToNextNode=!0,this._declarationNodeIndex=t}elementStart(e,t){this.isApplyingToNode(t)&&this.matchTNode(e,t)}elementEnd(e){this._declarationNodeIndex===e.index&&(this._appliesToNextNode=!1)}template(e,t){this.elementStart(e,t)}embeddedTView(e,t){return this.isApplyingToNode(e)?(this.crossesNgTemplate=!0,this.addMatch(-e.index,t),new ac(this.metadata)):null}isApplyingToNode(e){if(this._appliesToNextNode&&1!=(1&this.metadata.flags)){const t=this._declarationNodeIndex;let n=e.parent;for(;null!==n&&8&n.type&&n.index!==t;)n=n.parent;return t===(null!==n?n.index:-1)}return this._appliesToNextNode}matchTNode(e,t){const n=this.metadata.predicate;if(Array.isArray(n))for(let i=0;i<n.length;i++){const s=n[i];this.matchTNodeWithReadOption(e,t,lc(t,s)),this.matchTNodeWithReadOption(e,t,Ln(t,e,s,!1,!1))}else n===Cl?4&t.type&&this.matchTNodeWithReadOption(e,t,-1):this.matchTNodeWithReadOption(e,t,Ln(t,e,n,!1,!1))}matchTNodeWithReadOption(e,t,n){if(null!==n){const i=this.metadata.read;if(null!==i)if(i===Ua||i===xl||i===Cl&&4&t.type)this.addMatch(t.index,-2);else{const n=Ln(t,e,i,!1,!1);null!==n&&this.addMatch(t.index,n)}else this.addMatch(t.index,n)}}addMatch(e,t){null===this.matches?this.matches=[e,t]:this.matches.push(e,t)}}function lc(e,t){const n=e.localNames;if(null!==n)for(let i=0;i<n.length;i+=2)if(n[i]===t)return n[i+1];return null}function cc(e,t,n,i){return-1===n?function(e,t){return 11&e.type?$a(e,t):4&e.type?Dl(e,t):null}(t,e):-2===n?function(e,t,n){return n===Ua?$a(t,e):n===Cl?Dl(t,e):n===xl?Il(t,e):void 0}(e,t,i):Rn(e,e[1],n,t)}function uc(e,t,n,i){const s=t[19].queries[i];if(null===s.matches){const i=e.data,o=n.matches,r=[];for(let e=0;e<o.length;e+=2){const s=o[e];r.push(s<0?null:cc(t,i[s],o[e+1],n.metadata.read))}s.matches=r}return s.matches}function hc(e,t,n,i){const s=e.queries.getByIndex(n),o=s.matches;if(null!==o){const r=uc(e,t,s,n);for(let e=0;e<o.length;e+=2){const n=o[e];if(n>0)i.push(r[e/2]);else{const s=o[e+1],r=t[-n];for(let e=Xe;e<r.length;e++){const t=r[e];t[17]===t[3]&&hc(t[1],t,s,i)}if(null!==r[9]){const e=r[9];for(let t=0;t<e.length;t++){const n=e[t];hc(n[1],n,s,i)}}}}}return i}function dc(e){const t=Tt(),n=Ft(),i=Wt();Gt(i+1);const s=bc(n,i);if(e.dirty&&Dt(t)===(2==(2&s.metadata.flags))){if(null===s.matches)e.reset([]);else{const o=s.crossesNgTemplate?hc(n,t,i,[]):uc(n,t,s,i);e.reset(o,qa),e.notifyOnChanges()}return!0}return!1}function pc(e,t,n){const i=Ft();i.firstCreatePass&&(vc(i,new oc(e,t,n),-1),2==(2&t)&&(i.staticViewQueries=!0)),mc(i,Tt(),t)}function fc(e,t,n,i){const s=Ft();if(s.firstCreatePass){const o=Mt();vc(s,new oc(t,n,i),o.index),function(e,t){const n=e.contentQueries||(e.contentQueries=[]);t!==(n.length?n[n.length-1]:-1)&&n.push(e.queries.length-1,t)}(s,e),2==(2&n)&&(s.staticContentQueries=!0)}mc(s,Tt(),n)}function gc(){return e=Tt(),t=Wt(),e[19].queries[t].queryList;var e,t}function mc(e,t,n){const i=new nc(4==(4&n));bo(e,t,i,i.destroy),null===t[19]&&(t[19]=new sc),t[19].queries.push(new ic(i))}function vc(e,t,n){null===e.queries&&(e.queries=new rc),e.queries.track(new ac(t,n))}function bc(e,t){return e.queries.getByIndex(t)}function yc(e,t){return Dl(e,t)}const Cc=new zn("Application Initializer");let wc=(()=>{class e{constructor(e){this.appInits=e,this.resolve=Ba,this.reject=Ba,this.initialized=!1,this.done=!1,this.donePromise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}runInitializers(){if(this.initialized)return;const e=[],t=()=>{this.done=!0,this.resolve()};if(this.appInits)for(let n=0;n<this.appInits.length;n++){const t=this.appInits[n]();if(jr(t))e.push(t);else if(Nr(t)){const n=new Promise((e,n)=>{t.subscribe({complete:e,error:n})});e.push(n)}}Promise.all(e).then(()=>{t()}).catch(e=>{this.reject(e)}),0===e.length&&t(),this.initialized=!0}}return e.\u0275fac=function(t){return new(t||e)(ci(Cc,8))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})();const _c=new zn("AppId"),Dc={provide:_c,useFactory:function(){return`${Sc()}${Sc()}${Sc()}`},deps:[]};function Sc(){return String.fromCharCode(97+Math.floor(25*Math.random()))}const Ec=new zn("Platform Initializer"),kc=new zn("Platform ID"),xc=new zn("appBootstrapListener");let Ac=(()=>{class e{log(e){console.log(e)}warn(e){console.warn(e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})();const Oc=new zn("LocaleId"),Tc=new zn("DefaultCurrencyCode");class Fc{constructor(e,t){this.ngModuleFactory=e,this.componentFactories=t}}const Ic=function(e){return new $l(e)},Mc=Ic,Pc=function(e){return Promise.resolve(Ic(e))},Vc=function(e){const t=Ic(e),n=ls(Qe(e).declarations).reduce((e,t)=>{const n=Ze(t);return n&&e.push(new Rl(n)),e},[]);return new Fc(t,n)},Lc=Vc,Rc=function(e){return Promise.resolve(Vc(e))};let jc=(()=>{class e{constructor(){this.compileModuleSync=Mc,this.compileModuleAsync=Pc,this.compileModuleAndAllComponentsSync=Lc,this.compileModuleAndAllComponentsAsync=Rc}clearCache(){}clearCacheFor(e){}getModuleId(e){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})();const Nc=(()=>Promise.resolve(0))();function Bc(e){"undefined"==typeof Zone?Nc.then(()=>{e&&e.apply(null,null)}):Zone.current.scheduleMicroTask("scheduleMicrotask",e)}class $c{constructor({enableLongStackTrace:e=!1,shouldCoalesceEventChangeDetection:t=!1,shouldCoalesceRunChangeDetection:n=!1}){if(this.hasPendingMacrotasks=!1,this.hasPendingMicrotasks=!1,this.isStable=!0,this.onUnstable=new ec(!1),this.onMicrotaskEmpty=new ec(!1),this.onStable=new ec(!1),this.onError=new ec(!1),"undefined"==typeof Zone)throw new Error("In this configuration Angular requires Zone.js");Zone.assertZonePatched();const i=this;i._nesting=0,i._outer=i._inner=Zone.current,Zone.TaskTrackingZoneSpec&&(i._inner=i._inner.fork(new Zone.TaskTrackingZoneSpec)),e&&Zone.longStackTraceZoneSpec&&(i._inner=i._inner.fork(Zone.longStackTraceZoneSpec)),i.shouldCoalesceEventChangeDetection=!n&&t,i.shouldCoalesceRunChangeDetection=n,i.lastRequestAnimationFrameId=-1,i.nativeRequestAnimationFrame=function(){let e=Fe.requestAnimationFrame,t=Fe.cancelAnimationFrame;if("undefined"!=typeof Zone&&e&&t){const n=e[Zone.__symbol__("OriginalDelegate")];n&&(e=n);const i=t[Zone.__symbol__("OriginalDelegate")];i&&(t=i)}return{nativeRequestAnimationFrame:e,nativeCancelAnimationFrame:t}}().nativeRequestAnimationFrame,function(e){const t=()=>{!function(e){e.isCheckStableRunning||-1!==e.lastRequestAnimationFrameId||(e.lastRequestAnimationFrameId=e.nativeRequestAnimationFrame.call(Fe,()=>{e.fakeTopEventTask||(e.fakeTopEventTask=Zone.root.scheduleEventTask("fakeTopEventTask",()=>{e.lastRequestAnimationFrameId=-1,qc(e),e.isCheckStableRunning=!0,Uc(e),e.isCheckStableRunning=!1},void 0,()=>{},()=>{})),e.fakeTopEventTask.invoke()}),qc(e))}(e)};e._inner=e._inner.fork({name:"angular",properties:{isAngularZone:!0},onInvokeTask:(n,i,s,o,r,a)=>{try{return zc(e),n.invokeTask(s,o,r,a)}finally{(e.shouldCoalesceEventChangeDetection&&"eventTask"===o.type||e.shouldCoalesceRunChangeDetection)&&t(),Wc(e)}},onInvoke:(n,i,s,o,r,a,l)=>{try{return zc(e),n.invoke(s,o,r,a,l)}finally{e.shouldCoalesceRunChangeDetection&&t(),Wc(e)}},onHasTask:(t,n,i,s)=>{t.hasTask(i,s),n===i&&("microTask"==s.change?(e._hasPendingMicrotasks=s.microTask,qc(e),Uc(e)):"macroTask"==s.change&&(e.hasPendingMacrotasks=s.macroTask))},onHandleError:(t,n,i,s)=>(t.handleError(i,s),e.runOutsideAngular(()=>e.onError.emit(s)),!1)})}(i)}static isInAngularZone(){return!0===Zone.current.get("isAngularZone")}static assertInAngularZone(){if(!$c.isInAngularZone())throw new Error("Expected to be in Angular Zone, but it is not!")}static assertNotInAngularZone(){if($c.isInAngularZone())throw new Error("Expected to not be in Angular Zone, but it is!")}run(e,t,n){return this._inner.run(e,t,n)}runTask(e,t,n,i){const s=this._inner,o=s.scheduleEventTask("NgZoneEvent: "+i,e,Hc,Ba,Ba);try{return s.runTask(o,t,n)}finally{s.cancelTask(o)}}runGuarded(e,t,n){return this._inner.runGuarded(e,t,n)}runOutsideAngular(e){return this._outer.run(e)}}const Hc={};function Uc(e){if(0==e._nesting&&!e.hasPendingMicrotasks&&!e.isStable)try{e._nesting++,e.onMicrotaskEmpty.emit(null)}finally{if(e._nesting--,!e.hasPendingMicrotasks)try{e.runOutsideAngular(()=>e.onStable.emit(null))}finally{e.isStable=!0}}}function qc(e){e.hasPendingMicrotasks=!!(e._hasPendingMicrotasks||(e.shouldCoalesceEventChangeDetection||e.shouldCoalesceRunChangeDetection)&&-1!==e.lastRequestAnimationFrameId)}function zc(e){e._nesting++,e.isStable&&(e.isStable=!1,e.onUnstable.emit(null))}function Wc(e){e._nesting--,Uc(e)}class Gc{constructor(){this.hasPendingMicrotasks=!1,this.hasPendingMacrotasks=!1,this.isStable=!0,this.onUnstable=new ec,this.onMicrotaskEmpty=new ec,this.onStable=new ec,this.onError=new ec}run(e,t,n){return e.apply(t,n)}runGuarded(e,t,n){return e.apply(t,n)}runOutsideAngular(e){return e()}runTask(e,t,n,i){return e.apply(t,n)}}let Kc=(()=>{class e{constructor(e){this._ngZone=e,this._pendingCount=0,this._isZoneStable=!0,this._didWork=!1,this._callbacks=[],this.taskTrackingZone=null,this._watchAngularEvents(),e.run(()=>{this.taskTrackingZone="undefined"==typeof Zone?null:Zone.current.get("TaskTrackingZone")})}_watchAngularEvents(){this._ngZone.onUnstable.subscribe({next:()=>{this._didWork=!0,this._isZoneStable=!1}}),this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.subscribe({next:()=>{$c.assertNotInAngularZone(),Bc(()=>{this._isZoneStable=!0,this._runCallbacksIfReady()})}})})}increasePendingRequestCount(){return this._pendingCount+=1,this._didWork=!0,this._pendingCount}decreasePendingRequestCount(){if(this._pendingCount-=1,this._pendingCount<0)throw new Error("pending async requests below zero");return this._runCallbacksIfReady(),this._pendingCount}isStable(){return this._isZoneStable&&0===this._pendingCount&&!this._ngZone.hasPendingMacrotasks}_runCallbacksIfReady(){if(this.isStable())Bc(()=>{for(;0!==this._callbacks.length;){let e=this._callbacks.pop();clearTimeout(e.timeoutId),e.doneCb(this._didWork)}this._didWork=!1});else{let e=this.getPendingTasks();this._callbacks=this._callbacks.filter(t=>!t.updateCb||!t.updateCb(e)||(clearTimeout(t.timeoutId),!1)),this._didWork=!0}}getPendingTasks(){return this.taskTrackingZone?this.taskTrackingZone.macroTasks.map(e=>({source:e.source,creationLocation:e.creationLocation,data:e.data})):[]}addCallback(e,t,n){let i=-1;t&&t>0&&(i=setTimeout(()=>{this._callbacks=this._callbacks.filter(e=>e.timeoutId!==i),e(this._didWork,this.getPendingTasks())},t)),this._callbacks.push({doneCb:e,timeoutId:i,updateCb:n})}whenStable(e,t,n){if(n&&!this.taskTrackingZone)throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?');this.addCallback(e,t,n),this._runCallbacksIfReady()}getPendingRequestCount(){return this._pendingCount}findProviders(e,t,n){return[]}}return e.\u0275fac=function(t){return new(t||e)(ci($c))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),Yc=(()=>{class e{constructor(){this._applications=new Map,Jc.addToWindow(this)}registerApplication(e,t){this._applications.set(e,t)}unregisterApplication(e){this._applications.delete(e)}unregisterAllApplications(){this._applications.clear()}getTestability(e){return this._applications.get(e)||null}getAllTestabilities(){return Array.from(this._applications.values())}getAllRootElements(){return Array.from(this._applications.keys())}findTestabilityInTree(e,t=!0){return Jc.findTestabilityInTree(this,e,t)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})();class Zc{addToWindow(e){}findTestabilityInTree(e,t,n){return null}}let Qc,Jc=new Zc,Xc=!0,eu=!1;const tu=new zn("AllowMultipleToken");class nu{constructor(e,t){this.name=e,this.token=t}}function iu(e,t,n=[]){const i=`Platform: ${t}`,s=new zn(i);return(t=[])=>{let o=su();if(!o||o.injector.get(tu,!1))if(e)e(n.concat(t).concat({provide:s,useValue:!0}));else{const e=n.concat(t).concat({provide:s,useValue:!0},{provide:Yo,useValue:"platform"});!function(e){if(Qc&&!Qc.destroyed&&!Qc.injector.get(tu,!1))throw new Error("There can be only one platform. Destroy the previous one to create a new one.");Qc=e.get(ou);const t=e.get(Ec,null);t&&t.forEach(e=>e())}(lr.create({providers:e,name:i}))}return function(e){const t=su();if(!t)throw new Error("No platform exists!");if(!t.injector.get(e,null))throw new Error("A platform with a different configuration has been created. Please destroy it first.");return t}(s)}}function su(){return Qc&&!Qc.destroyed?Qc:null}let ou=(()=>{class e{constructor(e){this._injector=e,this._modules=[],this._destroyListeners=[],this._destroyed=!1}bootstrapModuleFactory(e,t){const n=function(e,t){let n;return n="noop"===e?new Gc:("zone.js"===e?void 0:e)||new $c({enableLongStackTrace:(eu=!0,Xc),shouldCoalesceEventChangeDetection:!!(null==t?void 0:t.ngZoneEventCoalescing),shouldCoalesceRunChangeDetection:!!(null==t?void 0:t.ngZoneRunCoalescing)}),n}(t?t.ngZone:void 0,{ngZoneEventCoalescing:t&&t.ngZoneEventCoalescing||!1,ngZoneRunCoalescing:t&&t.ngZoneRunCoalescing||!1}),i=[{provide:$c,useValue:n}];return n.run(()=>{const t=lr.create({providers:i,parent:this.injector,name:e.moduleType.name}),s=e.create(t),o=s.injector.get(rs,null);if(!o)throw new Error("No ErrorHandler. Is platform module (BrowserModule) included?");return n.runOutsideAngular(()=>{const e=n.onError.subscribe({next:e=>{o.handleError(e)}});s.onDestroy(()=>{lu(this._modules,s),e.unsubscribe()})}),function(e,t,n){try{const i=n();return jr(i)?i.catch(n=>{throw t.runOutsideAngular(()=>e.handleError(n)),n}):i}catch(i){throw t.runOutsideAngular(()=>e.handleError(i)),i}}(o,n,()=>{const e=s.injector.get(wc);return e.runInitializers(),e.donePromise.then(()=>(Aa(s.injector.get(Oc,ka)||ka),this._moduleDoBootstrap(s),s))})})}bootstrapModule(e,t=[]){const n=ru({},t);return function(e,t,n){const i=new $l(n);return Promise.resolve(i)}(0,0,e).then(e=>this.bootstrapModuleFactory(e,n))}_moduleDoBootstrap(e){const t=e.injector.get(au);if(e._bootstrapComponents.length>0)e._bootstrapComponents.forEach(e=>t.bootstrap(e));else{if(!e.instance.ngDoBootstrap)throw new Error(`The module ${te(e.instance.constructor)} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.`);e.instance.ngDoBootstrap(t)}this._modules.push(e)}onDestroy(e){this._destroyListeners.push(e)}get injector(){return this._injector}destroy(){if(this._destroyed)throw new Error("The platform has already been destroyed!");this._modules.slice().forEach(e=>e.destroy()),this._destroyListeners.forEach(e=>e()),this._destroyed=!0}get destroyed(){return this._destroyed}}return e.\u0275fac=function(t){return new(t||e)(ci(lr))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})();function ru(e,t){return Array.isArray(t)?t.reduce(ru,e):Object.assign(Object.assign({},e),t)}let au=(()=>{class e{constructor(e,t,n,i,s){this._zone=e,this._injector=t,this._exceptionHandler=n,this._componentFactoryResolver=i,this._initStatus=s,this._bootstrapListeners=[],this._views=[],this._runningTick=!1,this._stable=!0,this.componentTypes=[],this.components=[],this._onMicrotaskEmptySubscription=this._zone.onMicrotaskEmpty.subscribe({next:()=>{this._zone.run(()=>{this.tick()})}});const o=new b(e=>{this._stable=this._zone.isStable&&!this._zone.hasPendingMacrotasks&&!this._zone.hasPendingMicrotasks,this._zone.runOutsideAngular(()=>{e.next(this._stable),e.complete()})}),r=new b(e=>{let t;this._zone.runOutsideAngular(()=>{t=this._zone.onStable.subscribe(()=>{$c.assertNotInAngularZone(),Bc(()=>{this._stable||this._zone.hasPendingMacrotasks||this._zone.hasPendingMicrotasks||(this._stable=!0,e.next(!0))})})});const n=this._zone.onUnstable.subscribe(()=>{$c.assertInAngularZone(),this._stable&&(this._stable=!1,this._zone.runOutsideAngular(()=>{e.next(!1)}))});return()=>{t.unsubscribe(),n.unsubscribe()}});this.isStable=z(o,r.pipe(e=>{return W()((t=J,function(e){let n;n="function"==typeof t?t:function(){return t};const i=Object.create(e,Z);return i.source=e,i.subjectFactory=n,i})(e));var t}))}bootstrap(e,t){if(!this._initStatus.done)throw new Error("Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.");let n;n=e instanceof Ra?e:this._componentFactoryResolver.resolveComponentFactory(e),this.componentTypes.push(n.componentType);const i=n.isBoundToModule?void 0:this._injector.get(Sl),s=n.create(lr.NULL,[],t||n.selector,i),o=s.location.nativeElement,r=s.injector.get(Kc,null),a=r&&s.injector.get(Yc);return r&&a&&a.registerApplication(o,r),s.onDestroy(()=>{this.detachView(s.hostView),lu(this.components,s),a&&a.unregisterApplication(o)}),this._loadComponent(s),s}tick(){if(this._runningTick)throw new Error("ApplicationRef.tick is called recursively");try{this._runningTick=!0;for(let e of this._views)e.detectChanges()}catch(e){this._zone.runOutsideAngular(()=>this._exceptionHandler.handleError(e))}finally{this._runningTick=!1}}attachView(e){const t=e;this._views.push(t),t.attachToAppRef(this)}detachView(e){const t=e;lu(this._views,t),t.detachFromAppRef()}_loadComponent(e){this.attachView(e.hostView),this.tick(),this.components.push(e),this._injector.get(xc,[]).concat(this._bootstrapListeners).forEach(t=>t(e))}ngOnDestroy(){this._views.slice().forEach(e=>e.destroy()),this._onMicrotaskEmptySubscription.unsubscribe()}get viewCount(){return this._views.length}}return e.\u0275fac=function(t){return new(t||e)(ci($c),ci(lr),ci(rs),ci(Na),ci(wc))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})();function lu(e,t){const n=e.indexOf(t);n>-1&&e.splice(n,1)}class cu{}class uu{}const hu={factoryPathPrefix:"",factoryPathSuffix:".ngfactory"};let du=(()=>{class e{constructor(e,t){this._compiler=e,this._config=t||hu}load(e){return this.loadAndCompile(e)}loadAndCompile(e){let[t,i]=e.split("#");return void 0===i&&(i="default"),n(358)(t).then(e=>e[i]).then(e=>pu(e,t,i)).then(e=>this._compiler.compileModuleAsync(e))}loadFactory(e){let[t,i]=e.split("#"),s="NgFactory";return void 0===i&&(i="default",s=""),n(358)(this._config.factoryPathPrefix+t+this._config.factoryPathSuffix).then(e=>e[i+s]).then(e=>pu(e,t,i))}}return e.\u0275fac=function(t){return new(t||e)(ci(jc),ci(uu,8))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})();function pu(e,t,n){if(!e)throw new Error(`Cannot find '${n}' in '${t}'`);return e}const fu=iu(null,"core",[{provide:kc,useValue:"unknown"},{provide:ou,deps:[lr]},{provide:Yc,deps:[]},{provide:Ac,deps:[]}]),gu=[{provide:au,useClass:au,deps:[$c,lr,rs,Na,wc]},{provide:Ll,deps:[$c],useFactory:function(e){let t=[];return e.onStable.subscribe(()=>{for(;t.length;)t.pop()()}),function(e){t.push(e)}}},{provide:wc,useClass:wc,deps:[[new pi,Cc]]},{provide:jc,useClass:jc,deps:[]},Dc,{provide:ll,useFactory:function(){return vl},deps:[]},{provide:ul,useFactory:function(){return bl},deps:[]},{provide:Oc,useFactory:function(e){return Aa(e=e||"undefined"!=typeof $localize&&$localize.locale||ka),e},deps:[[new di(Oc),new pi,new fi]]},{provide:Tc,useValue:"USD"}];let mu=(()=>{class e{constructor(e){}}return e.\u0275fac=function(t){return new(t||e)(ci(au))},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:gu}),e})(),vu=null;function bu(){return vu}const yu=new zn("DocumentToken");let Cu=(()=>{class e{historyGo(e){throw new Error("Not implemented")}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=he({factory:wu,token:e,providedIn:"platform"}),e})();function wu(){return ci(Du)}const _u=new zn("Location Initialized");let Du=(()=>{class e extends Cu{constructor(e){super(),this._doc=e,this._init()}_init(){this.location=window.location,this._history=window.history}getBaseHrefFromDOM(){return bu().getBaseHref(this._doc)}onPopState(e){const t=bu().getGlobalEventTarget(this._doc,"window");return t.addEventListener("popstate",e,!1),()=>t.removeEventListener("popstate",e)}onHashChange(e){const t=bu().getGlobalEventTarget(this._doc,"window");return t.addEventListener("hashchange",e,!1),()=>t.removeEventListener("hashchange",e)}get href(){return this.location.href}get protocol(){return this.location.protocol}get hostname(){return this.location.hostname}get port(){return this.location.port}get pathname(){return this.location.pathname}get search(){return this.location.search}get hash(){return this.location.hash}set pathname(e){this.location.pathname=e}pushState(e,t,n){Su()?this._history.pushState(e,t,n):this.location.hash=n}replaceState(e,t,n){Su()?this._history.replaceState(e,t,n):this.location.hash=n}forward(){this._history.forward()}back(){this._history.back()}historyGo(e=0){this._history.go(e)}getState(){return this._history.state}}return e.\u0275fac=function(t){return new(t||e)(ci(yu))},e.\u0275prov=he({factory:Eu,token:e,providedIn:"platform"}),e})();function Su(){return!!window.history.pushState}function Eu(){return new Du(ci(yu))}function ku(e,t){if(0==e.length)return t;if(0==t.length)return e;let n=0;return e.endsWith("/")&&n++,t.startsWith("/")&&n++,2==n?e+t.substring(1):1==n?e+t:e+"/"+t}function xu(e){const t=e.match(/#|\?|$/),n=t&&t.index||e.length;return e.slice(0,n-("/"===e[n-1]?1:0))+e.slice(n)}function Au(e){return e&&"?"!==e[0]?"?"+e:e}let Ou=(()=>{class e{historyGo(e){throw new Error("Not implemented")}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=he({factory:Tu,token:e,providedIn:"root"}),e})();function Tu(e){const t=ci(yu).location;return new Iu(ci(Cu),t&&t.origin||"")}const Fu=new zn("appBaseHref");let Iu=(()=>{class e extends Ou{constructor(e,t){if(super(),this._platformLocation=e,this._removeListenerFns=[],null==t&&(t=this._platformLocation.getBaseHrefFromDOM()),null==t)throw new Error("No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.");this._baseHref=t}ngOnDestroy(){for(;this._removeListenerFns.length;)this._removeListenerFns.pop()()}onPopState(e){this._removeListenerFns.push(this._platformLocation.onPopState(e),this._platformLocation.onHashChange(e))}getBaseHref(){return this._baseHref}prepareExternalUrl(e){return ku(this._baseHref,e)}path(e=!1){const t=this._platformLocation.pathname+Au(this._platformLocation.search),n=this._platformLocation.hash;return n&&e?`${t}${n}`:t}pushState(e,t,n,i){const s=this.prepareExternalUrl(n+Au(i));this._platformLocation.pushState(e,t,s)}replaceState(e,t,n,i){const s=this.prepareExternalUrl(n+Au(i));this._platformLocation.replaceState(e,t,s)}forward(){this._platformLocation.forward()}back(){this._platformLocation.back()}historyGo(e=0){var t,n;null===(n=(t=this._platformLocation).historyGo)||void 0===n||n.call(t,e)}}return e.\u0275fac=function(t){return new(t||e)(ci(Cu),ci(Fu,8))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),Mu=(()=>{class e extends Ou{constructor(e,t){super(),this._platformLocation=e,this._baseHref="",this._removeListenerFns=[],null!=t&&(this._baseHref=t)}ngOnDestroy(){for(;this._removeListenerFns.length;)this._removeListenerFns.pop()()}onPopState(e){this._removeListenerFns.push(this._platformLocation.onPopState(e),this._platformLocation.onHashChange(e))}getBaseHref(){return this._baseHref}path(e=!1){let t=this._platformLocation.hash;return null==t&&(t="#"),t.length>0?t.substring(1):t}prepareExternalUrl(e){const t=ku(this._baseHref,e);return t.length>0?"#"+t:t}pushState(e,t,n,i){let s=this.prepareExternalUrl(n+Au(i));0==s.length&&(s=this._platformLocation.pathname),this._platformLocation.pushState(e,t,s)}replaceState(e,t,n,i){let s=this.prepareExternalUrl(n+Au(i));0==s.length&&(s=this._platformLocation.pathname),this._platformLocation.replaceState(e,t,s)}forward(){this._platformLocation.forward()}back(){this._platformLocation.back()}historyGo(e=0){var t,n;null===(n=(t=this._platformLocation).historyGo)||void 0===n||n.call(t,e)}}return e.\u0275fac=function(t){return new(t||e)(ci(Cu),ci(Fu,8))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),Pu=(()=>{class e{constructor(e,t){this._subject=new ec,this._urlChangeListeners=[],this._platformStrategy=e;const n=this._platformStrategy.getBaseHref();this._platformLocation=t,this._baseHref=xu(Lu(n)),this._platformStrategy.onPopState(e=>{this._subject.emit({url:this.path(!0),pop:!0,state:e.state,type:e.type})})}path(e=!1){return this.normalize(this._platformStrategy.path(e))}getState(){return this._platformLocation.getState()}isCurrentPathEqualTo(e,t=""){return this.path()==this.normalize(e+Au(t))}normalize(t){return e.stripTrailingSlash(function(e,t){return e&&t.startsWith(e)?t.substring(e.length):t}(this._baseHref,Lu(t)))}prepareExternalUrl(e){return e&&"/"!==e[0]&&(e="/"+e),this._platformStrategy.prepareExternalUrl(e)}go(e,t="",n=null){this._platformStrategy.pushState(n,"",e,t),this._notifyUrlChangeListeners(this.prepareExternalUrl(e+Au(t)),n)}replaceState(e,t="",n=null){this._platformStrategy.replaceState(n,"",e,t),this._notifyUrlChangeListeners(this.prepareExternalUrl(e+Au(t)),n)}forward(){this._platformStrategy.forward()}back(){this._platformStrategy.back()}historyGo(e=0){var t,n;null===(n=(t=this._platformStrategy).historyGo)||void 0===n||n.call(t,e)}onUrlChange(e){this._urlChangeListeners.push(e),this._urlChangeSubscription||(this._urlChangeSubscription=this.subscribe(e=>{this._notifyUrlChangeListeners(e.url,e.state)}))}_notifyUrlChangeListeners(e="",t){this._urlChangeListeners.forEach(n=>n(e,t))}subscribe(e,t,n){return this._subject.subscribe({next:e,error:t,complete:n})}}return e.\u0275fac=function(t){return new(t||e)(ci(Ou),ci(Cu))},e.normalizeQueryParams=Au,e.joinWithSlash=ku,e.stripTrailingSlash=xu,e.\u0275prov=he({factory:Vu,token:e,providedIn:"root"}),e})();function Vu(){return new Pu(ci(Ou),ci(Cu))}function Lu(e){return e.replace(/\/index.html$/,"")}const Ru={ADP:[void 0,void 0,0],AFN:[void 0,void 0,0],ALL:[void 0,void 0,0],AMD:[void 0,void 0,2],AOA:[void 0,"Kz"],ARS:[void 0,"$"],AUD:["A$","$"],BAM:[void 0,"KM"],BBD:[void 0,"$"],BDT:[void 0,"\u09f3"],BHD:[void 0,void 0,3],BIF:[void 0,void 0,0],BMD:[void 0,"$"],BND:[void 0,"$"],BOB:[void 0,"Bs"],BRL:["R$"],BSD:[void 0,"$"],BWP:[void 0,"P"],BYN:[void 0,"\u0440.",2],BYR:[void 0,void 0,0],BZD:[void 0,"$"],CAD:["CA$","$",2],CHF:[void 0,void 0,2],CLF:[void 0,void 0,4],CLP:[void 0,"$",0],CNY:["CN\xa5","\xa5"],COP:[void 0,"$",2],CRC:[void 0,"\u20a1",2],CUC:[void 0,"$"],CUP:[void 0,"$"],CZK:[void 0,"K\u010d",2],DJF:[void 0,void 0,0],DKK:[void 0,"kr",2],DOP:[void 0,"$"],EGP:[void 0,"E\xa3"],ESP:[void 0,"\u20a7",0],EUR:["\u20ac"],FJD:[void 0,"$"],FKP:[void 0,"\xa3"],GBP:["\xa3"],GEL:[void 0,"\u20be"],GIP:[void 0,"\xa3"],GNF:[void 0,"FG",0],GTQ:[void 0,"Q"],GYD:[void 0,"$",2],HKD:["HK$","$"],HNL:[void 0,"L"],HRK:[void 0,"kn"],HUF:[void 0,"Ft",2],IDR:[void 0,"Rp",2],ILS:["\u20aa"],INR:["\u20b9"],IQD:[void 0,void 0,0],IRR:[void 0,void 0,0],ISK:[void 0,"kr",0],ITL:[void 0,void 0,0],JMD:[void 0,"$"],JOD:[void 0,void 0,3],JPY:["\xa5",void 0,0],KHR:[void 0,"\u17db"],KMF:[void 0,"CF",0],KPW:[void 0,"\u20a9",0],KRW:["\u20a9",void 0,0],KWD:[void 0,void 0,3],KYD:[void 0,"$"],KZT:[void 0,"\u20b8"],LAK:[void 0,"\u20ad",0],LBP:[void 0,"L\xa3",0],LKR:[void 0,"Rs"],LRD:[void 0,"$"],LTL:[void 0,"Lt"],LUF:[void 0,void 0,0],LVL:[void 0,"Ls"],LYD:[void 0,void 0,3],MGA:[void 0,"Ar",0],MGF:[void 0,void 0,0],MMK:[void 0,"K",0],MNT:[void 0,"\u20ae",2],MRO:[void 0,void 0,0],MUR:[void 0,"Rs",2],MXN:["MX$","$"],MYR:[void 0,"RM"],NAD:[void 0,"$"],NGN:[void 0,"\u20a6"],NIO:[void 0,"C$"],NOK:[void 0,"kr",2],NPR:[void 0,"Rs"],NZD:["NZ$","$"],OMR:[void 0,void 0,3],PHP:[void 0,"\u20b1"],PKR:[void 0,"Rs",2],PLN:[void 0,"z\u0142"],PYG:[void 0,"\u20b2",0],RON:[void 0,"lei"],RSD:[void 0,void 0,0],RUB:[void 0,"\u20bd"],RUR:[void 0,"\u0440."],RWF:[void 0,"RF",0],SBD:[void 0,"$"],SEK:[void 0,"kr",2],SGD:[void 0,"$"],SHP:[void 0,"\xa3"],SLL:[void 0,void 0,0],SOS:[void 0,void 0,0],SRD:[void 0,"$"],SSP:[void 0,"\xa3"],STD:[void 0,void 0,0],STN:[void 0,"Db"],SYP:[void 0,"\xa3",0],THB:[void 0,"\u0e3f"],TMM:[void 0,void 0,0],TND:[void 0,void 0,3],TOP:[void 0,"T$"],TRL:[void 0,void 0,0],TRY:[void 0,"\u20ba"],TTD:[void 0,"$"],TWD:["NT$","$",2],TZS:[void 0,void 0,2],UAH:[void 0,"\u20b4"],UGX:[void 0,void 0,0],USD:["$"],UYI:[void 0,void 0,0],UYU:[void 0,"$"],UYW:[void 0,void 0,4],UZS:[void 0,void 0,2],VEF:[void 0,"Bs",2],VND:["\u20ab",void 0,0],VUV:[void 0,void 0,0],XAF:["FCFA",void 0,0],XCD:["EC$","$"],XOF:["CFA",void 0,0],XPF:["CFPF",void 0,0],XXX:["\xa4"],YER:[void 0,void 0,0],ZAR:[void 0,"R"],ZMK:[void 0,void 0,0],ZMW:[void 0,"ZK"],ZWD:[void 0,void 0,0]};var ju=function(e){return e[e.Decimal=0]="Decimal",e[e.Percent=1]="Percent",e[e.Currency=2]="Currency",e[e.Scientific=3]="Scientific",e}({}),Nu=function(e){return e[e.Zero=0]="Zero",e[e.One=1]="One",e[e.Two=2]="Two",e[e.Few=3]="Few",e[e.Many=4]="Many",e[e.Other=5]="Other",e}({}),Bu=function(e){return e[e.Format=0]="Format",e[e.Standalone=1]="Standalone",e}({}),$u=function(e){return e[e.Narrow=0]="Narrow",e[e.Abbreviated=1]="Abbreviated",e[e.Wide=2]="Wide",e[e.Short=3]="Short",e}({}),Hu=function(e){return e[e.Short=0]="Short",e[e.Medium=1]="Medium",e[e.Long=2]="Long",e[e.Full=3]="Full",e}({}),Uu=function(e){return e[e.Decimal=0]="Decimal",e[e.Group=1]="Group",e[e.List=2]="List",e[e.PercentSign=3]="PercentSign",e[e.PlusSign=4]="PlusSign",e[e.MinusSign=5]="MinusSign",e[e.Exponential=6]="Exponential",e[e.SuperscriptingExponent=7]="SuperscriptingExponent",e[e.PerMille=8]="PerMille",e[e[1/0]=9]="Infinity",e[e.NaN=10]="NaN",e[e.TimeSeparator=11]="TimeSeparator",e[e.CurrencyDecimal=12]="CurrencyDecimal",e[e.CurrencyGroup=13]="CurrencyGroup",e}({});function qu(e,t){return Zu(Da(e)[Ea.DateFormat],t)}function zu(e,t){return Zu(Da(e)[Ea.TimeFormat],t)}function Wu(e,t){return Zu(Da(e)[Ea.DateTimeFormat],t)}function Gu(e,t){const n=Da(e),i=n[Ea.NumberSymbols][t];if(void 0===i){if(t===Uu.CurrencyDecimal)return n[Ea.NumberSymbols][Uu.Decimal];if(t===Uu.CurrencyGroup)return n[Ea.NumberSymbols][Uu.Group]}return i}function Ku(e,t){return Da(e)[Ea.NumberFormats][t]}function Yu(e){if(!e[Ea.ExtraData])throw new Error(`Missing extra locale data for the locale "${e[Ea.LocaleId]}". Use "registerLocaleData" to load new data. See the "I18n guide" on angular.io to know more.`)}function Zu(e,t){for(let n=t;n>-1;n--)if(void 0!==e[n])return e[n];throw new Error("Locale data API: locale data undefined")}function Qu(e){const[t,n]=e.split(":");return{hours:+t,minutes:+n}}const Ju=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/,Xu={},eh=/((?:[^BEGHLMOSWYZabcdhmswyz']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|Y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|c{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\s\S]*)/;var th=function(e){return e[e.Short=0]="Short",e[e.ShortGMT=1]="ShortGMT",e[e.Long=2]="Long",e[e.Extended=3]="Extended",e}({}),nh=function(e){return e[e.FullYear=0]="FullYear",e[e.Month=1]="Month",e[e.Date=2]="Date",e[e.Hours=3]="Hours",e[e.Minutes=4]="Minutes",e[e.Seconds=5]="Seconds",e[e.FractionalSeconds=6]="FractionalSeconds",e[e.Day=7]="Day",e}({}),ih=function(e){return e[e.DayPeriods=0]="DayPeriods",e[e.Days=1]="Days",e[e.Months=2]="Months",e[e.Eras=3]="Eras",e}({});function sh(e,t,n,i){let s=function(e){if(vh(e))return e;if("number"==typeof e&&!isNaN(e))return new Date(e);if("string"==typeof e){if(e=e.trim(),/^(\d{4}(-\d{1,2}(-\d{1,2})?)?)$/.test(e)){const[t,n=1,i=1]=e.split("-").map(e=>+e);return oh(t,n-1,i)}const t=parseFloat(e);if(!isNaN(e-t))return new Date(t);let n;if(n=e.match(Ju))return function(e){const t=new Date(0);let n=0,i=0;const s=e[8]?t.setUTCFullYear:t.setFullYear,o=e[8]?t.setUTCHours:t.setHours;e[9]&&(n=Number(e[9]+e[10]),i=Number(e[9]+e[11])),s.call(t,Number(e[1]),Number(e[2])-1,Number(e[3]));const r=Number(e[4]||0)-n,a=Number(e[5]||0)-i,l=Number(e[6]||0),c=Math.floor(1e3*parseFloat("0."+(e[7]||0)));return o.call(t,r,a,l,c),t}(n)}const t=new Date(e);if(!vh(t))throw new Error(`Unable to convert "${e}" into a date`);return t}(e);t=rh(n,t)||t;let o,r=[];for(;t;){if(o=eh.exec(t),!o){r.push(t);break}{r=r.concat(o.slice(1));const e=r.pop();if(!e)break;t=e}}let a=s.getTimezoneOffset();i&&(a=mh(i,a),s=function(e,t,n){const i=e.getTimezoneOffset();return function(e,t){return(e=new Date(e.getTime())).setMinutes(e.getMinutes()+t),e}(e,-1*(mh(t,i)-i))}(s,i));let l="";return r.forEach(e=>{const t=function(e){if(gh[e])return gh[e];let t;switch(e){case"G":case"GG":case"GGG":t=uh(ih.Eras,$u.Abbreviated);break;case"GGGG":t=uh(ih.Eras,$u.Wide);break;case"GGGGG":t=uh(ih.Eras,$u.Narrow);break;case"y":t=ch(nh.FullYear,1,0,!1,!0);break;case"yy":t=ch(nh.FullYear,2,0,!0,!0);break;case"yyy":t=ch(nh.FullYear,3,0,!1,!0);break;case"yyyy":t=ch(nh.FullYear,4,0,!1,!0);break;case"Y":t=fh(1);break;case"YY":t=fh(2,!0);break;case"YYY":t=fh(3);break;case"YYYY":t=fh(4);break;case"M":case"L":t=ch(nh.Month,1,1);break;case"MM":case"LL":t=ch(nh.Month,2,1);break;case"MMM":t=uh(ih.Months,$u.Abbreviated);break;case"MMMM":t=uh(ih.Months,$u.Wide);break;case"MMMMM":t=uh(ih.Months,$u.Narrow);break;case"LLL":t=uh(ih.Months,$u.Abbreviated,Bu.Standalone);break;case"LLLL":t=uh(ih.Months,$u.Wide,Bu.Standalone);break;case"LLLLL":t=uh(ih.Months,$u.Narrow,Bu.Standalone);break;case"w":t=ph(1);break;case"ww":t=ph(2);break;case"W":t=ph(1,!0);break;case"d":t=ch(nh.Date,1);break;case"dd":t=ch(nh.Date,2);break;case"c":case"cc":t=ch(nh.Day,1);break;case"ccc":t=uh(ih.Days,$u.Abbreviated,Bu.Standalone);break;case"cccc":t=uh(ih.Days,$u.Wide,Bu.Standalone);break;case"ccccc":t=uh(ih.Days,$u.Narrow,Bu.Standalone);break;case"cccccc":t=uh(ih.Days,$u.Short,Bu.Standalone);break;case"E":case"EE":case"EEE":t=uh(ih.Days,$u.Abbreviated);break;case"EEEE":t=uh(ih.Days,$u.Wide);break;case"EEEEE":t=uh(ih.Days,$u.Narrow);break;case"EEEEEE":t=uh(ih.Days,$u.Short);break;case"a":case"aa":case"aaa":t=uh(ih.DayPeriods,$u.Abbreviated);break;case"aaaa":t=uh(ih.DayPeriods,$u.Wide);break;case"aaaaa":t=uh(ih.DayPeriods,$u.Narrow);break;case"b":case"bb":case"bbb":t=uh(ih.DayPeriods,$u.Abbreviated,Bu.Standalone,!0);break;case"bbbb":t=uh(ih.DayPeriods,$u.Wide,Bu.Standalone,!0);break;case"bbbbb":t=uh(ih.DayPeriods,$u.Narrow,Bu.Standalone,!0);break;case"B":case"BB":case"BBB":t=uh(ih.DayPeriods,$u.Abbreviated,Bu.Format,!0);break;case"BBBB":t=uh(ih.DayPeriods,$u.Wide,Bu.Format,!0);break;case"BBBBB":t=uh(ih.DayPeriods,$u.Narrow,Bu.Format,!0);break;case"h":t=ch(nh.Hours,1,-12);break;case"hh":t=ch(nh.Hours,2,-12);break;case"H":t=ch(nh.Hours,1);break;case"HH":t=ch(nh.Hours,2);break;case"m":t=ch(nh.Minutes,1);break;case"mm":t=ch(nh.Minutes,2);break;case"s":t=ch(nh.Seconds,1);break;case"ss":t=ch(nh.Seconds,2);break;case"S":t=ch(nh.FractionalSeconds,1);break;case"SS":t=ch(nh.FractionalSeconds,2);break;case"SSS":t=ch(nh.FractionalSeconds,3);break;case"Z":case"ZZ":case"ZZZ":t=hh(th.Short);break;case"ZZZZZ":t=hh(th.Extended);break;case"O":case"OO":case"OOO":case"z":case"zz":case"zzz":t=hh(th.ShortGMT);break;case"OOOO":case"ZZZZ":case"zzzz":t=hh(th.Long);break;default:return null}return gh[e]=t,t}(e);l+=t?t(s,n,a):"''"===e?"'":e.replace(/(^'|'$)/g,"").replace(/''/g,"'")}),l}function oh(e,t,n){const i=new Date(0);return i.setFullYear(e,t,n),i.setHours(0,0,0),i}function rh(e,t){const n=function(e){return Da(e)[Ea.LocaleId]}(e);if(Xu[n]=Xu[n]||{},Xu[n][t])return Xu[n][t];let i="";switch(t){case"shortDate":i=qu(e,Hu.Short);break;case"mediumDate":i=qu(e,Hu.Medium);break;case"longDate":i=qu(e,Hu.Long);break;case"fullDate":i=qu(e,Hu.Full);break;case"shortTime":i=zu(e,Hu.Short);break;case"mediumTime":i=zu(e,Hu.Medium);break;case"longTime":i=zu(e,Hu.Long);break;case"fullTime":i=zu(e,Hu.Full);break;case"short":const t=rh(e,"shortTime"),n=rh(e,"shortDate");i=ah(Wu(e,Hu.Short),[t,n]);break;case"medium":const s=rh(e,"mediumTime"),o=rh(e,"mediumDate");i=ah(Wu(e,Hu.Medium),[s,o]);break;case"long":const r=rh(e,"longTime"),a=rh(e,"longDate");i=ah(Wu(e,Hu.Long),[r,a]);break;case"full":const l=rh(e,"fullTime"),c=rh(e,"fullDate");i=ah(Wu(e,Hu.Full),[l,c])}return i&&(Xu[n][t]=i),i}function ah(e,t){return t&&(e=e.replace(/\{([^}]+)}/g,function(e,n){return null!=t&&n in t?t[n]:e})),e}function lh(e,t,n="-",i,s){let o="";(e<0||s&&e<=0)&&(s?e=1-e:(e=-e,o=n));let r=String(e);for(;r.length<t;)r="0"+r;return i&&(r=r.substr(r.length-t)),o+r}function ch(e,t,n=0,i=!1,s=!1){return function(o,r){let a=function(e,t){switch(e){case nh.FullYear:return t.getFullYear();case nh.Month:return t.getMonth();case nh.Date:return t.getDate();case nh.Hours:return t.getHours();case nh.Minutes:return t.getMinutes();case nh.Seconds:return t.getSeconds();case nh.FractionalSeconds:return t.getMilliseconds();case nh.Day:return t.getDay();default:throw new Error(`Unknown DateType value "${e}".`)}}(e,o);if((n>0||a>-n)&&(a+=n),e===nh.Hours)0===a&&-12===n&&(a=12);else if(e===nh.FractionalSeconds)return l=t,lh(a,3).substr(0,l);var l;const c=Gu(r,Uu.MinusSign);return lh(a,t,c,i,s)}}function uh(e,t,n=Bu.Format,i=!1){return function(s,o){return function(e,t,n,i,s,o){switch(n){case ih.Months:return function(e,t,n){const i=Da(e),s=Zu([i[Ea.MonthsFormat],i[Ea.MonthsStandalone]],t);return Zu(s,n)}(t,s,i)[e.getMonth()];case ih.Days:return function(e,t,n){const i=Da(e),s=Zu([i[Ea.DaysFormat],i[Ea.DaysStandalone]],t);return Zu(s,n)}(t,s,i)[e.getDay()];case ih.DayPeriods:const r=e.getHours(),a=e.getMinutes();if(o){const e=function(e){const t=Da(e);return Yu(t),(t[Ea.ExtraData][2]||[]).map(e=>"string"==typeof e?Qu(e):[Qu(e[0]),Qu(e[1])])}(t),n=function(e,t,n){const i=Da(e);Yu(i);const s=Zu([i[Ea.ExtraData][0],i[Ea.ExtraData][1]],t)||[];return Zu(s,n)||[]}(t,s,i),o=e.findIndex(e=>{if(Array.isArray(e)){const[t,n]=e,i=r>=t.hours&&a>=t.minutes,s=r<n.hours||r===n.hours&&a<n.minutes;if(t.hours<n.hours){if(i&&s)return!0}else if(i||s)return!0}else if(e.hours===r&&e.minutes===a)return!0;return!1});if(-1!==o)return n[o]}return function(e,t,n){const i=Da(e),s=Zu([i[Ea.DayPeriodsFormat],i[Ea.DayPeriodsStandalone]],t);return Zu(s,n)}(t,s,i)[r<12?0:1];case ih.Eras:return function(e,t){return Zu(Da(e)[Ea.Eras],t)}(t,i)[e.getFullYear()<=0?0:1];default:throw new Error(`unexpected translation type ${n}`)}}(s,o,e,t,n,i)}}function hh(e){return function(t,n,i){const s=-1*i,o=Gu(n,Uu.MinusSign),r=s>0?Math.floor(s/60):Math.ceil(s/60);switch(e){case th.Short:return(s>=0?"+":"")+lh(r,2,o)+lh(Math.abs(s%60),2,o);case th.ShortGMT:return"GMT"+(s>=0?"+":"")+lh(r,1,o);case th.Long:return"GMT"+(s>=0?"+":"")+lh(r,2,o)+":"+lh(Math.abs(s%60),2,o);case th.Extended:return 0===i?"Z":(s>=0?"+":"")+lh(r,2,o)+":"+lh(Math.abs(s%60),2,o);default:throw new Error(`Unknown zone width "${e}"`)}}}function dh(e){return oh(e.getFullYear(),e.getMonth(),e.getDate()+(4-e.getDay()))}function ph(e,t=!1){return function(n,i){let s;if(t){const e=new Date(n.getFullYear(),n.getMonth(),1).getDay()-1,t=n.getDate();s=1+Math.floor((t+e)/7)}else{const e=dh(n),t=function(e){const t=oh(e,0,1).getDay();return oh(e,0,1+(t<=4?4:11)-t)}(e.getFullYear()),i=e.getTime()-t.getTime();s=1+Math.round(i/6048e5)}return lh(s,e,Gu(i,Uu.MinusSign))}}function fh(e,t=!1){return function(n,i){return lh(dh(n).getFullYear(),e,Gu(i,Uu.MinusSign),t)}}const gh={};function mh(e,t){e=e.replace(/:/g,"");const n=Date.parse("Jan 01, 1970 00:00:00 "+e)/6e4;return isNaN(n)?t:n}function vh(e){return e instanceof Date&&!isNaN(e.valueOf())}const bh=/^(\d+)?\.((\d+)(-(\d+))?)?$/,yh=".",Ch="0";function wh(e,t,n,i,s,o,r=!1){let a="",l=!1;if(isFinite(e)){let c=function(e){let t,n,i,s,o,r=Math.abs(e)+"",a=0;for((n=r.indexOf(yh))>-1&&(r=r.replace(yh,"")),(i=r.search(/e/i))>0?(n<0&&(n=i),n+=+r.slice(i+1),r=r.substring(0,i)):n<0&&(n=r.length),i=0;r.charAt(i)===Ch;i++);if(i===(o=r.length))t=[0],n=1;else{for(o--;r.charAt(o)===Ch;)o--;for(n-=i,t=[],s=0;i<=o;i++,s++)t[s]=Number(r.charAt(i))}return n>22&&(t=t.splice(0,21),a=n-1,n=1),{digits:t,exponent:a,integerLen:n}}(e);r&&(c=function(e){if(0===e.digits[0])return e;const t=e.digits.length-e.integerLen;return e.exponent?e.exponent+=2:(0===t?e.digits.push(0,0):1===t&&e.digits.push(0),e.integerLen+=2),e}(c));let u=t.minInt,h=t.minFrac,d=t.maxFrac;if(o){const e=o.match(bh);if(null===e)throw new Error(`${o} is not a valid digit info`);const t=e[1],n=e[3],i=e[5];null!=t&&(u=Dh(t)),null!=n&&(h=Dh(n)),null!=i?d=Dh(i):null!=n&&h>d&&(d=h)}!function(e,t,n){if(t>n)throw new Error(`The minimum number of digits after fraction (${t}) is higher than the maximum (${n}).`);let i=e.digits,s=i.length-e.integerLen;const o=Math.min(Math.max(t,s),n);let r=o+e.integerLen,a=i[r];if(r>0){i.splice(Math.max(e.integerLen,r));for(let e=r;e<i.length;e++)i[e]=0}else{s=Math.max(0,s),e.integerLen=1,i.length=Math.max(1,r=o+1),i[0]=0;for(let e=1;e<r;e++)i[e]=0}if(a>=5)if(r-1<0){for(let t=0;t>r;t--)i.unshift(0),e.integerLen++;i.unshift(1),e.integerLen++}else i[r-1]++;for(;s<Math.max(0,o);s++)i.push(0);let l=0!==o;const c=t+e.integerLen,u=i.reduceRight(function(e,t,n,i){return i[n]=(t+=e)<10?t:t-10,l&&(0===i[n]&&n>=c?i.pop():l=!1),t>=10?1:0},0);u&&(i.unshift(u),e.integerLen++)}(c,h,d);let p=c.digits,f=c.integerLen;const g=c.exponent;let m=[];for(l=p.every(e=>!e);f<u;f++)p.unshift(0);for(;f<0;f++)p.unshift(0);f>0?m=p.splice(f,p.length):(m=p,p=[0]);const v=[];for(p.length>=t.lgSize&&v.unshift(p.splice(-t.lgSize,p.length).join(""));p.length>t.gSize;)v.unshift(p.splice(-t.gSize,p.length).join(""));p.length&&v.unshift(p.join("")),a=v.join(Gu(n,i)),m.length&&(a+=Gu(n,s)+m.join("")),g&&(a+=Gu(n,Uu.Exponential)+"+"+g)}else a=Gu(n,Uu.Infinity);return a=e<0&&!l?t.negPre+a+t.negSuf:t.posPre+a+t.posSuf,a}function _h(e,t="-"){const n={minInt:1,minFrac:0,maxFrac:0,posPre:"",posSuf:"",negPre:"",negSuf:"",gSize:0,lgSize:0},i=e.split(";"),s=i[0],o=i[1],r=-1!==s.indexOf(yh)?s.split(yh):[s.substring(0,s.lastIndexOf(Ch)+1),s.substring(s.lastIndexOf(Ch)+1)],a=r[0],l=r[1]||"";n.posPre=a.substr(0,a.indexOf("#"));for(let u=0;u<l.length;u++){const e=l.charAt(u);e===Ch?n.minFrac=n.maxFrac=u+1:"#"===e?n.maxFrac=u+1:n.posSuf+=e}const c=a.split(",");if(n.gSize=c[1]?c[1].length:0,n.lgSize=c[2]||c[1]?(c[2]||c[1]).length:0,o){const e=s.length-n.posPre.length-n.posSuf.length,t=o.indexOf("#");n.negPre=o.substr(0,t).replace(/'/g,""),n.negSuf=o.substr(t+e).replace(/'/g,"")}else n.negPre=t+n.posPre,n.negSuf=n.posSuf;return n}function Dh(e){const t=parseInt(e);if(isNaN(t))throw new Error("Invalid integer literal when parsing "+e);return t}class Sh{}let Eh=(()=>{class e extends Sh{constructor(e){super(),this.locale=e}getPluralCategory(e,t){switch(function(e){return Da(e)[Ea.PluralCase]}(t||this.locale)(e)){case Nu.Zero:return"zero";case Nu.One:return"one";case Nu.Two:return"two";case Nu.Few:return"few";case Nu.Many:return"many";default:return"other"}}}return e.\u0275fac=function(t){return new(t||e)(ci(Oc))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})();function kh(e,t){t=encodeURIComponent(t);for(const n of e.split(";")){const e=n.indexOf("="),[i,s]=-1==e?[n,""]:[n.slice(0,e),n.slice(e+1)];if(i.trim()===t)return decodeURIComponent(s)}return null}let xh=(()=>{class e{constructor(e,t,n,i){this._iterableDiffers=e,this._keyValueDiffers=t,this._ngEl=n,this._renderer=i,this._iterableDiffer=null,this._keyValueDiffer=null,this._initialClasses=[],this._rawClass=null}set klass(e){this._removeClasses(this._initialClasses),this._initialClasses="string"==typeof e?e.split(/\s+/):[],this._applyClasses(this._initialClasses),this._applyClasses(this._rawClass)}set ngClass(e){this._removeClasses(this._rawClass),this._applyClasses(this._initialClasses),this._iterableDiffer=null,this._keyValueDiffer=null,this._rawClass="string"==typeof e?e.split(/\s+/):e,this._rawClass&&(br(this._rawClass)?this._iterableDiffer=this._iterableDiffers.find(this._rawClass).create():this._keyValueDiffer=this._keyValueDiffers.find(this._rawClass).create())}ngDoCheck(){if(this._iterableDiffer){const e=this._iterableDiffer.diff(this._rawClass);e&&this._applyIterableChanges(e)}else if(this._keyValueDiffer){const e=this._keyValueDiffer.diff(this._rawClass);e&&this._applyKeyValueChanges(e)}}_applyKeyValueChanges(e){e.forEachAddedItem(e=>this._toggleClass(e.key,e.currentValue)),e.forEachChangedItem(e=>this._toggleClass(e.key,e.currentValue)),e.forEachRemovedItem(e=>{e.previousValue&&this._toggleClass(e.key,!1)})}_applyIterableChanges(e){e.forEachAddedItem(e=>{if("string"!=typeof e.item)throw new Error(`NgClass can only toggle CSS classes expressed as strings, got ${te(e.item)}`);this._toggleClass(e.item,!0)}),e.forEachRemovedItem(e=>this._toggleClass(e.item,!1))}_applyClasses(e){e&&(Array.isArray(e)||e instanceof Set?e.forEach(e=>this._toggleClass(e,!0)):Object.keys(e).forEach(t=>this._toggleClass(t,!!e[t])))}_removeClasses(e){e&&(Array.isArray(e)||e instanceof Set?e.forEach(e=>this._toggleClass(e,!1)):Object.keys(e).forEach(e=>this._toggleClass(e,!1)))}_toggleClass(e,t){(e=e.trim())&&e.split(/\s+/g).forEach(e=>{t?this._renderer.addClass(this._ngEl.nativeElement,e):this._renderer.removeClass(this._ngEl.nativeElement,e)})}}return e.\u0275fac=function(t){return new(t||e)(Ar(ll),Ar(ul),Ar(Ua),Ar(Wa))},e.\u0275dir=Ke({type:e,selectors:[["","ngClass",""]],inputs:{klass:["class","klass"],ngClass:"ngClass"}}),e})();class Ah{constructor(e,t,n,i){this.$implicit=e,this.ngForOf=t,this.index=n,this.count=i}get first(){return 0===this.index}get last(){return this.index===this.count-1}get even(){return this.index%2==0}get odd(){return!this.even}}let Oh=(()=>{class e{constructor(e,t,n){this._viewContainer=e,this._template=t,this._differs=n,this._ngForOf=null,this._ngForOfDirty=!0,this._differ=null}set ngForOf(e){this._ngForOf=e,this._ngForOfDirty=!0}set ngForTrackBy(e){this._trackByFn=e}get ngForTrackBy(){return this._trackByFn}set ngForTemplate(e){e&&(this._template=e)}ngDoCheck(){if(this._ngForOfDirty){this._ngForOfDirty=!1;const n=this._ngForOf;if(!this._differ&&n)try{this._differ=this._differs.find(n).create(this.ngForTrackBy)}catch(t){throw new Error(`Cannot find a differ supporting object '${n}' of type '${e=n,e.name||typeof e}'. NgFor only supports binding to Iterables such as Arrays.`)}}var e;if(this._differ){const e=this._differ.diff(this._ngForOf);e&&this._applyChanges(e)}}_applyChanges(e){const t=[];e.forEachOperation((e,n,i)=>{if(null==e.previousIndex){const n=this._viewContainer.createEmbeddedView(this._template,new Ah(null,this._ngForOf,-1,-1),null===i?void 0:i),s=new Th(e,n);t.push(s)}else if(null==i)this._viewContainer.remove(null===n?void 0:n);else if(null!==n){const s=this._viewContainer.get(n);this._viewContainer.move(s,i);const o=new Th(e,s);t.push(o)}});for(let n=0;n<t.length;n++)this._perViewChange(t[n].view,t[n].record);for(let n=0,i=this._viewContainer.length;n<i;n++){const e=this._viewContainer.get(n);e.context.index=n,e.context.count=i,e.context.ngForOf=this._ngForOf}e.forEachIdentityChange(e=>{this._viewContainer.get(e.currentIndex).context.$implicit=e.item})}_perViewChange(e,t){e.context.$implicit=t.item}static ngTemplateContextGuard(e,t){return!0}}return e.\u0275fac=function(t){return new(t||e)(Ar(xl),Ar(Cl),Ar(ll))},e.\u0275dir=Ke({type:e,selectors:[["","ngFor","","ngForOf",""]],inputs:{ngForOf:"ngForOf",ngForTrackBy:"ngForTrackBy",ngForTemplate:"ngForTemplate"}}),e})();class Th{constructor(e,t){this.record=e,this.view=t}}let Fh=(()=>{class e{constructor(e,t){this._viewContainer=e,this._context=new Ih,this._thenTemplateRef=null,this._elseTemplateRef=null,this._thenViewRef=null,this._elseViewRef=null,this._thenTemplateRef=t}set ngIf(e){this._context.$implicit=this._context.ngIf=e,this._updateView()}set ngIfThen(e){Mh("ngIfThen",e),this._thenTemplateRef=e,this._thenViewRef=null,this._updateView()}set ngIfElse(e){Mh("ngIfElse",e),this._elseTemplateRef=e,this._elseViewRef=null,this._updateView()}_updateView(){this._context.$implicit?this._thenViewRef||(this._viewContainer.clear(),this._elseViewRef=null,this._thenTemplateRef&&(this._thenViewRef=this._viewContainer.createEmbeddedView(this._thenTemplateRef,this._context))):this._elseViewRef||(this._viewContainer.clear(),this._thenViewRef=null,this._elseTemplateRef&&(this._elseViewRef=this._viewContainer.createEmbeddedView(this._elseTemplateRef,this._context)))}static ngTemplateContextGuard(e,t){return!0}}return e.\u0275fac=function(t){return new(t||e)(Ar(xl),Ar(Cl))},e.\u0275dir=Ke({type:e,selectors:[["","ngIf",""]],inputs:{ngIf:"ngIf",ngIfThen:"ngIfThen",ngIfElse:"ngIfElse"}}),e})();class Ih{constructor(){this.$implicit=null,this.ngIf=null}}function Mh(e,t){if(t&&!t.createEmbeddedView)throw new Error(`${e} must be a TemplateRef, but received '${te(t)}'.`)}class Ph{constructor(e,t){this._viewContainerRef=e,this._templateRef=t,this._created=!1}create(){this._created=!0,this._viewContainerRef.createEmbeddedView(this._templateRef)}destroy(){this._created=!1,this._viewContainerRef.clear()}enforceState(e){e&&!this._created?this.create():!e&&this._created&&this.destroy()}}let Vh=(()=>{class e{constructor(){this._defaultUsed=!1,this._caseCount=0,this._lastCaseCheckIndex=0,this._lastCasesMatched=!1}set ngSwitch(e){this._ngSwitch=e,0===this._caseCount&&this._updateDefaultCases(!0)}_addCase(){return this._caseCount++}_addDefault(e){this._defaultViews||(this._defaultViews=[]),this._defaultViews.push(e)}_matchCase(e){const t=e==this._ngSwitch;return this._lastCasesMatched=this._lastCasesMatched||t,this._lastCaseCheckIndex++,this._lastCaseCheckIndex===this._caseCount&&(this._updateDefaultCases(!this._lastCasesMatched),this._lastCaseCheckIndex=0,this._lastCasesMatched=!1),t}_updateDefaultCases(e){if(this._defaultViews&&e!==this._defaultUsed){this._defaultUsed=e;for(let t=0;t<this._defaultViews.length;t++)this._defaultViews[t].enforceState(e)}}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,selectors:[["","ngSwitch",""]],inputs:{ngSwitch:"ngSwitch"}}),e})(),Lh=(()=>{class e{constructor(e,t,n){this.ngSwitch=n,n._addCase(),this._view=new Ph(e,t)}ngDoCheck(){this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase))}}return e.\u0275fac=function(t){return new(t||e)(Ar(xl),Ar(Cl),Ar(Vh,9))},e.\u0275dir=Ke({type:e,selectors:[["","ngSwitchCase",""]],inputs:{ngSwitchCase:"ngSwitchCase"}}),e})(),Rh=(()=>{class e{constructor(e,t,n){n._addDefault(new Ph(e,t))}}return e.\u0275fac=function(t){return new(t||e)(Ar(xl),Ar(Cl),Ar(Vh,9))},e.\u0275dir=Ke({type:e,selectors:[["","ngSwitchDefault",""]]}),e})(),jh=(()=>{class e{constructor(e){this._viewContainerRef=e,this._viewRef=null,this.ngTemplateOutletContext=null,this.ngTemplateOutlet=null}ngOnChanges(e){if(e.ngTemplateOutlet){const e=this._viewContainerRef;this._viewRef&&e.remove(e.indexOf(this._viewRef)),this._viewRef=this.ngTemplateOutlet?e.createEmbeddedView(this.ngTemplateOutlet,this.ngTemplateOutletContext):null}else this._viewRef&&e.ngTemplateOutletContext&&this.ngTemplateOutletContext&&(this._viewRef.context=this.ngTemplateOutletContext)}}return e.\u0275fac=function(t){return new(t||e)(Ar(xl))},e.\u0275dir=Ke({type:e,selectors:[["","ngTemplateOutlet",""]],inputs:{ngTemplateOutletContext:"ngTemplateOutletContext",ngTemplateOutlet:"ngTemplateOutlet"},features:[lt]}),e})();function Nh(e,t){return Error(`InvalidPipeArgument: '${t}' for pipe '${te(e)}'`)}const Bh=/(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D])\S*/g;let $h=(()=>{class e{transform(t){if(null==t)return null;if("string"!=typeof t)throw Nh(e,t);return t.replace(Bh,e=>e[0].toUpperCase()+e.substr(1).toLowerCase())}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275pipe=Ye({name:"titlecase",type:e,pure:!0}),e})(),Hh=(()=>{class e{constructor(e){this.locale=e}transform(t,n="mediumDate",i,s){if(null==t||""===t||t!=t)return null;try{return sh(t,n,s||this.locale,i)}catch(o){throw Nh(e,o.message)}}}return e.\u0275fac=function(t){return new(t||e)(Ar(Oc,16))},e.\u0275pipe=Ye({name:"date",type:e,pure:!0}),e})(),Uh=(()=>{class e{constructor(e){this._locale=e}transform(t,n,i){if(!zh(t))return null;i=i||this._locale;try{return function(e,t,n){return wh(e,_h(Ku(t,ju.Decimal),Gu(t,Uu.MinusSign)),t,Uu.Group,Uu.Decimal,n)}(Wh(t),i,n)}catch(s){throw Nh(e,s.message)}}}return e.\u0275fac=function(t){return new(t||e)(Ar(Oc,16))},e.\u0275pipe=Ye({name:"number",type:e,pure:!0}),e})(),qh=(()=>{class e{constructor(e,t="USD"){this._locale=e,this._defaultCurrencyCode=t}transform(t,n,i="symbol",s,o){if(!zh(t))return null;o=o||this._locale,"boolean"==typeof i&&(i=i?"symbol":"code");let r=n||this._defaultCurrencyCode;"code"!==i&&(r="symbol"===i||"symbol-narrow"===i?function(e,t,n="en"){const i=function(e){return Da(e)[Ea.Currencies]}(n)[e]||Ru[e]||[],s=i[1];return"narrow"===t&&"string"==typeof s?s:i[0]||e}(r,"symbol"===i?"wide":"narrow",o):i);try{return function(e,t,n,i,s){const o=_h(Ku(t,ju.Currency),Gu(t,Uu.MinusSign));return o.minFrac=function(e){let t;const n=Ru[e];return n&&(t=n[2]),"number"==typeof t?t:2}(i),o.maxFrac=o.minFrac,wh(e,o,t,Uu.CurrencyGroup,Uu.CurrencyDecimal,s).replace("\xa4",n).replace("\xa4","").trim()}(Wh(t),o,r,n,s)}catch(a){throw Nh(e,a.message)}}}return e.\u0275fac=function(t){return new(t||e)(Ar(Oc,16),Ar(Tc,16))},e.\u0275pipe=Ye({name:"currency",type:e,pure:!0}),e})();function zh(e){return!(null==e||""===e||e!=e)}function Wh(e){if("string"==typeof e&&!isNaN(Number(e)-parseFloat(e)))return Number(e);if("number"!=typeof e)throw new Error(`${e} is not a number`);return e}let Gh=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[{provide:Sh,useClass:Eh}]}),e})(),Kh=(()=>{class e{}return e.\u0275prov=he({token:e,providedIn:"root",factory:()=>new Yh(ci(yu),window)}),e})();class Yh{constructor(e,t){this.document=e,this.window=t,this.offset=()=>[0,0]}setOffset(e){this.offset=Array.isArray(e)?()=>e:e}getScrollPosition(){return this.supportsScrolling()?[this.window.pageXOffset,this.window.pageYOffset]:[0,0]}scrollToPosition(e){this.supportsScrolling()&&this.window.scrollTo(e[0],e[1])}scrollToAnchor(e){if(!this.supportsScrolling())return;const t=function(e,t){const n=e.getElementById(t)||e.getElementsByName(t)[0];if(n)return n;if("function"==typeof e.createTreeWalker&&e.body&&(e.body.createShadowRoot||e.body.attachShadow)){const n=e.createTreeWalker(e.body,NodeFilter.SHOW_ELEMENT);let i=n.currentNode;for(;i;){const e=i.shadowRoot;if(e){const n=e.getElementById(t)||e.querySelector(`[name="${t}"]`);if(n)return n}i=n.nextNode()}}return null}(this.document,e);t&&(this.scrollToElement(t),this.attemptFocus(t))}setHistoryScrollRestoration(e){if(this.supportScrollRestoration()){const t=this.window.history;t&&t.scrollRestoration&&(t.scrollRestoration=e)}}scrollToElement(e){const t=e.getBoundingClientRect(),n=t.left+this.window.pageXOffset,i=t.top+this.window.pageYOffset,s=this.offset();this.window.scrollTo(n-s[0],i-s[1])}attemptFocus(e){return e.focus(),this.document.activeElement===e}supportScrollRestoration(){try{if(!this.supportsScrolling())return!1;const e=Zh(this.window.history)||Zh(Object.getPrototypeOf(this.window.history));return!(!e||!e.writable&&!e.set)}catch(e){return!1}}supportsScrolling(){try{return!!this.window&&!!this.window.scrollTo&&"pageXOffset"in this.window}catch(e){return!1}}}function Zh(e){return Object.getOwnPropertyDescriptor(e,"scrollRestoration")}class Qh{}class Jh extends class extends class{}{constructor(){super(...arguments),this.supportsDOMEvents=!0}}{static makeCurrent(){var e;e=new Jh,vu||(vu=e)}onAndCancel(e,t,n){return e.addEventListener(t,n,!1),()=>{e.removeEventListener(t,n,!1)}}dispatchEvent(e,t){e.dispatchEvent(t)}remove(e){e.parentNode&&e.parentNode.removeChild(e)}createElement(e,t){return(t=t||this.getDefaultDocument()).createElement(e)}createHtmlDocument(){return document.implementation.createHTMLDocument("fakeTitle")}getDefaultDocument(){return document}isElementNode(e){return e.nodeType===Node.ELEMENT_NODE}isShadowRoot(e){return e instanceof DocumentFragment}getGlobalEventTarget(e,t){return"window"===t?window:"document"===t?e:"body"===t?e.body:null}getBaseHref(e){const t=(ed=ed||document.querySelector("base"),ed?ed.getAttribute("href"):null);return null==t?null:function(e){Xh=Xh||document.createElement("a"),Xh.setAttribute("href",e);const t=Xh.pathname;return"/"===t.charAt(0)?t:`/${t}`}(t)}resetBaseElement(){ed=null}getUserAgent(){return window.navigator.userAgent}getCookie(e){return kh(document.cookie,e)}}let Xh,ed=null;const td=new zn("TRANSITION_ID"),nd=[{provide:Cc,useFactory:function(e,t,n){return()=>{n.get(wc).donePromise.then(()=>{const n=bu();Array.prototype.slice.apply(t.querySelectorAll("style[ng-transition]")).filter(t=>t.getAttribute("ng-transition")===e).forEach(e=>n.remove(e))})}},deps:[td,yu,lr],multi:!0}];class id{static init(){!function(e){Jc=e}(new id)}addToWindow(e){Fe.getAngularTestability=(t,n=!0)=>{const i=e.findTestabilityInTree(t,n);if(null==i)throw new Error("Could not find testability for element.");return i},Fe.getAllAngularTestabilities=()=>e.getAllTestabilities(),Fe.getAllAngularRootElements=()=>e.getAllRootElements(),Fe.frameworkStabilizers||(Fe.frameworkStabilizers=[]),Fe.frameworkStabilizers.push(e=>{const t=Fe.getAllAngularTestabilities();let n=t.length,i=!1;const s=function(t){i=i||t,n--,0==n&&e(i)};t.forEach(function(e){e.whenStable(s)})})}findTestabilityInTree(e,t,n){if(null==t)return null;const i=e.getTestability(t);return null!=i?i:n?bu().isShadowRoot(t)?this.findTestabilityInTree(e,t.host,!0):this.findTestabilityInTree(e,t.parentElement,!0):null}}let sd=(()=>{class e{build(){return new XMLHttpRequest}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})();const od=new zn("EventManagerPlugins");let rd=(()=>{class e{constructor(e,t){this._zone=t,this._eventNameToPlugin=new Map,e.forEach(e=>e.manager=this),this._plugins=e.slice().reverse()}addEventListener(e,t,n){return this._findPluginFor(t).addEventListener(e,t,n)}addGlobalEventListener(e,t,n){return this._findPluginFor(t).addGlobalEventListener(e,t,n)}getZone(){return this._zone}_findPluginFor(e){const t=this._eventNameToPlugin.get(e);if(t)return t;const n=this._plugins;for(let i=0;i<n.length;i++){const t=n[i];if(t.supports(e))return this._eventNameToPlugin.set(e,t),t}throw new Error(`No event manager plugin found for event ${e}`)}}return e.\u0275fac=function(t){return new(t||e)(ci(od),ci($c))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})();class ad{constructor(e){this._doc=e}addGlobalEventListener(e,t,n){const i=bu().getGlobalEventTarget(this._doc,e);if(!i)throw new Error(`Unsupported event target ${i} for event ${t}`);return this.addEventListener(i,t,n)}}let ld=(()=>{class e{constructor(){this._stylesSet=new Set}addStyles(e){const t=new Set;e.forEach(e=>{this._stylesSet.has(e)||(this._stylesSet.add(e),t.add(e))}),this.onStylesAdded(t)}onStylesAdded(e){}getAllStyles(){return Array.from(this._stylesSet)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),cd=(()=>{class e extends ld{constructor(e){super(),this._doc=e,this._hostNodes=new Map,this._hostNodes.set(e.head,[])}_addStylesToHost(e,t,n){e.forEach(e=>{const i=this._doc.createElement("style");i.textContent=e,n.push(t.appendChild(i))})}addHost(e){const t=[];this._addStylesToHost(this._stylesSet,e,t),this._hostNodes.set(e,t)}removeHost(e){const t=this._hostNodes.get(e);t&&t.forEach(ud),this._hostNodes.delete(e)}onStylesAdded(e){this._hostNodes.forEach((t,n)=>{this._addStylesToHost(e,n,t)})}ngOnDestroy(){this._hostNodes.forEach(e=>e.forEach(ud))}}return e.\u0275fac=function(t){return new(t||e)(ci(yu))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})();function ud(e){bu().remove(e)}const hd={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},dd=/%COMP%/g;function pd(e,t,n){for(let i=0;i<t.length;i++){let s=t[i];Array.isArray(s)?pd(e,s,n):(s=s.replace(dd,e),n.push(s))}return n}function fd(e){return t=>{if("__ngUnwrap__"===t)return e;!1===e(t)&&(t.preventDefault(),t.returnValue=!1)}}let gd=(()=>{class e{constructor(e,t,n){this.eventManager=e,this.sharedStylesHost=t,this.appId=n,this.rendererByCompId=new Map,this.defaultRenderer=new md(e)}createRenderer(e,t){if(!e||!t)return this.defaultRenderer;switch(t.encapsulation){case ke.Emulated:{let n=this.rendererByCompId.get(t.id);return n||(n=new vd(this.eventManager,this.sharedStylesHost,t,this.appId),this.rendererByCompId.set(t.id,n)),n.applyToHost(e),n}case 1:case ke.ShadowDom:return new bd(this.eventManager,this.sharedStylesHost,e,t);default:if(!this.rendererByCompId.has(t.id)){const e=pd(t.id,t.styles,[]);this.sharedStylesHost.addStyles(e),this.rendererByCompId.set(t.id,this.defaultRenderer)}return this.defaultRenderer}}begin(){}end(){}}return e.\u0275fac=function(t){return new(t||e)(ci(rd),ci(cd),ci(_c))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})();class md{constructor(e){this.eventManager=e,this.data=Object.create(null)}destroy(){}createElement(e,t){return t?document.createElementNS(hd[t]||t,e):document.createElement(e)}createComment(e){return document.createComment(e)}createText(e){return document.createTextNode(e)}appendChild(e,t){e.appendChild(t)}insertBefore(e,t,n){e&&e.insertBefore(t,n)}removeChild(e,t){e&&e.removeChild(t)}selectRootElement(e,t){let n="string"==typeof e?document.querySelector(e):e;if(!n)throw new Error(`The selector "${e}" did not match any elements`);return t||(n.textContent=""),n}parentNode(e){return e.parentNode}nextSibling(e){return e.nextSibling}setAttribute(e,t,n,i){if(i){t=i+":"+t;const s=hd[i];s?e.setAttributeNS(s,t,n):e.setAttribute(t,n)}else e.setAttribute(t,n)}removeAttribute(e,t,n){if(n){const i=hd[n];i?e.removeAttributeNS(i,t):e.removeAttribute(`${n}:${t}`)}else e.removeAttribute(t)}addClass(e,t){e.classList.add(t)}removeClass(e,t){e.classList.remove(t)}setStyle(e,t,n,i){i&(cs.DashCase|cs.Important)?e.style.setProperty(t,n,i&cs.Important?"important":""):e.style[t]=n}removeStyle(e,t,n){n&cs.DashCase?e.style.removeProperty(t):e.style[t]=""}setProperty(e,t,n){e[t]=n}setValue(e,t){e.nodeValue=t}listen(e,t,n){return"string"==typeof e?this.eventManager.addGlobalEventListener(e,t,fd(n)):this.eventManager.addEventListener(e,t,fd(n))}}class vd extends md{constructor(e,t,n,i){super(e),this.component=n;const s=pd(i+"-"+n.id,n.styles,[]);t.addStyles(s),this.contentAttr="_ngcontent-%COMP%".replace(dd,i+"-"+n.id),this.hostAttr="_nghost-%COMP%".replace(dd,i+"-"+n.id)}applyToHost(e){super.setAttribute(e,this.hostAttr,"")}createElement(e,t){const n=super.createElement(e,t);return super.setAttribute(n,this.contentAttr,""),n}}class bd extends md{constructor(e,t,n,i){super(e),this.sharedStylesHost=t,this.hostEl=n,this.shadowRoot=n.attachShadow({mode:"open"}),this.sharedStylesHost.addHost(this.shadowRoot);const s=pd(i.id,i.styles,[]);for(let o=0;o<s.length;o++){const e=document.createElement("style");e.textContent=s[o],this.shadowRoot.appendChild(e)}}nodeOrShadowRoot(e){return e===this.hostEl?this.shadowRoot:e}destroy(){this.sharedStylesHost.removeHost(this.shadowRoot)}appendChild(e,t){return super.appendChild(this.nodeOrShadowRoot(e),t)}insertBefore(e,t,n){return super.insertBefore(this.nodeOrShadowRoot(e),t,n)}removeChild(e,t){return super.removeChild(this.nodeOrShadowRoot(e),t)}parentNode(e){return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(e)))}}let yd=(()=>{class e extends ad{constructor(e){super(e)}supports(e){return!0}addEventListener(e,t,n){return e.addEventListener(t,n,!1),()=>this.removeEventListener(e,t,n)}removeEventListener(e,t,n){return e.removeEventListener(t,n)}}return e.\u0275fac=function(t){return new(t||e)(ci(yu))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})();const Cd=["alt","control","meta","shift"],wd={"\b":"Backspace","\t":"Tab","\x7f":"Delete","\x1b":"Escape",Del:"Delete",Esc:"Escape",Left:"ArrowLeft",Right:"ArrowRight",Up:"ArrowUp",Down:"ArrowDown",Menu:"ContextMenu",Scroll:"ScrollLock",Win:"OS"},_d={A:"1",B:"2",C:"3",D:"4",E:"5",F:"6",G:"7",H:"8",I:"9",J:"*",K:"+",M:"-",N:".",O:"/","`":"0","\x90":"NumLock"},Dd={alt:e=>e.altKey,control:e=>e.ctrlKey,meta:e=>e.metaKey,shift:e=>e.shiftKey};let Sd=(()=>{class e extends ad{constructor(e){super(e)}supports(t){return null!=e.parseEventName(t)}addEventListener(t,n,i){const s=e.parseEventName(n),o=e.eventCallback(s.fullKey,i,this.manager.getZone());return this.manager.getZone().runOutsideAngular(()=>bu().onAndCancel(t,s.domEventName,o))}static parseEventName(t){const n=t.toLowerCase().split("."),i=n.shift();if(0===n.length||"keydown"!==i&&"keyup"!==i)return null;const s=e._normalizeKey(n.pop());let o="";if(Cd.forEach(e=>{const t=n.indexOf(e);t>-1&&(n.splice(t,1),o+=e+".")}),o+=s,0!=n.length||0===s.length)return null;const r={};return r.domEventName=i,r.fullKey=o,r}static getEventFullKey(e){let t="",n=function(e){let t=e.key;if(null==t){if(t=e.keyIdentifier,null==t)return"Unidentified";t.startsWith("U+")&&(t=String.fromCharCode(parseInt(t.substring(2),16)),3===e.location&&_d.hasOwnProperty(t)&&(t=_d[t]))}return wd[t]||t}(e);return n=n.toLowerCase()," "===n?n="space":"."===n&&(n="dot"),Cd.forEach(i=>{i!=n&&(0,Dd[i])(e)&&(t+=i+".")}),t+=n,t}static eventCallback(t,n,i){return s=>{e.getEventFullKey(s)===t&&i.runGuarded(()=>n(s))}}static _normalizeKey(e){switch(e){case"esc":return"escape";default:return e}}}return e.\u0275fac=function(t){return new(t||e)(ci(yu))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),Ed=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=he({factory:function(){return ci(xd)},token:e,providedIn:"root"}),e})();function kd(e){return new xd(e.get(yu))}let xd=(()=>{class e extends Ed{constructor(e){super(),this._doc=e}sanitize(e,t){if(null==t)return null;switch(e){case Qi.NONE:return t;case Qi.HTML:return ki(t,"HTML")?Ei(t):Yi(this._doc,String(t)).toString();case Qi.STYLE:return ki(t,"Style")?Ei(t):t;case Qi.SCRIPT:if(ki(t,"Script"))return Ei(t);throw new Error("unsafe value used in a script context");case Qi.URL:return xi(t),ki(t,"URL")?Ei(t):Ii(String(t));case Qi.RESOURCE_URL:if(ki(t,"ResourceURL"))return Ei(t);throw new Error("unsafe value used in a resource URL context (see https://g.co/ng/security#xss)");default:throw new Error(`Unexpected SecurityContext ${e} (see https://g.co/ng/security#xss)`)}}bypassSecurityTrustHtml(e){return new Ci(e)}bypassSecurityTrustStyle(e){return new wi(e)}bypassSecurityTrustScript(e){return new _i(e)}bypassSecurityTrustUrl(e){return new Di(e)}bypassSecurityTrustResourceUrl(e){return new Si(e)}}return e.\u0275fac=function(t){return new(t||e)(ci(yu))},e.\u0275prov=he({factory:function(){return kd(ci(Go))},token:e,providedIn:"root"}),e})();const Ad=iu(fu,"browser",[{provide:kc,useValue:"browser"},{provide:Ec,useValue:function(){Jh.makeCurrent(),id.init()},multi:!0},{provide:yu,useFactory:function(){return function(e){pt=e}(document),document},deps:[]}]),Od=[[],{provide:Yo,useValue:"root"},{provide:rs,useFactory:function(){return new rs},deps:[]},{provide:od,useClass:yd,multi:!0,deps:[yu,$c,kc]},{provide:od,useClass:Sd,multi:!0,deps:[yu]},[],{provide:gd,useClass:gd,deps:[rd,cd,_c]},{provide:za,useExisting:gd},{provide:ld,useExisting:cd},{provide:cd,useClass:cd,deps:[yu]},{provide:Kc,useClass:Kc,deps:[$c]},{provide:rd,useClass:rd,deps:[od,$c]},{provide:Qh,useClass:sd,deps:[]},[]];let Td=(()=>{class e{constructor(e){if(e)throw new Error("BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.")}static withServerTransition(t){return{ngModule:e,providers:[{provide:_c,useValue:t.appId},{provide:td,useExisting:_c},nd]}}}return e.\u0275fac=function(t){return new(t||e)(ci(e,12))},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:Od,imports:[Gh,mu]}),e})();"undefined"!=typeof window&&window;class Fd extends h{constructor(e,t){super()}schedule(e,t=0){return this}}class Id extends Fd{constructor(e,t){super(e,t),this.scheduler=e,this.work=t,this.pending=!1}schedule(e,t=0){if(this.closed)return this;this.state=e;const n=this.id,i=this.scheduler;return null!=n&&(this.id=this.recycleAsyncId(i,n,t)),this.pending=!0,this.delay=t,this.id=this.id||this.requestAsyncId(i,this.id,t),this}requestAsyncId(e,t,n=0){return setInterval(e.flush.bind(e,this),n)}recycleAsyncId(e,t,n=0){if(null!==n&&this.delay===n&&!1===this.pending)return t;clearInterval(t)}execute(e,t){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;const n=this._execute(e,t);if(n)return n;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))}_execute(e,t){let n,i=!1;try{this.work(e)}catch(s){i=!0,n=!!s&&s||new Error(s)}if(i)return this.unsubscribe(),n}_unsubscribe(){const e=this.id,t=this.scheduler,n=t.actions,i=n.indexOf(this);this.work=null,this.state=null,this.pending=!1,this.scheduler=null,-1!==i&&n.splice(i,1),null!=e&&(this.id=this.recycleAsyncId(t,e,null)),this.delay=null}}class Md extends Id{constructor(e,t){super(e,t),this.scheduler=e,this.work=t}schedule(e,t=0){return t>0?super.schedule(e,t):(this.delay=t,this.state=e,this.scheduler.flush(this),this)}execute(e,t){return t>0||this.closed?super.execute(e,t):this._execute(e,t)}requestAsyncId(e,t,n=0){return null!==n&&n>0||null===n&&this.delay>0?super.requestAsyncId(e,t,n):e.flush(this)}}let Pd=(()=>{class e{constructor(t,n=e.now){this.SchedulerAction=t,this.now=n}schedule(e,t=0,n){return new this.SchedulerAction(this,e).schedule(n,t)}}return e.now=()=>Date.now(),e})();class Vd extends Pd{constructor(e,t=Pd.now){super(e,()=>Vd.delegate&&Vd.delegate!==this?Vd.delegate.now():t()),this.actions=[],this.active=!1,this.scheduled=void 0}schedule(e,t=0,n){return Vd.delegate&&Vd.delegate!==this?Vd.delegate.schedule(e,t,n):super.schedule(e,t,n)}flush(e){const{actions:t}=this;if(this.active)return void t.push(e);let n;this.active=!0;do{if(n=e.execute(e.state,e.delay))break}while(e=t.shift());if(this.active=!1,n){for(;e=t.shift();)e.unsubscribe();throw n}}}class Ld extends Vd{}const Rd=new Ld(Md),jd=new b(e=>e.complete());function Nd(e){return e?function(e){return new b(t=>e.schedule(()=>t.complete()))}(e):jd}function Bd(...e){let t=e[e.length-1];return E(t)?(e.pop(),V(e,t)):q(e)}function $d(e,t){return new b(t?n=>t.schedule(Hd,0,{error:e,subscriber:n}):t=>t.error(e))}function Hd({error:e,subscriber:t}){t.error(e)}let Ud=(()=>{class e{constructor(e,t,n){this.kind=e,this.value=t,this.error=n,this.hasValue="N"===e}observe(e){switch(this.kind){case"N":return e.next&&e.next(this.value);case"E":return e.error&&e.error(this.error);case"C":return e.complete&&e.complete()}}do(e,t,n){switch(this.kind){case"N":return e&&e(this.value);case"E":return t&&t(this.error);case"C":return n&&n()}}accept(e,t,n){return e&&"function"==typeof e.next?this.observe(e):this.do(e,t,n)}toObservable(){switch(this.kind){case"N":return Bd(this.value);case"E":return $d(this.error);case"C":return Nd()}throw new Error("unexpected notification kind value")}static createNext(t){return void 0!==t?new e("N",t):e.undefinedValueNotification}static createError(t){return new e("E",void 0,t)}static createComplete(){return e.completeNotification}}return e.completeNotification=new e("C"),e.undefinedValueNotification=new e("N",void 0),e})();class qd extends f{constructor(e,t,n=0){super(e),this.scheduler=t,this.delay=n}static dispatch(e){const{notification:t,destination:n}=e;t.observe(n),this.unsubscribe()}scheduleMessage(e){this.destination.add(this.scheduler.schedule(qd.dispatch,this.delay,new zd(e,this.destination)))}_next(e){this.scheduleMessage(Ud.createNext(e))}_error(e){this.scheduleMessage(Ud.createError(e)),this.unsubscribe()}_complete(){this.scheduleMessage(Ud.createComplete()),this.unsubscribe()}}class zd{constructor(e,t){this.notification=e,this.destination=t}}class Wd extends D{constructor(e=Number.POSITIVE_INFINITY,t=Number.POSITIVE_INFINITY,n){super(),this.scheduler=n,this._events=[],this._infiniteTimeWindow=!1,this._bufferSize=e<1?1:e,this._windowTime=t<1?1:t,t===Number.POSITIVE_INFINITY?(this._infiniteTimeWindow=!0,this.next=this.nextInfiniteTimeWindow):this.next=this.nextTimeWindow}nextInfiniteTimeWindow(e){if(!this.isStopped){const t=this._events;t.push(e),t.length>this._bufferSize&&t.shift()}super.next(e)}nextTimeWindow(e){this.isStopped||(this._events.push(new Gd(this._getNow(),e)),this._trimBufferThenGetEvents()),super.next(e)}_subscribe(e){const t=this._infiniteTimeWindow,n=t?this._events:this._trimBufferThenGetEvents(),i=this.scheduler,s=n.length;let o;if(this.closed)throw new C;if(this.isStopped||this.hasError?o=h.EMPTY:(this.observers.push(e),o=new w(this,e)),i&&e.add(e=new qd(e,i)),t)for(let r=0;r<s&&!e.closed;r++)e.next(n[r]);else for(let r=0;r<s&&!e.closed;r++)e.next(n[r].value);return this.hasError?e.error(this.thrownError):this.isStopped&&e.complete(),o}_getNow(){return(this.scheduler||Rd).now()}_trimBufferThenGetEvents(){const e=this._getNow(),t=this._bufferSize,n=this._windowTime,i=this._events,s=i.length;let o=0;for(;o<s&&!(e-i[o].time<n);)o++;return s>t&&(o=Math.max(o,s-t)),o>0&&i.splice(0,o),i}}class Gd{constructor(e,t){this.time=e,this.value=t}}function Kd(e,t){return"function"==typeof t?n=>n.pipe(Kd((n,i)=>L(e(n,i)).pipe(k((e,s)=>t(n,e,i,s))))):t=>t.lift(new Yd(e))}class Yd{constructor(e){this.project=e}call(e,t){return t.subscribe(new Zd(e,this.project))}}class Zd extends j{constructor(e,t){super(e),this.project=t,this.index=0}_next(e){let t;const n=this.index++;try{t=this.project(e,n)}catch(i){return void this.destination.error(i)}this._innerSub(t)}_innerSub(e){const t=this.innerSubscription;t&&t.unsubscribe();const n=new R(this),i=this.destination;i.add(n),this.innerSubscription=N(e,n),this.innerSubscription!==n&&i.add(this.innerSubscription)}_complete(){const{innerSubscription:e}=this;e&&!e.closed||super._complete(),this.unsubscribe()}_unsubscribe(){this.innerSubscription=void 0}notifyComplete(){this.innerSubscription=void 0,this.isStopped&&super._complete()}notifyNext(e){this.destination.next(e)}}const Qd={schedule(e,t){const n=setTimeout(e,t);return()=>clearTimeout(n)},scheduleBeforeRender(e){if("undefined"==typeof window)return Qd.schedule(e,0);if(void 0===window.requestAnimationFrame)return Qd.schedule(e,16);const t=window.requestAnimationFrame(e);return()=>window.cancelAnimationFrame(t)}};let Jd;function Xd(e,t,n){let i=n;return function(e){return!!e&&e.nodeType===Node.ELEMENT_NODE}(e)&&t.some((t,n)=>!("*"===t||!function(e,t){if(!Jd){const e=Element.prototype;Jd=e.matches||e.matchesSelector||e.mozMatchesSelector||e.msMatchesSelector||e.oMatchesSelector||e.webkitMatchesSelector}return e.nodeType===Node.ELEMENT_NODE&&Jd.call(e,t)}(e,t)||(i=n,0))),i}class ep{constructor(e,t){this.componentFactory=t.get(Na).resolveComponentFactory(e)}create(e){return new tp(this.componentFactory,e)}}class tp{constructor(e,t){this.componentFactory=e,this.injector=t,this.eventEmitters=new Wd(1),this.events=this.eventEmitters.pipe(Kd(e=>z(...e))),this.componentRef=null,this.viewChangeDetectorRef=null,this.inputChanges=null,this.hasInputChanges=!1,this.implementsOnChanges=!1,this.scheduledChangeDetectionFn=null,this.scheduledDestroyFn=null,this.initialInputValues=new Map,this.unchangedInputs=new Set(this.componentFactory.inputs.map(({propName:e})=>e)),this.ngZone=this.injector.get($c),this.elementZone="undefined"==typeof Zone?null:this.ngZone.run(()=>Zone.current)}connect(e){this.runInZone(()=>{if(null!==this.scheduledDestroyFn)return this.scheduledDestroyFn(),void(this.scheduledDestroyFn=null);null===this.componentRef&&this.initializeComponent(e)})}disconnect(){this.runInZone(()=>{null!==this.componentRef&&null===this.scheduledDestroyFn&&(this.scheduledDestroyFn=Qd.schedule(()=>{null!==this.componentRef&&(this.componentRef.destroy(),this.componentRef=null,this.viewChangeDetectorRef=null)},10))})}getInputValue(e){return this.runInZone(()=>null===this.componentRef?this.initialInputValues.get(e):this.componentRef.instance[e])}setInputValue(e,t){this.runInZone(()=>{var n,i;null!==this.componentRef?((n=t)!==(i=this.getInputValue(e))&&(n==n||i==i)||void 0===t&&this.unchangedInputs.has(e))&&(this.recordInputChange(e,t),this.unchangedInputs.delete(e),this.hasInputChanges=!0,this.componentRef.instance[e]=t,this.scheduleDetectChanges()):this.initialInputValues.set(e,t)})}initializeComponent(e){const t=lr.create({providers:[],parent:this.injector}),n=function(e,t){const n=e.childNodes,i=t.map(()=>[]);let s=-1;t.some((e,t)=>"*"===e&&(s=t,!0));for(let o=0,r=n.length;o<r;++o){const e=n[o],r=Xd(e,t,s);-1!==r&&i[r].push(e)}return i}(e,this.componentFactory.ngContentSelectors);this.componentRef=this.componentFactory.create(t,n,e),this.viewChangeDetectorRef=this.componentRef.injector.get(gl),this.implementsOnChanges="function"==typeof this.componentRef.instance.ngOnChanges,this.initializeInputs(),this.initializeOutputs(this.componentRef),this.detectChanges(),this.injector.get(au).attachView(this.componentRef.hostView)}initializeInputs(){this.componentFactory.inputs.forEach(({propName:e})=>{this.initialInputValues.has(e)&&this.setInputValue(e,this.initialInputValues.get(e))}),this.initialInputValues.clear()}initializeOutputs(e){const t=this.componentFactory.outputs.map(({propName:t,templateName:n})=>e.instance[t].pipe(k(e=>({name:n,value:e}))));this.eventEmitters.next(t)}callNgOnChanges(e){if(!this.implementsOnChanges||null===this.inputChanges)return;const t=this.inputChanges;this.inputChanges=null,e.instance.ngOnChanges(t)}markViewForCheck(e){this.hasInputChanges&&(this.hasInputChanges=!1,e.markForCheck())}scheduleDetectChanges(){this.scheduledChangeDetectionFn||(this.scheduledChangeDetectionFn=Qd.scheduleBeforeRender(()=>{this.scheduledChangeDetectionFn=null,this.detectChanges()}))}recordInputChange(e,t){if(!this.implementsOnChanges)return;null===this.inputChanges&&(this.inputChanges={});const n=this.inputChanges[e];if(n)return void(n.currentValue=t);const i=this.unchangedInputs.has(e),s=i?void 0:this.getInputValue(e);this.inputChanges[e]=new at(s,t,i)}detectChanges(){null!==this.componentRef&&(this.callNgOnChanges(this.componentRef),this.markViewForCheck(this.viewChangeDetectorRef),this.componentRef.changeDetectorRef.detectChanges())}runInZone(e){return this.elementZone&&Zone.current!==this.elementZone?this.ngZone.run(e):e()}}class np extends HTMLElement{constructor(){super(...arguments),this.ngElementEventsSubscription=null}}function ip(e,t,n,s){return i(n)&&(s=n,n=void 0),s?ip(e,t,n).pipe(k(e=>l(e)?s(...e):s(e))):new b(i=>{sp(e,t,function(e){i.next(arguments.length>1?Array.prototype.slice.call(arguments):e)},i,n)})}function sp(e,t,n,i,s){let o;if(function(e){return e&&"function"==typeof e.addEventListener&&"function"==typeof e.removeEventListener}(e)){const i=e;e.addEventListener(t,n,s),o=()=>i.removeEventListener(t,n,s)}else if(function(e){return e&&"function"==typeof e.on&&"function"==typeof e.off}(e)){const i=e;e.on(t,n),o=()=>i.off(t,n)}else if(function(e){return e&&"function"==typeof e.addListener&&"function"==typeof e.removeListener}(e)){const i=e;e.addListener(t,n),o=()=>i.removeListener(t,n)}else{if(!e||!e.length)throw new TypeError("Invalid event target");for(let o=0,r=e.length;o<r;o++)sp(e[o],t,n,i,s)}i.add(o)}new Ya("12.0.5");const op=new Vd(Id);function rp(e){return!l(e)&&e-parseFloat(e)+1>=0}function ap(e){const{index:t,period:n,subscriber:i}=e;if(i.next(t),!i.closed){if(-1===n)return i.complete();e.index=t+1,this.schedule(e,n)}}function lp(e,t=null){return{type:4,styles:t,timings:e}}function cp(e){return{type:6,styles:e,offset:null}}function up(e,t,n=null){return{type:1,expr:e,animation:t,options:n}}class hp extends D{constructor(e){super(),this._value=e}get value(){return this.getValue()}_subscribe(e){const t=super._subscribe(e);return t&&!t.closed&&e.next(this._value),t}getValue(){if(this.hasError)throw this.thrownError;if(this.closed)throw new C;return this._value}next(e){super.next(this._value=e)}}class dp extends f{notifyNext(e,t,n,i,s){this.destination.next(t)}notifyError(e,t){this.destination.error(e)}notifyComplete(e){this.destination.complete()}}class pp extends f{constructor(e,t,n){super(),this.parent=e,this.outerValue=t,this.outerIndex=n,this.index=0}_next(e){this.parent.notifyNext(this.outerValue,e,this.outerIndex,this.index++,this)}_error(e){this.parent.notifyError(e,this),this.unsubscribe()}_complete(){this.parent.notifyComplete(this),this.unsubscribe()}}function fp(e,t,n,i,s=new pp(e,n,i)){if(!s.closed)return t instanceof b?t.subscribe(s):P(t)(s)}const gp={};class mp{constructor(e){this.resultSelector=e}call(e,t){return t.subscribe(new vp(e,this.resultSelector))}}class vp extends dp{constructor(e,t){super(e),this.resultSelector=t,this.active=0,this.values=[],this.observables=[]}_next(e){this.values.push(gp),this.observables.push(e)}_complete(){const e=this.observables,t=e.length;if(0===t)this.destination.complete();else{this.active=t,this.toRespond=t;for(let n=0;n<t;n++)this.add(fp(this,e[n],void 0,n))}}notifyComplete(e){0==(this.active-=1)&&this.destination.complete()}notifyNext(e,t,n){const i=this.values,s=this.toRespond?i[n]===gp?--this.toRespond:this.toRespond:0;i[n]=t,0===s&&(this.resultSelector?this._tryResultSelector(i):this.destination.next(i.slice()))}_tryResultSelector(e){let t;try{t=this.resultSelector.apply(this,e)}catch(n){return void this.destination.error(n)}this.destination.next(t)}}const bp=(()=>{function e(){return Error.call(this),this.message="no elements in sequence",this.name="EmptyError",this}return e.prototype=Object.create(Error.prototype),e})();function yp(...e){return U(1)(Bd(...e))}function Cp(e){return new b(t=>{let n;try{n=e()}catch(i){return void t.error(i)}return(n?L(n):Nd()).subscribe(t)})}const wp=(()=>{function e(){return Error.call(this),this.message="argument out of range",this.name="ArgumentOutOfRangeError",this}return e.prototype=Object.create(Error.prototype),e})();function _p(e){return t=>0===e?Nd():t.lift(new Dp(e))}class Dp{constructor(e){if(this.total=e,this.total<0)throw new wp}call(e,t){return t.subscribe(new Sp(e,this.total))}}class Sp extends f{constructor(e,t){super(e),this.total=t,this.count=0}_next(e){const t=this.total,n=++this.count;n<=t&&(this.destination.next(e),n===t&&(this.destination.complete(),this.unsubscribe()))}}function Ep(e,t){let n=!1;return arguments.length>=2&&(n=!0),function(i){return i.lift(new kp(e,t,n))}}class kp{constructor(e,t,n=!1){this.accumulator=e,this.seed=t,this.hasSeed=n}call(e,t){return t.subscribe(new xp(e,this.accumulator,this.seed,this.hasSeed))}}class xp extends f{constructor(e,t,n,i){super(e),this.accumulator=t,this._seed=n,this.hasSeed=i,this.index=0}get seed(){return this._seed}set seed(e){this.hasSeed=!0,this._seed=e}_next(e){if(this.hasSeed)return this._tryNext(e);this.seed=e,this.destination.next(e)}_tryNext(e){const t=this.index++;let n;try{n=this.accumulator(this.seed,e,t)}catch(i){this.destination.error(i)}this.seed=n,this.destination.next(n)}}function Ap(e,t){return function(n){return n.lift(new Op(e,t))}}class Op{constructor(e,t){this.predicate=e,this.thisArg=t}call(e,t){return t.subscribe(new Tp(e,this.predicate,this.thisArg))}}class Tp extends f{constructor(e,t,n){super(e),this.predicate=t,this.thisArg=n,this.count=0}_next(e){let t;try{t=this.predicate.call(this.thisArg,e,this.count++)}catch(n){return void this.destination.error(n)}t&&this.destination.next(e)}}function Fp(e){return function(t){const n=new Ip(e),i=t.lift(n);return n.caught=i}}class Ip{constructor(e){this.selector=e}call(e,t){return t.subscribe(new Mp(e,this.selector,this.caught))}}class Mp extends j{constructor(e,t,n){super(e),this.selector=t,this.caught=n}error(e){if(!this.isStopped){let n;try{n=this.selector(e,this.caught)}catch(t){return void super.error(t)}this._unsubscribeAndRecycle();const i=new R(this);this.add(i);const s=N(n,i);s!==i&&this.add(s)}}}function Pp(e,t){return B(e,t,1)}function Vp(e){return function(t){return 0===e?Nd():t.lift(new Lp(e))}}class Lp{constructor(e){if(this.total=e,this.total<0)throw new wp}call(e,t){return t.subscribe(new Rp(e,this.total))}}class Rp extends f{constructor(e,t){super(e),this.total=t,this.ring=new Array,this.count=0}_next(e){const t=this.ring,n=this.total,i=this.count++;t.length<n?t.push(e):t[i%n]=e}_complete(){const e=this.destination;let t=this.count;if(t>0){const n=this.count>=this.total?this.total:this.count,i=this.ring;for(let s=0;s<n;s++){const s=t++%n;e.next(i[s])}}e.complete()}}function jp(e=$p){return t=>t.lift(new Np(e))}class Np{constructor(e){this.errorFactory=e}call(e,t){return t.subscribe(new Bp(e,this.errorFactory))}}class Bp extends f{constructor(e,t){super(e),this.errorFactory=t,this.hasValue=!1}_next(e){this.hasValue=!0,this.destination.next(e)}_complete(){if(this.hasValue)return this.destination.complete();{let t;try{t=this.errorFactory()}catch(e){t=e}this.destination.error(t)}}}function $p(){return new bp}function Hp(e=null){return t=>t.lift(new Up(e))}class Up{constructor(e){this.defaultValue=e}call(e,t){return t.subscribe(new qp(e,this.defaultValue))}}class qp extends f{constructor(e,t){super(e),this.defaultValue=t,this.isEmpty=!0}_next(e){this.isEmpty=!1,this.destination.next(e)}_complete(){this.isEmpty&&this.destination.next(this.defaultValue),this.destination.complete()}}function zp(e,t){const n=arguments.length>=2;return i=>i.pipe(e?Ap((t,n)=>e(t,n,i)):v,_p(1),n?Hp(t):jp(()=>new bp))}function Wp(){}function Gp(e,t,n){return function(i){return i.lift(new Kp(e,t,n))}}class Kp{constructor(e,t,n){this.nextOrObserver=e,this.error=t,this.complete=n}call(e,t){return t.subscribe(new Yp(e,this.nextOrObserver,this.error,this.complete))}}class Yp extends f{constructor(e,t,n,s){super(e),this._tapNext=Wp,this._tapError=Wp,this._tapComplete=Wp,this._tapError=n||Wp,this._tapComplete=s||Wp,i(t)?(this._context=this,this._tapNext=t):t&&(this._context=t,this._tapNext=t.next||Wp,this._tapError=t.error||Wp,this._tapComplete=t.complete||Wp)}_next(e){try{this._tapNext.call(this._context,e)}catch(t){return void this.destination.error(t)}this.destination.next(e)}_error(e){try{this._tapError.call(this._context,e)}catch(e){return void this.destination.error(e)}this.destination.error(e)}_complete(){try{this._tapComplete.call(this._context)}catch(e){return void this.destination.error(e)}return this.destination.complete()}}function Zp(e){return t=>t.lift(new Qp(e))}class Qp{constructor(e){this.callback=e}call(e,t){return t.subscribe(new Jp(e,this.callback))}}class Jp extends f{constructor(e,t){super(e),this.add(new h(t))}}class Xp{constructor(e,t){this.id=e,this.url=t}}class ef extends Xp{constructor(e,t,n="imperative",i=null){super(e,t),this.navigationTrigger=n,this.restoredState=i}toString(){return`NavigationStart(id: ${this.id}, url: '${this.url}')`}}class tf extends Xp{constructor(e,t,n){super(e,t),this.urlAfterRedirects=n}toString(){return`NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`}}class nf extends Xp{constructor(e,t,n){super(e,t),this.reason=n}toString(){return`NavigationCancel(id: ${this.id}, url: '${this.url}')`}}class sf extends Xp{constructor(e,t,n){super(e,t),this.error=n}toString(){return`NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`}}class of extends Xp{constructor(e,t,n,i){super(e,t),this.urlAfterRedirects=n,this.state=i}toString(){return`RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class rf extends Xp{constructor(e,t,n,i){super(e,t),this.urlAfterRedirects=n,this.state=i}toString(){return`GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class af extends Xp{constructor(e,t,n,i,s){super(e,t),this.urlAfterRedirects=n,this.state=i,this.shouldActivate=s}toString(){return`GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`}}class lf extends Xp{constructor(e,t,n,i){super(e,t),this.urlAfterRedirects=n,this.state=i}toString(){return`ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class cf extends Xp{constructor(e,t,n,i){super(e,t),this.urlAfterRedirects=n,this.state=i}toString(){return`ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class uf{constructor(e){this.route=e}toString(){return`RouteConfigLoadStart(path: ${this.route.path})`}}class hf{constructor(e){this.route=e}toString(){return`RouteConfigLoadEnd(path: ${this.route.path})`}}class df{constructor(e){this.snapshot=e}toString(){return`ChildActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class pf{constructor(e){this.snapshot=e}toString(){return`ChildActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class ff{constructor(e){this.snapshot=e}toString(){return`ActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class gf{constructor(e){this.snapshot=e}toString(){return`ActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class mf{constructor(e,t,n){this.routerEvent=e,this.position=t,this.anchor=n}toString(){return`Scroll(anchor: '${this.anchor}', position: '${this.position?`${this.position[0]}, ${this.position[1]}`:null}')`}}const vf="primary";class bf{constructor(e){this.params=e||{}}has(e){return Object.prototype.hasOwnProperty.call(this.params,e)}get(e){if(this.has(e)){const t=this.params[e];return Array.isArray(t)?t[0]:t}return null}getAll(e){if(this.has(e)){const t=this.params[e];return Array.isArray(t)?t:[t]}return[]}get keys(){return Object.keys(this.params)}}function yf(e){return new bf(e)}function Cf(e){const t=Error("NavigationCancelingError: "+e);return t.ngNavigationCancelingError=!0,t}function wf(e,t,n){const i=n.path.split("/");if(i.length>e.length)return null;if("full"===n.pathMatch&&(t.hasChildren()||i.length<e.length))return null;const s={};for(let o=0;o<i.length;o++){const t=i[o],n=e[o];if(t.startsWith(":"))s[t.substring(1)]=n;else if(t!==n.path)return null}return{consumed:e.slice(0,i.length),posParams:s}}function _f(e,t){const n=e?Object.keys(e):void 0,i=t?Object.keys(t):void 0;if(!n||!i||n.length!=i.length)return!1;let s;for(let o=0;o<n.length;o++)if(s=n[o],!Df(e[s],t[s]))return!1;return!0}function Df(e,t){if(Array.isArray(e)&&Array.isArray(t)){if(e.length!==t.length)return!1;const n=[...e].sort(),i=[...t].sort();return n.every((e,t)=>i[t]===e)}return e===t}function Sf(e){return Array.prototype.concat.apply([],e)}function Ef(e){return e.length>0?e[e.length-1]:null}function kf(e,t){for(const n in e)e.hasOwnProperty(n)&&t(e[n],n)}function xf(e){return Nr(e)?e:jr(e)?L(Promise.resolve(e)):Bd(e)}const Af={exact:function e(t,n,i){if(!Rf(t.segments,n.segments))return!1;if(!Mf(t.segments,n.segments,i))return!1;if(t.numberOfChildren!==n.numberOfChildren)return!1;for(const s in n.children){if(!t.children[s])return!1;if(!e(t.children[s],n.children[s],i))return!1}return!0},subset:Ff},Of={exact:function(e,t){return _f(e,t)},subset:function(e,t){return Object.keys(t).length<=Object.keys(e).length&&Object.keys(t).every(n=>Df(e[n],t[n]))},ignored:()=>!0};function Tf(e,t,n){return Af[n.paths](e.root,t.root,n.matrixParams)&&Of[n.queryParams](e.queryParams,t.queryParams)&&!("exact"===n.fragment&&e.fragment!==t.fragment)}function Ff(e,t,n){return If(e,t,t.segments,n)}function If(e,t,n,i){if(e.segments.length>n.length){const s=e.segments.slice(0,n.length);return!!Rf(s,n)&&!t.hasChildren()&&!!Mf(s,n,i)}if(e.segments.length===n.length){if(!Rf(e.segments,n))return!1;if(!Mf(e.segments,n,i))return!1;for(const n in t.children){if(!e.children[n])return!1;if(!Ff(e.children[n],t.children[n],i))return!1}return!0}{const s=n.slice(0,e.segments.length),o=n.slice(e.segments.length);return!!Rf(e.segments,s)&&!!Mf(e.segments,s,i)&&!!e.children.primary&&If(e.children.primary,t,o,i)}}function Mf(e,t,n){return t.every((t,i)=>Of[n](e[i].parameters,t.parameters))}class Pf{constructor(e,t,n){this.root=e,this.queryParams=t,this.fragment=n}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=yf(this.queryParams)),this._queryParamMap}toString(){return Bf.serialize(this)}}class Vf{constructor(e,t){this.segments=e,this.children=t,this.parent=null,kf(t,(e,t)=>e.parent=this)}hasChildren(){return this.numberOfChildren>0}get numberOfChildren(){return Object.keys(this.children).length}toString(){return $f(this)}}class Lf{constructor(e,t){this.path=e,this.parameters=t}get parameterMap(){return this._parameterMap||(this._parameterMap=yf(this.parameters)),this._parameterMap}toString(){return Kf(this)}}function Rf(e,t){return e.length===t.length&&e.every((e,n)=>e.path===t[n].path)}class jf{}class Nf{parse(e){const t=new Xf(e);return new Pf(t.parseRootSegment(),t.parseQueryParams(),t.parseFragment())}serialize(e){var t;return`/${Hf(e.root,!0)}${function(e){const t=Object.keys(e).map(t=>{const n=e[t];return Array.isArray(n)?n.map(e=>`${qf(t)}=${qf(e)}`).join("&"):`${qf(t)}=${qf(n)}`});return t.length?`?${t.join("&")}`:""}(e.queryParams)}${"string"==typeof e.fragment?`#${t=e.fragment,encodeURI(t)}`:""}`}}const Bf=new Nf;function $f(e){return e.segments.map(e=>Kf(e)).join("/")}function Hf(e,t){if(!e.hasChildren())return $f(e);if(t){const t=e.children.primary?Hf(e.children.primary,!1):"",n=[];return kf(e.children,(e,t)=>{t!==vf&&n.push(`${t}:${Hf(e,!1)}`)}),n.length>0?`${t}(${n.join("//")})`:t}{const t=function(e,t){let n=[];return kf(e.children,(e,i)=>{i===vf&&(n=n.concat(t(e,i)))}),kf(e.children,(e,i)=>{i!==vf&&(n=n.concat(t(e,i)))}),n}(e,(t,n)=>n===vf?[Hf(e.children.primary,!1)]:[`${n}:${Hf(t,!1)}`]);return 1===Object.keys(e.children).length&&null!=e.children.primary?`${$f(e)}/${t[0]}`:`${$f(e)}/(${t.join("//")})`}}function Uf(e){return encodeURIComponent(e).replace(/%40/g,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",")}function qf(e){return Uf(e).replace(/%3B/gi,";")}function zf(e){return Uf(e).replace(/\(/g,"%28").replace(/\)/g,"%29").replace(/%26/gi,"&")}function Wf(e){return decodeURIComponent(e)}function Gf(e){return Wf(e.replace(/\+/g,"%20"))}function Kf(e){return`${zf(e.path)}${t=e.parameters,Object.keys(t).map(e=>`;${zf(e)}=${zf(t[e])}`).join("")}`;var t}const Yf=/^[^\/()?;=#]+/;function Zf(e){const t=e.match(Yf);return t?t[0]:""}const Qf=/^[^=?&#]+/,Jf=/^[^?&#]+/;class Xf{constructor(e){this.url=e,this.remaining=e}parseRootSegment(){return this.consumeOptional("/"),""===this.remaining||this.peekStartsWith("?")||this.peekStartsWith("#")?new Vf([],{}):new Vf([],this.parseChildren())}parseQueryParams(){const e={};if(this.consumeOptional("?"))do{this.parseQueryParam(e)}while(this.consumeOptional("&"));return e}parseFragment(){return this.consumeOptional("#")?decodeURIComponent(this.remaining):null}parseChildren(){if(""===this.remaining)return{};this.consumeOptional("/");const e=[];for(this.peekStartsWith("(")||e.push(this.parseSegment());this.peekStartsWith("/")&&!this.peekStartsWith("//")&&!this.peekStartsWith("/(");)this.capture("/"),e.push(this.parseSegment());let t={};this.peekStartsWith("/(")&&(this.capture("/"),t=this.parseParens(!0));let n={};return this.peekStartsWith("(")&&(n=this.parseParens(!1)),(e.length>0||Object.keys(t).length>0)&&(n.primary=new Vf(e,t)),n}parseSegment(){const e=Zf(this.remaining);if(""===e&&this.peekStartsWith(";"))throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);return this.capture(e),new Lf(Wf(e),this.parseMatrixParams())}parseMatrixParams(){const e={};for(;this.consumeOptional(";");)this.parseParam(e);return e}parseParam(e){const t=Zf(this.remaining);if(!t)return;this.capture(t);let n="";if(this.consumeOptional("=")){const e=Zf(this.remaining);e&&(n=e,this.capture(n))}e[Wf(t)]=Wf(n)}parseQueryParam(e){const t=function(e){const t=e.match(Qf);return t?t[0]:""}(this.remaining);if(!t)return;this.capture(t);let n="";if(this.consumeOptional("=")){const e=function(e){const t=e.match(Jf);return t?t[0]:""}(this.remaining);e&&(n=e,this.capture(n))}const i=Gf(t),s=Gf(n);if(e.hasOwnProperty(i)){let t=e[i];Array.isArray(t)||(t=[t],e[i]=t),t.push(s)}else e[i]=s}parseParens(e){const t={};for(this.capture("(");!this.consumeOptional(")")&&this.remaining.length>0;){const n=Zf(this.remaining),i=this.remaining[n.length];if("/"!==i&&")"!==i&&";"!==i)throw new Error(`Cannot parse url '${this.url}'`);let s;n.indexOf(":")>-1?(s=n.substr(0,n.indexOf(":")),this.capture(s),this.capture(":")):e&&(s=vf);const o=this.parseChildren();t[s]=1===Object.keys(o).length?o.primary:new Vf([],o),this.consumeOptional("//")}return t}peekStartsWith(e){return this.remaining.startsWith(e)}consumeOptional(e){return!!this.peekStartsWith(e)&&(this.remaining=this.remaining.substring(e.length),!0)}capture(e){if(!this.consumeOptional(e))throw new Error(`Expected "${e}".`)}}class eg{constructor(e){this._root=e}get root(){return this._root.value}parent(e){const t=this.pathFromRoot(e);return t.length>1?t[t.length-2]:null}children(e){const t=tg(e,this._root);return t?t.children.map(e=>e.value):[]}firstChild(e){const t=tg(e,this._root);return t&&t.children.length>0?t.children[0].value:null}siblings(e){const t=ng(e,this._root);return t.length<2?[]:t[t.length-2].children.map(e=>e.value).filter(t=>t!==e)}pathFromRoot(e){return ng(e,this._root).map(e=>e.value)}}function tg(e,t){if(e===t.value)return t;for(const n of t.children){const t=tg(e,n);if(t)return t}return null}function ng(e,t){if(e===t.value)return[t];for(const n of t.children){const i=ng(e,n);if(i.length)return i.unshift(t),i}return[]}class ig{constructor(e,t){this.value=e,this.children=t}toString(){return`TreeNode(${this.value})`}}function sg(e){const t={};return e&&e.children.forEach(e=>t[e.value.outlet]=e),t}class og extends eg{constructor(e,t){super(e),this.snapshot=t,hg(this,e)}toString(){return this.snapshot.toString()}}function rg(e,t){const n=function(e,t){const n=new cg([],{},{},"",{},vf,t,null,e.root,-1,{});return new ug("",new ig(n,[]))}(e,t),i=new hp([new Lf("",{})]),s=new hp({}),o=new hp({}),r=new hp({}),a=new hp(""),l=new ag(i,s,r,a,o,vf,t,n.root);return l.snapshot=n.root,new og(new ig(l,[]),n)}class ag{constructor(e,t,n,i,s,o,r,a){this.url=e,this.params=t,this.queryParams=n,this.fragment=i,this.data=s,this.outlet=o,this.component=r,this._futureSnapshot=a}get routeConfig(){return this._futureSnapshot.routeConfig}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=this.params.pipe(k(e=>yf(e)))),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=this.queryParams.pipe(k(e=>yf(e)))),this._queryParamMap}toString(){return this.snapshot?this.snapshot.toString():`Future(${this._futureSnapshot})`}}function lg(e,t="emptyOnly"){const n=e.pathFromRoot;let i=0;if("always"!==t)for(i=n.length-1;i>=1;){const e=n[i],t=n[i-1];if(e.routeConfig&&""===e.routeConfig.path)i--;else{if(t.component)break;i--}}return function(e){return e.reduce((e,t)=>({params:Object.assign(Object.assign({},e.params),t.params),data:Object.assign(Object.assign({},e.data),t.data),resolve:Object.assign(Object.assign({},e.resolve),t._resolvedData)}),{params:{},data:{},resolve:{}})}(n.slice(i))}class cg{constructor(e,t,n,i,s,o,r,a,l,c,u){this.url=e,this.params=t,this.queryParams=n,this.fragment=i,this.data=s,this.outlet=o,this.component=r,this.routeConfig=a,this._urlSegment=l,this._lastPathIndex=c,this._resolve=u}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=yf(this.params)),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=yf(this.queryParams)),this._queryParamMap}toString(){return`Route(url:'${this.url.map(e=>e.toString()).join("/")}', path:'${this.routeConfig?this.routeConfig.path:""}')`}}class ug extends eg{constructor(e,t){super(t),this.url=e,hg(this,t)}toString(){return dg(this._root)}}function hg(e,t){t.value._routerState=e,t.children.forEach(t=>hg(e,t))}function dg(e){const t=e.children.length>0?` { ${e.children.map(dg).join(", ")} } `:"";return`${e.value}${t}`}function pg(e){if(e.snapshot){const t=e.snapshot,n=e._futureSnapshot;e.snapshot=n,_f(t.queryParams,n.queryParams)||e.queryParams.next(n.queryParams),t.fragment!==n.fragment&&e.fragment.next(n.fragment),_f(t.params,n.params)||e.params.next(n.params),function(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;++n)if(!_f(e[n],t[n]))return!1;return!0}(t.url,n.url)||e.url.next(n.url),_f(t.data,n.data)||e.data.next(n.data)}else e.snapshot=e._futureSnapshot,e.data.next(e._futureSnapshot.data)}function fg(e,t){var n,i;return _f(e.params,t.params)&&Rf(n=e.url,i=t.url)&&n.every((e,t)=>_f(e.parameters,i[t].parameters))&&!(!e.parent!=!t.parent)&&(!e.parent||fg(e.parent,t.parent))}function gg(e,t,n){if(n&&e.shouldReuseRoute(t.value,n.value.snapshot)){const i=n.value;i._futureSnapshot=t.value;const s=function(e,t,n){return t.children.map(t=>{for(const i of n.children)if(e.shouldReuseRoute(t.value,i.value.snapshot))return gg(e,t,i);return gg(e,t)})}(e,t,n);return new ig(i,s)}{if(e.shouldAttach(t.value)){const n=e.retrieve(t.value);if(null!==n){const e=n.route;return mg(t,e),e}}const n=new ag(new hp((i=t.value).url),new hp(i.params),new hp(i.queryParams),new hp(i.fragment),new hp(i.data),i.outlet,i.component,i),s=t.children.map(t=>gg(e,t));return new ig(n,s)}var i}function mg(e,t){if(e.value.routeConfig!==t.value.routeConfig)throw new Error("Cannot reattach ActivatedRouteSnapshot created from a different route");if(e.children.length!==t.children.length)throw new Error("Cannot reattach ActivatedRouteSnapshot with a different number of children");t.value._futureSnapshot=e.value;for(let n=0;n<e.children.length;++n)mg(e.children[n],t.children[n])}function vg(e){return"object"==typeof e&&null!=e&&!e.outlets&&!e.segmentPath}function bg(e){return"object"==typeof e&&null!=e&&e.outlets}function yg(e,t,n,i,s){let o={};return i&&kf(i,(e,t)=>{o[t]=Array.isArray(e)?e.map(e=>`${e}`):`${e}`}),new Pf(n.root===e?t:Cg(n.root,e,t),o,s)}function Cg(e,t,n){const i={};return kf(e.children,(e,s)=>{i[s]=e===t?n:Cg(e,t,n)}),new Vf(e.segments,i)}class wg{constructor(e,t,n){if(this.isAbsolute=e,this.numberOfDoubleDots=t,this.commands=n,e&&n.length>0&&vg(n[0]))throw new Error("Root segment cannot have matrix parameters");const i=n.find(bg);if(i&&i!==Ef(n))throw new Error("{outlets:{}} has to be the last command")}toRoot(){return this.isAbsolute&&1===this.commands.length&&"/"==this.commands[0]}}class _g{constructor(e,t,n){this.segmentGroup=e,this.processChildren=t,this.index=n}}function Dg(e,t,n){if(e||(e=new Vf([],{})),0===e.segments.length&&e.hasChildren())return Sg(e,t,n);const i=function(e,t,n){let i=0,s=t;const o={match:!1,pathIndex:0,commandIndex:0};for(;s<e.segments.length;){if(i>=n.length)return o;const t=e.segments[s],r=n[i];if(bg(r))break;const a=`${r}`,l=i<n.length-1?n[i+1]:null;if(s>0&&void 0===a)break;if(a&&l&&"object"==typeof l&&void 0===l.outlets){if(!Ag(a,l,t))return o;i+=2}else{if(!Ag(a,{},t))return o;i++}s++}return{match:!0,pathIndex:s,commandIndex:i}}(e,t,n),s=n.slice(i.commandIndex);if(i.match&&i.pathIndex<e.segments.length){const t=new Vf(e.segments.slice(0,i.pathIndex),{});return t.children.primary=new Vf(e.segments.slice(i.pathIndex),e.children),Sg(t,0,s)}return i.match&&0===s.length?new Vf(e.segments,{}):i.match&&!e.hasChildren()?Eg(e,t,n):i.match?Sg(e,0,s):Eg(e,t,n)}function Sg(e,t,n){if(0===n.length)return new Vf(e.segments,{});{const i=function(e){return bg(e[0])?e[0].outlets:{[vf]:e}}(n),s={};return kf(i,(n,i)=>{"string"==typeof n&&(n=[n]),null!==n&&(s[i]=Dg(e.children[i],t,n))}),kf(e.children,(e,t)=>{void 0===i[t]&&(s[t]=e)}),new Vf(e.segments,s)}}function Eg(e,t,n){const i=e.segments.slice(0,t);let s=0;for(;s<n.length;){const o=n[s];if(bg(o)){const e=kg(o.outlets);return new Vf(i,e)}if(0===s&&vg(n[0])){i.push(new Lf(e.segments[t].path,xg(n[0]))),s++;continue}const r=bg(o)?o.outlets.primary:`${o}`,a=s<n.length-1?n[s+1]:null;r&&a&&vg(a)?(i.push(new Lf(r,xg(a))),s+=2):(i.push(new Lf(r,{})),s++)}return new Vf(i,{})}function kg(e){const t={};return kf(e,(e,n)=>{"string"==typeof e&&(e=[e]),null!==e&&(t[n]=Eg(new Vf([],{}),0,e))}),t}function xg(e){const t={};return kf(e,(e,n)=>t[n]=`${e}`),t}function Ag(e,t,n){return e==n.path&&_f(t,n.parameters)}class Og{constructor(e,t,n,i){this.routeReuseStrategy=e,this.futureState=t,this.currState=n,this.forwardEvent=i}activate(e){const t=this.futureState._root,n=this.currState?this.currState._root:null;this.deactivateChildRoutes(t,n,e),pg(this.futureState.root),this.activateChildRoutes(t,n,e)}deactivateChildRoutes(e,t,n){const i=sg(t);e.children.forEach(e=>{const t=e.value.outlet;this.deactivateRoutes(e,i[t],n),delete i[t]}),kf(i,(e,t)=>{this.deactivateRouteAndItsChildren(e,n)})}deactivateRoutes(e,t,n){const i=e.value,s=t?t.value:null;if(i===s)if(i.component){const s=n.getContext(i.outlet);s&&this.deactivateChildRoutes(e,t,s.children)}else this.deactivateChildRoutes(e,t,n);else s&&this.deactivateRouteAndItsChildren(t,n)}deactivateRouteAndItsChildren(e,t){this.routeReuseStrategy.shouldDetach(e.value.snapshot)?this.detachAndStoreRouteSubtree(e,t):this.deactivateRouteAndOutlet(e,t)}detachAndStoreRouteSubtree(e,t){const n=t.getContext(e.value.outlet);if(n&&n.outlet){const t=n.outlet.detach(),i=n.children.onOutletDeactivated();this.routeReuseStrategy.store(e.value.snapshot,{componentRef:t,route:e,contexts:i})}}deactivateRouteAndOutlet(e,t){const n=t.getContext(e.value.outlet),i=n&&e.value.component?n.children:t,s=sg(e);for(const o of Object.keys(s))this.deactivateRouteAndItsChildren(s[o],i);n&&n.outlet&&(n.outlet.deactivate(),n.children.onOutletDeactivated(),n.attachRef=null,n.resolver=null,n.route=null)}activateChildRoutes(e,t,n){const i=sg(t);e.children.forEach(e=>{this.activateRoutes(e,i[e.value.outlet],n),this.forwardEvent(new gf(e.value.snapshot))}),e.children.length&&this.forwardEvent(new pf(e.value.snapshot))}activateRoutes(e,t,n){const i=e.value,s=t?t.value:null;if(pg(i),i===s)if(i.component){const s=n.getOrCreateContext(i.outlet);this.activateChildRoutes(e,t,s.children)}else this.activateChildRoutes(e,t,n);else if(i.component){const t=n.getOrCreateContext(i.outlet);if(this.routeReuseStrategy.shouldAttach(i.snapshot)){const e=this.routeReuseStrategy.retrieve(i.snapshot);this.routeReuseStrategy.store(i.snapshot,null),t.children.onOutletReAttached(e.contexts),t.attachRef=e.componentRef,t.route=e.route.value,t.outlet&&t.outlet.attach(e.componentRef,e.route.value),Tg(e.route)}else{const n=function(e){for(let t=e.parent;t;t=t.parent){const e=t.routeConfig;if(e&&e._loadedConfig)return e._loadedConfig;if(e&&e.component)return null}return null}(i.snapshot),s=n?n.module.componentFactoryResolver:null;t.attachRef=null,t.route=i,t.resolver=s,t.outlet&&t.outlet.activateWith(i,s),this.activateChildRoutes(e,null,t.children)}}else this.activateChildRoutes(e,null,n)}}function Tg(e){pg(e.value),e.children.forEach(Tg)}class Fg{constructor(e,t){this.routes=e,this.module=t}}function Ig(e){return"function"==typeof e}function Mg(e){return e instanceof Pf}const Pg=Symbol("INITIAL_VALUE");function Vg(){return Kd(e=>function(...e){let t,n;return E(e[e.length-1])&&(n=e.pop()),"function"==typeof e[e.length-1]&&(t=e.pop()),1===e.length&&l(e[0])&&(e=e[0]),q(e,n).lift(new mp(t))}(e.map(e=>e.pipe(_p(1),function(...e){const t=e[e.length-1];return E(t)?(e.pop(),n=>yp(e,n,t)):t=>yp(e,t)}(Pg)))).pipe(Ep((e,t)=>{let n=!1;return t.reduce((e,i,s)=>{if(e!==Pg)return e;if(i===Pg&&(n=!0),!n){if(!1===i)return i;if(s===t.length-1||Mg(i))return i}return e},e)},Pg),Ap(e=>e!==Pg),k(e=>Mg(e)?e:!0===e),_p(1)))}let Lg=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=He({type:e,selectors:[["ng-component"]],decls:1,vars:0,template:function(e,t){1&e&&Mr(0,"router-outlet")},directives:function(){return[Im]},encapsulation:2}),e})();function Rg(e,t=""){for(let n=0;n<e.length;n++){const i=e[n];jg(i,Ng(t,i))}}function jg(e,t){e.children&&Rg(e.children,t)}function Ng(e,t){return t?e||t.path?e&&!t.path?`${e}/`:!e&&t.path?t.path:`${e}/${t.path}`:"":e}function Bg(e){const t=e.children&&e.children.map(Bg),n=t?Object.assign(Object.assign({},e),{children:t}):Object.assign({},e);return!n.component&&(t||n.loadChildren)&&n.outlet&&n.outlet!==vf&&(n.component=Lg),n}function $g(e){return e.outlet||vf}function Hg(e,t){const n=e.filter(e=>$g(e)===t);return n.push(...e.filter(e=>$g(e)!==t)),n}const Ug={matched:!1,consumedSegments:[],lastChild:0,parameters:{},positionalParamSegments:{}};function qg(e,t,n){var i;if(""===t.path)return"full"===t.pathMatch&&(e.hasChildren()||n.length>0)?Object.assign({},Ug):{matched:!0,consumedSegments:[],lastChild:0,parameters:{},positionalParamSegments:{}};const s=(t.matcher||wf)(n,e,t);if(!s)return Object.assign({},Ug);const o={};kf(s.posParams,(e,t)=>{o[t]=e.path});const r=s.consumed.length>0?Object.assign(Object.assign({},o),s.consumed[s.consumed.length-1].parameters):o;return{matched:!0,consumedSegments:s.consumed,lastChild:s.consumed.length,parameters:r,positionalParamSegments:null!==(i=s.posParams)&&void 0!==i?i:{}}}function zg(e,t,n,i,s="corrected"){if(n.length>0&&function(e,t,n){return n.some(n=>Wg(e,t,n)&&$g(n)!==vf)}(e,n,i)){const s=new Vf(t,function(e,t,n,i){const s={};s.primary=i,i._sourceSegment=e,i._segmentIndexShift=t.length;for(const o of n)if(""===o.path&&$g(o)!==vf){const n=new Vf([],{});n._sourceSegment=e,n._segmentIndexShift=t.length,s[$g(o)]=n}return s}(e,t,i,new Vf(n,e.children)));return s._sourceSegment=e,s._segmentIndexShift=t.length,{segmentGroup:s,slicedSegments:[]}}if(0===n.length&&function(e,t,n){return n.some(n=>Wg(e,t,n))}(e,n,i)){const o=new Vf(e.segments,function(e,t,n,i,s,o){const r={};for(const a of i)if(Wg(e,n,a)&&!s[$g(a)]){const n=new Vf([],{});n._sourceSegment=e,n._segmentIndexShift="legacy"===o?e.segments.length:t.length,r[$g(a)]=n}return Object.assign(Object.assign({},s),r)}(e,t,n,i,e.children,s));return o._sourceSegment=e,o._segmentIndexShift=t.length,{segmentGroup:o,slicedSegments:n}}const o=new Vf(e.segments,e.children);return o._sourceSegment=e,o._segmentIndexShift=t.length,{segmentGroup:o,slicedSegments:n}}function Wg(e,t,n){return(!(e.hasChildren()||t.length>0)||"full"!==n.pathMatch)&&""===n.path}function Gg(e,t,n,i){return!!($g(e)===i||i!==vf&&Wg(t,n,e))&&("**"===e.path||qg(t,e,n).matched)}function Kg(e,t,n){return 0===t.length&&!e.children[n]}class Yg{constructor(e){this.segmentGroup=e||null}}class Zg{constructor(e){this.urlTree=e}}function Qg(e){return new b(t=>t.error(new Yg(e)))}function Jg(e){return new b(t=>t.error(new Zg(e)))}function Xg(e){return new b(t=>t.error(new Error(`Only absolute redirects can have named outlets. redirectTo: '${e}'`)))}class em{constructor(e,t,n,i,s){this.configLoader=t,this.urlSerializer=n,this.urlTree=i,this.config=s,this.allowRedirects=!0,this.ngModule=e.get(Sl)}apply(){const e=zg(this.urlTree.root,[],[],this.config).segmentGroup,t=new Vf(e.segments,e.children);return this.expandSegmentGroup(this.ngModule,this.config,t,vf).pipe(k(e=>this.createUrlTree(tm(e),this.urlTree.queryParams,this.urlTree.fragment))).pipe(Fp(e=>{if(e instanceof Zg)return this.allowRedirects=!1,this.match(e.urlTree);if(e instanceof Yg)throw this.noMatchError(e);throw e}))}match(e){return this.expandSegmentGroup(this.ngModule,this.config,e.root,vf).pipe(k(t=>this.createUrlTree(tm(t),e.queryParams,e.fragment))).pipe(Fp(e=>{if(e instanceof Yg)throw this.noMatchError(e);throw e}))}noMatchError(e){return new Error(`Cannot match any routes. URL Segment: '${e.segmentGroup}'`)}createUrlTree(e,t,n){const i=e.segments.length>0?new Vf([],{[vf]:e}):e;return new Pf(i,t,n)}expandSegmentGroup(e,t,n,i){return 0===n.segments.length&&n.hasChildren()?this.expandChildren(e,t,n).pipe(k(e=>new Vf([],e))):this.expandSegment(e,n,t,n.segments,i,!0)}expandChildren(e,t,n){const i=[];for(const s of Object.keys(n.children))"primary"===s?i.unshift(s):i.push(s);return L(i).pipe(Pp(i=>{const s=n.children[i],o=Hg(t,i);return this.expandSegmentGroup(e,o,s,i).pipe(k(e=>({segment:e,outlet:i})))}),Ep((e,t)=>(e[t.outlet]=t.segment,e),{}),function(e,t){const n=arguments.length>=2;return i=>i.pipe(e?Ap((t,n)=>e(t,n,i)):v,Vp(1),n?Hp(t):jp(()=>new bp))}())}expandSegment(e,t,n,i,s,o){return L(n).pipe(Pp(r=>this.expandSegmentAgainstRoute(e,t,n,r,i,s,o).pipe(Fp(e=>{if(e instanceof Yg)return Bd(null);throw e}))),zp(e=>!!e),Fp((e,n)=>{if(e instanceof bp||"EmptyError"===e.name){if(Kg(t,i,s))return Bd(new Vf([],{}));throw new Yg(t)}throw e}))}expandSegmentAgainstRoute(e,t,n,i,s,o,r){return Gg(i,t,s,o)?void 0===i.redirectTo?this.matchSegmentAgainstRoute(e,t,i,s,o):r&&this.allowRedirects?this.expandSegmentAgainstRouteUsingRedirect(e,t,n,i,s,o):Qg(t):Qg(t)}expandSegmentAgainstRouteUsingRedirect(e,t,n,i,s,o){return"**"===i.path?this.expandWildCardWithParamsAgainstRouteUsingRedirect(e,n,i,o):this.expandRegularSegmentAgainstRouteUsingRedirect(e,t,n,i,s,o)}expandWildCardWithParamsAgainstRouteUsingRedirect(e,t,n,i){const s=this.applyRedirectCommands([],n.redirectTo,{});return n.redirectTo.startsWith("/")?Jg(s):this.lineralizeSegments(n,s).pipe(B(n=>{const s=new Vf(n,{});return this.expandSegment(e,s,t,n,i,!1)}))}expandRegularSegmentAgainstRouteUsingRedirect(e,t,n,i,s,o){const{matched:r,consumedSegments:a,lastChild:l,positionalParamSegments:c}=qg(t,i,s);if(!r)return Qg(t);const u=this.applyRedirectCommands(a,i.redirectTo,c);return i.redirectTo.startsWith("/")?Jg(u):this.lineralizeSegments(i,u).pipe(B(i=>this.expandSegment(e,t,n,i.concat(s.slice(l)),o,!1)))}matchSegmentAgainstRoute(e,t,n,i,s){if("**"===n.path)return n.loadChildren?(n._loadedConfig?Bd(n._loadedConfig):this.configLoader.load(e.injector,n)).pipe(k(e=>(n._loadedConfig=e,new Vf(i,{})))):Bd(new Vf(i,{}));const{matched:o,consumedSegments:r,lastChild:a}=qg(t,n,i);if(!o)return Qg(t);const l=i.slice(a);return this.getChildConfig(e,n,i).pipe(B(e=>{const i=e.module,o=e.routes,{segmentGroup:a,slicedSegments:c}=zg(t,r,l,o),u=new Vf(a.segments,a.children);if(0===c.length&&u.hasChildren())return this.expandChildren(i,o,u).pipe(k(e=>new Vf(r,e)));if(0===o.length&&0===c.length)return Bd(new Vf(r,{}));const h=$g(n)===s;return this.expandSegment(i,u,o,c,h?vf:s,!0).pipe(k(e=>new Vf(r.concat(e.segments),e.children)))}))}getChildConfig(e,t,n){return t.children?Bd(new Fg(t.children,e)):t.loadChildren?void 0!==t._loadedConfig?Bd(t._loadedConfig):this.runCanLoadGuards(e.injector,t,n).pipe(B(n=>n?this.configLoader.load(e.injector,t).pipe(k(e=>(t._loadedConfig=e,e))):function(e){return new b(t=>t.error(Cf(`Cannot load children because the guard of the route "path: '${e.path}'" returned false`)))}(t))):Bd(new Fg([],e))}runCanLoadGuards(e,t,n){const i=t.canLoad;return i&&0!==i.length?Bd(i.map(i=>{const s=e.get(i);let o;if(function(e){return e&&Ig(e.canLoad)}(s))o=s.canLoad(t,n);else{if(!Ig(s))throw new Error("Invalid CanLoad guard");o=s(t,n)}return xf(o)})).pipe(Vg(),Gp(e=>{if(!Mg(e))return;const t=Cf(`Redirecting to "${this.urlSerializer.serialize(e)}"`);throw t.url=e,t}),k(e=>!0===e)):Bd(!0)}lineralizeSegments(e,t){let n=[],i=t.root;for(;;){if(n=n.concat(i.segments),0===i.numberOfChildren)return Bd(n);if(i.numberOfChildren>1||!i.children.primary)return Xg(e.redirectTo);i=i.children.primary}}applyRedirectCommands(e,t,n){return this.applyRedirectCreatreUrlTree(t,this.urlSerializer.parse(t),e,n)}applyRedirectCreatreUrlTree(e,t,n,i){const s=this.createSegmentGroup(e,t.root,n,i);return new Pf(s,this.createQueryParams(t.queryParams,this.urlTree.queryParams),t.fragment)}createQueryParams(e,t){const n={};return kf(e,(e,i)=>{if("string"==typeof e&&e.startsWith(":")){const s=e.substring(1);n[i]=t[s]}else n[i]=e}),n}createSegmentGroup(e,t,n,i){const s=this.createSegments(e,t.segments,n,i);let o={};return kf(t.children,(t,s)=>{o[s]=this.createSegmentGroup(e,t,n,i)}),new Vf(s,o)}createSegments(e,t,n,i){return t.map(t=>t.path.startsWith(":")?this.findPosParam(e,t,i):this.findOrReturn(t,n))}findPosParam(e,t,n){const i=n[t.path.substring(1)];if(!i)throw new Error(`Cannot redirect to '${e}'. Cannot find '${t.path}'.`);return i}findOrReturn(e,t){let n=0;for(const i of t){if(i.path===e.path)return t.splice(n),i;n++}return e}}function tm(e){const t={};for(const n of Object.keys(e.children)){const i=tm(e.children[n]);(i.segments.length>0||i.hasChildren())&&(t[n]=i)}return function(e){if(1===e.numberOfChildren&&e.children.primary){const t=e.children.primary;return new Vf(e.segments.concat(t.segments),t.children)}return e}(new Vf(e.segments,t))}class nm{constructor(e){this.path=e,this.route=this.path[this.path.length-1]}}class im{constructor(e,t){this.component=e,this.route=t}}function sm(e,t,n){const i=e._root;return rm(i,t?t._root:null,n,[i.value])}function om(e,t,n){const i=function(e){if(!e)return null;for(let t=e.parent;t;t=t.parent){const e=t.routeConfig;if(e&&e._loadedConfig)return e._loadedConfig}return null}(t);return(i?i.module.injector:n).get(e)}function rm(e,t,n,i,s={canDeactivateChecks:[],canActivateChecks:[]}){const o=sg(t);return e.children.forEach(e=>{!function(e,t,n,i,s={canDeactivateChecks:[],canActivateChecks:[]}){const o=e.value,r=t?t.value:null,a=n?n.getContext(e.value.outlet):null;if(r&&o.routeConfig===r.routeConfig){const l=function(e,t,n){if("function"==typeof n)return n(e,t);switch(n){case"pathParamsChange":return!Rf(e.url,t.url);case"pathParamsOrQueryParamsChange":return!Rf(e.url,t.url)||!_f(e.queryParams,t.queryParams);case"always":return!0;case"paramsOrQueryParamsChange":return!fg(e,t)||!_f(e.queryParams,t.queryParams);case"paramsChange":default:return!fg(e,t)}}(r,o,o.routeConfig.runGuardsAndResolvers);l?s.canActivateChecks.push(new nm(i)):(o.data=r.data,o._resolvedData=r._resolvedData),rm(e,t,o.component?a?a.children:null:n,i,s),l&&a&&a.outlet&&a.outlet.isActivated&&s.canDeactivateChecks.push(new im(a.outlet.component,r))}else r&&am(t,a,s),s.canActivateChecks.push(new nm(i)),rm(e,null,o.component?a?a.children:null:n,i,s)}(e,o[e.value.outlet],n,i.concat([e.value]),s),delete o[e.value.outlet]}),kf(o,(e,t)=>am(e,n.getContext(t),s)),s}function am(e,t,n){const i=sg(e),s=e.value;kf(i,(e,i)=>{am(e,s.component?t?t.children.getContext(i):null:t,n)}),n.canDeactivateChecks.push(new im(s.component&&t&&t.outlet&&t.outlet.isActivated?t.outlet.component:null,s))}class lm{}function cm(e){return new b(t=>t.error(e))}class um{constructor(e,t,n,i,s,o){this.rootComponentType=e,this.config=t,this.urlTree=n,this.url=i,this.paramsInheritanceStrategy=s,this.relativeLinkResolution=o}recognize(){const e=zg(this.urlTree.root,[],[],this.config.filter(e=>void 0===e.redirectTo),this.relativeLinkResolution).segmentGroup,t=this.processSegmentGroup(this.config,e,vf);if(null===t)return null;const n=new cg([],Object.freeze({}),Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,{},vf,this.rootComponentType,null,this.urlTree.root,-1,{}),i=new ig(n,t),s=new ug(this.url,i);return this.inheritParamsAndData(s._root),s}inheritParamsAndData(e){const t=e.value,n=lg(t,this.paramsInheritanceStrategy);t.params=Object.freeze(n.params),t.data=Object.freeze(n.data),e.children.forEach(e=>this.inheritParamsAndData(e))}processSegmentGroup(e,t,n){return 0===t.segments.length&&t.hasChildren()?this.processChildren(e,t):this.processSegment(e,t,t.segments,n)}processChildren(e,t){const n=[];for(const s of Object.keys(t.children)){const i=t.children[s],o=Hg(e,s),r=this.processSegmentGroup(o,i,s);if(null===r)return null;n.push(...r)}const i=dm(n);return i.sort((e,t)=>e.value.outlet===vf?-1:t.value.outlet===vf?1:e.value.outlet.localeCompare(t.value.outlet)),i}processSegment(e,t,n,i){for(const s of e){const e=this.processSegmentAgainstRoute(s,t,n,i);if(null!==e)return e}return Kg(t,n,i)?[]:null}processSegmentAgainstRoute(e,t,n,i){if(e.redirectTo||!Gg(e,t,n,i))return null;let s,o=[],r=[];if("**"===e.path){const i=n.length>0?Ef(n).parameters:{};s=new cg(n,i,Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,gm(e),$g(e),e.component,e,pm(t),fm(t)+n.length,mm(e))}else{const i=qg(t,e,n);if(!i.matched)return null;o=i.consumedSegments,r=n.slice(i.lastChild),s=new cg(o,i.parameters,Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,gm(e),$g(e),e.component,e,pm(t),fm(t)+o.length,mm(e))}const a=function(e){return e.children?e.children:e.loadChildren?e._loadedConfig.routes:[]}(e),{segmentGroup:l,slicedSegments:c}=zg(t,o,r,a.filter(e=>void 0===e.redirectTo),this.relativeLinkResolution);if(0===c.length&&l.hasChildren()){const e=this.processChildren(a,l);return null===e?null:[new ig(s,e)]}if(0===a.length&&0===c.length)return[new ig(s,[])];const u=$g(e)===i,h=this.processSegment(a,l,c,u?vf:i);return null===h?null:[new ig(s,h)]}}function hm(e){const t=e.value.routeConfig;return t&&""===t.path&&void 0===t.redirectTo}function dm(e){const t=[],n=new Set;for(const i of e){if(!hm(i)){t.push(i);continue}const e=t.find(e=>i.value.routeConfig===e.value.routeConfig);void 0!==e?(e.children.push(...i.children),n.add(e)):t.push(i)}for(const i of n){const e=dm(i.children);t.push(new ig(i.value,e))}return t.filter(e=>!n.has(e))}function pm(e){let t=e;for(;t._sourceSegment;)t=t._sourceSegment;return t}function fm(e){let t=e,n=t._segmentIndexShift?t._segmentIndexShift:0;for(;t._sourceSegment;)t=t._sourceSegment,n+=t._segmentIndexShift?t._segmentIndexShift:0;return n-1}function gm(e){return e.data||{}}function mm(e){return e.resolve||{}}function vm(e){return Kd(t=>{const n=e(t);return n?L(n).pipe(k(()=>t)):Bd(t)})}class bm extends class{shouldDetach(e){return!1}store(e,t){}shouldAttach(e){return!1}retrieve(e){return null}shouldReuseRoute(e,t){return e.routeConfig===t.routeConfig}}{}const ym=new zn("ROUTES");class Cm{constructor(e,t,n,i){this.loader=e,this.compiler=t,this.onLoadStartListener=n,this.onLoadEndListener=i}load(e,t){if(t._loader$)return t._loader$;this.onLoadStartListener&&this.onLoadStartListener(t);const n=this.loadModuleFactory(t.loadChildren).pipe(k(n=>{this.onLoadEndListener&&this.onLoadEndListener(t);const i=n.create(e);return new Fg(Sf(i.injector.get(ym,void 0,Ce.Self|Ce.Optional)).map(Bg),i)}),Fp(e=>{throw t._loader$=void 0,e}));return t._loader$=new Y(n,()=>new D).pipe(W()),t._loader$}loadModuleFactory(e){return"string"==typeof e?L(this.loader.load(e)):xf(e()).pipe(B(e=>e instanceof El?Bd(e):L(this.compiler.compileModuleAsync(e))))}}class wm{constructor(){this.outlet=null,this.route=null,this.resolver=null,this.children=new _m,this.attachRef=null}}class _m{constructor(){this.contexts=new Map}onChildOutletCreated(e,t){const n=this.getOrCreateContext(e);n.outlet=t,this.contexts.set(e,n)}onChildOutletDestroyed(e){const t=this.getContext(e);t&&(t.outlet=null)}onOutletDeactivated(){const e=this.contexts;return this.contexts=new Map,e}onOutletReAttached(e){this.contexts=e}getOrCreateContext(e){let t=this.getContext(e);return t||(t=new wm,this.contexts.set(e,t)),t}getContext(e){return this.contexts.get(e)||null}}class Dm{shouldProcessUrl(e){return!0}extract(e){return e}merge(e,t){return e}}function Sm(e){throw e}function Em(e,t,n){return t.parse("/")}function km(e,t){return Bd(null)}const xm={paths:"exact",fragment:"ignored",matrixParams:"ignored",queryParams:"exact"},Am={paths:"subset",fragment:"ignored",matrixParams:"ignored",queryParams:"subset"};let Om=(()=>{class e{constructor(e,t,n,i,s,o,r,a){this.rootComponentType=e,this.urlSerializer=t,this.rootContexts=n,this.location=i,this.config=a,this.lastSuccessfulNavigation=null,this.currentNavigation=null,this.disposed=!1,this.lastLocationChangeInfo=null,this.navigationId=0,this.isNgZoneEnabled=!1,this.events=new D,this.errorHandler=Sm,this.malformedUriErrorHandler=Em,this.navigated=!1,this.lastSuccessfulId=-1,this.hooks={beforePreactivation:km,afterPreactivation:km},this.urlHandlingStrategy=new Dm,this.routeReuseStrategy=new bm,this.onSameUrlNavigation="ignore",this.paramsInheritanceStrategy="emptyOnly",this.urlUpdateStrategy="deferred",this.relativeLinkResolution="corrected",this.ngModule=s.get(Sl),this.console=s.get(Ac);const l=s.get($c);this.isNgZoneEnabled=l instanceof $c&&$c.isInAngularZone(),this.resetConfig(a),this.currentUrlTree=new Pf(new Vf([],{}),{},null),this.rawUrlTree=this.currentUrlTree,this.browserUrlTree=this.currentUrlTree,this.configLoader=new Cm(o,r,e=>this.triggerEvent(new uf(e)),e=>this.triggerEvent(new hf(e))),this.routerState=rg(this.currentUrlTree,this.rootComponentType),this.transitions=new hp({id:0,currentUrlTree:this.currentUrlTree,currentRawUrl:this.currentUrlTree,extractedUrl:this.urlHandlingStrategy.extract(this.currentUrlTree),urlAfterRedirects:this.urlHandlingStrategy.extract(this.currentUrlTree),rawUrl:this.currentUrlTree,extras:{},resolve:null,reject:null,promise:Promise.resolve(!0),source:"imperative",restoredState:null,currentSnapshot:this.routerState.snapshot,targetSnapshot:null,currentRouterState:this.routerState,targetRouterState:null,guards:{canActivateChecks:[],canDeactivateChecks:[]},guardsResult:null}),this.navigations=this.setupNavigations(this.transitions),this.processNavigations()}setupNavigations(e){const t=this.events;return e.pipe(Ap(e=>0!==e.id),k(e=>Object.assign(Object.assign({},e),{extractedUrl:this.urlHandlingStrategy.extract(e.rawUrl)})),Kd(e=>{let n=!1,i=!1;return Bd(e).pipe(Gp(e=>{this.currentNavigation={id:e.id,initialUrl:e.currentRawUrl,extractedUrl:e.extractedUrl,trigger:e.source,extras:e.extras,previousNavigation:this.lastSuccessfulNavigation?Object.assign(Object.assign({},this.lastSuccessfulNavigation),{previousNavigation:null}):null}}),Kd(e=>{const n=!this.navigated||e.extractedUrl.toString()!==this.browserUrlTree.toString();if(("reload"===this.onSameUrlNavigation||n)&&this.urlHandlingStrategy.shouldProcessUrl(e.rawUrl))return Bd(e).pipe(Kd(e=>{const n=this.transitions.getValue();return t.next(new ef(e.id,this.serializeUrl(e.extractedUrl),e.source,e.restoredState)),n!==this.transitions.getValue()?jd:Promise.resolve(e)}),function(e,t,n,i){return Kd(s=>function(e,t,n,i,s){return new em(e,t,n,i,s).apply()}(e,t,n,s.extractedUrl,i).pipe(k(e=>Object.assign(Object.assign({},s),{urlAfterRedirects:e}))))}(this.ngModule.injector,this.configLoader,this.urlSerializer,this.config),Gp(e=>{this.currentNavigation=Object.assign(Object.assign({},this.currentNavigation),{finalUrl:e.urlAfterRedirects})}),function(e,t,n,i,s){return B(o=>function(e,t,n,i,s="emptyOnly",o="legacy"){try{const r=new um(e,t,n,i,s,o).recognize();return null===r?cm(new lm):Bd(r)}catch(r){return cm(r)}}(e,t,o.urlAfterRedirects,n(o.urlAfterRedirects),i,s).pipe(k(e=>Object.assign(Object.assign({},o),{targetSnapshot:e}))))}(this.rootComponentType,this.config,e=>this.serializeUrl(e),this.paramsInheritanceStrategy,this.relativeLinkResolution),Gp(e=>{"eager"===this.urlUpdateStrategy&&(e.extras.skipLocationChange||this.setBrowserUrl(e.urlAfterRedirects,!!e.extras.replaceUrl,e.id,e.extras.state),this.browserUrlTree=e.urlAfterRedirects);const n=new of(e.id,this.serializeUrl(e.extractedUrl),this.serializeUrl(e.urlAfterRedirects),e.targetSnapshot);t.next(n)}));if(n&&this.rawUrlTree&&this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)){const{id:n,extractedUrl:i,source:s,restoredState:o,extras:r}=e,a=new ef(n,this.serializeUrl(i),s,o);t.next(a);const l=rg(i,this.rootComponentType).snapshot;return Bd(Object.assign(Object.assign({},e),{targetSnapshot:l,urlAfterRedirects:i,extras:Object.assign(Object.assign({},r),{skipLocationChange:!1,replaceUrl:!1})}))}return this.rawUrlTree=e.rawUrl,this.browserUrlTree=e.urlAfterRedirects,e.resolve(null),jd}),vm(e=>{const{targetSnapshot:t,id:n,extractedUrl:i,rawUrl:s,extras:{skipLocationChange:o,replaceUrl:r}}=e;return this.hooks.beforePreactivation(t,{navigationId:n,appliedUrlTree:i,rawUrlTree:s,skipLocationChange:!!o,replaceUrl:!!r})}),Gp(e=>{const t=new rf(e.id,this.serializeUrl(e.extractedUrl),this.serializeUrl(e.urlAfterRedirects),e.targetSnapshot);this.triggerEvent(t)}),k(e=>Object.assign(Object.assign({},e),{guards:sm(e.targetSnapshot,e.currentSnapshot,this.rootContexts)})),function(e,t){return B(n=>{const{targetSnapshot:i,currentSnapshot:s,guards:{canActivateChecks:o,canDeactivateChecks:r}}=n;return 0===r.length&&0===o.length?Bd(Object.assign(Object.assign({},n),{guardsResult:!0})):function(e,t,n,i){return L(e).pipe(B(e=>function(e,t,n,i,s){const o=t&&t.routeConfig?t.routeConfig.canDeactivate:null;return o&&0!==o.length?Bd(o.map(o=>{const r=om(o,t,s);let a;if(function(e){return e&&Ig(e.canDeactivate)}(r))a=xf(r.canDeactivate(e,t,n,i));else{if(!Ig(r))throw new Error("Invalid CanDeactivate guard");a=xf(r(e,t,n,i))}return a.pipe(zp())})).pipe(Vg()):Bd(!0)}(e.component,e.route,n,t,i)),zp(e=>!0!==e,!0))}(r,i,s,e).pipe(B(n=>n&&"boolean"==typeof n?function(e,t,n,i){return L(t).pipe(Pp(t=>yp(function(e,t){return null!==e&&t&&t(new df(e)),Bd(!0)}(t.route.parent,i),function(e,t){return null!==e&&t&&t(new ff(e)),Bd(!0)}(t.route,i),function(e,t,n){const i=t[t.length-1],s=t.slice(0,t.length-1).reverse().map(e=>function(e){const t=e.routeConfig?e.routeConfig.canActivateChild:null;return t&&0!==t.length?{node:e,guards:t}:null}(e)).filter(e=>null!==e).map(t=>Cp(()=>Bd(t.guards.map(s=>{const o=om(s,t.node,n);let r;if(function(e){return e&&Ig(e.canActivateChild)}(o))r=xf(o.canActivateChild(i,e));else{if(!Ig(o))throw new Error("Invalid CanActivateChild guard");r=xf(o(i,e))}return r.pipe(zp())})).pipe(Vg())));return Bd(s).pipe(Vg())}(e,t.path,n),function(e,t,n){const i=t.routeConfig?t.routeConfig.canActivate:null;return i&&0!==i.length?Bd(i.map(i=>Cp(()=>{const s=om(i,t,n);let o;if(function(e){return e&&Ig(e.canActivate)}(s))o=xf(s.canActivate(t,e));else{if(!Ig(s))throw new Error("Invalid CanActivate guard");o=xf(s(t,e))}return o.pipe(zp())}))).pipe(Vg()):Bd(!0)}(e,t.route,n))),zp(e=>!0!==e,!0))}(i,o,e,t):Bd(n)),k(e=>Object.assign(Object.assign({},n),{guardsResult:e})))})}(this.ngModule.injector,e=>this.triggerEvent(e)),Gp(e=>{if(Mg(e.guardsResult)){const t=Cf(`Redirecting to "${this.serializeUrl(e.guardsResult)}"`);throw t.url=e.guardsResult,t}const t=new af(e.id,this.serializeUrl(e.extractedUrl),this.serializeUrl(e.urlAfterRedirects),e.targetSnapshot,!!e.guardsResult);this.triggerEvent(t)}),Ap(e=>{if(!e.guardsResult){this.resetUrlToCurrentUrlTree();const n=new nf(e.id,this.serializeUrl(e.extractedUrl),"");return t.next(n),e.resolve(!1),!1}return!0}),vm(e=>{if(e.guards.canActivateChecks.length)return Bd(e).pipe(Gp(e=>{const t=new lf(e.id,this.serializeUrl(e.extractedUrl),this.serializeUrl(e.urlAfterRedirects),e.targetSnapshot);this.triggerEvent(t)}),Kd(e=>{let n=!1;return Bd(e).pipe((i=this.paramsInheritanceStrategy,s=this.ngModule.injector,B(e=>{const{targetSnapshot:t,guards:{canActivateChecks:n}}=e;if(!n.length)return Bd(e);let o=0;return L(n).pipe(Pp(e=>function(e,t,n,i){return function(e,t,n,i){const s=Object.keys(e);if(0===s.length)return Bd({});const o={};return L(s).pipe(B(s=>function(e,t,n,i){const s=om(e,t,i);return xf(s.resolve?s.resolve(t,n):s(t,n))}(e[s],t,n,i).pipe(Gp(e=>{o[s]=e}))),Vp(1),B(()=>Object.keys(o).length===s.length?Bd(o):jd))}(e._resolve,e,t,i).pipe(k(t=>(e._resolvedData=t,e.data=Object.assign(Object.assign({},e.data),lg(e,n).resolve),null)))}(e.route,t,i,s)),Gp(()=>o++),Vp(1),B(t=>o===n.length?Bd(e):jd))})),Gp({next:()=>n=!0,complete:()=>{if(!n){const n=new nf(e.id,this.serializeUrl(e.extractedUrl),"At least one route resolver didn't emit any value.");t.next(n),e.resolve(!1)}}}));var i,s}),Gp(e=>{const t=new cf(e.id,this.serializeUrl(e.extractedUrl),this.serializeUrl(e.urlAfterRedirects),e.targetSnapshot);this.triggerEvent(t)}))}),vm(e=>{const{targetSnapshot:t,id:n,extractedUrl:i,rawUrl:s,extras:{skipLocationChange:o,replaceUrl:r}}=e;return this.hooks.afterPreactivation(t,{navigationId:n,appliedUrlTree:i,rawUrlTree:s,skipLocationChange:!!o,replaceUrl:!!r})}),k(e=>{const t=function(e,t,n){const i=gg(e,t._root,n?n._root:void 0);return new og(i,t)}(this.routeReuseStrategy,e.targetSnapshot,e.currentRouterState);return Object.assign(Object.assign({},e),{targetRouterState:t})}),Gp(e=>{this.currentUrlTree=e.urlAfterRedirects,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,e.rawUrl),this.routerState=e.targetRouterState,"deferred"===this.urlUpdateStrategy&&(e.extras.skipLocationChange||this.setBrowserUrl(this.rawUrlTree,!!e.extras.replaceUrl,e.id,e.extras.state),this.browserUrlTree=e.urlAfterRedirects)}),(s=this.rootContexts,o=this.routeReuseStrategy,r=e=>this.triggerEvent(e),k(e=>(new Og(o,e.targetRouterState,e.currentRouterState,r).activate(s),e))),Gp({next(){n=!0},complete(){n=!0}}),Zp(()=>{if(!n&&!i){this.resetUrlToCurrentUrlTree();const n=new nf(e.id,this.serializeUrl(e.extractedUrl),`Navigation ID ${e.id} is not equal to the current navigation id ${this.navigationId}`);t.next(n),e.resolve(!1)}this.currentNavigation=null}),Fp(n=>{if(i=!0,(s=n)&&s.ngNavigationCancelingError){const i=Mg(n.url);i||(this.navigated=!0,this.resetStateAndUrl(e.currentRouterState,e.currentUrlTree,e.rawUrl));const s=new nf(e.id,this.serializeUrl(e.extractedUrl),n.message);t.next(s),i?setTimeout(()=>{const t=this.urlHandlingStrategy.merge(n.url,this.rawUrlTree);this.scheduleNavigation(t,"imperative",null,{skipLocationChange:e.extras.skipLocationChange,replaceUrl:"eager"===this.urlUpdateStrategy},{resolve:e.resolve,reject:e.reject,promise:e.promise})},0):e.resolve(!1)}else{this.resetStateAndUrl(e.currentRouterState,e.currentUrlTree,e.rawUrl);const i=new sf(e.id,this.serializeUrl(e.extractedUrl),n);t.next(i);try{e.resolve(this.errorHandler(n))}catch(o){e.reject(o)}}var s;return jd}));var s,o,r}))}resetRootComponentType(e){this.rootComponentType=e,this.routerState.root.component=this.rootComponentType}getTransition(){const e=this.transitions.value;return e.urlAfterRedirects=this.browserUrlTree,e}setTransition(e){this.transitions.next(Object.assign(Object.assign({},this.getTransition()),e))}initialNavigation(){this.setUpLocationChangeListener(),0===this.navigationId&&this.navigateByUrl(this.location.path(!0),{replaceUrl:!0})}setUpLocationChangeListener(){this.locationSubscription||(this.locationSubscription=this.location.subscribe(e=>{const t=this.extractLocationChangeInfoFromEvent(e);this.shouldScheduleNavigation(this.lastLocationChangeInfo,t)&&setTimeout(()=>{const{source:e,state:n,urlTree:i}=t,s={replaceUrl:!0};if(n){const e=Object.assign({},n);delete e.navigationId,0!==Object.keys(e).length&&(s.state=e)}this.scheduleNavigation(i,e,n,s)},0),this.lastLocationChangeInfo=t}))}extractLocationChangeInfoFromEvent(e){var t;return{source:"popstate"===e.type?"popstate":"hashchange",urlTree:this.parseUrl(e.url),state:(null===(t=e.state)||void 0===t?void 0:t.navigationId)?e.state:null,transitionId:this.getTransition().id}}shouldScheduleNavigation(e,t){if(!e)return!0;const n=t.urlTree.toString()===e.urlTree.toString();return!(t.transitionId===e.transitionId&&n&&("hashchange"===t.source&&"popstate"===e.source||"popstate"===t.source&&"hashchange"===e.source))}get url(){return this.serializeUrl(this.currentUrlTree)}getCurrentNavigation(){return this.currentNavigation}triggerEvent(e){this.events.next(e)}resetConfig(e){Rg(e),this.config=e.map(Bg),this.navigated=!1,this.lastSuccessfulId=-1}ngOnDestroy(){this.dispose()}dispose(){this.transitions.complete(),this.locationSubscription&&(this.locationSubscription.unsubscribe(),this.locationSubscription=void 0),this.disposed=!0}createUrlTree(e,t={}){const{relativeTo:n,queryParams:i,fragment:s,queryParamsHandling:o,preserveFragment:r}=t,a=n||this.routerState.root,l=r?this.currentUrlTree.fragment:s;let c=null;switch(o){case"merge":c=Object.assign(Object.assign({},this.currentUrlTree.queryParams),i);break;case"preserve":c=this.currentUrlTree.queryParams;break;default:c=i||null}return null!==c&&(c=this.removeEmptyProps(c)),function(e,t,n,i,s){if(0===n.length)return yg(t.root,t.root,t,i,s);const o=function(e){if("string"==typeof e[0]&&1===e.length&&"/"===e[0])return new wg(!0,0,e);let t=0,n=!1;const i=e.reduce((e,i,s)=>{if("object"==typeof i&&null!=i){if(i.outlets){const t={};return kf(i.outlets,(e,n)=>{t[n]="string"==typeof e?e.split("/"):e}),[...e,{outlets:t}]}if(i.segmentPath)return[...e,i.segmentPath]}return"string"!=typeof i?[...e,i]:0===s?(i.split("/").forEach((i,s)=>{0==s&&"."===i||(0==s&&""===i?n=!0:".."===i?t++:""!=i&&e.push(i))}),e):[...e,i]},[]);return new wg(n,t,i)}(n);if(o.toRoot())return yg(t.root,new Vf([],{}),t,i,s);const r=function(e,t,n){if(e.isAbsolute)return new _g(t.root,!0,0);if(-1===n.snapshot._lastPathIndex){const e=n.snapshot._urlSegment;return new _g(e,e===t.root,0)}const i=vg(e.commands[0])?0:1;return function(e,t,n){let i=e,s=t,o=n;for(;o>s;){if(o-=s,i=i.parent,!i)throw new Error("Invalid number of '../'");s=i.segments.length}return new _g(i,!1,s-o)}(n.snapshot._urlSegment,n.snapshot._lastPathIndex+i,e.numberOfDoubleDots)}(o,t,e),a=r.processChildren?Sg(r.segmentGroup,r.index,o.commands):Dg(r.segmentGroup,r.index,o.commands);return yg(r.segmentGroup,a,t,i,s)}(a,this.currentUrlTree,e,c,null!=l?l:null)}navigateByUrl(e,t={skipLocationChange:!1}){const n=Mg(e)?e:this.parseUrl(e),i=this.urlHandlingStrategy.merge(n,this.rawUrlTree);return this.scheduleNavigation(i,"imperative",null,t)}navigate(e,t={skipLocationChange:!1}){return function(e){for(let t=0;t<e.length;t++){const n=e[t];if(null==n)throw new Error(`The requested path contains ${n} segment at index ${t}`)}}(e),this.navigateByUrl(this.createUrlTree(e,t),t)}serializeUrl(e){return this.urlSerializer.serialize(e)}parseUrl(e){let t;try{t=this.urlSerializer.parse(e)}catch(n){t=this.malformedUriErrorHandler(n,this.urlSerializer,e)}return t}isActive(e,t){let n;if(n=!0===t?Object.assign({},xm):!1===t?Object.assign({},Am):t,Mg(e))return Tf(this.currentUrlTree,e,n);const i=this.parseUrl(e);return Tf(this.currentUrlTree,i,n)}removeEmptyProps(e){return Object.keys(e).reduce((t,n)=>{const i=e[n];return null!=i&&(t[n]=i),t},{})}processNavigations(){this.navigations.subscribe(e=>{this.navigated=!0,this.lastSuccessfulId=e.id,this.events.next(new tf(e.id,this.serializeUrl(e.extractedUrl),this.serializeUrl(this.currentUrlTree))),this.lastSuccessfulNavigation=this.currentNavigation,e.resolve(!0)},e=>{this.console.warn("Unhandled Navigation Error: ")})}scheduleNavigation(e,t,n,i,s){if(this.disposed)return Promise.resolve(!1);const o=this.getTransition(),r="imperative"!==t&&"imperative"===(null==o?void 0:o.source),a=(this.lastSuccessfulId===o.id||this.currentNavigation?o.rawUrl:o.urlAfterRedirects).toString()===e.toString();if(r&&a)return Promise.resolve(!0);let l,c,u;s?(l=s.resolve,c=s.reject,u=s.promise):u=new Promise((e,t)=>{l=e,c=t});const h=++this.navigationId;return this.setTransition({id:h,source:t,restoredState:n,currentUrlTree:this.currentUrlTree,currentRawUrl:this.rawUrlTree,rawUrl:e,extras:i,resolve:l,reject:c,promise:u,currentSnapshot:this.routerState.snapshot,currentRouterState:this.routerState}),u.catch(e=>Promise.reject(e))}setBrowserUrl(e,t,n,i){const s=this.urlSerializer.serialize(e);i=i||{},this.location.isCurrentPathEqualTo(s)||t?this.location.replaceState(s,"",Object.assign(Object.assign({},i),{navigationId:n})):this.location.go(s,"",Object.assign(Object.assign({},i),{navigationId:n}))}resetStateAndUrl(e,t,n){this.routerState=e,this.currentUrlTree=t,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,n),this.resetUrlToCurrentUrlTree()}resetUrlToCurrentUrlTree(){this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree),"",{navigationId:this.lastSuccessfulId})}}return e.\u0275fac=function(t){return new(t||e)(ci(Gn),ci(jf),ci(_m),ci(Pu),ci(lr),ci(cu),ci(jc),ci(void 0))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),Tm=(()=>{class e{constructor(e,t,n){this.router=e,this.route=t,this.locationStrategy=n,this.commands=[],this.onChanges=new D,this.subscription=e.events.subscribe(e=>{e instanceof tf&&this.updateTargetUrlAndHref()})}set routerLink(e){this.commands=null!=e?Array.isArray(e)?e:[e]:[]}ngOnChanges(e){this.updateTargetUrlAndHref(),this.onChanges.next(this)}ngOnDestroy(){this.subscription.unsubscribe()}onClick(e,t,n,i,s){if(0!==e||t||n||i||s)return!0;if("string"==typeof this.target&&"_self"!=this.target)return!0;const o={skipLocationChange:Fm(this.skipLocationChange),replaceUrl:Fm(this.replaceUrl),state:this.state};return this.router.navigateByUrl(this.urlTree,o),!1}updateTargetUrlAndHref(){this.href=this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree))}get urlTree(){return this.router.createUrlTree(this.commands,{relativeTo:void 0!==this.relativeTo?this.relativeTo:this.route,queryParams:this.queryParams,fragment:this.fragment,queryParamsHandling:this.queryParamsHandling,preserveFragment:Fm(this.preserveFragment)})}}return e.\u0275fac=function(t){return new(t||e)(Ar(Om),Ar(ag),Ar(Ou))},e.\u0275dir=Ke({type:e,selectors:[["a","routerLink",""],["area","routerLink",""]],hostVars:2,hostBindings:function(e,t){1&e&&Br("click",function(e){return t.onClick(e.button,e.ctrlKey,e.shiftKey,e.altKey,e.metaKey)}),2&e&&(ya("href",t.href,Xi),Dr("target",t.target))},inputs:{routerLink:"routerLink",target:"target",queryParams:"queryParams",fragment:"fragment",queryParamsHandling:"queryParamsHandling",preserveFragment:"preserveFragment",skipLocationChange:"skipLocationChange",replaceUrl:"replaceUrl",state:"state",relativeTo:"relativeTo"},features:[lt]}),e})();function Fm(e){return""===e||!!e}let Im=(()=>{class e{constructor(e,t,n,i,s){this.parentContexts=e,this.location=t,this.resolver=n,this.changeDetector=s,this.activated=null,this._activatedRoute=null,this.activateEvents=new ec,this.deactivateEvents=new ec,this.name=i||vf,e.onChildOutletCreated(this.name,this)}ngOnDestroy(){this.parentContexts.onChildOutletDestroyed(this.name)}ngOnInit(){if(!this.activated){const e=this.parentContexts.getContext(this.name);e&&e.route&&(e.attachRef?this.attach(e.attachRef,e.route):this.activateWith(e.route,e.resolver||null))}}get isActivated(){return!!this.activated}get component(){if(!this.activated)throw new Error("Outlet is not activated");return this.activated.instance}get activatedRoute(){if(!this.activated)throw new Error("Outlet is not activated");return this._activatedRoute}get activatedRouteData(){return this._activatedRoute?this._activatedRoute.snapshot.data:{}}detach(){if(!this.activated)throw new Error("Outlet is not activated");this.location.detach();const e=this.activated;return this.activated=null,this._activatedRoute=null,e}attach(e,t){this.activated=e,this._activatedRoute=t,this.location.insert(e.hostView)}deactivate(){if(this.activated){const e=this.component;this.activated.destroy(),this.activated=null,this._activatedRoute=null,this.deactivateEvents.emit(e)}}activateWith(e,t){if(this.isActivated)throw new Error("Cannot activate an already activated outlet");this._activatedRoute=e;const n=(t=t||this.resolver).resolveComponentFactory(e._futureSnapshot.routeConfig.component),i=this.parentContexts.getOrCreateContext(this.name).children,s=new Mm(e,i,this.location.injector);this.activated=this.location.createComponent(n,this.location.length,s),this.changeDetector.markForCheck(),this.activateEvents.emit(this.activated.instance)}}return e.\u0275fac=function(t){return new(t||e)(Ar(_m),Ar(xl),Ar(Na),("name",function(e,t){const n=e.attrs;if(n){const e=n.length;let i=0;for(;i<e;){const s=n[i];if(gn(s))break;if(0===s)i+=2;else if("number"==typeof s)for(i++;i<e&&"string"==typeof n[i];)i++;else{if(s===t)return n[i+1];i+=2}}}return null}(Mt(),"name")),Ar(gl))},e.\u0275dir=Ke({type:e,selectors:[["router-outlet"]],outputs:{activateEvents:"activate",deactivateEvents:"deactivate"},exportAs:["outlet"]}),e})();class Mm{constructor(e,t,n){this.route=e,this.childContexts=t,this.parent=n}get(e,t){return e===ag?this.route:e===_m?this.childContexts:this.parent.get(e,t)}}class Pm{}class Vm{preload(e,t){return Bd(null)}}let Lm=(()=>{class e{constructor(e,t,n,i,s){this.router=e,this.injector=i,this.preloadingStrategy=s,this.loader=new Cm(t,n,t=>e.triggerEvent(new uf(t)),t=>e.triggerEvent(new hf(t)))}setUpPreloading(){this.subscription=this.router.events.pipe(Ap(e=>e instanceof tf),Pp(()=>this.preload())).subscribe(()=>{})}preload(){const e=this.injector.get(Sl);return this.processRoutes(e,this.router.config)}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}processRoutes(e,t){const n=[];for(const i of t)if(i.loadChildren&&!i.canLoad&&i._loadedConfig){const e=i._loadedConfig;n.push(this.processRoutes(e.module,e.routes))}else i.loadChildren&&!i.canLoad?n.push(this.preloadConfig(e,i)):i.children&&n.push(this.processRoutes(e,i.children));return L(n).pipe(U(),k(e=>{}))}preloadConfig(e,t){return this.preloadingStrategy.preload(t,()=>(t._loadedConfig?Bd(t._loadedConfig):this.loader.load(e.injector,t)).pipe(B(e=>(t._loadedConfig=e,this.processRoutes(e.module,e.routes)))))}}return e.\u0275fac=function(t){return new(t||e)(ci(Om),ci(cu),ci(jc),ci(lr),ci(Pm))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),Rm=(()=>{class e{constructor(e,t,n={}){this.router=e,this.viewportScroller=t,this.options=n,this.lastId=0,this.lastSource="imperative",this.restoredId=0,this.store={},n.scrollPositionRestoration=n.scrollPositionRestoration||"disabled",n.anchorScrolling=n.anchorScrolling||"disabled"}init(){"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.setHistoryScrollRestoration("manual"),this.routerEventsSubscription=this.createScrollEvents(),this.scrollEventsSubscription=this.consumeScrollEvents()}createScrollEvents(){return this.router.events.subscribe(e=>{e instanceof ef?(this.store[this.lastId]=this.viewportScroller.getScrollPosition(),this.lastSource=e.navigationTrigger,this.restoredId=e.restoredState?e.restoredState.navigationId:0):e instanceof tf&&(this.lastId=e.id,this.scheduleScrollEvent(e,this.router.parseUrl(e.urlAfterRedirects).fragment))})}consumeScrollEvents(){return this.router.events.subscribe(e=>{e instanceof mf&&(e.position?"top"===this.options.scrollPositionRestoration?this.viewportScroller.scrollToPosition([0,0]):"enabled"===this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition(e.position):e.anchor&&"enabled"===this.options.anchorScrolling?this.viewportScroller.scrollToAnchor(e.anchor):"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition([0,0]))})}scheduleScrollEvent(e,t){this.router.triggerEvent(new mf(e,"popstate"===this.lastSource?this.store[this.restoredId]:null,t))}ngOnDestroy(){this.routerEventsSubscription&&this.routerEventsSubscription.unsubscribe(),this.scrollEventsSubscription&&this.scrollEventsSubscription.unsubscribe()}}return e.\u0275fac=function(t){return new(t||e)(ci(Om),ci(Kh),ci(void 0))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})();const jm=new zn("ROUTER_CONFIGURATION"),Nm=new zn("ROUTER_FORROOT_GUARD"),Bm=[Pu,{provide:jf,useClass:Nf},{provide:Om,useFactory:function(e,t,n,i,s,o,r,a={},l,c){const u=new Om(null,e,t,n,i,s,o,Sf(r));return l&&(u.urlHandlingStrategy=l),c&&(u.routeReuseStrategy=c),function(e,t){e.errorHandler&&(t.errorHandler=e.errorHandler),e.malformedUriErrorHandler&&(t.malformedUriErrorHandler=e.malformedUriErrorHandler),e.onSameUrlNavigation&&(t.onSameUrlNavigation=e.onSameUrlNavigation),e.paramsInheritanceStrategy&&(t.paramsInheritanceStrategy=e.paramsInheritanceStrategy),e.relativeLinkResolution&&(t.relativeLinkResolution=e.relativeLinkResolution),e.urlUpdateStrategy&&(t.urlUpdateStrategy=e.urlUpdateStrategy)}(a,u),a.enableTracing&&u.events.subscribe(e=>{var t,n;null===(t=console.group)||void 0===t||t.call(console,`Router Event: ${e.constructor.name}`),console.log(e.toString()),console.log(e),null===(n=console.groupEnd)||void 0===n||n.call(console)}),u},deps:[jf,_m,Pu,lr,cu,jc,ym,jm,[class{},new pi],[class{},new pi]]},_m,{provide:ag,useFactory:function(e){return e.routerState.root},deps:[Om]},{provide:cu,useClass:du},Lm,Vm,class{preload(e,t){return t().pipe(Fp(()=>Bd(null)))}},{provide:jm,useValue:{enableTracing:!1}}];function $m(){return new nu("Router",Om)}let Hm=(()=>{class e{constructor(e,t){}static forRoot(t,n){return{ngModule:e,providers:[Bm,Wm(t),{provide:Nm,useFactory:zm,deps:[[Om,new pi,new fi]]},{provide:jm,useValue:n||{}},{provide:Ou,useFactory:qm,deps:[Cu,[new di(Fu),new pi],jm]},{provide:Rm,useFactory:Um,deps:[Om,Kh,jm]},{provide:Pm,useExisting:n&&n.preloadingStrategy?n.preloadingStrategy:Vm},{provide:nu,multi:!0,useFactory:$m},[Gm,{provide:Cc,multi:!0,useFactory:Km,deps:[Gm]},{provide:Zm,useFactory:Ym,deps:[Gm]},{provide:xc,multi:!0,useExisting:Zm}]]}}static forChild(t){return{ngModule:e,providers:[Wm(t)]}}}return e.\u0275fac=function(t){return new(t||e)(ci(Nm,8),ci(Om,8))},e.\u0275mod=We({type:e}),e.\u0275inj=de({}),e})();function Um(e,t,n){return n.scrollOffset&&t.setOffset(n.scrollOffset),new Rm(e,t,n)}function qm(e,t,n={}){return n.useHash?new Mu(e,t):new Iu(e,t)}function zm(e){return"guarded"}function Wm(e){return[{provide:Wn,multi:!0,useValue:e},{provide:ym,multi:!0,useValue:e}]}let Gm=(()=>{class e{constructor(e){this.injector=e,this.initNavigation=!1,this.resultOfPreactivationDone=new D}appInitializer(){return this.injector.get(_u,Promise.resolve(null)).then(()=>{let e=null;const t=new Promise(t=>e=t),n=this.injector.get(Om),i=this.injector.get(jm);return"disabled"===i.initialNavigation?(n.setUpLocationChangeListener(),e(!0)):"enabled"===i.initialNavigation||"enabledBlocking"===i.initialNavigation?(n.hooks.afterPreactivation=()=>this.initNavigation?Bd(null):(this.initNavigation=!0,e(!0),this.resultOfPreactivationDone),n.initialNavigation()):e(!0),t})}bootstrapListener(e){const t=this.injector.get(jm),n=this.injector.get(Lm),i=this.injector.get(Rm),s=this.injector.get(Om),o=this.injector.get(au);e===o.components[0]&&("enabledNonBlocking"!==t.initialNavigation&&void 0!==t.initialNavigation||s.initialNavigation(),n.setUpPreloading(),i.init(),s.resetRootComponentType(o.componentTypes[0]),this.resultOfPreactivationDone.next(null),this.resultOfPreactivationDone.complete())}}return e.\u0275fac=function(t){return new(t||e)(ci(lr))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})();function Km(e){return e.appInitializer.bind(e)}function Ym(e){return e.bootstrapListener.bind(e)}const Zm=new zn("Router Initializer");class Qm{}class Jm{}class Xm{constructor(e){this.normalizedNames=new Map,this.lazyUpdate=null,e?this.lazyInit="string"==typeof e?()=>{this.headers=new Map,e.split("\n").forEach(e=>{const t=e.indexOf(":");if(t>0){const n=e.slice(0,t),i=n.toLowerCase(),s=e.slice(t+1).trim();this.maybeSetNormalizedName(n,i),this.headers.has(i)?this.headers.get(i).push(s):this.headers.set(i,[s])}})}:()=>{this.headers=new Map,Object.keys(e).forEach(t=>{let n=e[t];const i=t.toLowerCase();"string"==typeof n&&(n=[n]),n.length>0&&(this.headers.set(i,n),this.maybeSetNormalizedName(t,i))})}:this.headers=new Map}has(e){return this.init(),this.headers.has(e.toLowerCase())}get(e){this.init();const t=this.headers.get(e.toLowerCase());return t&&t.length>0?t[0]:null}keys(){return this.init(),Array.from(this.normalizedNames.values())}getAll(e){return this.init(),this.headers.get(e.toLowerCase())||null}append(e,t){return this.clone({name:e,value:t,op:"a"})}set(e,t){return this.clone({name:e,value:t,op:"s"})}delete(e,t){return this.clone({name:e,value:t,op:"d"})}maybeSetNormalizedName(e,t){this.normalizedNames.has(t)||this.normalizedNames.set(t,e)}init(){this.lazyInit&&(this.lazyInit instanceof Xm?this.copyFrom(this.lazyInit):this.lazyInit(),this.lazyInit=null,this.lazyUpdate&&(this.lazyUpdate.forEach(e=>this.applyUpdate(e)),this.lazyUpdate=null))}copyFrom(e){e.init(),Array.from(e.headers.keys()).forEach(t=>{this.headers.set(t,e.headers.get(t)),this.normalizedNames.set(t,e.normalizedNames.get(t))})}clone(e){const t=new Xm;return t.lazyInit=this.lazyInit&&this.lazyInit instanceof Xm?this.lazyInit:this,t.lazyUpdate=(this.lazyUpdate||[]).concat([e]),t}applyUpdate(e){const t=e.name.toLowerCase();switch(e.op){case"a":case"s":let n=e.value;if("string"==typeof n&&(n=[n]),0===n.length)return;this.maybeSetNormalizedName(e.name,t);const i=("a"===e.op?this.headers.get(t):void 0)||[];i.push(...n),this.headers.set(t,i);break;case"d":const s=e.value;if(s){let e=this.headers.get(t);if(!e)return;e=e.filter(e=>-1===s.indexOf(e)),0===e.length?(this.headers.delete(t),this.normalizedNames.delete(t)):this.headers.set(t,e)}else this.headers.delete(t),this.normalizedNames.delete(t)}}forEach(e){this.init(),Array.from(this.normalizedNames.keys()).forEach(t=>e(this.normalizedNames.get(t),this.headers.get(t)))}}class ev{encodeKey(e){return tv(e)}encodeValue(e){return tv(e)}decodeKey(e){return decodeURIComponent(e)}decodeValue(e){return decodeURIComponent(e)}}function tv(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/gi,"$").replace(/%2C/gi,",").replace(/%3B/gi,";").replace(/%2B/gi,"+").replace(/%3D/gi,"=").replace(/%3F/gi,"?").replace(/%2F/gi,"/")}function nv(e){return`${e}`}class iv{constructor(e={}){if(this.updates=null,this.cloneFrom=null,this.encoder=e.encoder||new ev,e.fromString){if(e.fromObject)throw new Error("Cannot specify both fromString and fromObject.");this.map=function(e,t){const n=new Map;return e.length>0&&e.replace(/^\?/,"").split("&").forEach(e=>{const i=e.indexOf("="),[s,o]=-1==i?[t.decodeKey(e),""]:[t.decodeKey(e.slice(0,i)),t.decodeValue(e.slice(i+1))],r=n.get(s)||[];r.push(o),n.set(s,r)}),n}(e.fromString,this.encoder)}else e.fromObject?(this.map=new Map,Object.keys(e.fromObject).forEach(t=>{const n=e.fromObject[t];this.map.set(t,Array.isArray(n)?n:[n])})):this.map=null}has(e){return this.init(),this.map.has(e)}get(e){this.init();const t=this.map.get(e);return t?t[0]:null}getAll(e){return this.init(),this.map.get(e)||null}keys(){return this.init(),Array.from(this.map.keys())}append(e,t){return this.clone({param:e,value:t,op:"a"})}appendAll(e){const t=[];return Object.keys(e).forEach(n=>{const i=e[n];Array.isArray(i)?i.forEach(e=>{t.push({param:n,value:e,op:"a"})}):t.push({param:n,value:i,op:"a"})}),this.clone(t)}set(e,t){return this.clone({param:e,value:t,op:"s"})}delete(e,t){return this.clone({param:e,value:t,op:"d"})}toString(){return this.init(),this.keys().map(e=>{const t=this.encoder.encodeKey(e);return this.map.get(e).map(e=>t+"="+this.encoder.encodeValue(e)).join("&")}).filter(e=>""!==e).join("&")}clone(e){const t=new iv({encoder:this.encoder});return t.cloneFrom=this.cloneFrom||this,t.updates=(this.updates||[]).concat(e),t}init(){null===this.map&&(this.map=new Map),null!==this.cloneFrom&&(this.cloneFrom.init(),this.cloneFrom.keys().forEach(e=>this.map.set(e,this.cloneFrom.map.get(e))),this.updates.forEach(e=>{switch(e.op){case"a":case"s":const t=("a"===e.op?this.map.get(e.param):void 0)||[];t.push(nv(e.value)),this.map.set(e.param,t);break;case"d":if(void 0===e.value){this.map.delete(e.param);break}{let t=this.map.get(e.param)||[];const n=t.indexOf(nv(e.value));-1!==n&&t.splice(n,1),t.length>0?this.map.set(e.param,t):this.map.delete(e.param)}}}),this.cloneFrom=this.updates=null)}}class sv{constructor(){this.map=new Map}set(e,t){return this.map.set(e,t),this}get(e){return this.map.has(e)||this.map.set(e,e.defaultValue()),this.map.get(e)}delete(e){return this.map.delete(e),this}keys(){return this.map.keys()}}function ov(e){return"undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer}function rv(e){return"undefined"!=typeof Blob&&e instanceof Blob}function av(e){return"undefined"!=typeof FormData&&e instanceof FormData}class lv{constructor(e,t,n,i){let s;if(this.url=t,this.body=null,this.reportProgress=!1,this.withCredentials=!1,this.responseType="json",this.method=e.toUpperCase(),function(e){switch(e){case"DELETE":case"GET":case"HEAD":case"OPTIONS":case"JSONP":return!1;default:return!0}}(this.method)||i?(this.body=void 0!==n?n:null,s=i):s=n,s&&(this.reportProgress=!!s.reportProgress,this.withCredentials=!!s.withCredentials,s.responseType&&(this.responseType=s.responseType),s.headers&&(this.headers=s.headers),s.context&&(this.context=s.context),s.params&&(this.params=s.params)),this.headers||(this.headers=new Xm),this.context||(this.context=new sv),this.params){const e=this.params.toString();if(0===e.length)this.urlWithParams=t;else{const n=t.indexOf("?");this.urlWithParams=t+(-1===n?"?":n<t.length-1?"&":"")+e}}else this.params=new iv,this.urlWithParams=t}serializeBody(){return null===this.body?null:ov(this.body)||rv(this.body)||av(this.body)||"string"==typeof this.body?this.body:this.body instanceof iv?this.body.toString():"object"==typeof this.body||"boolean"==typeof this.body||Array.isArray(this.body)?JSON.stringify(this.body):this.body.toString()}detectContentTypeHeader(){return null===this.body||av(this.body)?null:rv(this.body)?this.body.type||null:ov(this.body)?null:"string"==typeof this.body?"text/plain":this.body instanceof iv?"application/x-www-form-urlencoded;charset=UTF-8":"object"==typeof this.body||"number"==typeof this.body||"boolean"==typeof this.body?"application/json":null}clone(e={}){var t;const n=e.method||this.method,i=e.url||this.url,s=e.responseType||this.responseType,o=void 0!==e.body?e.body:this.body,r=void 0!==e.withCredentials?e.withCredentials:this.withCredentials,a=void 0!==e.reportProgress?e.reportProgress:this.reportProgress;let l=e.headers||this.headers,c=e.params||this.params;const u=null!==(t=e.context)&&void 0!==t?t:this.context;return void 0!==e.setHeaders&&(l=Object.keys(e.setHeaders).reduce((t,n)=>t.set(n,e.setHeaders[n]),l)),e.setParams&&(c=Object.keys(e.setParams).reduce((t,n)=>t.set(n,e.setParams[n]),c)),new lv(n,i,o,{params:c,headers:l,context:u,reportProgress:a,responseType:s,withCredentials:r})}}var cv=function(e){return e[e.Sent=0]="Sent",e[e.UploadProgress=1]="UploadProgress",e[e.ResponseHeader=2]="ResponseHeader",e[e.DownloadProgress=3]="DownloadProgress",e[e.Response=4]="Response",e[e.User=5]="User",e}({});class uv{constructor(e,t=200,n="OK"){this.headers=e.headers||new Xm,this.status=void 0!==e.status?e.status:t,this.statusText=e.statusText||n,this.url=e.url||null,this.ok=this.status>=200&&this.status<300}}class hv extends uv{constructor(e={}){super(e),this.type=cv.ResponseHeader}clone(e={}){return new hv({headers:e.headers||this.headers,status:void 0!==e.status?e.status:this.status,statusText:e.statusText||this.statusText,url:e.url||this.url||void 0})}}class dv extends uv{constructor(e={}){super(e),this.type=cv.Response,this.body=void 0!==e.body?e.body:null}clone(e={}){return new dv({body:void 0!==e.body?e.body:this.body,headers:e.headers||this.headers,status:void 0!==e.status?e.status:this.status,statusText:e.statusText||this.statusText,url:e.url||this.url||void 0})}}class pv extends uv{constructor(e){super(e,0,"Unknown Error"),this.name="HttpErrorResponse",this.ok=!1,this.message=this.status>=200&&this.status<300?`Http failure during parsing for ${e.url||"(unknown url)"}`:`Http failure response for ${e.url||"(unknown url)"}: ${e.status} ${e.statusText}`,this.error=e.error||null}}function fv(e,t){return{body:t,headers:e.headers,context:e.context,observe:e.observe,params:e.params,reportProgress:e.reportProgress,responseType:e.responseType,withCredentials:e.withCredentials}}let gv=(()=>{class e{constructor(e){this.handler=e}request(e,t,n={}){let i;if(e instanceof lv)i=e;else{let s,o;s=n.headers instanceof Xm?n.headers:new Xm(n.headers),n.params&&(o=n.params instanceof iv?n.params:new iv({fromObject:n.params})),i=new lv(e,t,void 0!==n.body?n.body:null,{headers:s,context:n.context,params:o,reportProgress:n.reportProgress,responseType:n.responseType||"json",withCredentials:n.withCredentials})}const s=Bd(i).pipe(Pp(e=>this.handler.handle(e)));if(e instanceof lv||"events"===n.observe)return s;const o=s.pipe(Ap(e=>e instanceof dv));switch(n.observe||"body"){case"body":switch(i.responseType){case"arraybuffer":return o.pipe(k(e=>{if(null!==e.body&&!(e.body instanceof ArrayBuffer))throw new Error("Response is not an ArrayBuffer.");return e.body}));case"blob":return o.pipe(k(e=>{if(null!==e.body&&!(e.body instanceof Blob))throw new Error("Response is not a Blob.");return e.body}));case"text":return o.pipe(k(e=>{if(null!==e.body&&"string"!=typeof e.body)throw new Error("Response is not a string.");return e.body}));case"json":default:return o.pipe(k(e=>e.body))}case"response":return o;default:throw new Error(`Unreachable: unhandled observe type ${n.observe}}`)}}delete(e,t={}){return this.request("DELETE",e,t)}get(e,t={}){return this.request("GET",e,t)}head(e,t={}){return this.request("HEAD",e,t)}jsonp(e,t){return this.request("JSONP",e,{params:(new iv).append(t,"JSONP_CALLBACK"),observe:"body",responseType:"json"})}options(e,t={}){return this.request("OPTIONS",e,t)}patch(e,t,n={}){return this.request("PATCH",e,fv(n,t))}post(e,t,n={}){return this.request("POST",e,fv(n,t))}put(e,t,n={}){return this.request("PUT",e,fv(n,t))}}return e.\u0275fac=function(t){return new(t||e)(ci(Qm))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})();class mv{constructor(e,t){this.next=e,this.interceptor=t}handle(e){return this.interceptor.intercept(e,this.next)}}const vv=new zn("HTTP_INTERCEPTORS");let bv=(()=>{class e{intercept(e,t){return t.handle(e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})();const yv=/^\)\]\}',?\n/;let Cv=(()=>{class e{constructor(e){this.xhrFactory=e}handle(e){if("JSONP"===e.method)throw new Error("Attempted to construct Jsonp request without HttpClientJsonpModule installed.");return new b(t=>{const n=this.xhrFactory.build();if(n.open(e.method,e.urlWithParams),e.withCredentials&&(n.withCredentials=!0),e.headers.forEach((e,t)=>n.setRequestHeader(e,t.join(","))),e.headers.has("Accept")||n.setRequestHeader("Accept","application/json, text/plain, */*"),!e.headers.has("Content-Type")){const t=e.detectContentTypeHeader();null!==t&&n.setRequestHeader("Content-Type",t)}if(e.responseType){const t=e.responseType.toLowerCase();n.responseType="json"!==t?t:"text"}const i=e.serializeBody();let s=null;const o=()=>{if(null!==s)return s;const t=1223===n.status?204:n.status,i=n.statusText||"OK",o=new Xm(n.getAllResponseHeaders()),r=function(e){return"responseURL"in e&&e.responseURL?e.responseURL:/^X-Request-URL:/m.test(e.getAllResponseHeaders())?e.getResponseHeader("X-Request-URL"):null}(n)||e.url;return s=new hv({headers:o,status:t,statusText:i,url:r}),s},r=()=>{let{headers:i,status:s,statusText:r,url:a}=o(),l=null;204!==s&&(l=void 0===n.response?n.responseText:n.response),0===s&&(s=l?200:0);let c=s>=200&&s<300;if("json"===e.responseType&&"string"==typeof l){const e=l;l=l.replace(yv,"");try{l=""!==l?JSON.parse(l):null}catch(u){l=e,c&&(c=!1,l={error:u,text:l})}}c?(t.next(new dv({body:l,headers:i,status:s,statusText:r,url:a||void 0})),t.complete()):t.error(new pv({error:l,headers:i,status:s,statusText:r,url:a||void 0}))},a=e=>{const{url:i}=o(),s=new pv({error:e,status:n.status||0,statusText:n.statusText||"Unknown Error",url:i||void 0});t.error(s)};let l=!1;const c=i=>{l||(t.next(o()),l=!0);let s={type:cv.DownloadProgress,loaded:i.loaded};i.lengthComputable&&(s.total=i.total),"text"===e.responseType&&n.responseText&&(s.partialText=n.responseText),t.next(s)},u=e=>{let n={type:cv.UploadProgress,loaded:e.loaded};e.lengthComputable&&(n.total=e.total),t.next(n)};return n.addEventListener("load",r),n.addEventListener("error",a),n.addEventListener("timeout",a),n.addEventListener("abort",a),e.reportProgress&&(n.addEventListener("progress",c),null!==i&&n.upload&&n.upload.addEventListener("progress",u)),n.send(i),t.next({type:cv.Sent}),()=>{n.removeEventListener("error",a),n.removeEventListener("abort",a),n.removeEventListener("load",r),n.removeEventListener("timeout",a),e.reportProgress&&(n.removeEventListener("progress",c),null!==i&&n.upload&&n.upload.removeEventListener("progress",u)),n.readyState!==n.DONE&&n.abort()}})}}return e.\u0275fac=function(t){return new(t||e)(ci(Qh))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})();const wv=new zn("XSRF_COOKIE_NAME"),_v=new zn("XSRF_HEADER_NAME");class Dv{}let Sv=(()=>{class e{constructor(e,t,n){this.doc=e,this.platform=t,this.cookieName=n,this.lastCookieString="",this.lastToken=null,this.parseCount=0}getToken(){if("server"===this.platform)return null;const e=this.doc.cookie||"";return e!==this.lastCookieString&&(this.parseCount++,this.lastToken=kh(e,this.cookieName),this.lastCookieString=e),this.lastToken}}return e.\u0275fac=function(t){return new(t||e)(ci(yu),ci(kc),ci(wv))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),Ev=(()=>{class e{constructor(e,t){this.tokenService=e,this.headerName=t}intercept(e,t){const n=e.url.toLowerCase();if("GET"===e.method||"HEAD"===e.method||n.startsWith("http://")||n.startsWith("https://"))return t.handle(e);const i=this.tokenService.getToken();return null===i||e.headers.has(this.headerName)||(e=e.clone({headers:e.headers.set(this.headerName,i)})),t.handle(e)}}return e.\u0275fac=function(t){return new(t||e)(ci(Dv),ci(_v))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),kv=(()=>{class e{constructor(e,t){this.backend=e,this.injector=t,this.chain=null}handle(e){if(null===this.chain){const e=this.injector.get(vv,[]);this.chain=e.reduceRight((e,t)=>new mv(e,t),this.backend)}return this.chain.handle(e)}}return e.\u0275fac=function(t){return new(t||e)(ci(Jm),ci(lr))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),xv=(()=>{class e{static disable(){return{ngModule:e,providers:[{provide:Ev,useClass:bv}]}}static withOptions(t={}){return{ngModule:e,providers:[t.cookieName?{provide:wv,useValue:t.cookieName}:[],t.headerName?{provide:_v,useValue:t.headerName}:[]]}}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[Ev,{provide:vv,useExisting:Ev,multi:!0},{provide:Dv,useClass:Sv},{provide:wv,useValue:"XSRF-TOKEN"},{provide:_v,useValue:"X-XSRF-TOKEN"}]}),e})(),Av=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[gv,{provide:Qm,useClass:kv},Cv,{provide:Jm,useExisting:Cv}],imports:[[xv.withOptions({cookieName:"XSRF-TOKEN",headerName:"X-XSRF-TOKEN"})]]}),e})();function Ov(e,t,n,i){var s,o=arguments.length,r=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,t,n,i);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(r=(o<3?s(r):o>3?s(t,n,r):s(t,n))||r);return o>3&&r&&Object.defineProperty(t,n,r),r}function Tv(e,t,n,i){return new(n||(n=Promise))(function(s,o){function r(e){try{l(i.next(e))}catch(t){o(t)}}function a(e){try{l(i.throw(e))}catch(t){o(t)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(r,a)}l((i=i.apply(e,t||[])).next())})}function Fv(e,t){return new b(n=>{const i=e.length;if(0===i)return void n.complete();const s=new Array(i);let o=0,r=0;for(let a=0;a<i;a++){const l=L(e[a]);let c=!1;n.add(l.subscribe({next:e=>{c||(c=!0,r++),s[a]=e},error:e=>n.error(e),complete:()=>{o++,o!==i&&c||(r===i&&n.next(t?t.reduce((e,t,n)=>(e[t]=s[n],e),{}):s),n.complete())}}))}})}let Iv=(()=>{class e{constructor(e,t){this._renderer=e,this._elementRef=t,this.onChange=e=>{},this.onTouched=()=>{}}setProperty(e,t){this._renderer.setProperty(this._elementRef.nativeElement,e,t)}registerOnTouched(e){this.onTouched=e}registerOnChange(e){this.onChange=e}setDisabledState(e){this.setProperty("disabled",e)}}return e.\u0275fac=function(t){return new(t||e)(Ar(Wa),Ar(Ua))},e.\u0275dir=Ke({type:e}),e})(),Mv=(()=>{class e extends Iv{}return e.\u0275fac=function(){let t;return function(n){return(t||(t=$n(e)))(n||e)}}(),e.\u0275dir=Ke({type:e,features:[ur]}),e})();const Pv=new zn("NgValueAccessor"),Vv={provide:Pv,useExisting:se(()=>Rv),multi:!0},Lv=new zn("CompositionEventMode");let Rv=(()=>{class e extends Iv{constructor(e,t,n){super(e,t),this._compositionMode=n,this._composing=!1,null==this._compositionMode&&(this._compositionMode=!function(){const e=bu()?bu().getUserAgent():"";return/android (\d+)/.test(e.toLowerCase())}())}writeValue(e){this.setProperty("value",null==e?"":e)}_handleInput(e){(!this._compositionMode||this._compositionMode&&!this._composing)&&this.onChange(e)}_compositionStart(){this._composing=!0}_compositionEnd(e){this._composing=!1,this._compositionMode&&this.onChange(e)}}return e.\u0275fac=function(t){return new(t||e)(Ar(Wa),Ar(Ua),Ar(Lv,8))},e.\u0275dir=Ke({type:e,selectors:[["input","formControlName","",3,"type","checkbox"],["textarea","formControlName",""],["input","formControl","",3,"type","checkbox"],["textarea","formControl",""],["input","ngModel","",3,"type","checkbox"],["textarea","ngModel",""],["","ngDefaultControl",""]],hostBindings:function(e,t){1&e&&Br("input",function(e){return t._handleInput(e.target.value)})("blur",function(){return t.onTouched()})("compositionstart",function(){return t._compositionStart()})("compositionend",function(e){return t._compositionEnd(e.target.value)})},features:[La([Vv]),ur]}),e})();const jv=new zn("NgValidators"),Nv=new zn("NgAsyncValidators");function Bv(e){return null!=e}function $v(e){const t=jr(e)?L(e):e;return Nr(t),t}function Hv(e){let t={};return e.forEach(e=>{t=null!=e?Object.assign(Object.assign({},t),e):t}),0===Object.keys(t).length?null:t}function Uv(e,t){return t.map(t=>t(e))}function qv(e){return e.map(e=>function(e){return!e.validate}(e)?e:t=>e.validate(t))}function zv(e){return null!=e?function(e){if(!e)return null;const t=e.filter(Bv);return 0==t.length?null:function(e){return Hv(Uv(e,t))}}(qv(e)):null}function Wv(e){return null!=e?function(e){if(!e)return null;const t=e.filter(Bv);return 0==t.length?null:function(e){return function(...e){if(1===e.length){const t=e[0];if(l(t))return Fv(t,null);if(c(t)&&Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);return Fv(e.map(e=>t[e]),e)}}if("function"==typeof e[e.length-1]){const t=e.pop();return Fv(e=1===e.length&&l(e[0])?e[0]:e,null).pipe(k(e=>t(...e)))}return Fv(e,null)}(Uv(e,t).map($v)).pipe(k(Hv))}}(qv(e)):null}function Gv(e,t){return null===e?[t]:Array.isArray(e)?[...e,t]:[e,t]}let Kv=(()=>{class e{constructor(){this._rawValidators=[],this._rawAsyncValidators=[],this._onDestroyCallbacks=[]}get value(){return this.control?this.control.value:null}get valid(){return this.control?this.control.valid:null}get invalid(){return this.control?this.control.invalid:null}get pending(){return this.control?this.control.pending:null}get disabled(){return this.control?this.control.disabled:null}get enabled(){return this.control?this.control.enabled:null}get errors(){return this.control?this.control.errors:null}get pristine(){return this.control?this.control.pristine:null}get dirty(){return this.control?this.control.dirty:null}get touched(){return this.control?this.control.touched:null}get status(){return this.control?this.control.status:null}get untouched(){return this.control?this.control.untouched:null}get statusChanges(){return this.control?this.control.statusChanges:null}get valueChanges(){return this.control?this.control.valueChanges:null}get path(){return null}_setValidators(e){this._rawValidators=e||[],this._composedValidatorFn=zv(this._rawValidators)}_setAsyncValidators(e){this._rawAsyncValidators=e||[],this._composedAsyncValidatorFn=Wv(this._rawAsyncValidators)}get validator(){return this._composedValidatorFn||null}get asyncValidator(){return this._composedAsyncValidatorFn||null}_registerOnDestroy(e){this._onDestroyCallbacks.push(e)}_invokeOnDestroyCallbacks(){this._onDestroyCallbacks.forEach(e=>e()),this._onDestroyCallbacks=[]}reset(e){this.control&&this.control.reset(e)}hasError(e,t){return!!this.control&&this.control.hasError(e,t)}getError(e,t){return this.control?this.control.getError(e,t):null}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e}),e})(),Yv=(()=>{class e extends Kv{get formDirective(){return null}get path(){return null}}return e.\u0275fac=function(){let t;return function(n){return(t||(t=$n(e)))(n||e)}}(),e.\u0275dir=Ke({type:e,features:[ur]}),e})();class Zv extends Kv{constructor(){super(...arguments),this._parent=null,this.name=null,this.valueAccessor=null}}class Qv{constructor(e){this._cd=e}is(e){var t,n;return!!(null===(n=null===(t=this._cd)||void 0===t?void 0:t.control)||void 0===n?void 0:n[e])}}let Jv=(()=>{class e extends Qv{constructor(e){super(e)}}return e.\u0275fac=function(t){return new(t||e)(Ar(Zv,2))},e.\u0275dir=Ke({type:e,selectors:[["","formControlName",""],["","ngModel",""],["","formControl",""]],hostVars:14,hostBindings:function(e,t){2&e&&ea("ng-untouched",t.is("untouched"))("ng-touched",t.is("touched"))("ng-pristine",t.is("pristine"))("ng-dirty",t.is("dirty"))("ng-valid",t.is("valid"))("ng-invalid",t.is("invalid"))("ng-pending",t.is("pending"))},features:[ur]}),e})(),Xv=(()=>{class e extends Qv{constructor(e){super(e)}}return e.\u0275fac=function(t){return new(t||e)(Ar(Yv,10))},e.\u0275dir=Ke({type:e,selectors:[["","formGroupName",""],["","formArrayName",""],["","ngModelGroup",""],["","formGroup",""],["form",3,"ngNoForm",""],["","ngForm",""]],hostVars:14,hostBindings:function(e,t){2&e&&ea("ng-untouched",t.is("untouched"))("ng-touched",t.is("touched"))("ng-pristine",t.is("pristine"))("ng-dirty",t.is("dirty"))("ng-valid",t.is("valid"))("ng-invalid",t.is("invalid"))("ng-pending",t.is("pending"))},features:[ur]}),e})();function eb(e,t){nb(e,t),t.valueAccessor.writeValue(e.value),function(e,t){t.valueAccessor.registerOnChange(n=>{e._pendingValue=n,e._pendingChange=!0,e._pendingDirty=!0,"change"===e.updateOn&&ib(e,t)})}(e,t),function(e,t){const n=(e,n)=>{t.valueAccessor.writeValue(e),n&&t.viewToModelUpdate(e)};e.registerOnChange(n),t._registerOnDestroy(()=>{e._unregisterOnChange(n)})}(e,t),function(e,t){t.valueAccessor.registerOnTouched(()=>{e._pendingTouched=!0,"blur"===e.updateOn&&e._pendingChange&&ib(e,t),"submit"!==e.updateOn&&e.markAsTouched()})}(e,t),function(e,t){if(t.valueAccessor.setDisabledState){const n=e=>{t.valueAccessor.setDisabledState(e)};e.registerOnDisabledChange(n),t._registerOnDestroy(()=>{e._unregisterOnDisabledChange(n)})}}(e,t)}function tb(e,t){e.forEach(e=>{e.registerOnValidatorChange&&e.registerOnValidatorChange(t)})}function nb(e,t){const n=function(e){return e._rawValidators}(e);null!==t.validator?e.setValidators(Gv(n,t.validator)):"function"==typeof n&&e.setValidators([n]);const i=function(e){return e._rawAsyncValidators}(e);null!==t.asyncValidator?e.setAsyncValidators(Gv(i,t.asyncValidator)):"function"==typeof i&&e.setAsyncValidators([i]);const s=()=>e.updateValueAndValidity();tb(t._rawValidators,s),tb(t._rawAsyncValidators,s)}function ib(e,t){e._pendingDirty&&e.markAsDirty(),e.setValue(e._pendingValue,{emitModelToViewChange:!1}),t.viewToModelUpdate(e._pendingValue),e._pendingChange=!1}function sb(e,t){const n=e.indexOf(t);n>-1&&e.splice(n,1)}const ob="VALID",rb="INVALID",ab="PENDING",lb="DISABLED";function cb(e){return(pb(e)?e.validators:e)||null}function ub(e){return Array.isArray(e)?zv(e):e||null}function hb(e,t){return(pb(t)?t.asyncValidators:e)||null}function db(e){return Array.isArray(e)?Wv(e):e||null}function pb(e){return null!=e&&!Array.isArray(e)&&"object"==typeof e}class fb{constructor(e,t){this._hasOwnPendingAsyncValidator=!1,this._onCollectionChange=()=>{},this._parent=null,this.pristine=!0,this.touched=!1,this._onDisabledChange=[],this._rawValidators=e,this._rawAsyncValidators=t,this._composedValidatorFn=ub(this._rawValidators),this._composedAsyncValidatorFn=db(this._rawAsyncValidators)}get validator(){return this._composedValidatorFn}set validator(e){this._rawValidators=this._composedValidatorFn=e}get asyncValidator(){return this._composedAsyncValidatorFn}set asyncValidator(e){this._rawAsyncValidators=this._composedAsyncValidatorFn=e}get parent(){return this._parent}get valid(){return this.status===ob}get invalid(){return this.status===rb}get pending(){return this.status==ab}get disabled(){return this.status===lb}get enabled(){return this.status!==lb}get dirty(){return!this.pristine}get untouched(){return!this.touched}get updateOn(){return this._updateOn?this._updateOn:this.parent?this.parent.updateOn:"change"}setValidators(e){this._rawValidators=e,this._composedValidatorFn=ub(e)}setAsyncValidators(e){this._rawAsyncValidators=e,this._composedAsyncValidatorFn=db(e)}clearValidators(){this.validator=null}clearAsyncValidators(){this.asyncValidator=null}markAsTouched(e={}){this.touched=!0,this._parent&&!e.onlySelf&&this._parent.markAsTouched(e)}markAllAsTouched(){this.markAsTouched({onlySelf:!0}),this._forEachChild(e=>e.markAllAsTouched())}markAsUntouched(e={}){this.touched=!1,this._pendingTouched=!1,this._forEachChild(e=>{e.markAsUntouched({onlySelf:!0})}),this._parent&&!e.onlySelf&&this._parent._updateTouched(e)}markAsDirty(e={}){this.pristine=!1,this._parent&&!e.onlySelf&&this._parent.markAsDirty(e)}markAsPristine(e={}){this.pristine=!0,this._pendingDirty=!1,this._forEachChild(e=>{e.markAsPristine({onlySelf:!0})}),this._parent&&!e.onlySelf&&this._parent._updatePristine(e)}markAsPending(e={}){this.status=ab,!1!==e.emitEvent&&this.statusChanges.emit(this.status),this._parent&&!e.onlySelf&&this._parent.markAsPending(e)}disable(e={}){const t=this._parentMarkedDirty(e.onlySelf);this.status=lb,this.errors=null,this._forEachChild(t=>{t.disable(Object.assign(Object.assign({},e),{onlySelf:!0}))}),this._updateValue(),!1!==e.emitEvent&&(this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._updateAncestors(Object.assign(Object.assign({},e),{skipPristineCheck:t})),this._onDisabledChange.forEach(e=>e(!0))}enable(e={}){const t=this._parentMarkedDirty(e.onlySelf);this.status=ob,this._forEachChild(t=>{t.enable(Object.assign(Object.assign({},e),{onlySelf:!0}))}),this.updateValueAndValidity({onlySelf:!0,emitEvent:e.emitEvent}),this._updateAncestors(Object.assign(Object.assign({},e),{skipPristineCheck:t})),this._onDisabledChange.forEach(e=>e(!1))}_updateAncestors(e){this._parent&&!e.onlySelf&&(this._parent.updateValueAndValidity(e),e.skipPristineCheck||this._parent._updatePristine(),this._parent._updateTouched())}setParent(e){this._parent=e}updateValueAndValidity(e={}){this._setInitialStatus(),this._updateValue(),this.enabled&&(this._cancelExistingSubscription(),this.errors=this._runValidator(),this.status=this._calculateStatus(),this.status!==ob&&this.status!==ab||this._runAsyncValidator(e.emitEvent)),!1!==e.emitEvent&&(this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._parent&&!e.onlySelf&&this._parent.updateValueAndValidity(e)}_updateTreeValidity(e={emitEvent:!0}){this._forEachChild(t=>t._updateTreeValidity(e)),this.updateValueAndValidity({onlySelf:!0,emitEvent:e.emitEvent})}_setInitialStatus(){this.status=this._allControlsDisabled()?lb:ob}_runValidator(){return this.validator?this.validator(this):null}_runAsyncValidator(e){if(this.asyncValidator){this.status=ab,this._hasOwnPendingAsyncValidator=!0;const t=$v(this.asyncValidator(this));this._asyncValidationSubscription=t.subscribe(t=>{this._hasOwnPendingAsyncValidator=!1,this.setErrors(t,{emitEvent:e})})}}_cancelExistingSubscription(){this._asyncValidationSubscription&&(this._asyncValidationSubscription.unsubscribe(),this._hasOwnPendingAsyncValidator=!1)}setErrors(e,t={}){this.errors=e,this._updateControlsErrors(!1!==t.emitEvent)}get(e){return function(e,t,n){if(null==t)return null;if(Array.isArray(t)||(t=t.split(".")),Array.isArray(t)&&0===t.length)return null;let i=e;return t.forEach(e=>{i=i instanceof mb?i.controls.hasOwnProperty(e)?i.controls[e]:null:i instanceof vb&&i.at(e)||null}),i}(this,e)}getError(e,t){const n=t?this.get(t):this;return n&&n.errors?n.errors[e]:null}hasError(e,t){return!!this.getError(e,t)}get root(){let e=this;for(;e._parent;)e=e._parent;return e}_updateControlsErrors(e){this.status=this._calculateStatus(),e&&this.statusChanges.emit(this.status),this._parent&&this._parent._updateControlsErrors(e)}_initObservables(){this.valueChanges=new ec,this.statusChanges=new ec}_calculateStatus(){return this._allControlsDisabled()?lb:this.errors?rb:this._hasOwnPendingAsyncValidator||this._anyControlsHaveStatus(ab)?ab:this._anyControlsHaveStatus(rb)?rb:ob}_anyControlsHaveStatus(e){return this._anyControls(t=>t.status===e)}_anyControlsDirty(){return this._anyControls(e=>e.dirty)}_anyControlsTouched(){return this._anyControls(e=>e.touched)}_updatePristine(e={}){this.pristine=!this._anyControlsDirty(),this._parent&&!e.onlySelf&&this._parent._updatePristine(e)}_updateTouched(e={}){this.touched=this._anyControlsTouched(),this._parent&&!e.onlySelf&&this._parent._updateTouched(e)}_isBoxedValue(e){return"object"==typeof e&&null!==e&&2===Object.keys(e).length&&"value"in e&&"disabled"in e}_registerOnCollectionChange(e){this._onCollectionChange=e}_setUpdateStrategy(e){pb(e)&&null!=e.updateOn&&(this._updateOn=e.updateOn)}_parentMarkedDirty(e){return!e&&!(!this._parent||!this._parent.dirty)&&!this._parent._anyControlsDirty()}}class gb extends fb{constructor(e=null,t,n){super(cb(t),hb(n,t)),this._onChange=[],this._applyFormState(e),this._setUpdateStrategy(t),this._initObservables(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!n})}setValue(e,t={}){this.value=this._pendingValue=e,this._onChange.length&&!1!==t.emitModelToViewChange&&this._onChange.forEach(e=>e(this.value,!1!==t.emitViewToModelChange)),this.updateValueAndValidity(t)}patchValue(e,t={}){this.setValue(e,t)}reset(e=null,t={}){this._applyFormState(e),this.markAsPristine(t),this.markAsUntouched(t),this.setValue(this.value,t),this._pendingChange=!1}_updateValue(){}_anyControls(e){return!1}_allControlsDisabled(){return this.disabled}registerOnChange(e){this._onChange.push(e)}_unregisterOnChange(e){sb(this._onChange,e)}registerOnDisabledChange(e){this._onDisabledChange.push(e)}_unregisterOnDisabledChange(e){sb(this._onDisabledChange,e)}_forEachChild(e){}_syncPendingControls(){return!("submit"!==this.updateOn||(this._pendingDirty&&this.markAsDirty(),this._pendingTouched&&this.markAsTouched(),!this._pendingChange)||(this.setValue(this._pendingValue,{onlySelf:!0,emitModelToViewChange:!1}),0))}_applyFormState(e){this._isBoxedValue(e)?(this.value=this._pendingValue=e.value,e.disabled?this.disable({onlySelf:!0,emitEvent:!1}):this.enable({onlySelf:!0,emitEvent:!1})):this.value=this._pendingValue=e}}class mb extends fb{constructor(e,t,n){super(cb(t),hb(n,t)),this.controls=e,this._initObservables(),this._setUpdateStrategy(t),this._setUpControls(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!n})}registerControl(e,t){return this.controls[e]?this.controls[e]:(this.controls[e]=t,t.setParent(this),t._registerOnCollectionChange(this._onCollectionChange),t)}addControl(e,t,n={}){this.registerControl(e,t),this.updateValueAndValidity({emitEvent:n.emitEvent}),this._onCollectionChange()}removeControl(e,t={}){this.controls[e]&&this.controls[e]._registerOnCollectionChange(()=>{}),delete this.controls[e],this.updateValueAndValidity({emitEvent:t.emitEvent}),this._onCollectionChange()}setControl(e,t,n={}){this.controls[e]&&this.controls[e]._registerOnCollectionChange(()=>{}),delete this.controls[e],t&&this.registerControl(e,t),this.updateValueAndValidity({emitEvent:n.emitEvent}),this._onCollectionChange()}contains(e){return this.controls.hasOwnProperty(e)&&this.controls[e].enabled}setValue(e,t={}){this._checkAllValuesPresent(e),Object.keys(e).forEach(n=>{this._throwIfControlMissing(n),this.controls[n].setValue(e[n],{onlySelf:!0,emitEvent:t.emitEvent})}),this.updateValueAndValidity(t)}patchValue(e,t={}){null!=e&&(Object.keys(e).forEach(n=>{this.controls[n]&&this.controls[n].patchValue(e[n],{onlySelf:!0,emitEvent:t.emitEvent})}),this.updateValueAndValidity(t))}reset(e={},t={}){this._forEachChild((n,i)=>{n.reset(e[i],{onlySelf:!0,emitEvent:t.emitEvent})}),this._updatePristine(t),this._updateTouched(t),this.updateValueAndValidity(t)}getRawValue(){return this._reduceChildren({},(e,t,n)=>(e[n]=t instanceof gb?t.value:t.getRawValue(),e))}_syncPendingControls(){let e=this._reduceChildren(!1,(e,t)=>!!t._syncPendingControls()||e);return e&&this.updateValueAndValidity({onlySelf:!0}),e}_throwIfControlMissing(e){if(!Object.keys(this.controls).length)throw new Error("\n        There are no form controls registered with this group yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ");if(!this.controls[e])throw new Error(`Cannot find form control with name: ${e}.`)}_forEachChild(e){Object.keys(this.controls).forEach(t=>{const n=this.controls[t];n&&e(n,t)})}_setUpControls(){this._forEachChild(e=>{e.setParent(this),e._registerOnCollectionChange(this._onCollectionChange)})}_updateValue(){this.value=this._reduceValue()}_anyControls(e){for(const t of Object.keys(this.controls)){const n=this.controls[t];if(this.contains(t)&&e(n))return!0}return!1}_reduceValue(){return this._reduceChildren({},(e,t,n)=>((t.enabled||this.disabled)&&(e[n]=t.value),e))}_reduceChildren(e,t){let n=e;return this._forEachChild((e,i)=>{n=t(n,e,i)}),n}_allControlsDisabled(){for(const e of Object.keys(this.controls))if(this.controls[e].enabled)return!1;return Object.keys(this.controls).length>0||this.disabled}_checkAllValuesPresent(e){this._forEachChild((t,n)=>{if(void 0===e[n])throw new Error(`Must supply a value for form control with name: '${n}'.`)})}}class vb extends fb{constructor(e,t,n){super(cb(t),hb(n,t)),this.controls=e,this._initObservables(),this._setUpdateStrategy(t),this._setUpControls(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!n})}at(e){return this.controls[e]}push(e,t={}){this.controls.push(e),this._registerControl(e),this.updateValueAndValidity({emitEvent:t.emitEvent}),this._onCollectionChange()}insert(e,t,n={}){this.controls.splice(e,0,t),this._registerControl(t),this.updateValueAndValidity({emitEvent:n.emitEvent})}removeAt(e,t={}){this.controls[e]&&this.controls[e]._registerOnCollectionChange(()=>{}),this.controls.splice(e,1),this.updateValueAndValidity({emitEvent:t.emitEvent})}setControl(e,t,n={}){this.controls[e]&&this.controls[e]._registerOnCollectionChange(()=>{}),this.controls.splice(e,1),t&&(this.controls.splice(e,0,t),this._registerControl(t)),this.updateValueAndValidity({emitEvent:n.emitEvent}),this._onCollectionChange()}get length(){return this.controls.length}setValue(e,t={}){this._checkAllValuesPresent(e),e.forEach((e,n)=>{this._throwIfControlMissing(n),this.at(n).setValue(e,{onlySelf:!0,emitEvent:t.emitEvent})}),this.updateValueAndValidity(t)}patchValue(e,t={}){null!=e&&(e.forEach((e,n)=>{this.at(n)&&this.at(n).patchValue(e,{onlySelf:!0,emitEvent:t.emitEvent})}),this.updateValueAndValidity(t))}reset(e=[],t={}){this._forEachChild((n,i)=>{n.reset(e[i],{onlySelf:!0,emitEvent:t.emitEvent})}),this._updatePristine(t),this._updateTouched(t),this.updateValueAndValidity(t)}getRawValue(){return this.controls.map(e=>e instanceof gb?e.value:e.getRawValue())}clear(e={}){this.controls.length<1||(this._forEachChild(e=>e._registerOnCollectionChange(()=>{})),this.controls.splice(0),this.updateValueAndValidity({emitEvent:e.emitEvent}))}_syncPendingControls(){let e=this.controls.reduce((e,t)=>!!t._syncPendingControls()||e,!1);return e&&this.updateValueAndValidity({onlySelf:!0}),e}_throwIfControlMissing(e){if(!this.controls.length)throw new Error("\n        There are no form controls registered with this array yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ");if(!this.at(e))throw new Error(`Cannot find form control at index ${e}`)}_forEachChild(e){this.controls.forEach((t,n)=>{e(t,n)})}_updateValue(){this.value=this.controls.filter(e=>e.enabled||this.disabled).map(e=>e.value)}_anyControls(e){return this.controls.some(t=>t.enabled&&e(t))}_setUpControls(){this._forEachChild(e=>this._registerControl(e))}_checkAllValuesPresent(e){this._forEachChild((t,n)=>{if(void 0===e[n])throw new Error(`Must supply a value for form control at index: ${n}.`)})}_allControlsDisabled(){for(const e of this.controls)if(e.enabled)return!1;return this.controls.length>0||this.disabled}_registerControl(e){e.setParent(this),e._registerOnCollectionChange(this._onCollectionChange)}}const bb={provide:Yv,useExisting:se(()=>Cb)},yb=(()=>Promise.resolve(null))();let Cb=(()=>{class e extends Yv{constructor(e,t){super(),this.submitted=!1,this._directives=[],this.ngSubmit=new ec,this.form=new mb({},zv(e),Wv(t))}ngAfterViewInit(){this._setUpdateStrategy()}get formDirective(){return this}get control(){return this.form}get path(){return[]}get controls(){return this.form.controls}addControl(e){yb.then(()=>{const t=this._findContainer(e.path);e.control=t.registerControl(e.name,e.control),eb(e.control,e),e.control.updateValueAndValidity({emitEvent:!1}),this._directives.push(e)})}getControl(e){return this.form.get(e.path)}removeControl(e){yb.then(()=>{const t=this._findContainer(e.path);t&&t.removeControl(e.name),sb(this._directives,e)})}addFormGroup(e){yb.then(()=>{const t=this._findContainer(e.path),n=new mb({});(function(e,t){nb(e,t)})(n,e),t.registerControl(e.name,n),n.updateValueAndValidity({emitEvent:!1})})}removeFormGroup(e){yb.then(()=>{const t=this._findContainer(e.path);t&&t.removeControl(e.name)})}getFormGroup(e){return this.form.get(e.path)}updateModel(e,t){yb.then(()=>{this.form.get(e.path).setValue(t)})}setValue(e){this.control.setValue(e)}onSubmit(e){return this.submitted=!0,t=this._directives,this.form._syncPendingControls(),t.forEach(e=>{const t=e.control;"submit"===t.updateOn&&t._pendingChange&&(e.viewToModelUpdate(t._pendingValue),t._pendingChange=!1)}),this.ngSubmit.emit(e),!1;var t}onReset(){this.resetForm()}resetForm(e){this.form.reset(e),this.submitted=!1}_setUpdateStrategy(){this.options&&null!=this.options.updateOn&&(this.form._updateOn=this.options.updateOn)}_findContainer(e){return e.pop(),e.length?this.form.get(e):this.form}}return e.\u0275fac=function(t){return new(t||e)(Ar(jv,10),Ar(Nv,10))},e.\u0275dir=Ke({type:e,selectors:[["form",3,"ngNoForm","",3,"formGroup",""],["ng-form"],["","ngForm",""]],hostBindings:function(e,t){1&e&&Br("submit",function(e){return t.onSubmit(e)})("reset",function(){return t.onReset()})},inputs:{options:["ngFormOptions","options"]},outputs:{ngSubmit:"ngSubmit"},exportAs:["ngForm"],features:[La([bb]),ur]}),e})();const wb={provide:Zv,useExisting:se(()=>Db)},_b=(()=>Promise.resolve(null))();let Db=(()=>{class e extends Zv{constructor(e,t,n,i){super(),this.control=new gb,this._registered=!1,this.update=new ec,this._parent=e,this._setValidators(t),this._setAsyncValidators(n),this.valueAccessor=function(e,t){if(!t)return null;let n,i,s;return Array.isArray(t),t.forEach(e=>{e.constructor===Rv?n=e:Object.getPrototypeOf(e.constructor)===Mv?i=e:s=e}),s||i||n||null}(0,i)}ngOnChanges(e){this._checkForErrors(),this._registered||this._setUpControl(),"isDisabled"in e&&this._updateDisabled(e),function(e,t){if(!e.hasOwnProperty("model"))return!1;const n=e.model;return!!n.isFirstChange()||!Object.is(t,n.currentValue)}(e,this.viewModel)&&(this._updateValue(this.model),this.viewModel=this.model)}ngOnDestroy(){this.formDirective&&this.formDirective.removeControl(this)}get path(){return this._parent?[...this._parent.path,this.name]:[this.name]}get formDirective(){return this._parent?this._parent.formDirective:null}viewToModelUpdate(e){this.viewModel=e,this.update.emit(e)}_setUpControl(){this._setUpdateStrategy(),this._isStandalone()?this._setUpStandalone():this.formDirective.addControl(this),this._registered=!0}_setUpdateStrategy(){this.options&&null!=this.options.updateOn&&(this.control._updateOn=this.options.updateOn)}_isStandalone(){return!this._parent||!(!this.options||!this.options.standalone)}_setUpStandalone(){eb(this.control,this),this.control.updateValueAndValidity({emitEvent:!1})}_checkForErrors(){this._isStandalone()||this._checkParentType(),this._checkName()}_checkParentType(){}_checkName(){this.options&&this.options.name&&(this.name=this.options.name),this._isStandalone()}_updateValue(e){_b.then(()=>{this.control.setValue(e,{emitViewToModelChange:!1})})}_updateDisabled(e){const t=e.isDisabled.currentValue,n=""===t||t&&"false"!==t;_b.then(()=>{n&&!this.control.disabled?this.control.disable():!n&&this.control.disabled&&this.control.enable()})}}return e.\u0275fac=function(t){return new(t||e)(Ar(Yv,9),Ar(jv,10),Ar(Nv,10),Ar(Pv,10))},e.\u0275dir=Ke({type:e,selectors:[["","ngModel","",3,"formControlName","",3,"formControl",""]],inputs:{name:"name",isDisabled:["disabled","isDisabled"],model:["ngModel","model"],options:["ngModelOptions","options"]},outputs:{update:"ngModelChange"},exportAs:["ngModel"],features:[La([wb]),ur,lt]}),e})(),Sb=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,selectors:[["form",3,"ngNoForm","",3,"ngNativeValidate",""]],hostAttrs:["novalidate",""]}),e})(),Eb=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({}),e})();const kb={provide:Pv,useExisting:se(()=>Ab),multi:!0};function xb(e,t){return null==e?`${t}`:(t&&"object"==typeof t&&(t="Object"),`${e}: ${t}`.slice(0,50))}let Ab=(()=>{class e extends Mv{constructor(){super(...arguments),this._optionMap=new Map,this._idCounter=0,this._compareWith=Object.is}set compareWith(e){this._compareWith=e}writeValue(e){this.value=e;const t=this._getOptionId(e);null==t&&this.setProperty("selectedIndex",-1);const n=xb(t,e);this.setProperty("value",n)}registerOnChange(e){this.onChange=t=>{this.value=this._getOptionValue(t),e(this.value)}}_registerOption(){return(this._idCounter++).toString()}_getOptionId(e){for(const t of Array.from(this._optionMap.keys()))if(this._compareWith(this._optionMap.get(t),e))return t;return null}_getOptionValue(e){const t=function(e){return e.split(":")[0]}(e);return this._optionMap.has(t)?this._optionMap.get(t):e}}return e.\u0275fac=function(){let t;return function(n){return(t||(t=$n(e)))(n||e)}}(),e.\u0275dir=Ke({type:e,selectors:[["select","formControlName","",3,"multiple",""],["select","formControl","",3,"multiple",""],["select","ngModel","",3,"multiple",""]],hostBindings:function(e,t){1&e&&Br("change",function(e){return t.onChange(e.target.value)})("blur",function(){return t.onTouched()})},inputs:{compareWith:"compareWith"},features:[La([kb]),ur]}),e})(),Ob=(()=>{class e{constructor(e,t,n){this._element=e,this._renderer=t,this._select=n,this._select&&(this.id=this._select._registerOption())}set ngValue(e){null!=this._select&&(this._select._optionMap.set(this.id,e),this._setElementValue(xb(this.id,e)),this._select.writeValue(this._select.value))}set value(e){this._setElementValue(e),this._select&&this._select.writeValue(this._select.value)}_setElementValue(e){this._renderer.setProperty(this._element.nativeElement,"value",e)}ngOnDestroy(){this._select&&(this._select._optionMap.delete(this.id),this._select.writeValue(this._select.value))}}return e.\u0275fac=function(t){return new(t||e)(Ar(Ua),Ar(Wa),Ar(Ab,9))},e.\u0275dir=Ke({type:e,selectors:[["option"]],inputs:{ngValue:"ngValue",value:"value"}}),e})();const Tb={provide:Pv,useExisting:se(()=>Ib),multi:!0};function Fb(e,t){return null==e?`${t}`:("string"==typeof t&&(t=`'${t}'`),t&&"object"==typeof t&&(t="Object"),`${e}: ${t}`.slice(0,50))}let Ib=(()=>{class e extends Mv{constructor(){super(...arguments),this._optionMap=new Map,this._idCounter=0,this._compareWith=Object.is}set compareWith(e){this._compareWith=e}writeValue(e){let t;if(this.value=e,Array.isArray(e)){const n=e.map(e=>this._getOptionId(e));t=(e,t)=>{e._setSelected(n.indexOf(t.toString())>-1)}}else t=(e,t)=>{e._setSelected(!1)};this._optionMap.forEach(t)}registerOnChange(e){this.onChange=t=>{const n=[];if(void 0!==t.selectedOptions){const e=t.selectedOptions;for(let t=0;t<e.length;t++){const i=e.item(t),s=this._getOptionValue(i.value);n.push(s)}}else{const e=t.options;for(let t=0;t<e.length;t++){const i=e.item(t);if(i.selected){const e=this._getOptionValue(i.value);n.push(e)}}}this.value=n,e(n)}}_registerOption(e){const t=(this._idCounter++).toString();return this._optionMap.set(t,e),t}_getOptionId(e){for(const t of Array.from(this._optionMap.keys()))if(this._compareWith(this._optionMap.get(t)._value,e))return t;return null}_getOptionValue(e){const t=function(e){return e.split(":")[0]}(e);return this._optionMap.has(t)?this._optionMap.get(t)._value:e}}return e.\u0275fac=function(){let t;return function(n){return(t||(t=$n(e)))(n||e)}}(),e.\u0275dir=Ke({type:e,selectors:[["select","multiple","","formControlName",""],["select","multiple","","formControl",""],["select","multiple","","ngModel",""]],hostBindings:function(e,t){1&e&&Br("change",function(e){return t.onChange(e.target)})("blur",function(){return t.onTouched()})},inputs:{compareWith:"compareWith"},features:[La([Tb]),ur]}),e})(),Mb=(()=>{class e{constructor(e,t,n){this._element=e,this._renderer=t,this._select=n,this._select&&(this.id=this._select._registerOption(this))}set ngValue(e){null!=this._select&&(this._value=e,this._setElementValue(Fb(this.id,e)),this._select.writeValue(this._select.value))}set value(e){this._select?(this._value=e,this._setElementValue(Fb(this.id,e)),this._select.writeValue(this._select.value)):this._setElementValue(e)}_setElementValue(e){this._renderer.setProperty(this._element.nativeElement,"value",e)}_setSelected(e){this._renderer.setProperty(this._element.nativeElement,"selected",e)}ngOnDestroy(){this._select&&(this._select._optionMap.delete(this.id),this._select.writeValue(this._select.value))}}return e.\u0275fac=function(t){return new(t||e)(Ar(Ua),Ar(Wa),Ar(Ib,9))},e.\u0275dir=Ke({type:e,selectors:[["option"]],inputs:{ngValue:"ngValue",value:"value"}}),e})(),Pb=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Eb]]}),e})(),Vb=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[Pb]}),e})();function Lb(e,t=op){return n=>n.lift(new Rb(e,t))}class Rb{constructor(e,t){this.dueTime=e,this.scheduler=t}call(e,t){return t.subscribe(new jb(e,this.dueTime,this.scheduler))}}class jb extends f{constructor(e,t,n){super(e),this.dueTime=t,this.scheduler=n,this.debouncedSubscription=null,this.lastValue=null,this.hasValue=!1}_next(e){this.clearDebounce(),this.lastValue=e,this.hasValue=!0,this.add(this.debouncedSubscription=this.scheduler.schedule(Nb,this.dueTime,this))}_complete(){this.debouncedNext(),this.destination.complete()}debouncedNext(){if(this.clearDebounce(),this.hasValue){const{lastValue:e}=this;this.lastValue=null,this.hasValue=!1,this.destination.next(e)}}clearDebounce(){const e=this.debouncedSubscription;null!==e&&(this.remove(e),e.unsubscribe(),this.debouncedSubscription=null)}}function Nb(e){e.debouncedNext()}function Bb(e,t){return n=>n.lift(new $b(e,t))}class $b{constructor(e,t){this.compare=e,this.keySelector=t}call(e,t){return t.subscribe(new Hb(e,this.compare,this.keySelector))}}class Hb extends f{constructor(e,t,n){super(e),this.keySelector=n,this.hasKey=!1,"function"==typeof t&&(this.compare=t)}compare(e,t){return e===t}_next(e){let t;try{const{keySelector:n}=this;t=n?n(e):e}catch(i){return this.destination.error(i)}let n=!1;if(this.hasKey)try{const{compare:e}=this;n=e(this.key,t)}catch(i){return this.destination.error(i)}else this.hasKey=!0;n||(this.key=t,this.destination.next(e))}}class Ub{constructor(e,t){this.predicate=e,this.inclusive=t}call(e,t){return t.subscribe(new qb(e,this.predicate,this.inclusive))}}class qb extends f{constructor(e,t,n){super(e),this.predicate=t,this.inclusive=n,this.index=0}_next(e){const t=this.destination;let n;try{n=this.predicate(e,this.index++)}catch(i){return void t.error(i)}this.nextOrComplete(e,n)}nextOrComplete(e,t){const n=this.destination;Boolean(t)?n.next(e):(this.inclusive&&n.next(e),n.complete())}}function zb(e,t){1&e&&Wr(0)}const Wb=["*"];function Gb(e,t){1&e&&Lr(0)}function Kb(e,t){if(1&e){const e=Rr();Fr(0,"section",2),Fr(1,"po-accordion-item-header",3),Br("p-toggle",function(t){const n=It(e).$implicit;return Ur().headerToggle(t,n)}),Ir(),Fr(2,"po-accordion-item-body",4),kr(3,Gb,1,0,"ng-container",5),Ir(),Ir()}if(2&e){const e=t.$implicit;ea("po-accordion-item-active",e.expanded),Zs(1),Or("p-expanded",e.expanded)("p-label",e.label),Zs(1),Or("p-expanded",e.expanded),Zs(1),Or("ngTemplateOutlet",e.templateRef)}}function Yb(e,t){1&e&&(Fr(0,"div",1),Fr(1,"div",2),Wr(2),Ir(),Ir()),2&e&&Or("@toggleBody",void 0)}function Zb(e,t){1&e&&Lr(0)}function Qb(e,t){1&e&&Mr(0,"i",2),2&e&&ta(Ur().class)}function Jb(e,t){if(1&e&&(Fr(0,"span",2),pa(1),Ir()),2&e){const e=Ur();Zs(1),fa(e.text)}}const Xb=["button"];function ey(e,t){1&e&&(Fr(0,"div",5),Mr(1,"po-loading-icon",6),Ir())}function ty(e,t){1&e&&Mr(0,"po-icon",7),2&e&&Or("p-icon",Ur().icon)}function ny(e,t){if(1&e&&(Fr(0,"span",8),pa(1),Ir()),2&e){const e=Ur();Zs(1),fa(e.label)}}function iy(e,t){1&e&&Lr(0)}function sy(e,t){1&e&&Lr(0)}function oy(e,t){1&e&&Lr(0)}const ry=function(){return{partType:"end"}};function ay(e,t){if(1&e&&(Pr(0),kr(1,oy,1,0,"ng-container",5),Vr()),2&e){Ur(2);const e=xr(6);Zs(1),Or("ngTemplateOutlet",e)("ngTemplateOutletContext",Hl(2,ry))}}const ly=function(){return{partType:"start"}};function cy(e,t){if(1&e&&(Fr(0,"div",4),kr(1,sy,1,0,"ng-container",5),kr(2,ay,2,3,"ng-container",6),Ir()),2&e){const e=Ur(),t=xr(6);Zs(1),Or("ngTemplateOutlet",t)("ngTemplateOutletContext",Hl(3,ly)),Zs(1),Or("ngIf",!e.isResponsive)}}function uy(e,t){}function hy(e,t){if(1&e&&(Fr(0,"div",7),kr(1,uy,0,0,"ng-template",8),Ir()),2&e){Ur();const e=xr(6);Zs(1),Or("ngTemplateOutlet",e)}}function dy(e,t){if(1&e){const e=Rr();Fr(0,"po-calendar-wrapper",9),Br("p-header-change",function(t){const n=It(e).partType;return Ur().onHeaderChange(t,n)})("p-select-date",function(t){const n=It(e).partType;return Ur().onSelectDate(t,n)}),Ir()}if(2&e){const e=t.partType,n=Ur();Or("p-value",n.getValue(e))("p-activate-date",n.getActivateDate(e))("p-locale",n.locale)("p-min-date",n.minDate)("p-max-date",n.maxDate)("p-part-type",e)("p-range",n.isRange)("p-responsive",n.isResponsive)("p-selected-value",n.value)}}function py(e,t){if(1&e){const e=Rr();Fr(0,"span",4),Br("click",function(){return It(e),Ur().previous.emit()}),Ir()}}function fy(e,t){if(1&e){const e=Rr();Fr(0,"span",5),Br("click",function(){return It(e),Ur().next.emit()}),Ir()}}function gy(e,t){if(1&e&&(Fr(0,"div",10),pa(1),Ir()),2&e){const e=t.$implicit;Zs(1),ga(" ",e," ")}}function my(e,t){if(1&e&&(Fr(0,"span",13),pa(1),Ir()),2&e){const e=Ur().$implicit;Or("ngClass",Ur(2).getDayForegroundColor(e)),Zs(1),ga(" ",e.getDate()," ")}}function vy(e,t){if(1&e){const e=Rr();Fr(0,"div",11),Br("click",function(){const t=It(e).$implicit;return Ur(2).onSelectDate(t)}),kr(1,my,2,2,"span",12),Ir()}if(2&e){const e=t.$implicit;Or("ngClass",Ur(2).getDayBackgroundColor(e)),Zs(1),Or("ngIf",0!==e)}}function by(e,t){if(1&e){const e=Rr();Pr(0),Fr(1,"po-calendar-header",2),Br("p-previous",function(){return It(e),Ur().onPreviousMonth()})("p-next",function(){return It(e),Ur().onNextMonth()}),Fr(2,"span",3),Br("click",function(){return It(e),Ur().selectDisplayMode("month")}),pa(3),Ir(),Fr(4,"span",4),Br("click",function(){return It(e),Ur().selectDisplayMode("year")}),pa(5),Ir(),Ir(),Fr(6,"div",5),Fr(7,"div",6),kr(8,gy,2,1,"div",7),Ir(),Fr(9,"div",8),kr(10,vy,2,2,"div",9),Ir(),Ir(),Vr()}if(2&e){const e=Ur();Zs(1),Or("p-hide-previous",e.isEndPart)("p-hide-next",e.isStartPart&&!e.responsive),Zs(2),fa(e.displayMonth),Zs(2),fa(e.displayYear),Zs(3),Or("ngForOf",e.displayWeekDays),Zs(2),Or("ngForOf",e.displayDays)}}function yy(e,t){if(1&e){const e=Rr();Fr(0,"div",17),Br("click",function(){const t=It(e).index,n=Ur(2);return n.onSelectMonth(n.displayYear,t)}),Fr(1,"span",13),pa(2),Ir(),Ir()}if(2&e){const e=t.$implicit,n=t.index,i=Ur(2);Or("ngClass",i.getBackgroundColor(n,i.displayMonthNumber)),Zs(1),Or("ngClass",i.getForegroundColor(n,i.displayMonthNumber)),Zs(1),ga(" ",e," ")}}function Cy(e,t){if(1&e){const e=Rr();Pr(0),Fr(1,"po-calendar-header",14),Br("p-previous",function(){return It(e),Ur().updateYear(-1)})("p-next",function(){return It(e),Ur().updateYear(1)}),Fr(2,"span",4),Br("click",function(){return It(e),Ur().selectDisplayMode("year")}),pa(3),Ir(),Ir(),Fr(4,"div",5),Fr(5,"div",6),Fr(6,"div",10),pa(7),Ir(),Ir(),Fr(8,"div",15),kr(9,yy,3,3,"div",16),Ir(),Ir(),Vr()}if(2&e){const e=Ur();Zs(3),ga(" ",e.displayYear," "),Zs(4),ga(" ",e.monthLabel," "),Zs(2),Or("ngForOf",e.displayMonths)}}function wy(e,t){if(1&e){const e=Rr();Fr(0,"div",20),Br("click",function(){const t=It(e).$implicit,n=Ur(2);return n.onSelectYear(t,n.displayMonthNumber)}),Fr(1,"span",13),pa(2),Ir(),Ir()}if(2&e){const e=t.$implicit,n=Ur(2);Or("ngClass",n.getBackgroundColor(e,n.currentYear)),Zs(1),Or("ngClass",n.getForegroundColor(e,n.currentYear)),Zs(1),ga(" ",e," ")}}function _y(e,t){if(1&e){const e=Rr();Pr(0),Fr(1,"po-calendar-header",14),Br("p-previous",function(){return It(e),Ur().updateYear(-10)})("p-next",function(){return It(e),Ur().updateYear(10)}),pa(2),Ir(),Fr(3,"div",5),Fr(4,"div",6),Fr(5,"div",10),pa(6),Ir(),Ir(),Fr(7,"div",18),kr(8,wy,3,3,"div",19),Ir(),Ir(),Vr()}if(2&e){const e=Ur();Zs(2),ma(" ",e.displayStartDecade," - ",e.displayFinalDecade," "),Zs(4),ga(" ",e.yearLabel," "),Zs(2),Or("ngForOf",e.displayDecade)}}function Dy(e,t){if(1&e){const e=Rr();Fr(0,"span",4),Br("click",function(){return It(e),Ur(2).close()})("keydown",function(t){return It(e),Ur(2).onKeyPress(t)}),Ir()}2&e&&ea("po-disclaimer-remove-danger","danger"===Ur(2).type)}function Sy(e,t){if(1&e&&(Fr(0,"div",1),Fr(1,"span",2),pa(2),Ir(),kr(3,Dy,1,2,"span",3),Ir()),2&e){const e=Ur();Zs(1),ea("po-disclaimer-label-danger","danger"===e.type),Zs(1),ga(" ",e.getLabel()," "),Zs(1),Or("ngIf",!1===e.hideClose)}}function Ey(e,t){if(1&e){const e=Rr();Fr(0,"po-disclaimer-remove",5),Br("keydown",function(t){return It(e),Ur(2).onKeyPress(t)})("p-remove-all-action",function(){return It(e),Ur(2).removeAllItems()}),Ir()}2&e&&Or("p-label",Ur(2).literals.removeAll)}function ky(e,t){if(1&e){const e=Rr();Fr(0,"po-disclaimer",6),Br("p-close-action",function(){const t=It(e).$implicit;return Ur(2).onCloseAction(t)}),Ir()}if(2&e){const e=t.$implicit;Or("p-hide-close",e.hideClose)("p-label",e.label)("p-property",e.property)("p-value",e.value)}}function xy(e,t){if(1&e&&(Fr(0,"div",1),Fr(1,"div",2),pa(2),Ir(),kr(3,Ey,1,1,"po-disclaimer-remove",3),kr(4,ky,1,4,"po-disclaimer",4),Ir()),2&e){const e=Ur();Zs(2),fa(e.title),Zs(1),Or("ngIf",e.isRemoveAll()),Zs(1),Or("ngForOf",e.disclaimers)}}function Ay(e,t){if(1&e&&(Fr(0,"div",2),pa(1),Ir()),2&e){const e=Ur();Zs(1),fa(e.label)}}const Oy=["popupRef"];function Ty(e,t){1&e&&Mr(0,"div"),2&e&&va("po-popup-arrow po-arrow-",Ur(2).arrowDirection,"")}function Fy(e,t){1&e&&Mr(0,"po-icon",9),2&e&&Or("p-icon",Ur(2).$implicit.icon)}function Iy(e,t){if(1&e){const e=Rr();Fr(0,"div",7),Br("click",function(){It(e);const t=Ur().$implicit;return Ur(2).onActionClick(t)}),kr(1,Fy,1,1,"po-icon",8),pa(2),Ir()}if(2&e){const e=Ur(),t=e.$implicit,n=e.index,i=Ur(2);ea("po-popup-item-default","danger"!==t.type)("po-popup-item-danger","danger"===t.type)("po-popup-item-disabled",i.returnBooleanValue(t,"disabled"))("po-popup-item-separator",t.separator&&0!==n)("po-popup-item-selected",t.selected),Zs(1),Or("ngIf",t.icon),Zs(1),ga(" ",t.label," ")}}function My(e,t){if(1&e&&(Pr(0),kr(1,Iy,3,12,"div",6),Vr()),2&e){const e=t.$implicit;Zs(1),Or("ngIf",!1!==e.visible)}}function Py(e,t){if(1&e&&(Fr(0,"div",1,2),kr(2,Ty,1,3,"div",3),Wr(3),Fr(4,"div",4),kr(5,My,2,1,"ng-container",5),Ir(),Ir()),2&e){const e=Ur();Zs(2),Or("ngIf",!e.hideArrow),Zs(3),Or("ngForOf",e.actions)}}const Vy=[[["","p-popup-header-template",""]]],Ly=["[p-popup-header-template]"];function Ry(e,t){if(1&e&&(Fr(0,"span",2),Mr(1,"span",3),pa(2),Ir()),2&e){const e=Ur();Zs(2),ga(" ",e.errorPattern," ")}}function jy(e,t){if(1&e&&(Fr(0,"span",5),pa(1),Ir()),2&e){const e=Ur();Zs(1),fa(e.literals.optional)}}function Ny(e,t){if(1&e&&(Fr(0,"div",6),pa(1),Ir()),2&e){const e=Ur();Zs(1),fa(e.help)}}const By=["checkboxLabel"];function $y(e,t){if(1&e){const e=Rr();Fr(0,"div"),Mr(1,"input",4),Fr(2,"label",5,6),Br("click",function(){const t=It(e).$implicit;return Ur().checkOption(t)})("keydown",function(t){const n=It(e).$implicit;return Ur().onKeyDown(t,n)}),pa(4),Ir(),Ir()}if(2&e){const e=t.$implicit,n=Ur();ba("po-checkbox-group-item po-md-",n.mdColumns," po-lg-",n.columns,""),ea("po-checkbox-group-item-disabled",e.disabled||n.disabled),Zs(1),ea("po-checkbox-group-input-checked",n.checkedOptions[e.value])("po-checkbox-group-input-indeterminate",null===n.checkedOptions[e.value]),Or("checked",e.value)("disabled",e.disabled||n.disabled)("id",e.id)("required",n.required)("value",e.value),Zs(1),ea("po-clickable",!e.disabled&&!n.disabled),Or("for",e.id)("tabindex",e.disabled||n.disabled?-1:0),Zs(2),ga(" ",e.label," ")}}function Hy(e,t){if(1&e){const e=Rr();Fr(0,"span",1),Br("click",function(){return It(e),Ur().clear()}),Ir()}}const Uy=["calendar"],qy=["dialogPicker"],zy=["iconDatepicker"],Wy=["inp"];function Gy(e,t){if(1&e){const e=Rr();Fr(0,"po-clean",13),Br("p-change-event",function(){return It(e),Ur().clear()}),Ir()}2&e&&Or("p-element-ref",Ur().inputEl)}function Ky(e,t){1&e&&Mr(0,"div",14)}const Yy=["modalContent"];function Zy(e,t){if(1&e){const e=Rr();Fr(0,"a",14),Br("click",function(){return It(e),Ur(2).close(!0)}),Mr(1,"span",15),Ir()}}function Qy(e,t){if(1&e){const e=Rr();Fr(0,"po-button",16),Br("p-click",function(){return It(e),Ur(2).secondaryAction.action()}),Ir()}if(2&e){const e=Ur(2);Or("p-disabled",e.secondaryAction.disabled)("p-label",e.secondaryAction.label)("p-loading",e.secondaryAction.loading)("p-type",e.getSecondaryActionButtonType())}}function Jy(e,t){if(1&e){const e=Rr();Fr(0,"div",1),Br("keydown.esc",function(t){return It(e),Ur().closeModalOnEscapeKey(t)}),Fr(1,"div",2),Fr(2,"div",3),Br("mousedown",function(t){return It(e),Ur().onClickOut(t)}),Fr(3,"div",4),Fr(4,"div",5,6),Fr(6,"div",7),Fr(7,"div",8),pa(8),Ir(),kr(9,Zy,2,0,"a",9),Ir(),Fr(10,"div",10),Wr(11),Ir(),Fr(12,"div",11),kr(13,Qy,1,4,"po-button",12),Fr(14,"po-button",13),Br("p-click",function(){return It(e),Ur().primaryAction.action()}),Ir(),Ir(),Ir(),Ir(),Ir(),Ir(),Ir()}if(2&e){const e=Ur();Zs(4),va("po-modal-content po-modal-",e.size,""),Zs(4),ga(" ",e.title," "),Zs(1),Or("ngIf",!e.hideClose),Zs(4),Or("ngIf",e.secondaryAction),Zs(1),Or("p-disabled",e.primaryAction.disabled)("p-label",e.primaryAction.label)("p-loading",e.primaryAction.loading)("p-type",e.getPrimaryActionButtonType())}}const Xy=["toaster"];function eC(e,t){if(1&e){const e=Rr();Fr(0,"div",7),Br("click",function(t){return It(e),Ur().poToasterAction(t)}),pa(1),Ir()}if(2&e){const e=Ur();Zs(1),ga(" ",e.actionLabel," ")}}const tC=["popoverElement"];function nC(e,t){1&e&&Mr(0,"div"),2&e&&va("po-popover-arrow po-arrow-",Ur().arrowDirection,"")}function iC(e,t){if(1&e&&(Fr(0,"span",5),pa(1),Ir()),2&e){const e=Ur();Zs(1),fa(e.title)}}function sC(e,t){if(1&e){const e=Rr();Fr(0,"po-table-icon",1),Br("p-click",function(t){const n=It(e).$implicit;return Ur().click(n,t)}),Ir()}if(2&e){const e=t.$implicit,n=Ur();Or("p-clickable",n.isClickable(e))("p-color",n.getColor(e))("p-disabled",n.isDisabled(e))("p-icon",n.getIcon(e))("p-icon-tooltip",e.tooltip)}}function oC(e,t){if(1&e&&(Fr(0,"p",5),pa(1),Ir()),2&e){const e=Ur();Zs(1),fa(e.value)}}function rC(e,t){if(1&e){const e=Rr();Fr(0,"a",6),Br("click",function(){It(e);const t=Ur();return t.action(t.value,t.row)}),pa(1),Ir()}if(2&e){const e=Ur();Zs(1),fa(e.value)}}function aC(e,t){if(1&e&&(Fr(0,"a",7),pa(1),Ir()),2&e){const e=Ur();Or("href",e.link,Xi),Zs(1),fa(e.value)}}function lC(e,t){if(1&e&&(Fr(0,"a",8),pa(1),Ir()),2&e){const e=Ur();Or("routerLink",e.link),Zs(1),fa(e.value)}}function cC(e,t){if(1&e){const e=Rr();Fr(0,"po-popover",1,2),Br("p-close",function(){return It(e),Ur().checkChanges([],!0)}),Fr(2,"div",3),Fr(3,"div",4),pa(4),Ir(),Fr(5,"div",5),Fr(6,"button",6),Br("click",function(){return It(e),xr(1).close()}),Ir(),Ir(),Ir(),Fr(7,"div",7),Fr(8,"po-checkbox-group",8),Br("ngModelChange",function(t){return It(e),Ur().visibleColumns=t})("p-change",function(t){return It(e),Ur().checkChanges(t,!1)}),Ir(),Ir(),Fr(9,"div",9),Fr(10,"po-button",10),Br("p-click",function(){return It(e),Ur().restore()}),Ir(),Ir(),Ir()}if(2&e){const e=Ur();Or("p-target",e.target),Zs(4),fa(e.literals.columnsManager),Zs(4),Or("ngModel",e.visibleColumns)("p-options",e.columnsOptions),Zs(2),Or("p-label",e.literals.restoreDefault)}}const uC=["columnManagerTarget"],hC=["noColumnsHeader"],dC=["popup"],pC=["tableFooter"],fC=["tableWrapper"],gC=["poTableTbody"],mC=["actionsIconElement"],vC=["actionsElement"],bC=["headersTable"];function yC(e,t){1&e&&Lr(0)}function CC(e,t){if(1&e&&(Fr(0,"po-container",13),kr(1,yC,1,0,"ng-container",14),Ir()),2&e){const e=Ur(),t=xr(2);Or("p-no-shadow","border"===e.container),Zs(1),Or("ngTemplateOutlet",t)}}function wC(e,t){if(1&e&&(Fr(0,"div",22),Mr(1,"po-loading",23),Ir()),2&e){const e=Ur(2);Zs(1),Or("p-text",e.literals.loadingData)}}function _C(e,t){1&e&&Lr(0)}function DC(e,t){if(1&e&&(Fr(0,"div",24),Mr(1,"div",25),Fr(2,"div",26,27),kr(4,_C,1,0,"ng-container",14),Ir(),Ir()),2&e){const e=Ur(2),t=xr(5);Xr("height",e.heightTableContainer,"px"),Zs(4),Or("ngTemplateOutlet",t)}}function SC(e,t){1&e&&Lr(0)}function EC(e,t){if(1&e&&(Fr(0,"div"),kr(1,SC,1,0,"ng-container",14),Ir()),2&e){Ur(2);const e=xr(5);Zs(1),Or("ngTemplateOutlet",e)}}function kC(e,t){if(1&e&&(Pr(0),Mr(1,"po-table-subtitle-footer",30),Vr()),2&e){const e=t.$implicit,n=Ur(3);Zs(1),Or("p-literals",n.literals)("p-subtitles",e.subtitles)}}function xC(e,t){if(1&e&&(Fr(0,"div",28),kr(1,kC,2,2,"ng-container",29),Ir()),2&e){const e=Ur(2);Zs(1),Or("ngForOf",e.subtitleColumns)("ngForTrackBy",e.trackBy)}}function AC(e,t){if(1&e&&(Fr(0,"div"),kr(1,wC,2,1,"div",15),Fr(2,"div",16),Fr(3,"div",17,18),kr(5,DC,5,3,"div",19),kr(6,EC,2,1,"div",20),Ir(),Ir(),Ir(),kr(7,xC,2,2,"div",21)),2&e){const e=Ur();ea("po-table-container-relative",e.loading),Zs(1),Or("ngIf",e.loading),Zs(2),Xr("opacity",e.tableOpacity),ea("po-table-header-fixed-columns-pixels",e.allColumnsWidthPixels),Zs(2),Or("ngIf",e.height),Zs(1),Or("ngIf",!e.height),Zs(1),Or("ngIf",e.hasFooter)}}function OC(e,t){if(1&e){const e=Rr();Fr(0,"div",31,32),Fr(2,"po-button",33),Br("p-click",function(){return It(e),Ur().onShowMore()}),Ir(),Ir()}if(2&e){const e=Ur();ea("po-invisible",0===e.showMore.observers.length&&!e.hasService),Zs(2),Or("p-disabled",e.showMoreDisabled)("p-label",e.literals.loadMoreData)("p-loading",e.loadingShowMore)}}function TC(e,t){if(1&e&&Mr(0,"input",45),2&e){const e=Ur(3);ea("po-table-checkbox-checked",e.selectAll)("po-table-checkbox-indeterminate",null===e.selectAll)}}function FC(e,t){if(1&e){const e=Rr();Fr(0,"label",46),Br("click",function(){return It(e),Ur(3).selectAllRows()}),Ir()}}function IC(e,t){if(1&e&&(Fr(0,"th",42),Fr(1,"div"),kr(2,TC,1,4,"input",43),kr(3,FC,1,0,"label",44),Ir(),Ir()),2&e){const e=Ur(2);Zs(1),ea("po-table-header-fixed-inner",e.height),Zs(1),Or("ngIf",!e.hideSelectAll),Zs(1),Or("ngIf",!e.hideSelectAll)}}function MC(e,t){1&e&&Mr(0,"th",47)}function PC(e,t){1&e&&Lr(0)}function VC(e,t){if(1&e&&(Fr(0,"th",48,49),kr(2,PC,1,0,"ng-container",50),Ir()),2&e){const e=Ur(2),t=xr(17),n=xr(19);Zs(2),Or("ngIf",e.height)("ngIfThen",t)("ngIfElse",n)}}function LC(e,t){1&e&&Lr(0)}const RC=function(e){return{$implicit:e}};function jC(e,t){if(1&e){const e=Rr();Fr(0,"th",51,52),Br("click",function(){const t=It(e).$implicit;return Ur(2).sortColumn(t)}),Fr(2,"div",53),kr(3,LC,1,0,"ng-container",54),Ir(),Ir()}if(2&e){const e=t.$implicit,n=Ur(2),i=xr(15);Xr("width",e.width)("max-width",e.width)("min-width",e.width),ea("po-clickable",n.sort||n.hasService)("po-table-header-subtitle","subtitle"===e.type),Zs(2),ea("po-table-header-fixed-inner",n.height)("po-table-header-flex-right","currency"===e.type||"number"===e.type)("po-table-header-flex-center","subtitle"===e.type),Zs(1),Or("ngTemplateOutlet",i)("ngTemplateOutletContext",Ul(18,RC,e))}}function NC(e,t){1&e&&Mr(0,"th",47)}function BC(e,t){if(1&e&&Mr(0,"th"),2&e){const e=Ur(2);ea("po-table-header-single-action",e.isSingleAction)("po-table-header-actions",!e.isSingleAction)}}function $C(e,t){if(1&e){const e=Rr();Fr(0,"th",null,55),Fr(2,"div"),Fr(3,"button",56,57),Br("click",function(){return It(e),Ur(2).onOpenColumnManager()}),Ir(),Ir(),Ir()}if(2&e){const e=xr(1),t=Ur(2);ea("po-table-header-column-manager",!t.isSingleAction)("po-table-header-column-manager-border",!t.height&&t.container)("po-table-header-single-action",t.isSingleAction),Zs(2),Xr("width",t.height&&t.visibleActions.length?e.offsetWidth:void 0,"px"),ea("po-table-header-column-manager-border",t.height&&t.container)("po-table-header-column-manager-fixed-inner",t.height),Zs(1),Or("p-tooltip",t.literals.columnsManager)}}function HC(e,t){if(1&e&&(Fr(0,"tbody",58),Fr(1,"tr",59),Fr(2,"td",60),Fr(3,"span"),pa(4),Ir(),Ir(),Ir(),Ir()),2&e){const e=Ur(2);Zs(2),Or("colSpan",e.columnCount),Zs(2),ga(" ",e.literals.noData," ")}}function UC(e,t){1&e&&Lr(0)}function qC(e,t){if(1&e&&(Fr(0,"td",68),kr(1,UC,1,0,"ng-container",54),Ir()),2&e){const e=Ur().$implicit,t=Ur(3),n=xr(11),i=xr(13);Zs(1),Or("ngTemplateOutlet",t.singleSelect?n:i)("ngTemplateOutletContext",Ul(2,RC,e))}}function zC(e,t){}const WC=function(e,t){return{row:e,rowIndex:t}};function GC(e,t){if(1&e){const e=Rr();Fr(0,"td",69),Br("click",function(){It(e);const t=Ur().$implicit;return Ur(3).toggleDetail(t)}),kr(1,zC,0,0,"ng-template",70),Ir()}if(2&e){const e=Ur(),t=e.$implicit,n=e.index;Ur(3);const i=xr(9);Zs(1),Or("ngTemplateOutlet",i)("ngTemplateOutletContext",ql(2,WC,t,n))}}function KC(e,t){}function YC(e,t){if(1&e){const e=Rr();Fr(0,"td",69),Br("click",function(){It(e);const t=Ur().$implicit;return Ur(3).toggleDetail(t)}),kr(1,KC,0,0,"ng-template",70),Ir()}if(2&e){const e=Ur(),t=e.$implicit,n=e.index;Ur(3);const i=xr(9);Zs(1),Or("ngTemplateOutlet",i)("ngTemplateOutletContext",ql(2,WC,t,n))}}function ZC(e,t){1&e&&Lr(0)}function QC(e,t){if(1&e&&(Fr(0,"span"),kr(1,ZC,1,0,"ng-container",54),Ir()),2&e){const e=Ur().$implicit,t=Ur().$implicit,n=Ur(3);Zs(1),Or("ngTemplateOutlet",n.getTemplate(e))("ngTemplateOutletContext",Ul(2,RC,t[e.property]))}}function JC(e,t){1&e&&Lr(0)}const XC=function(e,t){return{row:e,column:t}};function ew(e,t){if(1&e&&(Fr(0,"span"),kr(1,JC,1,0,"ng-container",54),Ir()),2&e){const e=Ur().$implicit,t=Ur().$implicit,n=Ur(3);Zs(1),Or("ngTemplateOutlet",null==n.tableCellTemplate?null:n.tableCellTemplate.templateRef)("ngTemplateOutletContext",ql(2,XC,t,e))}}function tw(e,t){if(1&e&&(Fr(0,"span"),pa(1),Ir()),2&e){const e=Ur().$implicit,t=Ur().$implicit,n=Ur(3);Zs(1),ga(" ",n.getBooleanLabel(t[e.property],e)," ")}}function nw(e,t){if(1&e&&(Fr(0,"span"),pa(1),Kl(2,"currency"),Ir()),2&e){const e=Ur().$implicit,t=Ur().$implicit;Zs(1),ga(" ",Zl(2,1,t[e.property],e.format,"symbol","1.2-2")," ")}}function iw(e,t){if(1&e&&(Fr(0,"span"),pa(1),Kl(2,"date"),Ir()),2&e){const e=Ur().$implicit,t=Ur().$implicit;Zs(1),ga(" ",Yl(2,1,t[e.property],e.format||"dd/MM/yyyy")," ")}}function sw(e,t){if(1&e&&(Fr(0,"span"),pa(1),Kl(2,"po_time"),Ir()),2&e){const e=Ur().$implicit,t=Ur().$implicit;Zs(1),ga(" ",Yl(2,1,t[e.property],e.format||"HH:mm:ss.ffffff")," ")}}function ow(e,t){if(1&e&&(Fr(0,"span"),pa(1),Kl(2,"date"),Ir()),2&e){const e=Ur().$implicit,t=Ur().$implicit;Zs(1),ga(" ",Yl(2,1,t[e.property],e.format||"dd/MM/yyyy HH:mm:ss")," ")}}function rw(e,t){if(1&e&&(Fr(0,"span"),pa(1),Ir()),2&e){const e=Ur().$implicit,t=Ur().$implicit,n=Ur(3);Zs(1),ga(" ",n.formatNumber(t[e.property],e.format)," ")}}function aw(e,t){if(1&e){const e=Rr();Fr(0,"po-table-column-link",77),Br("click",function(t){It(e);const n=Ur().$implicit,i=Ur().$implicit;return Ur(3).onClickLink(t,i,n)}),Ir()}if(2&e){const e=Ur().$implicit,t=Ur().$implicit,n=Ur(3);Or("p-action",e.action)("p-disabled",n.checkDisabled(t,e))("p-link",t[e.link])("p-row",t)("p-value",t[e.property])}}function lw(e,t){if(1&e&&Mr(0,"po-table-column-icon",78),2&e){const e=Ur().$implicit,t=Ur().$implicit,n=Ur(3);Or("p-column",e)("p-icons",n.getColumnIcons(t,e))("p-row",t)}}function cw(e,t){if(1&e&&(Fr(0,"span"),Mr(1,"po-table-subtitle-circle",79),Ir()),2&e){const e=Ur().$implicit,t=Ur().$implicit,n=Ur(3);Zs(1),Or("p-subtitle",n.getSubtitleColumn(t,e))}}function uw(e,t){if(1&e&&(Fr(0,"span"),Mr(1,"po-table-column-label",80),Ir()),2&e){const e=Ur().$implicit,t=Ur().$implicit,n=Ur(3);Zs(1),Or("p-value",n.getColumnLabel(t,e))}}function hw(e,t){if(1&e&&(Fr(0,"span"),pa(1),Ir()),2&e){const e=Ur().$implicit,t=Ur().$implicit;Zs(1),fa(t[e.property])}}function dw(e,t){if(1&e){const e=Rr();Fr(0,"td",71),Br("click",function(){It(e);const t=Ur().$implicit,n=Ur(3);return n.selectable?n.selectRow(t):"javascript:;"}),Fr(1,"div",72),Br("mouseenter",function(t){const n=It(e).$implicit,i=Ur().$implicit;return Ur(3).tooltipMouseEnter(t,n,i)})("mouseleave",function(){return It(e),Ur(4).tooltipMouseLeave()}),kr(2,QC,2,4,"span",73),kr(3,ew,2,5,"span",73),kr(4,tw,2,1,"span",73),kr(5,nw,3,6,"span",73),kr(6,iw,3,4,"span",73),kr(7,sw,3,4,"span",73),kr(8,ow,3,4,"span",73),kr(9,rw,2,1,"span",73),kr(10,aw,1,5,"po-table-column-link",74),kr(11,lw,1,3,"po-table-column-icon",75),kr(12,cw,2,1,"span",73),kr(13,uw,2,1,"span",73),kr(14,hw,2,1,"span",76),Ir(),Ir()}if(2&e){const e=t.$implicit,n=Ur().$implicit,i=Ur(3);Xr("width",e.width)("max-width",e.width)("min-width",e.width),ea("po-table-column","icon"!==e.type)("po-table-column-right","currency"===e.type||"number"===e.type)("po-table-column-center","subtitle"===e.type)("po-table-column-icons","icon"===e.type),Or("ngClass",i.getClassColor(n,e)),Zs(1),ea("po-table-body-ellipsis",i.hideTextOverflow),Or("ngSwitch",e.type)("p-tooltip",i.tooltipText),Zs(1),Or("ngSwitchCase","columnTemplate"),Zs(1),Or("ngSwitchCase","cellTemplate"),Zs(1),Or("ngSwitchCase","boolean"),Zs(1),Or("ngSwitchCase","currency"),Zs(1),Or("ngSwitchCase","date"),Zs(1),Or("ngSwitchCase","time"),Zs(1),Or("ngSwitchCase","dateTime"),Zs(1),Or("ngSwitchCase","number"),Zs(1),Or("ngSwitchCase","link"),Zs(1),Or("ngSwitchCase","icon"),Zs(1),Or("ngSwitchCase","subtitle"),Zs(1),Or("ngSwitchCase","label")}}function pw(e,t){}function fw(e,t){if(1&e){const e=Rr();Fr(0,"td",69),Br("click",function(){It(e);const t=Ur().$implicit;return Ur(3).toggleDetail(t)}),kr(1,pw,0,0,"ng-template",70),Ir()}if(2&e){const e=Ur(),t=e.$implicit,n=e.index;Ur(3);const i=xr(9);Zs(1),Or("ngTemplateOutlet",i)("ngTemplateOutletContext",ql(2,WC,t,n))}}function gw(e,t){1&e&&Mr(0,"po-icon",85),2&e&&Or("p-icon",Ur(6).firstAction.icon)}function mw(e,t){if(1&e){const e=Rr();Fr(0,"div",83),Br("click",function(){It(e);const t=Ur(2).$implicit,n=Ur(3);return n.executeTableAction(t,n.firstAction)}),kr(1,gw,1,1,"po-icon",84),pa(2),Ir()}if(2&e){const e=Ur(2).$implicit,t=Ur(3);ea("po-table-action-disabled",!!t.firstAction.disabled&&t.validateTableAction(e,t.firstAction)),Zs(1),Or("ngIf",t.firstAction.icon),Zs(1),ga(" ",t.firstAction.label," ")}}function vw(e,t){if(1&e&&(Fr(0,"td",81),kr(1,mw,3,4,"div",82),Ir()),2&e){const e=Ur(4);Zs(1),Or("ngIf",!1!==e.firstAction.visible)}}function bw(e,t){if(1&e){const e=Rr();Fr(0,"td",86),Fr(1,"span",87,88),Br("click",function(){It(e);const t=xr(2),n=Ur().$implicit;return Ur(3).togglePopup(n,t)}),Ir(),Ir()}}function yw(e,t){1&e&&Mr(0,"td",89)}function Cw(e,t){}const ww=function(e,t){return{$implicit:e,rowIndex:t}};function _w(e,t){if(1&e&&(Fr(0,"tr"),Fr(1,"td",90),kr(2,Cw,0,0,"ng-template",70),Ir(),Ir()),2&e){const e=Ur(),t=e.$implicit,n=e.index,i=Ur(3);Zs(1),Or("colSpan",i.columnCountForMasterDetail),Zs(1),Or("ngTemplateOutlet",i.tableRowTemplate.templateRef)("ngTemplateOutletContext",ql(3,ww,t,n))}}function Dw(e,t){if(1&e){const e=Rr();Fr(0,"tr"),Fr(1,"td",91),Fr(2,"po-table-detail",92),Br("p-select-row",function(t){return It(e),Ur(4).selectDetailRow(t)}),Ir(),Ir(),Ir()}if(2&e){const e=Ur().$implicit,t=Ur(3);Zs(1),Or("colSpan",t.columnCountForMasterDetail),Zs(1),Or("p-selectable",t.selectable&&!t.detailHideSelect)("p-detail",t.columnMasterDetail.detail)("p-items",e[t.nameColumnDetail])}}function Sw(e,t){if(1&e&&(Fr(0,"tbody",58),Fr(1,"tr",59),kr(2,qC,2,4,"td",62),kr(3,GC,2,5,"td",63),kr(4,YC,2,5,"td",63),kr(5,dw,15,31,"td",64),kr(6,fw,2,5,"td",63),kr(7,vw,2,1,"td",65),kr(8,bw,3,0,"td",66),kr(9,yw,1,0,"td",67),Ir(),kr(10,_w,3,6,"tr",20),kr(11,Dw,3,4,"tr",20),Ir()),2&e){const e=t.$implicit,n=t.index,i=Ur(3);Zs(1),ea("po-table-row-active",e.$selected||null===e.$selected&&i.selectable),Zs(1),Or("ngIf",i.selectable),Zs(1),Or("ngIf",i.columnMasterDetail&&!i.hideDetail&&!i.hasRowTemplate),Zs(1),Or("ngIf",i.hasRowTemplate&&!i.hasRowTemplateWithArrowDirectionRight),Zs(1),Or("ngForOf",i.mainColumns)("ngForTrackBy",i.trackBy),Zs(1),Or("ngIf",i.hasRowTemplateWithArrowDirectionRight),Zs(1),Or("ngIf",i.isSingleAction),Zs(1),Or("ngIf",i.visibleActions.length>1),Zs(1),Or("ngIf",!i.hasVisibleActions&&!i.hideColumnsManager&&!i.hasRowTemplateWithArrowDirectionRight),Zs(1),Or("ngIf",i.hasMainColumns&&i.hasRowTemplate&&e.$showDetail&&i.isShowRowTemplate(e,n)),Zs(1),Or("ngIf",i.hasMainColumns&&i.isShowMasterDetail(e))}}function Ew(e,t){if(1&e&&(Pr(0),kr(1,Sw,12,13,"tbody",61),Vr()),2&e){const e=Ur(2);Zs(1),Or("ngForOf",e.items)("ngForTrackBy",e.trackBy)}}function kw(e,t){if(1&e&&(Fr(0,"table",34),Fr(1,"thead"),Fr(2,"tr"),kr(3,IC,4,4,"th",35),kr(4,MC,1,0,"th",36),kr(5,VC,3,3,"th",37),kr(6,jC,4,20,"th",38),kr(7,NC,1,0,"th",36),kr(8,BC,1,4,"th",39),kr(9,$C,5,13,"th",40),Ir(),Ir(),kr(10,HC,5,2,"tbody",41),kr(11,Ew,2,2,"ng-container",20),Ir()),2&e){const e=Ur();ea("po-table-striped",e.striped)("po-table-layout-fixed",e.hideTextOverflow),Zs(2),ea("po-table-header",!e.height),Zs(1),Or("ngIf",e.hasSelectableColumn),Zs(1),Or("ngIf",(e.hasMasterDetailColumn||e.hasRowTemplate)&&!e.hasRowTemplateWithArrowDirectionRight),Zs(1),Or("ngIf",!e.hasMainColumns),Zs(1),Or("ngForOf",e.mainColumns)("ngForTrackBy",e.trackBy),Zs(1),Or("ngIf",e.hasRowTemplateWithArrowDirectionRight&&(e.hasVisibleActions||e.hideColumnsManager)),Zs(1),Or("ngIf",e.hasVisibleActions&&e.hideColumnsManager),Zs(1),Or("ngIf",e.hasValidColumns&&!e.hideColumnsManager),Zs(1),Or("ngIf",!e.hasItems||!e.hasMainColumns),Zs(1),Or("ngIf",e.hasMainColumns)}}function xw(e,t){if(1&e&&Mr(0,"span",94),2&e){const e=Ur().row;ea("po-icon-arrow-up",e.$showDetail)("po-icon-arrow-down",!e.$showDetail)}}function Aw(e,t){if(1&e&&kr(0,xw,1,4,"span",93),2&e){const e=t.row,n=t.rowIndex,i=Ur();Or("ngIf",i.containsMasterDetail(e)&&!i.hasRowTemplate||i.isShowRowTemplate(e,n)&&i.hasRowTemplate)}}function Ow(e,t){if(1&e){const e=Rr();Mr(0,"input",95),Fr(1,"label",96),Br("click",function(){const t=It(e).$implicit,n=Ur();return n.selectable?n.selectRow(t):"javascript:;"}),Ir()}2&e&&ea("po-table-radio-checked",t.$implicit.$selected)}function Tw(e,t){if(1&e){const e=Rr();Mr(0,"input",45),Fr(1,"label",46),Br("click",function(){const t=It(e).$implicit,n=Ur();return n.selectable?n.selectRow(t):"javascript:;"}),Ir()}2&e&&ea("po-table-checkbox-checked",t.$implicit.$selected)}function Fw(e,t){if(1&e&&Mr(0,"span"),2&e){const e=Ur().$implicit,t=Ur();ea("po-table-header-icon-unselected",(null==t.sortedColumn?null:t.sortedColumn.property)!==e)("po-table-header-icon-descending",(null==t.sortedColumn?null:t.sortedColumn.property)===e&&t.sortedColumn.ascending)("po-table-header-icon-ascending",(null==t.sortedColumn?null:t.sortedColumn.property)===e&&!t.sortedColumn.ascending)}}function Iw(e,t){if(1&e){const e=Rr();Fr(0,"span",97,98),Br("mouseenter",function(t){return It(e),Ur().tooltipMouseEnter(t)})("mouseleave",function(){return It(e),Ur().tooltipMouseLeave()}),pa(2),Kl(3,"titlecase"),Ir(),kr(4,Fw,1,6,"span",99)}if(2&e){const e=t.$implicit,n=Ur();Or("p-tooltip",n.tooltipText),Zs(2),ga(" ",e.label||function(e,t,n){const i=Tt(),s=wt(i,23);return Jl(i,Ql(i,23)?Wl(i,Bt(),3,s.transform,n,s):s.transform(n))}(0,0,e.property)," "),Zs(2),Or("ngIf",n.sort)}}function Mw(e,t){if(1&e&&(Fr(0,"div",100),pa(1),Ir()),2&e){const e=Ur();Xr("width",null==e.noColumnsHeader?null:e.noColumnsHeader.nativeElement.offsetWidth,"px"),Zs(1),ga(" ",e.hasValidColumns?e.literals.noVisibleColumn:e.literals.noColumns," ")}}function Pw(e,t){if(1&e&&pa(0),2&e){const e=Ur();ga(" ",e.hasValidColumns?e.literals.noVisibleColumn:e.literals.noColumns,"\n")}}function Vw(e,t){if(1&e){const e=Rr();Fr(0,"po-table-column-manager",101),Br("p-visible-columns-change",function(t){return It(e),Ur().onVisibleColumnsChange(t)})("p-change-visible-columns",function(t){return It(e),Ur().onChangeVisibleColumns(t)}),Ir()}if(2&e){const e=Ur();Or("p-columns",e.columns)("p-max-columns",e.maxColumns)("p-target",e.columnManagerTarget)("p-last-visible-columns-selected",e.lastVisibleColumnsSelected)}}function Lw(e,t){1&e&&Mr(0,"th",6)}function Rw(e,t){if(1&e&&(Fr(0,"th",7),pa(1),Ir()),2&e){const e=t.$implicit,n=Ur(2);Zs(1),ga(" ",n.getColumnTitleLabel(e)," ")}}function jw(e,t){if(1&e&&(Fr(0,"thead"),Fr(1,"tr"),kr(2,Lw,1,0,"th",3),Mr(3,"th",4),kr(4,Rw,2,1,"th",5),Ir(),Ir()),2&e){const e=Ur();Zs(2),Or("ngIf",e.isSelectable),Zs(2),Or("ngForOf",e.detail.columns)}}function Nw(e,t){if(1&e){const e=Rr();Pr(0),Mr(1,"td",12),Fr(2,"td",13),Mr(3,"input",14),Fr(4,"label",15),Br("click",function(){It(e);const t=Ur().$implicit;return Ur().onSelectRow(t)}),Ir(),Ir(),Vr()}if(2&e){const e=Ur().$implicit;Zs(3),ea("po-table-checkbox-checked",e.$selected)}}function Bw(e,t){1&e&&Mr(0,"td",16)}function $w(e,t){if(1&e&&(Fr(0,"strong"),pa(1),Ir()),2&e){const e=Ur().$implicit,t=Ur(2);Zs(1),ga(" ",t.getColumnTitleLabel(e),": ")}}function Hw(e,t){if(1&e&&(Fr(0,"span"),pa(1),Kl(2,"currency"),Ir()),2&e){const e=Ur().$implicit,t=Ur().$implicit;Zs(1),fa(Zl(2,1,t[e.property],e.format,"symbol","1.2-2"))}}function Uw(e,t){if(1&e&&(Fr(0,"span"),pa(1),Kl(2,"date"),Ir()),2&e){const e=Ur().$implicit,t=Ur().$implicit;Zs(1),fa(Yl(2,1,t[e.property],e.format||"dd/MM/yyyy"))}}function qw(e,t){if(1&e&&(Fr(0,"span"),pa(1),Kl(2,"po_time"),Ir()),2&e){const e=Ur().$implicit,t=Ur().$implicit;Zs(1),fa(Yl(2,1,t[e.property],e.format||"HH:mm:ss.ffffff"))}}function zw(e,t){if(1&e&&(Fr(0,"span"),pa(1),Kl(2,"date"),Ir()),2&e){const e=Ur().$implicit,t=Ur().$implicit;Zs(1),ga(" ",Yl(2,1,t[e.property],e.format||"dd/MM/yyyy HH:mm:ss")," ")}}function Ww(e,t){if(1&e&&(Fr(0,"span"),pa(1),Ir()),2&e){const e=Ur().$implicit,t=Ur().$implicit,n=Ur();Zs(1),fa(n.formatNumberDetail(t[e.property],e.format))}}function Gw(e,t){if(1&e&&(Fr(0,"span"),pa(1),Ir()),2&e){const e=Ur().$implicit,t=Ur().$implicit;Zs(1),fa(t[e.property])}}function Kw(e,t){if(1&e){const e=Rr();Fr(0,"td",17),Br("click",function(){It(e);const t=Ur().$implicit,n=Ur();return n.isSelectable?n.onSelectRow(t):"javascript:;"}),kr(1,$w,2,1,"strong",1),Pr(2,18),kr(3,Hw,3,6,"span",19),kr(4,Uw,3,4,"span",19),kr(5,qw,3,4,"span",19),kr(6,zw,3,4,"span",19),kr(7,Ww,2,1,"span",19),kr(8,Gw,2,1,"span",20),Vr(),Ir()}if(2&e){const e=t.$implicit,n=Ur(2);Zs(1),Or("ngIf",n.typeHeaderInline),Zs(1),Or("ngSwitch",e.type),Zs(1),Or("ngSwitchCase","currency"),Zs(1),Or("ngSwitchCase","date"),Zs(1),Or("ngSwitchCase","time"),Zs(1),Or("ngSwitchCase","dateTime"),Zs(1),Or("ngSwitchCase","number")}}function Yw(e,t){if(1&e&&(Fr(0,"tr",8),kr(1,Nw,5,2,"ng-container",9),kr(2,Bw,1,0,"ng-template",null,10,yc),kr(4,Kw,9,7,"td",11),Ir()),2&e){const e=t.$implicit,n=xr(3),i=Ur();ea("po-table-row-active",e.$selected&&i.isSelectable),Zs(1),Or("ngIf",i.isSelectable)("ngIfElse",n),Zs(3),Or("ngForOf",i.detailColumns)}}const Zw=function(e,t){return{"po-clickable":e,"po-table-icon-disabled":t}};function Qw(e,t){if(1&e&&(Fr(0,"div",6),Mr(1,"po-table-subtitle-circle",7),Fr(2,"span",8),pa(3),Ir(),Ir()),2&e){const e=t.$implicit;Zs(1),Or("p-subtitle",e),Zs(2),fa(e.label)}}function Jw(e,t){if(1&e&&(Fr(0,"div",3),Mr(1,"po-table-subtitle-circle",4),Fr(2,"span",5),pa(3),Ir(),Ir()),2&e){const e=t.$implicit;Zs(1),Or("p-subtitle",e),Zs(2),fa(e.label)}}function Xw(e,t){if(1&e&&Mr(0,"po-table-show-subtitle",6),2&e){const e=Ur();Or("p-literals",e.literals)("p-subtitles",e.subtitles)}}const e_=["containerElement"],t_=["contentElement"],n_=["iconArrow"];function i_(e,t){if(1&e&&(Fr(0,"div",16),Mr(1,"po-icon",17),Ir()),2&e){const e=Ur();Zs(1),ea("po-field-icon-disabled",e.disabled),Or("p-icon",e.icon)}}function s_(e,t){if(1&e){const e=Rr();Fr(0,"po-clean",18),Br("p-change-event",function(t){return It(e),Ur().clear(t)}),Ir()}2&e&&Or("p-element-ref",Ur().inputEl)}function o_(e,t){1&e&&Lr(0)}function r_(e,t){1&e&&(Fr(0,"div",19),Mr(1,"po-loading"),Ir())}function a_(e,t){1&e&&Lr(0)}function l_(e,t){if(1&e&&kr(0,a_,1,0,"ng-container",11),2&e){const e=Ur(),t=xr(18),n=xr(20);Or("ngIf",e.visibleOptions.length)("ngIfThen",t)("ngIfElse",n)}}function c_(e,t){1&e&&Lr(0)}function u_(e,t){if(1&e&&(Fr(0,"label",27),pa(1),Ir()),2&e){const e=Ur(2).$implicit;Zs(1),fa(e.label)}}function h_(e,t){if(1&e&&(Fr(0,"a",28),Mr(1,"span",29),Ir()),2&e){const e=Ur(2).$implicit,t=Ur(2);Zs(1),Or("innerHTML",t.getLabelFormatted(null==e?null:e.label),Ji)}}function d_(e,t){if(1&e&&(kr(0,u_,2,1,"label",25),kr(1,h_,2,1,"ng-template",null,26,yc)),2&e){const e=xr(2),t=Ur().$implicit;Or("ngIf",null==t?null:t.options)("ngIfElse",e)}}function p_(e,t){1&e&&Lr(0)}function f_(e,t){}const g_=function(e,t){return{$implicit:e,selected:t}};function m_(e,t){if(1&e&&kr(0,f_,0,0,"ng-template",32),2&e){const e=Ur(2).$implicit,t=Ur(2);Or("ngTemplateOutlet",null==t.comboOptionTemplate?null:t.comboOptionTemplate.templateRef)("ngTemplateOutletContext",ql(2,g_,e,t.compareObjects(t.selectedView,e)))}}function v_(e,t){}function b_(e,t){if(1&e&&(Fr(0,"a",28),kr(1,v_,0,0,"ng-template",32),Ir()),2&e){const e=Ur(2).$implicit,t=Ur(2);Zs(1),Or("ngTemplateOutlet",null==t.comboOptionTemplate?null:t.comboOptionTemplate.templateRef)("ngTemplateOutletContext",Ul(2,RC,e))}}function y_(e,t){if(1&e&&(kr(0,p_,1,0,"ng-container",11),kr(1,m_,1,5,"ng-template",null,30,yc),kr(3,b_,2,4,"ng-template",null,31,yc)),2&e){const e=xr(2),t=xr(4);Or("ngIf",Ur(3).isOptionGroupList)("ngIfThen",e)("ngIfElse",t)}}function C_(e,t){if(1&e){const e=Rr();Fr(0,"li",7),Br("click",function(t){const n=It(e).$implicit,i=Ur(2);return null!=n&&n.options?void 0:i.onOptionClick(n,t)}),kr(1,c_,1,0,"ng-container",11),kr(2,d_,3,2,"ng-template",null,23,yc),kr(4,y_,5,3,"ng-template",null,24,yc),Ir()}if(2&e){const e=t.$implicit,n=xr(3),i=xr(5),s=Ur(2);ea("po-combo-item-selected",s.compareObjects(s.selectedView,e)),Zs(1),Or("ngIf",s.comboOptionTemplate)("ngIfThen",i)("ngIfElse",n)}}function w_(e,t){if(1&e&&(Fr(0,"ul",20,21),kr(2,C_,6,5,"li",22),Ir()),2&e){const e=Ur();Zs(2),Or("ngForOf",e.visibleOptions)}}function __(e,t){if(1&e&&(Fr(0,"div",33),Fr(1,"div",34),Fr(2,"span"),pa(3),Ir(),Ir(),Ir()),2&e){const e=Ur();Zs(3),ga(" ",e.literals.noData," ")}}function D_(e,t){if(1&e&&(Fr(0,"div",8),Mr(1,"po-icon",9),Ir()),2&e){const e=Ur();Zs(1),ea("po-field-icon-disabled",e.disabled),Or("p-icon",e.icon)}}function S_(e,t){if(1&e){const e=Rr();Fr(0,"po-clean",10),Br("p-change-event",function(t){return It(e),Ur().clear(t)}),Ir()}2&e&&Or("p-element-ref",Ur().inputEl)}const E_=["dynamicForm"],k_=["fieldsComponent"];function x_(e,t){1&e&&Lr(0)}function A_(e,t){if(1&e&&Mr(0,"po-dynamic-form-fields",3,4),2&e){const e=Ur();Or("p-auto-focus",e.autoFocus)("p-fields",e.fields)("p-value",e.value)}}function O_(e,t){if(1&e){const e=Rr();Fr(0,"form",null,5),Fr(2,"po-dynamic-form-fields",6,4),Br("p-fieldsChange",function(t){return It(e),Ur().fields=t})("p-object-value",function(t){return It(e),Ur().sendObjectValue(t)})("p-form-validate",function(t){return It(e),Ur().validateForm(t)}),Ir(),Ir()}if(2&e){const e=Ur();Zs(2),Or("p-fields",e.fields)("p-auto-focus",e.autoFocus)("p-disabled-form",e.disabledForm)("p-validate",e.validate)("p-validate-fields",e.validateFields)("p-value",e.value)}}const T_=["inpsearch"],F_=["container"];function I_(e,t){if(1&e){const e=Rr();Fr(0,"div",14),Fr(1,"span",15),Br("click",function(){return It(e),Ur().onAdvancedFilter()})("keydown.enter",function(){return It(e),Ur().onAdvancedFilter()}),pa(2),Ir(),Ir()}if(2&e){const e=Ur();Zs(2),ga(" ",e.literals.modalAdvancedSearch," ")}}function M_(e,t){if(1&e){const e=Rr();Fr(0,"po-disclaimer-group",16),Br("p-change",function(){return It(e),Ur().onChangeDisclaimerGroup()}),Ir()}if(2&e){const e=Ur();Or("p-disclaimers",null==e.disclaimerGroup?null:e.disclaimerGroup.disclaimers)("p-title",null==e.disclaimerGroup?null:e.disclaimerGroup.title)}}const P_=["ulElement"],V_=["searchElement"];function L_(e,t){if(1&e){const e=Rr();Fr(0,"po-multiselect-search",8,9),Br("p-change",function(t){return It(e),Ur().callChangeSearch(t)}),Ir()}if(2&e){const e=Ur();Or("p-literals",e.literals)("p-placeholder",e.placeholderSearch)}}function R_(e,t){if(1&e&&(Fr(0,"div",10),Fr(1,"span"),pa(2),Ir(),Ir()),2&e){const e=Ur();Zs(2),ga(" ",e.literals.noData,"")}}function j_(e,t){1&e&&(Fr(0,"div",11),Mr(1,"po-loading"),Ir())}function N_(e,t){if(1&e){const e=Rr();Fr(0,"po-multiselect-item",13),Br("p-change",function(t){const n=It(e).$implicit;return Ur(2).clickItem(t,n)}),Ir()}if(2&e){const e=t.$implicit,n=Ur(2);Or("p-label",e.label)("p-selected",n.isSelectedItem(e))}}function B_(e,t){if(1&e&&(Pr(0),kr(1,N_,1,2,"po-multiselect-item",12),Vr()),2&e){const e=Ur();Zs(1),Or("ngForOf",e.visibleOptions)}}const $_=["dropdownElement"],H_=["iconElement"],U_=["inputElement"];function q_(e,t){if(1&e&&(Fr(0,"span",11),pa(1),Ir()),2&e){const e=Ur();Zs(1),ga(" ",e.placeholder," ")}}function z_(e,t){if(1&e){const e=Rr();Fr(0,"po-disclaimer",12),Br("click",function(){const t=It(e).$implicit;return Ur().openDropdown(""===t.value)})("p-close-action",function(){const t=It(e).$implicit;return Ur().closeDisclaimer(t.value)}),Ir()}if(2&e){const e=t.$implicit,n=Ur();ea("po-clickable",""===e.value&&!n.disabled),Or("p-label",e.label)("p-value",e.value)("p-hide-close",""===e.value||n.disabled)}}function W_(e,t){if(1&e&&(Fr(0,"div",8),Mr(1,"po-icon",9),Ir()),2&e){const e=Ur();Zs(1),ea("po-field-icon-disabled",e.disabled),Or("p-icon",e.icon)}}function G_(e,t){if(1&e){const e=Rr();Fr(0,"po-clean",10),Br("p-change-event",function(t){return It(e),Ur().clear(t)}),Ir()}2&e&&Or("p-element-ref",Ur().inputEl)}function K_(e,t){if(1&e&&(Fr(0,"div",8),Mr(1,"po-icon",9),Ir()),2&e){const e=Ur();Zs(1),ea("po-field-icon-disabled",e.disabled),Or("p-icon",e.icon)}}function Y_(e,t){if(1&e){const e=Rr();Fr(0,"po-clean",10),Br("p-change-event",function(t){return It(e),Ur().clear(t)}),Ir()}if(2&e){const e=Ur();Or("p-default-value",null)("p-element-ref",e.inputEl)}}function Z_(e,t){if(1&e){const e=Rr();Fr(0,"po-clean",10),Br("p-change-event",function(t){return It(e),Ur().clear(t)}),Ir()}2&e&&Or("p-element-ref",Ur().inputEl)}function Q_(e,t){if(1&e){const e=Rr();Fr(0,"span",11),Br("click",function(){return It(e),Ur().showPassword()}),Ir()}2&e&&Or("ngClass",Ur().visiblePassword?"po-icon-eye":"po-icon-eye-off po-field-icon-disabled")}const J_=["inputRadio"];function X_(e,t){if(1&e){const e=Rr();Fr(0,"div"),Fr(1,"input",4,5),Br("keyup",function(t){const n=It(e).$implicit;return Ur().onKeyUp(t,n.value)}),Ir(),Fr(3,"label",6),Br("click",function(){const t=It(e).$implicit,n=Ur();return n.eventClick(t.value,!0===t.disabled||n.disabled)}),pa(4),Ir(),Ir()}if(2&e){const e=t.$implicit,n=xr(2),i=Ur();ba("po-radio-group-item po-md-",i.mdColumns," po-lg-",i.columns,""),Zs(1),ea("po-radio-group-input-checked",i.value===e.value),Or("checked",i.value===e.value)("disabled",!0===e.disabled||i.disabled)("required",i.required)("value",e.value),Dr("name",i.name),Zs(2),ea("po-clickable",!n.disabled),Or("for",i.name),Zs(1),ga(" ",e.label," ")}}const eD=["contentList"],tD=["icon"],nD=["select"],iD=["selectButton"];function sD(e,t){1&e&&Mr(0,"option",14)}function oD(e,t){if(1&e){const e=Rr();Fr(0,"option",15),Br("click",function(){const t=It(e).$implicit;return Ur().onOptionClick(t)}),pa(1),Ir()}if(2&e){const e=t.$implicit;Or("disabled",Ur().readonly)("value",e.value),Zs(1),ga(" ",null==e?null:e.label," ")}}function rD(e,t){1&e&&Lr(0)}function aD(e,t){if(1&e&&(Fr(0,"span"),pa(1),Ir()),2&e){const e=Ur().$implicit;Zs(1),fa(null==e?null:e.label)}}function lD(e,t){}function cD(e,t){if(1&e){const e=Rr();Fr(0,"li",16),Br("click",function(){const t=It(e).$implicit;return Ur().onOptionClick(t)}),Fr(1,"div",17),kr(2,rD,1,0,"ng-container",18),kr(3,aD,2,1,"ng-template",null,19,yc),kr(5,lD,0,0,"ng-template",20,21,yc),Ir(),Ir()}if(2&e){const e=t.$implicit,n=xr(4),i=xr(6),s=Ur();ea("po-select-item-selected",s.selectedValue===e.value),Or("value",e.value),Zs(2),Or("ngIf",s.selectOptionTemplate)("ngIfThen",i)("ngIfElse",n),Zs(3),Or("ngTemplateOutlet",null==s.selectOptionTemplate?null:s.selectOptionTemplate.templateRef)("ngTemplateOutletContext",Ul(8,RC,e))}}const uD=function(e,t){return{"po-select-mobile":e,"po-invisible":t}},hD=function(e,t){return{"po-select-button-disabled":e,"po-select-button-readonly":t}},dD=function(e,t){return{"po-field-icon-disabled":e,"po-field-icon-readonly":t}},pD=function(e){return{"po-invisible":e}},fD=["switchContainer"];function gD(e,t){if(1&e&&(Fr(0,"div",6),Fr(1,"span",7),pa(2),Ir(),Ir()),2&e){const e=Ur();Zs(2),fa(e.tagOrientation?e.label+":":e.label)}}function mD(e,t){if(1&e&&Mr(0,"po-icon",8),2&e){const e=Ur();Or("p-icon",e.type?e.iconFromType:e.icon)}}const vD=["component"];function bD(e,t){1&e&&Mr(0,"po-divider",16),2&e&&Or("p-label",Ur().$implicit.divider)}function yD(e,t){if(1&e){const e=Rr();Fr(0,"po-datepicker",17,18),Br("ngModelChange",function(t){It(e);const n=Ur().$implicit;return Ur(2).value[n.property]=t})("p-change",function(){It(e);const t=Ur().$implicit;return Ur(2).onChangeField(t)}),Ir()}if(2&e){const e=Ur().$implicit,t=Ur(2);Or("name",e.property)("ngModel",t.value[e.property])("ngClass",e.componentClass)("p-disabled",t.isDisabled(e))("p-error-pattern",e.errorMessage)("p-auto-focus",e.focus)("p-format",e.format)("p-help",e.help)("p-label",e.label)("p-max-date",e.maxValue)("p-min-date",e.minValue)("p-optional",e.optional)("p-required",e.required)("p-placeholder",e.placeholder)}}function CD(e,t){if(1&e){const e=Rr();Fr(0,"po-input",19,18),Br("ngModelChange",function(t){It(e);const n=Ur().$implicit;return Ur(2).value[n.property]=t})("p-change",function(){It(e);const t=Ur().$implicit;return Ur(2).onChangeField(t)}),Ir()}if(2&e){const e=Ur().$implicit,t=Ur(2);Or("name",e.property)("ngModel",t.value[e.property])("ngClass",e.componentClass)("p-disabled",t.isDisabled(e))("p-error-pattern",e.errorMessage)("p-auto-focus",e.focus)("p-help",e.help)("p-label",e.label)("p-mask-format-model",e.maskFormatModel)("p-mask",e.mask)("p-maxlength",e.maxLength)("p-minlength",e.minLength)("p-optional",e.optional)("p-pattern",e.pattern)("p-required",e.required)("p-icon",e.icon)("p-placeholder",e.placeholder)}}function wD(e,t){if(1&e){const e=Rr();Fr(0,"po-number",20,18),Br("ngModelChange",function(t){It(e);const n=Ur().$implicit;return Ur(2).value[n.property]=t})("p-change",function(){It(e);const t=Ur().$implicit;return Ur(2).onChangeField(t)}),Ir()}if(2&e){const e=Ur().$implicit,t=Ur(2);Or("name",e.property)("ngModel",t.value[e.property])("ngClass",e.componentClass)("p-disabled",t.isDisabled(e))("p-error-pattern",e.errorMessage)("p-auto-focus",e.focus)("p-help",e.help)("p-label",e.label)("p-min",e.minValue)("p-max",e.maxValue)("p-maxlength",e.maxLength)("p-minlength",e.minLength)("p-optional",e.optional)("p-required",e.required)("p-icon",e.icon)("p-placeholder",e.placeholder)}}function _D(e,t){if(1&e){const e=Rr();Fr(0,"po-decimal",21,18),Br("ngModelChange",function(t){It(e);const n=Ur().$implicit;return Ur(2).value[n.property]=t})("p-change",function(){It(e);const t=Ur().$implicit;return Ur(2).onChangeField(t)}),Ir()}if(2&e){const e=Ur().$implicit,t=Ur(2);Or("name",e.property)("ngModel",t.value[e.property])("ngClass",e.componentClass)("p-disabled",t.isDisabled(e))("p-decimals-length",e.decimalsLength)("p-thousand-maxlength",e.thousandMaxlength)("p-icon",e.icon)("p-auto-focus",e.focus)("p-help",e.help)("p-label",e.label)("p-optional",e.optional)("p-required",e.required)("p-placeholder",e.placeholder)}}function DD(e,t){if(1&e){const e=Rr();Fr(0,"po-select",22,18),Br("ngModelChange",function(t){It(e);const n=Ur().$implicit;return Ur(2).value[n.property]=t})("p-change",function(){It(e);const t=Ur().$implicit;return Ur(2).onChangeField(t)}),Ir()}if(2&e){const e=Ur().$implicit,t=Ur(2);Or("name",e.property)("ngModel",t.value[e.property])("ngClass",e.componentClass)("p-auto-focus",e.focus)("p-disabled",t.isDisabled(e))("p-help",e.help)("p-label",e.label)("p-optional",e.optional)("p-options",e.options)("p-required",e.required)("p-placeholder",e.placeholder)}}function SD(e,t){if(1&e){const e=Rr();Fr(0,"po-radio-group",23,18),Br("ngModelChange",function(t){It(e);const n=Ur().$implicit;return Ur(2).value[n.property]=t})("p-change",function(){It(e);const t=Ur().$implicit;return Ur(2).onChangeField(t)}),Ir()}if(2&e){const e=Ur().$implicit,t=Ur(2);Or("name",e.property)("ngModel",t.value[e.property])("ngClass",e.componentClass)("p-auto-focus",e.focus)("p-disabled",t.isDisabled(e))("p-help",e.help)("p-label",e.label)("p-optional",e.optional)("p-options",e.options)("p-required",e.required)}}function ED(e,t){if(1&e){const e=Rr();Fr(0,"po-switch",24,18),Br("ngModelChange",function(t){It(e);const n=Ur().$implicit;return Ur(2).value[n.property]=t})("p-change",function(){It(e);const t=Ur().$implicit;return Ur(2).onChangeField(t)}),Ir()}if(2&e){const e=Ur().$implicit,t=Ur(2);Or("name",e.property)("ngModel",t.value[e.property])("ngClass",e.componentClass)("p-auto-focus",e.focus)("p-disabled",t.isDisabled(e))("p-help",e.help)("p-label",e.label)("p-label-off",e.booleanFalse)("p-label-on",e.booleanTrue)}}function kD(e,t){if(1&e){const e=Rr();Fr(0,"po-combo",25,18),Br("ngModelChange",function(t){It(e);const n=Ur().$implicit;return Ur(2).value[n.property]=t})("p-change",function(t){It(e);const n=Ur().$implicit;return Ur(2).onChangeField(n,t)}),Ir()}if(2&e){const e=Ur().$implicit,t=Ur(2);Or("name",e.property)("ngModel",t.value[e.property])("ngClass",e.componentClass)("p-auto-focus",e.focus)("p-disabled",t.isDisabled(e))("p-field-label",e.fieldLabel)("p-field-value",e.fieldValue)("p-filter-params",e.params)("p-filter-service",e.optionsService)("p-help",e.help)("p-label",e.label)("p-optional",e.optional)("p-required",e.required)("p-icon",e.icon)("p-placeholder",e.placeholder)}}function xD(e,t){if(1&e){const e=Rr();Fr(0,"po-lookup",26,18),Br("ngModelChange",function(t){It(e);const n=Ur().$implicit;return Ur(2).value[n.property]=t})("p-change",function(){It(e);const t=Ur().$implicit;return Ur(2).onChangeField(t)}),Ir()}if(2&e){const e=Ur().$implicit,t=Ur(2);Or("name",e.property)("ngModel",t.value[e.property])("ngClass",e.componentClass)("p-columns",e.columns)("p-disabled",t.isDisabled(e))("p-field-label",e.fieldLabel||"label")("p-field-value",e.fieldValue||"value")("p-filter-params",e.params)("p-filter-service",e.searchService)("p-auto-focus",e.focus)("p-help",e.help)("p-field-format",e.format)("p-label",e.label)("p-optional",e.optional)("p-required",e.required)("p-placeholder",e.placeholder)}}function AD(e,t){if(1&e){const e=Rr();Fr(0,"po-checkbox-group",23,18),Br("ngModelChange",function(t){It(e);const n=Ur().$implicit;return Ur(2).value[n.property]=t})("p-change",function(){It(e);const t=Ur().$implicit;return Ur(2).onChangeField(t)}),Ir()}if(2&e){const e=Ur().$implicit,t=Ur(2);Or("name",e.property)("ngModel",t.value[e.property])("ngClass",e.componentClass)("p-auto-focus",e.focus)("p-disabled",t.isDisabled(e))("p-help",e.help)("p-label",e.label)("p-optional",e.optional)("p-options",e.options)("p-required",e.required)}}function OD(e,t){if(1&e){const e=Rr();Fr(0,"po-multiselect",27,18),Br("ngModelChange",function(t){It(e);const n=Ur().$implicit;return Ur(2).value[n.property]=t})("p-change",function(){It(e);const t=Ur().$implicit;return Ur(2).onChangeField(t)}),Ir()}if(2&e){const e=Ur().$implicit,t=Ur(2);Or("name",e.property)("ngModel",t.value[e.property])("ngClass",e.componentClass)("p-disabled",t.isDisabled(e))("p-auto-focus",e.focus)("p-help",e.help)("p-label",e.label)("p-optional",e.optional)("p-options",e.options)("p-required",e.required)("p-placeholder",e.placeholder)}}function TD(e,t){if(1&e){const e=Rr();Fr(0,"po-textarea",28,18),Br("ngModelChange",function(t){It(e);const n=Ur().$implicit;return Ur(2).value[n.property]=t})("p-change",function(){It(e);const t=Ur().$implicit;return Ur(2).onChangeField(t)}),Ir()}if(2&e){const e=Ur().$implicit,t=Ur(2);Or("name",e.property)("ngModel",t.value[e.property])("ngClass",e.componentClass)("p-disabled",t.isDisabled(e))("p-auto-focus",e.focus)("p-help",e.help)("p-label",e.label)("p-maxlength",e.maxLength)("p-minlength",e.minLength)("p-optional",e.optional)("p-required",e.required)("p-rows",e.rows)("p-placeholder",e.placeholder)}}function FD(e,t){if(1&e){const e=Rr();Fr(0,"po-password",29,18),Br("ngModelChange",function(t){It(e);const n=Ur().$implicit;return Ur(2).value[n.property]=t})("p-change",function(){It(e);const t=Ur().$implicit;return Ur(2).onChangeField(t)}),Ir()}if(2&e){const e=Ur().$implicit,t=Ur(2);Or("name",e.property)("ngModel",t.value[e.property])("ngClass",e.componentClass)("p-disabled",t.isDisabled(e))("p-error-pattern",e.errorMessage)("p-auto-focus",e.focus)("p-help",e.help)("p-label",e.label)("p-maxlength",e.maxLength)("p-minlength",e.minLength)("p-optional",e.optional)("p-pattern",e.pattern)("p-required",e.required)("p-placeholder",e.placeholder)}}function ID(e,t){if(1&e&&(Pr(0),kr(1,bD,1,1,"po-divider",3),kr(2,yD,2,14,"po-datepicker",4),kr(3,CD,2,17,"po-input",5),kr(4,wD,2,16,"po-number",6),kr(5,_D,2,13,"po-decimal",7),kr(6,DD,2,11,"po-select",8),kr(7,SD,2,10,"po-radio-group",9),kr(8,ED,2,9,"po-switch",10),kr(9,kD,2,15,"po-combo",11),kr(10,xD,2,16,"po-lookup",12),kr(11,AD,2,10,"po-checkbox-group",9),kr(12,OD,2,11,"po-multiselect",13),kr(13,TD,2,13,"po-textarea",14),kr(14,FD,2,14,"po-password",15),Vr()),2&e){const e=t.$implicit,n=Ur(2);Zs(1),Or("ngIf",null==e||null==e.divider?null:e.divider.trim()),Zs(1),Or("ngIf",n.compareTo(e.control,"datepicker")),Zs(1),Or("ngIf",n.compareTo(e.control,"input")),Zs(1),Or("ngIf",n.compareTo(e.control,"number")),Zs(1),Or("ngIf",n.compareTo(e.control,"decimal")),Zs(1),Or("ngIf",n.compareTo(e.control,"select")),Zs(1),Or("ngIf",n.compareTo(e.control,"radioGroup")),Zs(1),Or("ngIf",n.compareTo(e.control,"switch")),Zs(1),Or("ngIf",n.compareTo(e.control,"combo")),Zs(1),Or("ngIf",n.compareTo(e.control,"lookup")),Zs(1),Or("ngIf",n.compareTo(e.control,"checkboxGroup")),Zs(1),Or("ngIf",n.compareTo(e.control,"multiselect")),Zs(1),Or("ngIf",n.compareTo(e.control,"textarea")),Zs(1),Or("ngIf",n.compareTo(e.control,"password"))}}function MD(e,t){if(1&e&&(Fr(0,"div",1),kr(1,ID,15,14,"ng-container",2),Ir()),2&e){const e=Ur();Zs(1),Or("ngForOf",e.visibleFields)("ngForTrackBy",e.trackBy)}}function PD(e,t){if(1&e&&(Fr(0,"div",6),Mr(1,"po-tag",7),Ir()),2&e){const e=Ur().$implicit,t=Ur();Zs(1),Or("p-color",t.typeColor(e.type))("p-value",t.typeValue(e.type))}}function VD(e,t){if(1&e&&(Fr(0,"po-accordion-item",4),kr(1,PD,2,2,"div",5),Fr(2,"div",1),Fr(3,"p"),pa(4),Ir(),Ir(),Ir()),2&e){const e=t.$implicit;Or("p-label",Ur().formatDetailItemTitle(e)),Zs(1),Or("ngIf",e.type),Zs(3),fa(e.detailedMessage)}}let LD=(()=>{class e{constructor(){this.subjectChild=new D}receiveFromChildAccordionClicked(){return this.subjectChild.asObservable()}sendToParentAccordionItemClicked(e){this.subjectChild.next(e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),RD=(()=>{class e{constructor(e){this.accordionService=e}collapse(){this.expanded=!1,this.accordionService.sendToParentAccordionItemClicked(this)}expand(){this.expanded=!0,this.accordionService.sendToParentAccordionItemClicked(this)}}return e.\u0275fac=function(t){return new(t||e)(Ar(LD))},e.\u0275cmp=He({type:e,selectors:[["po-accordion-item"]],viewQuery:function(e,t){if(1&e&&pc(Cl,7),2&e){let e;dc(e=gc())&&(t.templateRef=e.first)}},inputs:{label:["p-label","label"]},ngContentSelectors:Wb,decls:1,vars:0,template:function(e,t){1&e&&(zr(),kr(0,zb,1,0,"ng-template"))},encapsulation:2}),e})(),jD=(()=>{class e extends class{}{constructor(e){super(),this.accordionService=e,this.receiveFromChildAccordionSubscription()}ngOnDestroy(){this.accordionServiceSubscription.unsubscribe()}headerToggle(e,t){t.expanded=e,this.toggle(t)}receiveFromChildAccordionSubscription(){this.accordionServiceSubscription=this.accordionService.receiveFromChildAccordionClicked().subscribe(e=>this.toggle(e))}toggle(e){e.expanded?(this.expandedActiveAccordionItem&&this.expandedActiveAccordionItem.collapse(),this.expandedActiveAccordionItem=e):this.expandedActiveAccordionItem=null}}return e.\u0275fac=function(t){return new(t||e)(Ar(LD))},e.\u0275cmp=He({type:e,selectors:[["po-accordion"]],contentQueries:function(e,t,n){if(1&e&&fc(n,RD,4),2&e){let e;dc(e=gc())&&(t.poAccordionItems=e)}},features:[La([LD]),ur],decls:2,vars:1,consts:[[1,"po-accordion","po-container","po-container-no-padding"],["class","po-accordion-item",3,"po-accordion-item-active",4,"ngFor","ngForOf"],[1,"po-accordion-item"],[3,"p-expanded","p-label","p-toggle"],[3,"p-expanded"],[4,"ngTemplateOutlet"]],template:function(e,t){1&e&&(Fr(0,"div",0),kr(1,Kb,4,6,"section",1),Ir()),2&e&&(Zs(1),Or("ngForOf",t.poAccordionItems))},directives:function(){return[Oh,BD,ND,jh]},encapsulation:2}),e})(),ND=(()=>{class e{constructor(){this.expanded=!1}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=He({type:e,selectors:[["po-accordion-item-body"]],inputs:{expanded:["p-expanded","expanded"]},ngContentSelectors:Wb,decls:1,vars:1,consts:[["class","po-accordion-item-body",4,"ngIf"],[1,"po-accordion-item-body"],[1,"po-accordion-item-body-content"]],template:function(e,t){1&e&&(zr(),kr(0,Yb,3,1,"div",0)),2&e&&Or("ngIf",t.expanded)},directives:[Fh],encapsulation:2,data:{animation:[("toggleBody",t=[up("* => void",[cp({height:"*"}),lp(200,cp({height:0}))]),up("void => *",[cp({height:"0"}),lp(200,cp({height:"*"}))])],{type:7,name:"toggleBody",definitions:t,options:{}})]}}),e;var t})(),BD=(()=>{class e{constructor(){this.expanded=!1,this.toggle=new ec}onClick(){this.expanded=!this.expanded,this.toggle.emit(this.expanded)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=He({type:e,selectors:[["po-accordion-item-header"]],inputs:{expanded:["p-expanded","expanded"],label:["p-label","label"]},outputs:{toggle:"p-toggle"},decls:6,vars:1,consts:[[1,"po-accordion-item-header"],[1,"po-accordion-item-header-button","po-clickable",3,"click"],[1,"po-text-ellipsis","po-accordion-item-header-title"],[1,"po-icon","po-accordion-item-header-icon","po-icon-arrow-down"],["icon",""]],template:function(e,t){1&e&&(Fr(0,"header",0),Fr(1,"button",1),Br("click",function(){return t.onClick()}),Fr(2,"div",2),pa(3),Ir(),Mr(4,"span",3,4),Ir(),Ir()),2&e&&(Zs(3),fa(t.label))},encapsulation:2,changeDetection:0}),e})(),$D=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh]]}),e})(),HD=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh]]}),e})();const UD=[{description:"English",language:"en"},{description:"Espa\xf1ol",language:"es"},{description:"Portugu\xeas",language:"pt"},{description:"P\u0443\u0441\u0441\u043a\u0438\u0439",language:"ru"}].map(e=>e.language),qD="pt",zD=[{separator:".",language:"en"},{separator:",",language:"es"},{separator:",",language:"pt"},{separator:",",language:"ru"}],WD=[{separator:",",language:"en"},{separator:".",language:"es"},{separator:".",language:"pt"},{separator:" ",language:"ru"}];function GD(e){return(e||qD).toLowerCase().substring(0,2)}function KD(e){return new RegExp("^[a-z]{2}(-[a-z]{2})?$","i").test(e)}function YD(e){return"string"==typeof e?"true"===(e=e.toLowerCase().trim())||"on"===e||""===e:"number"==typeof e?1===e:!!e}function ZD(e,t){const n=parseInt(e,10),i=parseInt(t,10);return n||0===n?n:i||0===i?i:void 0}function QD(e,t){return typeof e===t}function JD(e,t,n){if(e){const i=parseInt(e.substring(8,10),10),s=parseInt(e.substring(5,7),10),o=parseInt(e.substring(0,4),10);if(t){const e=new Date(o,s-1,i,0,0,0);return iS(e,o),e}if(n){const e=new Date(o,s-1,i,23,59,59);return iS(e,o),e}{const t=Date.parse(e),n=6e4*(new Date).getTimezoneOffset();return new Date(t+n)}}}function XD(e,t){if(e){const n=e.getMonth()+1,i=e.getDate()<10?"0"+e.getDate():e.getDate(),s=n<10?"0"+n:n,o=eS(e.getFullYear()),r=e.toString();return null!==t?o+"-"+s+"-"+i+t:o+"-"+s+"-"+i+"T"+r.substring(16,24)+r.substring(28,31)+":"+r.substring(31,33)}return null}function eS(e){return e>=1e3?e.toString():e>99&&e<1e3?`0${e}`:e>9&&e<100?`00${e}`:e>=0&&e<10?`000${e}`:void 0}function tS(){return window.navigator.userAgent.match(/Android|webOS|iPhone|iPad|iPod|BlackBerry|Windows Phone/i)}function nS(e){return 13===e.keyCode||13===e.which}function iS(e,t){t>=0&&t<100&&e.setFullYear(t)}function sS(e){for(let t=0;t<e.length;t++)0!==t&&e.findIndex(n=>n.value===e[t].value)!==t&&(e.splice(t,1),t--)}function oS(e){for(let t=0;t<e.length;t++)null==e[t].value&&(e.splice(t,1),t--)}function rS(e){return null!=e&&""!==e||!1===e}function aS(e){return!!e&&e.startsWith("http")}function lS(){function e(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()}function cS(e){return`${e.charAt(0).toUpperCase()}${e.slice(1)}`}function uS(e){return QD(e,"object")&&!Array.isArray(e)?e:void 0}const hS="PO_DEFAULT_LANGUAGE",dS="PO_USER_LOCALE";let pS=(()=>{class e{constructor(){}set languageDefault(e){e&&KD(e)&&localStorage.setItem(hS,e)}get languageDefault(){return localStorage.getItem(hS)}getLanguage(){const e=localStorage.getItem(dS)||this.languageDefault||function(){const e=navigator.language||navigator.userLanguage,t=GD(e);return UD.includes(t)?e:qD}();return e&&e.toLowerCase()}getLanguageDefault(){return this.languageDefault}getShortLanguage(){const e=GD(this.getLanguage());return UD.includes(e)?e:qD}setLanguage(e){KD(e)&&localStorage.setItem(dS,e.toLowerCase())}setLanguageDefault(e){this.languageDefault=e}getNumberSeparators(e){var t,n,i,s;e=e||this.getShortLanguage();const o=null!==(t=zD.find(t=>t.language===e))&&void 0!==t?t:{},r=null!==(n=WD.find(t=>t.language===e))&&void 0!==n?n:{};return{decimalSeparator:null!==(i=o.separator)&&void 0!==i?i:",",thousandSeparator:null!==(s=r.separator)&&void 0!==s?s:"."}}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=he({factory:function(){return new e},token:e,providedIn:"root"}),e})(),fS=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh,Hm]]}),e})(),gS=(()=>{class e{constructor(){}set icon(e){"string"==typeof e?this.addClasses(e):e instanceof Cl&&(this._icon=e)}get icon(){return this._icon}addClasses(e){this.class=this.class=e.startsWith("po-icon-")?`po-icon ${e}`:`po-fonts-icon ${e}`}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=He({type:e,selectors:[["po-icon"]],inputs:{icon:["p-icon","icon"]},decls:3,vars:3,consts:[[4,"ngIf","ngIfThen","ngIfElse"],["fontTemplate",""],["aria-hidden","true"]],template:function(e,t){if(1&e&&(kr(0,Zb,1,0,"ng-container",0),kr(1,Qb,1,2,"ng-template",null,1,yc)),2&e){const e=xr(2);Or("ngIf",t.class)("ngIfThen",e)("ngIfElse",t.icon)}},directives:[Fh],encapsulation:2,changeDetection:0}),e})(),mS=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh]]}),e})();const vS={en:{loading:"Loading"},es:{loading:"Cargando"},pt:{loading:"Carregando"},ru:{loading:"\u043f\u043e\u0433\u0440\u0443\u0437\u043a\u0430"}};let bS=(()=>{class e{constructor(e){this.languageService=e,this._screenLock=!1,this.text=this.getTextDefault()}set screenLock(e){this._screenLock=YD(e)}get screenLock(){return this._screenLock}set text(e){this._text=e||this.getTextDefault()}get text(){return this._text}getTextDefault(){const e=this.languageService.getShortLanguage();return vS[e].loading}}return e.\u0275fac=function(t){return new(t||e)(Ar(pS))},e.\u0275dir=Ke({type:e,inputs:{text:["p-text","text"],screenLock:["p-screen-lock","screenLock"]}}),e})(),yS=(()=>{class e extends bS{constructor(e,t){super(t),this.changeDetector=e}}return e.\u0275fac=function(t){return new(t||e)(Ar(gl),Ar(pS))},e.\u0275cmp=He({type:e,selectors:[["po-loading-overlay"]],features:[ur],decls:2,vars:5,consts:[[1,"po-loading-overlay-content",3,"p-text"]],template:function(e,t){1&e&&(Fr(0,"div"),Mr(1,"po-loading",0),Ir()),2&e&&(ea("po-overlay-absolute",!t.screenLock)("po-overlay-fixed",t.screenLock),Zs(1),Or("p-text",t.text))},directives:function(){return[_S]},encapsulation:2}),e})(),CS=(()=>{class e{set neutralColor(e){this._neutralColor=YD(e)}get neutralColor(){return this._neutralColor}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=He({type:e,selectors:[["po-loading-icon"]],inputs:{neutralColor:["p-neutral-color","neutralColor"]},decls:9,vars:2,consts:[[1,"po-loading-icon"],[1,"po-loading-icon-bar","po-loading-icon-bar-1"],[1,"po-loading-icon-bar","po-loading-icon-bar-2"],[1,"po-loading-icon-bar","po-loading-icon-bar-3"],[1,"po-loading-icon-bar","po-loading-icon-bar-4"],[1,"po-loading-icon-bar","po-loading-icon-bar-5"],[1,"po-loading-icon-bar","po-loading-icon-bar-6"],[1,"po-loading-icon-bar","po-loading-icon-bar-7"],[1,"po-loading-icon-bar","po-loading-icon-bar-8"]],template:function(e,t){1&e&&(Fr(0,"div",0),Mr(1,"span",1),Mr(2,"span",2),Mr(3,"span",3),Mr(4,"span",4),Mr(5,"span",5),Mr(6,"span",6),Mr(7,"span",7),Mr(8,"span",8),Ir()),2&e&&ea("po-loading-icon-neutral-color",t.neutralColor)},encapsulation:2}),e})(),wS=(()=>{class e{constructor(){this.text="Carregando"}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,inputs:{text:["p-text","text"]}}),e})(),_S=(()=>{class e extends wS{}return e.\u0275fac=function(){let t;return function(n){return(t||(t=$n(e)))(n||e)}}(),e.\u0275cmp=He({type:e,selectors:[["po-loading"]],features:[ur],decls:3,vars:1,consts:[[1,"po-loading"],["class","po-loading-label po-text-ellipsis",4,"ngIf"],[1,"po-loading-label","po-text-ellipsis"]],template:function(e,t){1&e&&(Fr(0,"div",0),Mr(1,"po-loading-icon"),kr(2,Jb,2,1,"span",1),Ir()),2&e&&(Zs(2),Or("ngIf",t.text))},directives:[CS,Fh],encapsulation:2}),e})(),DS=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[pS]}),e})(),SS=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh,DS]]}),e})();function ES(e,t,n){return function(i){e&&e.set&&e.set.bind(this)(t(i)),this[n]=t(i)}}function kS(e,t){return function(){return e&&e.get?e.get.bind(this)():this[t]}}function xS(){return function(e,t,n){return function(e,t,n){const{target:i,property:s,originalDescriptor:o}=e,r=function(e,t,n){const i=`$$__${t}`;return Object.prototype.hasOwnProperty.call(e,i)&&console.warn(`The prop "${i}" is already exist, it will be overrided by InputBoolean decorator.`),Object.defineProperty(e,i,{configurable:!0,writable:!0}),i}(i,s);return{get:kS(o,r),set:ES(o,n,r)}}({target:e,property:t,originalDescriptor:n},0,YD)}}const AS=["default","primary","danger","link"];let OS=(()=>{class e{constructor(){this.autoFocus=!1,this.click=new ec,this._disabled=!1,this._loading=!1,this._small=!1,this._type="default"}set loading(e){this._loading=YD(e)}get loading(){return this._loading}set small(e){this._small=""===e||YD(e)}get small(){return this._small}set type(e){this._type=AS.includes(e)?e:"default"}get type(){return this._type}set disabled(e){this._disabled=""===e||YD(e)}get disabled(){return this._disabled}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,inputs:{autoFocus:["p-auto-focus","autoFocus"],loading:["p-loading","loading"],small:["p-small","small"],type:["p-type","type"],disabled:["p-disabled","disabled"],label:["p-label","label"],icon:["p-icon","icon"]},outputs:{click:"p-click"}}),Ov([xS()],e.prototype,"autoFocus",void 0),e})(),TS=(()=>{class e extends OS{ngAfterViewInit(){this.autoFocus&&this.focus()}focus(){this.disabled||this.buttonElement.nativeElement.focus()}onClick(){this.click.emit(null)}}return e.\u0275fac=function(){let t;return function(n){return(t||(t=$n(e)))(n||e)}}(),e.\u0275cmp=He({type:e,selectors:[["po-button"]],viewQuery:function(e,t){if(1&e&&pc(Xb,7),2&e){let e;dc(e=gc())&&(t.buttonElement=e.first)}},features:[ur],decls:5,vars:14,consts:[["type","button",1,"po-button","po-text-ellipsis",3,"disabled","click"],["button",""],["class","po-button-loading-icon",4,"ngIf"],["class","po-button-icon",3,"p-icon",4,"ngIf"],["class","po-button-label",4,"ngIf"],[1,"po-button-loading-icon"],["p-neutral-color",""],[1,"po-button-icon",3,"p-icon"],[1,"po-button-label"]],template:function(e,t){1&e&&(Fr(0,"button",0,1),Br("click",function(){return t.onClick()}),kr(2,ey,2,0,"div",2),kr(3,ty,1,1,"po-icon",3),kr(4,ny,2,1,"span",4),Ir()),2&e&&(ea("po-button-danger","danger"===t.type)("po-button-link","link"===t.type)("po-button-primary","primary"===t.type)("po-button-sm",t.small)("po-clickable","link"===t.type),Or("disabled",t.disabled||t.loading),Zs(2),Or("ngIf",t.loading),Zs(1),Or("ngIf",t.icon),Zs(1),Or("ngIf",t.label))},directives:[Fh,CS,gS],encapsulation:2,changeDetection:0}),e})(),FS=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh,SS,mS]]}),e})();const IS=["right","right-top","right-bottom","top","top-left","top-right","left","left-top","left-bottom","bottom","bottom-left","bottom-right"];let MS=(()=>{class e{constructor(){this.appendInBody=!1,this._tooltipPosition="bottom",this._displayTooltip=!1,this._tooltip=""}set tooltip(e){this._tooltip=e&&e.length>140?e.substring(0,140):e}get tooltip(){return this._tooltip}set tooltipPosition(e){this._tooltipPosition=IS.includes(e)?e:"bottom"}get tooltipPosition(){return this._tooltipPosition}set displayTooltip(e){this._displayTooltip=e,this._displayTooltip?this.addTooltipAction():this.removeTooltipAction()}get displayTooltip(){return this._displayTooltip}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,inputs:{appendInBody:["p-append-in-body","appendInBody"],tooltip:["p-tooltip","tooltip"],tooltipPosition:["p-tooltip-position","tooltipPosition"],displayTooltip:["p-display-tooltip","displayTooltip"]}}),Ov([xS()],e.prototype,"appendInBody",void 0),Ov([xS()],e.prototype,"displayTooltip",null),e})();const PS=["bottom","bottom-left","bottom-right","left","left-top","left-bottom","top","top-right","top-left","right","right-bottom","right-top"];let VS=(()=>{class e{constructor(){this.differenceDiagonalToWidthArrow=3,this.isSetElementWidth=!1,this.offsetArrow=12}adjustPosition(e){const t=e||"bottom";this.elementPosition(t),this.customPositions&&this.customPositions.length?this.adjustCustomPosition(t):this.adjustDefaultPosition(t)}getArrowDirection(){return this.arrowDirection}setElements(e,t,n,i,s=!1,o=!1){this.element=e instanceof Ua?e.nativeElement:e,this.targetElement=n instanceof Ua?n.nativeElement:n,this.elementOffset=t,this.customPositions=i,this.isSetElementWidth=s,this.isCornerAligned=o}adjustCustomPosition(e){const t=this.customPositions.length;let n=0;for(;n++<t;)this.overflowAllSides(e)&&(e=this.nextPosition(e,this.customPositions),this.elementPosition(e))}adjustDefaultPosition(e){const t=this.getMainPositions(),n=t.length;let i=0;for(;i++<n;){const n=this.getMainPosition(e);if(this.elementPosition(e),!this.overflowMain(n))return this.overflowAllSides(e)?void this.verifySubPositions(e):void 0;e=this.nextPosition(n,t)}}elementPosition(e){this.isCornerAligned?this.setAlignedElementPosition(e):this.setElementPosition(e)}getMainPosition(e){return e.indexOf("-")>-1?e.substring(0,e.indexOf("-")):e}getMainPositions(){return this.customPositions&&this.customPositions.length?this.getMainPositionsByCustomPositions(this.customPositions):["top","right","bottom","left"]}getMainPositionsByCustomPositions(e){const t=[],n=e.length;for(let i=0;i<n;i++){const n=this.getMainPosition(e[i]);t.includes(n)||t.push(n)}return t}getOverflows(){const e=this.getSizesAndPositions();return{right:e.element.right>e.window.innerWidth,top:e.element.top<=0,left:e.element.left<=0,bottom:e.element.bottom>e.window.innerHeight}}getSizesAndPositions(){return{window:{scrollY:window.scrollY,scrollX:window.scrollX,innerWidth:window.innerWidth,innerHeight:window.innerHeight},element:this.element.getBoundingClientRect(),target:this.targetElement?this.targetElement.getBoundingClientRect():{top:0,bottom:0,right:0,left:0}}}nextPosition(e,t=[]){const n=t.indexOf(e),i=n+1;return n>-1&&i<t.length?t[i]:t[0]}overflowAllSides(e){const t=this.getOverflows();switch(e){case"top":case"top-right":return t.top||t.right||t.left;case"top-left":return t.top||t.left||t.right;case"right":return t.right||t.top||t.bottom;case"right-top":return t.right||t.top;case"right-bottom":return t.right||t.bottom;case"bottom":case"bottom-right":return t.bottom||t.right||t.left;case"bottom-left":return t.bottom||t.left||t.right;case"left":return t.left||t.top||t.bottom;case"left-top":return t.left||t.top;case"left-bottom":return t.left||t.bottom}}overflowMain(e){const t=this.getOverflows();switch(e){case"top":return t.top;case"right":return t.right;case"bottom":return t.bottom;case"left":return t.left}}setAlignedArrowDirection(e){switch(e){case"top-left":return"bottom-left";case"top-right":return"bottom-right";case"bottom-right":return"top-right";case"bottom-left":return"top-left"}}setAlignedBottomPositions(e,t){this.element.style.top=t.target.bottom+this.elementOffset+"px",this.element.style.left=t.target.left-e+"px"}setAlignedElementPosition(e){this.setElementWidth();const t=this.getSizesAndPositions();switch(e){case"bottom-left":this.setAlignedBottomPositions(0,t);break;case"bottom-right":this.setAlignedBottomPositions(t.element.width-t.target.width,t);break;case"top-left":this.setAlignedTopPositions(0,t);break;case"top-right":this.setAlignedTopPositions(t.element.width-t.target.width,t)}this.arrowDirection=this.setAlignedArrowDirection(e)}setAlignedTopPositions(e,t){this.element.style.top=t.target.top-t.element.height-this.elementOffset+"px",this.element.style.left=t.target.left-e+"px"}setArrowDirection(e){switch(e){case"top":return"bottom";case"top-left":return"bottom-right";case"top-right":return"bottom-left";case"right":return"left";case"right-top":return"left-bottom";case"right-bottom":return"left-top";case"bottom":return"top";case"bottom-right":return"top-left";case"bottom-left":return"top-right";case"left":return"right";case"left-bottom":return"right-top";case"left-top":return"right-bottom"}}setBottomPositions(e,t){this.element.style.top=t.target.bottom+this.elementOffset+"px",this.element.style.left=t.target.left+t.target.width/2-e+"px"}setElementPosition(e){this.setElementWidth();const t=this.getSizesAndPositions();switch(e){case"top":this.setTopPositions(t.element.width/2,t);break;case"top-left":this.setTopPositions(t.element.width-this.offsetArrow-this.differenceDiagonalToWidthArrow,t);break;case"top-right":this.setTopPositions(this.offsetArrow+this.differenceDiagonalToWidthArrow,t);break;case"right":this.setRightPositions(t.element.height/2,t);break;case"right-top":this.setRightPositions(t.element.height-this.offsetArrow-this.differenceDiagonalToWidthArrow,t);break;case"right-bottom":this.setRightPositions(this.offsetArrow,t);break;case"bottom":this.setBottomPositions(t.element.width/2,t);break;case"bottom-right":this.setBottomPositions(this.offsetArrow+this.differenceDiagonalToWidthArrow,t);break;case"bottom-left":this.setBottomPositions(t.element.width-this.offsetArrow-this.differenceDiagonalToWidthArrow,t);break;case"left":this.setLeftPositions(t.element.height/2,t);break;case"left-bottom":this.setLeftPositions(this.offsetArrow,t);break;case"left-top":this.setLeftPositions(t.element.height-this.offsetArrow,t)}this.arrowDirection=this.setArrowDirection(e)}setElementWidth(){this.isSetElementWidth&&this.targetElement&&(this.element.style.width=`${this.targetElement.clientWidth}px`)}setLeftPositions(e,t){this.element.style.top=t.target.top-e+t.target.height/2+"px",this.element.style.left=t.target.left-t.element.width-this.elementOffset+"px"}setRightPositions(e,t){this.element.style.top=t.target.top-e+t.target.height/2+"px",this.element.style.left=t.target.right+this.elementOffset+"px"}setTopPositions(e,t){this.element.style.top=t.target.top-t.element.height-this.elementOffset+"px",this.element.style.left=t.target.left+t.target.width/2-e+"px"}verifySubPositions(e){e.indexOf("-")>-1&&(e=e.substring(0,e.indexOf("-")),this.elementPosition(e));let t=0;for(;t++<3;){if(!this.overflowAllSides(e))return null;e=this.nextPosition(e,PS),this.elementPosition(e)}}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),LS=(()=>{class e extends VS{}return e.\u0275fac=function(){let t;return function(n){return(t||(t=$n(e)))(n||e)}}(),e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),RS=(()=>{class e extends MS{constructor(e,t,n){super(),this.elementRef=e,this.renderer=t,this.poControlPosition=n,this.tooltipOffset=8}onMouseEnter(){this.displayTooltip||this.addTooltipAction()}onMouseLeave(){this.displayTooltip||this.removeTooltipAction()}ngOnInit(){this.initScrollEventListenerFunction()}addTooltipAction(){setTimeout(()=>{this.tooltip&&(this.tooltipContent?this.showTooltip():this.createTooltip(),this.removeArrow(this.arrowDirection),this.poControlPosition.adjustPosition(this.tooltipPosition),this.arrowDirection=this.poControlPosition.getArrowDirection(),this.addArrow(this.arrowDirection),this.lastTooltipText=this.tooltip)})}removeTooltipAction(){setTimeout(()=>{this.appendInBody&&this.tooltipContent?(this.renderer.removeChild(document.body,this.tooltipContent),this.tooltipContent=void 0):this.hideTooltip()})}addArrow(e){this.renderer.addClass(this.divArrow,`po-arrow-${e}`)}addScrollEventListener(){window.addEventListener("scroll",this.eventListenerFunction,!0)}createTooltip(){this.tooltipContent=this.renderer.createElement("div"),this.renderer.addClass(this.tooltipContent,"po-tooltip"),this.divArrow=this.renderer.createElement("div"),this.renderer.addClass(this.divArrow,"po-tooltip-arrow"),this.divContent=this.renderer.createElement("div"),this.renderer.addClass(this.divContent,"po-tooltip-content"),this.textContent=this.renderer.createText(this.tooltip),this.renderer.appendChild(this.divContent,this.textContent),this.renderer.appendChild(this.tooltipContent,this.divArrow),this.renderer.appendChild(this.tooltipContent,this.divContent);const e=this.appendInBody?document.body:this.elementRef.nativeElement;this.renderer.appendChild(e,this.tooltipContent),this.poControlPosition.setElements(this.tooltipContent,this.tooltipOffset,this.elementRef),this.addScrollEventListener()}initScrollEventListenerFunction(){this.eventListenerFunction=()=>{this.isHidden||setTimeout(()=>{this.poControlPosition.adjustPosition(this.tooltipPosition)})}}hideTooltip(){this.tooltipContent&&(this.renderer.addClass(this.tooltipContent,"po-invisible"),this.isHidden=!0,this.removeScrollEventListener())}removeArrow(e){this.elementRef.nativeElement.querySelector(`.po-arrow-${e}`)&&this.renderer.removeClass(this.divArrow,`po-arrow-${e}`)}removeScrollEventListener(){window.removeEventListener("scroll",this.eventListenerFunction,!0)}showTooltip(){this.renderer.removeClass(this.tooltipContent,"po-invisible"),this.updateTextContent(),this.isHidden=!1,this.addScrollEventListener()}updateTextContent(){this.lastTooltipText!==this.tooltip&&(this.renderer.removeChild(this.divContent,this.textContent),this.textContent=this.renderer.createText(this.tooltip),this.renderer.appendChild(this.divContent,this.textContent))}}return e.\u0275fac=function(t){return new(t||e)(Ar(Ua),Ar(Wa),Ar(LS))},e.\u0275dir=Ke({type:e,selectors:[["","p-tooltip",""]],hostBindings:function(e,t){1&e&&Br("mouseenter",function(){return t.onMouseEnter()})("mouseleave",function(){return t.onMouseLeave()})},features:[La([LS]),ur]}),e})(),jS=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh]]}),e})(),NS=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh,FS,jS]]}),e})(),BS=(()=>{class e{constructor(){this.dateRegex=new RegExp("^(?:[0-9])\\d{1}(?:[0-9])\\d{1}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12]\\d|3[01])$"),this.isoRegex=new RegExp("^(?:[0-9])\\d{1}(?:[0-9])\\d{1}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12]\\d|3[01])T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:Z|-0[1-9]|-1\\d|-2[0-3]|-00:?(?:0[1-9]|[0-5]\\d)|\\+[01]\\d|\\+2[0-3])(?:|:?[0-5]\\d)$")}convertIsoToDate(e,t,n){if(e){const{year:i,month:s,day:o}=this.getDateFromIso(e);if(t){const e=new Date(i,s-1,o,0,0,0);return this.setYearFrom0To100(e,i),e}if(n){const e=new Date(i,s-1,o,23,59,59);return this.setYearFrom0To100(e,i),e}{const t=Date.parse(e),n=6e4*(new Date).getTimezoneOffset();return new Date(t+n)}}}convertDateToISO(e){if(e){const t=e.getFullYear(),n=e.getMonth()+1,i=e.getDate()<10?"0"+e.getDate():e.getDate(),s=n<10?"0"+n:n;return this.formatYear(t)+"-"+s+"-"+i}return null}formatYear(e){return e>999?e.toString():e>99&&e<1e3?`0${e}`:e>9&&e<100?`00${e}`:e>=0&&e<10?`000${e}`:void 0}getDateFromIso(e){const t=parseInt(e.substring(8,10),10),n=parseInt(e.substring(5,7),10);return{year:parseInt(e.substring(0,4),10),month:n,day:t}}getDateForDateRange(e,t){const n=t?[0,0,0]:[23,59,59];if(e instanceof Date){const{year:t,month:i,day:s}=this.splitDate(e),o=new Date(t,i,s,...n);return this.setYearFrom0To100(o,t),o}if(this.isValidIso(e))return this.convertIsoToDate(e,t,!t)}isDateRangeValid(e="",t=""){const n=e.split("-").map(e=>parseInt(e,10)),i=t.split("-").map(e=>parseInt(e,10));for(let s=0;s<=n.length;s++){if(n[s]>i[s])return!0;if(n[s]<i[s])return!1}return!0}isValidIso(e){return this.dateRegex.test(e)||this.isoRegex.test(e)}setYearFrom0To100(e,t){t>=0&&t<100&&e.setFullYear(t)}splitDate(e){return{year:e.getFullYear(),month:e.getMonth(),day:e.getDate()}}validateDateRange(e,t,n){return t&&n?e>=t&&e<=n:t&&!n?e>=t:!(!t&&n)||e<=n}validateDate(e){const t=e instanceof Date?this.convertDateToISO(e):e;return this.isValidIso(t)?t:void 0}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=he({factory:function(){return new e},token:e,providedIn:"root"}),e})(),$S=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[BS]}),e})();var HS=function(e){return e.Range="range",e}({});let US=(()=>{class e{constructor(e,t){this.poDate=e,this.languageService=t,this.change=new ec,this.onTouched=null,this.propagateChange=null,this.today=new Date,this._locale=this.languageService.getShortLanguage(),this.shortLanguage=t.getShortLanguage()}set locale(e){this._locale=UD.includes(e)?e:this.shortLanguage}get locale(){return this._locale}set maxDate(e){this._maxDate=this.poDate.getDateForDateRange(e,!1)}get maxDate(){return this._maxDate}set minDate(e){this._minDate=this.poDate.getDateForDateRange(e,!0)}get minDate(){return this._minDate}set mode(e){this._mode=e,this.setActivateDate()}get mode(){return this._mode}get isRange(){return this.mode===HS.Range}setActivateDate(e){if(this.isRange){const t=new Date(e||this.today),n=new Date(new Date(t).setMonth(t.getMonth()+1));this.activateDate={start:t,end:n}}else this.activateDate=e instanceof Date?new Date(e):new Date(e||this.today)}}return e.\u0275fac=function(t){return new(t||e)(Ar(BS),Ar(pS))},e.\u0275dir=Ke({type:e,inputs:{locale:["p-locale","locale"],maxDate:["p-max-date","maxDate"],minDate:["p-min-date","minDate"],mode:["p-mode","mode"]},outputs:{change:"p-change"}}),e})();const qS=[{provide:Pv,useExisting:se(()=>zS),multi:!0},{provide:jv,useExisting:se(()=>zS),multi:!0}];let zS=(()=>{class e extends US{constructor(e,t,n){super(t,n),this.changeDetector=e}get isResponsive(){return window.innerWidth<600}ngOnInit(){this.setActivateDate()}getActivateDate(e){return this.isRange&&this.activateDate?this.activateDate[e]:this.activateDate}getValue(e){return this.isRange&&this.value?this.value[e]:this.value}onSelectDate(e,t){var n;let i;this.isRange?(i=this.getValueFromSelectedDate(e),"end"===t&&(!(null===(n=this.value)||void 0===n?void 0:n.start)||this.value.start&&this.value.end)&&this.setActivateDate(e)):i=e,this.value=i;const s=this.convertDateToISO(this.value);this.updateModel(s),this.change.emit(s)}onHeaderChange({month:e,year:t},n){if(this.isRange){let i,s;const{start:o,end:r}=this.activateDate;if("end"===n){const n=0===e?t-1:t;i=new Date(new Date(o.setMonth(e-1)).setFullYear(n)),s=new Date(new Date(r.setMonth(e)).setFullYear(t))}else{const n=11===e?t+1:t;s=new Date(new Date(r.setMonth(e+1)).setFullYear(n)),i=new Date(new Date(o.setMonth(e)).setFullYear(t))}this.activateDate={start:i,end:s}}}registerOnChange(e){this.propagateChange=e}registerOnTouched(e){this.onTouched=e}validate(e){return null}writeValue(e){e?this.writeDate(e):this.value=null;const t=this.getValidateStartDate(e);this.setActivateDate(t),this.changeDetector.markForCheck()}getValidateStartDate(e){return this.isRange?(null==e?void 0:e.start)||null:e instanceof Date||"string"==typeof e?e:null}getValueFromSelectedDate(e){var t;return!(null===(t=this.value)||void 0===t?void 0:t.start)||this.value.start>e||this.value.end&&this.value.start?{start:new Date(e),end:null}:{start:new Date(this.value.start),end:new Date(e)}}convertDateToISO(e){return this.isRange?{start:(null==e?void 0:e.start)instanceof Date?this.poDate.convertDateToISO(e.start):null,end:(null==e?void 0:e.end)instanceof Date?this.poDate.convertDateToISO(e.end):null}:this.poDate.convertDateToISO(e)}convertDateFromIso(e){if(e&&"string"==typeof e){const{year:t,month:n,day:i}=this.poDate.getDateFromIso(e),s=new Date(t,n-1,i);return this.poDate.setYearFrom0To100(s,t),s}return null}updateModel(e){this.propagateChange&&this.propagateChange(e)}writeDate(e){if(this.isRange){const t=null==e?void 0:e.start,n=null==e?void 0:e.end,i=t instanceof Date?new Date(t):this.convertDateFromIso(t),s=n instanceof Date?new Date(n):this.convertDateFromIso(n);this.value={start:i,end:s}}else this.value=e instanceof Date?new Date(e):this.convertDateFromIso(e)}}return e.\u0275fac=function(t){return new(t||e)(Ar(gl),Ar(BS),Ar(pS))},e.\u0275cmp=He({type:e,selectors:[["po-calendar"]],features:[La(qS),ur],decls:7,vars:3,consts:[[4,"ngIf","ngIfThen","ngIfElse"],["rangeTemplate",""],["calendarTemplate",""],["calendarWrapper",""],[1,"po-calendar-range"],[4,"ngTemplateOutlet","ngTemplateOutletContext"],[4,"ngIf"],[1,"po-calendar"],[3,"ngTemplateOutlet"],[3,"p-value","p-activate-date","p-locale","p-min-date","p-max-date","p-part-type","p-range","p-responsive","p-selected-value","p-header-change","p-select-date"]],template:function(e,t){if(1&e&&(kr(0,iy,1,0,"ng-container",0),kr(1,cy,3,4,"ng-template",null,1,yc),kr(3,hy,2,1,"ng-template",null,2,yc),kr(5,dy,1,9,"ng-template",null,3,yc)),2&e){const e=xr(2),n=xr(4);Or("ngIf",t.isRange)("ngIfThen",e)("ngIfElse",n)}},directives:function(){return[Fh,jh,YS]},encapsulation:2,changeDetection:0}),e})(),WS=(()=>{class e{constructor(){this.hidePrevious=!1,this.hideNext=!1,this.previous=new ec,this.next=new ec}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=He({type:e,selectors:[["po-calendar-header"]],inputs:{hidePrevious:["p-hide-previous","hidePrevious"],hideNext:["p-hide-next","hideNext"]},outputs:{previous:"p-previous",next:"p-next"},ngContentSelectors:Wb,decls:5,vars:2,consts:[[1,"po-calendar-header"],["class","po-calendar-header-left po-icon po-icon-arrow-left",3,"click",4,"ngIf"],["attr-calendar","",1,"po-calendar-header-title"],["class","po-calendar-header-right po-icon po-icon-arrow-right",3,"click",4,"ngIf"],[1,"po-calendar-header-left","po-icon","po-icon-arrow-left",3,"click"],[1,"po-calendar-header-right","po-icon","po-icon-arrow-right",3,"click"]],template:function(e,t){1&e&&(zr(),Fr(0,"div",0),kr(1,py,1,0,"span",1),Fr(2,"div",2),Wr(3),Ir(),kr(4,fy,1,0,"span",3),Ir()),2&e&&(Zs(1),Or("ngIf",(null==t.previous?null:t.previous.observers)&&!t.hidePrevious),Zs(3),Or("ngIf",(null==t.next?null:t.next.observers.length)&&!t.hideNext))},directives:[Fh],encapsulation:2,changeDetection:0}),e})(),GS=(()=>{class e{constructor(){this.language=qD,this.months=[{pt:"Janeiro",en:"January",es:"Enero",ru:"\u042f\u043d\u0432\u0430\u0440\u044c"},{pt:"Fevereiro",en:"February",es:"Febrero",ru:"\u0424\u0435\u0432\u0440\u0430\u043b\u044c"},{pt:"Mar\xe7o",en:"March",es:"Marzo",ru:"\u041c\u0430\u0440\u0442"},{pt:"Abril",en:"April",es:"Abril",ru:"\u0410\u043f\u0440\u0435\u043b\u044c"},{pt:"Maio",en:"May",es:"Mayo",ru:"\u041c\u0430\u0439"},{pt:"Junho",en:"June",es:"Junio",ru:"\u0418\u044e\u043d\u044c"},{pt:"Julho",en:"July",es:"Julio",ru:"\u0418\u044e\u043b\u044c"},{pt:"Agosto",en:"August",es:"Agosto",ru:"\u0410\u0432\u0433\u0443\u0441\u0442"},{pt:"Setembro",en:"September",es:"Setiembre",ru:"\u0421\u0435\u043d\u0442\u044f\u0431\u0440\u044c"},{pt:"Outubro",en:"October",es:"Octubre",ru:"\u041e\u043a\u0442\u044f\u0431\u0440\u044c"},{pt:"Novembro",en:"November",es:"Noviembre",ru:"\u041d\u043e\u044f\u0431\u0440\u044c"},{pt:"Dezembro",en:"December",es:"Diciembre",ru:"\u0414\u0435\u043a\u0430\u0431\u0440\u044c"}],this.shortWeekDays=[{pt:"Dom",en:"Sun",es:"Dom",ru:"\u0412\u0441"},{pt:"Seg",en:"Mon",es:"Lun",ru:"\u041f\u043d"},{pt:"Ter",en:"Tue",es:"Mar",ru:"\u0412\u0442"},{pt:"Qua",en:"Wed",es:"Mi\xe9",ru:"\u0421\u0440"},{pt:"Qui",en:"Thu",es:"Jue",ru:"\u0427\u0442"},{pt:"Sex",en:"Fri",es:"Vie",ru:"\u041f\u0442"},{pt:"S\xe1b",en:"Sat",es:"S\xe1b",ru:"\u0421\u0431"}],this.monthLabel={pt:"M\xeas",en:"Month",es:"Mes",ru:"\u041c\u0435\u0441\u044f\u0446"},this.yearLabel={pt:"Ano",en:"Year",es:"A\xf1o",ru:"\u0413\u043e\u0434"}}getMonth(e){return this.months[e][this.language]}getMonthLabel(){return this.monthLabel[this.language]}getMonthsArray(){const e=Array();for(let t=0;t<this.months.length;t++)e.push(this.months[t][this.language]);return e}getWeekDays(e){return this.shortWeekDays[e][this.language]}getWeekDaysArray(){const e=Array();for(let t=0;t<this.shortWeekDays.length;t++)e.push(this.shortWeekDays[t][this.language].toLowerCase());return e}getYearLabel(){return this.yearLabel[this.language]}setLanguage(e){e&&e.length>=2&&(e=e.toLowerCase().slice(0,2),this.language=UD.includes(e)?e:qD)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=he({factory:function(){return new e},token:e,providedIn:"root"}),e})(),KS=(()=>{class e{monthDates(e,t,n=null,i=null){if("number"!=typeof t||t<0||t>11)throw Error("month must be a number (Jan is 0)");const s=[];let o=[],r=0,a=new Date(e,t,1);e>=0&&e<100&&a.setFullYear(e),a=this.weekStartDate(a);do{for(r=0;r<7;r++)o.push(n?n(a):a),a=new Date(a.getTime()),a.setDate(a.getDate()+1);s.push(i?i(o):o),o=[]}while(a.getMonth()<=t&&a.getFullYear()===e);return s}monthDays(e,t){return this.monthDates(e,t,function(e){return e.getMonth()===t?e:0})}weekStartDate(e){const t=new Date(e.getTime());for(;0!==t.getDay();)t.setDate(t.getDate()-1);return t}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),YS=(()=>{class e{constructor(e,t,n,i){this.poCalendarService=e,this.poCalendarLangService=t,this.poDate=n,this.languageService=i,this.mode="day",this.responsive=!1,this.range=!1,this.activateDate=new Date,this.headerChange=new ec,this.selectDate=new ec,this.displayMonths=Array(),this.displayWeekDays=Array(),this.today=new Date}set locale(e){this._locale=e,this.initializeLanguage()}get locale(){return this._locale}get monthLabel(){return this.poCalendarLangService.getMonthLabel()}get yearLabel(){return this.poCalendarLangService.getYearLabel()}get isDayVisible(){return"day"===this.mode}get isMonthVisible(){return"month"===this.mode}get isYearVisible(){return"year"===this.mode}get isStartPart(){return"start"===this.partType}get isEndPart(){return"end"===this.partType}ngOnInit(){this.init()}ngOnChanges(e){const{activateDate:t}=e;t&&this.updateDate(t.currentValue)}getBackgroundColor(e,t){return e===t?"po-calendar-box-background-selected":"po-calendar-box-background"}getDayBackgroundColor(e){return this.getDayColor(e,"background")}getDayForegroundColor(e){return this.getDayColor(e,"foreground")}getForegroundColor(e,t){return e===t?"po-calendar-box-foreground-selected":"po-calendar-box-foreground"}onNextMonth(){this.displayMonthNumber<11?this.updateDisplay(this.displayYear,this.displayMonthNumber+1):this.updateDisplay(this.displayYear+1,0),this.headerChange.emit({month:this.displayMonthNumber,year:this.displayYear})}onPreviousMonth(){this.displayMonthNumber>0?this.updateDisplay(this.displayYear,this.displayMonthNumber-1):this.updateDisplay(this.displayYear-1,11),this.headerChange.emit({month:this.displayMonthNumber,year:this.displayYear})}onSelectDate(e){this.selectDate.emit(e)}onSelectMonth(e,t){this.selectDisplayMode("day"),this.updateDisplay(e,t),this.headerChange.emit({month:t,year:e})}onSelectYear(e,t){this.selectDisplayMode("month"===this.lastDisplay?"month":"day"),this.currentYear=e,this.updateDisplay(e,t),this.headerChange.emit({month:t,year:e})}selectDisplayMode(e){this.lastDisplay=this.mode,this.mode=e}updateYear(e){this.updateDisplay(this.displayYear+e,this.displayMonthNumber)}addAllYearsInDecade(e){let t;for(t=e;t<e+10;t++)this.displayDecade.push(t)}equalsDate(e,t){try{return e.getFullYear()===t.getFullYear()&&e.getMonth()===t.getMonth()&&e.getDate()===t.getDate()}catch(n){return!1}}getDecadeArray(e){if(this.displayDecade=Array(),e%10!=0)for(;e%10!=0;)e--;this.updateDecade(e)}getColorForDate(e,t){return this.poDate.validateDateRange(e,this.minDate,this.maxDate)?`po-calendar-box-${t}-selected`:`po-calendar-box-${t}-selected-disabled`}getColorForDefaultDate(e,t){return this.poDate.validateDateRange(e,this.minDate,this.maxDate)?`po-calendar-box-${t}`:`po-calendar-box-${t}-disabled`}getColorForToday(e,t){return this.poDate.validateDateRange(e,this.minDate,this.maxDate)?`po-calendar-box-${t}-today`:`po-calendar-box-${t}-today-disabled`}getColorForDateRange(e,t){return this.poDate.validateDateRange(e,this.minDate,this.maxDate)?`po-calendar-box-${t}-in-range`:`po-calendar-box-${t}-in-range-disabled`}getDayColor(e,t){var n,i;const s=null===(n=this.selectedValue)||void 0===n?void 0:n.start,o=null===(i=this.selectedValue)||void 0===i?void 0:i.end;return this.range&&(this.equalsDate(e,s)||this.equalsDate(e,o))?this.getColorForDate(e,t):this.range&&s&&o&&e>s&&e<o?this.getColorForDateRange(e,t):!this.range&&this.equalsDate(e,this.value)?this.getColorForDate(e,t):this.equalsDate(e,this.today)?this.getColorForToday(e,t):this.getColorForDefaultDate(e,t)}init(){this.updateDate(this.activateDate),this.initializeLanguage(),this.selectDisplayMode("day")}initializeLanguage(){this.poCalendarLangService.setLanguage(this.locale),this.displayWeekDays=this.poCalendarLangService.getWeekDaysArray(),this.displayMonths=this.poCalendarLangService.getMonthsArray(),this.displayMonth=this.displayMonths[this.displayMonthNumber]}updateDate(e=new Date){const t=new Date(e);this.currentMonthNumber=t.getMonth(),this.currentYear=t.getFullYear(),this.updateDisplay(this.currentYear,this.currentMonthNumber)}updateDecade(e){this.addAllYearsInDecade(e),this.displayStartDecade=e,this.displayFinalDecade=e+9}updateDisplay(e,t){const n=this.poCalendarService.monthDays(e,t);this.displayDays=[].concat.apply([],n),this.displayMonthNumber=t,this.displayMonth=this.displayMonths[t],this.displayYear=e,this.getDecadeArray(e)}}return e.\u0275fac=function(t){return new(t||e)(Ar(KS),Ar(GS),Ar(BS),Ar(pS))},e.\u0275cmp=He({type:e,selectors:[["po-calendar-wrapper"]],inputs:{mode:["p-mode","mode"],responsive:["p-responsive","responsive"],range:["p-range","range"],activateDate:["p-activate-date","activateDate"],locale:["p-locale","locale"],value:["p-value","value"],partType:["p-part-type","partType"],selectedValue:["p-selected-value","selectedValue"],minDate:["p-min-date","minDate"],maxDate:["p-max-date","maxDate"]},outputs:{headerChange:"p-header-change",selectDate:"p-select-date"},features:[La([KS]),lt],decls:4,vars:3,consts:[[1,"po-calendar-wrapper"],[4,"ngIf"],[3,"p-hide-previous","p-hide-next","p-previous","p-next"],[1,"po-clickable","po-mr-1",3,"click"],[1,"po-clickable",3,"click"],[1,"po-calendar-content"],[1,"po-calendar-labels"],["class","po-calendar-label",4,"ngFor","ngForOf"],[1,"po-calendar-content-list-day"],["class","po-calendar-day","attr-calendar","",3,"ngClass","click",4,"ngFor","ngForOf"],[1,"po-calendar-label"],["attr-calendar","",1,"po-calendar-day",3,"ngClass","click"],[3,"ngClass",4,"ngIf"],[3,"ngClass"],[3,"p-previous","p-next"],[1,"po-calendar-content-list-month"],["class","po-calendar-month","attr-calendar","",3,"ngClass","click",4,"ngFor","ngForOf"],["attr-calendar","",1,"po-calendar-month",3,"ngClass","click"],[1,"po-calendar-content-list-year"],["class","po-calendar-year","attr-calendar","",3,"ngClass","click",4,"ngFor","ngForOf"],["attr-calendar","",1,"po-calendar-year",3,"ngClass","click"]],template:function(e,t){1&e&&(Fr(0,"div",0),kr(1,by,11,6,"ng-container",1),kr(2,Cy,10,3,"ng-container",1),kr(3,_y,9,4,"ng-container",1),Ir()),2&e&&(Zs(1),Or("ngIf",t.isDayVisible),Zs(1),Or("ngIf",t.isMonthVisible),Zs(1),Or("ngIf",t.isYearVisible))},directives:[Fh,WS,Oh,xh],encapsulation:2,changeDetection:0}),e})(),ZS=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh]]}),e})();Math,Math,Math.floor(25);var QS=function(e){return e.Color01="color-01",e.Color02="color-02",e.Color03="color-03",e.Color04="color-04",e.Color05="color-05",e.Color06="color-06",e.Color07="color-07",e.Color08="color-08",e.Color09="color-09",e.Color10="color-10",e.Color11="color-11",e.Color12="color-12",e}({});Object.values(QS),Math,Math.floor(25),Math,Math;let JS=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh,jS]]}),e})(),XS=(()=>{class e{constructor(){this._noBorder=!1,this._noPadding=!1,this._noShadow=!1}set height(e){this._height=ZD(e)}get height(){return this._height}set noBorder(e){this._noBorder=YD(e)}get noBorder(){return this._noBorder}set noPadding(e){this._noPadding=YD(e)}get noPadding(){return this._noPadding}set noShadow(e){this._noShadow=YD(e)}get noShadow(){return this._noShadow}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,inputs:{height:["p-height","height"],noBorder:["p-no-border","noBorder"],noPadding:["p-no-padding","noPadding"],noShadow:["p-no-shadow","noShadow"]}}),e})(),eE=(()=>{class e extends XS{}return e.\u0275fac=function(){let t;return function(n){return(t||(t=$n(e)))(n||e)}}(),e.\u0275cmp=He({type:e,selectors:[["po-container"]],features:[ur],ngContentSelectors:Wb,decls:2,vars:8,consts:[[1,"po-container"]],template:function(e,t){1&e&&(zr(),Fr(0,"div",0),Wr(1),Ir()),2&e&&(Xr("height",t.height?t.height+"px":"auto"),ea("po-container-no-border",t.noBorder)("po-container-no-padding",t.noPadding)("po-container-no-shadow",t.noShadow))},encapsulation:2}),e})(),tE=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh]]}),e})();const nE=["default","danger"];let iE=(()=>{class e{constructor(){this.closeAction=new ec,this.showDisclaimer=!0,this._type="default",this._hideClose=!1}set hideClose(e){this._hideClose=""===e||YD(e)}get hideClose(){return this._hideClose}set type(e){this._type=nE.includes(e)?e:"default"}get type(){return this._type}close(){this.showDisclaimer=!1,this.closeAction.emit({value:this.value,label:this.label,property:this.property})}getLabel(){return this.label?this.label:this.value}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,inputs:{hideClose:["p-hide-close","hideClose"],type:["p-type","type"],label:["p-label","label"],value:["p-value","value"],property:["p-property","property"]},outputs:{closeAction:"p-close-action"}}),e})(),sE=(()=>{class e extends iE{onKeyPress(e){nS(e)&&this.close()}}return e.\u0275fac=function(){let t;return function(n){return(t||(t=$n(e)))(n||e)}}(),e.\u0275cmp=He({type:e,selectors:[["po-disclaimer"]],features:[ur],decls:1,vars:1,consts:[["class","po-disclaimer",4,"ngIf"],[1,"po-disclaimer"],[1,"po-disclaimer-label"],["class","po-disclaimer-remove po-icon po-icon-close po-clickable","tabindex","0",3,"po-disclaimer-remove-danger","click","keydown",4,"ngIf"],["tabindex","0",1,"po-disclaimer-remove","po-icon","po-icon-close","po-clickable",3,"click","keydown"]],template:function(e,t){1&e&&kr(0,Sy,4,4,"div",0),2&e&&Or("ngIf",!0===t.showDisclaimer)},directives:[Fh],encapsulation:2}),e})(),oE=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh]]}),e})();const rE={en:{removeAll:"Remove all"},es:{removeAll:"Eliminar todos"},pt:{removeAll:"Remover todos"},ru:{removeAll:"\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0432\u0441\u0435"}};let aE=(()=>{class e{constructor(e,t){this.change=new ec,this.remove=new ec,this.removeAll=new ec,this._disclaimers=[],this._hideRemoveAll=!1,this.previousDisclaimers=[];const n=t.getShortLanguage();this.differ=e.find([]).create(null),this.literals=Object.assign(Object.assign({},rE.pt),rE[n])}set disclaimers(e){this.previousDisclaimers=[...this.disclaimers],this._disclaimers=this.checkDisclaimers(e)}get disclaimers(){return this._disclaimers}set hideRemoveAll(e){this._hideRemoveAll=""===e||YD(e)}get hideRemoveAll(){return this._hideRemoveAll}ngDoCheck(){this.checkChanges()}onCloseAction(e){this.removeDisclaimer(e),this.emitChangeDisclaimers(),this.remove.emit({removedDisclaimer:Object.assign({},e),currentDisclaimers:[...this.disclaimers]})}isRemoveAll(){return!this.hideRemoveAll&&this.disclaimers.filter(e=>!e.hideClose).length>1}onKeyPress(e){nS(e)&&this.removeAllItems()}removeAllItems(){const e=[];this.disclaimers.forEach(t=>{t.hideClose||e.push(t)}),e.forEach(e=>this.removeDisclaimer(e)),this.emitChangeDisclaimers(),this.removeAll.emit([...e])}removeDisclaimer(e){const t=this.disclaimers.findIndex(t=>t.$id===e.$id);this.disclaimers.splice(t,1)}checkChanges(){this.differ&&this.differ.diff(this.disclaimers)&&this.disclaimersAreChanged(this.disclaimers)&&this.emitChangeDisclaimers()}checkDisclaimers(e){if(Array.isArray(e)){for(let t=0;t<e.length;t++){const n=e[t];n.value||0===n.value||!1===n.value?n.$id=lS():(e.splice(t,1),t--)}return e}return[]}disclaimersAreChanged(e){return e.length!==this.previousDisclaimers.length||e.some((e,t)=>e.value!==this.previousDisclaimers[t].value||e.property!==this.previousDisclaimers[t].property)}emitChangeDisclaimers(){setTimeout(()=>{this.change.emit(this.disclaimers)}),this.previousDisclaimers=[...this._disclaimers]}}return e.\u0275fac=function(t){return new(t||e)(Ar(ll),Ar(pS))},e.\u0275dir=Ke({type:e,inputs:{disclaimers:["p-disclaimers","disclaimers"],hideRemoveAll:["p-hide-remove-all","hideRemoveAll"],title:["p-title","title"]},outputs:{change:"p-change",remove:"p-remove",removeAll:"p-remove-all"}}),e})(),lE=(()=>{class e extends aE{constructor(e,t){super(e,t)}}return e.\u0275fac=function(t){return new(t||e)(Ar(ll),Ar(pS))},e.\u0275cmp=He({type:e,selectors:[["po-disclaimer-group"]],features:[ur],decls:1,vars:1,consts:[["class","po-disclaimer-group",4,"ngIf"],[1,"po-disclaimer-group"],[1,"po-disclaimer-group-title"],["class","po-disclaimer-group-disclaimer-align",3,"p-label","keydown","p-remove-all-action",4,"ngIf"],["class","po-disclaimer-group-disclaimer-align",3,"p-hide-close","p-label","p-property","p-value","p-close-action",4,"ngFor","ngForOf"],[1,"po-disclaimer-group-disclaimer-align",3,"p-label","keydown","p-remove-all-action"],[1,"po-disclaimer-group-disclaimer-align",3,"p-hide-close","p-label","p-property","p-value","p-close-action"]],template:function(e,t){1&e&&kr(0,xy,5,3,"div",0),2&e&&Or("ngIf",t.disclaimers.length>0)},directives:function(){return[Fh,Oh,cE,sE]},encapsulation:2}),e})(),cE=(()=>{class e{constructor(){this.removeAllAction=new ec}removeAction(){this.removeAllAction.emit()}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=He({type:e,selectors:[["po-disclaimer-remove"]],inputs:{label:["p-label","label"]},outputs:{removeAllAction:"p-remove-all-action"},decls:1,vars:1,consts:[["tabindex","0","p-hide-close","true","p-type","danger",1,"po-clickable",3,"p-label","click"]],template:function(e,t){1&e&&(Fr(0,"po-disclaimer",0),Br("click",function(){return t.removeAction()}),Ir()),2&e&&Or("p-label",t.label)},directives:[sE],encapsulation:2}),e})(),uE=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh,oE]]}),e})(),hE=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,inputs:{label:["p-label","label"]}}),e})(),dE=(()=>{class e extends hE{}return e.\u0275fac=function(){let t;return function(n){return(t||(t=$n(e)))(n||e)}}(),e.\u0275cmp=He({type:e,selectors:[["po-divider"]],features:[ur],decls:2,vars:1,consts:[[1,"po-divider"],["class","po-divider-label",4,"ngIf"],[1,"po-divider-label"]],template:function(e,t){1&e&&(Fr(0,"div",0),kr(1,Ay,2,1,"div",1),Ir()),2&e&&(Zs(1),Or("ngIf",t.label))},directives:[Fh],encapsulation:2,changeDetection:0}),e})(),pE=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh]]}),e})();const fE="bottom-left";let gE=(()=>{class e{constructor(){this.arrowDirection="top-right",this.showPopup=!1,this._hideArrow=!1,this._isCornerAlign=!1,this._position=fE}set actions(e){this._actions=Array.isArray(e)?e:[]}get actions(){return this._actions}set hideArrow(e){this._hideArrow=YD(e)}get hideArrow(){return this._hideArrow}set isCornerAlign(e){this._isCornerAlign=YD(e)}get isCornerAlign(){return this._isCornerAlign}set position(e){this._position=IS.includes(e)?e:fE}get position(){return this._position}set customPositions(e){this._customPositions=Array.isArray(e)?e:[]}get customPositions(){return this._customPositions}set target(e){this._target=e instanceof Ua?e.nativeElement:e}get target(){return this._target}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,inputs:{actions:["p-actions","actions"],hideArrow:["p-hide-arrow","hideArrow"],isCornerAlign:["p-is-corner-align","isCornerAlign"],position:["p-position","position"],customPositions:["p-custom-positions","customPositions"],target:["p-target","target"]}}),e})(),mE=(()=>{class e extends gE{constructor(e,t,n,i,s){super(),this.renderer=t,this.router=n,this.poControlPosition=i,this.changeDetector=s,this.onScroll=({target:e})=>{this.showPopup&&"po-popup-container"!==e.className&&this.close()}}close(){this.removeListeners(),this.showPopup=!1}onActionClick(e){const t=e&&!this.returnBooleanValue(e,"disabled");if(e&&e.action&&t&&(this.close(),e.action(this.param||e)),e&&e.url&&t)return this.close(),this.openUrl(e.url)}open(e){this.oldTarget=this.target,this.param=e,this.showPopup=!0,this.changeDetector.detectChanges(),this.validateInitialContent()}returnBooleanValue(e,t){return QD(e[t],"function")?e[t](this.param||e):e[t]}toggle(e){this.showPopup&&this.oldTarget===this.target?this.close():this.open(e)}clickedOutDisabledItem(e){return!(this.elementContains(e.target,"po-popup-item-disabled")||this.elementContains(e.target.parentElement,"po-popup-item-disabled"))}clickedOutHeaderTemplate(e){const t=this.popupRef&&this.popupRef.nativeElement.querySelector("[p-popup-header-template]");return!(t&&t.contains(e.target))}clickedOutTarget(e){return this.target&&!this.target.contains(e.target)}closePopupOnClickout(e){this.clickedOutTarget(e)&&this.clickedOutDisabledItem(e)&&this.clickedOutHeaderTemplate(e)&&this.close()}elementContains(e,t){return e&&e.classList.contains(t)}hasContentToShow(){return!(!this.popupRef.nativeElement||!this.popupRef.nativeElement.clientHeight)}initializeListeners(){this.resizeListener=this.renderer.listen("window","resize",()=>{this.close()}),this.clickoutListener=this.renderer.listen("document","click",e=>{this.closePopupOnClickout(e)}),window.addEventListener("scroll",this.onScroll,!0)}openUrl(e){return aS(e)?function(e){window.open(e,"_blank")}(e):e?this.router.navigate([e]):void 0}removeListeners(){this.clickoutListener&&this.clickoutListener(),this.resizeListener&&this.resizeListener(),window.removeEventListener("scroll",this.onScroll,!0)}setPosition(){this.poControlPosition.setElements(this.popupRef.nativeElement,8,this.target,this.customPositions,!1,this.isCornerAlign),this.poControlPosition.adjustPosition(this.position),this.arrowDirection=this.poControlPosition.getArrowDirection()}validateInitialContent(){this.hasContentToShow()?(this.setPosition(),this.initializeListeners()):this.close()}}return e.\u0275fac=function(t){return new(t||e)(Ar(xl),Ar(Wa),Ar(Om),Ar(VS),Ar(gl))},e.\u0275cmp=He({type:e,selectors:[["po-popup"]],viewQuery:function(e,t){if(1&e&&pc(Oy,5,Ua),2&e){let e;dc(e=gc())&&(t.popupRef=e.first)}},features:[La([VS]),ur],ngContentSelectors:Ly,decls:1,vars:1,consts:[["class","po-popup",4,"ngIf"],[1,"po-popup"],["popupRef",""],[3,"class",4,"ngIf"],[1,"po-popup-container"],[4,"ngFor","ngForOf"],[3,"po-popup-item-default","po-popup-item-danger","po-popup-item-disabled","po-popup-item-separator","po-popup-item-selected","click",4,"ngIf"],[3,"click"],["class","po-popup-icon-item po-icon",3,"p-icon",4,"ngIf"],[1,"po-popup-icon-item","po-icon",3,"p-icon"]],template:function(e,t){1&e&&(zr(Vy),kr(0,Py,6,2,"div",0)),2&e&&Or("ngIf",t.showPopup)},directives:[Fh,Oh,gS],encapsulation:2}),e})(),vE=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[],imports:[[Gh,mS]]}),e})(),bE=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh,vE]]}),e})(),yE=(()=>{class e{constructor(){this.errorPattern=""}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=He({type:e,selectors:[["po-field-container-bottom"]],inputs:{errorPattern:["p-error-pattern","errorPattern"]},decls:2,vars:1,consts:[[1,"po-field-container-bottom"],["class","po-field-container-bottom-text-error",4,"ngIf"],[1,"po-field-container-bottom-text-error"],[1,"po-icon","po-icon-warning","po-field-container-icon-error"]],template:function(e,t){1&e&&(Fr(0,"div",0),kr(1,Ry,3,1,"span",1),Ir()),2&e&&(Zs(1),Or("ngIf",t.errorPattern))},directives:[Fh],encapsulation:2,changeDetection:0}),e})();const CE={en:{optional:"(Optional)"},es:{optional:"(Opcional)"},pt:{optional:"(Opcional)"},ru:{optional:"(\u041f\u043e\u0436\u0435\u043b\u0430\u043d\u0438\u044e)"}};let wE=(()=>{class e{constructor(e){this._optional=!1;const t=e.getShortLanguage();this.literals=Object.assign({},CE[t])}set optional(e){this._optional=YD(e)}get optional(){return this._optional}}return e.\u0275fac=function(t){return new(t||e)(Ar(pS))},e.\u0275cmp=He({type:e,selectors:[["po-field-container"]],inputs:{optional:["p-optional","optional"],label:["p-label","label"],help:["p-help","help"]},ngContentSelectors:Wb,decls:7,vars:3,consts:[[1,"po-field-container"],[1,"po-field-container-title"],[1,"po-field-title"],["class","po-field-optional",4,"ngIf"],["class","po-field-help",4,"ngIf"],[1,"po-field-optional"],[1,"po-field-help"]],template:function(e,t){1&e&&(zr(),Fr(0,"div",0),Fr(1,"div",1),Fr(2,"span",2),pa(3),Ir(),kr(4,jy,2,1,"span",3),Ir(),kr(5,Ny,2,1,"div",4),Wr(6),Ir()),2&e&&(Zs(3),fa(t.label),Zs(1),Or("ngIf",t.optional&&(t.label||t.help)),Zs(1),Or("ngIf",t.help))},directives:[Fh],encapsulation:2,changeDetection:0}),e})(),_E=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh]]}),e})();function DE(e,t,n){return e&&!t&&!("string"==typeof n&&n||"object"==typeof n&&n&&n.length||"number"==typeof n&&(n||0===n)||"boolean"==typeof n&&n)}function SE(e,t){const n=e||0===e,i=(t||0===t)&&t.toString();return n&&i&&i.length>Number(e)}function EE(e,t){const n=e||0===e,i=(t||0===t)&&t.toString();return n&&i&&i.length<Number(e)}function kE(e,t){return(t||0===t)&&(e||0===e)&&t<e}function xE(e,t){return(t||0===t)&&(e||0===e)&&t>e}let AE=(()=>{class e{constructor(){this.autoFocus=!1,this.ngModelChange=new ec,this.change=new ec,this.checkedOptions={},this.checkedOptionsList=[],this.mdColumns=6,this._columns=6,this._disabled=!1,this._indeterminate=!1,this._required=!1}set columns(e){const t=ZD(e,6);this._columns=this.getGridSystemColumns(t,4),this.mdColumns=this.getGridSystemColumns(t,2)}get columns(){return this._columns}set disabled(e){this._disabled=YD(e),this.validateModel(this.checkIndeterminate())}get disabled(){return this._disabled}set indeterminate(e){this._indeterminate=YD(e)}get indeterminate(){return this._indeterminate}set options(e){this._options=Array.isArray(e)?e:[],this.removeDuplicatedOptions(),this.setCheckboxGroupOptionsView(this.options)}get options(){return this._options}set required(e){this._required=YD(e),this.validateModel(this.checkIndeterminate())}get required(){return this._required}changeValue(){const e=this.checkIndeterminate();this.propagateChange?this.propagateChange(e):this.ngModelChange.emit(e),this.change.emit(e)}checkIndeterminate(){return this.indeterminate?this.checkedOptions:this.checkedOptionsList}checkOption(e){this._disabled||e.disabled||(this.checkOptionModel(e),this.changeValue())}setDisabledState(e){this.disabled=e}registerOnChange(e){this.propagateChange=e}registerOnTouched(e){}writeValue(e){e&&this.checkedOptions!==e?this.generateCheckOptions(e):(this.checkedOptionsList=[],this.checkedOptions={})}registerOnValidatorChange(e){this.validatorChange=e}validate(e){if(!this.indeterminate&&DE(this.required,this.disabled,e.value)||this.isInvalidIndeterminate())return{required:{valid:!1}}}validateModel(e){this.validatorChange&&this.validatorChange(e)}checkColumnsRange(e,t){return e>=1&&e<=t}checkOptionModel(e){this.checkedOptions[e.value]=!this.checkedOptions[e.value],!this.indeterminate&&this.checkedOptionsList.includes(e.value)?this.checkedOptionsList.splice(this.checkedOptionsList.indexOf(e.value),1):this.indeterminate||this.checkedOptionsList.push(e.value)}generateCheckOptions(e){this.checkedOptions={},e instanceof Array?(this.checkedOptionsList=e,this.options.forEach(t=>{this.checkedOptions[t.value]=e.includes(t.value)})):this.options.forEach(t=>{e[t.value]=void 0!==e[t.value]&&e[t.value],this.checkedOptions=e})}getGridSystemColumns(e,t){const n=12/e;return this.checkColumnsRange(e,t)?n:6}isInvalidIndeterminate(){return!!(this.indeterminate&&this.required&&this.checkedOptions)&&Object.values(this.checkedOptions).every(e=>!1===e)}removeDuplicatedOptions(){this.options.forEach((e,t)=>{this.options.findIndex(t=>t.value===e.value)===t||this.options.splice(this.options.indexOf(e),1)})}setCheckboxGroupOptionsView(e){this.checkboxGroupOptionsView=e.map(e=>Object.assign(Object.assign({},e),{id:lS()}))}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,inputs:{autoFocus:["p-auto-focus","autoFocus"],columns:["p-columns","columns"],disabled:["p-disabled","disabled"],indeterminate:["p-indeterminate","indeterminate"],options:["p-options","options"],required:["p-required","required"],name:"name",help:["p-help","help"],label:["p-label","label"],optional:["p-optional","optional"]},outputs:{ngModelChange:"ngModelChange",change:"p-change"}}),Ov([xS()],e.prototype,"autoFocus",void 0),e})(),OE=(()=>{class e extends AE{constructor(e){super(),this.changeDetector=e}ngAfterViewChecked(){this.changeDetector.detectChanges()}ngAfterViewInit(){this.autoFocus&&this.focus()}focus(){if(this.checkboxLabels&&!this.disabled){const e=this.checkboxLabels.find((e,t)=>!this.options[t].disabled);e&&e.nativeElement.focus()}}onKeyDown(e,t){32!==e.which&&32!==e.keyCode||(this.checkOption(t),e.preventDefault())}trackByFn(e){return e}}return e.\u0275fac=function(t){return new(t||e)(Ar(gl))},e.\u0275cmp=He({type:e,selectors:[["po-checkbox-group"]],viewQuery:function(e,t){if(1&e&&pc(By,5),2&e){let e;dc(e=gc())&&(t.checkboxLabels=e)}},features:[La([{provide:Pv,useExisting:se(()=>e),multi:!0},{provide:jv,useExisting:se(()=>e),multi:!0}]),ur],decls:5,vars:5,consts:[[3,"p-help","p-label","p-optional"],[1,"po-field-container-content","po-checkbox-group-content"],[1,"po-row","po-pt-1","po-pb-1"],[3,"class","po-checkbox-group-item-disabled",4,"ngFor","ngForOf","ngForTrackBy"],["type","checkbox",1,"po-input","po-checkbox-group-input",3,"checked","disabled","id","required","value"],[1,"po-checkbox-group-label",3,"for","tabindex","click","keydown"],["checkboxLabel",""]],template:function(e,t){1&e&&(Fr(0,"po-field-container",0),Fr(1,"div",1),Fr(2,"div",2),kr(3,$y,5,20,"div",3),Ir(),Ir(),Mr(4,"po-field-container-bottom"),Ir()),2&e&&(Or("p-help",t.help)("p-label",t.label)("p-optional",!t.required&&t.optional),Zs(3),Or("ngForOf",t.checkboxGroupOptionsView)("ngForTrackBy",t.trackByFn))},directives:[wE,Oh,yE],encapsulation:2,changeDetection:0}),e})(),TE=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh,Vb,_E]]}),e})(),FE=(()=>{class e{constructor(){this.defaultValue="",this.changeEvent=new ec}clear(){this.setInputValue(this.defaultValue),this.changeEvent.emit(this.defaultValue)}showIcon(){return this.defaultValue!==this.getInputValue()}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,inputs:{defaultValue:["p-default-value","defaultValue"],inputRef:["p-element-ref","inputRef"]},outputs:{changeEvent:"p-change-event"}}),e})(),IE=(()=>{class e extends FE{setInputValue(e){this.inputRef&&this.inputRef.nativeElement&&(this.inputRef.nativeElement.value=e)}getInputValue(){if(this.inputRef&&this.inputRef.nativeElement)return this.inputRef.nativeElement.value}}return e.\u0275fac=function(){let t;return function(n){return(t||(t=$n(e)))(n||e)}}(),e.\u0275cmp=He({type:e,selectors:[["po-clean"]],features:[ur],decls:1,vars:1,consts:[["class","po-icon po-field-icon po-icon-close",3,"click",4,"ngIf"],[1,"po-icon","po-field-icon","po-icon-close",3,"click"]],template:function(e,t){1&e&&kr(0,Hy,1,0,"span",0),2&e&&Or("ngIf",t.showIcon())},directives:[Fh],encapsulation:2}),e})(),ME=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh]]}),e})();class PE{constructor(e,t){this.mask="",this.formatModel=!1,this.initialPosition=0,this.finalPosition=0,this.pattern="",this.mask=e,this.formatModel=t,this.pattern=this.getRegexFromMask(e)}get getPattern(){return this.pattern}get getValueToInput(){return this.valueToInput}set setValueToInput(e){this.valueToInput=e}get getValueToModel(){return this.valueToModel}set setValueToModel(e){this.valueToModel=e}keyup(e){if(this.mask){const t=e.target.value;switch(17!==e.keyCode&&91!==e.keyCode||(e.target.value=this.controlFormatting(t),this.resetPositions(e)),e.preventDefault(),e.keyCode){case 37:this.initialPosition>0&&this.initialPosition--,this.setPositionNotShiftKey(e),this.setSelectionRange(e);break;case 39:this.initialPosition<t.toString().length&&this.initialPosition++,this.setPositionNotShiftKey(e),this.setSelectionRange(e);break;case 35:this.finalPosition=t.toString().length,e.shiftKey||(this.initialPosition=this.finalPosition),this.setPositions(e);break;case 36:e.shiftKey?(this.finalPosition=this.initialPosition,this.initialPosition=0,this.setPositions(e)):(this.initialPosition=0,this.finalPosition=0,this.setPositions(e))}}}setPositionNotShiftKey(e){e.shiftKey||(this.finalPosition=this.initialPosition)}setSelectionRange(e){this.initialPosition>this.finalPosition?e.target.setSelectionRange(this.finalPosition,this.initialPosition):e.target.setSelectionRange(this.initialPosition,this.finalPosition)}keydown(e){if(this.mask){let t=e.target.value;if(9===e.keyCode)return;if(e.ctrlKey||e.metaKey||e.preventDefault(),e.ctrlKey||e.metaKey&&86!==e.keyCode||e.keyCode>=37&&e.keyCode<=40||16===e.keyCode||9===e.keyCode)return;if(this.isKeyValid(e.keyCode))switch(null===this.finalPosition&&(this.finalPosition=this.initialPosition),this.revertPositions(this.initialPosition,this.finalPosition),e.keyCode){case 8:this.getPosition(e),this.initialPosition<0&&(this.initialPosition=0,this.setPositions(e)),this.initialPosition===this.finalPosition?(this.checkMaskBefore(e,-1),0!==this.initialPosition&&(t=t.slice(0,this.initialPosition-1)+t.slice(this.finalPosition),t=this.controlFormatting(t),e.target.value=t,this.changePosition(e,-1),this.checkMaskBefore(e,-1),this.setPositions(e),this.resetPositions(e))):this.clearRangeSelection(t,e,!0),this.setPositions(e);break;case 46:this.getPosition(e),this.initialPosition===this.finalPosition?(this.checkMaskAfter(e,1),t=t.slice(0,this.initialPosition)+t.slice(this.finalPosition+1),t=this.controlFormatting(t),e.target.value=t,this.setPositions(e),this.resetPositions(e)):this.clearRangeSelection(t,e,!1),this.setPositions(e);break;default:this.getPosition(e),t=t.slice(0,this.initialPosition)+e.key+t.slice(this.finalPosition),t=this.controlFormatting(t),e.target.value=t,this.changePosition(e,1),this.checkMaskBefore(e,1),this.setPositions(e),this.resetPositions(e),this.setPositions(e)}}}clearRangeSelection(e,t,n){e=e.slice(0,this.initialPosition)+e.slice(this.finalPosition),e=this.controlFormatting(e),t.target.value=e,n&&this.checkMaskBefore(t,-1),this.setPositions(t),this.resetPositions(t)}click(e){this.initialPosition=e.target.selectionStart,this.finalPosition=e.target.selectionEnd}blur(e){if(this.mask){let t=e.target.value;t=this.controlFormatting(t),e.target.value=t}}revertPositions(e,t){if(e>t){const n=e;this.initialPosition=t,this.finalPosition=n}}resetPositions(e){this.initialPosition=e.target.selectionStart,this.finalPosition=this.initialPosition}setPositions(e){e.target.setSelectionRange(this.initialPosition,this.finalPosition)}changePosition(e,t){this.initialPosition=this.initialPosition+t,this.finalPosition=this.finalPosition+t,this.setPositions(e)}getPosition(e){this.initialPosition=e.target.selectionStart,this.finalPosition=e.target.selectionEnd,this.setPositions(e)}controlFormatting(e){if(!e)return this.valueToInput="",this.valueToModel="","";let t,n=this.mask;const i=[];let s=0;for(;this.hasOptionalNumber(n);)i.push(n),n=this.replaceOptionalNumber(n);for(i.push(n),i.reverse(),this.formattingEnds=!1;!this.formattingEnds&&(this.formattingEnds=!0,i[s]);)t=this.formatValue(e,i[s]),s++;return t}formatValue(e,t){const n=(t=t.replace(/\?/g,"")).replace(this.listValidKeys(),"_");let i=0,s="";e=this.removeFormattingValue(e);for(let o=0;o<e.length;o++){const r=e[o];if(!n[i]){this.formattingEnds=!1;break}for(;this.isFixedCharacterGuide(n[i])&&n[i];)s+=n[i],i++;if(!this.isKeyValidMask(r,t[i]))break;s+=r,i++}return this.formatModel?(this.valueToInput=s,this.valueToModel=s):(this.valueToInput=s,this.valueToModel=this.removeFormattingValue(s)),s}checkMaskBefore(e,t){this.isFixedCharacterGuide(e.target.value.toString().charAt(this.initialPosition-1))&&(this.changePosition(e,t),this.checkMaskBefore(e,t))}checkMaskAfter(e,t){this.isFixedCharacterGuide(e.target.value.toString().charAt(this.initialPosition))&&(this.changePosition(e,t),this.checkMaskAfter(e,t))}replaceOptionalNumber(e){let t=9;for(;t>=0;){if(e.indexOf(t+"?")>-1)return e.replace(t+"?","");t--}return e}isFixedCharacterGuide(e){return this.testRegex(e,this.getFixedCharacterGuide())}getFixedCharacterGuide(){return/[\\\/() +-.\:]/g}listValidKeys(){return/[a-zA-Z0-9]/g}isKeyValid(e){return this.isKeyCodeValid(e)}isKeyCodeValid(e){return e>=48&&e<=57||e>=65&&e<=90||e>=96&&e<=105||8===e||9===e||46===e}isKeyValidMask(e,t){return this.testRegex(e,this.replaceMask(t))}testRegex(e,t){return t.test(e)}removeFormattingValue(e){return e.replace(this.getFixedCharacterGuide(),"")}hasOptionalNumber(e){return e.match(/\d\?/g)}replaceMask(e){let t=/./;switch(e){case"0":t=/[0]/;break;case"1":t=/[0-1]/;break;case"2":t=/[0-2]/;break;case"3":t=/[0-3]/;break;case"4":t=/[0-4]/;break;case"5":t=/[0-5]/;break;case"6":t=/[0-6]/;break;case"7":t=/[0-7]/;break;case"8":t=/[0-8]/;break;case"9":t=/[0-9]/;break;case" ":t=/\s/;break;case"@":t=/[a-zA-Z]/;break;case"w":t=/[a-zA-Z0-9]/}return t}getRegexFromMask(e){if(e){let t;return this.formatModel?(t=e.replace(/\\/g,"\\\\"),t=t.replace(/\+/g,"\\+"),t=t.replace(/\./g,"\\."),t=t.replace(/-/g,"-"),t=t.replace(/\(/g,"\\("),t=t.replace(/\)/g,"\\)"),t=t.replace(/\//g,"\\/"),t=t.replace(/\s/g,"\\s"),t=t.replace(/:/g,"\\:"),t=t.replace(/\@(?!\s)/g,"\\w"),t=t.replace(/\d/g,"\\w")):(t=e.replace(/\\/g,""),t=t.replace(/\+/g,""),t=t.replace(/\./g,""),t=t.replace(/-/g,""),t=t.replace(/\(/g,""),t=t.replace(/\)/g,""),t=t.replace(/\//g,""),t=t.replace(/\s/g,""),t=t.replace(/:/g,""),t=t.replace(/\@/g,"\\w"),t=t.replace(/\d/g,"\\w")),t}return null}}var VE=function(e){return e.Basic="basic",e.Extended="extended",e}({});const LE="dd/mm/yyyy";let RE=(()=>{class e{constructor(e){this.languageService=e,this.autoFocus=!1,this.errorPattern="",this.onblur=new ec,this.onchange=new ec,this.firstStart=!0,this.hour="T00:00:01-00:00",this.isExtendedISO=!1,this.onChangeModel=null,this.onTouchedModel=null,this._format=LE,this._noAutocomplete=!1,this._placeholder="",this.disabled=!1,this.readonly=!1,this.required=!1,this.clean=!1,this.shortLanguage=this.languageService.getShortLanguage()}set noAutocomplete(e){this._noAutocomplete=YD(e)}get noAutocomplete(){return this._noAutocomplete}set placeholder(e){this._placeholder=QD(e,"string")?e:""}get placeholder(){return this._placeholder}set setDisabled(e){this.disabled=""===e||YD(e),this.validateModel(XD(this.date,this.hour))}set setReadonly(e){this.readonly=""===e||YD(e)}set setRequired(e){this.required=""===e||YD(e),this.validateModel(XD(this.date,this.hour))}set setClean(e){this.clean=""===e||YD(e)}set minDate(e){if(e instanceof Date){const t=e.getFullYear(),n=new Date(t,e.getMonth(),e.getDate(),0,0,0);iS(n,t),this._minDate=n}else this._minDate=JD(e,!0,!1);this.validateModel(XD(this.date,this.hour))}get minDate(){return this._minDate}set maxDate(e){if(e instanceof Date){const t=e.getFullYear(),n=new Date(t,e.getMonth(),e.getDate(),23,59,59);iS(n,t),this._maxDate=n}else this._maxDate=JD(e,!1,!0);this.validateModel(XD(this.date,this.hour))}get maxDate(){return this._maxDate}set format(e){if(e&&(e=e.toLowerCase()).match(/dd/)&&e.match(/mm/)&&e.match(/yyyy/))return this._format=e,this.objMask=this.buildMask(),void this.refreshValue(this.date);this._format=LE,this.objMask=this.buildMask()}get format(){return this._format}set isoFormat(e){Object.values(VE).includes(e)&&(this._isoFormat=e,this.isExtendedISO=e===VE.Extended)}get isoFormat(){return this._isoFormat}set locale(e){this._locale=e?e.length>=2?e:qD:this.shortLanguage}get locale(){return this._locale||this.shortLanguage}set date(e){this._date="string"==typeof e?JD(e,!1,!1):e}get date(){return this._date}ngOnInit(){this.objMask=this.buildMask()}getDateFromString(e){const t=parseInt(e.substring(this.format.indexOf("d"),this.format.indexOf("d")+2),10),n=parseInt(e.substring(this.format.indexOf("m"),this.format.indexOf("m")+2),10)-1,i=parseInt(e.substring(this.format.indexOf("y"),this.format.indexOf("y")+4),10),s=new Date(i,n,t);return iS(s,i),s.getFullYear()===i&&s.getMonth()===n&&s.getDate()===t?s:null}formatToDate(e){let t=this.format;return t=t.replace("dd",("0"+e.getDate()).slice(-2)),t=t.replace("mm",("0"+(e.getMonth()+1)).slice(-2)),t=t.replace("yyyy",eS(e.getFullYear())),t}controlModel(e){this.date=e,this.callOnChange(e&&this.isExtendedISO?XD(this.date,this.hour):e&&!this.isExtendedISO?function(e){if(e){const t=e.getMonth()+1,n=e.getDate()<10?"0"+e.getDate():e.getDate(),i=t<10?"0"+t:t;return eS(e.getFullYear())+"-"+i+"-"+n}return null}(this.date):void 0===e?"":"Data inv\xe1lida")}callOnChange(e,t=!0){this.onChangeModel&&e!==this.previousValue?(this.onChangeModel(e),this.previousValue=e):t&&setTimeout(()=>this.callOnChange(e,!1))}setDisabledState(e){this.disabled=e}registerOnChange(e){this.onChangeModel=e}registerOnTouched(e){this.onTouchedModel=e}registerOnValidatorChange(e){this.validatorChange=e}validate(e){return this.errorPattern="Data inv\xe1lida"!==this.errorPattern&&"Data fora do per\xedodo"!==this.errorPattern?this.errorPattern:"",(t=e.value)&&isNaN(Date.parse(t))?(this.errorPattern=this.errorPattern||"Data inv\xe1lida",{date:{valid:!1}}):DE(this.required,this.disabled,e.value)?{required:{valid:!1}}:this.date&&(n=this.date,s=this._maxDate,!((i=this._minDate)&&s?n>=i&&n<=s:i&&!s?n>=i:i||!s||n<=s))?(this.errorPattern=this.errorPattern||"Data fora do per\xedodo",{date:{valid:!1}}):null;var t,n,i,s}validateModel(e){this.validatorChange&&this.validatorChange(e)}buildMask(){let e=this.format.toUpperCase();return e=e.replace(/DD/g,"99"),e=e.replace(/MM/g,"99"),e=e.replace(/YYYY/g,"9999"),new PE(e,!0)}}return e.\u0275fac=function(t){return new(t||e)(Ar(pS))},e.\u0275dir=Ke({type:e,inputs:{autoFocus:["p-auto-focus","autoFocus"],errorPattern:["p-error-pattern","errorPattern"],noAutocomplete:["p-no-autocomplete","noAutocomplete"],placeholder:["p-placeholder","placeholder"],setDisabled:["p-disabled","setDisabled"],setReadonly:["p-readonly","setReadonly"],setRequired:["p-required","setRequired"],setClean:["p-clean","setClean"],minDate:["p-min-date","minDate"],maxDate:["p-max-date","maxDate"],format:["p-format","format"],isoFormat:["p-iso-format","isoFormat"],locale:["p-locale","locale"],name:"name",optional:["p-optional","optional"]},outputs:{onblur:"p-blur",onchange:"p-change"}}),Ov([xS()],e.prototype,"autoFocus",void 0),e})();const jE="bottom-left";let NE=(()=>{class e extends RE{constructor(e,t,n,i){super(t),this.controlPosition=e,this.renderer=n,this.visible=!1,this.dateRegex=new RegExp("^(?:[0-9])\\d{1}(?:[0-9])\\d{1}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12]\\d|3[01])$"),this.isoRegex=new RegExp("^(?:[0-9])\\d{1}(?:[0-9])\\d{1}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12]\\d|3[01])T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:Z|-0[1-9]|-1\\d|-2[0-3]|-00:?(?:0[1-9]|[0-5]\\d)|\\+[01]\\d|\\+2[0-3])(?:|:?[0-5]\\d)$"),this.onScroll=()=>{this.controlPosition.adjustPosition(jE)},this.el=i}get autocomplete(){return this.noAutocomplete?"off":"on"}onKeyup(e){this.readonly||(this.objMask.keyup(e),this.objMask.valueToModel||""===this.objMask.valueToModel?this.objMask.valueToModel.length>=10?(this.controlModel(this.getDateFromString(this.inputEl.nativeElement.value)),this.date=this.getDateFromString(this.inputEl.nativeElement.value)):(this.date=void 0,this.controlModel(this.date)):this.date=void 0)}onKeydown(e){this.readonly||this.objMask.keydown(e)}ngAfterViewInit(){this.setDialogPickerStyleDisplay("none"),this.autoFocus&&this.focus()}ngOnDestroy(){this.removeListeners()}focus(){this.disabled||this.inputEl.nativeElement.focus()}togglePicker(){this.disabled||this.readonly||(this.visible?(this.inputEl.nativeElement.disabled=!1,this.closeCalendar()):(this.setCalendarPosition(),this.initializeListeners(),this.visible=!0))}dateSelected(){this.verifyMobile()||this.inputEl.nativeElement.focus(),this.inputEl.nativeElement.value=this.formatToDate(this.date),this.controlModel(this.date),this.controlChangeEmitter(),this.closeCalendar()}wasClickedOnPicker(e){this.dialogPicker&&this.iconDatepicker&&(this.dialogPicker.nativeElement.contains(e.target)&&!this.hasOverlayClass(e.target)||this.iconDatepicker.nativeElement.contains(e.target)||this.hasAttrCalendar(e.target)||this.closeCalendar())}hasInvalidClass(){return this.el.nativeElement.classList.contains("ng-invalid")&&this.el.nativeElement.classList.contains("ng-dirty")&&""!==this.inputEl.nativeElement.value}getErrorPattern(){return""!==this.errorPattern&&this.hasInvalidClass()?this.errorPattern:""}clear(){this.valueBeforeChange=this.formatToDate(this.date),this.date=void 0,this.controlModel(this.date),this.controlChangeEmitter()}eventOnBlur(e){var t;null===(t=this.onTouchedModel)||void 0===t||t.call(this);const n=this.inputEl.nativeElement.value,i=n?this.getDateFromString(n):void 0;this.objMask.blur(e),this.onblur.emit(),this.objMask.valueToModel?this.objMask.valueToModel.length>=10?(this.controlModel(i),this.date=i):(this.date=null,this.controlModel(this.date)):(this.date=void 0,this.callOnChange(this.date)),this.controlChangeEmitter()}eventOnClick(e){this.verifyMobile()?(e.target.blur(),setTimeout(()=>this.togglePicker(),0)):this.objMask.click(e)}formatToDate(e){if(!e)return;let t=this.format;return t=t.replace("dd",("0"+e.getDate()).slice(-2)),t=t.replace("mm",("0"+(e.getMonth()+1)).slice(-2)),t=t.replace("yyyy",eS(e.getFullYear())),t}refreshValue(e){e&&(this.inputEl.nativeElement.value=this.formatToDate(e))}writeValue(e){if(this.inputEl&&e){if(e instanceof Date){const t=e.toString();this.hour="T"+t.substring(16,24)+t.substring(28,31)+":"+t.substring(31,33),this.date=e,this.inputEl.nativeElement.value=this.formatToDate(e)}else if(this.isValidDateIso(e)||this.isValidExtendedIso(e)){this.isValidExtendedIso(e)&&(this.hour=e.substring(10,25)),void 0===this.isoFormat&&(this.isExtendedISO=this.isValidExtendedIso(e));const t=parseInt(e.substring(8,10),10),n=parseInt(e.substring(5,7),10)-1,i=parseInt(e.substring(0,4),10),s=new Date(i,n,t);iS(s,i),this.date=s,this.inputEl.nativeElement.value=this.formatToDate(s)}else this.inputEl.nativeElement.value="",this.date=void 0;this.controlModel(this.date)}else this.inputEl&&(this.inputEl.nativeElement.value="",this.date=void 0);this.valueBeforeChange=this.formatToDate(this.date)}isValidDateIso(e){return this.dateRegex.test(e)}isValidExtendedIso(e){return this.isoRegex.test(e)}hasOverlayClass(e){return e.classList.contains("po-datepicker-calendar-overlay")}verifyMobile(){return tS()}closeCalendar(){this.visible=!1,this.removeListeners(),this.setDialogPickerStyleDisplay("none")}controlChangeEmitter(){const e=this.formatToDate(this.date);e!==this.valueBeforeChange&&(this.valueBeforeChange=e,clearTimeout(this.timeoutChange),this.timeoutChange=setTimeout(()=>{this.onchange.emit(e)},200))}hasAttrCalendar(e){const t="attr-calendar";return e&&e.hasAttribute(t)||e.parentElement&&e.parentElement.hasAttribute(t)}initializeListeners(){this.clickListener=this.renderer.listen("document","click",e=>{this.wasClickedOnPicker(e)}),this.eventResizeListener=this.renderer.listen("window","resize",()=>{this.closeCalendar()}),window.addEventListener("scroll",this.onScroll,!0)}removeListeners(){this.clickListener&&this.clickListener(),this.eventResizeListener&&this.eventResizeListener(),window.removeEventListener("scroll",this.onScroll,!0)}setDialogPickerStyleDisplay(e){this.dialogPicker.nativeElement.style.display=e}setCalendarPosition(){this.setDialogPickerStyleDisplay("block"),this.controlPosition.setElements(this.dialogPicker.nativeElement,8,this.inputEl,["top-left","top-right","bottom-left","bottom-right"],!1,!0),this.controlPosition.adjustPosition(jE)}}return e.\u0275fac=function(t){return new(t||e)(Ar(VS),Ar(pS),Ar(Wa),Ar(Ua))},e.\u0275cmp=He({type:e,selectors:[["po-datepicker"]],viewQuery:function(e,t){if(1&e&&(pc(Uy,7),pc(qy,7,Ua),pc(zy,7,Ua),pc(Wy,7,Ua)),2&e){let e;dc(e=gc())&&(t.calendar=e.first),dc(e=gc())&&(t.dialogPicker=e.first),dc(e=gc())&&(t.iconDatepicker=e.first),dc(e=gc())&&(t.inputEl=e.first)}},hostBindings:function(e,t){1&e&&Br("keyup",function(e){return t.onKeyup(e)})("keydown",function(e){return t.onKeydown(e)})},inputs:{label:["p-label","label"],help:["p-help","help"]},features:[La([{provide:Pv,useExisting:se(()=>e),multi:!0},{provide:jv,useExisting:se(()=>e),multi:!0},VS]),ur],decls:14,vars:25,consts:[[3,"p-help","p-label","p-optional"],[1,"po-field-container-content"],["type","text",1,"po-input","po-datepicker",3,"ngClass","autocomplete","disabled","placeholder","readonly","required","blur","click"],["inp",""],[1,"po-field-icon-container-right"],[3,"p-element-ref","p-change-event",4,"ngIf"],[1,"po-icon","po-field-icon","po-icon-calendar",3,"click"],["iconDatepicker",""],["dialogPicker",""],["class","po-datepicker-calendar-overlay",4,"ngIf"],[3,"ngModel","p-max-date","p-min-date","p-locale","ngModelChange","p-change"],["calendar",""],[3,"p-error-pattern"],[3,"p-element-ref","p-change-event"],[1,"po-datepicker-calendar-overlay"]],template:function(e,t){if(1&e&&(Fr(0,"po-field-container",0),Fr(1,"div",1),Fr(2,"input",2,3),Br("blur",function(e){return t.eventOnBlur(e)})("click",function(e){return t.eventOnClick(e)}),Ir(),Fr(4,"div",4),kr(5,Gy,1,1,"po-clean",5),Fr(6,"span",6,7),Br("click",function(){return t.togglePicker()}),Ir(),Ir(),Ir(),Fr(8,"div",null,8),kr(10,Ky,1,0,"div",9),Fr(11,"po-calendar",10,11),Br("ngModelChange",function(e){return t.date=e})("p-change",function(){return t.dateSelected()}),Ir(),Ir(),Mr(13,"po-field-container-bottom",12),Ir()),2&e){const e=xr(3);Or("p-help",t.help)("p-label",t.label)("p-optional",!t.required&&t.optional),Zs(2),Or("ngClass",t.clean&&e.value?"po-input-double-icon-right":"po-input-icon-right")("autocomplete",t.autocomplete)("disabled",t.disabled)("placeholder",t.placeholder)("readonly",t.readonly)("required",t.required),Dr("name",t.name),Zs(3),Or("ngIf",t.clean&&!t.disabled&&!t.readonly),Zs(1),ea("po-field-icon",!t.disabled&&!t.readonly)("po-field-icon-disabled",t.disabled||t.readonly),Zs(2),ea("po-datepicker-popup-calendar",!t.verifyMobile()),Zs(2),Or("ngIf",t.verifyMobile()),Zs(1),ea("po-datepicker-calendar-mobile",t.verifyMobile()),Or("ngModel",t.date)("p-max-date",t.maxDate)("p-min-date",t.minDate)("p-locale",t.locale),Zs(2),Or("p-error-pattern",t.getErrorPattern())}},directives:[wE,xh,Fh,zS,Jv,Db,yE,IE],encapsulation:2}),e})(),BE=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh,Vb,_E,ME,ZS]]}),e})();const $E={en:{close:"Close"},es:{close:"Cerrar"},pt:{close:"Fechar"},ru:{close:"\u0431\u043b\u0438\u0437\u043a\u043e"}};let HE=(()=>{class e{constructor(e){this.isHidden=!0,this.onXClosed=new ec,this._hideClose=!1,this._size="md",this.clickOut=!1,this.language=e.getShortLanguage(),this.literals=Object.assign({},$E[this.language])}set size(e){this._size=["sm","md","lg","xl","auto"].indexOf(e)>-1?e:"md"}get size(){return this._size}set setClickOut(e){this.clickOut=""!==e&&YD(e)}set hideClose(e){this._hideClose=YD(e)}get hideClose(){return this._hideClose}close(e=!1){this.isHidden=!0,e&&this.onXClosed.emit(e)}open(){this.validPrimaryAction(),this.isHidden=!1}validPrimaryAction(){this.primaryAction||(this.primaryAction={action:()=>this.close(),label:this.literals.close}),this.primaryAction.action||(this.primaryAction.action=()=>this.close()),this.primaryAction.label||(this.primaryAction.label=this.literals.close)}}return e.\u0275fac=function(t){return new(t||e)(Ar(pS))},e.\u0275dir=Ke({type:e,inputs:{size:["p-size","size"],setClickOut:["p-click-out","setClickOut"],hideClose:["p-hide-close","hideClose"],primaryAction:["p-primary-action","primaryAction"],title:["p-title","title"],secondaryAction:["p-secondary-action","secondaryAction"]}}),e})(),UE=(()=>{class e{constructor(){this.activeOverlay=[]}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=he({factory:function(){return new e},token:e,providedIn:"root"}),e})(),qE=(()=>{class e extends HE{constructor(e,t){super(t),this.poActiveOverlayService=e,this.focusableElements="input, select, textarea, button:not([disabled]), a",this.id=lS()}close(e=!1){this.poActiveOverlayService.activeOverlay.pop(),super.close(e),this.removeEventListeners(),this.sourceElement&&this.sourceElement.focus()}closeModalOnEscapeKey(e){this.hideClose||(e.preventDefault(),e.stopPropagation(),this.close())}getPrimaryActionButtonType(){return this.primaryAction.danger?"danger":"primary"}getSecondaryActionButtonType(){return this.secondaryAction&&this.secondaryAction.danger&&!this.primaryAction.danger?"danger":"default"}onClickOut(e){this.clickOut&&!this.modalContent.nativeElement.contains(e.target)&&this.close()}open(){this.sourceElement=document.activeElement,super.open(),this.handleFocus()}handleFocus(){this.poActiveOverlayService.activeOverlay.push(this.id),setTimeout(()=>{this.modalContent&&(this.initFocus(),document.addEventListener("focus",this.focusFunction,!0))})}initFocus(){this.focusFunction=e=>{this.modalContent.nativeElement.contains(e.target)||this.poActiveOverlayService.activeOverlay[this.poActiveOverlayService.activeOverlay.length-1]!==this.id||(e.stopPropagation(),this.firstElement.focus())},this.setFirstElement(),this.hideClose?this.firstElement.focus():(this.modalContent.nativeElement.querySelectorAll(this.focusableElements)[1]||this.modalContent.nativeElement).focus()}removeEventListeners(){document.removeEventListener("focus",this.focusFunction,!0)}setFirstElement(){this.firstElement=this.modalContent.nativeElement.querySelector(this.focusableElements)||this.modalContent.nativeElement}}return e.\u0275fac=function(t){return new(t||e)(Ar(UE),Ar(pS))},e.\u0275cmp=He({type:e,selectors:[["po-modal"]],viewQuery:function(e,t){if(1&e&&pc(Yy,5,Ua),2&e){let e;dc(e=gc())&&(t.modalContent=e.first)}},features:[ur],ngContentSelectors:Wb,decls:1,vars:1,consts:[["class","po-modal","tabindex","0",3,"keydown.esc",4,"ngIf"],["tabindex","0",1,"po-modal",3,"keydown.esc"],[1,"po-modal-overlay"],[1,"po-modal-container","po-pb-2","po-pt-2",3,"mousedown"],[1,"po-modal-vertical-align"],["tabindex","-1"],["modalContent",""],[1,"po-modal-header"],[1,"po-modal-title","po-text-ellipsis"],["class","po-modal-header-close-button","tabindex","0",3,"click",4,"ngIf"],[1,"po-modal-body"],[1,"po-modal-footer"],[3,"p-disabled","p-label","p-loading","p-type","p-click",4,"ngIf"],[1,"po-button-modal-first-action",3,"p-disabled","p-label","p-loading","p-type","p-click"],["tabindex","0",1,"po-modal-header-close-button",3,"click"],[1,"po-icon","po-icon-close"],[3,"p-disabled","p-label","p-loading","p-type","p-click"]],template:function(e,t){1&e&&(zr(),kr(0,Jy,15,10,"div",0)),2&e&&Or("ngIf",!t.isHidden)},directives:[Fh,TS],encapsulation:2}),e})(),zE=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh,FS]]}),e})(),WE=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh]]}),e})(),GE=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[UE]}),e})(),KE=(()=>{class e{getColor(e){return Object.values(QS).includes(e.color)?e.color:this.getColorFromType(e.type||e.color)}getColorFromType(e){switch(e){case"danger":return QS.Color07;case"success":return QS.Color11;case"warning":return QS.Color08;default:return QS.Color01}}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),YE=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[KE]}),e})(),ZE=(()=>{class e{constructor(e,t,n){this.componentResolver=e,this.applicationRef=t,this.injector=n}createComponentInApplication(e){const t=this.componentResolver.resolveComponentFactory(e).create(this.injector);return this.applicationRef.attachView(t.hostView),document.body.appendChild(t.hostView.rootNodes[0]),t}destroyComponentInApplication(e){this.applicationRef.detachView(e.hostView),e.destroy()}}return e.\u0275fac=function(t){return new(t||e)(ci(Na),ci(au),ci(lr))},e.\u0275prov=he({factory:function(){return new e(ci(Na),ci(au),ci(Go))},token:e,providedIn:"root"}),e})(),QE=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[ZE],imports:[[]]}),e})(),JE=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[VS]}),e})();var XE=function(e){return e[e.Alert=0]="Alert",e[e.Confirm=1]="Confirm",e}({});const ek={en:{ok:"Ok"},es:{ok:"Ok"},pt:{ok:"Ok"},ru:{ok:"\u041e\u043a"}},tk={en:{cancel:"Cancel",confirm:"Confirm"},es:{cancel:"Cancelar",confirm:"Confirmar"},pt:{cancel:"Cancelar",confirm:"Confirmar"},ru:{cancel:"\u043e\u0442\u043c\u0435\u043d\u0438\u0442\u044c",confirm:"\u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c"}};let nk=(()=>{class e{constructor(e){this.primaryAction={label:"ok",action:()=>{}},this.language=e.getShortLanguage()}ngOnDestroy(){this.closeSubscription.unsubscribe()}ngOnInit(){this.closeSubscription=this.poModal.onXClosed.subscribe(e=>this.close(!0))}close(e=!1){e&&this.closeAction&&this.closeAction(),this.poModal.close(),this.destroy()}destroy(){this.componentRef&&this.componentRef.destroy()}configDialog(e,t,n,i,s){this.primaryAction={label:e,action:()=>{t&&t(),this.close()}},n&&(this.secondaryAction={label:n,action:()=>{i&&i(),this.close()}}),this.closeAction=s}open(e,t,n){switch(this.title=e.title,this.message=e.message,this.componentRef=n,this.setDialogLiterals(e,t),t){case XE.Confirm:this.configDialog(this.literalsConfirm.confirm,e.confirm,this.literalsConfirm.cancel,e.cancel,e.close);break;case XE.Alert:this.configDialog(this.literalsAlert.ok,e.ok)}this.poModal.open()}setDialogLiterals(e,t){const n=ek,i=tk,s=e.literals;t===XE.Alert?this.literalsAlert=Object.assign(Object.assign(Object.assign({},n.pt),n[this.language]),s):this.literalsConfirm=Object.assign(Object.assign(Object.assign({},i.pt),i[this.language]),s)}}return e.\u0275fac=function(t){return new(t||e)(Ar(pS))},e.\u0275cmp=He({type:e,selectors:[["ng-component"]],viewQuery:function(e,t){if(1&e&&pc(qE,7),2&e){let e;dc(e=gc())&&(t.poModal=e.first)}},decls:2,vars:4,consts:[[3,"p-title","p-primary-action","p-secondary-action"],[3,"innerHtml"]],template:function(e,t){1&e&&(Fr(0,"po-modal",0),Mr(1,"div",1),Ir()),2&e&&(Or("p-title",t.title)("p-primary-action",t.primaryAction)("p-secondary-action",t.secondaryAction),Zs(1),Or("innerHtml",t.message,Ji))},directives:[qE],encapsulation:2}),e})(),ik=(()=>{class e extends class{confirm(e){this.openDialog(XE.Confirm,e)}alert(e){this.openDialog(XE.Alert,e)}}{constructor(e){super(),this.poComponentInjector=e}openDialog(e,t){const n=this.poComponentInjector.createComponentInApplication(nk);n.changeDetectorRef.detectChanges(),n.instance.open(t,e,n)}}return e.\u0275fac=function(t){return new(t||e)(ci(ZE))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),sk=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[ik],imports:[[zE]]}),e})();var ok=function(e){return e[e.Bottom=0]="Bottom",e[e.Top=1]="Top",e}({}),rk=function(e){return e[e.Error=0]="Error",e[e.Information=1]="Information",e[e.Success=2]="Success",e[e.Warning=3]="Warning",e}({});let ak=(()=>{class e extends class{constructor(){this.orientation=ok.Bottom}}{constructor(e,t,n,i){super(),this.changeDetector=t,this.elementeRef=n,this.renderer=i,this.alive=!0,this.margin=20,this.observableOnClose=new D,this.toasterPosition="po-toaster-bottom"}ngOnDestroy(){this.alive=!1}ngAfterViewInit(){setTimeout(()=>this.renderer.addClass(this.toaster.nativeElement,"po-toaster-visible"))}changePosition(e){this.elementeRef.nativeElement.style.display="table",this.margin=6+44*e+6*e,this.orientation===ok.Top?this.toaster.nativeElement.style.top=this.margin+"px":this.toaster.nativeElement.style.bottom=this.margin+"px"}close(){this.observableOnClose.next(!0)}setFadeOut(){this.renderer.removeClass(this.toaster.nativeElement,"po-toaster-visible"),this.renderer.addClass(this.toaster.nativeElement,"po-toaster-invisible")}configToaster(e){switch(this.type=e.type,this.message=e.message,this.orientation=e.orientation,this.position=e.position,this.action=e.action,this.actionLabel=e.actionLabel,this.componentRef=e.componentRef,this.orientation===ok.Top&&(this.toasterPosition="po-toaster-top"),this.changePosition(this.position),this.type){case rk.Error:this.toasterType="po-toaster-error",this.icon="po-icon-warning";break;case rk.Information:this.toasterType="po-toaster-info",this.icon="po-icon-info";break;case rk.Success:this.toasterType="po-toaster-success",this.icon="po-icon-ok";break;case rk.Warning:this.toasterType="po-toaster-warning",this.icon="po-icon-warning"}this.changeDetector.detectChanges()}getIcon(){return this.icon}getToasterPosition(){return this.toasterPosition}getToasterType(){return this.toasterType}onButtonClose(e){e.preventDefault(),e.stopPropagation(),this.action&&!this.actionLabel?this.poToasterAction(e):this.close()}poToasterAction(e){e.preventDefault(),e.stopPropagation(),this.action(this)}}return e.\u0275fac=function(t){return new(t||e)(Ar(pS),Ar(gl),Ar(Ua),Ar(Wa))},e.\u0275cmp=He({type:e,selectors:[["po-toaster"]],viewQuery:function(e,t){if(1&e&&pc(Xy,5),2&e){let e;dc(e=gc())&&(t.toaster=e.first)}},features:[ur],decls:9,vars:9,consts:[[3,"click"],["toaster",""],[1,"po-toaster-icon"],[1,"po-toaster-message"],["class","po-toaster-action",3,"click",4,"ngIf"],[1,"po-toaster-close",3,"click"],[1,"po-icon","po-icon-close"],[1,"po-toaster-action",3,"click"]],template:function(e,t){1&e&&(Fr(0,"div",0,1),Br("click",function(){return t.close()}),Fr(2,"div",2),Mr(3,"span"),Ir(),Fr(4,"div",3),pa(5),Ir(),kr(6,eC,2,1,"div",4),Fr(7,"button",5),Br("click",function(e){return t.onButtonClose(e)}),Mr(8,"span",6),Ir(),Ir()),2&e&&(ba("po-toaster ",t.getToasterType()," ",t.getToasterPosition()," po-clickable"),Zs(3),va("po-icon ",t.getIcon(),""),Zs(2),fa(t.message),Zs(1),Or("ngIf",t.action&&t.actionLabel))},directives:[Fh],encapsulation:2}),e})(),lk=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[],imports:[[Gh]]}),e})(),ck=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[],imports:[[GE,YE,QE,JE,$S,sk,DS,lk],GE,YE,QE,JE,$S,sk,lk]}),e})();const uk="right",hk="click",dk=["click","hover"];let pk=(()=>{class e{constructor(){this.closePopover=new ec,this.isHidden=!0,this._hideArrow=!1,this._position=uk,this._trigger=hk}set hideArrow(e){this._hideArrow=YD(e)}get hideArrow(){return this._hideArrow}set position(e){this._position=IS.includes(e)?e:uk}get position(){return this._position}set trigger(e){this._trigger=dk.includes(e)?e:hk}get trigger(){return this._trigger}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,inputs:{hideArrow:["p-hide-arrow","hideArrow"],position:["p-position","position"],trigger:["p-trigger","trigger"],target:["p-target","target"],title:["p-title","title"]},outputs:{closePopover:"p-close"}}),e})(),fk=(()=>{class e extends pk{constructor(e,t){super(),this.renderer=e,this.poControlPosition=t,this.arrowDirection="left"}ngAfterViewInit(){this.targetElement=this.target instanceof Ua?this.target.nativeElement:this.target,this.initEventListenerFunction(),this.setElementsControlPosition(),this.setRendererListenInit()}ngOnDestroy(){this.removeListeners()}close(){this.isHidden=!0,this.closePopover.emit()}debounceResize(){clearTimeout(this.timeoutResize),this.timeoutResize=setTimeout(()=>{this.setPopoverPosition()},200)}open(){this.addScrollEventListener(),this.isHidden=!1,this.setOpacity(0),setTimeout(()=>{this.setElementsControlPosition(),this.setPopoverPosition(),this.setOpacity(1)})}setOpacity(e){this.popoverElement.nativeElement.style.opacity=e}setPopoverPosition(){this.poControlPosition.adjustPosition(this.position),this.arrowDirection=this.poControlPosition.getArrowDirection()}setRendererListenInit(){this.resizeListener=this.renderer.listen("window","resize",e=>{this.isHidden||this.debounceResize()}),"hover"===this.trigger?(this.mouseEnterListener=this.renderer.listen(this.targetElement,"mouseenter",e=>{this.open()}),this.mouseLeaveListener=this.renderer.listen(this.targetElement,"mouseleave",e=>{this.close()})):this.clickoutListener=this.renderer.listen("document","click",e=>{this.togglePopup(e)})}togglePopup(e){this.isHidden||this.popoverElement.nativeElement.contains(e.target)||this.targetElement.contains(e.target)?this.targetElement.contains(e.target)&&(this.popoverElement.nativeElement.hidden?this.open():this.close()):this.close()}addScrollEventListener(){window.addEventListener("scroll",this.eventListenerFunction,!0)}initEventListenerFunction(){this.eventListenerFunction=()=>{this.setPopoverPosition()}}removeListeners(){this.clickoutListener&&this.clickoutListener(),this.mouseEnterListener&&this.mouseEnterListener(),this.mouseLeaveListener&&this.mouseLeaveListener(),this.resizeListener(),window.removeEventListener("scroll",this.eventListenerFunction,!0)}setElementsControlPosition(){this.poControlPosition.setElements(this.popoverElement.nativeElement,8,this.target)}}return e.\u0275fac=function(t){return new(t||e)(Ar(Wa),Ar(VS))},e.\u0275cmp=He({type:e,selectors:[["po-popover"]],viewQuery:function(e,t){if(1&e&&pc(tC,7,Ua),2&e){let e;dc(e=gc())&&(t.popoverElement=e.first)}},features:[La([VS]),ur],ngContentSelectors:Wb,decls:6,vars:3,consts:[[1,"po-popover",3,"hidden"],["popoverElement",""],[3,"class",4,"ngIf"],[1,"po-popover-content"],["class","po-popover-title",4,"ngIf"],[1,"po-popover-title"]],template:function(e,t){1&e&&(zr(),Fr(0,"div",0,1),kr(2,nC,1,3,"div",2),Fr(3,"div",3),kr(4,iC,2,1,"span",4),Wr(5),Ir(),Ir()),2&e&&(Or("hidden",t.isHidden),Zs(2),Or("ngIf",!t.hideArrow),Zs(2),Or("ngIf",t.title))},directives:[Fh],encapsulation:2}),e})(),gk=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh]]}),e})(),mk=(()=>{class e{transform(e,t){if(QD(e,"string")&&/^(([0-1][0-9])|(2[0-3])):[0-5][0-9]:[0-5][0-9][\.]?([0-9]{1,6})?$/g.test(e)){const n=t?t.lastIndexOf("f")-t.indexOf("f")+1:0,i=this.addDotMiliseconds(e.substring(9,9+n),n),s=this.getFormatMiliseconds(n);return this.formatValue(e,t,s,i)}return null}addDotMiliseconds(e,t){return e&&t&&(e="."+e),e}formatValue(e,t,n,i){if(e&&t){const s=e.substring(0,2),o=e.substring(3,5),r=e.substring(6,8);return(t=(t=(t=t.replace("HH",s)).replace("mm",o)).replace("ss",r)).replace(`.${n}`,i)}return e}getFormatMiliseconds(e){let t="";for(let n=0;n<e;n++)t+="f";return t}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275pipe=Ye({name:"po_time",type:e,pure:!0}),e})(),vk=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[],imports:[[]]}),e})(),bk=(()=>{class e{constructor(){this._icons=[]}set icons(e){this._icons=this.convertToColumnIcon(e)}get icons(){return this._icons}click(e,t){!this.isDisabled(e)&&(e.action?e.action(this.row,e):this.column.action&&this.column.action(this.row,e),t.stopPropagation())}getColor(e){const t="function"==typeof e.color?e.color(this.row,e):e.color;if(t)return`po-text-${t}`}getIcon(e){return e.icon||e.value}isClickable(e){return!(this.isDisabled(e)||!e.action&&!this.column.action)}isDisabled(e){return!!e.disabled&&e.disabled(this.row)}trackByFunction(e){return e}convertToColumnIcon(e){return Array.isArray(e)?e.map(e=>"string"==typeof e?{value:e}:e):"string"==typeof e?[{value:e}]:[]}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=He({type:e,selectors:[["po-table-column-icon"]],inputs:{icons:["p-icons","icons"],column:["p-column","column"],row:["p-row","row"]},decls:1,vars:2,consts:[[3,"p-clickable","p-color","p-disabled","p-icon","p-icon-tooltip","p-click",4,"ngFor","ngForOf","ngForTrackBy"],[3,"p-clickable","p-color","p-disabled","p-icon","p-icon-tooltip","p-click"]],template:function(e,t){1&e&&kr(0,sC,1,5,"po-table-icon",0),2&e&&Or("ngForOf",t.icons)("ngForTrackBy",t.trackByFunction)},directives:function(){return[Oh,Pk]},encapsulation:2,changeDetection:0}),e})(),yk=(()=>{class e{constructor(e){this.poColorPaletteService=e}set value(e){e&&(e.color=this.poColorPaletteService.getColor(e)),this._value=e}get value(){return this._value}}return e.\u0275fac=function(t){return new(t||e)(Ar(KE))},e.\u0275cmp=He({type:e,selectors:[["po-table-column-label"]],inputs:{value:["p-value","value"]},decls:2,vars:3,template:function(e,t){1&e&&(Fr(0,"span"),pa(1),Ir()),2&e&&(ta("po-table-column-label po-"+(null==t.value?null:t.value.color)),Zs(1),ga(" ",null==t.value?null:t.value.label,"\n"))},encapsulation:2,changeDetection:0}),e})(),Ck=(()=>{class e{get type(){return this.disabled?"disabled":this.action?"action":aS(this.link)?"externalLink":"internalLink"}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=He({type:e,selectors:[["po-table-column-link"]],inputs:{action:["p-action","action"],disabled:["p-disabled","disabled"],link:["p-link","link"],row:["p-row","row"],value:["p-value","value"]},decls:5,vars:5,consts:[[3,"ngSwitch"],["class","po-table-link-disabled",4,"ngSwitchCase"],["class","po-table-link",3,"click",4,"ngSwitchCase"],["class","po-table-link","target","_blank",3,"href",4,"ngSwitchCase"],["class","po-table-link",3,"routerLink",4,"ngSwitchCase"],[1,"po-table-link-disabled"],[1,"po-table-link",3,"click"],["target","_blank",1,"po-table-link",3,"href"],[1,"po-table-link",3,"routerLink"]],template:function(e,t){1&e&&(Pr(0,0),kr(1,oC,2,1,"p",1),kr(2,rC,2,1,"a",2),kr(3,aC,2,2,"a",3),kr(4,lC,2,2,"a",4),Vr()),2&e&&(Or("ngSwitch",t.type),Zs(1),Or("ngSwitchCase","disabled"),Zs(1),Or("ngSwitchCase","action"),Zs(1),Or("ngSwitchCase","externalLink"),Zs(1),Or("ngSwitchCase","internalLink"))},directives:[Vh,Lh,Tm],encapsulation:2,changeDetection:0}),e})();const wk={en:{columnsManager:"Columns manager",restoreDefault:"Restore default"},es:{columnsManager:"Gerente de columna",restoreDefault:"Restaurar por defecto"},pt:{columnsManager:"Gerenciador de colunas",restoreDefault:"Restaurar padr\xe3o"},ru:{columnsManager:"\u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440 \u043a\u043e\u043b\u043e\u043d\u043e\u043a",restoreDefault:"\u0441\u0431\u0440\u043e\u0441 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a"}};let _k=(()=>{class e{constructor(e,t){this.renderer=e,this.columns=[],this.lastVisibleColumnsSelected=[],this.visibleColumnsChange=new ec,this.changeVisibleColumns=new ec,this.columnsOptions=[],this.visibleColumns=[],this._maxColumns=99999,this.defaultColumns=[];const n=t.getShortLanguage();this.literals=Object.assign(Object.assign({},wk.pt),wk[n])}set maxColumns(e){this._maxColumns=ZD(e,99999)}get maxColumns(){return this._maxColumns}ngOnChanges(e){const{columns:t,maxColumns:n,target:i}=e;i&&i.firstChange&&this.initializeListeners(),t&&this.onChangeColumns(t),n&&this.updateValues(this.columns)}ngOnDestroy(){this.removeListeners()}checkChanges(e=[],t=!1){this.verifyToEmitChange(e),t&&this.verifyToEmitVisibleColumns()}restore(){this.restoreDefaultEvent=!0;const e=this.getVisibleColumns(this.defaultColumns);this.checkChanges(e,this.restoreDefaultEvent)}verifyToEmitChange(e){const t=[...e];this.allowsChangeVisibleColumns()&&this.emitChangesToSelectedColumns(t)}emitChangesToSelectedColumns(e){this.visibleColumns=[...e];const t=this.getVisibleTableColumns(this.visibleColumns);this.visibleColumnsChange.emit(t)}allowsChangeVisibleColumns(){const e=this.getVisibleTableColumns(this.visibleColumns);return this.stringify(e)!==this.stringify(this.columns)}verifyToEmitVisibleColumns(){this.restoreDefaultEvent?this.verifyRestoreValues():this.verifyOnClose()}verifyRestoreValues(){const e=[...this.defaultColumns],t=this.getVisibleColumns(e);this.allowsChangeSelectedColumns(t)&&this.emitChangeOnRestore(t),this.restoreDefaultEvent=!1}emitChangeOnRestore(e){this.visibleColumns=[...e];const t=this.getVisibleTableColumns(this.visibleColumns);this.visibleColumnsChange.emit(t)}allowsChangeSelectedColumns(e){const t=this.getVisibleColumns(this.columns);return!this.isEqualArrays(e,t)}verifyOnClose(){this.allowsEmission()&&this.emitVisibleColumns()}emitVisibleColumns(){this.lastEmittedValue=[...this.visibleColumns],this.changeVisibleColumns.emit(this.visibleColumns)}allowsEmission(){const e=this.visibleColumns?[...this.visibleColumns]:[],t=this.lastEmittedValue?[...this.lastEmittedValue]:[],n=this.lastVisibleColumnsSelected?[...this.lastVisibleColumnsSelected]:[],i=this.getVisibleColumns(n);return this.isUpdate(e,t)||this.isFirstTime(e,i)}isFirstTime(e,t){return!this.lastEmittedValue&&!this.isEqualArrays(e,t)}isUpdate(e,t){return this.lastEmittedValue&&!this.isEqualArrays(e,t)}isEqualArrays(e,t){const n=e?[...e]:[],i=t?[...t]:[],s=n.slice().sort(),o=i.slice().sort();return JSON.stringify(s)===JSON.stringify(o)}disableColumnsOptions(e=[]){return e.map(e=>Object.assign(Object.assign({},e),{disabled:this.isDisableColumn(e.value)}))}getColumnTitleLabel(e){return e.label||cS(e.property)}getVisibleColumns(e){let t=[];return e.forEach(e=>{this.isVisibleColumn(e,t)&&(t=[...t,e.property])}),t}isVisibleColumn(e,t){return!1!==e.visible&&t.length<this.maxColumns&&"detail"!==e.type}getVisibleTableColumns(e){return(this.columns?[...this.columns]:[]).map(t=>Object.assign(Object.assign({},t),{visible:e.includes(t.property)||"detail"===t.type}))}initializeListeners(){this.resizeListener=this.renderer.listen("window","resize",()=>{this.popover&&!this.popover.isHidden&&this.popover.close()})}isDisableColumn(e){return this.visibleColumns.length>=this.maxColumns&&!this.visibleColumns.includes(e)}mapTableColumnsToCheckboxOptions(e=[]){const t=[...e],n=[];return t.forEach(e=>{"detail"!==e.type&&n.push({value:e.property,label:this.getColumnTitleLabel(e),disabled:this.isDisableColumn(e.property)})}),n}onChangeColumns(e){const{currentValue:t=[],previousValue:n=[]}=e;this.lastVisibleColumnsSelected||this.stringify(this.defaultColumns)===this.stringify(t)||(this.defaultColumns=[...t]),this.stringify(n)!==this.stringify(t)&&this.updateValues(t)}updateValues(e){const t=this.getVisibleColumns(e);this.visibleColumns=[...t];const n=this.mapTableColumnsToCheckboxOptions(e);this.columnsOptions=this.disableColumnsOptions(n),this.checkChanges(t,!1)}removeListeners(){this.resizeListener&&this.resizeListener()}stringify(e){return JSON.stringify(e,(e,t)=>{if("icon"!==e)return t})}}return e.\u0275fac=function(t){return new(t||e)(Ar(Wa),Ar(pS))},e.\u0275cmp=He({type:e,selectors:[["po-table-column-manager"]],viewQuery:function(e,t){if(1&e&&pc(fk,5),2&e){let e;dc(e=gc())&&(t.popover=e.first)}},inputs:{columns:["p-columns","columns"],lastVisibleColumnsSelected:["p-last-visible-columns-selected","lastVisibleColumnsSelected"],maxColumns:["p-max-columns","maxColumns"],target:["p-target","target"]},outputs:{visibleColumnsChange:"p-visible-columns-change",changeVisibleColumns:"p-change-visible-columns"},features:[lt],decls:1,vars:1,consts:[["p-position","bottom-left",3,"p-target","p-close",4,"ngIf"],["p-position","bottom-left",3,"p-target","p-close"],["popover",""],[1,"po-table-column-manager-header"],[1,"po-table-column-manager-header-title"],[1,"po-table-column-manager-header-close"],[1,"po-table-column-manager-header-close-button","po-clickable","po-icon","po-icon-close",3,"click"],[1,"po-table-column-manager-body"],["name","visibleColumns","p-columns","1",3,"ngModel","p-options","ngModelChange","p-change"],[1,"po-table-column-manager-footer"],["p-small","","p-type","link",1,"po-table-column-manager-footer-restore",3,"p-label","p-click"]],template:function(e,t){1&e&&kr(0,cC,11,5,"po-popover",0),2&e&&Or("ngIf",t.target)},directives:[Fh,fk,OE,Jv,Db,TS],encapsulation:2}),e})();var Dk=function(e){return e.Ascending="ascending",e.Descending="descending",e}({});let Sk=(()=>{class e{constructor(e){this.http=e,this.headers=new Xm({"X-PO-No-Message":"true"})}getFilteredItems(e){const t=this.validateParams(e);return this.http.get(this.url,{headers:this.headers,params:t})}setUrl(e){this.url=e}scrollListener(e){return ip(e,"scroll").pipe(Lb(100))}validateParams(e){return QD(e,"object")&&!Array.isArray(e)?e:void 0}}return e.\u0275fac=function(t){return new(t||e)(ci(gv))},e.\u0275prov=he({factory:function(){return new e(ci(gv))},token:e,providedIn:"root"}),e})();const Ek=["border","shadow"],kk={en:{noColumns:"Columns are not defined",noData:"No data found",noVisibleColumn:"No visible column",loadingData:"Loading",loadMoreData:"Load more data",seeCompleteSubtitle:"See complete subtitle",completeSubtitle:"Complete subtitle",columnsManager:"Columns manager"},es:{noColumns:"Columnas no definidas",noData:"Datos no encontrados",noVisibleColumn:"Sin columnas visibles",loadingData:"Cargando datos",loadMoreData:"Cargar m\xe1s resultados",seeCompleteSubtitle:"Ver subtitulo completo",completeSubtitle:"Subtitulo completo",columnsManager:"Gerente de columna"},pt:{noColumns:"Nenhuma defini\xe7\xe3o de colunas",noData:"Nenhum dado encontrado",noVisibleColumn:"Nenhuma coluna vis\xedvel",loadingData:"Carregando",loadMoreData:"Carregar mais resultados",seeCompleteSubtitle:"Ver legenda completa",completeSubtitle:"Legenda completa",columnsManager:"Gerenciador de colunas"},ru:{noColumns:"\u041d\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0441\u0442\u043e\u043b\u0431\u0446\u0430",noData:"\u0414\u0430\u043d\u043d\u044b\u0435 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b",noVisibleColumn:"\u043d\u0435\u0442 \u0432\u0438\u0434\u0438\u043c\u044b\u0445 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432",loadingData:"\u043f\u043e\u0433\u0440\u0443\u0437\u043a\u0430",loadMoreData:"\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430",seeCompleteSubtitle:"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043f\u043e\u043b\u043d\u044b\u0439 \u0441\u0443\u0431\u0442\u0438\u0442\u0440",completeSubtitle:"\u041f\u043e\u043b\u043d\u044b\u0439 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a",columnsManager:"\u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440 \u043a\u043e\u043b\u043e\u043d\u043e\u043a"}};let xk=(()=>{class e{constructor(e,t,n){this.poDate=e,this.poTableService=n,this.hideTextOverflow=!1,this.hideColumnsManager=!1,this.autoCollapse=!1,this.loadingShowMore=!1,this.sort=!1,this.showMoreDisabled=!1,this.striped=!1,this.hideSelectAll=!1,this.singleSelect=!1,this.allSelected=new ec,this.allUnselected=new ec,this.collapsed=new ec,this.expanded=new ec,this.selected=new ec,this.showMore=new ec,this.sortBy=new ec,this.unselected=new ec,this.changeVisibleColumns=new ec,this.hasMainColumns=!1,this.mainColumns=[],this.selectAll=!1,this.sortedColumn={property:null,ascending:!0},this.subtitleColumns=[],this.page=1,this.pageSize=10,this.hasService=!1,this._actions=[],this._columns=[],this._hideDetail=!1,this._loading=!1,this.language=qD,this._infiniteScrollDistance=100,this._infiniteScroll=!1,this.language=t.getShortLanguage()}set items(e){this._items=Array.isArray(e)?e:[],this.hasItems?this.hasColumns||(this.columns=this.getDefaultColumns(e[0])):this.selectAll=!1,setTimeout(()=>this.checkInfiniteScroll())}get items(){return this._items}set columns(e){this._columns=e||[],this._columns.length?(this.setColumnLink(),this.calculateWidthHeaders()):this.hasItems&&(this._columns=this.getDefaultColumns(this.items[0])),this.onChangeColumns()}get columns(){return this._columns}set container(e){this._container=Ek.includes(e)?e:"border"}get container(){return this._container}set height(e){this._height=e,this.calculateWidthHeaders()}get height(){return this._height}set hideDetail(e){this._hideDetail=null!=e&&""===e.toString()||YD(e),this.calculateWidthHeaders()}get hideDetail(){return this._hideDetail}set literals(e){this._literals=e instanceof Object&&!(e instanceof Array)?Object.assign(Object.assign(Object.assign({},kk.pt),kk[this.language]),e):kk[this.language]}get literals(){return this._literals||kk[this.language]}set loading(e){this._loading=YD(e),this.calculateWidthHeaders()}get loading(){return this._loading}set actions(e){this._actions=e,this.calculateWidthHeaders()}get actions(){return this._actions}set selectable(e){this._selectable=""===e||YD(e),this.calculateWidthHeaders()}get selectable(){return this._selectable}set infiniteScroll(e){this._infiniteScroll=YD(e&&this.height>0)}get infiniteScroll(){return this._infiniteScroll}set infiniteScrollDistance(e){this._infiniteScrollDistance=e>100||e<0?100:e}get infiniteScrollDistance(){return this._infiniteScrollDistance}set serviceApi(e){this._serviceApi=e,this.setService(this.serviceApi),this.hasService=!!e,this.showMoreDisabled=!this.hasService,this.page=1,this.initializeData()}get serviceApi(){return this._serviceApi}get hasColumns(){return this.columns&&this.columns.length>0}get hasItems(){return!(!this.items||!this.items.length)}get nameColumnDetail(){return this.columnMasterDetail?this.columnMasterDetail.property:null}get validColumns(){const e=["string","number","boolean","date","time","dateTime","currency","subtitle","link","label","icon","cellTemplate","columnTemplate"];return this.columns.filter(t=>!t.type||e.includes(t.type))}get sortType(){return this.sortedColumn.ascending?Dk.Ascending:Dk.Descending}ngOnDestroy(){var e;null===(e=this.poTableServiceSubscription)||void 0===e||e.unsubscribe()}ngOnChanges(e){(this.singleSelect||this.hideSelectAll)&&(this.selectAll=!1,this.hideSelectAll=!0),e.height&&this.calculateHeightTableContainer(this.height)}selectAllRows(){this.hideSelectAll||(this.selectAll=!this.selectAll,this.items.forEach(e=>{e.$selected=this.selectAll}),this.emitSelectAllEvents(this.selectAll,this.items))}selectRow(e){e.$selected=!e.$selected,this.emitSelectEvents(e),this.configAfterSelectRow(this.items,e)}selectDetailRow(e){this.emitSelectEvents(e)}getClassColor(e,t){return t.color?`po-text-${this.getColumnColor(e,t)}`:""}toggleDetail(e){const t=e.$showDetail;this.autoCollapse&&this.collapseAllItems(this.items),this.setShowDetail(e,!t),this.emitExpandEvents(e)}toggleRowAction(e){const t=e.$showAction;this.items.forEach(e=>{e.$showAction&&(e.$showAction=!1)}),e.$showAction=!t}sortColumn(e){this.sort&&"detail"!==e.type&&(this.sortedColumn.ascending=this.sortedColumn.property!==e||!this.sortedColumn.ascending,this.sortArray(e,this.sortedColumn.ascending),this.sortBy.emit({column:e,type:this.sortType}),this.hasService&&this.sort&&(this.sortStore={column:e,type:this.sortType}),this.sortedColumn.property=e)}onShowMore(){const e=this.sortedColumn.property?{column:this.sortedColumn.property,type:this.sortType}:void 0;this.hasService&&(this.page++,this.loading=!0,this.loadingShowMore=!0,this.poTableServiceSubscription=this.getFilteredItems().subscribe(e=>{this.items=[...this.items,...e.items],this.showMoreDisabled=!e.hasNext,this.loading=!1,this.loadingShowMore=!1})),this.showMore.emit(e)}getFilteredItems(e){const t=this.getFilteredParams(e);return this.poTableService.getFilteredItems(t)}setTableResponseProperties(e){this.items=e.items||[],this.showMoreDisabled=!e.hasNext,this.loading=!1}initializeData(e){this.hasService&&(this.loading=!0,this.getFilteredItems(e).subscribe(e=>{this.setTableResponseProperties(e)}))}getDefaultColumns(e){return Object.keys(e).filter(t=>"object"!=typeof e[t]).map(e=>({label:cS(e),property:e}))}setShowDetail(e,t){("number"==typeof e&&this.items[e]?this.items[e]:e).$showDetail=t}collapseAllItems(e){for(const t of e)t.$showDetail&&(this.setShowDetail(t,!1),this.emitExpandEvents(t))}configAfterSelectRow(e,t){this.singleSelect?this.unselectOtherRows(e,t):this.hideSelectAll||(this.selectAll=this.isEverySelected(e))}emitExpandEvents(e){e.$showDetail?this.expanded.emit(e):this.collapsed.emit(e)}emitSelectAllEvents(e,t){e?this.allSelected.emit(t):this.allUnselected.emit(t)}emitSelectEvents(e){e.$selected?this.selected.emit(e):this.unselected.emit(e)}getColumnColor(e,t){const n=t.color;return QD(n,"function")?n(e,t.property):n}getColumnMasterDetail(){return this.columns.find(e=>"detail"===e.type)}getMainColumns(){return this.validColumns.filter(e=>!1!==e.visible)}getSubtitleColumns(){return this.columns.filter(e=>"subtitle"===e.type)}isEverySelected(e){return!!e.every(e=>e.$selected)||!!e.some(e=>e.$selected||null===e.$selected)&&null}onChangeColumns(){this.setMainColumns(),this.setColumnMasterDetail(),this.setSubtitleColumns()}setColumnLink(){this.columns.forEach(e=>{"link"!==e.type||e.link||(e.link="link")})}setColumnMasterDetail(){this.columnMasterDetail=this.getColumnMasterDetail()}setMainColumns(){this.mainColumns=this.getMainColumns(),this.hasMainColumns=!!this.mainColumns.length,this.allColumnsWidthPixels=this.verifyWidthColumnsPixels()}setSubtitleColumns(){this.subtitleColumns=this.getSubtitleColumns()}sortArray(e,t){this.items.sort((n,i)=>function(e,t,n=!0){const i=QD(e,"string")?e.toLowerCase():e,s=QD(t,"string")?t.toLowerCase():t,o=null==i||Number.isNaN(i),r=null==s||Number.isNaN(s);if(n){if(i<s||o)return-1;if(i>s||r)return 1}else if(!1===n){if(i<s||o)return 1;if(i>s||r)return-1}return 0}(n[e.property],i[e.property],t))}unselectOtherRows(e,t){e.forEach(e=>{e!==t&&(e.$selected=!1)})}verifyWidthColumnsPixels(){return!!this.hasMainColumns&&this.mainColumns.every(e=>e.width&&e.width.includes("px"))}setService(e){e&&QD(e,"string")&&this.poTableService.setUrl(e)}getFilteredParams(e){const{page:t,pageSize:n,sortStore:i}=this,s={},o=this.getOrderParam(i),r=Object.assign({page:t,pageSize:n,order:o},e);for(const a in r)r.hasOwnProperty(a)&&void 0!==r[a]&&(s[a]=r[a]);return s}getOrderParam(e={type:void 0}){const{column:t,type:n}=e;if(t)return n===Dk.Descending?`-${t.property}`:`${t.property}`}}return e.\u0275fac=function(t){return new(t||e)(Ar(BS),Ar(pS),Ar(Sk))},e.\u0275dir=Ke({type:e,inputs:{hideTextOverflow:["p-hide-text-overflow","hideTextOverflow"],hideColumnsManager:["p-hide-columns-manager","hideColumnsManager"],autoCollapse:["p-auto-collapse","autoCollapse"],loadingShowMore:["p-loading-show-more","loadingShowMore"],sort:["p-sort","sort"],showMoreDisabled:["p-show-more-disabled","showMoreDisabled"],striped:["p-striped","striped"],hideSelectAll:["p-hide-select-all","hideSelectAll"],singleSelect:["p-single-select","singleSelect"],items:["p-items","items"],columns:["p-columns","columns"],container:["p-container","container"],height:["p-height","height"],hideDetail:["p-hide-detail","hideDetail"],literals:["p-literals","literals"],loading:["p-loading","loading"],actions:["p-actions","actions"],selectable:["p-selectable","selectable"],infiniteScroll:["p-infinite-scroll","infiniteScroll"],infiniteScrollDistance:["p-infinite-scroll-distance","infiniteScrollDistance"],serviceApi:["p-service-api","serviceApi"],maxColumns:["p-max-columns","maxColumns"]},outputs:{allSelected:"p-all-selected",allUnselected:"p-all-unselected",collapsed:"p-collapsed",expanded:"p-expanded",selected:"p-selected",showMore:"p-show-more",sortBy:"p-sort-by",unselected:"p-unselected",changeVisibleColumns:"p-change-visible-columns"},features:[lt]}),Ov([xS()],e.prototype,"hideTextOverflow",void 0),Ov([xS()],e.prototype,"hideColumnsManager",void 0),Ov([xS()],e.prototype,"autoCollapse",void 0),Ov([xS()],e.prototype,"loadingShowMore",void 0),Ov([xS()],e.prototype,"sort",void 0),Ov([xS()],e.prototype,"showMoreDisabled",void 0),Ov([xS()],e.prototype,"striped",void 0),Ov([xS()],e.prototype,"hideSelectAll",void 0),Ov([xS()],e.prototype,"singleSelect",void 0),e})();var Ak=function(e){return e.Left="LEFT",e.Right="RIGHT",e}({});let Ok=(()=>{class e{constructor(e){this.templateRef=e,this._tableRowTemplateArrowDirection=Ak.Left}set tableRowTemplateArrowDirection(e){e=null==e?void 0:e.toUpperCase(),this._tableRowTemplateArrowDirection=Object.values(Ak).includes(e)?e:Ak.Left}get tableRowTemplateArrowDirection(){return this._tableRowTemplateArrowDirection}}return e.\u0275fac=function(t){return new(t||e)(Ar(Cl))},e.\u0275dir=Ke({type:e,selectors:[["","p-table-row-template",""]],inputs:{tableRowTemplateArrowDirection:["p-table-row-template-arrow-direction","tableRowTemplateArrowDirection"],poTableRowTemplateShow:["p-table-row-template-show","poTableRowTemplateShow"]}}),e})(),Tk=(()=>{class e{constructor(e){this.templateRef=e}}return e.\u0275fac=function(t){return new(t||e)(Ar(Cl))},e.\u0275dir=Ke({type:e,selectors:[["","p-table-cell-template",""]]}),e})(),Fk=(()=>{class e{constructor(e){this.templateRef=e}}return e.\u0275fac=function(t){return new(t||e)(Ar(Cl))},e.\u0275dir=Ke({type:e,selectors:[["","p-table-column-template",""]],inputs:{targetProperty:["p-property","targetProperty"]}}),e})(),Ik=(()=>{class e extends xk{constructor(e,t,n,i,s,o,r,a){super(e,i,a),this.changeDetector=s,this.decimalPipe=o,this.router=r,this.defaultService=a,this.tableOpacity=0,this.initialized=!1,this.visibleElement=!1,this.differ=t.find([]).create(null),this.clickListener=n.listen("document","click",()=>{}),this.resizeListener=n.listen("window","resize",e=>{this.debounceResize()})}set columnManagerTarget(e){this._columnManagerTarget=e,this.changeDetector.detectChanges()}get columnManagerTarget(){return this._columnManagerTarget}get hasRowTemplateWithArrowDirectionRight(){var e;return(null===(e=this.tableRowTemplate)||void 0===e?void 0:e.tableRowTemplateArrowDirection)===Ak.Right}get columnCount(){return this.mainColumns.length+(this.actions.length>0?1:0)+(this.selectable?1:0)+(this.hideDetail||void 0===this.columnMasterDetail?0:1)||1}get columnCountForMasterDetail(){return this.mainColumns.length+1+(this.actions.length>0?1:0)+(this.selectable?1:0)+(this.actions.length?0:1)}get detailHideSelect(){const e=this.columnMasterDetail;return!(!e||!e.detail)&&e.detail.hideSelect}get hasVisibleActions(){return!!this.visibleActions.length}get firstAction(){return this.visibleActions&&this.visibleActions[0]}get hasFooter(){return this.hasItems&&this.hasVisibleSubtitleColumns}get hasMasterDetailColumn(){return this.hasMainColumns&&this.hasItems&&!this.hideDetail&&!(!this.columnMasterDetail&&!this.hasRowTemplate)}get hasRowTemplate(){return!!this.tableRowTemplate}get hasSelectableColumn(){return this.selectable&&this.hasItems&&this.hasMainColumns}get hasValidColumns(){return!!this.validColumns.length}get hasVisibleSubtitleColumns(){return this.subtitleColumns.some(e=>!1!==e.visible)}get isSingleAction(){return 1===this.visibleActions.length}get visibleActions(){return this.actions&&this.actions.filter(e=>e&&!1!==e.visible)}ngAfterViewInit(){this.initialized=!0}showMoreInfiniteScroll({target:e}){!this.showMoreDisabled&&e.offsetHeight+e.scrollTop>=e.scrollHeight*(this.infiniteScrollDistance/110)&&this.onShowMore()}ngDoCheck(){var e;this.checkChangesItems(),this.verifyCalculateHeightTableContainer(),(null===(e=this.tableWrapperElement)||void 0===e?void 0:e.nativeElement.offsetWidth)&&!this.visibleElement&&this.initialized&&(this.debounceResize(),this.checkInfiniteScroll(),this.visibleElement=!0)}ngOnDestroy(){this.removeListeners()}applyFilters(e){this.page=1,this.initializeData(e)}collapse(e){this.setShowDetail(e,!1)}expand(e){this.setShowDetail(e,!0)}getSelectedRows(){return this.items.filter(e=>e.$selected)}getUnselectedRows(){return this.items.filter(e=>!e.$selected)}unselectRows(){const e=this.nameColumnDetail;this.items.forEach(t=>{const n=e?t[e]:null;Array.isArray(n)&&n.forEach(e=>{e.$selected=!1}),t.$selected=!1}),this.selectAll=!1}checkDisabled(e,t){return!!t.disabled&&t.disabled(e)}containsMasterDetail(e){return e[this.nameColumnDetail]&&e[this.nameColumnDetail].length}executeTableAction(e,t){e.disabled||this.validateTableAction(e,t)||(t.action(e),this.toggleRowAction(e))}formatNumber(e,t){return t?this.decimalPipe.transform(e,t):e}getBooleanLabel(e,t){return e||!1===e||0===e?(e=YD(e),t.boolean?e?t.boolean.trueLabel||"Sim":t.boolean.falseLabel||"N\xe3o":e?"Sim":"N\xe3o"):e}getColumnIcons(e,t){const n=e[t.property];return t.icons?Array.isArray(n)?this.mergeCustomIcons(n,t.icons):this.findCustomIcon(n,t):n}getColumnLabel(e,t){return t.labels.find(n=>e[t.property]===n.value)}getSubtitleColumn(e,t){return t.subtitles.find(n=>e[t.property]===n.value)}isShowMasterDetail(e){return!this.hideDetail&&this.nameColumnDetail&&e.$showDetail&&this.containsMasterDetail(e)&&!this.hasRowTemplate}isShowRowTemplate(e,t){return!this.tableRowTemplate||!this.tableRowTemplate.poTableRowTemplateShow||this.tableRowTemplate.poTableRowTemplateShow(e,t)}onClickLink(e,t,n){this.checkDisabled(t,n)||e.stopPropagation()}onChangeVisibleColumns(e){this.changeVisibleColumns.emit(e)}onVisibleColumnsChange(e){this.columns=e,this.changeDetector.detectChanges()}tooltipMouseEnter(e,t,n){if(this.tooltipText=void 0,this.hideTextOverflow&&e.target.offsetWidth<e.target.scrollWidth&&e.target.innerText.trim())return this.tooltipText=e.target.innerText;t&&this.checkingIfColumnHasTooltip(t,n)}tooltipMouseLeave(){this.tooltipText=void 0}togglePopup(e,t){this.popupTarget=t,this.changeDetector.detectChanges(),this.poPopupComponent.toggle(e)}trackBy(e){return e}validateTableAction(e,t){return"function"==typeof t.disabled?t.disabled(e):t.disabled}onOpenColumnManager(){this.lastVisibleColumnsSelected=[...this.columns]}removeItem(e){e instanceof Object?this.items=this.items.filter(t=>t!==e):"number"==typeof e&&this.items.splice(e,1)}updateItem(e,t){if("number"==typeof e)this.items.splice(e,1,t);else{const n=this.items.findIndex(t=>t===e);this.items.splice(n,1,t)}}getTemplate(e){const t=this.tableColumnTemplates.find(t=>t.targetProperty===e.property);return t?t.templateRef:(console.warn(`N\xe3o foi poss\xedvel encontrar o template para a coluna: ${e.property}, por gentileza informe a propriedade [p-property]`),null)}calculateHeightTableContainer(e){const t=parseFloat(e);this.heightTableContainer=t?t-this.getHeightTableFooter():void 0,this.setTableOpacity(1),this.changeDetector.detectChanges()}calculateWidthHeaders(){setTimeout(()=>{this.height&&this.headersTable.forEach(e=>{const t=e.nativeElement.querySelector(".po-table-header-fixed-inner");t&&(t.style.width=`${e.nativeElement.offsetWidth}px`)})})}checkInfiniteScroll(){this.hasInfiniteScroll()&&(this.poTableTbody.nativeElement.scrollHeight>this.height?this.includeInfiniteScroll():this.infiniteScroll=!1),this.changeDetector.detectChanges()}checkChangesItems(){const e=this.differ.diff(this.items);e&&this.selectAll&&(this.selectAll=null),e&&!this.hasColumns&&this.hasItems&&(this.columns=this.getDefaultColumns(this.items[0]))}checkingIfColumnHasTooltip(e,t){if("link"===e.type&&e.tooltip&&!this.checkDisabled(t,e))return this.tooltipText=e.tooltip;if("label"===e.type){const n=this.getColumnLabel(t,e);return this.tooltipText=null==n?void 0:n.tooltip}}debounceResize(){clearTimeout(this.timeoutResize),this.timeoutResize=setTimeout(()=>{this.calculateWidthHeaders(),this.setTableOpacity(1)})}findCustomIcon(e,t){const n=t.icons.find(t=>e===t.value);return n?[n]:void 0}getHeightTableFooter(){return this.tableFooterElement?this.tableFooterElement.nativeElement.offsetHeight:0}hasInfiniteScroll(){return this.infiniteScroll&&this.hasItems&&!this.subscriptionScrollEvent&&this.height&&this.poTableTbody.nativeElement.scrollHeight}includeInfiniteScroll(){this.scrollEvent$=this.defaultService.scrollListener(this.poTableTbody.nativeElement),this.subscriptionScrollEvent=this.scrollEvent$.subscribe(e=>this.showMoreInfiniteScroll(e))}mergeCustomIcons(e,t){const n=[];return e.forEach(e=>{const i=t.find(t=>e===t.icon||e===t.value);n.push(i||e)}),n}removeListeners(){this.resizeListener&&this.resizeListener(),this.clickListener&&this.clickListener(),this.subscriptionScrollEvent&&this.subscriptionScrollEvent.unsubscribe()}setTableOpacity(e){this.tableOpacity=e}verifyChangeHeightInFooter(){return this.footerHeight!==this.getHeightTableFooter()}verifyCalculateHeightTableContainer(){this.height&&this.verifyChangeHeightInFooter()&&(this.footerHeight=this.getHeightTableFooter(),this.calculateHeightTableContainer(this.height))}}return e.\u0275fac=function(t){return new(t||e)(Ar(BS),Ar(ll),Ar(Wa),Ar(pS),Ar(gl),Ar(Uh),Ar(Om),Ar(Sk))},e.\u0275cmp=He({type:e,selectors:[["po-table"]],contentQueries:function(e,t,n){if(1&e&&(fc(n,Ok,7),fc(n,Tk,5),fc(n,Fk,4)),2&e){let e;dc(e=gc())&&(t.tableRowTemplate=e.first),dc(e=gc())&&(t.tableCellTemplate=e.first),dc(e=gc())&&(t.tableColumnTemplates=e)}},viewQuery:function(e,t){if(1&e&&(pc(uC,5),pc(hC,5,Ua),pc(dC,5),pc(pC,5,Ua),pc(fC,5,Ua),pc(gC,5,Ua),pc(mC,5,Ua),pc(vC,5,Ua),pc(bC,5)),2&e){let e;dc(e=gc())&&(t.columnManagerTarget=e.first),dc(e=gc())&&(t.noColumnsHeader=e.first),dc(e=gc())&&(t.poPopupComponent=e.first),dc(e=gc())&&(t.tableFooterElement=e.first),dc(e=gc())&&(t.tableWrapperElement=e.first),dc(e=gc())&&(t.poTableTbody=e.first),dc(e=gc())&&(t.actionsIconElement=e),dc(e=gc())&&(t.actionsElement=e),dc(e=gc())&&(t.headersTable=e)}},features:[La([BS]),ur],decls:21,vars:6,consts:[["p-no-padding","",3,"p-no-shadow",4,"ngIf","ngIfElse"],["tableContainerTemplate",""],["class","po-row po-table-footer-show-more",3,"po-invisible",4,"ngIf"],["tableTemplate",""],[3,"p-actions","p-target"],["popup",""],["poTableColumnDetail",""],["inputRadio",""],["inputCheckbox",""],["contentHeaderTemplate",""],["noColumnsWithHeight",""],["noColumnsWithoutHeight",""],[3,"p-columns","p-max-columns","p-target","p-last-visible-columns-selected","p-visible-columns-change","p-change-visible-columns",4,"ngIf"],["p-no-padding","",3,"p-no-shadow"],[4,"ngTemplateOutlet"],["class","po-table-overlay",4,"ngIf"],[1,"po-table-main-container"],[1,"po-table-wrapper"],["tableWrapper",""],["class","po-table-container",3,"height",4,"ngIf"],[4,"ngIf"],["class","po-table-footer",4,"ngIf"],[1,"po-table-overlay"],[1,"po-table-overlay-content",3,"p-text"],[1,"po-table-container"],[1,"po-table-header-fixed","po-table-header"],[1,"po-table-container-fixed-inner"],["poTableTbody",""],[1,"po-table-footer"],[4,"ngFor","ngForOf","ngForTrackBy"],[3,"p-literals","p-subtitles"],[1,"po-row","po-table-footer-show-more"],["tableFooter",""],[1,"po-offset-xl-4","po-offset-lg-4","po-offset-md-3","po-lg-4","po-md-6",3,"p-disabled","p-label","p-loading","p-click"],[1,"po-table"],["class","po-table-column-selectable",4,"ngIf"],["class","po-table-header-column po-table-header-master-detail",4,"ngIf"],["class","po-table-header-column po-text-center",4,"ngIf"],["class","po-table-header-ellipsis",3,"width","max-width","min-width","po-clickable","po-table-header-subtitle","click",4,"ngFor","ngForOf","ngForTrackBy"],[3,"po-table-header-single-action","po-table-header-actions",4,"ngIf"],[3,"po-table-header-column-manager","po-table-header-column-manager-border","po-table-header-single-action",4,"ngIf"],["class","po-table-group-row",4,"ngIf"],[1,"po-table-column-selectable"],["type","checkbox","class","po-table-checkbox",3,"po-table-checkbox-checked","po-table-checkbox-indeterminate",4,"ngIf"],["class","po-table-checkbox-label po-clickable",3,"click",4,"ngIf"],["type","checkbox",1,"po-table-checkbox"],[1,"po-table-checkbox-label","po-clickable",3,"click"],[1,"po-table-header-column","po-table-header-master-detail"],[1,"po-table-header-column","po-text-center"],["noColumnsHeader",""],[4,"ngIf","ngIfThen","ngIfElse"],[1,"po-table-header-ellipsis",3,"click"],["headersTable",""],[1,"po-table-header-flex"],[4,"ngTemplateOutlet","ngTemplateOutletContext"],["columnManager",""],["p-tooltip-position","left",1,"po-table-header-column-manager-button","po-icon","po-icon-settings","po-clickable",3,"p-tooltip","click"],["columnManagerTarget",""],[1,"po-table-group-row"],[1,"po-table-row"],[1,"po-table-no-data","po-text-center",3,"colSpan"],["class","po-table-group-row",4,"ngFor","ngForOf","ngForTrackBy"],["class","po-table-column po-table-column-selectable",4,"ngIf"],["class","po-table-column-detail-toggle",3,"click",4,"ngIf"],[3,"width","max-width","min-width","po-table-column","po-table-column-right","po-table-column-center","po-table-column-icons","ngClass","click",4,"ngFor","ngForOf","ngForTrackBy"],["class","po-table-column po-table-column-single-action",4,"ngIf"],["class","po-table-column-actions",4,"ngIf"],["class","po-table-column",4,"ngIf"],[1,"po-table-column","po-table-column-selectable"],[1,"po-table-column-detail-toggle",3,"click"],[3,"ngTemplateOutlet","ngTemplateOutletContext"],[3,"ngClass","click"],[1,"po-table-column-cell","notranslate",3,"ngSwitch","p-tooltip","mouseenter","mouseleave"],[4,"ngSwitchCase"],[3,"p-action","p-disabled","p-link","p-row","p-value","click",4,"ngSwitchCase"],[3,"p-column","p-icons","p-row",4,"ngSwitchCase"],[4,"ngSwitchDefault"],[3,"p-action","p-disabled","p-link","p-row","p-value","click"],[3,"p-column","p-icons","p-row"],[3,"p-subtitle"],[3,"p-value"],[1,"po-table-column","po-table-column-single-action"],["class","po-table-single-action po-clickable",3,"po-table-action-disabled","click",4,"ngIf"],[1,"po-table-single-action","po-clickable",3,"click"],["class","po-table-single-action-content",3,"p-icon",4,"ngIf"],[1,"po-table-single-action-content",3,"p-icon"],[1,"po-table-column-actions"],[1,"po-icon","po-icon-more","po-clickable",3,"click"],["popupTarget",""],[1,"po-table-column"],[1,"po-table-row-template-container",3,"colSpan"],[1,"po-table-column-detail",3,"colSpan"],[3,"p-selectable","p-detail","p-items","p-select-row"],["class","po-icon po-clickable",3,"po-icon-arrow-up","po-icon-arrow-down",4,"ngIf"],[1,"po-icon","po-clickable"],["type","radio",1,"po-table-radio"],[1,"po-table-radio-label","po-clickable",3,"click"],[1,"po-table-header-ellipsis",3,"p-tooltip","mouseenter","mouseleave"],["columnHeader",""],[3,"po-table-header-icon-unselected","po-table-header-icon-descending","po-table-header-icon-ascending",4,"ngIf"],[1,"po-table-header-fixed-inner"],[3,"p-columns","p-max-columns","p-target","p-last-visible-columns-selected","p-visible-columns-change","p-change-visible-columns"]],template:function(e,t){if(1&e&&(kr(0,CC,2,2,"po-container",0),kr(1,AC,8,10,"ng-template",null,1,yc),kr(3,OC,3,5,"div",2),kr(4,kw,12,16,"ng-template",null,3,yc),Mr(6,"po-popup",4,5),kr(8,Aw,1,1,"ng-template",null,6,yc),kr(10,Ow,2,2,"ng-template",null,7,yc),kr(12,Tw,2,2,"ng-template",null,8,yc),kr(14,Iw,5,5,"ng-template",null,9,yc),kr(16,Mw,2,3,"ng-template",null,10,yc),kr(18,Pw,1,1,"ng-template",null,11,yc),kr(20,Vw,1,4,"po-table-column-manager",12)),2&e){const e=xr(2);Or("ngIf",t.container)("ngIfElse",e),Zs(3),Or("ngIf",!t.infiniteScroll),Zs(3),Or("p-actions",t.actions)("p-target",t.popupTarget),Zs(14),Or("ngIf",!t.hideColumnsManager)}},directives:function(){return[Fh,mE,eE,jh,_S,Oh,Rk,TS,RS,xh,Vh,Lh,Rh,Ck,bk,Lk,yk,gS,Mk,_k]},pipes:function(){return[qh,Hh,mk,$h]},encapsulation:2}),e})(),Mk=(()=>{class e{constructor(e){this.decimalPipe=e,this.isSelectable=!1,this.selectRow=new ec}set detail(e){this._detail=this.returnPoTableDetailObject(e)}get detail(){return this._detail}get detailColumns(){var e;return(null===(e=this.detail)||void 0===e?void 0:e.columns)||[]}get typeHeaderInline(){return this.detail&&!this.detail.typeHeader||"inline"===this.detail.typeHeader}get typeHeaderTop(){return this.detail&&"top"===this.detail.typeHeader}formatNumberDetail(e,t){return t?this.decimalPipe.transform(e,t):e}getColumnTitleLabel(e){return e.label||cS(e.property)}onSelectRow(e){e.$selected=!e.$selected,this.selectRow.emit(e)}returnPoTableDetailObject(e){if(e&&QD(e,"object")){if(e.columns&&e.columns.forEach(e=>e.property=e.property||e.column),Array.isArray(e))return{columns:e};if(e.columns)return e}}}return e.\u0275fac=function(t){return new(t||e)(Ar(Uh))},e.\u0275cmp=He({type:e,selectors:[["po-table-detail"]],inputs:{isSelectable:["p-selectable","isSelectable"],detail:["p-detail","detail"],items:["p-items","items"]},outputs:{selectRow:"p-select-row"},decls:4,vars:2,consts:[[1,"po-table-master-detail"],[4,"ngIf"],["class","po-table-detail-row",3,"po-table-row-active",4,"ngFor","ngForOf"],["class","po-table-header po-table-column-selectable",4,"ngIf"],[1,"po-table-header","po-table-header-column","po-table-header-master-detail"],["class","po-table-header po-table-header-ellipsis",4,"ngFor","ngForOf"],[1,"po-table-header","po-table-column-selectable"],[1,"po-table-header","po-table-header-ellipsis"],[1,"po-table-detail-row"],[4,"ngIf","ngIfElse"],["masterDetailSpace",""],["class","po-table-column-master-detail po-table-master-detail-label",3,"click",4,"ngFor","ngForOf"],[1,"po-table-column-master-detail-space-checkbox"],[1,"po-table-column","po-table-column-selectable"],["type","checkbox",1,"po-table-checkbox"],[1,"po-table-checkbox-label","po-clickable",3,"click"],[1,"po-table-column-master-detail-space"],[1,"po-table-column-master-detail","po-table-master-detail-label",3,"click"],[3,"ngSwitch"],[4,"ngSwitchCase"],[4,"ngSwitchDefault"]],template:function(e,t){1&e&&(Fr(0,"table",0),kr(1,jw,5,2,"thead",1),Fr(2,"tbody"),kr(3,Yw,5,5,"tr",2),Ir(),Ir()),2&e&&(Zs(1),Or("ngIf",t.typeHeaderTop),Zs(2),Or("ngForOf",t.items))},directives:[Fh,Oh,Vh,Lh,Rh],pipes:[qh,Hh,mk],encapsulation:2}),e})(),Pk=(()=>{class e{constructor(){this.click=new ec}get allowTooltip(){return!this.disabled&&this.iconTooltip}onClick(e){this.clickable&&this.click.emit(e)}tooltipMouseEnter(){this.allowTooltip&&(this.tooltip=this.iconTooltip)}tooltipMouseLeave(){this.tooltip=void 0}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=He({type:e,selectors:[["po-table-icon"]],inputs:{clickable:["p-clickable","clickable"],color:["p-color","color"],disabled:["p-disabled","disabled"],icon:["p-icon","icon"],iconTooltip:["p-icon-tooltip","iconTooltip"]},outputs:{click:"p-click"},decls:1,vars:9,consts:[[3,"ngClass","p-icon","p-tooltip","click","mouseenter","mouseleave"]],template:function(e,t){1&e&&(Fr(0,"po-icon",0),Br("click",function(e){return t.onClick(e)})("mouseenter",function(){return t.tooltipMouseEnter()})("mouseleave",function(){return t.tooltipMouseLeave()}),Ir()),2&e&&(va("po-table-icon-content ",t.disabled?"":t.color,""),Or("ngClass",ql(6,Zw,t.clickable,t.disabled))("p-icon",t.icon)("p-tooltip",t.tooltip))},directives:[gS,xh,RS],encapsulation:2,changeDetection:0}),e})(),Vk=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=He({type:e,selectors:[["po-table-show-subtitle"]],inputs:{subtitles:["p-subtitles","subtitles"],literals:["p-literals","literals"]},decls:7,vars:3,consts:[[1,"po-table-footer-show-subtitle",3,"click"],[1,"po-table-footer-show-subtitle-container"],[1,"po-table-show-subtitle"],["p-size","sm",3,"p-title"],["modal",""],["class","po-table-subtitle-footer-modal po-row",4,"ngFor","ngForOf"],[1,"po-table-subtitle-footer-modal","po-row"],["p-hide-title","true",3,"p-subtitle"],[1,"po-table-subtitle-text"]],template:function(e,t){if(1&e){const e=Rr();Fr(0,"div",0),Br("click",function(){return It(e),xr(5).open()}),Fr(1,"div",1),Fr(2,"span",2),pa(3),Ir(),Ir(),Ir(),Fr(4,"po-modal",3,4),kr(6,Qw,4,2,"div",5),Ir()}2&e&&(Zs(3),fa(t.literals.seeCompleteSubtitle),Zs(1),Or("p-title",t.literals.completeSubtitle),Zs(2),Or("ngForOf",t.subtitles))},directives:function(){return[qE,Oh,Lk]},encapsulation:2}),e})(),Lk=(()=>{class e{constructor(e){this.poColorPaletteService=e,this.hideTitle=!1}set subtitle(e){e&&(e.color=this.poColorPaletteService.getColor(e)),this._subtitle=e}get subtitle(){return this._subtitle}}return e.\u0275fac=function(t){return new(t||e)(Ar(KE))},e.\u0275cmp=He({type:e,selectors:[["po-table-subtitle-circle"]],inputs:{hideTitle:["p-hide-title","hideTitle"],subtitle:["p-subtitle","subtitle"]},decls:2,vars:5,consts:[[3,"title"]],template:function(e,t){1&e&&(Fr(0,"span",0),pa(1),Ir()),2&e&&(va("po-table-subtitle-circle po-",null==t.subtitle?null:t.subtitle.color,""),Or("title",t.hideTitle?"":null==t.subtitle?null:t.subtitle.label),Zs(1),ga(" ",null==t.subtitle?null:t.subtitle.content,"\n"))},encapsulation:2,changeDetection:0}),e})(),Rk=(()=>{class e{constructor(e,t){this.element=e,this.renderer=t}ngAfterViewInit(){this.initializeResizeListener(),this.debounceResize()}ngDoCheck(){!this.isVisible&&this.getContainerSize()>0&&(this.toggleShowCompleteSubtitle(),this.isVisible=!0)}ngOnDestroy(){this.removeResizeListener()}debounceResize(){clearTimeout(this.timeoutResize),this.timeoutResize=setTimeout(()=>{this.toggleShowCompleteSubtitle()})}getContainerSize(){return this.element.nativeElement.querySelector(".po-table-subtitle-footer-container").offsetWidth}getItemsSize(){const e=this.element.nativeElement.querySelectorAll(".po-table-subtitle-footer");return Array.from(e).map(e=>e.offsetWidth).reduce((e,t)=>e+t,16)}initializeResizeListener(){this.resizeListener=this.renderer.listen("window","resize",e=>{this.debounceResize()})}removeResizeListener(){this.resizeListener()}toggleShowCompleteSubtitle(){const e=this.getContainerSize(),t=this.getItemsSize();this.showSubtitle=t>e}}return e.\u0275fac=function(t){return new(t||e)(Ar(Ua),Ar(Wa))},e.\u0275cmp=He({type:e,selectors:[["po-table-subtitle-footer"]],inputs:{literals:["p-literals","literals"],subtitles:["p-subtitles","subtitles"]},decls:3,vars:2,consts:[[1,"po-table-subtitle-footer-container"],["class","po-table-subtitle-footer",4,"ngFor","ngForOf"],[3,"p-literals","p-subtitles",4,"ngIf"],[1,"po-table-subtitle-footer"],["p-hide-title","true",3,"p-subtitle"],[1,"po-table-subtitle-text"],[3,"p-literals","p-subtitles"]],template:function(e,t){1&e&&(Fr(0,"div",0),kr(1,Jw,4,2,"div",1),kr(2,Xw,1,2,"po-table-show-subtitle",2),Ir()),2&e&&(Zs(1),Or("ngForOf",t.subtitles),Zs(1),Or("ngIf",t.showSubtitle))},directives:[Oh,Fh,Lk,Vk],encapsulation:2}),e})(),jk=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[Uh],imports:[[Gh,Vb,Hm,FS,TE,tE,SS,zE,gk,vE,vk,jS,mS]]}),e})();var Nk=function(e){return e[e.arrowDown=40]="arrowDown",e[e.arrowUp=38]="arrowUp",e[e.backspace=8]="backspace",e[e.delete=46]="delete",e[e.enter=13]="enter",e[e.esc=27]="esc",e[e.keyK=75]="keyK",e[e.keyL=76]="keyL",e[e.space=32]="space",e[e.tab=9]="tab",e}({}),Bk=function(e){return e[e.startsWith=0]="startsWith",e[e.contains=1]="contains",e[e.endsWith=2]="endsWith",e}({});const $k={en:{noData:"No data found"},es:{noData:"Datos no encontrados"},pt:{noData:"Nenhum dado encontrado"},ru:{noData:"\u0414\u0430\u043d\u043d\u044b\u0435 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b"}};let Hk=(()=>{class e{constructor(e){this.autoFocus=!1,this.emitObjectValue=!1,this.change=new ec,this.ngModelChange=new ec,this.cacheOptions=[],this.firstInWriteValue=!0,this.isFirstFilter=!0,this.isFiltering=!1,this.previousSearchValue="",this.visibleOptions=[],this.cacheStaticOptions=[],this.comboOptionsList=[],this.onModelTouched=null,this._changeOnEnter=!1,this._debounceTime=400,this._disabled=!1,this._disabledInitFilter=!1,this._fieldLabel="label",this._fieldValue="value",this._filterMinlength=0,this._filterMode=Bk.startsWith,this._options=[],this._placeholder="",this._required=!1,this._sort=!1,this.fromWriteValue=!1,this.language=e.getShortLanguage()}set placeholder(e){this._placeholder=e||""}get placeholder(){return this._placeholder}set debounceTime(e){const t=parseInt(e,10);this._debounceTime=!isNaN(t)&&t>0?t:400}get debounceTime(){return this._debounceTime}set disabledInitFilter(e){this._disabledInitFilter=YD(e)}get disabledInitFilter(){return this._disabledInitFilter}set fieldValue(e){this._fieldValue=e||"value",QD(this.filterService,"string")&&this.service&&(this.service.fieldValue=this._fieldValue)}get fieldValue(){return this._fieldValue}set fieldLabel(e){this._fieldLabel=e||"label",QD(this.filterService,"string")&&this.service&&(this.service.fieldLabel=this._fieldLabel)}get fieldLabel(){return this._fieldLabel}set filterMinlength(e){const t="string"==typeof e?parseInt(e,10):e;this._filterMinlength=Number.isInteger(t)?t:0}get filterMinlength(){return this._filterMinlength}set required(e){this._required=YD(e),this.validateModel(this.selectedValue)}get required(){return this._required}set changeOnEnter(e){this._changeOnEnter=YD(e)}get changeOnEnter(){return this._changeOnEnter}set disabled(e){this._disabled=YD(e),this.validateModel(this.selectedValue)}get disabled(){return this._disabled}set sort(e){this._sort=YD(e),this.comboListDefinitions()}get sort(){return this._sort}set options(e){this._options=Array.isArray(e)?e:[],this.comboListDefinitions()}get options(){return this._options}set filterMode(e){switch(this._filterMode=e in Bk?e:Bk.startsWith,this._filterMode.toString()){case"startsWith":this._filterMode=Bk.startsWith;break;case"contains":this._filterMode=Bk.contains;break;case"endsWith":this._filterMode=Bk.endsWith}}get filterMode(){return this._filterMode}set filterParams(e){this._filterParams=e||0===e||!1===e?e:void 0}get filterParams(){return this._filterParams}set literals(e){this._literals=e instanceof Object&&!(e instanceof Array)?Object.assign(Object.assign(Object.assign({},$k.pt),$k[this.language]),e):$k[this.language]}get literals(){return this._literals||$k[this.language]}get isOptionGroupList(){return this._options.length&&this._options[0].hasOwnProperty("options")}ngOnInit(){this.updateComboList()}onInitService(){this.filterService&&(this.setService(this.filterService),this.initInputObservable())}setService(e){e&&(QD(e,"object")?this.service=e:(this.service=this.defaultService,this.service.configProperties(e,this.fieldLabel,this.fieldValue)))}compareMethod(e,t,n){switch(n){case Bk.startsWith:return this.startsWith(e,t);case Bk.contains:return this.contains(e,t);case Bk.endsWith:return this.endsWith(e,t)}}startsWith(e,t){return t.label.toLowerCase().startsWith(e.toLowerCase())}contains(e,t){return t.label.toLowerCase().indexOf(e.toLowerCase())>-1}endsWith(e,t){return t.label.toLowerCase().endsWith(e.toLowerCase())}getOptionFromValue(e,t){return t?t.find(t=>this.isEqual(t.value,e)):null}getOptionFromLabel(e,t){return t?t.find(t=>t.label.toString().toLowerCase()===e.toString().toLowerCase()):null}updateSelectedValue(e,t=!0){const n=e&&e.label||"";this.updateInternalVariables(e),this.changeOnEnter&&t?this.setInputValue(n):this.changeOnEnter||this.setInputValue(n),t&&this.updateModel(e&&e.value||void 0)}callModelChange(e){return this.onModelChange?this.onModelChange(e):this.ngModelChange.emit(e)}isEqual(e,t){return(e||0===e)&&t?e.toString()===t.toString():((null===e&&null!==t||void 0===e&&void 0!==t)&&(e=`${e}`),e===t)}searchForLabel(e,t,n){if(e&&t&&t.length){const i=[];let s,o=!1;t.forEach(t=>{if("options"in t)return o=!1,s=t;t.label&&(this.compareMethod(e,t,n)||this.service)&&(this.isOptionGroupList&&!o&&(i.push(s),o=!0),i.push(t))}),this.selectedView=i[this.isOptionGroupList?1:0],this.updateComboList(i)}else this.updateComboList()}updateComboList(e){const t=e||[...this.comboOptionsList],n=!e&&this.selectedValue?[Object.assign({},this.selectedOption)]:t;this.visibleOptions=n,!this.selectedView&&this.visibleOptions.length&&(this.selectedView=t.find(e=>void 0!==e.value))}getNextOption(e,t,n=!1){const i=n?t.slice(0).reverse():t.slice(0);let s=null,o=!1;for(const r of i){if(r.value&&!s&&(s=r),r.value&&o)return r;this.isEqual(r.value,e)&&(o=!0)}return s}getIndexSelectedView(){for(let e=0;e<this.visibleOptions.length;e++)if(this.compareObjects(this.visibleOptions[e],this.selectedView))return e;return null}compareObjects(e,t){return JSON.stringify(e)===JSON.stringify(t)}verifyValidOption(){const e=this.getInputValue(),t=this.getOptionFromLabel(e,this.comboOptionsList);if(this.service||this.updateComboList([...this.cacheStaticOptions]),t&&t.value!==this.selectedValue)this.updateSelectedValue(t),this.previousSearchValue=t.label;else{if(this.selectedValue&&this.selectedOption&&this.selectedOption.label!==e)return this.updateSelectedValueWithOldOption(),void(this.previousSearchValue=this.selectedOption.label);if(e&&!t)return this.updateSelectedValue(null,!(!this.selectedOption||this.selectedOption.label===e)||this.changeOnEnter),void(this.previousSearchValue="")}}writeValue(e){if(this.fromWriteValue=!0,rS(e)&&!this.service&&this.comboOptionsList&&this.comboOptionsList.length){const t=this.getOptionFromValue(e,this.comboOptionsList);return this.updateSelectedValue(t),void this.updateComboList()}if(e&&this.service)return this.getObjectByValue(e);this.updateSelectedValue(null),this.updateComboList()}setDisabledState(e){this.disabled=e}registerOnChange(e){this.onModelChange=e}registerOnTouched(e){this.onModelTouched=e}registerOnValidatorChange(e){this.validatorChange=e}validate(e){if(DE(this.required,this.disabled,e.value))return{required:{valid:!1}}}clear(e){this.callModelChange(e),this.updateSelectedValue(null),this.updateComboList()}configAfterSetFilterService(e){e?(this.comboOptionsList=[],this.unsubscribeKeyupObservable(),this.onInitService()):(this.service=void 0,this.comboOptionsList=this.cacheStaticOptions),this.visibleOptions=[],this.isFirstFilter=!0}unsubscribeKeyupObservable(){this.keyupSubscribe&&this.keyupSubscribe.unsubscribe()}validateModel(e){this.validatorChange&&this.validatorChange(e)}comboListDefinitions(){this.comboOptionsList=this.options.length>0?this.listingComboOptions(this.options):this.options,this.cacheStaticOptions=this.comboOptionsList,this.updateComboList()}compareOptions(e,t){const n=e.label.toString().toLowerCase(),i=t.label.toString().toLowerCase();return n<i?-1:n>i?1:0}hasDuplicatedOption(e,t,n){return e.some(e=>e.label===t)||n&&n.some(e=>e.label===t)}listingComboOptions(e){const t=e.concat(),n=this.verifyComboOptions(t);return this.sortOptions(n),this.isOptionGroupList&&n.length>0?this.verifyComboOptionsGroup(n):n}sortOptions(e){if(e.length>0&&this.sort)return e.sort(this.compareOptions)}validateValue(e,t=!1){const{label:n,options:i,value:s}=e;return this.isOptionGroupList?rS(n)&&i&&i.length>0||!0===t&&rS(s):rS(s)&&!i}verifyComboOptions(e,t=!1,n){return e.reduce((e,i)=>this.verifyIfHasLabel(i)&&!this.hasDuplicatedOption(e,i.label,n)&&this.validateValue(i,t)?(e.push(i),e):e,[])}verifyComboOptionsGroup(e){return e.reduce((e,t)=>{const{options:n,label:i}=t,s=this.verifyComboOptions(n,!0,e);return s.length>0&&(this.sortOptions(s),e.push({label:i,options:!0},...s)),e},[])}verifyIfHasLabel(e={}){const{label:t,options:n,value:i}=e;return!(this.isOptionGroupList&&n&&!t||!t&&!i||!this.isOptionGroupList&&n||(e.label||(e.label=e.value.toString()),0))}updateInternalVariables(e){e?(this.selectedView=e,this.selectedOption=e):(this.selectedView=void 0,this.selectedOption=void 0)}updateModel(e){e!==this.selectedValue&&(this.fromWriteValue||this.callModelChange(e),this.change.emit(this.emitObjectValue?this.selectedOption:e)),this.selectedValue=e,this.fromWriteValue=!1}updateSelectedValueWithOldOption(){const e=this.getOptionFromValue(this.selectedValue,this.comboOptionsList);if(e&&e.label)return this.updateSelectedValue(e)}}return e.\u0275fac=function(t){return new(t||e)(Ar(pS))},e.\u0275dir=Ke({type:e,inputs:{autoFocus:["p-auto-focus","autoFocus"],emitObjectValue:["p-emit-object-value","emitObjectValue"],placeholder:["p-placeholder","placeholder"],debounceTime:["p-debounce-time","debounceTime"],disabledInitFilter:["p-disabled-init-filter","disabledInitFilter"],fieldValue:["p-field-value","fieldValue"],fieldLabel:["p-field-label","fieldLabel"],filterMinlength:["p-filter-minlength","filterMinlength"],required:["p-required","required"],changeOnEnter:["p-change-on-enter","changeOnEnter"],disabled:["p-disabled","disabled"],sort:["p-sort","sort"],options:["p-options","options"],filterMode:["p-filter-mode","filterMode"],filterParams:["p-filter-params","filterParams"],literals:["p-literals","literals"],label:["p-label","label"],help:["p-help","help"],name:"name",filterService:["p-filter-service","filterService"],icon:["p-icon","icon"],optional:["p-optional","optional"],clean:["p-clean","clean"]},outputs:{change:"p-change",ngModelChange:"ngModelChange"}}),Ov([xS()],e.prototype,"autoFocus",void 0),Ov([xS()],e.prototype,"clean",void 0),Ov([xS()],e.prototype,"emitObjectValue",void 0),e})(),Uk=(()=>{class e{constructor(e){this.http=e,this.fieldLabel="label",this.fieldValue="value",this.headers=new Xm({"X-PO-No-Message":"true"}),this.messages=[]}get url(){return this._url}getFilteredData(e,t){const n=e.value,i=uS(t),s=Object.assign(Object.assign({},i),{filter:n});return this.http.get(`${this.url}`,{responseType:"json",params:s,headers:this.headers}).pipe(k(e=>this.parseToArrayComboOption(e.items)))}getObjectByValue(e,t){const n=uS(t);return this.http.get(`${this.url}/${e}`,{params:n,headers:this.headers}).pipe(k(e=>this.parseToComboOption(e)))}configProperties(e,t,n){this._url=e,this.fieldLabel=t,this.fieldValue=n}parseToArrayComboOption(e){if(e&&e.length>0){const t=e.map(e=>this.parseToComboOption(e));return this.displayMessages(),t}return[]}parseToComboOption(e){return(null==e?void 0:e[this.fieldValue])?{label:e[this.fieldLabel],value:e[this.fieldValue]}:(this.addMessage(e,this.fieldValue),{value:""})}addMessage(e,t){this.messages.push(`Cannot read property "${t}" of ${JSON.stringify(e)},\n      see [p-field-value] property at https://po-ui.io/documentation/po-combo`)}displayMessages(){this.messages.length&&(this.messages.forEach(e=>console.error(e)),this.messages=[])}}return e.\u0275fac=function(t){return new(t||e)(ci(gv))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),qk=(()=>{class e{constructor(e){this.templateRef=e}}return e.\u0275fac=function(t){return new(t||e)(Ar(Cl))},e.\u0275dir=Ke({type:e,selectors:[["","p-combo-option-template",""]]}),e})(),zk=(()=>{class e extends Hk{constructor(e,t,n,i,s,o,r,a){super(a),this.element=e,this.differs=t,this.defaultService=n,this.renderer=i,this.changeDetector=s,this.controlPosition=o,this.sanitized=r,this.comboIcon="po-icon-arrow-down",this.comboOpen=!1,this.isProcessingGetObjectByValue=!1,this.scrollTop=0,this.shouldMarkLetters=!0,this._isServerSearching=!1,this.onScroll=()=>{this.adjustContainerPosition()},this.differ=t.find([]).create(null)}set isServerSearching(e){e?(this._isServerSearching=e,this.changeDetector.detectChanges(),this.setContainerPosition(),this.initializeListeners()):this._isServerSearching=e}get isServerSearching(){return this._isServerSearching}ngAfterViewInit(){this.autoFocus&&this.focus()}ngOnChanges(e){e.debounceTime&&(this.unsubscribeKeyupObservable(),this.initInputObservable()),e.filterService&&this.configAfterSetFilterService(this.filterService)}ngOnDestroy(){this.removeListeners(),this.filterSubscription&&this.filterSubscription.unsubscribe(),this.getSubscription&&this.getSubscription.unsubscribe()}focus(){this.disabled||this.inputEl.nativeElement.focus()}onBlur(){var e;null===(e=this.onModelTouched)||void 0===e||e.call(this)}onKeyDown(e){const t=e.keyCode,n=e.target.value;if(this.service&&t===Nk.tab&&n)return this.controlComboVisibility(!1),this.getObjectByValue(n);if(t===Nk.arrowUp||t===Nk.arrowDown)return e.preventDefault(),this.comboOpen&&(t===Nk.arrowUp?this.selectPreviousOption():this.selectNextOption()),this.controlComboVisibility(!0),this.isFiltering=!!this.changeOnEnter&&this.isFiltering,void(this.shouldMarkLetters=!!this.changeOnEnter&&this.shouldMarkLetters);if(t===Nk.tab||t===Nk.esc)return t===Nk.esc&&this.comboOpen&&(e.preventDefault(),e.stopPropagation()),this.controlComboVisibility(!1),this.verifyValidOption(),void(this.service||(this.selectedView=this.changeOnEnter&&!this.selectedValue?void 0:this.selectedView));if(t===Nk.enter&&this.selectedView&&this.comboOpen){const e=this.selectedView.value!==this.selectedValue||n!==this.selectedView.label;return this.controlComboVisibility(!1),this.updateSelectedValue(this.selectedView,e),this.isFiltering=!1,void(this.service||this.updateComboList([...this.cacheStaticOptions]))}t===Nk.enter&&this.controlComboVisibility(!0)}onKeyUp(e){const t=e.keyCode||e.which,n=e.target.value;if(t!==Nk.arrowUp&&t!==Nk.arrowDown&&t!==Nk.enter){if(n)this.service||this.previousSearchValue===n||(this.shouldMarkLetters=!0,this.isFiltering=!0,this.searchForLabel(n,this.comboOptionsList,this.filterMode));else{const e=this.service&&this.selectedValue&&this.selectedOption.label===this.previousSearchValue;this.updateSelectedValue(null),this.service?e&&this.updateComboList([...this.cacheOptions]):this.updateComboList(),this.isFiltering=!1}this.previousSearchValue!==n&&(this.changeDetector.detectChanges(),this.controlComboVisibility(!0))}this.previousSearchValue=n}initInputObservable(){if(this.service){const e=ip(this.inputEl.nativeElement,"keyup").pipe(Ap(e=>this.isValidCharacterToSearch(e.keyCode)),k(e=>e.currentTarget.value),Bb(),Gp(()=>{this.shouldMarkLetters=!1}),Lb(this.debounceTime));this.keyupSubscribe=e.subscribe(e=>{(e.length>=this.filterMinlength||!e)&&this.controlApplyFilter(e)})}}controlApplyFilter(e){this.isProcessingGetObjectByValue||this.selectedOption&&e===this.selectedOption.label||this.applyFilter(e)}applyFilter(e){this.controlComboVisibility(!1),this.isServerSearching=!0,this.filterSubscription=this.service.getFilteredData({property:this.fieldLabel,value:e},this.filterParams).subscribe(t=>this.setOptionsByApplyFilter(e,t),e=>this.onErrorFilteredData())}setOptionsByApplyFilter(e,t){this.shouldMarkLetters=!0,this.isServerSearching=!1,this.options=t,this.searchForLabel(e,t,this.filterMode),this.changeDetector.detectChanges(),this.controlComboVisibility(!0),this.isFirstFilter&&(this.isFirstFilter=!this.isFirstFilter,this.cacheOptions=this.comboOptionsList)}getObjectByValue(e){var t;this.selectedValue!==e&&(null===(t=this.selectedOption)||void 0===t?void 0:t.label)!==e&&(this.isProcessingGetObjectByValue=!0,this.getSubscription=this.service.getObjectByValue(e,this.filterParams).subscribe(e=>this.updateOptionByFilteredValue(e),e=>this.onErrorGetObjectByValue()))}updateOptionByFilteredValue(e){e?(this.options=[e],this.onOptionClick(e)):this.updateSelectedValue(null),setTimeout(()=>{this.isProcessingGetObjectByValue=!1},this.debounceTime)}selectPreviousOption(){const e=this.selectedView&&this.selectedView.value;if(e){const t=this.getNextOption(e,this.visibleOptions,!0);this.updateSelectedValue(t,t&&t.value!==e&&!this.changeOnEnter)}else if(this.visibleOptions.length){const t=this.visibleOptions[this.visibleOptions.length-1];this.updateSelectedValue(t,t.value!==e&&!this.changeOnEnter)}}selectNextOption(){const e=this.selectedView&&this.selectedView.value;if(e){const t=this.getNextOption(e,this.visibleOptions);this.updateSelectedValue(t,t&&t.value!==e&&!this.changeOnEnter)}else if(this.visibleOptions.length){const t=this.visibleOptions[this.changeOnEnter?1:0];this.updateSelectedValue(t,t.value!==e&&!this.changeOnEnter)}}toggleComboVisibility(){this.disabled||(this.service&&!this.disabledInitFilter&&this.applyFilterInFirstClick(),this.controlComboVisibility(!this.comboOpen))}applyFilterInFirstClick(){this.isFirstFilter&&!this.selectedValue&&this.applyFilter("")}controlComboVisibility(e){e?this.open():this.close()}onOptionClick(e,t){const n=this.getInputValue(),i=e.value!==this.selectedValue||!(!this.selectedView||n===this.selectedView.label);t&&t.stopPropagation(),this.updateSelectedValue(e,i),this.controlComboVisibility(!1),this.service||this.updateComboList([...this.cacheStaticOptions]),this.previousSearchValue=this.selectedView.label}scrollTo(e){const t=this.element.nativeElement.querySelectorAll(".po-combo-item-selected");this.setScrollTop(!t.length||e<=1?0:t[0].offsetTop-88)}getInputValue(){return this.inputEl.nativeElement.value}setInputValue(e){this.inputEl.nativeElement.value=e}wasClickedOnToggle(e){!this.comboOpen||this.inputEl.nativeElement.contains(e.target)||this.iconElement.nativeElement.contains(e.target)||this.contentElement&&this.contentElement.nativeElement.contains(e.target)?!this.service||this.getInputValue()||this.isFirstFilter||this.applyFilter(""):(this.controlComboVisibility(!1),this.verifyValidOption(),this.selectedView=this.changeOnEnter&&!this.selectedValue?void 0:this.selectedView)}getLabelFormatted(e){const t=this.sanitizeTagHTML(e);let n=t;if(this.isFiltering||this.service&&this.getInputValue()&&!this.compareObjects(this.cacheOptions,this.visibleOptions)&&this.shouldMarkLetters){const e=this.sanitizeTagHTML(this.getInputValue().toString().toLowerCase()),i=t.toLowerCase(),s='<span class="po-font-text-large-bold">',o="</span>";let r,a,l;switch(this.filterMode){case Bk.startsWith:case Bk.contains:const c=i.indexOf(e);c>-1&&(r=t.substring(0,c),a=t.substring(c,c+e.length),l=t.substring(c+e.length),n=r+s+a+o+l);break;case Bk.endsWith:const u=i.lastIndexOf(e);u>-1&&(r=t.substring(0,u),a=t.substring(u),n=r+s+a+o)}}return this.safeHtml(n)}safeHtml(e){return this.sanitized.bypassSecurityTrustHtml(e)}isValidCharacterToSearch(e){return 9!==e&&13!==e&&16!==e&&17!==e&&18!==e&&20!==e&&27!==e&&37!==e&&38!==e&&39!==e&&40!==e&&93!==e}searchOnEnter(e){this.service&&!this.selectedView&&e.length>=this.filterMinlength&&this.controlApplyFilter(e)}adjustContainerPosition(){this.controlPosition.adjustPosition("bottom")}close(){this.comboOpen=!1,this.changeDetector.detectChanges(),this.comboIcon="po-icon-arrow-down",this.removeListeners(),this.isFiltering=!1}initializeListeners(){this.removeListeners(),this.clickoutListener=this.renderer.listen("document","click",e=>{this.wasClickedOnToggle(e)}),this.eventResizeListener=this.renderer.listen("window","resize",()=>{setTimeout(()=>this.adjustContainerPosition(),250)}),window.addEventListener("scroll",this.onScroll,!0)}onErrorGetObjectByValue(){this.updateOptionByFilteredValue(null)}onErrorFilteredData(){this.isServerSearching=!1,this.updateComboList([]),this.controlComboVisibility(!0)}open(){this.comboOpen=!0,this.changeDetector.detectChanges(),this.comboIcon="po-icon-arrow-up",this.initializeListeners(),this.inputEl.nativeElement.focus(),this.scrollTo(this.getIndexSelectedView()),this.setContainerPosition()}removeListeners(){this.clickoutListener&&this.clickoutListener(),this.eventResizeListener&&this.eventResizeListener(),window.removeEventListener("scroll",this.onScroll,!0)}sanitizeTagHTML(e=""){return e.replace(/\</gm,"&lt;").replace(/\>/g,"&gt;")}setContainerPosition(){this.controlPosition.setElements(this.containerElement.nativeElement,8,this.inputEl,["top","bottom"],!0),this.adjustContainerPosition()}setScrollTop(e){this.contentElement&&(this.contentElement.nativeElement.scrollTop=e)}}return e.\u0275fac=function(t){return new(t||e)(Ar(Ua),Ar(ll),Ar(Uk),Ar(Wa),Ar(gl),Ar(VS),Ar(Ed),Ar(pS))},e.\u0275cmp=He({type:e,selectors:[["po-combo"]],contentQueries:function(e,t,n){if(1&e&&fc(n,qk,7),2&e){let e;dc(e=gc())&&(t.comboOptionTemplate=e.first)}},viewQuery:function(e,t){if(1&e&&(pc(e_,5,Ua),pc(t_,5,Ua),pc(n_,7,Ua),pc(Wy,7,Ua)),2&e){let e;dc(e=gc())&&(t.containerElement=e.first),dc(e=gc())&&(t.contentElement=e.first),dc(e=gc())&&(t.iconElement=e.first),dc(e=gc())&&(t.inputEl=e.first)}},features:[La([Uk,VS,{provide:Pv,useExisting:se(()=>e),multi:!0},{provide:jv,useExisting:se(()=>e),multi:!0}]),ur,lt],decls:21,vars:23,consts:[[3,"p-label","p-help","p-optional"],[1,"po-field-container-content"],["class","po-field-icon-container-left",4,"ngIf"],["autocomplete","off","type","text",1,"po-input","po-combo-input",3,"ngClass","disabled","placeholder","required","click","keyup","blur","keyup.enter","keydown"],["inp",""],[1,"po-field-icon-container-right"],[3,"p-element-ref","p-change-event",4,"ngIf"],[3,"click"],["iconArrow",""],[1,"po-combo-container",3,"hidden"],["containerElement",""],[4,"ngIf","ngIfThen","ngIfElse"],["loadingTemplate",""],["optionsTemplate",""],["visibleOptionsTemplate",""],["noDataTemplate",""],[1,"po-field-icon-container-left"],[1,"po-field-icon",3,"p-icon"],[3,"p-element-ref","p-change-event"],[1,"po-combo-container-loading"],[1,"po-combo-container-content"],["contentElement",""],[3,"po-combo-item-selected","click",4,"ngFor","ngForOf"],["defaultOptionTemplate",""],["optionTemplate",""],["class","po-combo-item-title",4,"ngIf","ngIfElse"],["optionLink",""],[1,"po-combo-item-title"],[1,"po-combo-item"],[3,"innerHTML"],["optionsGroupTemplate",""],["defaultOptionsTemplate",""],[3,"ngTemplateOutlet","ngTemplateOutletContext"],[1,"po-combo-container-no-data"],[1,"po-combo-no-data","po-text-center"]],template:function(e,t){if(1&e&&(Fr(0,"po-field-container",0),Fr(1,"div",1),kr(2,i_,2,3,"div",2),Fr(3,"input",3,4),Br("click",function(){return t.toggleComboVisibility()})("keyup",function(e){return t.onKeyUp(e)})("blur",function(){return t.onBlur()})("keyup.enter",function(e){return t.searchOnEnter(e.target.value)})("keydown",function(e){return t.onKeyDown(e)}),Ir(),Fr(5,"div",5),kr(6,s_,1,1,"po-clean",6),Fr(7,"span",7,8),Br("click",function(){return t.toggleComboVisibility()}),Ir(),Ir(),Ir(),Fr(9,"div",9,10),kr(11,o_,1,0,"ng-container",11),Ir(),Mr(12,"po-field-container-bottom"),Ir(),kr(13,r_,2,0,"ng-template",null,12,yc),kr(15,l_,1,3,"ng-template",null,13,yc),kr(17,w_,3,1,"ng-template",null,14,yc),kr(19,__,4,1,"ng-template",null,15,yc)),2&e){const e=xr(4),n=xr(14),i=xr(16);Or("p-label",t.label)("p-help",t.help)("p-optional",!t.required&&t.optional),Zs(2),Or("ngIf",t.icon),Zs(1),ea("po-input-icon-left",t.icon),Or("ngClass",t.clean&&e.value?"po-input-double-icon-right":"po-input-icon-right")("disabled",t.disabled)("placeholder",t.placeholder)("required",t.required),Dr("name",t.name),Zs(3),Or("ngIf",t.clean&&!t.disabled),Zs(1),va("po-icon po-field-icon ",t.comboIcon,""),ea("po-field-icon-disabled",t.disabled)("po-field-icon",!t.disabled),Zs(2),Or("hidden",!t.comboOpen&&!t.isServerSearching),Zs(2),Or("ngIf",t.isServerSearching)("ngIfThen",n)("ngIfElse",i)}},directives:[wE,Fh,xh,yE,gS,IE,_S,Oh,jh],encapsulation:2}),e})(),Wk=(()=>{class e{constructor(){this.autoFocus=!1,this.errorPattern="",this.blur=new ec,this.enter=new ec,this.change=new ec,this.changeModel=new ec,this.onChangePropagate=null,this.onTouched=null,this.passedWriteValue=!1,this._noAutocomplete=!1,this._placeholder="",this.disabled=!1,this.readonly=!1,this.required=!1,this.clean=!1,this.mask="",this.maskFormatModel=!1}set noAutocomplete(e){this._noAutocomplete=YD(e)}get noAutocomplete(){return this._noAutocomplete}set placeholder(e){this._placeholder=e||""}get placeholder(){return this._placeholder}set setDisabled(e){this.disabled=""===e||YD(e),this.validateModel()}set setReadonly(e){this.readonly=""===e||YD(e)}set setRequired(e){this.required=""===e||YD(e),this.validateModel()}set setClean(e){this.clean=""===e||YD(e)}set setPattern(e){this.pattern=e,this.validateModel()}set maxlength(e){isNaN(parseInt(e,10))?e||(this._maxlength=void 0,this.validateModel()):(this._maxlength=parseInt(e,10),this.validateModel())}get maxlength(){return this._maxlength}set minlength(e){isNaN(parseInt(e,10))?e||(this._minlength=void 0,this.validateModel()):(this._minlength=parseInt(e,10),this.validateModel())}get minlength(){return this._minlength}set setMask(e){this.mask=e,this.objMask=new PE(this.mask,this.maskFormatModel)}set setMaskFormatModel(e){this.maskFormatModel=""===e||YD(e),this.objMask instanceof PE&&(this.objMask.formatModel=this.maskFormatModel,this.validateModel())}callOnChange(e){this.updateModel(e),this.controlChangeModelEmitter(e)}callUpdateModelWithTimeout(e){setTimeout(()=>this.updateModel(e))}controlChangeModelEmitter(e){this.modelLastUpdate!==e&&(this.changeModel.emit(e),this.modelLastUpdate=e)}setDisabledState(e){this.disabled=e}registerOnChange(e){this.onChangePropagate=e}registerOnTouched(e){this.onTouched=e}registerOnValidatorChange(e){this.validatorChange=e}updateModel(e){this.onChangePropagate&&this.onChangePropagate(e)}validate(e){return DE(this.required,this.disabled,this.getScreenValue())?{required:{valid:!1}}:SE(this.maxlength,this.getScreenValue())?{maxlength:{valid:!1}}:EE(this.minlength,this.getScreenValue())?{minlength:{valid:!1}}:function(e,t){let n;try{n=new RegExp(e)}catch(i){return!0}return e&&t&&!n.test(t)}(this.pattern,e.value)?(this.validatePatternOnWriteValue(e.value),{pattern:{valid:!1}}):this.extraValidation(e)}writeValue(e){this.writeValueModel(e)}validateModel(){this.validatorChange&&this.validatorChange()}validatePatternOnWriteValue(e){e&&this.passedWriteValue&&(setTimeout(()=>{this.updateModel(e)}),this.passedWriteValue=!1)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,inputs:{autoFocus:["p-auto-focus","autoFocus"],errorPattern:["p-error-pattern","errorPattern"],noAutocomplete:["p-no-autocomplete","noAutocomplete"],placeholder:["p-placeholder","placeholder"],setDisabled:["p-disabled","setDisabled"],setReadonly:["p-readonly","setReadonly"],setRequired:["p-required","setRequired"],setClean:["p-clean","setClean"],setPattern:["p-pattern","setPattern"],maxlength:["p-maxlength","maxlength"],minlength:["p-minlength","minlength"],setMask:["p-mask","setMask"],setMaskFormatModel:["p-mask-format-model","setMaskFormatModel"],icon:["p-icon","icon"],label:["p-label","label"],help:["p-help","help"],name:"name",optional:["p-optional","optional"]},outputs:{blur:"p-blur",enter:"p-enter",change:"p-change",changeModel:"p-change-model"}}),Ov([xS()],e.prototype,"autoFocus",void 0),e})(),Gk=(()=>{class e extends Wk{constructor(e,t){super(),this.el=e,this.poLanguageService=t,this._decimalsLength=2,this._thousandMaxlength=13,this.fireChange=!1,this.isKeyboardAndroid=!1,this.minusSign="-",this.oldDotsLength=null,this.regex={thousand:new RegExp("\\,","g"),decimal:new RegExp("\\.","g")},this.isKeyboardAndroid=!!navigator.userAgent.match(/Android/i)}get autocomplete(){return this.noAutocomplete?"off":"on"}set decimalsLength(e){let t=ZD(e);t=this.isValueBetweenAllowed(t,15)?t:2,this.isGreaterThanTotalLengthLimit(t,this.thousandMaxlength)&&(this.thousandMaxlength=16-t),this._decimalsLength=t}get decimalsLength(){return this._decimalsLength}set thousandMaxlength(e){let t=ZD(e);this.decimalsLength>2&&!t&&(t=16-this.decimalsLength),t=this.isValueBetweenAllowed(t,13)?t:13,this.isGreaterThanTotalLengthLimit(this.decimalsLength,t)&&(this.decimalsLength=16-t),this._thousandMaxlength=t}get thousandMaxlength(){return this._thousandMaxlength}set locale(e){this._locale=e,this.setNumbersSeparators()}set min(e){isNaN(e)?e||(this._min=void 0,this.validateModel()):(this._min=e,this.validateModel())}get min(){return this._min}set max(e){isNaN(e)?e||(this._max=void 0,this.validateModel()):(this._max=e,this.validateModel())}get max(){return this._max}ngOnInit(){this.setNumbersSeparators()}setNumbersSeparators(){const{decimalSeparator:e,thousandSeparator:t}=this.poLanguageService.getNumberSeparators(this._locale);this.decimalSeparator=e,this.thousandSeparator=t,this.regex={thousand:new RegExp("\\"+t,"g"),decimal:new RegExp("\\"+e,"g")}}ngAfterViewInit(){this.verifyAutoFocus(),this.setPaddingInput()}clear(e){this.callOnChange(e),this.controlChangeEmitter()}extraValidation(e){return this.errorPattern="Valor Inv\xe1lido"!==this.errorPattern?this.errorPattern:"",kE(this.min,e.value)?{min:{valid:!1}}:xE(this.max,e.value)?{max:{valid:!1}}:null}focus(){this.disabled||this.inputEl.nativeElement.focus()}getScreenValue(){return this.inputEl?this.inputEl.nativeElement.value:""}hasInvalidClass(){return this.el.nativeElement.classList.contains("ng-invalid")&&this.el.nativeElement.classList.contains("ng-dirty")&&""!==this.getScreenValue()}hasLetters(e=""){return e.match(/[a-zA-Z:;+=_\xb4`^~"'?!@#$%\xa8&*()><{}\xe7\xc7\[\]/\\|]+/)}isValidNumber(e){const t=String.fromCharCode(e.which),n=8!==e.which&&0!==e.which;return!this.hasLetters(t)&&n}onBlur(e){var t;null===(t=this.onTouched)||void 0===t||t.call(this);const n=e.target.value;if(n){if(this.hasLetters(n)||this.containsMoreThanOneDecimalSeparator(n))return this.setViewValue(""),void this.callOnChange(void 0);const e=this.formatValueWithoutThousandSeparator(n);this.setViewValue(this.formatToViewValue(e))}this.blur.emit(),this.controlChangeEmitter()}onFocus(e){this.valueBeforeChange=this.getScreenValue(),this.enter.emit()}onInput(e){const t=e.target.selectionStart,n=e.target.selectionEnd;let i;this.isKeyboardAndroid&&this.onInputKeyboardAndroid(e),i=this.formatValueWithoutThousandSeparator(e.target.value),i=this.addZeroBefore(i);const s=this.formatMask(i);s&&(this.setViewValue(s),this.setCursorInput(e,t,n)),this.callOnChange(this.formatToModelValue(i))}onInputKeyboardAndroid(e){const t=e.target.value,n=e.target.selectionStart,i=this.hasLetters(t);if(i)return this.setViewValue(t.replace(i[0],"")),e.preventDefault();{const i=t.charAt(n-1);this.setPositionValue(e),this.isValidKey(e,i)&&this.setViewValue(t)}}onKeyPress(e){this.isValidKey(e)}setPaddingInput(){setTimeout(()=>{let e=this.el.nativeElement.querySelectorAll(".po-field-icon-container:not(.po-field-icon-container-left) > .po-icon").length;this.clean&&e++,e&&(this.inputEl.nativeElement.style.paddingRight=36*e+"px")})}writeValueModel(e){if(this.inputEl)if(e||0===e){const t=this.formatToViewValue(e);this.setViewValue(t)}else this.setViewValue("");e&&this.change.emit(e)}getErrorPatternMessage(){return""!==this.errorPattern&&this.hasInvalidClass()?this.errorPattern:""}addZeroBefore(e){return e===this.decimalSeparator?`0${e}`:e}containsComma(e){return e.includes(this.decimalSeparator)}containsMoreThanOneDecimalSeparator(e=""){const t=e.match(this.regex.decimal);return!!(t&&t.length>1)}controlChangeEmitter(){const e=this.getScreenValue();e!==this.valueBeforeChange&&(this.fireChange=!0,setTimeout(()=>{this.change.emit(e)},200))}formatMask(e){if(e.match(this.regex.decimal)){const t=new RegExp(`(\\d)(?=(\\d{3})+(?!\\d)${this.decimalSeparator})`,"g");return e.toString().replace(t,`$1${this.thousandSeparator}`)}return e.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g,`$1${this.thousandSeparator}`)}formatToModelValue(e){const t=this.replaceCommaToDot(e),n=t?parseFloat(Number(t).toFixed(this.decimalsLength)):void 0;return 0===n||n?n:void 0}formatToViewValue(e){e=this.replaceCommaToDot(e);const t=Number(e).toFixed(this.decimalsLength),n=this.getValueBeforeSeparator(t,"."),i=this.getValueAfterSeparator(t,"."),s=this.formatMask(n);return 0===this.decimalsLength?s:`${s}${this.decimalSeparator}${i}`}formatValueWithoutThousandSeparator(e=""){return e.toString().replace(this.regex.thousand,"")}getValueAfterSeparator(e="",t){return e.split(t)[1]||""}getValueBeforeSeparator(e="",t){return e.split(t)[0]||""}hasLessDot(e){if(e){const t=e.match(this.regex.thousand),n=t&&t.length;if(n<this.oldDotsLength)return this.oldDotsLength=n,!0}return e||(this.oldDotsLength=null),!1}hasMoreDot(e){if(e){const t=e.match(this.regex.thousand),n=t&&t.length;if(n>this.oldDotsLength)return this.oldDotsLength=n,!0}return e||(this.oldDotsLength=null),!1}hasMinusSignInvalidPosition(e){return e.key===this.minusSign&&0!==e.target.selectionStart}isInvalidKey(e,t){const n=!this.isValidNumber(e);return this.verifyInsertComma(e)||this.verifyThousandLength(e)||this.verifyValueAfterComma(e)||this.verifyInsertMinusSign(e)||this.hasMinusSignInvalidPosition(e)||n||this.validateCursorPositionBeforeSeparator(e)||this.verifyDecimalLengthIsZeroAndKeyPressedIsComma(t)}isGreaterThanTotalLengthLimit(e,t){return e+t>16}isKeyDecimalSeparator(e){return e.key===this.decimalSeparator||e.char===this.decimalSeparator}isPositionAfterDecimalSeparator(e,t){const n=t&&t.indexOf(this.decimalSeparator);if(n&&this.decimalsLength>0)return e>n}isSelectionStartDifferentSelectionEnd(e){return e.selectionStart!==e.selectionEnd}isValidKey(e,t){const n=e.which||e.keyCode;if(8!==e.which&&0!==e.which||this.isKeyboardAndroid)return t&&(e.key=t),!this.isInvalidKey(e,n)||(e.preventDefault(),!1)}isValueBetweenAllowed(e,t){return e>=0&&e<=t}verifyDecimalLengthIsZeroAndKeyPressedIsComma(e){return 44===e&&0===this.decimalsLength}verifyAutoFocus(){this.autoFocus&&this.focus()}setInitialSelectionRange(e,t,n){return 1===t&&1===n?e.setSelectionRange(t+1,n+1):e.setSelectionRange(t-1,n-1)}replaceAt(e,t,n){return e.substring(0,t)+n+e.substring(t+1)}replaceCommaToDot(e=""){return","===this.decimalSeparator&&(e=e.toString().replace(this.regex.decimal,".")),e}setCursorInput(e,t,n){const i=e.target,s=i.value;return this.hasMoreDot(s)||s==="0"+this.decimalSeparator?i.setSelectionRange(t+1,n+1):(this.hasLessDot(s)&&this.setInitialSelectionRange(i,t,n),i.setSelectionRange(t,n))}setPositionValue(e){const t=e.target.value,n=e.target.selectionStart-1;n>0&&e.key===this.minusSign&&(e.target.value=t.substring(0,n)+t.substr(n+1))}setViewValue(e){this.inputEl.nativeElement.value=e}validateCursorPositionBeforeSeparator(e){const t=e.target,n=this.formatValueWithoutThousandSeparator(t.value),i=this.getValueBeforeSeparator(t.value,this.decimalSeparator),s=this.getValueBeforeSeparator(n,this.decimalSeparator);return!this.isSelectionStartDifferentSelectionEnd(t)&&t.selectionStart<=i.length&&s.length===this.thousandMaxlength&&!this.isKeyDecimalSeparator(e)}verifyThousandLength(e){const t=e.target,n=this.formatValueWithoutThousandSeparator(t.value),i=this.getValueBeforeSeparator(n,this.decimalSeparator);return!this.isSelectionStartDifferentSelectionEnd(t)&&i.length>=this.thousandMaxlength&&!this.isKeyDecimalSeparator(e)&&this.isPositionAfterDecimalSeparator(t.selectionStart-this.decimalsLength,t.value)}verifyInsertComma(e){return this.containsComma(e.target.value)&&e.key===this.decimalSeparator}verifyInsertMinusSign(e){const t=e.target.value,n=-1!==t.lastIndexOf(this.minusSign),i=t.lastIndexOf("-"),s=t.match(new RegExp("-","g"));return this.isKeyboardAndroid&&n&&s.length>1&&(e.target.value=this.replaceAt(t,i,"")),n&&e.key===this.minusSign}verifyValueAfterComma(e){const t=e.target.value,n=e.target.selectionStart,i=this.getValueAfterSeparator(t,this.decimalSeparator);return this.isPositionAfterDecimalSeparator(n,t)&&i.length>=this.decimalsLength}}return e.\u0275fac=function(t){return new(t||e)(Ar(Ua),Ar(pS))},e.\u0275cmp=He({type:e,selectors:[["po-decimal"]],viewQuery:function(e,t){if(1&e&&pc(Wy,7,Ua),2&e){let e;dc(e=gc())&&(t.inputEl=e.first)}},inputs:{decimalsLength:["p-decimals-length","decimalsLength"],thousandMaxlength:["p-thousand-maxlength","thousandMaxlength"],locale:["p-locale","locale"],min:["p-min","min"],max:["p-max","max"]},features:[La([{provide:Pv,useExisting:se(()=>e),multi:!0},{provide:jv,useExisting:se(()=>e),multi:!0}]),ur],decls:8,vars:18,consts:[[3,"p-label","p-help","p-optional"],[1,"po-field-container-content"],["class","po-field-icon-container-left",4,"ngIf"],["inputmode","decimal","type","text",1,"po-input",3,"autocomplete","disabled","placeholder","readonly","required","blur","focus","input","keypress"],["inp",""],[1,"po-field-icon-container-right"],[3,"p-element-ref","p-change-event",4,"ngIf"],[3,"p-error-pattern"],[1,"po-field-icon-container-left"],[1,"po-field-icon",3,"p-icon"],[3,"p-element-ref","p-change-event"]],template:function(e,t){1&e&&(Fr(0,"po-field-container",0),Fr(1,"div",1),kr(2,D_,2,3,"div",2),Fr(3,"input",3,4),Br("blur",function(e){return t.onBlur(e)})("focus",function(e){return t.onFocus(e)})("input",function(e){return t.onInput(e)})("keypress",function(e){return t.onKeyPress(e)}),Ir(),Fr(5,"div",5),kr(6,S_,1,1,"po-clean",6),Ir(),Ir(),Mr(7,"po-field-container-bottom",7),Ir()),2&e&&(Or("p-label",t.label)("p-help",t.help)("p-optional",!t.required&&t.optional),Zs(2),Or("ngIf",t.icon),Zs(1),ea("po-input-icon-left",t.icon)("po-input-icon-right",t.clean),Or("autocomplete",t.autocomplete)("disabled",t.disabled)("placeholder",t.placeholder)("readonly",t.readonly)("required",t.required),Dr("max",t.max)("min",t.min)("name",t.name),Zs(3),Or("ngIf",t.clean&&!t.disabled&&!t.readonly),Zs(1),Or("p-error-pattern",t.getErrorPatternMessage()))},directives:[wE,Fh,yE,gS,IE],encapsulation:2}),e})(),Kk=(()=>{class e extends Wk{constructor(e){super(),this.type="text",this.el=e}get autocomplete(){return this.noAutocomplete?"off":"on"}onKeydown(e){this.mask&&!this.readonly&&229!==e.target.keyCode&&(this.eventOnBlur(e),this.objMask.keydown(e))}onKeyup(e){this.mask&&!this.readonly&&(229!==e.target.keyCode&&(this.eventOnBlur(e),this.objMask.keyup(e)),this.callOnChange(this.objMask.valueToModel))}ngAfterViewInit(){this.afterViewInit()}afterViewInit(){this.verifyAutoFocus(),"password"!==this.type&&this.setPaddingInput()}focus(){this.disabled||this.inputEl.nativeElement.focus()}setPaddingInput(){setTimeout(()=>{let e=this.el.nativeElement.querySelectorAll(".po-field-icon-container:not(.po-field-icon-container-left) > .po-icon").length;this.clean&&e++,e&&(this.inputEl.nativeElement.style.paddingRight=36*e+"px")})}verifyAutoFocus(){this.autoFocus&&this.focus()}eventOnInput(e){let t="";this.mask?(this.objMask.blur(e),this.inputEl.nativeElement.value=this.objMask.valueToInput,t=this.objMask.valueToModel):(t=this.validMaxLength(this.maxlength,e.target.value),this.inputEl.nativeElement.value=t),this.callOnChange(t)}validMaxLength(e,t){return(e||0===e)&&t.length>e?t.toString().substring(0,e):t}eventOnFocus(e){this.valueBeforeChange=this.inputEl.nativeElement.value,this.enter.emit()}eventOnBlur(e){var t;null===(t=this.onTouched)||void 0===t||t.call(this),this.mask&&this.objMask.blur(e),"blur"===e.type&&(this.blur.emit(),this.controlChangeEmitter())}controlChangeEmitter(){const e=this.inputEl.nativeElement.value;e!==this.valueBeforeChange&&(clearTimeout(this.timeoutChange),this.timeoutChange=setTimeout(()=>{this.change.emit(e)},200))}eventOnClick(e){this.mask&&this.objMask.click(e)}hasInvalidClass(){return this.el.nativeElement.classList.contains("ng-invalid")&&this.el.nativeElement.classList.contains("ng-dirty")&&""!==this.inputEl.nativeElement.value}getErrorPattern(){return""!==this.errorPattern&&this.hasInvalidClass()?this.errorPattern:""}validateClassesForPattern(){const e=this.getScreenValue(),t=this.el.nativeElement;e&&!this.verifyPattern(this.pattern,e)?(t.classList.add("ng-invalid"),t.classList.add("ng-dirty")):t.classList.remove("ng-invalid")}verifyPattern(e,t){return new RegExp(e).test(t)}clear(e){this.callOnChange(e),this.controlChangeEmitter()}writeValueModel(e){this.passedWriteValue=!0,this.inputEl&&(e?this.mask?(this.inputEl.nativeElement.value=this.objMask.controlFormatting(String(e)),this.objMask.formatModel&&this.callUpdateModelWithTimeout(this.objMask.valueToModel)):this.inputEl.nativeElement.value=e:this.inputEl.nativeElement.value=""),e&&this.changeModel.emit(e)}getScreenValue(){const e=this.inputEl&&this.inputEl.nativeElement.value||void 0;if("number"===this.type){const t=parseFloat(e);return t||0===t?t:null}return e}}return e.\u0275fac=function(t){return new(t||e)(Ar(Ua))},e.\u0275dir=Ke({type:e,viewQuery:function(e,t){if(1&e&&pc(Wy,7,Ua),2&e){let e;dc(e=gc())&&(t.inputEl=e.first)}},hostBindings:function(e,t){1&e&&Br("keydown",function(e){return t.onKeydown(e)})("keyup",function(e){return t.onKeyup(e)})},features:[ur]}),e})(),Yk=(()=>{class e{constructor(e){this.httpClient=e,this.headers=new Xm({"X-PO-No-Message":"true"})}getFilteredItems(e){const{filterParams:t,advancedFilters:n}=e,i=function(e,t){var n={};for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&t.indexOf(i)<0&&(n[i]=e[i]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(i=Object.getOwnPropertySymbols(e);s<i.length;s++)t.indexOf(i[s])<0&&Object.prototype.propertyIsEnumerable.call(e,i[s])&&(n[i[s]]=e[i[s]])}return n}(e,["filterParams","advancedFilters"]),s=this.validateParams(t),o=this.validateParams(n),r=Object.assign(Object.assign(Object.assign({},i),s),o);return this.httpClient.get(this.url,{headers:this.headers,params:r})}getObjectByValue(e,t){const n=encodeURIComponent(e),i=this.validateParams(t);return this.httpClient.get(`${this.url}/${n}`,{headers:this.headers,params:i})}setUrl(e){this.url=e}validateParams(e){return QD(e,"object")&&!Array.isArray(e)?e:void 0}}return e.\u0275fac=function(t){return new(t||e)(ci(gv))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),Zk=(()=>{class e{constructor(e,t){this.defaultService=e,this.injector=t,this.autoFocus=!1,this.infiniteScroll=!1,this.onError=new ec,this.selected=new ec,this.change=new ec,this.oldValue="",this.oldValueToModel=null,this.onTouched=null,this._disabled=!1,this._placeholder="",this._required=!1,this.onChangePropagate=null}set placeholder(e){this._placeholder=e||""}get placeholder(){return this._placeholder}set fieldLabel(e){this._fieldLabel=e,this.keysDescription=[this.fieldLabel]}get fieldLabel(){return this._fieldLabel}set filterService(e){this._filterService=e,this.setService(this.filterService)}get filterService(){return this._filterService}set noAutocomplete(e){this._noAutocomplete=YD(e)}get noAutocomplete(){return this._noAutocomplete}set required(e){this._required=YD(e),this.validateModel(this.valueToModel)}get required(){return this._required}set disabled(e){this._disabled=""===e||YD(e)}get disabled(){return this._disabled}ngOnDestroy(){this.getSubscription&&this.getSubscription.unsubscribe()}ngOnInit(){this.initializeColumn()}ngAfterViewInit(){this.setControl()}setDisabledState(e){this.disabled=e}registerOnValidatorChange(e){this.validatorChange=e}registerOnChange(e){this.onChangePropagate=e}registerOnTouched(e){this.onTouched=e}selectValue(e){this.valueToModel=e[this.fieldValue],this.callOnChange(this.valueToModel),this.selected.emit(e)}callOnChange(e){this.onChangePropagate&&this.onChangePropagate(e),this.oldValueToModel!==this.valueToModel&&this.change.emit(this.valueToModel),this.oldValueToModel=this.valueToModel}searchById(e){let t=e;if("string"==typeof t&&(t=t.trim()),""!==t){const t=this.disabled;this.disabled=!0,this.control&&setTimeout(()=>this.control.markAsPending()),this.getSubscription=this.service.getObjectByValue(e,this.filterParams).pipe(Zp(()=>{this.disabled=t,this.control&&this.control.updateValueAndValidity()})).subscribe(e=>{e?(this.oldValue=e[this.fieldLabel],this.selectValue(e),this.setViewValue(this.getFormattedLabel(e),e)):this.cleanModel()},e=>{this.cleanModel(),this.onError.emit(e)})}else this.cleanModel()}validate(e){if(DE(this.required,this.disabled,e.value))return{required:{valid:!1}}}writeValue(e){e&&e instanceof Object?(this.oldValue=e[this.fieldLabel],this.valueToModel=e[this.fieldValue],this.setViewValue(this.getFormattedLabel(e),e)):e?this.searchById(e):this.cleanViewValue()}cleanModel(){this.cleanViewValue(),this.callOnChange(void 0)}cleanViewValue(){this.setViewValue("",{}),this.oldValue="",this.valueToModel=null}getFormattedLabel(e){return e?this.keysDescription.map(t=>e[t]).join(" - "):""}selectModel(e){this.writeValue(e),e&&e instanceof Object&&this.selectValue(e)}validateModel(e){this.validatorChange&&this.validatorChange(e)}setService(e){QD(e,"object")&&(this.service=e),e&&QD(e,"string")&&(this.service=this.defaultService,this.service.setUrl(e))}setControl(){const e=this.injector.get(Zv,null,Ce.Self);e&&(this.control=e.control)}initializeColumn(){this.fieldLabel?this.keysDescription=[this.fieldLabel]:(this.keysDescription=[],this.keysDescription=this.columns.filter(e=>e.fieldLabel).map(e=>e.property))}}return e.\u0275fac=function(t){return new(t||e)(Ar(Yk),Ar(lr))},e.\u0275dir=Ke({type:e,inputs:{autoFocus:["p-auto-focus","autoFocus"],infiniteScroll:["p-infinite-scroll","infiniteScroll"],placeholder:["p-placeholder","placeholder"],fieldLabel:["p-field-label","fieldLabel"],filterService:["p-filter-service","filterService"],noAutocomplete:["p-no-autocomplete","noAutocomplete"],required:["p-required","required"],disabled:["p-disabled","disabled"],label:["p-label","label"],literals:["p-literals","literals"],help:["p-help","help"],name:"name",fieldValue:["p-field-value","fieldValue"],filterParams:["p-filter-params","filterParams"],fieldFormat:["p-field-format","fieldFormat"],columns:["p-columns","columns"],optional:["p-optional","optional"],advancedFilters:["p-advanced-filters","advancedFilters"]},outputs:{onError:"p-error",selected:"p-selected",change:"p-change"}}),Ov([xS()],e.prototype,"autoFocus",void 0),Ov([xS()],e.prototype,"infiniteScroll",void 0),e})(),Qk=(()=>{class e{constructor(){this.formOutput=new ec,this._groupForm=!1}set groupForm(e){this._groupForm=""===e||YD(e)}get groupForm(){return this._groupForm}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,inputs:{groupForm:["p-group-form","groupForm"],autoFocus:["p-auto-focus","autoFocus"],fields:["p-fields","fields"],value:["p-value","value"],load:["p-load","load"],validate:["p-validate","validate"],validateFields:["p-validate-fields","validateFields"]},outputs:{formOutput:"p-form"}}),e})();class Jk{constructor(e){this.http=e}execute(e,t){return"string"==typeof e?this.post(e,t):Bd(e(t))}post(e,t){return this.http.post(e,t)}setFormDefaultIfEmpty(e){return e||{value:{},fields:[],focus:void 0}}}let Xk=(()=>{class e extends Jk{constructor(e){super(e)}createAndUpdateFieldsForm(e=[],t=[]){return[...e].reduce((e,n)=>{const i=e.findIndex(e=>e.property===n.property);return i>=0?e[i]=Object.assign(Object.assign({},t[i]),n):e.push(n),e},[...t])}executeLoad(e,t){return this.execute(e,t).pipe(k(e=>this.setFormDefaultIfEmpty(e)))}}return e.\u0275fac=function(t){return new(t||e)(ci(gv))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),ex=(()=>{class e extends Jk{constructor(e){super(e)}sendFieldChange(e,t){return this.execute(e.validate,{property:e.property,value:t}).pipe(k(e=>this.setFieldDefaultIfEmpty(e)))}sendFormChange(e,t,n){return this.execute(e,{property:t.property,value:n}).pipe(k(e=>this.setFormDefaultIfEmpty(e)))}updateFieldsForm(e=[],t=[]){return[...e].reduce((e,n)=>{const i=e.findIndex(e=>e.property===n.property);return i>=0&&(e[i]=Object.assign(Object.assign({},t[i]),n)),e},[...t])}setFieldDefaultIfEmpty(e){return e||{field:{}}}}return e.\u0275fac=function(t){return new(t||e)(ci(gv))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),tx=(()=>{class e extends Qk{constructor(e,t,n){super(),this.changes=e,this.loadService=t,this.validationService=n,this.comboOptionSubject=new D}set form(e){setTimeout(()=>{this._form=e,this.emitForm()})}get form(){return this._form||{}}ngOnDestroy(){this.removeListeners()}ngOnInit(){this.load&&this.loadDataOnInitialize()}focus(e){this.fieldsComponent.focus(e)}getObjectValue(){return this.comboOptionSubject.asObservable()}sendObjectValue(e){this.comboOptionSubject.next(e)}validateForm(e){const t=document.activeElement;this.disableForm(!0),this.sendFormSubscription=this.validationService.sendFormChange(this.validate,e,this.value).subscribe(this.applyFormValidation(t),()=>this.disableForm(!1))}applyFormUpdatesOnLoad(e){return t=>{this.updateModelOnLoad(t),this.disableForm(!1),this.setFocusOnFieldByProperty(t.focus,e)}}applyFormValidation(e){return t=>{this.updateModelWithValidation(t),this.disableForm(!1),this.setFocusOnFieldByProperty(t.focus,e)}}disableForm(e){this.disabledForm=e,this.changes.detectChanges()}emitForm(){!this.groupForm&&this.formOutput.observers.length&&this.formOutput.emit(this.form)}loadDataOnInitialize(){const e=document.activeElement;this.disabledForm=!0,this.onLoadSubscription=this.loadService.executeLoad(this.load,this.value).subscribe(this.applyFormUpdatesOnLoad(e),()=>this.disabledForm=!1)}removeListeners(){this.onLoadSubscription&&this.onLoadSubscription.unsubscribe(),this.sendFormSubscription&&this.sendFormSubscription.unsubscribe()}setFocusOnFieldByProperty(e,t){e?setTimeout(()=>this.focus(e)):t.focus()}updateModelOnLoad(e){Object.assign(this.value,e.value),this.fields=this.loadService.createAndUpdateFieldsForm(e.fields,this.fields)}updateModelWithValidation(e){Object.assign(this.value,e.value),this.fieldsComponent.updatePreviousValue(),this.fields=this.validationService.updateFieldsForm(e.fields,this.fields)}}return e.\u0275fac=function(t){return new(t||e)(Ar(gl),Ar(Xk),Ar(ex))},e.\u0275cmp=He({type:e,selectors:[["po-dynamic-form"]],viewQuery:function(e,t){if(1&e&&(pc(E_,5),pc(k_,5)),2&e){let e;dc(e=gc())&&(t.form=e.first),dc(e=gc())&&(t.fieldsComponent=e.first)}},features:[ur],decls:5,vars:3,consts:[[4,"ngIf","ngIfThen","ngIfElse"],["reuseFormTemplate",""],["uniqueFormTemplate",""],[3,"p-auto-focus","p-fields","p-value"],["fieldsComponent",""],["dynamicForm","ngForm"],[3,"p-fields","p-auto-focus","p-disabled-form","p-validate","p-validate-fields","p-value","p-fieldsChange","p-object-value","p-form-validate"]],template:function(e,t){if(1&e&&(kr(0,x_,1,0,"ng-container",0),kr(1,A_,2,3,"ng-template",null,1,yc),kr(3,O_,4,6,"ng-template",null,2,yc)),2&e){const e=xr(2),n=xr(4);Or("ngIf",t.groupForm)("ngIfThen",e)("ngIfElse",n)}},directives:function(){return[Fh,zx,Sb,Xv,Cb]},encapsulation:2}),e})();const nx={en:{modalPrimaryActionLabel:"Select",modalSecondaryActionLabel:"Cancel",modalPlaceholder:"Search",modalTitle:"Select a record",modalTableNoColumns:kk.en.noColumns,modalTableNoData:kk.en.noData,modalTableLoadingData:kk.en.loadingData,modalTableLoadMoreData:kk.en.loadMoreData,modalAdvancedSearch:"Advanced search",modalAdvancedSearchTitle:"Advanced search",modalAdvancedSearchPrimaryActionLabel:"Filter",modalAdvancedSearchSecondaryActionLabel:"Return",modalDisclaimerGroupTitle:"Presenting results filtered by:"},es:{modalPrimaryActionLabel:"Seleccionar",modalSecondaryActionLabel:"Cancelar",modalPlaceholder:"Buscar",modalTitle:"Seleccione un registro",modalTableNoColumns:kk.es.noColumns,modalTableNoData:kk.es.noData,modalTableLoadingData:kk.es.loadingData,modalTableLoadMoreData:kk.es.loadMoreData,modalAdvancedSearch:"B\xfasqueda Avanzada",modalAdvancedSearchTitle:"B\xfasqueda Avanzada",modalAdvancedSearchPrimaryActionLabel:"Filtrar",modalAdvancedSearchSecondaryActionLabel:"Vuelve",modalDisclaimerGroupTitle:"Presentar resultados filtrados por:"},pt:{modalPrimaryActionLabel:"Selecionar",modalSecondaryActionLabel:"Cancelar",modalPlaceholder:"Pesquisar",modalTitle:"Selecione um registro",modalTableNoColumns:kk.pt.noColumns,modalTableNoData:kk.pt.noData,modalTableLoadingData:kk.pt.loadingData,modalTableLoadMoreData:kk.pt.loadMoreData,modalAdvancedSearch:"Busca avan\xe7ada",modalAdvancedSearchTitle:"Busca Avan\xe7ada",modalAdvancedSearchPrimaryActionLabel:"Filtrar",modalAdvancedSearchSecondaryActionLabel:"Voltar",modalDisclaimerGroupTitle:"Apresentando resultados filtrados por:"},ru:{modalPrimaryActionLabel:"\u0432\u044b\u0431\u0438\u0440\u0430\u0442\u044c",modalSecondaryActionLabel:"\u043e\u0442\u043c\u0435\u043d\u0438\u0442\u044c",modalPlaceholder:"\u043f\u043e\u0438\u0441\u043a",modalTitle:"\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0437\u0430\u043f\u0438\u0441\u044c",modalTableNoColumns:kk.ru.noColumns,modalTableNoData:kk.ru.noData,modalTableLoadingData:kk.ru.loadingData,modalTableLoadMoreData:kk.ru.loadMoreData,modalAdvancedSearch:"\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u044b\u0439 \u043f\u043e\u0438\u0441\u043a",modalAdvancedSearchTitle:"\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u044b\u0439 \u043f\u043e\u0438\u0441\u043a",modalAdvancedSearchPrimaryActionLabel:"\u0424\u0438\u043b\u044c\u0442\u0440",modalAdvancedSearchSecondaryActionLabel:"\u0412\u0435\u0440\u043d\u0438\u0441\u044c",modalDisclaimerGroupTitle:"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u043d\u043e \u043f\u043e:"}};let ix=(()=>{class e{constructor(e){this.infiniteScroll=!1,this.model=new ec,this.hasNext=!0,this.isLoading=!1,this.page=1,this.pageSize=10,this.searchValue="",this.advancedFilterModalTitle="",this.dynamicFormValue={},this.isAdvancedFilter=!1,this.language=qD,this.primaryAction={action:()=>{this.items.forEach(e=>{e.$selected&&(this.model.emit(e),this.poModal.close())})},label:this.literals.modalPrimaryActionLabel},this.secondaryAction={action:()=>{this.model.emit(null),this.poModal.close()},label:this.literals.modalSecondaryActionLabel},this.language=e.getShortLanguage()}set literals(e){e instanceof Object&&!(e instanceof Array)?(this._literals=Object.assign(Object.assign(Object.assign({},nx.pt),nx[this.language]),e),e.modalTitle&&(this.title=this.literals.modalTitle)):this._literals=nx[this.language],this.primaryAction.label=this.literals.modalPrimaryActionLabel,this.secondaryAction.label=this.literals.modalSecondaryActionLabel,this.setTableLiterals()}get literals(){return this._literals||nx[this.language]}set title(e){this._title=QD(e,"string")?e:this.literals.modalTitle}get title(){return this._title}ngOnDestroy(){this.filterSubscription&&this.filterSubscription.unsubscribe(),this.searchSubscription&&this.searchSubscription.unsubscribe(),this.showMoreSubscription&&this.showMoreSubscription.unsubscribe()}ngOnInit(){this.setAdvancedFilterModalProperties(),this.initializeData(),this.setTableLiterals()}createDisclaimer(){this.disclaimerGroup.disclaimers=[],this.searchValue="";for(const[e,t]of Object.entries(this.dynamicFormValue))this.addDisclaimer(t,e);Object.values(this.dynamicFormValue).some(e=>null!=e)||this.initializeData()}addDisclaimer(e,t){this.disclaimer={property:t},this.disclaimer.value=e,this.disclaimerGroup.disclaimers=[...this.disclaimerGroup.disclaimers,this.disclaimer]}onChangeDisclaimerGroup(){this.searchValue||(this.isLoading=!0,this.searchValue="",this.searchFilteredItems())}search(){this.page=1,this.searchValue?(this.isLoading=!0,this.disclaimerGroup.disclaimers=[],this.searchFilteredItems()):this.initializeData()}searchFilteredItems(){this.searchSubscription=this.getFilteredItems(this.searchValue).pipe(Fp(e=>(this.setLookupResponseProperties(),$d(e)))).subscribe(e=>this.setLookupResponseProperties(e),()=>{})}showMoreEvent(){this.page++,this.isLoading=!0,this.showMoreSubscription=this.getFilteredItems(this.searchValue).pipe(Fp(e=>(this.hasNext=!1,this.isLoading=!1,$d(e)))).subscribe(e=>{this.items=[...this.items,...e.items],this.hasNext=e.hasNext,this.isLoading=!1},()=>{})}setAdvancedFilterModalProperties(){this.advancedFilterModalTitle=this.literals.modalAdvancedSearchTitle,this.disclaimerGroup={title:this.literals.modalDisclaimerGroupTitle,disclaimers:[]},this.primaryActionAdvancedFilter={action:()=>{this.destroyDynamicForm(),this.isAdvancedFilter=!1,this.createDisclaimer()},label:this.literals.modalAdvancedSearchPrimaryActionLabel},this.secondaryActionAdvancedFilter={action:()=>{this.destroyDynamicForm(),this.isAdvancedFilter=!1},label:this.literals.modalAdvancedSearchSecondaryActionLabel}}getAdvancedFilters(e){if(e&&e.length>0){const t={};let n;return e.forEach(e=>{t[e.property]=e.value instanceof Array?e.value.join():e.value,n=Object.assign(Object.assign({},n),t)}),n}}getFilteredItems(e){const t=this.getFilteredParams(e);return this.filterService.getFilteredItems(t)}getFilteredParams(e){const{page:t,pageSize:n,filterParams:i,sort:s}=this,o={},r={filter:e,page:t,pageSize:n,order:this.getOrderParam(s),filterParams:i,advancedFilters:this.getAdvancedFilters(this.disclaimerGroup.disclaimers)};for(const a in r)r.hasOwnProperty(a)&&void 0!==r[a]&&(o[a]=r[a]);return o}getOrderParam(e={type:void 0}){const{column:t,type:n}=e;if(t)return n===Dk.Descending?`-${t.property}`:`${t.property}`}initializeData(){this.isLoading=!0,this.filterSubscription=this.getFilteredItems("").subscribe(e=>{this.setLookupResponseProperties(e)})}setLookupResponseProperties(e){var t,n;this.items=null!==(t=null==e?void 0:e.items)&&void 0!==t?t:[],this.hasNext=null!==(n=null==e?void 0:e.hasNext)&&void 0!==n&&n,this.isLoading=!1}setTableLiterals(){this.tableLiterals={noColumns:this.literals.modalTableNoColumns,noData:this.literals.modalTableNoData,loadingData:this.literals.modalTableLoadingData,loadMoreData:this.literals.modalTableLoadMoreData}}}return e.\u0275fac=function(t){return new(t||e)(Ar(pS))},e.\u0275dir=Ke({type:e,viewQuery:function(e,t){if(1&e&&pc(qE,7),2&e){let e;dc(e=gc())&&(t.poModal=e.first)}},inputs:{infiniteScroll:["p-infinite-scroll","infiniteScroll"],literals:["p-literals","literals"],title:["p-title","title"],items:["p-items","items"],advancedFilters:["p-advanced-filters","advancedFilters"],columns:["p-columns","columns"],filterService:["p-filter-service","filterService"],filterParams:["p-filter-params","filterParams"]},outputs:{model:"p-change-model"}}),Ov([xS()],e.prototype,"infiniteScroll",void 0),e})(),sx=(()=>{class e extends ix{constructor(e,t){super(t),this.componentFactory=e,this.keyUpObservable=null,this.containerHeight=375}ngOnInit(){super.ngOnInit(),this.setTableHeight()}ngAfterViewInit(){this.initializeEventInput()}initializeEventInput(){this.keyUpObservable=ip(this.inputSearchEl.nativeElement,"keyup").pipe(Ap(e=>this.validateEnterPressed(e)),Lb(400)),this.keyUpObservable.subscribe(()=>{this.search()})}openModal(){this.poModal.open()}sortBy(e){this.sort=e}destroyDynamicForm(){this.componentRef&&this.componentRef.destroy()}onAdvancedFilter(){this.setupModalAdvancedFilter(),this.createDynamicForm()}setTableHeight(){this.tableHeight=this.infiniteScroll?315:370,window.innerHeight<615&&(this.tableHeight-=50,this.containerHeight-=50)}validateEnterPressed(e){return 13===e.keyCode}setupModalAdvancedFilter(){this.dynamicFormValue={},this.isAdvancedFilter=!0}createDynamicForm(){const e=this.componentFactory.resolveComponentFactory(tx);this.componentRef=this.container.createComponent(e),this.componentRef.instance.fields=this.advancedFilters,this.componentRef.instance.value=this.dynamicFormValue,this.componentRef.instance.formOutput.pipe(Gp(e=>{this.dynamicForm=e,this.primaryActionAdvancedFilter.disabled=this.dynamicForm.invalid}),Kd(e=>e.valueChanges)).subscribe(()=>{this.primaryActionAdvancedFilter.disabled=this.dynamicForm.invalid})}}return e.\u0275fac=function(t){return new(t||e)(Ar(Na),Ar(pS))},e.\u0275cmp=He({type:e,selectors:[["po-lookup-modal"]],viewQuery:function(e,t){if(1&e&&(pc(T_,5),pc(F_,5,xl)),2&e){let e;dc(e=gc())&&(t.inputSearchEl=e.first),dc(e=gc())&&(t.container=e.first)}},features:[ur],decls:16,vars:23,consts:[["p-click-out","false","p-hide-close","false","p-size","lg",3,"p-primary-action","p-secondary-action","p-title"],[3,"hidden"],[1,"po-lookup-header","po-pull-right",3,"p-optional"],[1,"po-lookup-filter-content"],[1,"po-field-icon-container-right"],[1,"po-icon","po-field-icon","po-icon-search",3,"click"],["iconLookup",""],["name","contentSearch","type","text",1,"po-input","po-input-icon-right",3,"ngModel","placeholder","ngModelChange"],["inpsearch",""],["class","po-lookup-advanced-search",4,"ngIf"],["class","po-md-12",3,"p-disclaimers","p-title","p-change",4,"ngIf"],[1,"po-row","po-lookup-container-table"],[1,"po-md-12",3,"p-selectable","p-hide-detail","p-single-select","p-sort","p-columns","p-height","p-items","p-literals","p-loading","p-show-more-disabled","p-infinite-scroll","p-show-more","p-sort-by"],["container",""],[1,"po-lookup-advanced-search"],["tabindex","0","tabindex","0",1,"po-lookup-advanced-search-link",3,"click","keydown.enter"],[1,"po-md-12",3,"p-disclaimers","p-title","p-change"]],template:function(e,t){1&e&&(Fr(0,"po-modal",0),Fr(1,"div",1),Fr(2,"po-field-container",2),Fr(3,"div",3),Fr(4,"div",4),Fr(5,"span",5,6),Br("click",function(){return t.search()}),Ir(),Ir(),Fr(7,"input",7,8),Br("ngModelChange",function(e){return t.searchValue=e}),Ir(),Ir(),kr(9,I_,3,1,"div",9),Ir(),kr(10,M_,1,2,"po-disclaimer-group",10),Fr(11,"div",11),Fr(12,"po-table",12),Br("p-show-more",function(){return t.showMoreEvent()})("p-sort-by",function(e){return t.sortBy(e)}),Ir(),Ir(),Ir(),Fr(13,"div",1),Lr(14,null,13),Ir(),Ir()),2&e&&(Or("p-primary-action",t.isAdvancedFilter?t.primaryActionAdvancedFilter:t.primaryAction)("p-secondary-action",t.isAdvancedFilter?t.secondaryActionAdvancedFilter:t.secondaryAction)("p-title",t.isAdvancedFilter?t.advancedFilterModalTitle:t.title),Zs(1),Or("hidden",t.isAdvancedFilter),Zs(1),Or("p-optional",!1),Zs(5),Or("ngModel",t.searchValue)("placeholder",t.literals.modalPlaceholder),Zs(2),Or("ngIf",t.advancedFilters&&t.advancedFilters.length>0),Zs(1),Or("ngIf",!!t.disclaimerGroup),Zs(1),Xr("height",t.containerHeight,"px"),Zs(1),Or("p-selectable",!0)("p-hide-detail",!0)("p-single-select",!0)("p-sort",!0)("p-columns",t.columns)("p-height",t.tableHeight)("p-items",t.items)("p-literals",t.tableLiterals)("p-loading",t.isLoading)("p-show-more-disabled",!t.hasNext)("p-infinite-scroll",t.infiniteScroll),Zs(1),Or("hidden",!t.isAdvancedFilter))},directives:[qE,wE,Rv,Jv,Db,Fh,Ik,lE],encapsulation:2}),e})(),ox=(()=>{class e{constructor(e){this.poComponentInjector=e,this.selectValueEvent=new ec,this.componentRef=null}openModal(e){const{advancedFilters:t,service:n,columns:i,filterParams:s,title:o,literals:r,infiniteScroll:a}=e;this.componentRef=this.poComponentInjector.createComponentInApplication(sx),this.componentRef.instance.advancedFilters=t,this.componentRef.instance.title=o,this.componentRef.instance.columns=i,this.componentRef.instance.filterService=n,this.componentRef.instance.filterParams=s,this.componentRef.instance.literals=r,this.componentRef.instance.model.subscribe(e=>{this.selectValue(e)}),this.componentRef.instance.infiniteScroll=a,this.componentRef.changeDetectorRef.detectChanges(),this.componentRef.instance.openModal()}selectValue(e){e&&this.selectValueEvent.emit(e),this.componentRef.destroy()}}return e.\u0275fac=function(t){return new(t||e)(ci(ZE))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})();const rx=[Yk,ox,{provide:Pv,useExisting:se(()=>ax),multi:!0},{provide:jv,useExisting:se(()=>ax),multi:!0}];let ax=(()=>{class e extends Zk{constructor(e,t,n){super(e,n),this.poLookupModalService=t}get autocomplete(){return this.noAutocomplete?"off":"on"}ngAfterViewInit(){super.ngAfterViewInit(),this.autoFocus&&this.focus()}ngOnDestroy(){this.modalSubscription&&this.modalSubscription.unsubscribe()}ngOnInit(){super.ngOnInit()}focus(){this.disabled||this.inputEl.nativeElement.focus()}openLookup(){if(this.isAllowedOpenModal()){const{advancedFilters:e,service:t,columns:n,filterParams:i,literals:s,infiniteScroll:o}=this;this.poLookupModalService.openModal({advancedFilters:e,service:t,columns:n,filterParams:i,title:this.label,literals:s,infiniteScroll:o}),this.modalSubscription||(this.modalSubscription=this.poLookupModalService.selectValueEvent.subscribe(e=>{this.selectModel(e)}))}}setViewValue(e,t){this.fieldFormat?this.setInputValueWipoieldFormat(t):this.inputEl.nativeElement.value=this.valueToModel||0===this.valueToModel?e:""}getViewValue(){return this.inputEl.nativeElement.value}searchEvent(){var e;null===(e=this.onTouched)||void 0===e||e.call(this);const t=this.getViewValue();this.oldValue.toString()!==t&&this.searchById(t)}isAllowedOpenModal(){return this.service||console.warn("No service informed"),!(!this.service||this.disabled)}formatFields(e,t){let n;if(Array.isArray(t))for(const i of t)e&&e[i]&&(n=n?n+" - "+e[i]:e[i]);return n||(n=e[this.fieldValue]),n}setInputValueWipoieldFormat(e){const t=0===Object.keys(e).length;let n;n=Array.isArray(this.fieldFormat)?this.formatFields(e,this.fieldFormat):this.fieldFormat(e),this.oldValue=t?"":n,this.inputEl.nativeElement.value=t?"":n}}return e.\u0275fac=function(t){return new(t||e)(Ar(Yk),Ar(ox),Ar(lr))},e.\u0275cmp=He({type:e,selectors:[["po-lookup"]],viewQuery:function(e,t){if(1&e&&pc(Wy,7,Ua),2&e){let e;dc(e=gc())&&(t.inputEl=e.first)}},features:[La(rx),ur],decls:8,vars:11,consts:[[3,"p-label","p-help","p-optional"],[1,"po-field-container-content"],["type","text",1,"po-input","po-input-icon-right",3,"autocomplete","disabled","placeholder","required","blur"],["inp",""],[1,"po-field-icon-container-right"],["tabindex","-1",1,"po-icon","po-field-icon","po-icon-search",3,"click","focus"],["iconLookup",""]],template:function(e,t){if(1&e){const e=Rr();Fr(0,"po-field-container",0),Fr(1,"div",1),Fr(2,"input",2,3),Br("blur",function(){return t.searchEvent()}),Ir(),Fr(4,"div",4),Fr(5,"span",5,6),Br("click",function(){return t.openLookup()})("focus",function(){return It(e),xr(3).focus()}),Ir(),Ir(),Ir(),Mr(7,"po-field-container-bottom"),Ir()}2&e&&(Or("p-label",t.label)("p-help",t.help)("p-optional",!t.required&&t.optional),Zs(2),Or("autocomplete",t.autocomplete)("disabled",t.disabled)("placeholder",t.placeholder)("required",t.required),Zs(3),ea("po-field-icon",!t.disabled)("po-field-icon-disabled",t.disabled))},directives:[wE,yE],encapsulation:2}),e})(),lx=(()=>{class e{constructor(){this.isServerSearching=!1,this.hideSearch=!1,this.selectedOptions=[],this.options=[],this.visibleOptions=[],this.changeSearch=new ec,this.change=new ec,this.closeDropdown=new ec,this.scrollTop=0,this.show=!1}get hasOptions(){var e;return!!(null===(e=this.options)||void 0===e?void 0:e.length)}onKeydown(e){9===e.keyCode&&this.closeDropdown.emit()}scrollTo(e){this.scrollTop=e<=2?0:44*e-88}isSelectedItem(e){return this.selectedOptions.some(t=>t.value===e.value)}clickItem(e,t){this.updateSelectedValues(e,t),this.hideSearch||this.searchElement.setFocus()}updateSelectedValues(e,t){e?this.selectedOptions.push(t):this.selectedOptions=this.selectedOptions.filter(e=>e.value!==t.value),this.change.emit(this.selectedOptions)}callChangeSearch(e){this.changeSearch.emit(e)}controlVisibility(e){this.show=e,setTimeout(()=>{e&&this.searchElement&&!this.hideSearch&&(this.searchElement.setFocus(),this.searchElement.clean())})}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=He({type:e,selectors:[["po-multiselect-dropdown"]],viewQuery:function(e,t){if(1&e&&(pc(F_,7,Ua),pc(P_,7,Ua),pc(V_,5)),2&e){let e;dc(e=gc())&&(t.container=e.first),dc(e=gc())&&(t.ulElement=e.first),dc(e=gc())&&(t.searchElement=e.first)}},hostBindings:function(e,t){1&e&&Br("keydown",function(e){return t.onKeydown(e)})},inputs:{isServerSearching:["p-searching","isServerSearching"],hideSearch:["p-hide-search","hideSearch"],selectedOptions:["p-selected-options","selectedOptions"],options:["p-options","options"],visibleOptions:["p-visible-options","visibleOptions"],literals:["p-literals","literals"],placeholderSearch:["p-placeholder-search","placeholderSearch"]},outputs:{changeSearch:"p-change-search",change:"p-change",closeDropdown:"p-close-dropdown"},decls:8,vars:6,consts:[[1,"po-multiselect-container",3,"hidden"],["container",""],[3,"p-literals","p-placeholder","p-change",4,"ngIf"],[1,"po-multiselect-items-container",3,"scrollTop"],["ulElement",""],["class","po-multiselect-container-no-data po-text-center",4,"ngIf"],["class","po-multiselect-container-loading po-text-center",4,"ngIf"],[4,"ngIf"],[3,"p-literals","p-placeholder","p-change"],["searchElement",""],[1,"po-multiselect-container-no-data","po-text-center"],[1,"po-multiselect-container-loading","po-text-center"],[3,"p-label","p-selected","p-change",4,"ngFor","ngForOf"],[3,"p-label","p-selected","p-change"]],template:function(e,t){1&e&&(Fr(0,"div",0,1),kr(2,L_,2,2,"po-multiselect-search",2),Fr(3,"ul",3,4),kr(5,R_,3,1,"div",5),kr(6,j_,2,0,"div",6),kr(7,B_,2,1,"ng-container",7),Ir(),Ir()),2&e&&(Or("hidden",!t.show),Zs(2),Or("ngIf",!t.hideSearch),Zs(1),Or("scrollTop",t.scrollTop),Zs(2),Or("ngIf",!t.visibleOptions.length&&!t.isServerSearching),Zs(1),Or("ngIf",t.isServerSearching),Zs(1),Or("ngIf",!t.isServerSearching))},directives:function(){return[Fh,gx,_S,Oh,fx]},encapsulation:2}),e})();var cx=function(e){return e[e.startsWith=0]="startsWith",e[e.contains=1]="contains",e[e.endsWith=2]="endsWith",e}({});const ux={en:{noData:"No data found",placeholderSearch:"Search"},es:{noData:"Datos no encontrados",placeholderSearch:"Busca"},pt:{noData:"Nenhum dado encontrado",placeholderSearch:"Buscar"},ru:{noData:"\u0414\u0430\u043d\u043d\u044b\u0435 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b",placeholderSearch:"\u0438\u0441\u043a\u0430\u0442\u044c"}};let hx=(()=>{class e{constructor(e){this.autoFocus=!1,this.placeholder="",this.placeholderSearch="",this.change=new ec,this.selectedOptions=[],this.visibleOptionsDropdown=[],this.visibleDisclaimers=[],this.isServerSearching=!1,this.isFirstFilter=!0,this.filterSubject=new D,this.onModelTouched=null,this._debounceTime=400,this._disabled=!1,this._filterMode=cx.startsWith,this._hideSearch=!1,this._required=!1,this._sort=!1,this._autoHeight=!1,this.language=e.getShortLanguage()}set filterService(e){this._filterService=e,this.autoHeight=void 0===this.autoHeightInitialValue||this.autoHeightInitialValue,this.options=[]}get filterService(){return this._filterService}set autoHeight(e){this._autoHeight=e,this.autoHeightInitialValue=e}get autoHeight(){return this._autoHeight}set debounceTime(e){const t=parseInt(e,10);this._debounceTime=!isNaN(t)&&t>0?t:400}get debounceTime(){return this._debounceTime}set literals(e){this._literals=e instanceof Object&&!(e instanceof Array)?Object.assign(Object.assign(Object.assign({},ux.pt),ux[this.language]),e):ux[this.language]}get literals(){return this._literals||ux[this.language]}set required(e){this._required=""===e||YD(e),this.validateModel()}get required(){return this._required}set disabled(e){this._disabled=""===e||YD(e),this.validateModel(),this.updateVisibleItems()}get disabled(){return this._disabled}set hideSearch(e){this._hideSearch=""===e||YD(e)}get hideSearch(){return this._hideSearch}set options(e){this._options=e,this.validAndSortOptions()}get options(){return this._options}set sort(e){this._sort=""===e||YD(e),this.validAndSortOptions()}get sort(){return this._sort}set filterMode(e){switch(this._filterMode=e in cx?e:cx.startsWith,this._filterMode.toString()){case"startsWith":this._filterMode=cx.startsWith;break;case"contains":this._filterMode=cx.contains;break;case"endsWith":this._filterMode=cx.endsWith}}get filterMode(){return this._filterMode}ngOnInit(){this.filterService&&this.filterSubject.pipe(Lb(this.debounceTime),Bb(),Gp(()=>this.isServerSearching=!0),Kd(e=>this.applyFilter(e)),Gp(()=>this.isServerSearching=!1)).subscribe(),this.updateList(this.options)}validAndSortOptions(){this.options&&this.options.length&&(oS(this.options),sS(this.options),this.setUndefinedLabels(this.options),this.sort&&this.options.sort((e,t)=>(e=e.label.toString().toLowerCase())<(t=t.label.toString().toLowerCase())?-1:e>t?1:0))}setUndefinedLabels(e){e.forEach(e=>{e.label||(e.label=e.value)})}updateList(e){e&&(this.visibleOptionsDropdown=e)}callOnChange(e){this.onModelChange&&(this.onModelChange(this.getValuesFromOptions(e)),this.eventChange(e))}eventChange(e){e&&this.lastLengthModel!==e.length&&this.change.emit(e),this.lastLengthModel=e?e.length:null}getValuesFromOptions(e){return e&&e.length?e.map(e=>e.value):[]}getLabelByValue(e){const t=this.options.findIndex(t=>t.value===e);return this.options[t].label}searchByLabel(e,t,n){if(e&&t&&t.length){const i=[];t.forEach(t=>{t.label&&this.compareMethod(e,t,n)&&i.push(t)}),this.visibleOptionsDropdown=i}}compareMethod(e,t,n){switch(n){case cx.startsWith:return this.startsWith(e,t);case cx.contains:return this.contains(e,t);case cx.endsWith:return this.endsWith(e,t)}}startsWith(e,t){return t.label.toLowerCase().startsWith(e.toLowerCase())}contains(e,t){return t.label.toLowerCase().indexOf(e.toLowerCase())>-1}endsWith(e,t){return t.label.toLowerCase().endsWith(e.toLowerCase())}validate(e){return DE(this.required,this.disabled,e.value)?{required:{valid:!1}}:null}updateSelectedOptions(e,t=this.options){this.selectedOptions=[],this.filterService?this.selectedOptions=e:e.forEach(e=>{t.forEach(t=>{t.value===e.value&&this.selectedOptions.push(t)})}),this.updateVisibleItems()}writeValue(e){e=e||[],this.filterService&&e.length?this.getObjectsByValuesSubscription=this.filterService.getObjectsByValues(e).subscribe(e=>{this.updateSelectedOptions(e),this.callOnChange(this.selectedOptions)}):(this.updateSelectedOptions(e.map(e=>({value:e}))),this.selectedOptions&&this.selectedOptions.length<e.length&&this.callOnChange(this.selectedOptions))}setDisabledState(e){this.disabled=e}registerOnChange(e){this.onModelChange=e}registerOnTouched(e){this.onModelTouched=e}registerOnValidatorChange(e){this.validatorChange=e}validateModel(){this.validatorChange&&this.validatorChange()}}return e.\u0275fac=function(t){return new(t||e)(Ar(pS))},e.\u0275dir=Ke({type:e,inputs:{autoFocus:["p-auto-focus","autoFocus"],placeholder:["p-placeholder","placeholder"],placeholderSearch:["p-placeholder-search","placeholderSearch"],filterService:["p-filter-service","filterService"],autoHeight:["p-auto-height","autoHeight"],options:["p-options","options"],debounceTime:["p-debounce-time","debounceTime"],literals:["p-literals","literals"],required:["p-required","required"],disabled:["p-disabled","disabled"],hideSearch:["p-hide-search","hideSearch"],sort:["p-sort","sort"],filterMode:["p-filter-mode","filterMode"],label:["p-label","label"],help:["p-help","help"],optional:["p-optional","optional"],name:"name"},outputs:{change:"p-change"}}),Ov([xS()],e.prototype,"autoFocus",void 0),Ov([xS()],e.prototype,"autoHeight",null),e})();const dx=[VS,{provide:Pv,useExisting:se(()=>px),multi:!0},{provide:jv,useExisting:se(()=>px),multi:!0}];let px=(()=>{class e extends hx{constructor(e,t,n,i,s){super(s),this.renderer=e,this.changeDetector=t,this.el=n,this.controlPosition=i,this.disclaimerOffset=0,this.dropdownIcon="po-icon-arrow-down",this.dropdownOpen=!1,this.initialized=!1,this.visibleElement=!1,this.isCalculateVisibleItems=!0,this.onScroll=()=>{this.adjustContainerPosition()}}ngAfterViewInit(){this.autoFocus&&this.focus(),this.initialized=!0}ngDoCheck(){const e=this.inputElement.nativeElement.offsetWidth;(e&&!this.visibleElement&&this.initialized||e&&this.isCalculateVisibleItems)&&(this.debounceResize(),this.visibleElement=!0)}ngOnDestroy(){var e,t;this.removeListeners(),null===(e=this.getObjectsByValuesSubscription)||void 0===e||e.unsubscribe(),null===(t=this.filterSubject)||void 0===t||t.unsubscribe()}focus(){this.disabled||this.inputElement.nativeElement.focus()}getInputWidth(){return this.el.nativeElement.querySelector(".po-input").offsetWidth-40}getDisclaimersWidth(){const e=this.el.nativeElement.querySelectorAll("po-disclaimer");return Array.from(e).map(e=>e.offsetWidth)}calculateVisibleItems(){const e=this.getDisclaimersWidth(),t=this.getInputWidth(),n=e[0];if(this.visibleDisclaimers=[],t>0){let i=0,s=0;for(s=0;s<this.selectedOptions.length;s++)if(i+=e[s],this.visibleDisclaimers.push(this.selectedOptions[s]),i>t){i-=e[s],this.isCalculateVisibleItems=!1;break}if(n||!this.selectedOptions.length){if(s===this.selectedOptions.length)return void(this.isCalculateVisibleItems=!1);if(i+38>t){this.visibleDisclaimers.splice(-2,2);const e="+"+(this.selectedOptions.length+1-s).toString();this.visibleDisclaimers.push({value:"",label:e})}else{this.visibleDisclaimers.splice(-1,1);const e="+"+(this.selectedOptions.length-s).toString();this.visibleDisclaimers.push({value:"",label:e})}}}}changeItems(e){this.updateSelectedOptions(e),this.callOnChange(this.selectedOptions),this.autoHeight&&this.dropdownOpen&&(this.changeDetector.detectChanges(),this.adjustContainerPosition())}updateVisibleItems(){this.selectedOptions&&(this.visibleDisclaimers=[].concat(this.selectedOptions)),this.debounceResize(),this.inputElement.nativeElement.offsetWidth||(this.isCalculateVisibleItems=!0)}debounceResize(){this.autoHeight||(clearTimeout(this.timeoutResize),this.timeoutResize=setTimeout(()=>{this.calculateVisibleItems()},200))}onBlur(){var e;null===(e=this.onModelTouched)||void 0===e||e.call(this)}onKeyDown(e){if(e.keyCode===Nk.arrowUp||e.keyCode===Nk.arrowDown)return e.preventDefault(),void this.controlDropdownVisibility(!0);e.keyCode===Nk.tab&&this.controlDropdownVisibility(!1)}toggleDropdownVisibility(){this.disabled||(this.filterService&&this.applyFilterInFirstClick(),this.controlDropdownVisibility(!this.dropdownOpen))}openDropdown(e){e&&!this.disabled&&this.controlDropdownVisibility(!0)}controlDropdownVisibility(e){e?this.open():this.close()}scrollToSelectedOptions(){if(this.selectedOptions&&this.selectedOptions.length){const e=this.options.findIndex(e=>e.value===this.selectedOptions[0].value);this.dropdown.scrollTo(e)}}setVisibleOptionsDropdown(e){this.visibleOptionsDropdown=e}changeSearch(e){e&&void 0!==e.value?this.filterService?this.filterSubject.next(e.value):this.searchByLabel(e.value,this.options,this.filterMode):this.setVisibleOptionsDropdown(this.options),setTimeout(()=>this.adjustContainerPosition())}closeDisclaimer(e){const t=this.selectedOptions.findIndex(t=>t.value===e);this.selectedOptions.splice(t,1),this.updateVisibleItems(),this.callOnChange(this.selectedOptions)}wasClickedOnToggle(e){!this.dropdownOpen||this.inputElement.nativeElement.contains(e.target)||this.iconElement.nativeElement.contains(e.target)||this.dropdownElement.nativeElement.contains(e.target)||this.controlDropdownVisibility(!1)}applyFilter(e=""){return this.filterService.getFilteredData({property:"label",value:e}).pipe(Fp(e=>(this.isServerSearching=!1,Bd([]))),Gp(e=>{this.setOptionsByApplyFilter(e)}))}applyFilterInFirstClick(){this.isFirstFilter?(this.isServerSearching=!0,this.filterSubject.next()):this.options=[...this.cacheOptions]}setOptionsByApplyFilter(e){this.isFirstFilter&&(this.cacheOptions=[...e],this.isFirstFilter=!1),this.options=[...e],this.setVisibleOptionsDropdown(this.options)}adjustContainerPosition(){this.controlPosition.adjustPosition("bottom")}close(){this.dropdownIcon="po-icon-arrow-down",this.dropdownOpen=!1,this.dropdown.controlVisibility(!1),this.setVisibleOptionsDropdown(this.options),this.removeListeners()}initializeListeners(){this.clickOutListener=this.renderer.listen("document","click",e=>{this.wasClickedOnToggle(e)}),this.resizeListener=this.renderer.listen("window","resize",()=>{this.updateVisibleItems(),tS()?this.adjustContainerPosition():this.close()}),window.addEventListener("scroll",this.onScroll,!0)}open(){this.dropdownIcon="po-icon-arrow-up",this.dropdownOpen=!0,this.dropdown.controlVisibility(!0),this.setVisibleOptionsDropdown(this.options),this.initializeListeners(),this.scrollToSelectedOptions(),this.changeDetector.detectChanges(),this.setPositionDropdown()}removeListeners(){this.clickOutListener&&this.clickOutListener(),this.resizeListener&&this.resizeListener(),window.removeEventListener("scroll",this.onScroll,!0)}setPositionDropdown(){this.controlPosition.setElements(this.dropdown.container.nativeElement,8,this.inputElement,["top","bottom"],!0),this.adjustContainerPosition()}}return e.\u0275fac=function(t){return new(t||e)(Ar(Wa),Ar(gl),Ar(Ua),Ar(VS),Ar(pS))},e.\u0275cmp=He({type:e,selectors:[["po-multiselect"]],viewQuery:function(e,t){if(1&e&&(pc($_,7,Ua),pc($_,7),pc(H_,7,Ua),pc(U_,7,Ua)),2&e){let e;dc(e=gc())&&(t.dropdownElement=e.first),dc(e=gc())&&(t.dropdown=e.first),dc(e=gc())&&(t.iconElement=e.first),dc(e=gc())&&(t.inputElement=e.first)}},features:[La(dx),ur],decls:12,vars:25,consts:[[3,"p-label","p-help","p-optional"],[1,"po-field-container-content"],[1,"po-input","po-input-icon-right","po-multiselect-input","po-clickable",3,"tabindex","keyup.enter","keydown","click","blur"],["inputElement",""],["class","po-multiselect-input-placeholder",4,"ngIf"],["class","po-multiselect-input-disclaimer",3,"p-label","p-value","p-hide-close","po-clickable","click","p-close-action",4,"ngFor","ngForOf"],[1,"po-field-icon-container-right"],[3,"ngClass"],["iconElement",""],[3,"p-searching","p-hide-search","p-literals","p-options","p-visible-options","p-selected-options","p-placeholder-search","p-change","p-change-search","p-close-dropdown"],["dropdownElement",""],[1,"po-multiselect-input-placeholder"],[1,"po-multiselect-input-disclaimer",3,"p-label","p-value","p-hide-close","click","p-close-action"]],template:function(e,t){1&e&&(Fr(0,"po-field-container",0),Fr(1,"div",1),Fr(2,"div",2,3),Br("keyup.enter",function(){return t.toggleDropdownVisibility()})("keydown",function(e){return t.onKeyDown(e)})("click",function(){return t.toggleDropdownVisibility()})("blur",function(){return t.onBlur()}),kr(4,q_,2,1,"span",4),kr(5,z_,1,5,"po-disclaimer",5),Fr(6,"div",6),Mr(7,"span",7,8),Ir(),Ir(),Ir(),Fr(9,"po-multiselect-dropdown",9,10),Br("p-change",function(e){return t.changeItems(e)})("p-change-search",function(e){return t.changeSearch(e)})("p-close-dropdown",function(){return t.controlDropdownVisibility(!1)}),Ir(),Mr(11,"po-field-container-bottom"),Ir()),2&e&&(Or("p-label",t.label)("p-help",t.help)("p-optional",!t.required&&t.optional),Zs(1),ea("po-multiselect-show",t.dropdownOpen),Zs(1),ea("po-multiselect-input-auto",t.autoHeight)("po-multiselect-input-static",!t.autoHeight)("po-multiselect-input-disabled",t.disabled),Or("tabindex",t.disabled?-1:0),Zs(2),Or("ngIf",t.placeholder&&!(null!=t.visibleDisclaimers&&t.visibleDisclaimers.length)),Zs(1),Or("ngForOf",t.visibleDisclaimers),Zs(2),va("po-icon po-field-icon ",t.dropdownIcon,""),Or("ngClass",t.disabled?"po-field-icon-disabled":""),Zs(2),Or("p-searching",t.isServerSearching)("p-hide-search",t.hideSearch)("p-literals",t.literals)("p-options",t.options)("p-visible-options",t.visibleOptionsDropdown)("p-selected-options",t.selectedOptions)("p-placeholder-search",t.placeholderSearch))},directives:[wE,Fh,Oh,xh,lx,yE,sE],encapsulation:2}),e})(),fx=(()=>{class e{constructor(){this.selected=!1,this.change=new ec}itemClicked(){this.selected=!this.selected,this.change.emit(this.selected)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=He({type:e,selectors:[["po-multiselect-item"]],inputs:{selected:["p-selected","selected"],label:["p-label","label"]},outputs:{change:"p-change"},decls:5,vars:6,consts:[[3,"click"],[1,"po-multiselect-item"],["type","checkbox",1,"po-multiselect-checkbox-input",3,"checked"],[1,"po-multiselect-checkbox-label","po-clickable"]],template:function(e,t){1&e&&(Fr(0,"li",0),Br("click",function(){return t.itemClicked()}),Fr(1,"a",1),Mr(2,"input",2),Fr(3,"label",3),pa(4),Ir(),Ir(),Ir()),2&e&&(ea("po-multiselect-item-selected",t.selected),Zs(2),ea("po-multiselect-checkbox-input-checked",t.selected),Or("checked",t.selected),Zs(2),ga(" ",t.label," "))},encapsulation:2,changeDetection:0}),e})(),gx=(()=>{class e{constructor(){this.change=new ec}set placeholder(e){this._placeholder=e&&QD(e,"string")?e:this.literals.placeholderSearch}get placeholder(){return this._placeholder||this.literals.placeholderSearch}onChange(e){this.change.emit({event:e,value:this.inputElement.nativeElement.value})}setFocus(){this.inputElement.nativeElement.focus()}clean(){this.inputElement.nativeElement.value=""}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=He({type:e,selectors:[["po-multiselect-search"]],viewQuery:function(e,t){if(1&e&&pc(U_,7,Ua),2&e){let e;dc(e=gc())&&(t.inputElement=e.first)}},inputs:{placeholder:["p-placeholder","placeholder"],literals:["p-literals","literals"]},outputs:{change:"p-change"},decls:5,vars:1,consts:[[1,"po-field-container-content","po-multiselect-container-search"],[1,"po-field-icon-container-left"],[1,"po-icon","po-icon-search","po-field-icon"],["type","text",1,"po-input","po-input-icon-left","po-multiselect-search-input",3,"placeholder","keyup"],["inputElement",""]],template:function(e,t){1&e&&(Fr(0,"div",0),Fr(1,"div",1),Mr(2,"span",2),Ir(),Fr(3,"input",3,4),Br("keyup",function(e){return t.onChange(e)}),Ir(),Ir()),2&e&&(Zs(3),Or("placeholder",t.placeholder))},encapsulation:2}),e})(),mx=(()=>{class e extends Kk{constructor(e){super(e)}extraValidation(e){return null}}return e.\u0275fac=function(t){return new(t||e)(Ar(Ua))},e.\u0275cmp=He({type:e,selectors:[["po-input"]],features:[La([{provide:Pv,useExisting:se(()=>e),multi:!0},{provide:jv,useExisting:se(()=>e),multi:!0}]),ur],decls:8,vars:17,consts:[[3,"p-help","p-label","p-optional"],[1,"po-field-container-content"],["class","po-field-icon-container-left",4,"ngIf"],[1,"po-input",3,"autocomplete","disabled","placeholder","readonly","required","type","blur","click","focus","input"],["inp",""],[1,"po-field-icon-container-right"],[3,"p-element-ref","p-change-event",4,"ngIf"],[3,"p-error-pattern"],[1,"po-field-icon-container-left"],[1,"po-field-icon",3,"p-icon"],[3,"p-element-ref","p-change-event"]],template:function(e,t){1&e&&(Fr(0,"po-field-container",0),Fr(1,"div",1),kr(2,W_,2,3,"div",2),Fr(3,"input",3,4),Br("blur",function(e){return t.eventOnBlur(e)})("click",function(e){return t.eventOnClick(e)})("focus",function(e){return t.eventOnFocus(e)})("input",function(e){return t.eventOnInput(e)}),Ir(),Fr(5,"div",5),kr(6,G_,1,1,"po-clean",6),Ir(),Ir(),Mr(7,"po-field-container-bottom",7),Ir()),2&e&&(Or("p-help",t.help)("p-label",t.label)("p-optional",!t.required&&t.optional),Zs(2),Or("ngIf",t.icon),Zs(1),ea("po-input-icon-left",t.icon)("po-input-icon-right",t.clean),Or("autocomplete",t.autocomplete)("disabled",t.disabled)("placeholder",t.placeholder)("readonly",t.readonly)("required",t.required)("type",t.type),Dr("name",t.name),Zs(3),Or("ngIf",t.clean&&!t.disabled&&!t.readonly),Zs(1),Or("p-error-pattern",t.getErrorPattern()))},directives:[wE,Fh,yE,gS,IE],encapsulation:2}),e})(),vx=(()=>{class e extends Kk{constructor(e){super(e),this.type="number",this.invalidInputValueOnBlur=!1}eventOnInput(e){if(!this.mask){let t=e.target.value;const n=this.validMaxLength(this.maxlength,t);this.invalidInputValueOnBlur=!1,t!==n&&(t=n,this.inputEl.nativeElement.value=t),this.callOnChange(this.formatNumber(t))}}onBlur(e){const t=e.target;this.invalidInputValueOnBlur=""===t.value&&!t.validity.valid,this.invalidInputValueOnBlur&&this.callOnChange("Valor Inv\xe1lido"),this.eventOnBlur(e)}onKeyDown(e){this.isKeyAllowed(e)||(e.stopPropagation(),e.preventDefault())}validMaxLength(e,t){if(e&&t.length>e){const n=t.toString().substring(0,e);return n&&this.isEndWithDot(n)?n.toString().substring(0,e-1):n}return t}writeValueModel(e){this.inputEl&&(e||0===e?this.mask?(this.inputEl.nativeElement.value=this.objMask.controlFormatting(String(e)),this.objMask.formatModel&&this.onChangePropagate(this.objMask.valueToModel)):this.inputEl.nativeElement.value=e:this.inputEl.nativeElement.value=""),this.changeModel.emit(e)}isEndWithDot(e){return e&&e.lastIndexOf(".")===e.length-1}formatNumber(e){return e?Number(e):null}isKeyAllowed(e){return this.isShortcut(e)||this.isControlKeys(e)||!this.isInvalidKey(e.key)}isInvalidKey(e){return new RegExp(/[a-zA-Z:;=_\xb4`^~"'?!@#$%\xa8&*()><{}\xe7\xc7\[\]/\\|]+/).test(e)}isShortcut(e){const t=e.keyCode,n=e.ctrlKey||e.metaKey;return n&&67===t||n&&86===t||n&&65===t||n&&88===t}isControlKeys(e){return-1!==["Backspace","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","Left","Right","Up","Down","Tab","Delete"].indexOf(e.key)}}return e.\u0275fac=function(t){return new(t||e)(Ar(Ua))},e.\u0275dir=Ke({type:e,features:[ur]}),e})(),bx=(()=>{class e extends vx{constructor(e){super(e),this.step="1"}set setMin(e){this.min=isNaN(e)?void 0:e,this.validateModel()}set setMax(e){this.max=isNaN(e)?void 0:e,this.validateModel()}extraValidation(e){return this.errorPattern="Valor Inv\xe1lido"!==this.errorPattern?this.errorPattern:"",kE(this.min,e.value)?{min:{valid:!1}}:xE(this.max,e.value)?{max:{valid:!1}}:this.invalidInputValueOnBlur?(this.errorPattern=this.errorPattern||"Valor Inv\xe1lido",{number:{valid:!1}}):null}getErrorPatternMessage(){return""!==this.errorPattern&&this.containsInvalidClass()?this.errorPattern:""}containsInvalidClass(){return this.el.nativeElement.classList.contains("ng-invalid")&&this.el.nativeElement.classList.contains("ng-dirty")&&""!==this.inputEl.nativeElement.value||this.invalidInputValueOnBlur}}return e.\u0275fac=function(t){return new(t||e)(Ar(Ua))},e.\u0275cmp=He({type:e,selectors:[["po-number"]],inputs:{step:["p-step","step"],setMin:["p-min","setMin"],setMax:["p-max","setMax"]},features:[La([{provide:Pv,useExisting:se(()=>e),multi:!0},{provide:jv,useExisting:se(()=>e),multi:!0}]),ur],decls:8,vars:20,consts:[[3,"p-help","p-label","p-optional"],[1,"po-field-container-content"],["class","po-field-icon-container-left",4,"ngIf"],["type","number",1,"po-input",3,"autocomplete","disabled","placeholder","readonly","required","tabindex","blur","focus","input","keydown"],["inp",""],[1,"po-field-icon-container-right"],[3,"p-default-value","p-element-ref","p-change-event",4,"ngIf"],[3,"p-error-pattern"],[1,"po-field-icon-container-left"],[1,"po-field-icon",3,"p-icon"],[3,"p-default-value","p-element-ref","p-change-event"]],template:function(e,t){1&e&&(Fr(0,"po-field-container",0),Fr(1,"div",1),kr(2,K_,2,3,"div",2),Fr(3,"input",3,4),Br("blur",function(e){return t.onBlur(e)})("focus",function(e){return t.eventOnFocus(e)})("input",function(e){return t.eventOnInput(e)})("keydown",function(e){return t.onKeyDown(e)}),Ir(),Fr(5,"div",5),kr(6,Y_,1,2,"po-clean",6),Ir(),Ir(),Mr(7,"po-field-container-bottom",7),Ir()),2&e&&(Or("p-help",t.help)("p-label",t.label)("p-optional",!t.required&&t.optional),Zs(2),Or("ngIf",t.icon),Zs(1),ea("po-input-icon-left",t.icon)("po-input-icon-right",t.clean),Or("autocomplete",t.autocomplete)("disabled",t.disabled)("placeholder",t.placeholder)("readonly",t.readonly)("required",t.required)("tabindex",t.disabled?-1:0),Dr("max",t.max)("min",t.min)("name",t.name)("step",t.step),Zs(3),Or("ngIf",t.clean&&!t.disabled&&!t.readonly),Zs(1),Or("p-error-pattern",t.getErrorPatternMessage()))},directives:[wE,Fh,yE,gS,IE],encapsulation:2}),e})(),yx=(()=>{class e extends Kk{constructor(e){super(e),this.type="password",this.visiblePassword=!1,this._hidePasswordPeek=!1}set hidePasswordPeek(e){this._hidePasswordPeek=YD(e),e&&(this.visiblePassword=!1,this.type="password")}get hidePasswordPeek(){return this._hidePasswordPeek}get autocomplete(){return this.noAutocomplete?"new-password":"on"}extraValidation(e){return null}showPassword(){this.visiblePassword=!this.visiblePassword,this.type="password"===this.type?"text":"password"}}return e.\u0275fac=function(t){return new(t||e)(Ar(Ua))},e.\u0275cmp=He({type:e,selectors:[["po-password"]],inputs:{hidePasswordPeek:["p-hide-password-peek","hidePasswordPeek"]},features:[La([{provide:Pv,useExisting:se(()=>e),multi:!0},{provide:jv,useExisting:se(()=>e),multi:!0}]),ur],decls:10,vars:19,consts:[[3,"p-label","p-help","p-optional"],[1,"po-field-container-content"],[1,"po-field-icon-container-left"],[1,"po-icon","po-field-icon","po-icon-lock"],[1,"po-input","po-input-icon-left",3,"autocomplete","disabled","placeholder","readonly","required","type","blur","click","focus","input"],["inp",""],[1,"po-field-icon-container-right"],[3,"p-element-ref","p-change-event",4,"ngIf"],["class","po-icon po-field-icon",3,"ngClass","click",4,"ngIf"],[3,"p-error-pattern"],[3,"p-element-ref","p-change-event"],[1,"po-icon","po-field-icon",3,"ngClass","click"]],template:function(e,t){if(1&e&&(Fr(0,"po-field-container",0),Fr(1,"div",1),Fr(2,"div",2),Mr(3,"span",3),Ir(),Fr(4,"input",4,5),Br("blur",function(e){return t.eventOnBlur(e)})("click",function(e){return t.eventOnClick(e)})("focus",function(e){return t.eventOnFocus(e)})("input",function(e){return t.eventOnInput(e)}),Ir(),Fr(6,"div",6),kr(7,Z_,1,1,"po-clean",7),kr(8,Q_,1,1,"span",8),Ir(),Ir(),Mr(9,"po-field-container-bottom",9),Ir()),2&e){const e=xr(5);Or("p-label",t.label)("p-help",t.help)("p-optional",!t.required&&t.optional),Zs(3),ea("po-field-icon-disabled",t.disabled),Zs(1),ea("po-input-double-icon-right",t.clean&&e.value&&!t.hidePasswordPeek)("po-input-icon-right",t.clean||!t.hidePasswordPeek),Or("autocomplete",t.autocomplete)("disabled",t.disabled)("placeholder",t.placeholder)("readonly",t.readonly)("required",t.required)("type",t.disabled?"password":t.type),Dr("name",t.name),Zs(3),Or("ngIf",t.clean&&!t.disabled&&!t.readonly),Zs(1),Or("ngIf",!t.hidePasswordPeek&&!t.disabled),Zs(1),Or("p-error-pattern",t.getErrorPattern())}},directives:[wE,Fh,yE,IE,xh],encapsulation:2}),e})(),Cx=(()=>{class e{constructor(){this.autoFocus=!1,this.change=new ec,this.mdColumns=6,this._columns=6,this._disabled=!1,this._required=!1,this.onChangePropagate=null}set columns(e){const t=ZD(e,6);this._columns=this.getGridSystemColumns(t,4),this.mdColumns=this.getGridSystemColumns(t,2)}get columns(){return this._columns}set disabled(e){this._disabled=YD(e),this.validateModel()}get disabled(){return this._disabled}set required(e){this._required=YD(e),this.validateModel()}get required(){return this._required}set options(e){this._options=e,sS(this.options)}get options(){return this._options}changeValue(e){this.onChangePropagate&&this.onChangePropagate(e),this.value!==e&&this.change.emit(e),this.value=e}setDisabledState(e){this.disabled=e}registerOnChange(e){this.onChangePropagate=e}registerOnTouched(e){}registerOnValidatorChange(e){this.validatorChange=e}validate(e){if(DE(this.required,this.disabled,e.value))return{required:{valid:!1}}}writeValue(e){this.value=e,!this.getElementByValue(e)&&this.onChangePropagate&&(this.value=void 0,this.onChangePropagate(this.value))}checkColumnsRange(e,t){return e>=1&&e<=t}getGridSystemColumns(e,t){const n=12/e;return this.checkColumnsRange(e,t)?n:6}validateModel(){this.validatorChange&&this.validatorChange()}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,inputs:{autoFocus:["p-auto-focus","autoFocus"],columns:["p-columns","columns"],disabled:["p-disabled","disabled"],required:["p-required","required"],options:["p-options","options"],name:"name",optional:["p-optional","optional"]},outputs:{change:"p-change"}}),Ov([xS()],e.prototype,"autoFocus",void 0),e})(),wx=(()=>{class e extends Cx{constructor(e){super(),this.differ=e.find([]).create(null)}ngAfterViewInit(){this.autoFocus&&this.focus()}ngDoCheck(){this.differ.diff(this.options)&&sS(this.options)}eventClick(e,t){t||this.changeValue(e)}focus(){if(this.radioLabels&&!this.disabled){const e=this.radioLabels.find((e,t)=>!this.options[t].disabled);e&&e.nativeElement.focus()}}getElementByValue(e){return this.inputEl.nativeElement.querySelector(`input[value='${e}']`)}onKeyUp(e,t){this.isArrowKey(e.keyCode||e.which)&&this.changeValue(t)}isArrowKey(e){return e>=37&&e<=40}}return e.\u0275fac=function(t){return new(t||e)(Ar(ll))},e.\u0275cmp=He({type:e,selectors:[["po-radio-group"]],viewQuery:function(e,t){if(1&e&&(pc(Wy,7,Ua),pc(J_,5)),2&e){let e;dc(e=gc())&&(t.inputEl=e.first),dc(e=gc())&&(t.radioLabels=e)}},inputs:{label:["p-label","label"],help:["p-help","help"]},features:[La([{provide:Pv,useExisting:se(()=>e),multi:!0},{provide:jv,useExisting:se(()=>e),multi:!0}]),ur],decls:5,vars:4,consts:[[3,"p-help","p-label","p-optional"],[1,"po-row","po-pt-1","po-pb-1"],["inp",""],[3,"class",4,"ngFor","ngForOf"],["type","radio",1,"po-radio-group-input",3,"checked","disabled","required","value","keyup"],["inputRadio",""],[1,"po-radio-group-label",3,"for","click"]],template:function(e,t){1&e&&(Fr(0,"po-field-container",0),Fr(1,"div",1,2),kr(3,X_,5,15,"div",3),Ir(),Mr(4,"po-field-container-bottom"),Ir()),2&e&&(Or("p-help",t.help)("p-label",t.label)("p-optional",!t.required&&t.optional),Zs(3),Or("ngForOf",t.options))},directives:[wE,Oh,yE],encapsulation:2}),e})(),_x=(()=>{class e{constructor(e,t){this.element=e,this.autoFocus=!1,this.change=new ec,this.ngModelChange=new ec,this.readyToValidation=!1,this._disabled=!1,this._readonly=!1,this._required=!1,this.element=e,this.changeDetector=t}set options(e){this._options=e,sS(this._options),oS(this._options),this.onUpdateOptions()}get options(){return this._options}set disabled(e){this._disabled=YD(e),this.validateModel()}get disabled(){return this._disabled}set readonly(e){this._readonly=YD(e)}get readonly(){return this._readonly}set required(e){this._required=YD(e),this.validateModel()}get required(){return this._required}callModelChange(e){return this.onModelChange?this.onModelChange(e):this.ngModelChange.emit(e)}onChange(e){this.change.emit(e)}validate(e){return DE(this._required,this._disabled,e.value)?{required:{valid:!1}}:null}setDisabledState(e){this.disabled=e,this.changeDetector.detectChanges()}registerOnChange(e){this.onModelChange=e}registerOnTouched(e){this.onModelTouched=e}registerOnValidatorChange(e){this.onValidatorChange=e}validateModel(){this.onValidatorChange&&this.onValidatorChange()}}return e.\u0275fac=function(t){return new(t||e)(Ar(Ua),Ar(gl))},e.\u0275dir=Ke({type:e,inputs:{autoFocus:["p-auto-focus","autoFocus"],options:["p-options","options"],disabled:["p-disabled","disabled"],readonly:["p-readonly","readonly"],required:["p-required","required"],label:["p-label","label"],name:"name",help:["p-help","help"],placeholder:["p-placeholder","placeholder"],optional:["p-optional","optional"]},outputs:{change:"p-change",ngModelChange:"ngModelChange"}}),Ov([xS()],e.prototype,"autoFocus",void 0),e})(),Dx=(()=>{class e{constructor(e){this.templateRef=e}}return e.\u0275fac=function(t){return new(t||e)(Ar(Cl))},e.\u0275dir=Ke({type:e,selectors:[["","p-select-option-template",""]]}),e})();const Sx="bottom";let Ex=(()=>{class e extends _x{constructor(e,t,n,i,s){super(e,t),this.renderer=i,this.controlPosition=s,this.isMobile=tS(),this.open=!1,this.selectIcon="po-icon-arrow-down",this.onScroll=()=>{this.controlPosition.adjustPosition(Sx)},this.differ=n.find([]).create(null)}get isInvisibleSelectNative(){return this.readonly&&this.isMobile}onKeydown(e){const t=e.which||e.keyCode;this.readonly?t!==Nk.tab&&(this.disableDefaultEventAndToggleButton(),e.preventDefault()):(this.open&&!e.altKey||t!==Nk.arrowDown&&t!==Nk.arrowUp||this.disableDefaultEventAndToggleButton(),t!==Nk.enter&&t!==Nk.space||this.disableDefaultEventAndToggleButton(),this.open&&t===Nk.tab&&(e.preventDefault(),this.toggleButton()))}ngAfterViewInit(){this.autoFocus&&this.focus()}ngDoCheck(){this.differ.diff(this.options)&&(sS(this.options),oS(this.options))}focus(){this.disabled||this.selectElement.nativeElement.focus()}hideDropDown(){this.selectIcon="po-icon-arrow-down",this.selector(".po-select-container").classList.remove("po-select-show"),this.open=!1,this.changeDetector.markForCheck(),this.selectElement.nativeElement.focus(),this.removeListeners()}isEqual(e,t){return(e||0===e)&&t?e.toString()===t.toString():((null===e&&null!==t||void 0===e&&void 0!==t)&&(e=`${e}`),e===t)}onBlur(){var e;null===(e=this.onModelTouched)||void 0===e||e.call(this)}onOptionClick(e){this.updateModel(e),this.toggleButton()}onSelectChange(e){if(e&&this.options&&this.options.length){const t=this.findOptionValue(e);t&&(this.updateModel(t),this.setScrollPosition(t.value))}}onUpdateOptions(){this.modelValue&&this.onSelectChange(this.modelValue)}scrollValue(e,t){const n=e*this.getSelectItemHeight();return this.scrollPosition=n>t?n:0}selector(e){return this.element.nativeElement.querySelector(e)}toggleButton(){this.open?this.hideDropDown():this.showDropdown()}updateModel(e){this.selectedValue!==e.value&&(this.selectedValue=e.value,this.selectElement.nativeElement.value=e.value,this.callModelChange(e.value),this.displayValue=e.label,this.onChange(e.value))}wasClickedOnToggle(e){this.selectButtonElement.nativeElement.contains(e.target)||this.iconElement.nativeElement.contains(e.target)||this.hideDropDown()}writeValue(e){const t=this.findOptionValue(e);t?(this.selectElement.nativeElement.value=t.value,this.selectedValue=t.value,this.displayValue=t.label,this.setScrollPosition(t.value)):rS(this.selectedValue)&&(this.selectElement.nativeElement.value=void 0,this.callModelChange(void 0),this.selectedValue=void 0,this.displayValue=void 0),this.modelValue=e,this.changeDetector.detectChanges()}disableDefaultEventAndToggleButton(){this.selectElement.nativeElement.style.display="none",setTimeout(()=>{this.selectElement.nativeElement.style.display="block",this.toggleButton()})}findOptionValue(e){return this.options.find(t=>this.isEqual(t.value,e))}getSelectItemHeight(){const e=this.selector("div.po-select-item");return e&&e.clientHeight}initializeListeners(){this.clickoutListener=this.renderer.listen("document","click",e=>{this.wasClickedOnToggle(e)}),this.eventResizeListener=this.renderer.listen("window","resize",()=>{this.hideDropDown()}),window.addEventListener("scroll",this.onScroll,!0)}removeListeners(){this.clickoutListener&&this.clickoutListener(),this.eventResizeListener(),window.removeEventListener("scroll",this.onScroll,!0)}setPositionDropdown(){this.controlPosition.setElements(this.contentList.nativeElement,8,this.selectButtonElement,["top","bottom"],!0),this.controlPosition.adjustPosition(Sx)}setScrollPosition(e){const t=this.element.nativeElement.querySelector("ul.po-select-content");if(e&&this.options&&this.options.length){const n=this.findOptionValue(e);if(n){const e=this.options.indexOf(n);t.scrollTop=this.scrollValue(e,t.clientHeight)}}}showDropdown(){this.readonly||(this.selectElement.nativeElement.focus(),this.selectIcon="po-icon-arrow-up",this.selector(".po-select-container").classList.add("po-select-show"),this.open=!0,this.changeDetector.markForCheck(),this.setPositionDropdown(),this.initializeListeners(),this.options&&this.options.length&&this.setScrollPosition(this.selectedValue))}}return e.\u0275fac=function(t){return new(t||e)(Ar(Ua),Ar(gl),Ar(ll),Ar(Wa),Ar(VS))},e.\u0275cmp=He({type:e,selectors:[["po-select"]],contentQueries:function(e,t,n){if(1&e&&fc(n,Dx,7),2&e){let e;dc(e=gc())&&(t.selectOptionTemplate=e.first)}},viewQuery:function(e,t){if(1&e&&(pc(eD,7,Ua),pc(tD,7,Ua),pc(nD,7,Ua),pc(iD,7,Ua)),2&e){let e;dc(e=gc())&&(t.contentList=e.first),dc(e=gc())&&(t.iconElement=e.first),dc(e=gc())&&(t.selectElement=e.first),dc(e=gc())&&(t.selectButtonElement=e.first)}},hostBindings:function(e,t){1&e&&Br("keydown",function(e){return t.onKeydown(e)})},features:[La([{provide:Pv,useExisting:se(()=>e),multi:!0},{provide:jv,useExisting:se(()=>e),multi:!0},VS]),ur],decls:17,vars:28,consts:[[3,"p-label","p-help","p-optional"],[1,"po-select",3,"disabled","ngClass","required","change","blur"],["select",""],["disabled","","hidden","","selected","",4,"ngIf"],[3,"disabled","value","click",4,"ngFor","ngForOf"],[1,"po-select-container"],[1,"po-select-button",3,"ngClass","click"],["selectButton",""],[1,"po-field-icon-container-right"],[3,"ngClass"],["icon",""],[1,"po-select-content",3,"ngClass"],["contentList",""],[3,"po-select-item-selected","value","click",4,"ngFor","ngForOf"],["disabled","","hidden","","selected",""],[3,"disabled","value","click"],[3,"value","click"],[1,"po-select-item"],[4,"ngIf","ngIfThen","ngIfElse"],["defaultOptionTemplate",""],[3,"ngTemplateOutlet","ngTemplateOutletContext"],["optionTemplate",""]],template:function(e,t){1&e&&(Fr(0,"po-field-container",0),Fr(1,"select",1,2),Br("change",function(e){return t.onSelectChange(e.target.value)})("blur",function(){return t.onBlur()}),kr(3,sD,1,0,"option",3),kr(4,oD,2,3,"option",4),Ir(),Fr(5,"div",5),Fr(6,"div",6,7),Br("click",function(){return t.toggleButton()}),Fr(8,"span"),pa(9),Ir(),Fr(10,"div",8),Mr(11,"span",9,10),Ir(),Ir(),Fr(13,"ul",11,12),kr(15,cD,7,10,"li",13),Ir(),Ir(),Mr(16,"po-field-container-bottom"),Ir()),2&e&&(Or("p-label",t.label)("p-help",t.help)("p-optional",!t.required&&t.optional),Zs(1),Or("disabled",t.disabled)("ngClass",ql(17,uD,t.isMobile,t.isInvisibleSelectNative))("required",t.required),Dr("name",t.name),Zs(2),Or("ngIf",t.isMobile),Zs(1),Or("ngForOf",t.options),Zs(2),Or("ngClass",ql(20,hD,t.disabled,t.readonly)),Zs(3),fa(t.displayValue||t.placeholder),Zs(2),va("po-icon ",t.selectIcon," po-field-icon"),Or("ngClass",ql(23,dD,t.disabled,t.readonly)),Zs(2),Or("ngClass",Ul(26,pD,t.isMobile)),Zs(2),Or("ngForOf",t.options))},directives:[wE,xh,Fh,Oh,yE,Ob,Mb,jh],encapsulation:2,changeDetection:0}),e})();var kx=function(e){return e[e.Right=0]="Right",e[e.Left=1]="Left",e}({});let xx=(()=>{class e{constructor(e){this.changeDetector=e,this.autoFocus=!1,this.change=new ec,this.ngModelChange=new ec,this.switchValue=!1,this._disabled=!1,this.labelOn="true",this.labelOff="false",this.labelPosition=kx.Right}set setLabelOn(e){this.labelOn=e||"true"}set setLabelOff(e){this.labelOff=e||"false"}set setLabelPosition(e){this.labelPosition=e in kx?parseInt(e,10):kx.Right}set disabled(e){this._disabled=YD(e)}get disabled(){return this._disabled}changeValue(e){this.switchValue!==e&&(this.switchValue=e,this.propagateChange?this.propagateChange(e):this.ngModelChange.emit(e),this.change.emit(this.switchValue))}eventClick(){this.disabled||this.changeValue(!this.switchValue)}setDisabledState(e){this.disabled=e}registerOnChange(e){this.propagateChange=e}registerOnTouched(e){this.onTouched=e}writeValue(e){e!==this.switchValue&&(this.switchValue=!!e,this.changeDetector.markForCheck())}}return e.\u0275fac=function(t){return new(t||e)(Ar(gl))},e.\u0275dir=Ke({type:e,inputs:{autoFocus:["p-auto-focus","autoFocus"],setLabelOn:["p-label-on","setLabelOn"],setLabelOff:["p-label-off","setLabelOff"],setLabelPosition:["p-label-position","setLabelPosition"],disabled:["p-disabled","disabled"],name:"name",label:["p-label","label"],help:["p-help","help"]},outputs:{change:"p-change",ngModelChange:"ngModelChange"}}),Ov([xS()],e.prototype,"autoFocus",void 0),e})(),Ax=(()=>{class e extends xx{constructor(e){super(e)}ngAfterViewInit(){this.autoFocus&&this.focus()}focus(){this.disabled||this.switchContainer.nativeElement.focus()}onBlur(){var e;null===(e=this.onTouched)||void 0===e||e.call(this)}getLabelPosition(){switch(this.labelPosition){case kx.Left:return"left";case kx.Right:default:return"right"}}getSwitchPosition(){switch(this.labelPosition){case kx.Left:return"right";case kx.Right:default:return"left"}}onKeyDown(e){32!==e.which&&32!==e.keyCode||(e.preventDefault(),this.eventClick())}}return e.\u0275fac=function(t){return new(t||e)(Ar(gl))},e.\u0275cmp=He({type:e,selectors:[["po-switch"]],viewQuery:function(e,t){if(1&e&&pc(fD,7),2&e){let e;dc(e=gc())&&(t.switchContainer=e.first)}},features:[La([{provide:Pv,useExisting:se(()=>e),multi:!0}]),ur],decls:9,vars:25,consts:[[3,"p-label","p-help"],[1,"po-field-container-content","po-switch-content"],[1,"po-switch-container","po-clickable",3,"tabindex","click","keydown","blur"],["switchContainer",""],[1,"po-switch-button"],[3,"click"]],template:function(e,t){1&e&&(Fr(0,"po-field-container",0),Fr(1,"div",1),Fr(2,"div",2,3),Br("click",function(){return t.eventClick()})("keydown",function(e){return t.onKeyDown(e)})("blur",function(){return t.onBlur()}),Fr(4,"div",4),Mr(5,"span"),Ir(),Ir(),Fr(6,"span",5),Br("click",function(){return t.eventClick()}),pa(7),Ir(),Ir(),Mr(8,"po-field-container-bottom"),Ir()),2&e&&(Or("p-label",t.label)("p-help",t.help),Zs(1),Dr("name",t.name),Zs(1),ea("po-switch-container-disabled",t.disabled)("po-switch-container-off",!1===t.switchValue&&!t.disabled)("po-switch-container-on",!0===t.switchValue&&!t.disabled)("po-switch-container-right","right"===t.getSwitchPosition()),Or("tabindex",t.disabled?-1:0),Zs(2),ea("po-switch-button-on",!0===t.switchValue)("po-switch-button-off",!1===t.switchValue)("po-switch-button-disabled",t.disabled),Zs(1),va("po-icon po-icon-",!0===t.switchValue?"ok":"close",""),Zs(1),va("po-switch-label po-clickable po-switch-label-",t.getLabelPosition(),""),Zs(1),ga(" ",!0===t.switchValue?t.labelOn:t.labelOff," "))},directives:[wE,yE],encapsulation:2,changeDetection:0}),e})(),Ox=(()=>{class e{constructor(){this.autoFocus=!1,this.blur=new ec,this.enter=new ec,this.change=new ec,this.changeModel=new ec,this._disabled=!1,this._placeholder="",this._readonly=!1,this._required=!1,this._rows=3,this.onChangePropagate=null,this.onTouched=null}set placeholder(e){this._placeholder=e||""}get placeholder(){return this._placeholder}set disabled(e){this._disabled=YD(e)}get disabled(){return this._disabled}set readonly(e){this._readonly=YD(e)}get readonly(){return this._readonly}set required(e){this._required=YD(e),this.validateModel()}get required(){return this._required}set minlength(e){this._minlength=ZD(e),this.validateModel()}get minlength(){return this._minlength}set maxlength(e){this._maxlength=ZD(e),this.validateModel()}get maxlength(){return this._maxlength}set rows(e){this._rows=isNaN(parseInt(e,10))||e<3?3:parseInt(e,10)}get rows(){return this._rows}callOnChange(e){this.onChangePropagate&&this.onChangePropagate(e),this.controlChangeModelEmitter(e)}controlChangeModelEmitter(e){this.modelLastUpdate!==e&&(this.changeModel.emit(e),this.modelLastUpdate=e)}setDisabledState(e){this.disabled=e}registerOnChange(e){this.onChangePropagate=e}registerOnTouched(e){this.onTouched=e}registerOnValidatorChange(e){this.validatorChange=e}validate(e){return DE(this.required,this.disabled,e.value)?{required:{valid:!1}}:EE(this.minlength,e.value)?{minlength:{valid:!1}}:SE(this.maxlength,e.value)?{maxlength:{valid:!1}}:void 0}writeValue(e){this.writeValueModel(e)}validateModel(){this.validatorChange&&this.validatorChange()}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,inputs:{autoFocus:["p-auto-focus","autoFocus"],placeholder:["p-placeholder","placeholder"],disabled:["p-disabled","disabled"],readonly:["p-readonly","readonly"],required:["p-required","required"],minlength:["p-minlength","minlength"],maxlength:["p-maxlength","maxlength"],rows:["p-rows","rows"],label:["p-label","label"],help:["p-help","help"],name:"name",optional:["p-optional","optional"]},outputs:{blur:"p-blur",enter:"p-enter",change:"p-change",changeModel:"p-change-model"}}),Ov([xS()],e.prototype,"autoFocus",void 0),e})(),Tx=(()=>{class e extends Ox{constructor(){super(),this.fireChange=!1}focus(){this.disabled||this.inputEl.nativeElement.focus()}ngAfterViewInit(){this.autoFocus&&this.focus()}writeValueModel(e){this.inputEl&&(this.inputEl.nativeElement.value=e||""),e&&this.change.emit(e)}validMaxLength(e,t){return e&&t.length>e?t.toString().substring(0,e):t}eventOnInput(e){const t=this.validMaxLength(this.maxlength,e.target.value);this.callOnChange(t),this.inputEl.nativeElement.value=t}eventOnFocus(){this.valueBeforeChange=this.inputEl.nativeElement.value,this.enter.emit()}eventOnBlur(){var e;null===(e=this.onTouched)||void 0===e||e.call(this),this.blur.emit(),this.controlChangeEmitter()}controlChangeEmitter(){const e=this.inputEl.nativeElement.value;e!==this.valueBeforeChange&&this.change.emit(e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=He({type:e,selectors:[["po-textarea"]],viewQuery:function(e,t){if(1&e&&pc(Wy,7,Ua),2&e){let e;dc(e=gc())&&(t.inputEl=e.first)}},features:[La([{provide:Pv,useExisting:se(()=>e),multi:!0},{provide:jv,useExisting:se(()=>e),multi:!0}]),ur],decls:6,vars:9,consts:[[3,"p-help","p-label","p-optional"],[1,"po-field-container-content"],[1,"po-textarea",3,"disabled","placeholder","readonly","required","rows","blur","focus","input"],["inp",""]],template:function(e,t){1&e&&(Fr(0,"po-field-container",0),Fr(1,"div",1),Fr(2,"textarea",2,3),Br("blur",function(){return t.eventOnBlur()})("focus",function(){return t.eventOnFocus()})("input",function(e){return t.eventOnInput(e)}),pa(4,"    "),Ir(),Ir(),Mr(5,"po-field-container-bottom"),Ir()),2&e&&(Or("p-help",t.help)("p-label",t.label)("p-optional",!t.required&&t.optional),Zs(2),Or("disabled",t.disabled)("placeholder",t.placeholder)("readonly",t.readonly)("required",t.required)("rows",t.rows),Dr("name",t.name))},directives:[wE,yE],encapsulation:2}),e})(),Fx=(()=>{class e extends class{constructor(){this.stackTop=[],this.stackBottom=[],this.defaultDuration=1e4}success(e){this.createToaster(this.buildToaster(e,rk.Success))}warning(e){this.createToaster(this.buildToaster(e,rk.Warning))}error(e){this.createToaster(this.buildToaster(e,rk.Error))}information(e){this.createToaster(this.buildToaster(e,rk.Information))}setDefaultDuration(e){this.defaultDuration=e}buildToaster(e,t){let n,i=0;void 0===e.orientation||e.orientation===ok.Bottom?(i=this.stackBottom.length,n=ok.Bottom):(i=this.stackTop.length,n=ok.Top);const s={componentRef:void 0,message:e.message||e,type:t,orientation:n,action:e.action,actionLabel:e.actionLabel,position:i,duration:e.duration||this.defaultDuration};return e.action&&(s.action=t=>{e.action(),this.destroyToaster(t.componentRef)}),s}}{constructor(e){super(),this.poComponentInjector=e}createToaster(e){const t=this.poComponentInjector.createComponentInApplication(ak);e.componentRef=t,t.changeDetectorRef.detectChanges(),t.instance.configToaster(e);const n=e.orientation===ok.Top?this.stackTop:this.stackBottom;n.push(t),this.verifyLimitToaster(n),this.observableOnClose(t),e.action&&e.actionLabel||function(e=0,t,n){let i=-1;return rp(t)?i=Number(t)<1?1:Number(t):E(t)&&(n=t),E(n)||(n=op),new b(t=>{const s=rp(e)?e:+e-n.now();return n.schedule(ap,s,{index:0,period:i,subscriber:t})})}(e.duration).pipe(function(e,t=!1){return n=>n.lift(new Ub(e,t))}(()=>t.instance.alive)).subscribe(()=>{this.destroyToaster(t)})}destroyToaster(e){let t;t=e.instance.orientation===ok.Top?this.stackTop:this.stackBottom,e.instance.setFadeOut();const n=t.indexOf(e);t.splice(n,1),setTimeout(()=>{this.poComponentInjector.destroyComponentInApplication(e);for(let e=0;e<t.length;e++)t[e].instance.changePosition(e)},200)}observableOnClose(e){e.instance.observableOnClose.subscribe(()=>{this.destroyToaster(e)})}verifyLimitToaster(e){e.length>5&&this.destroyToaster(e[0])}}return e.\u0275fac=function(t){return new(t||e)(ci(ZE))},e.\u0275prov=he({factory:function(){return new e(ci(ZE))},token:e,providedIn:"root"}),e})(),Ix=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[],imports:[[Gh,Vb,Av,NS,FS,ME,ZS,TE,tE,BE,uE,oE,_E,SS,zE,WE,ck,jk,jS,mS],TE,ME,BE,_E]}),e})(),Mx=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[],imports:[[Gh,Hm]]}),e})();var Px=function(e){return e.Horizontal="horizontal",e.Vertical="vertical",e}({}),Vx=function(e){return e.Danger="danger",e.Info="info",e.Success="success",e.Warning="warning",e}({});const Lx=Object.values(QS),Rx=Px.Vertical;let jx=(()=>{class e{constructor(){this.click=new ec,this.poTagOrientation=Px,this._orientation=Rx}set color(e){this._color=Lx.includes(e)?e:void 0}get color(){return this._color}set icon(e){this._icon=this.type?YD(e):e}get icon(){return this._icon}set inverse(e){this._inverse=YD(e)}get inverse(){return this._inverse}set orientation(e){this._orientation=Object.values(Px).includes(e)?e:Rx}get orientation(){return this._orientation}set type(e){this._type=Object.values(Vx).includes(e)?e:void 0}get type(){return this._type}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,inputs:{color:["p-color","color"],icon:["p-icon","icon"],inverse:["p-inverse","inverse"],orientation:["p-orientation","orientation"],type:["p-type","type"],label:["p-label","label"],value:["p-value","value"]},outputs:{click:"p-click"}}),e})();var Nx=function(e){return e.Danger="po-icon-close",e.Info="po-icon-info",e.Success="po-icon-ok",e.Warning="po-icon-warning",e}({});const Bx="po-tag-"+Vx.Info;let $x=(()=>{class e extends jx{ngOnInit(){this.isClickable=this.click.observers.length>0}get iconFromType(){switch(this.type){case Vx.Danger:return Nx.Danger;case Vx.Info:return Nx.Info;case Vx.Success:return Nx.Success;case Vx.Warning:return Nx.Warning}}get tagColor(){return this.type?this.inverse?`po-tag-${this.type}-inverse`:`po-tag-${this.type}`:this.color?this.inverse?`po-text-${this.color}`:`po-${this.color}`:this.inverse?`${Bx}-inverse`:Bx}get tagOrientation(){return this.orientation===this.poTagOrientation.Horizontal}onClick(){this.click.emit({value:this.value,type:this.type})}onKeyPressed(e){e.preventDefault(),e.stopPropagation(),this.onClick()}}return e.\u0275fac=function(){let t;return function(n){return(t||(t=$n(e)))(n||e)}}(),e.\u0275cmp=He({type:e,selectors:[["po-tag"]],features:[ur],decls:7,vars:10,consts:[[1,"po-tag-container"],["class","po-tag-title po-text-nowrap",4,"ngIf"],[1,"po-tag-sub-container"],["tabindex","0",1,"po-tag",3,"ngClass","click","keydown.enter","keydown.space","keyup.space"],["class","po-tag-icon",3,"p-icon",4,"ngIf"],[1,"po-tag-value"],[1,"po-tag-title","po-text-nowrap"],[1,"po-tag-label"],[1,"po-tag-icon",3,"p-icon"]],template:function(e,t){1&e&&(Fr(0,"div",0),kr(1,gD,3,1,"div",1),Fr(2,"div",2),Fr(3,"div",3),Br("click",function(){return t.onClick()})("keydown.enter",function(e){return t.onKeyPressed(e)})("keydown.space",function(e){return e.preventDefault()})("keyup.space",function(e){return t.onKeyPressed(e)}),kr(4,mD,1,1,"po-icon",4),Fr(5,"span",5),pa(6),Ir(),Ir(),Ir(),Ir()),2&e&&(ea("po-tag-container-horizontal",t.tagOrientation),Zs(1),Or("ngIf",t.label),Zs(2),ea("po-clickable",t.isClickable)("po-tag-inverse",t.inverse),Or("ngClass",t.tagColor),Zs(1),Or("ngIf",t.icon),Zs(2),fa(t.value))},directives:[Fh,xh,gS],encapsulation:2,changeDetection:0}),e})(),Hx=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[],imports:[[Gh,mS]]}),e})();var Ux=function(e){return e.Boolean="boolean",e.Currency="currency",e.Date="date",e.DateTime="datetime",e.Time="time",e.Number="number",e.String="string",e}({});let qx=(()=>{class e{constructor(e){this.titleCasePipe=e,this.formValidate=new ec,this.fieldsChange=new ec,this.objectValue=new ec,this.visibleFields=[],this._value={}}set fields(e){this._fields=Array.isArray(e)?[...e]:[]}get fields(){return this._fields}set value(e){this._value=e&&QD(e,"object")?e:{}}get value(){return this._value}set validateFields(e){this._validateFields=Array.isArray(e)?[...e]:[]}get validateFields(){return this._validateFields}compareTo(e,t){return e===t}getVisibleFields(){const e=[];return this.fields.forEach(t=>{this.existsProperty(e,t.property)?this.printError(`"po-dynamic-form" property "${t.property}" est\xe1 duplicado. Interface: PoDynamicFormField.`):t.property?function(e){return!("visible"in e)||e.visible}(t)&&e.push(this.createField(t)):this.printError('"po-dynamic-form" \xc9 obrigat\xf3rio ser especificado um property.')}),function(e=[],t=-1){const n=e=>(e=>QD(e,"number")&&e>0)(e)?e:t;return e.sort((e,i)=>{const s=n(e.order),o=n(i.order);return s===o?0:s===t?1:o===t?-1:s-o})}(e)}convertOptions(e){return e.every(e=>"string"==typeof e)?e.map(e=>({label:e,value:e})):e}createField(e){const t=this.getComponentControl(e),n=e.options?this.convertOptions(e.options):void 0,i=this.hasFocus(e),s=e&&e.type?e.type.toLocaleLowerCase():"string",o=(r=e.gridColumns,`po-sm-${e.gridSmColumns||r||12} po-pull-sm-${(null==(a={smPull:e.gridSmPull,mdPull:e.gridMdPull,lgPull:e.gridLgPull,xlPull:e.gridXlPull})?void 0:a.smPull)||0} po-md-${e.gridMdColumns||r||6} po-pull-md-${(null==a?void 0:a.mdPull)||0} po-lg-${e.gridLgColumns||r||4} po-pull-lg-${(null==a?void 0:a.lgPull)||0} po-xl-${e.gridXlColumns||r||3} po-pull-xl-${(null==a?void 0:a.xlPull)||0}`);var r,a;return Object.assign(Object.assign({label:this.titleCasePipe.transform(e.property),maskFormatModel:this.compareTo(s,Ux.Time)},e),{componentClass:o,control:t,focus:i,options:n})}existsProperty(e,t){return e.some(e=>e.property===t)}getComponentControl(e={}){const t=e&&e.type?e.type.toLocaleLowerCase():"string";return this.isNumberType(e,t)?"number":this.isCurrencyType(e,t)?"decimal":this.isSelect(e)?"select":this.isRadioGroup(e)?"radioGroup":this.isCheckboxGroup(e)?"checkboxGroup":this.isMultiselect(e)?"multiselect":this.compareTo(t,Ux.Boolean)?"switch":this.compareTo(t,Ux.Date)||this.compareTo(t,Ux.DateTime)?"datepicker":this.compareTo(t,Ux.Time)?(e.mask=e.mask||"99:99","input"):this.isCombo(e)?"combo":this.isLookup(e)?"lookup":this.isTextarea(e)?"textarea":this.isPassword(e)?"password":"input"}hasFocus(e){return!!this.autoFocus&&this.autoFocus===e.property}isCheckboxGroup(e){const{optionsService:t,optionsMulti:n,options:i}=e;return!t&&n&&!!i&&i.length<=3}isCombo(e){const{optionsService:t}=e;return!!t&&(QD(t,"string")||this.isComboFilter(t))}isCurrencyType(e,t){const{mask:n,pattern:i}=e;return this.compareTo(t,Ux.Currency)&&!n&&!i}isLookupFilter(e){return e&&void 0!==e.getObjectByValue}isComboFilter(e){return e&&void 0!==e.getFilteredData}isLookup(e){const{searchService:t}=e;return!!t&&(QD(t,"string")||this.isLookupFilter(t))}isMultiselect(e){const{optionsService:t,optionsMulti:n,options:i}=e;return!t&&n&&!!i&&i.length>3}isNumberType(e,t){const{mask:n,pattern:i}=e;return this.compareTo(t,Ux.Number)&&!n&&!i}isPassword(e){const{secret:t}=e;return t}isRadioGroup(e){const{optionsMulti:t,options:n}=e;return!t&&!!n&&n.length<=3}isSelect(e){const{optionsMulti:t,options:n}=e;return!t&&!!n&&n.length>3}isTextarea(e){const{rows:t}=e;return t&&t>=3}printError(e){console.error(e)}}return e.\u0275fac=function(t){return new(t||e)(Ar($h))},e.\u0275dir=Ke({type:e,inputs:{fields:["p-fields","fields"],value:["p-value","value"],validateFields:["p-validate-fields","validateFields"],autoFocus:["p-auto-focus","autoFocus"],disabledForm:["p-disabled-form","disabledForm"],validate:["p-validate","validate"]},outputs:{formValidate:"p-form-validate",fieldsChange:"p-fieldsChange",objectValue:"p-object-value"}}),e})(),zx=(()=>{class e extends qx{constructor(e,t,n,i){super(e),this.validationService=t,this.changes=n,this.form=i,this.previousValue={}}ngOnChanges(e){e.fields&&(this.visibleFields=this.getVisibleFields())}focus(e){const t=this.components.find(t=>t.name===e);t&&t.focus()}isDisabled(e){return e.disabled||this.disabledForm}onChangeField(e,t){return Tv(this,void 0,void 0,function*(){const{property:n}=e,i=this.previousValue[n]!==this.value[n];if(e.optionsService&&this.objectValue.emit(t),this.form.touched&&i){const{changedField:t,changedFieldIndex:i}=this.getField(n);t.validate&&(yield this.validateField(t,i,e)),this.triggerValidationOnForm(i)}this.updatePreviousValue()})}updatePreviousValue(){this.previousValue=JSON.parse(JSON.stringify(this.value))}trackBy(e){return e}applyFieldValidation(e,t){const n=this.fields[e];this.fields[e]=Object.assign(Object.assign({},n),t.field),this.updateFields(),t.hasOwnProperty("value")&&(this.value[n.property]=t.value),this.changes.detectChanges(),t.focus&&this.focus(n.property)}getField(e){const t=this.fields.findIndex(t=>t.property===e);return{changedField:this.fields[t],changedFieldIndex:t}}triggerValidationOnForm(e){var t;const n=!(null===(t=this.validateFields)||void 0===t?void 0:t.length)||this.validateFieldsChecker(this.validateFields,this.fields[e].property);this.validate&&n&&this.formValidate.observers.length&&this.formValidate.emit(this.fields[e])}updateFields(){this.fieldsChange.emit(this.fields),this.visibleFields=this.getVisibleFields()}validateFieldsChecker(e,t){return e.some(e=>e===t)}validateField(e,t,n){return Tv(this,void 0,void 0,function*(){const i=this.value[e.property],s=n.disabled;n.disabled=!0,this.changes.detectChanges();try{const n=yield this.validationService.sendFieldChange(e,i).toPromise();this.applyFieldValidation(t,n)}catch(o){n.disabled=s}})}}return e.\u0275fac=function(t){return new(t||e)(Ar($h),Ar(ex),Ar(gl),Ar(Cb))},e.\u0275cmp=He({type:e,selectors:[["po-dynamic-form-fields"]],viewQuery:function(e,t){if(1&e&&pc(vD,5),2&e){let e;dc(e=gc())&&(t.components=e)}},features:[La([ex],[{provide:Yv,useExisting:Cb}]),ur,lt],decls:1,vars:1,consts:[["class","po-row",4,"ngIf"],[1,"po-row"],[4,"ngFor","ngForOf","ngForTrackBy"],["class","po-sm-12",3,"p-label",4,"ngIf"],["p-clean","",3,"name","ngModel","ngClass","p-disabled","p-error-pattern","p-auto-focus","p-format","p-help","p-label","p-max-date","p-min-date","p-optional","p-required","p-placeholder","ngModelChange","p-change",4,"ngIf"],["p-clean","",3,"name","ngModel","ngClass","p-disabled","p-error-pattern","p-auto-focus","p-help","p-label","p-mask-format-model","p-mask","p-maxlength","p-minlength","p-optional","p-pattern","p-required","p-icon","p-placeholder","ngModelChange","p-change",4,"ngIf"],["p-clean","",3,"name","ngModel","ngClass","p-disabled","p-error-pattern","p-auto-focus","p-help","p-label","p-min","p-max","p-maxlength","p-minlength","p-optional","p-required","p-icon","p-placeholder","ngModelChange","p-change",4,"ngIf"],["p-clean","",3,"name","ngModel","ngClass","p-disabled","p-decimals-length","p-thousand-maxlength","p-icon","p-auto-focus","p-help","p-label","p-optional","p-required","p-placeholder","ngModelChange","p-change",4,"ngIf"],[3,"name","ngModel","ngClass","p-auto-focus","p-disabled","p-help","p-label","p-optional","p-options","p-required","p-placeholder","ngModelChange","p-change",4,"ngIf"],["p-columns","3",3,"name","ngModel","ngClass","p-auto-focus","p-disabled","p-help","p-label","p-optional","p-options","p-required","ngModelChange","p-change",4,"ngIf"],[3,"name","ngModel","ngClass","p-auto-focus","p-disabled","p-help","p-label","p-label-off","p-label-on","ngModelChange","p-change",4,"ngIf"],["p-emit-object-value","",3,"name","ngModel","ngClass","p-auto-focus","p-disabled","p-field-label","p-field-value","p-filter-params","p-filter-service","p-help","p-label","p-optional","p-required","p-icon","p-placeholder","ngModelChange","p-change",4,"ngIf"],["p-field-label","label","p-field-value","value",3,"name","ngModel","ngClass","p-columns","p-disabled","p-field-label","p-field-value","p-filter-params","p-filter-service","p-auto-focus","p-help","p-field-format","p-label","p-optional","p-required","p-placeholder","ngModelChange","p-change",4,"ngIf"],[3,"name","ngModel","ngClass","p-disabled","p-auto-focus","p-help","p-label","p-optional","p-options","p-required","p-placeholder","ngModelChange","p-change",4,"ngIf"],[3,"name","ngModel","ngClass","p-disabled","p-auto-focus","p-help","p-label","p-maxlength","p-minlength","p-optional","p-required","p-rows","p-placeholder","ngModelChange","p-change",4,"ngIf"],["p-clean","",3,"name","ngModel","ngClass","p-disabled","p-error-pattern","p-auto-focus","p-help","p-label","p-maxlength","p-minlength","p-optional","p-pattern","p-required","p-placeholder","ngModelChange","p-change",4,"ngIf"],[1,"po-sm-12",3,"p-label"],["p-clean","",3,"name","ngModel","ngClass","p-disabled","p-error-pattern","p-auto-focus","p-format","p-help","p-label","p-max-date","p-min-date","p-optional","p-required","p-placeholder","ngModelChange","p-change"],["component",""],["p-clean","",3,"name","ngModel","ngClass","p-disabled","p-error-pattern","p-auto-focus","p-help","p-label","p-mask-format-model","p-mask","p-maxlength","p-minlength","p-optional","p-pattern","p-required","p-icon","p-placeholder","ngModelChange","p-change"],["p-clean","",3,"name","ngModel","ngClass","p-disabled","p-error-pattern","p-auto-focus","p-help","p-label","p-min","p-max","p-maxlength","p-minlength","p-optional","p-required","p-icon","p-placeholder","ngModelChange","p-change"],["p-clean","",3,"name","ngModel","ngClass","p-disabled","p-decimals-length","p-thousand-maxlength","p-icon","p-auto-focus","p-help","p-label","p-optional","p-required","p-placeholder","ngModelChange","p-change"],[3,"name","ngModel","ngClass","p-auto-focus","p-disabled","p-help","p-label","p-optional","p-options","p-required","p-placeholder","ngModelChange","p-change"],["p-columns","3",3,"name","ngModel","ngClass","p-auto-focus","p-disabled","p-help","p-label","p-optional","p-options","p-required","ngModelChange","p-change"],[3,"name","ngModel","ngClass","p-auto-focus","p-disabled","p-help","p-label","p-label-off","p-label-on","ngModelChange","p-change"],["p-emit-object-value","",3,"name","ngModel","ngClass","p-auto-focus","p-disabled","p-field-label","p-field-value","p-filter-params","p-filter-service","p-help","p-label","p-optional","p-required","p-icon","p-placeholder","ngModelChange","p-change"],["p-field-label","label","p-field-value","value",3,"name","ngModel","ngClass","p-columns","p-disabled","p-field-label","p-field-value","p-filter-params","p-filter-service","p-auto-focus","p-help","p-field-format","p-label","p-optional","p-required","p-placeholder","ngModelChange","p-change"],[3,"name","ngModel","ngClass","p-disabled","p-auto-focus","p-help","p-label","p-optional","p-options","p-required","p-placeholder","ngModelChange","p-change"],[3,"name","ngModel","ngClass","p-disabled","p-auto-focus","p-help","p-label","p-maxlength","p-minlength","p-optional","p-required","p-rows","p-placeholder","ngModelChange","p-change"],["p-clean","",3,"name","ngModel","ngClass","p-disabled","p-error-pattern","p-auto-focus","p-help","p-label","p-maxlength","p-minlength","p-optional","p-pattern","p-required","p-placeholder","ngModelChange","p-change"]],template:function(e,t){1&e&&kr(0,MD,2,2,"div",0),2&e&&Or("ngIf",t.visibleFields&&t.visibleFields.length>0)},directives:[Fh,Oh,dE,NE,Jv,Db,xh,mx,bx,Gk,Ex,wx,Ax,zk,ax,OE,px,Tx,yx],encapsulation:2}),e})(),Wx=(()=>{class e{constructor(e){this.http=e}onLoad(e,t){return this.http.post(e,t).toPromise()}}return e.\u0275fac=function(t){return new(t||e)(ci(gv))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),Gx=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[qh,Hh,Uh,mk,$h,Xk,ex,Wx],imports:[[Gh,Vb,pE,Mx,Ix,Hx,vk]]}),e})();Math;let Kx=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh,jS]]}),e})(),Yx=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh,Vb,Ix]]}),e})(),Zx=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[],imports:[[Gh,Hm,FS,vE]]}),e})(),Qx=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh]]}),e})(),Jx=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh,Hm,Qx,Ix,SS,mS]]}),e})(),Xx=(()=>{class e{constructor(){this.subjectChild=new D,this.subjectParent=new D}receiveFromChildMenuClicked(){return this.subjectChild.asObservable()}receiveFromParentMenuClicked(){return this.subjectParent.asObservable()}sendToParentMenuClicked(e){this.subjectChild.next(e)}sendToChildMenuClicked(e){this.subjectParent.next(e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),eA=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[Xx],imports:[[Gh,Hm,Ix,jS]]}),e})(),tA=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh,vE,jS,mS]]}),e})(),nA=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh,Hm]]}),e})(),iA=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh,Hm]]}),e})(),sA=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh,tA,nA,iA,Jx,mS]]}),e})(),oA=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh,Vb,Hm,fS,FS,uE,bE,Ix,DS,zE]]}),e})(),rA=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[],imports:[[Gh,Hm,tE]]}),e})(),aA=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh]]}),e})(),lA=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh,gk]]}),e})(),cA=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[],imports:[[Gh,HD,vE,mS]]}),e})(),uA=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh,Vb,tE,Ix]]}),e})(),hA=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({imports:[[Gh,tE]]}),e})(),dA=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[],imports:[[$D,HD,fS,FS,NS,ZS,JS,tE,uE,oE,pE,bE,Gx,Ix,Kx,Yx,mS,Mx,Zx,SS,Jx,eA,zE,sA,oA,gk,vE,WE,rA,aA,jk,lA,Hx,cA,uA,hA],$D,HD,fS,FS,NS,ZS,JS,tE,uE,oE,pE,bE,Gx,Ix,Kx,Yx,mS,Mx,Zx,SS,Jx,eA,zE,sA,oA,gk,vE,WE,rA,aA,jk,lA,Hx,cA,uA,hA]}),e})(),pA=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[],imports:[[jS],jS]}),e})(),fA=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[],imports:[[]]}),e})();const gA={en:{closeButton:"Close",details:"Details",detail:"Detail",error:"Error",warning:"Warning",information:"Information",success:"Success"},es:{closeButton:"Cerrar",details:"Detalles",detail:"Detalle",error:"Error",warning:"Advertencia",information:"Informacion",success:"\xc9xito"},pt:{closeButton:"Fechar",details:"Detalhes",detail:"Detalhe",error:"Erro",warning:"Aviso",information:"Informa\xe7\xe3o",success:"Sucesso"},ru:{closeButton:"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0442\u044c",details:"\u0414\u0435\u0442\u0430\u043b\u0438",detail:"\u0414\u0435\u0442\u0430\u043b\u044c",error:"\u041e\u0448\u0438\u0431\u043a\u0430",warning:"\u041f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435",information:"\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f",success:"Y\u0441\u043f\u0435\u0445"}},mA={success:"color-11",error:"color-07",warning:"color-08",info:""};let vA=(()=>{class e{constructor(e){this.languageService=e,this.closed=new ec,this.details=[],this.language=this.languageService.getShortLanguage(),this.literals=gA[this.language],this.primaryAction={action:()=>this.close(),label:this.literals.closeButton}}set detail(e){e&&e.length&&(this.details=this.filterByValidDetails(e)),this.title=this.formatTitle(this.details)}close(){this.modal.close(),this.closed.emit()}formatDetailItemTitle(e){return e.code?`${e.code} - ${e.message}`:e.message}open(){this.modal.open()}typeColor(e){return mA[e]}typeValue(e){return gA[this.language][e]||e}addValidDetail(e,t){return t.message?e.concat(this.getValidDetailProperties(t)):e}getValidDetailProperties({code:e,message:t,detailedMessage:n,type:i}){return{code:e,message:t,detailedMessage:n,type:i}}filterByValidDetails(e){return e.reduce((e,t)=>this.addValidDetail(e,t),[])}formatTitle(e){return e.length>1?`${this.literals.details} (${e.length})`:this.literals.detail}}return e.\u0275fac=function(t){return new(t||e)(Ar(pS))},e.\u0275cmp=He({type:e,selectors:[["po-http-interceptor-detail"]],viewQuery:function(e,t){if(1&e&&pc(qE,7),2&e){let e;dc(e=gc())&&(t.modal=e.first)}},decls:4,vars:3,consts:[["p-hide-close","","p-size","lg",3,"p-primary-action","p-title"],[1,"po-row"],[1,"po-md-12","po-mt-1","po-mb-1"],[3,"p-label",4,"ngFor","ngForOf"],[3,"p-label"],["class","po-row po-mb-1",4,"ngIf"],[1,"po-row","po-mb-1"],[3,"p-color","p-value"]],template:function(e,t){1&e&&(Fr(0,"po-modal",0),Fr(1,"div",1),Fr(2,"po-accordion",2),kr(3,VD,5,3,"po-accordion-item",3),Ir(),Ir(),Ir()),2&e&&(Or("p-primary-action",t.primaryAction)("p-title",t.title),Zs(3),Or("ngForOf",t.details))},directives:[qE,jD,Oh,RD,Fh,$x],encapsulation:2}),e})();const bA={pt:{help:"Ajuda",details:"Detalhes",serverNotResponse:"Servidor n\xe3o est\xe1 respondendo"},en:{help:"Help",details:"Details",serverNotResponse:"Server is not responding"},es:{help:"Ayuda",details:"Detalles",serverNotResponse:"El servidor no est\xe1 respondiendo"},ru:{help:"\u041f\u043e\u043c\u043e\u0433\u0438\u0442\u0435",details:"\u0414\u0435\u0442\u0430\u043b\u0438",serverNotResponse:"\u0421\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442"}},yA="X-PO-No-Error",CA="X-PO-No-Message";let wA=(()=>{class e extends class{constructor(e,t,n){this.componentInjector=e,this.notification=t,this.languageService=n,this.notificationTypes=["success","warning","error","information"],this.literals=bA[this.languageService.getShortLanguage()],this.httpInterceptorDetailComponent=void 0}intercept(e,t){const n=e.clone();return e=e&&this.hasParameters(e)?this.cloneRequestWithoutParameters(e):e,t.handle(e).pipe(Gp(e=>{e instanceof dv&&this.processResponse(e,n)},e=>{this.processErrorResponse(e,n)}))}processResponse(e,t){if(!this.hasNoMessageParam(t)&&e.body&&e.body._messages){const t=e.body._messages;t instanceof Array?t.forEach(e=>{this.showNotification(e)}):this.showNotification(t)}}processErrorResponse(e,t){const n=0!==e.status?e.error:{code:0,message:this.literals.serverNotResponse,detailedMessage:e.message},i=this.hasNoErrorParam(t),s=this.hasNoMessageParam(t),o=this.notificationTypes.slice(1);n&&n.message&&!i&&!s&&this.showNotification(Object.assign(Object.assign({},n),{type:o.includes(n.type)?n.type:"error"}))}cloneRequestWithoutParameters(e){const t=e.headers.delete(yA).delete(CA);return e.clone({headers:t})}createModal(e){const t=e.details?[e,...e.details]:[e];this.httpInterceptorDetailComponent=this.componentInjector.createComponentInApplication(vA),this.httpInterceptorDetailComponent.instance.detail=t,this.httpInterceptorDetailComponent.instance.closed.subscribe(()=>this.destroyModal()),this.httpInterceptorDetailComponent.instance.open()}destroyModal(){this.httpInterceptorDetailComponent&&(this.componentInjector.destroyComponentInApplication(this.httpInterceptorDetailComponent),this.httpInterceptorDetailComponent=void 0)}hasMessage(e){return e&&e.message}hasNoErrorParam(e){const t=e&&e.headers.get(yA);return t&&"true"===t.toString().toLocaleLowerCase()}hasNoMessageParam(e){const t=e&&e.headers.get(CA);return t&&"true"===t.toString().toLocaleLowerCase()}hasParameters(e){return e.headers.has(yA)||e.headers.has(CA)}showNotification(e){if(!this.hasMessage(e))return;const t=this.notificationTypes.includes(e.type)?e.type:"information",n=this.generateNotificationAction(e);this.notification[t]({message:e.message,actionLabel:n.label,action:n.action})}generateDetailModal(e){return()=>{this.httpInterceptorDetailComponent||this.createModal(e)}}generateNotificationAction(e){let t,n;return!e.helpUrl||e.detailedMessage||e.details?(e.detailedMessage||e.details)&&(n=this.literals.details,t=this.generateDetailModal(e)):(n=this.literals.help,t=this.generateUrlHelpFunction(e.helpUrl)),{label:n,action:t}}generateUrlHelpFunction(e){return()=>{window.open(e,"_blank")}}}{constructor(e,t,n){super(t,e,n)}}return e.\u0275fac=function(t){return new(t||e)(ci(Fx),ci(ZE),ci(pS))},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})(),_A=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[wA,Fx,{provide:vv,useClass:wA,multi:!0}],imports:[[Gh,$D,zE,lk,Hx]]}),e})(),DA=(()=>{class e{constructor(){this.controlHttpRequest=new D}getControlHttpRequest(){return this.controlHttpRequest.asObservable()}send(e=0){this.controlHttpRequest.next(e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=he({token:e,factory:e.\u0275fac}),e})();const SA="X-PO-No-Count-Pending-Requests",EA="X-PO-Screen-Lock";let kA=(()=>{class e{constructor(e,t){this.controlHttpRequest=e,this.poComponentInjector=t,this.loadingOverlayComponent=void 0,this.pendingRequests=0,this.overlayRequests=0}intercept(e,t){const n=e.clone();return e=this.requestCloneWithoutHeaderParam([SA,EA],e),this.setCountPendingRequests(!0,n),this.setCountOverlayRequests(!0,n),t.handle(e).pipe(Gp(e=>{e instanceof dv&&(this.setCountPendingRequests(!1,n),this.setCountOverlayRequests(!1,n))}),Fp(e=>(this.setCountPendingRequests(!1,n),this.setCountOverlayRequests(!1,n),$d(e))))}getCountPendingRequests(){return this.controlHttpRequest.getControlHttpRequest()}buildLoading(){this.loadingOverlayComponent||(this.loadingOverlayComponent=this.poComponentInjector.createComponentInApplication(yS),this.loadingOverlayComponent.instance.screenLock=!0,this.loadingOverlayComponent.instance.changeDetector.detectChanges())}destroyLoading(){this.loadingOverlayComponent&&(this.poComponentInjector.destroyComponentInApplication(this.loadingOverlayComponent),this.loadingOverlayComponent=void 0)}requestCloneWithoutHeaderParam(e,t){let n=!1;return e.forEach(e=>{t.headers.has(e)&&(t.headers.delete(e),n=!0)}),n?t.clone({headers:t.headers}):t}setCountPendingRequests(e,t){const n=t.headers.has(SA),i=t.headers.get(SA);n&&"true"===i.toString().toLowerCase()||(this.pendingRequests+=e?1:-1,this.controlHttpRequest.send(this.pendingRequests))}setCountOverlayRequests(e,t){if(t.headers.has(EA)){if("false"===t.headers.get(EA).toString().toLowerCase())return;this.overlayRequests+=e?1:-1,this.overlayRequests>0?this.buildLoading():this.destroyLoading()}}}return e.\u0275fac=function(t){return new(t||e)(ci(DA),ci(ZE))},e.\u0275prov=he({factory:function(){return new e(ci(DA),ci(ZE))},token:e,providedIn:"root"}),e})(),xA=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[DA,kA,ZE,{provide:vv,useClass:kA,multi:!0}],imports:[[SS]]}),e})(),AA=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[],imports:[[_A,xA],_A,xA]}),e})(),OA=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[],imports:[[vk],vk]}),e})(),TA=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[Fx],imports:[[dA,pA,fA,AA,OA,ck],dA,pA,AA,fA,OA,ck]}),e})();new zn("I18N_CONFIG");let FA=(()=>{class e{constructor(){this.title="poc-cpf",this.fields=[{property:"cpf",label:"CPF",mask:"999.999.999-99",divider:"DADOS PESSOAIS",order:1,placeholder:"Ex: 123.459.789-10"},{property:"name",label:"Nome Completo",order:2,placeholder:"Ex: Jo\xe3o Gomes"},{property:"civilStatus",options:[{label:"Solteiro",value:"solteiro"},{label:"Casado",value:"casado"},{label:"Separado",value:"separado"},{label:"Divorciado",value:"divorciado"},{label:"Vi\xfavo",value:"viuvo"}],order:3,label:"Estado Civil",placeholder:"Escolha um estado civil"},{property:"burnDate",type:"date",format:"dd/mm/yyyy",label:"Data de Nascimento",order:3,placeholder:"Ex: 02/09/1983"},{property:"email",type:"email",label:"E-mail",icon:"po-icon-mail",divider:"DADOS DE CONTATO",placeholder:"Ex: poui@totvs.com.br"},{property:"phone",label:"Telefone Fixo",icon:"po-icon-telephone",placeholder:"Ex: (99) 9999-9999",mask:"(99) 9 9999-9999"},{property:"whatsapp",label:"Telefone Celular / Whatsapp",icon:"po-icon-social-whatsapp",placeholder:"Ex: (99) 9 9999-9999",mask:"(99) 9 9999-9999"},{property:"github",label:"Github",icon:"po-icon-social-github",placeholder:"Ex: @po-ui",divider:"REDES SOCIAIS"},{property:"instagram",label:"Instagram",icon:"po-icon-social-instagram",placeholder:"Ex: @pouidev"},{property:"twitter",label:"Twitter",icon:"po-icon-social-twitter",placeholder:"Ex: @pouidev"}]}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=He({type:e,selectors:[["poc-cpf"]],decls:1,vars:1,consts:[[3,"p-fields"]],template:function(e,t){1&e&&Mr(0,"po-dynamic-form",0),2&e&&Or("p-fields",t.fields)},directives:[tx],encapsulation:2}),e})(),IA=(()=>{class e{constructor(e){const t=function(e,t){const n=function(e,t){return t.get(Na).resolveComponentFactory(e).inputs}(e,t.injector),i=t.strategyFactory||new ep(e,t.injector),s=function(e){const t={};return e.forEach(({propName:e,templateName:n})=>{var i;t[(i=n,i.replace(/[A-Z]/g,e=>`-${e.toLowerCase()}`))]=e}),t}(n);class o extends np{constructor(e){super(),this.injector=e}get ngElementStrategy(){if(!this._ngElementStrategy){const e=this._ngElementStrategy=i.create(this.injector||t.injector);n.forEach(({propName:t})=>{if(!this.hasOwnProperty(t))return;const n=this[t];delete this[t],e.setInputValue(t,n)})}return this._ngElementStrategy}attributeChangedCallback(e,t,n,i){this.ngElementStrategy.setInputValue(s[e],n)}connectedCallback(){let e=!1;this.ngElementStrategy.events&&(this.subscribeToEvents(),e=!0),this.ngElementStrategy.connect(this),e||this.subscribeToEvents()}disconnectedCallback(){this._ngElementStrategy&&this._ngElementStrategy.disconnect(),this.ngElementEventsSubscription&&(this.ngElementEventsSubscription.unsubscribe(),this.ngElementEventsSubscription=null)}subscribeToEvents(){this.ngElementEventsSubscription=this.ngElementStrategy.events.subscribe(e=>{const t=function(e,t,n){if("function"!=typeof CustomEvent){const i=e.createEvent("CustomEvent");return i.initCustomEvent(t,!1,!1,n),i}return new CustomEvent(t,{bubbles:!1,cancelable:!1,detail:n})}(this.ownerDocument,e.name,e.value);this.dispatchEvent(t)})}}return o.observedAttributes=Object.keys(s),n.forEach(({propName:e})=>{Object.defineProperty(o.prototype,e,{get(){return this.ngElementStrategy.getInputValue(e)},set(t){this.ngElementStrategy.setInputValue(e,t)},configurable:!0,enumerable:!0})}),o}(FA,{injector:e});customElements.define("poc-cpf",t)}ngDoBootstrap(){}}return e.\u0275fac=function(t){return new(t||e)(ci(lr))},e.\u0275mod=We({type:e}),e.\u0275inj=de({providers:[],imports:[[Td,TA]]}),e})();(function(){if(eu)throw new Error("Cannot enable prod mode after platform setup.");Xc=!1})(),Ad().bootstrapModule(IA).catch(e=>console.error(e))},358:e=>{function t(e){return Promise.resolve().then(()=>{var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t})}t.keys=()=>[],t.resolve=t,t.id=358,e.exports=t}},e=>{"use strict";e(e.s=516)}]);';