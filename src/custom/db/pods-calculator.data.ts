export const podsCalculator = 'IWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHIocil7Zm9yKHZhciBuLGwsZj1yWzBdLGk9clsxXSxwPXJbMl0sYz0wLHM9W107YzxmLmxlbmd0aDtjKyspbD1mW2NdLE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvLGwpJiZvW2xdJiZzLnB1c2gob1tsXVswXSksb1tsXT0wO2ZvcihuIGluIGkpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGksbikmJihlW25dPWlbbl0pO2ZvcihhJiZhKHIpO3MubGVuZ3RoOylzLnNoaWZ0KCkoKTtyZXR1cm4gdS5wdXNoLmFwcGx5KHUscHx8W10pLHQoKX1mdW5jdGlvbiB0KCl7Zm9yKHZhciBlLHI9MDtyPHUubGVuZ3RoO3IrKyl7Zm9yKHZhciB0PXVbcl0sbj0hMCxmPTE7Zjx0Lmxlbmd0aDtmKyspMCE9PW9bdFtmXV0mJihuPSExKTtuJiYodS5zcGxpY2Uoci0tLDEpLGU9bChsLnM9dFswXSkpfXJldHVybiBlfXZhciBuPXt9LG89ezA6MH0sdT1bXTtmdW5jdGlvbiBsKHIpe2lmKG5bcl0pcmV0dXJuIG5bcl0uZXhwb3J0czt2YXIgdD1uW3JdPXtpOnIsbDohMSxleHBvcnRzOnt9fTtyZXR1cm4gZVtyXS5jYWxsKHQuZXhwb3J0cyx0LHQuZXhwb3J0cyxsKSx0Lmw9ITAsdC5leHBvcnRzfWwubT1lLGwuYz1uLGwuZD1mdW5jdGlvbihlLHIsdCl7bC5vKGUscil8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIse2VudW1lcmFibGU6ITAsZ2V0OnR9KX0sbC5yPWZ1bmN0aW9uKGUpeyJ1bmRlZmluZWQiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6Ik1vZHVsZSJ9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSl9LGwudD1mdW5jdGlvbihlLHIpe2lmKDEmciYmKGU9bChlKSksOCZyKXJldHVybiBlO2lmKDQmciYmIm9iamVjdCI9PXR5cGVvZiBlJiZlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIHQ9T2JqZWN0LmNyZWF0ZShudWxsKTtpZihsLnIodCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsImRlZmF1bHQiLHtlbnVtZXJhYmxlOiEwLHZhbHVlOmV9KSwyJnImJiJzdHJpbmciIT10eXBlb2YgZSlmb3IodmFyIG4gaW4gZSlsLmQodCxuLChmdW5jdGlvbihyKXtyZXR1cm4gZVtyXX0pLmJpbmQobnVsbCxuKSk7cmV0dXJuIHR9LGwubj1mdW5jdGlvbihlKXt2YXIgcj1lJiZlLl9fZXNNb2R1bGU/ZnVuY3Rpb24oKXtyZXR1cm4gZS5kZWZhdWx0fTpmdW5jdGlvbigpe3JldHVybiBlfTtyZXR1cm4gbC5kKHIsImEiLHIpLHJ9LGwubz1mdW5jdGlvbihlLHIpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKX0sbC5wPSIiO3ZhciBmPXdpbmRvdy53ZWJwYWNrSnNvbnA9d2luZG93LndlYnBhY2tKc29ucHx8W10saT1mLnB1c2guYmluZChmKTtmLnB1c2g9cixmPWYuc2xpY2UoKTtmb3IodmFyIHA9MDtwPGYubGVuZ3RoO3ArKylyKGZbcF0pO3ZhciBhPWk7dCgpfShbXSk7KHdpbmRvdy53ZWJwYWNrSnNvbnA9d2luZG93LndlYnBhY2tKc29ucHx8W10pLnB1c2goW1syXSx7MTpmdW5jdGlvbihlLHQsbil7ZS5leHBvcnRzPW4oImhOL2ciKX0sS0o0VDpmdW5jdGlvbihlLHQpeyFmdW5jdGlvbihlLHQpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKCl7dmFyIGU9TC5zcGxpY2UoMCxMLmxlbmd0aCk7Zm9yKEtlPTA7ZS5sZW5ndGg7KWUuc2hpZnQoKS5jYWxsKG51bGwsZS5zaGlmdCgpKX1mdW5jdGlvbiBvKGUsdCl7Zm9yKHZhciBuPTAsbz1lLmxlbmd0aDtuPG87bisrKWQoZVtuXSx0KX1mdW5jdGlvbiByKGUpe3JldHVybiBmdW5jdGlvbih0KXtBZSh0KSYmKGQodCxlKSxhZS5sZW5ndGgmJm8odC5xdWVyeVNlbGVjdG9yQWxsKGFlKSxlKSl9fWZ1bmN0aW9uIGEoZSl7dmFyIHQ9VmUuY2FsbChlLCJpcyIpLG49ZS5ub2RlTmFtZS50b1VwcGVyQ2FzZSgpLG89c2UuY2FsbChvZSx0P2VlK3QudG9VcHBlckNhc2UoKTpRK24pO3JldHVybiB0JiYtMTxvJiYhaShuLHQpPy0xOm99ZnVuY3Rpb24gaShlLHQpe3JldHVybi0xPGFlLmluZGV4T2YoZSsnW2lzPSInK3QrJyJdJyl9ZnVuY3Rpb24gcyhlKXt2YXIgdD1lLmN1cnJlbnRUYXJnZXQsbj1lLmF0dHJDaGFuZ2Usbz1lLmF0dHJOYW1lLHI9ZS50YXJnZXQsYT1lWyRdfHwyLGk9ZVtYXXx8Mzshb3R8fHImJnIhPT10fHwhdFtWXXx8InN0eWxlIj09PW98fGUucHJldlZhbHVlPT09ZS5uZXdWYWx1ZSYmKCIiIT09ZS5uZXdWYWx1ZXx8biE9PWEmJm4hPT1pKXx8dFtWXShvLG49PT1hP251bGw6ZS5wcmV2VmFsdWUsbj09PWk/bnVsbDplLm5ld1ZhbHVlKX1mdW5jdGlvbiBjKGUpe3ZhciB0PXIoZSk7cmV0dXJuIGZ1bmN0aW9uKGUpe0wucHVzaCh0LGUudGFyZ2V0KSxLZSYmY2xlYXJUaW1lb3V0KEtlKSxLZT1zZXRUaW1lb3V0KG4sMSl9fWZ1bmN0aW9uIGwoZSl7bnQmJihudD0hMSxlLmN1cnJlbnRUYXJnZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcihLLGwpKSxhZS5sZW5ndGgmJm8oKGUudGFyZ2V0fHxiKS5xdWVyeVNlbGVjdG9yQWxsKGFlKSxlLmRldGFpbD09PXg/eDpqKSxOZSYmZnVuY3Rpb24oKXtmb3IodmFyIGUsdD0wLG49SWUubGVuZ3RoO3Q8bjt0KyspaWUuY29udGFpbnMoZT1JZVt0XSl8fChuLS0sSWUuc3BsaWNlKHQtLSwxKSxkKGUseCkpfSgpfWZ1bmN0aW9uIHUoZSx0KXt2YXIgbj10aGlzO0JlLmNhbGwobixlLHQpLE0uY2FsbChuLHt0YXJnZXQ6bn0pfWZ1bmN0aW9uIGgoZSx0LG4pe3ZhciBvPXQuYXBwbHkoZSxuKSxyPWEobyk7cmV0dXJuLTE8ciYmWihvLHJlW3JdKSxuLnBvcCgpJiZhZS5sZW5ndGgmJmZ1bmN0aW9uKGUpe2Zvcih2YXIgdCxuPTAsbz1lLmxlbmd0aDtuPG87bisrKVoodD1lW25dLHJlW2EodCldKX0oby5xdWVyeVNlbGVjdG9yQWxsKGFlKSksb31mdW5jdGlvbiBwKGUsdCl7SGUoZSx0KSxEP0Qub2JzZXJ2ZShlLFhlKToodHQmJihlLnNldEF0dHJpYnV0ZT11LGVbQV09UyhlKSxlW0ldKFksTSkpLGVbSV0oSixzKSksZVtHXSYmb3QmJihlLmNyZWF0ZWQ9ITAsZVtHXSgpLGUuY3JlYXRlZD0hMSl9ZnVuY3Rpb24gZihlKXt0aHJvdyBuZXcgRXJyb3IoIkEgIitlKyIgdHlwZSBpcyBhbHJlYWR5IHJlZ2lzdGVyZWQiKX1mdW5jdGlvbiBkKGUsdCl7dmFyIG4sbyxyPWEoZSk7LTE8ciYmIXhlLmNhbGwoZSwiVEVNUExBVEUiKSYmKE8oZSxyZVtyXSkscj0wLHQhPT1qfHxlW2pdP3QhPT14fHxlW3hdfHwoZVtqXT0hMSxlW3hdPSEwLG89ImRpc2Nvbm5lY3RlZCIscj0xKTooZVt4XT0hMSxlW2pdPSEwLG89ImNvbm5lY3RlZCIscj0xLE5lJiZzZS5jYWxsKEllLGUpPDAmJkllLnB1c2goZSkpLHImJihuPWVbdCtSXXx8ZVtvK1JdKSYmbi5jYWxsKGUpKX1mdW5jdGlvbiBtKCl7fWZ1bmN0aW9uIGcoZSx0LG4pe3ZhciBvPW4mJm5bRl18fCIiLHI9dC5wcm90b3R5cGUsYT1EZShyKSxpPXQub2JzZXJ2ZWRBdHRyaWJ1dGVzfHxwZSxzPXtwcm90b3R5cGU6YX07emUoYSxHLHt2YWx1ZTpmdW5jdGlvbigpe2lmKHdlKXdlPSExO2Vsc2UgaWYoIXRoaXNbeWVdKXt0aGlzW3llXT0hMCxuZXcgdCh0aGlzKSxyW0ddJiZyW0ddLmNhbGwodGhpcyk7dmFyIGU9TGVbQ2UuZ2V0KHQpXTsoIV9lfHxlLmNyZWF0ZS5sZW5ndGg+MSkmJnYodGhpcyl9fX0pLHplKGEsVix7dmFsdWU6ZnVuY3Rpb24oZSl7LTE8c2UuY2FsbChpLGUpJiZyW1ZdJiZyW1ZdLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19KSxyW3FdJiZ6ZShhLFUse3ZhbHVlOnJbcV19KSxyW0JdJiZ6ZShhLFcse3ZhbHVlOnJbQl19KSxvJiYoc1tGXT1vKSxlPWUudG9VcHBlckNhc2UoKSxMZVtlXT17Y29uc3RydWN0b3I6dCxjcmVhdGU6bz9bbyxTZShlKV06W2VdfSxDZS5zZXQodCxlKSxiW05dKGUudG9Mb3dlckNhc2UoKSxzKSxfKGUpLE1lW2VdLnIoKX1mdW5jdGlvbiBUKGUpe3ZhciB0PUxlW2UudG9VcHBlckNhc2UoKV07cmV0dXJuIHQmJnQuY29uc3RydWN0b3J9ZnVuY3Rpb24geShlKXtyZXR1cm4ic3RyaW5nIj09dHlwZW9mIGU/ZTplJiZlLmlzfHwiIn1mdW5jdGlvbiB2KGUpe2Zvcih2YXIgdCxuPWVbVl0sbz1uP2UuYXR0cmlidXRlczpwZSxyPW8ubGVuZ3RoO3ItLTspbi5jYWxsKGUsKHQ9b1tyXSkubmFtZXx8dC5ub2RlTmFtZSxudWxsLHQudmFsdWV8fHQubm9kZVZhbHVlKX1mdW5jdGlvbiBfKGUpe3JldHVybihlPWUudG9VcHBlckNhc2UoKSlpbiBNZXx8KE1lW2VdPXt9LE1lW2VdLnA9bmV3IEVlKChmdW5jdGlvbih0KXtNZVtlXS5yPXR9KSkpLE1lW2VdLnB9ZnVuY3Rpb24gaygpe3ZlJiZkZWxldGUgZS5jdXN0b21FbGVtZW50cyxoZShlLCJjdXN0b21FbGVtZW50cyIse2NvbmZpZ3VyYWJsZTohMCx2YWx1ZTpuZXcgbX0pLGhlKGUsIkN1c3RvbUVsZW1lbnRSZWdpc3RyeSIse2NvbmZpZ3VyYWJsZTohMCx2YWx1ZTptfSk7Zm9yKHZhciB0PXcuZ2V0KC9eSFRNTFtBLVpdKlthLXpdLyksbj10Lmxlbmd0aDtuLS07ZnVuY3Rpb24odCl7dmFyIG49ZVt0XTtpZihuKXtlW3RdPWZ1bmN0aW9uKGUpe3ZhciB0LG87cmV0dXJuIGV8fChlPXRoaXMpLGVbeWVdfHwod2U9ITAsdD1MZVtDZS5nZXQoZS5jb25zdHJ1Y3RvcildLChlPShvPV9lJiYxPT09dC5jcmVhdGUubGVuZ3RoKT9SZWZsZWN0LmNvbnN0cnVjdChuLHBlLHQuY29uc3RydWN0b3IpOmIuY3JlYXRlRWxlbWVudC5hcHBseShiLHQuY3JlYXRlKSlbeWVdPSEwLHdlPSExLG98fHYoZSkpLGV9LGVbdF0ucHJvdG90eXBlPW4ucHJvdG90eXBlO3RyeXtuLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lW3RdfWNhdGNoKG8pe2hlKG4seWUse3ZhbHVlOmVbdF19KX19fSh0W25dKSk7Yi5jcmVhdGVFbGVtZW50PWZ1bmN0aW9uKGUsdCl7dmFyIG49eSh0KTtyZXR1cm4gbj8kZS5jYWxsKHRoaXMsZSxTZShuKSk6JGUuY2FsbCh0aGlzLGUpfSxZZXx8KGV0PSEwLGJbTl0oIiIpKX12YXIgYj1lLmRvY3VtZW50LEU9ZS5PYmplY3Qsdz1mdW5jdGlvbihlKXt2YXIgdCxuLG8scixhPS9eW0EtWl0rW2Etel0vLGk9ZnVuY3Rpb24oZSx0KXsodD10LnRvTG93ZXJDYXNlKCkpaW4gc3x8KHNbZV09KHNbZV18fFtdKS5jb25jYXQodCksc1t0XT1zW3QudG9VcHBlckNhc2UoKV09ZSl9LHM9KEUuY3JlYXRlfHxFKShudWxsKSxjPXt9O2ZvcihuIGluIGUpZm9yKHIgaW4gZVtuXSlmb3Ioc1tyXT1vPWVbbl1bcl0sdD0wO3Q8by5sZW5ndGg7dCsrKXNbb1t0XS50b0xvd2VyQ2FzZSgpXT1zW29bdF0udG9VcHBlckNhc2UoKV09cjtyZXR1cm4gYy5nZXQ9ZnVuY3Rpb24oZSl7cmV0dXJuInN0cmluZyI9PXR5cGVvZiBlP3NbZV18fChhLnRlc3QoZSk/W106IiIpOmZ1bmN0aW9uKGUpe3ZhciB0LG49W107Zm9yKHQgaW4gcyllLnRlc3QodCkmJm4ucHVzaCh0KTtyZXR1cm4gbn0oZSl9LGMuc2V0PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGEudGVzdChlKT9pKGUsdCk6aSh0LGUpLGN9LGN9KHtjb2xsZWN0aW9uczp7SFRNTEFsbENvbGxlY3Rpb246WyJhbGwiXSxIVE1MQ29sbGVjdGlvbjpbImZvcm1zIl0sSFRNTEZvcm1Db250cm9sc0NvbGxlY3Rpb246WyJlbGVtZW50cyJdLEhUTUxPcHRpb25zQ29sbGVjdGlvbjpbIm9wdGlvbnMiXX0sZWxlbWVudHM6e0VsZW1lbnQ6WyJlbGVtZW50Il0sSFRNTEFuY2hvckVsZW1lbnQ6WyJhIl0sSFRNTEFwcGxldEVsZW1lbnQ6WyJhcHBsZXQiXSxIVE1MQXJlYUVsZW1lbnQ6WyJhcmVhIl0sSFRNTEF0dGFjaG1lbnRFbGVtZW50OlsiYXR0YWNobWVudCJdLEhUTUxBdWRpb0VsZW1lbnQ6WyJhdWRpbyJdLEhUTUxCUkVsZW1lbnQ6WyJiciJdLEhUTUxCYXNlRWxlbWVudDpbImJhc2UiXSxIVE1MQm9keUVsZW1lbnQ6WyJib2R5Il0sSFRNTEJ1dHRvbkVsZW1lbnQ6WyJidXR0b24iXSxIVE1MQ2FudmFzRWxlbWVudDpbImNhbnZhcyJdLEhUTUxDb250ZW50RWxlbWVudDpbImNvbnRlbnQiXSxIVE1MRExpc3RFbGVtZW50OlsiZGwiXSxIVE1MRGF0YUVsZW1lbnQ6WyJkYXRhIl0sSFRNTERhdGFMaXN0RWxlbWVudDpbImRhdGFsaXN0Il0sSFRNTERldGFpbHNFbGVtZW50OlsiZGV0YWlscyJdLEhUTUxEaWFsb2dFbGVtZW50OlsiZGlhbG9nIl0sSFRNTERpcmVjdG9yeUVsZW1lbnQ6WyJkaXIiXSxIVE1MRGl2RWxlbWVudDpbImRpdiJdLEhUTUxEb2N1bWVudDpbImRvY3VtZW50Il0sSFRNTEVsZW1lbnQ6WyJlbGVtZW50IiwiYWJiciIsImFkZHJlc3MiLCJhcnRpY2xlIiwiYXNpZGUiLCJiIiwiYmRpIiwiYmRvIiwiY2l0ZSIsImNvZGUiLCJjb21tYW5kIiwiZGQiLCJkZm4iLCJkdCIsImVtIiwiZmlnY2FwdGlvbiIsImZpZ3VyZSIsImZvb3RlciIsImhlYWRlciIsImkiLCJrYmQiLCJtYXJrIiwibmF2Iiwibm9zY3JpcHQiLCJycCIsInJ0IiwicnVieSIsInMiLCJzYW1wIiwic2VjdGlvbiIsInNtYWxsIiwic3Ryb25nIiwic3ViIiwic3VtbWFyeSIsInN1cCIsInUiLCJ2YXIiLCJ3YnIiXSxIVE1MRW1iZWRFbGVtZW50OlsiZW1iZWQiXSxIVE1MRmllbGRTZXRFbGVtZW50OlsiZmllbGRzZXQiXSxIVE1MRm9udEVsZW1lbnQ6WyJmb250Il0sSFRNTEZvcm1FbGVtZW50OlsiZm9ybSJdLEhUTUxGcmFtZUVsZW1lbnQ6WyJmcmFtZSJdLEhUTUxGcmFtZVNldEVsZW1lbnQ6WyJmcmFtZXNldCJdLEhUTUxIUkVsZW1lbnQ6WyJociJdLEhUTUxIZWFkRWxlbWVudDpbImhlYWQiXSxIVE1MSGVhZGluZ0VsZW1lbnQ6WyJoMSIsImgyIiwiaDMiLCJoNCIsImg1IiwiaDYiXSxIVE1MSHRtbEVsZW1lbnQ6WyJodG1sIl0sSFRNTElGcmFtZUVsZW1lbnQ6WyJpZnJhbWUiXSxIVE1MSW1hZ2VFbGVtZW50OlsiaW1nIl0sSFRNTElucHV0RWxlbWVudDpbImlucHV0Il0sSFRNTEtleWdlbkVsZW1lbnQ6WyJrZXlnZW4iXSxIVE1MTElFbGVtZW50OlsibGkiXSxIVE1MTGFiZWxFbGVtZW50OlsibGFiZWwiXSxIVE1MTGVnZW5kRWxlbWVudDpbImxlZ2VuZCJdLEhUTUxMaW5rRWxlbWVudDpbImxpbmsiXSxIVE1MTWFwRWxlbWVudDpbIm1hcCJdLEhUTUxNYXJxdWVlRWxlbWVudDpbIm1hcnF1ZWUiXSxIVE1MTWVkaWFFbGVtZW50OlsibWVkaWEiXSxIVE1MTWVudUVsZW1lbnQ6WyJtZW51Il0sSFRNTE1lbnVJdGVtRWxlbWVudDpbIm1lbnVpdGVtIl0sSFRNTE1ldGFFbGVtZW50OlsibWV0YSJdLEhUTUxNZXRlckVsZW1lbnQ6WyJtZXRlciJdLEhUTUxNb2RFbGVtZW50OlsiZGVsIiwiaW5zIl0sSFRNTE9MaXN0RWxlbWVudDpbIm9sIl0sSFRNTE9iamVjdEVsZW1lbnQ6WyJvYmplY3QiXSxIVE1MT3B0R3JvdXBFbGVtZW50Olsib3B0Z3JvdXAiXSxIVE1MT3B0aW9uRWxlbWVudDpbIm9wdGlvbiJdLEhUTUxPdXRwdXRFbGVtZW50Olsib3V0cHV0Il0sSFRNTFBhcmFncmFwaEVsZW1lbnQ6WyJwIl0sSFRNTFBhcmFtRWxlbWVudDpbInBhcmFtIl0sSFRNTFBpY3R1cmVFbGVtZW50OlsicGljdHVyZSJdLEhUTUxQcmVFbGVtZW50OlsicHJlIl0sSFRNTFByb2dyZXNzRWxlbWVudDpbInByb2dyZXNzIl0sSFRNTFF1b3RlRWxlbWVudDpbImJsb2NrcXVvdGUiLCJxIiwicXVvdGUiXSxIVE1MU2NyaXB0RWxlbWVudDpbInNjcmlwdCJdLEhUTUxTZWxlY3RFbGVtZW50Olsic2VsZWN0Il0sSFRNTFNoYWRvd0VsZW1lbnQ6WyJzaGFkb3ciXSxIVE1MU2xvdEVsZW1lbnQ6WyJzbG90Il0sSFRNTFNvdXJjZUVsZW1lbnQ6WyJzb3VyY2UiXSxIVE1MU3BhbkVsZW1lbnQ6WyJzcGFuIl0sSFRNTFN0eWxlRWxlbWVudDpbInN0eWxlIl0sSFRNTFRhYmxlQ2FwdGlvbkVsZW1lbnQ6WyJjYXB0aW9uIl0sSFRNTFRhYmxlQ2VsbEVsZW1lbnQ6WyJ0ZCIsInRoIl0sSFRNTFRhYmxlQ29sRWxlbWVudDpbImNvbCIsImNvbGdyb3VwIl0sSFRNTFRhYmxlRWxlbWVudDpbInRhYmxlIl0sSFRNTFRhYmxlUm93RWxlbWVudDpbInRyIl0sSFRNTFRhYmxlU2VjdGlvbkVsZW1lbnQ6WyJ0aGVhZCIsInRib2R5IiwidGZvb3QiXSxIVE1MVGVtcGxhdGVFbGVtZW50OlsidGVtcGxhdGUiXSxIVE1MVGV4dEFyZWFFbGVtZW50OlsidGV4dGFyZWEiXSxIVE1MVGltZUVsZW1lbnQ6WyJ0aW1lIl0sSFRNTFRpdGxlRWxlbWVudDpbInRpdGxlIl0sSFRNTFRyYWNrRWxlbWVudDpbInRyYWNrIl0sSFRNTFVMaXN0RWxlbWVudDpbInVsIl0sSFRNTFVua25vd25FbGVtZW50OlsidW5rbm93biIsInZoZ3JvdXB2IiwidmtleWdlbiJdLEhUTUxWaWRlb0VsZW1lbnQ6WyJ2aWRlbyJdfSxub2Rlczp7QXR0cjpbIm5vZGUiXSxBdWRpbzpbImF1ZGlvIl0sQ0RBVEFTZWN0aW9uOlsibm9kZSJdLENoYXJhY3RlckRhdGE6WyJub2RlIl0sQ29tbWVudDpbIiNjb21tZW50Il0sRG9jdW1lbnQ6WyIjZG9jdW1lbnQiXSxEb2N1bWVudEZyYWdtZW50OlsiI2RvY3VtZW50LWZyYWdtZW50Il0sRG9jdW1lbnRUeXBlOlsibm9kZSJdLEhUTUxEb2N1bWVudDpbIiNkb2N1bWVudCJdLEltYWdlOlsiaW1nIl0sT3B0aW9uOlsib3B0aW9uIl0sUHJvY2Vzc2luZ0luc3RydWN0aW9uOlsibm9kZSJdLFNoYWRvd1Jvb3Q6WyIjc2hhZG93LXJvb3QiXSxUZXh0OlsiI3RleHQiXSxYTUxEb2N1bWVudDpbInhtbCJdfX0pOyJvYmplY3QiIT10eXBlb2YgdCYmKHQ9e3R5cGU6dHx8ImF1dG8ifSk7dmFyIEwsTSxDLFMsRCxILE8sWixQLE49InJlZ2lzdGVyRWxlbWVudCIsej0xZTUqZS5NYXRoLnJhbmRvbSgpPj4wLEE9Il9fIitOK3osST0iYWRkRXZlbnRMaXN0ZW5lciIsaj0iYXR0YWNoZWQiLFI9IkNhbGxiYWNrIix4PSJkZXRhY2hlZCIsRj0iZXh0ZW5kcyIsVj0iYXR0cmlidXRlQ2hhbmdlZCIrUixVPWorUixxPSJjb25uZWN0ZWQiK1IsQj0iZGlzY29ubmVjdGVkIitSLEc9ImNyZWF0ZWQiK1IsVz14K1IsJD0iQURESVRJT04iLFg9IlJFTU9WQUwiLEo9IkRPTUF0dHJNb2RpZmllZCIsSz0iRE9NQ29udGVudExvYWRlZCIsWT0iRE9NU3VidHJlZU1vZGlmaWVkIixRPSI8IixlZT0iPSIsdGU9L15bQS1aXVsuX0EtWjAtOV0qLVstLl9BLVowLTldKiQvLG5lPVsiQU5OT1RBVElPTi1YTUwiLCJDT0xPUi1QUk9GSUxFIiwiRk9OVC1GQUNFIiwiRk9OVC1GQUNFLVNSQyIsIkZPTlQtRkFDRS1VUkkiLCJGT05ULUZBQ0UtRk9STUFUIiwiRk9OVC1GQUNFLU5BTUUiLCJNSVNTSU5HLUdMWVBIIl0sb2U9W10scmU9W10sYWU9IiIsaWU9Yi5kb2N1bWVudEVsZW1lbnQsc2U9b2UuaW5kZXhPZnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PXRoaXMubGVuZ3RoO3QtLSYmdGhpc1t0XSE9PWU7KTtyZXR1cm4gdH0sY2U9RS5wcm90b3R5cGUsbGU9Y2UuaGFzT3duUHJvcGVydHksdWU9Y2UuaXNQcm90b3R5cGVPZixoZT1FLmRlZmluZVByb3BlcnR5LHBlPVtdLGZlPUUuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yLGRlPUUuZ2V0T3duUHJvcGVydHlOYW1lcyxtZT1FLmdldFByb3RvdHlwZU9mLGdlPUUuc2V0UHJvdG90eXBlT2YsVGU9ISFFLl9fcHJvdG9fXyx5ZT0iX19kcmVDRXYxIix2ZT1lLmN1c3RvbUVsZW1lbnRzLF9lPSEvXmZvcmNlLy50ZXN0KHQudHlwZSkmJiEhKHZlJiZ2ZS5kZWZpbmUmJnZlLmdldCYmdmUud2hlbkRlZmluZWQpLGtlPUUuY3JlYXRlfHxFLGJlPWUuTWFwfHxmdW5jdGlvbigpe3ZhciBlLHQ9W10sbj1bXTtyZXR1cm57Z2V0OmZ1bmN0aW9uKGUpe3JldHVybiBuW3NlLmNhbGwodCxlKV19LHNldDpmdW5jdGlvbihvLHIpeyhlPXNlLmNhbGwodCxvKSk8MD9uW3QucHVzaChvKS0xXT1yOm5bZV09cn19fSxFZT1lLlByb21pc2V8fGZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQoZSl7Zm9yKG89ITA7bi5sZW5ndGg7KW4uc2hpZnQoKShlKX12YXIgbj1bXSxvPSExLHI9e2NhdGNoOmZ1bmN0aW9uKCl7cmV0dXJuIHJ9LHRoZW46ZnVuY3Rpb24oZSl7cmV0dXJuIG4ucHVzaChlKSxvJiZzZXRUaW1lb3V0KHQsMSkscn19O3JldHVybiBlKHQpLHJ9LHdlPSExLExlPWtlKG51bGwpLE1lPWtlKG51bGwpLENlPW5ldyBiZSxTZT1mdW5jdGlvbihlKXtyZXR1cm4gZS50b0xvd2VyQ2FzZSgpfSxEZT1FLmNyZWF0ZXx8ZnVuY3Rpb24gZSh0KXtyZXR1cm4gdD8oZS5wcm90b3R5cGU9dCxuZXcgZSk6dGhpc30sSGU9Z2V8fChUZT9mdW5jdGlvbihlLHQpe3JldHVybiBlLl9fcHJvdG9fXz10LGV9OmRlJiZmZT9mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXtmb3IodmFyIG4sbz1kZSh0KSxyPTAsYT1vLmxlbmd0aDtyPGE7cisrKWxlLmNhbGwoZSxuPW9bcl0pfHxoZShlLG4sZmUodCxuKSl9cmV0dXJuIGZ1bmN0aW9uKHQsbil7ZG97ZSh0LG4pfXdoaWxlKChuPW1lKG4pKSYmIXVlLmNhbGwobix0KSk7cmV0dXJuIHR9fSgpOmZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuIGluIHQpZVtuXT10W25dO3JldHVybiBlfSksT2U9ZS5NdXRhdGlvbk9ic2VydmVyfHxlLldlYktpdE11dGF0aW9uT2JzZXJ2ZXIsWmU9ZS5IVE1MQW5jaG9yRWxlbWVudCxQZT0oZS5IVE1MRWxlbWVudHx8ZS5FbGVtZW50fHxlLk5vZGUpLnByb3RvdHlwZSxOZT0hdWUuY2FsbChQZSxpZSksemU9TmU/ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBlW3RdPW4udmFsdWUsZX06aGUsQWU9TmU/ZnVuY3Rpb24oZSl7cmV0dXJuIDE9PT1lLm5vZGVUeXBlfTpmdW5jdGlvbihlKXtyZXR1cm4gdWUuY2FsbChQZSxlKX0sSWU9TmUmJltdLGplPVBlLmF0dGFjaFNoYWRvdyxSZT1QZS5jbG9uZU5vZGUseGU9UGUuY2xvc2VzdHx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PXRoaXM7dCYmdC5ub2RlTmFtZSE9PWU7KXQ9dC5wYXJlbnROb2RlO3JldHVybiB0fSxGZT1QZS5kaXNwYXRjaEV2ZW50LFZlPVBlLmdldEF0dHJpYnV0ZSxVZT1QZS5oYXNBdHRyaWJ1dGUscWU9UGUucmVtb3ZlQXR0cmlidXRlLEJlPVBlLnNldEF0dHJpYnV0ZSxHZT1iLmNyZWF0ZUVsZW1lbnQsV2U9Yi5pbXBvcnROb2RlLCRlPUdlLFhlPU9lJiZ7YXR0cmlidXRlczohMCxjaGFyYWN0ZXJEYXRhOiEwLGF0dHJpYnV0ZU9sZFZhbHVlOiEwfSxKZT1PZXx8ZnVuY3Rpb24oZSl7dHQ9ITEsaWUucmVtb3ZlRXZlbnRMaXN0ZW5lcihKLEplKX0sS2U9MCxZZT1OIGluIGImJiEvXmZvcmNlLWFsbC8udGVzdCh0LnR5cGUpLFFlPSEwLGV0PSExLHR0PSEwLG50PSEwLG90PSEwO2lmKE9lJiYoKFA9Yi5jcmVhdGVFbGVtZW50KCJkaXYiKSkuaW5uZXJIVE1MPSI8ZGl2PjxkaXY+PC9kaXY+PC9kaXY+IixuZXcgT2UoKGZ1bmN0aW9uKGUsdCl7aWYoZVswXSYmImNoaWxkTGlzdCI9PWVbMF0udHlwZSYmIWVbMF0ucmVtb3ZlZE5vZGVzWzBdLmNoaWxkTm9kZXMubGVuZ3RoKXt2YXIgbj0oUD1mZShQZSwiaW5uZXJIVE1MIikpJiZQLnNldDtuJiZoZShQZSwiaW5uZXJIVE1MIix7c2V0OmZ1bmN0aW9uKGUpe2Zvcig7dGhpcy5sYXN0Q2hpbGQ7KXRoaXMucmVtb3ZlQ2hpbGQodGhpcy5sYXN0Q2hpbGQpO24uY2FsbCh0aGlzLGUpfX0pfXQuZGlzY29ubmVjdCgpLFA9bnVsbH0pKS5vYnNlcnZlKFAse2NoaWxkTGlzdDohMCxzdWJ0cmVlOiEwfSksUC5pbm5lckhUTUw9IiIpLFllfHwoZ2V8fFRlPyhPPWZ1bmN0aW9uKGUsdCl7dWUuY2FsbCh0LGUpfHxwKGUsdCl9LFo9cCk6Wj1PPWZ1bmN0aW9uKGUsdCl7ZVtBXXx8KGVbQV09RSghMCkscChlLHQpKX0sTmU/KHR0PSExLGZ1bmN0aW9uKCl7dmFyIGU9ZmUoUGUsSSksdD1lLnZhbHVlLG49ZnVuY3Rpb24oZSl7dmFyIHQ9bmV3IEN1c3RvbUV2ZW50KEose2J1YmJsZXM6ITB9KTt0LmF0dHJOYW1lPWUsdC5wcmV2VmFsdWU9VmUuY2FsbCh0aGlzLGUpLHQubmV3VmFsdWU9bnVsbCx0W1hdPXQuYXR0ckNoYW5nZT0yLHFlLmNhbGwodGhpcyxlKSxGZS5jYWxsKHRoaXMsdCl9LG89ZnVuY3Rpb24oZSx0KXt2YXIgbj1VZS5jYWxsKHRoaXMsZSksbz1uJiZWZS5jYWxsKHRoaXMsZSkscj1uZXcgQ3VzdG9tRXZlbnQoSix7YnViYmxlczohMH0pO0JlLmNhbGwodGhpcyxlLHQpLHIuYXR0ck5hbWU9ZSxyLnByZXZWYWx1ZT1uP286bnVsbCxyLm5ld1ZhbHVlPXQsbj9yLk1PRElGSUNBVElPTj1yLmF0dHJDaGFuZ2U9MTpyWyRdPXIuYXR0ckNoYW5nZT0wLEZlLmNhbGwodGhpcyxyKX0scj1mdW5jdGlvbihlKXt2YXIgdCxuPWUuY3VycmVudFRhcmdldCxvPW5bQV0scj1lLnByb3BlcnR5TmFtZTtvLmhhc093blByb3BlcnR5KHIpJiYobz1vW3JdLCh0PW5ldyBDdXN0b21FdmVudChKLHtidWJibGVzOiEwfSkpLmF0dHJOYW1lPW8ubmFtZSx0LnByZXZWYWx1ZT1vLnZhbHVlfHxudWxsLHQubmV3VmFsdWU9by52YWx1ZT1uW3JdfHxudWxsLG51bGw9PXQucHJldlZhbHVlP3RbJF09dC5hdHRyQ2hhbmdlPTA6dC5NT0RJRklDQVRJT049dC5hdHRyQ2hhbmdlPTEsRmUuY2FsbChuLHQpKX07ZS52YWx1ZT1mdW5jdGlvbihlLGEsaSl7ZT09PUomJnRoaXNbVl0mJnRoaXMuc2V0QXR0cmlidXRlIT09byYmKHRoaXNbQV09e2NsYXNzTmFtZTp7bmFtZToiY2xhc3MiLHZhbHVlOnRoaXMuY2xhc3NOYW1lfX0sdGhpcy5zZXRBdHRyaWJ1dGU9byx0aGlzLnJlbW92ZUF0dHJpYnV0ZT1uLHQuY2FsbCh0aGlzLCJwcm9wZXJ0eWNoYW5nZSIscikpLHQuY2FsbCh0aGlzLGUsYSxpKX0saGUoUGUsSSxlKX0oKSk6T2V8fChpZVtJXShKLEplKSxpZS5zZXRBdHRyaWJ1dGUoQSwxKSxpZS5yZW1vdmVBdHRyaWJ1dGUoQSksdHQmJihNPWZ1bmN0aW9uKGUpe3ZhciB0LG4sbyxyPXRoaXM7aWYocj09PWUudGFyZ2V0KXtmb3IobyBpbiB0PXJbQV0scltBXT1uPVMociksbil7aWYoIShvIGluIHQpKXJldHVybiBDKDAscixvLHRbb10sbltvXSwkKTtpZihuW29dIT09dFtvXSlyZXR1cm4gQygxLHIsbyx0W29dLG5bb10sIk1PRElGSUNBVElPTiIpfWZvcihvIGluIHQpaWYoIShvIGluIG4pKXJldHVybiBDKDIscixvLHRbb10sbltvXSxYKX19LEM9ZnVuY3Rpb24oZSx0LG4sbyxyLGEpe3ZhciBpPXthdHRyQ2hhbmdlOmUsY3VycmVudFRhcmdldDp0LGF0dHJOYW1lOm4scHJldlZhbHVlOm8sbmV3VmFsdWU6cn07aVthXT1lLHMoaSl9LFM9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LG4sbz17fSxyPWUuYXR0cmlidXRlcyxhPTAsaT1yLmxlbmd0aDthPGk7YSsrKSJzZXRBdHRyaWJ1dGUiIT09KG49KHQ9clthXSkubmFtZSkmJihvW25dPXQudmFsdWUpO3JldHVybiBvfSkpLGJbTl09ZnVuY3Rpb24oZSx0KXtpZihuPWUudG9VcHBlckNhc2UoKSxRZSYmKFFlPSExLE9lPyhEPWZ1bmN0aW9uKGUsdCl7ZnVuY3Rpb24gbihlLHQpe2Zvcih2YXIgbj0wLG89ZS5sZW5ndGg7bjxvO3QoZVtuKytdKSk7fXJldHVybiBuZXcgT2UoKGZ1bmN0aW9uKG8pe2Zvcih2YXIgcixhLGkscz0wLGM9by5sZW5ndGg7czxjO3MrKykiY2hpbGRMaXN0Ij09PShyPW9bc10pLnR5cGU/KG4oci5hZGRlZE5vZGVzLGUpLG4oci5yZW1vdmVkTm9kZXMsdCkpOihhPXIudGFyZ2V0LG90JiZhW1ZdJiYic3R5bGUiIT09ci5hdHRyaWJ1dGVOYW1lJiYoaT1WZS5jYWxsKGEsci5hdHRyaWJ1dGVOYW1lKSkhPT1yLm9sZFZhbHVlJiZhW1ZdKHIuYXR0cmlidXRlTmFtZSxyLm9sZFZhbHVlLGkpKX0pKX0ocihqKSxyKHgpKSwoSD1mdW5jdGlvbihlKXtyZXR1cm4gRC5vYnNlcnZlKGUse2NoaWxkTGlzdDohMCxzdWJ0cmVlOiEwfSksZX0pKGIpLGplJiYoUGUuYXR0YWNoU2hhZG93PWZ1bmN0aW9uKCl7cmV0dXJuIEgoamUuYXBwbHkodGhpcyxhcmd1bWVudHMpKX0pKTooTD1bXSxiW0ldKCJET01Ob2RlSW5zZXJ0ZWQiLGMoaikpLGJbSV0oIkRPTU5vZGVSZW1vdmVkIixjKHgpKSksYltJXShLLGwpLGJbSV0oInJlYWR5c3RhdGVjaGFuZ2UiLGwpLGIuaW1wb3J0Tm9kZT1mdW5jdGlvbihlLHQpe3N3aXRjaChlLm5vZGVUeXBlKXtjYXNlIDE6cmV0dXJuIGgoYixXZSxbZSwhIXRdKTtjYXNlIDExOmZvcih2YXIgbj1iLmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSxvPWUuY2hpbGROb2RlcyxyPW8ubGVuZ3RoLGE9MDthPHI7YSsrKW4uYXBwZW5kQ2hpbGQoYi5pbXBvcnROb2RlKG9bYV0sISF0KSk7cmV0dXJuIG47ZGVmYXVsdDpyZXR1cm4gUmUuY2FsbChlLCEhdCl9fSxQZS5jbG9uZU5vZGU9ZnVuY3Rpb24oZSl7cmV0dXJuIGgodGhpcyxSZSxbISFlXSl9KSxldClyZXR1cm4gZXQ9ITE7aWYoLTI8c2UuY2FsbChvZSxlZStuKStzZS5jYWxsKG9lLFErbikmJmYoZSksIXRlLnRlc3Qobil8fC0xPHNlLmNhbGwobmUsbikpdGhyb3cgbmV3IEVycm9yKCJUaGUgdHlwZSAiK2UrIiBpcyBpbnZhbGlkIik7dmFyIG4sYSxpPWZ1bmN0aW9uKCl7cmV0dXJuIHU/Yi5jcmVhdGVFbGVtZW50KHAsbik6Yi5jcmVhdGVFbGVtZW50KHApfSxzPXR8fGNlLHU9bGUuY2FsbChzLEYpLHA9dT90W0ZdLnRvVXBwZXJDYXNlKCk6bjtyZXR1cm4gdSYmLTE8c2UuY2FsbChvZSxRK3ApJiZmKHApLGE9b2UucHVzaCgodT9lZTpRKStuKS0xLGFlPWFlLmNvbmNhdChhZS5sZW5ndGg/IiwiOiIiLHU/cCsnW2lzPSInK2UudG9Mb3dlckNhc2UoKSsnIl0nOnApLGkucHJvdG90eXBlPXJlW2FdPWxlLmNhbGwocywicHJvdG90eXBlIik/cy5wcm90b3R5cGU6RGUoUGUpLGFlLmxlbmd0aCYmbyhiLnF1ZXJ5U2VsZWN0b3JBbGwoYWUpLGopLGl9LGIuY3JlYXRlRWxlbWVudD0kZT1mdW5jdGlvbihlLHQpe3ZhciBuPXkodCksbz1uP0dlLmNhbGwoYixlLFNlKG4pKTpHZS5jYWxsKGIsZSkscj0iIitlLGE9c2UuY2FsbChvZSwobj9lZTpRKSsobnx8cikudG9VcHBlckNhc2UoKSkscz0tMTxhO3JldHVybiBuJiYoby5zZXRBdHRyaWJ1dGUoImlzIixuPW4udG9Mb3dlckNhc2UoKSkscyYmKHM9aShyLnRvVXBwZXJDYXNlKCksbikpKSxvdD0hYi5jcmVhdGVFbGVtZW50LmlubmVySFRNTEhlbHBlcixzJiZaKG8scmVbYV0pLG99KSxhZGRFdmVudExpc3RlbmVyKCJiZWZvcmV1bmxvYWQiLChmdW5jdGlvbigpe2RlbGV0ZSBiLmNyZWF0ZUVsZW1lbnQsZGVsZXRlIGIuaW1wb3J0Tm9kZSxkZWxldGUgYltOXX0pLCExKSxtLnByb3RvdHlwZT17Y29uc3RydWN0b3I6bSxkZWZpbmU6X2U/ZnVuY3Rpb24oZSx0LG4pe2lmKG4pZyhlLHQsbik7ZWxzZXt2YXIgbz1lLnRvVXBwZXJDYXNlKCk7TGVbb109e2NvbnN0cnVjdG9yOnQsY3JlYXRlOltvXX0sQ2Uuc2V0KHQsbyksdmUuZGVmaW5lKGUsdCl9fTpnLGdldDpfZT9mdW5jdGlvbihlKXtyZXR1cm4gdmUuZ2V0KGUpfHxUKGUpfTpULHdoZW5EZWZpbmVkOl9lP2Z1bmN0aW9uKGUpe3JldHVybiBFZS5yYWNlKFt2ZS53aGVuRGVmaW5lZChlKSxfKGUpXSl9Ol99LCF2ZXx8L15mb3JjZS8udGVzdCh0LnR5cGUpKWsoKTtlbHNlIGlmKCF0Lm5vQnVpbHRJbil0cnl7IWZ1bmN0aW9uKHQsbixvKXt2YXIgcj1uZXcgUmVnRXhwKCJePGFcXHMraXM9KCd8XCIpIitvKyJcXDE+PC9hPiQiKTtpZihuW0ZdPSJhIiwodC5wcm90b3R5cGU9RGUoWmUucHJvdG90eXBlKSkuY29uc3RydWN0b3I9dCxlLmN1c3RvbUVsZW1lbnRzLmRlZmluZShvLHQsbiksIXIudGVzdChiLmNyZWF0ZUVsZW1lbnQoImEiLHtpczpvfSkub3V0ZXJIVE1MKXx8IXIudGVzdCgobmV3IHQpLm91dGVySFRNTCkpdGhyb3cgbn0oKGZ1bmN0aW9uIGUoKXtyZXR1cm4gUmVmbGVjdC5jb25zdHJ1Y3QoWmUsW10sZSl9KSx7fSwiZG9jdW1lbnQtcmVnaXN0ZXItZWxlbWVudC1hIit6KX1jYXRjaChydCl7aygpfWlmKCF0Lm5vQnVpbHRJbil0cnl7aWYoR2UuY2FsbChiLCJhIiwiYSIpLm91dGVySFRNTC5pbmRleE9mKCJpcyIpPDApdGhyb3d7fX1jYXRjaChhdCl7U2U9ZnVuY3Rpb24oZSl7cmV0dXJue2lzOmUudG9Mb3dlckNhc2UoKX19fX0od2luZG93KX0sImhOL2ciOmZ1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7bi5yKHQpLG4oInBEcE4iKSxuKCJLSjRUIil9LHBEcE46ZnVuY3Rpb24oZSx0LG4pe3ZhciBvLHI7dm9pZCAwPT09KHI9ImZ1bmN0aW9uIj09dHlwZW9mKG89ZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7IWZ1bmN0aW9uKGUpe2NvbnN0IHQ9ZS5wZXJmb3JtYW5jZTtmdW5jdGlvbiBuKGUpe3QmJnQubWFyayYmdC5tYXJrKGUpfWZ1bmN0aW9uIG8oZSxuKXt0JiZ0Lm1lYXN1cmUmJnQubWVhc3VyZShlLG4pfW4oIlpvbmUiKTtjb25zdCByPWUuX19ab25lX3N5bWJvbF9wcmVmaXh8fCJfX3pvbmVfc3ltYm9sX18iO2Z1bmN0aW9uIGEoZSl7cmV0dXJuIHIrZX1jb25zdCBpPSEwPT09ZVthKCJmb3JjZUR1cGxpY2F0ZVpvbmVDaGVjayIpXTtpZihlLlpvbmUpe2lmKGl8fCJmdW5jdGlvbiIhPXR5cGVvZiBlLlpvbmUuX19zeW1ib2xfXyl0aHJvdyBuZXcgRXJyb3IoIlpvbmUgYWxyZWFkeSBsb2FkZWQuIik7cmV0dXJuIGUuWm9uZX1jbGFzcyBze2NvbnN0cnVjdG9yKGUsdCl7dGhpcy5fcGFyZW50PWUsdGhpcy5fbmFtZT10P3QubmFtZXx8InVubmFtZWQiOiI8cm9vdD4iLHRoaXMuX3Byb3BlcnRpZXM9dCYmdC5wcm9wZXJ0aWVzfHx7fSx0aGlzLl96b25lRGVsZWdhdGU9bmV3IGwodGhpcyx0aGlzLl9wYXJlbnQmJnRoaXMuX3BhcmVudC5fem9uZURlbGVnYXRlLHQpfXN0YXRpYyBhc3NlcnRab25lUGF0Y2hlZCgpe2lmKGUuUHJvbWlzZSE9PUQuWm9uZUF3YXJlUHJvbWlzZSl0aHJvdyBuZXcgRXJyb3IoIlpvbmUuanMgaGFzIGRldGVjdGVkIHRoYXQgWm9uZUF3YXJlUHJvbWlzZSBgKHdpbmRvd3xnbG9iYWwpLlByb21pc2VgIGhhcyBiZWVuIG92ZXJ3cml0dGVuLlxuTW9zdCBsaWtlbHkgY2F1c2UgaXMgdGhhdCBhIFByb21pc2UgcG9seWZpbGwgaGFzIGJlZW4gbG9hZGVkIGFmdGVyIFpvbmUuanMgKFBvbHlmaWxsaW5nIFByb21pc2UgYXBpIGlzIG5vdCBuZWNlc3Nhcnkgd2hlbiB6b25lLmpzIGlzIGxvYWRlZC4gSWYgeW91IG11c3QgbG9hZCBvbmUsIGRvIHNvIGJlZm9yZSBsb2FkaW5nIHpvbmUuanMuKSIpfXN0YXRpYyBnZXQgcm9vdCgpe2xldCBlPXMuY3VycmVudDtmb3IoO2UucGFyZW50OyllPWUucGFyZW50O3JldHVybiBlfXN0YXRpYyBnZXQgY3VycmVudCgpe3JldHVybiBPLnpvbmV9c3RhdGljIGdldCBjdXJyZW50VGFzaygpe3JldHVybiBafXN0YXRpYyBfX2xvYWRfcGF0Y2godCxyKXtpZihELmhhc093blByb3BlcnR5KHQpKXtpZihpKXRocm93IEVycm9yKCJBbHJlYWR5IGxvYWRlZCBwYXRjaDogIit0KX1lbHNlIGlmKCFlWyJfX1pvbmVfZGlzYWJsZV8iK3RdKXtjb25zdCBhPSJab25lOiIrdDtuKGEpLERbdF09cihlLHMsSCksbyhhLGEpfX1nZXQgcGFyZW50KCl7cmV0dXJuIHRoaXMuX3BhcmVudH1nZXQgbmFtZSgpe3JldHVybiB0aGlzLl9uYW1lfWdldChlKXtjb25zdCB0PXRoaXMuZ2V0Wm9uZVdpdGgoZSk7aWYodClyZXR1cm4gdC5fcHJvcGVydGllc1tlXX1nZXRab25lV2l0aChlKXtsZXQgdD10aGlzO2Zvcig7dDspe2lmKHQuX3Byb3BlcnRpZXMuaGFzT3duUHJvcGVydHkoZSkpcmV0dXJuIHQ7dD10Ll9wYXJlbnR9cmV0dXJuIG51bGx9Zm9yayhlKXtpZighZSl0aHJvdyBuZXcgRXJyb3IoIlpvbmVTcGVjIHJlcXVpcmVkISIpO3JldHVybiB0aGlzLl96b25lRGVsZWdhdGUuZm9yayh0aGlzLGUpfXdyYXAoZSx0KXtpZigiZnVuY3Rpb24iIT10eXBlb2YgZSl0aHJvdyBuZXcgRXJyb3IoIkV4cGVjdGluZyBmdW5jdGlvbiBnb3Q6ICIrZSk7Y29uc3Qgbj10aGlzLl96b25lRGVsZWdhdGUuaW50ZXJjZXB0KHRoaXMsZSx0KSxvPXRoaXM7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIG8ucnVuR3VhcmRlZChuLHRoaXMsYXJndW1lbnRzLHQpfX1ydW4oZSx0LG4sbyl7Tz17cGFyZW50Ok8sem9uZTp0aGlzfTt0cnl7cmV0dXJuIHRoaXMuX3pvbmVEZWxlZ2F0ZS5pbnZva2UodGhpcyxlLHQsbixvKX1maW5hbGx5e089Ty5wYXJlbnR9fXJ1bkd1YXJkZWQoZSx0PW51bGwsbixvKXtPPXtwYXJlbnQ6Tyx6b25lOnRoaXN9O3RyeXt0cnl7cmV0dXJuIHRoaXMuX3pvbmVEZWxlZ2F0ZS5pbnZva2UodGhpcyxlLHQsbixvKX1jYXRjaChyKXtpZih0aGlzLl96b25lRGVsZWdhdGUuaGFuZGxlRXJyb3IodGhpcyxyKSl0aHJvdyByfX1maW5hbGx5e089Ty5wYXJlbnR9fXJ1blRhc2soZSx0LG4pe2lmKGUuem9uZSE9dGhpcyl0aHJvdyBuZXcgRXJyb3IoIkEgdGFzayBjYW4gb25seSBiZSBydW4gaW4gdGhlIHpvbmUgb2YgY3JlYXRpb24hIChDcmVhdGlvbjogIisoZS56b25lfHx2KS5uYW1lKyI7IEV4ZWN1dGlvbjogIit0aGlzLm5hbWUrIikiKTtpZihlLnN0YXRlPT09XyYmKGUudHlwZT09PVN8fGUudHlwZT09PUMpKXJldHVybjtjb25zdCBvPWUuc3RhdGUhPUU7byYmZS5fdHJhbnNpdGlvblRvKEUsYiksZS5ydW5Db3VudCsrO2NvbnN0IHI9WjtaPWUsTz17cGFyZW50Ok8sem9uZTp0aGlzfTt0cnl7ZS50eXBlPT1DJiZlLmRhdGEmJiFlLmRhdGEuaXNQZXJpb2RpYyYmKGUuY2FuY2VsRm49dm9pZCAwKTt0cnl7cmV0dXJuIHRoaXMuX3pvbmVEZWxlZ2F0ZS5pbnZva2VUYXNrKHRoaXMsZSx0LG4pfWNhdGNoKGEpe2lmKHRoaXMuX3pvbmVEZWxlZ2F0ZS5oYW5kbGVFcnJvcih0aGlzLGEpKXRocm93IGF9fWZpbmFsbHl7ZS5zdGF0ZSE9PV8mJmUuc3RhdGUhPT1MJiYoZS50eXBlPT1TfHxlLmRhdGEmJmUuZGF0YS5pc1BlcmlvZGljP28mJmUuX3RyYW5zaXRpb25UbyhiLEUpOihlLnJ1bkNvdW50PTAsdGhpcy5fdXBkYXRlVGFza0NvdW50KGUsLTEpLG8mJmUuX3RyYW5zaXRpb25UbyhfLEUsXykpKSxPPU8ucGFyZW50LFo9cn19c2NoZWR1bGVUYXNrKGUpe2lmKGUuem9uZSYmZS56b25lIT09dGhpcyl7bGV0IHQ9dGhpcztmb3IoO3Q7KXtpZih0PT09ZS56b25lKXRocm93IEVycm9yKGBjYW4gbm90IHJlc2NoZWR1bGUgdGFzayB0byAke3RoaXMubmFtZX0gd2hpY2ggaXMgZGVzY2VuZGFudHMgb2YgdGhlIG9yaWdpbmFsIHpvbmUgJHtlLnpvbmUubmFtZX1gKTt0PXQucGFyZW50fX1lLl90cmFuc2l0aW9uVG8oayxfKTtjb25zdCB0PVtdO2UuX3pvbmVEZWxlZ2F0ZXM9dCxlLl96b25lPXRoaXM7dHJ5e2U9dGhpcy5fem9uZURlbGVnYXRlLnNjaGVkdWxlVGFzayh0aGlzLGUpfWNhdGNoKG4pe3Rocm93IGUuX3RyYW5zaXRpb25UbyhMLGssXyksdGhpcy5fem9uZURlbGVnYXRlLmhhbmRsZUVycm9yKHRoaXMsbiksbn1yZXR1cm4gZS5fem9uZURlbGVnYXRlcz09PXQmJnRoaXMuX3VwZGF0ZVRhc2tDb3VudChlLDEpLGUuc3RhdGU9PWsmJmUuX3RyYW5zaXRpb25UbyhiLGspLGV9c2NoZWR1bGVNaWNyb1Rhc2soZSx0LG4sbyl7cmV0dXJuIHRoaXMuc2NoZWR1bGVUYXNrKG5ldyB1KE0sZSx0LG4sbyx2b2lkIDApKX1zY2hlZHVsZU1hY3JvVGFzayhlLHQsbixvLHIpe3JldHVybiB0aGlzLnNjaGVkdWxlVGFzayhuZXcgdShDLGUsdCxuLG8scikpfXNjaGVkdWxlRXZlbnRUYXNrKGUsdCxuLG8scil7cmV0dXJuIHRoaXMuc2NoZWR1bGVUYXNrKG5ldyB1KFMsZSx0LG4sbyxyKSl9Y2FuY2VsVGFzayhlKXtpZihlLnpvbmUhPXRoaXMpdGhyb3cgbmV3IEVycm9yKCJBIHRhc2sgY2FuIG9ubHkgYmUgY2FuY2VsbGVkIGluIHRoZSB6b25lIG9mIGNyZWF0aW9uISAoQ3JlYXRpb246ICIrKGUuem9uZXx8dikubmFtZSsiOyBFeGVjdXRpb246ICIrdGhpcy5uYW1lKyIpIik7ZS5fdHJhbnNpdGlvblRvKHcsYixFKTt0cnl7dGhpcy5fem9uZURlbGVnYXRlLmNhbmNlbFRhc2sodGhpcyxlKX1jYXRjaCh0KXt0aHJvdyBlLl90cmFuc2l0aW9uVG8oTCx3KSx0aGlzLl96b25lRGVsZWdhdGUuaGFuZGxlRXJyb3IodGhpcyx0KSx0fXJldHVybiB0aGlzLl91cGRhdGVUYXNrQ291bnQoZSwtMSksZS5fdHJhbnNpdGlvblRvKF8sdyksZS5ydW5Db3VudD0wLGV9X3VwZGF0ZVRhc2tDb3VudChlLHQpe2NvbnN0IG49ZS5fem9uZURlbGVnYXRlczstMT09dCYmKGUuX3pvbmVEZWxlZ2F0ZXM9bnVsbCk7Zm9yKGxldCBvPTA7bzxuLmxlbmd0aDtvKyspbltvXS5fdXBkYXRlVGFza0NvdW50KGUudHlwZSx0KX19cy5fX3N5bWJvbF9fPWE7Y29uc3QgYz17bmFtZToiIixvbkhhc1Rhc2s6KGUsdCxuLG8pPT5lLmhhc1Rhc2sobixvKSxvblNjaGVkdWxlVGFzazooZSx0LG4sbyk9PmUuc2NoZWR1bGVUYXNrKG4sbyksb25JbnZva2VUYXNrOihlLHQsbixvLHIsYSk9PmUuaW52b2tlVGFzayhuLG8scixhKSxvbkNhbmNlbFRhc2s6KGUsdCxuLG8pPT5lLmNhbmNlbFRhc2sobixvKX07Y2xhc3MgbHtjb25zdHJ1Y3RvcihlLHQsbil7dGhpcy5fdGFza0NvdW50cz17bWljcm9UYXNrOjAsbWFjcm9UYXNrOjAsZXZlbnRUYXNrOjB9LHRoaXMuem9uZT1lLHRoaXMuX3BhcmVudERlbGVnYXRlPXQsdGhpcy5fZm9ya1pTPW4mJihuJiZuLm9uRm9yaz9uOnQuX2ZvcmtaUyksdGhpcy5fZm9ya0RsZ3Q9biYmKG4ub25Gb3JrP3Q6dC5fZm9ya0RsZ3QpLHRoaXMuX2ZvcmtDdXJyWm9uZT1uJiYobi5vbkZvcms/dGhpcy56b25lOnQuX2ZvcmtDdXJyWm9uZSksdGhpcy5faW50ZXJjZXB0WlM9biYmKG4ub25JbnRlcmNlcHQ/bjp0Ll9pbnRlcmNlcHRaUyksdGhpcy5faW50ZXJjZXB0RGxndD1uJiYobi5vbkludGVyY2VwdD90OnQuX2ludGVyY2VwdERsZ3QpLHRoaXMuX2ludGVyY2VwdEN1cnJab25lPW4mJihuLm9uSW50ZXJjZXB0P3RoaXMuem9uZTp0Ll9pbnRlcmNlcHRDdXJyWm9uZSksdGhpcy5faW52b2tlWlM9biYmKG4ub25JbnZva2U/bjp0Ll9pbnZva2VaUyksdGhpcy5faW52b2tlRGxndD1uJiYobi5vbkludm9rZT90OnQuX2ludm9rZURsZ3QpLHRoaXMuX2ludm9rZUN1cnJab25lPW4mJihuLm9uSW52b2tlP3RoaXMuem9uZTp0Ll9pbnZva2VDdXJyWm9uZSksdGhpcy5faGFuZGxlRXJyb3JaUz1uJiYobi5vbkhhbmRsZUVycm9yP246dC5faGFuZGxlRXJyb3JaUyksdGhpcy5faGFuZGxlRXJyb3JEbGd0PW4mJihuLm9uSGFuZGxlRXJyb3I/dDp0Ll9oYW5kbGVFcnJvckRsZ3QpLHRoaXMuX2hhbmRsZUVycm9yQ3VyclpvbmU9biYmKG4ub25IYW5kbGVFcnJvcj90aGlzLnpvbmU6dC5faGFuZGxlRXJyb3JDdXJyWm9uZSksdGhpcy5fc2NoZWR1bGVUYXNrWlM9biYmKG4ub25TY2hlZHVsZVRhc2s/bjp0Ll9zY2hlZHVsZVRhc2taUyksdGhpcy5fc2NoZWR1bGVUYXNrRGxndD1uJiYobi5vblNjaGVkdWxlVGFzaz90OnQuX3NjaGVkdWxlVGFza0RsZ3QpLHRoaXMuX3NjaGVkdWxlVGFza0N1cnJab25lPW4mJihuLm9uU2NoZWR1bGVUYXNrP3RoaXMuem9uZTp0Ll9zY2hlZHVsZVRhc2tDdXJyWm9uZSksdGhpcy5faW52b2tlVGFza1pTPW4mJihuLm9uSW52b2tlVGFzaz9uOnQuX2ludm9rZVRhc2taUyksdGhpcy5faW52b2tlVGFza0RsZ3Q9biYmKG4ub25JbnZva2VUYXNrP3Q6dC5faW52b2tlVGFza0RsZ3QpLHRoaXMuX2ludm9rZVRhc2tDdXJyWm9uZT1uJiYobi5vbkludm9rZVRhc2s/dGhpcy56b25lOnQuX2ludm9rZVRhc2tDdXJyWm9uZSksdGhpcy5fY2FuY2VsVGFza1pTPW4mJihuLm9uQ2FuY2VsVGFzaz9uOnQuX2NhbmNlbFRhc2taUyksdGhpcy5fY2FuY2VsVGFza0RsZ3Q9biYmKG4ub25DYW5jZWxUYXNrP3Q6dC5fY2FuY2VsVGFza0RsZ3QpLHRoaXMuX2NhbmNlbFRhc2tDdXJyWm9uZT1uJiYobi5vbkNhbmNlbFRhc2s/dGhpcy56b25lOnQuX2NhbmNlbFRhc2tDdXJyWm9uZSksdGhpcy5faGFzVGFza1pTPW51bGwsdGhpcy5faGFzVGFza0RsZ3Q9bnVsbCx0aGlzLl9oYXNUYXNrRGxndE93bmVyPW51bGwsdGhpcy5faGFzVGFza0N1cnJab25lPW51bGw7Y29uc3Qgbz1uJiZuLm9uSGFzVGFzazsob3x8dCYmdC5faGFzVGFza1pTKSYmKHRoaXMuX2hhc1Rhc2taUz1vP246Yyx0aGlzLl9oYXNUYXNrRGxndD10LHRoaXMuX2hhc1Rhc2tEbGd0T3duZXI9dGhpcyx0aGlzLl9oYXNUYXNrQ3VyclpvbmU9ZSxuLm9uU2NoZWR1bGVUYXNrfHwodGhpcy5fc2NoZWR1bGVUYXNrWlM9Yyx0aGlzLl9zY2hlZHVsZVRhc2tEbGd0PXQsdGhpcy5fc2NoZWR1bGVUYXNrQ3VyclpvbmU9dGhpcy56b25lKSxuLm9uSW52b2tlVGFza3x8KHRoaXMuX2ludm9rZVRhc2taUz1jLHRoaXMuX2ludm9rZVRhc2tEbGd0PXQsdGhpcy5faW52b2tlVGFza0N1cnJab25lPXRoaXMuem9uZSksbi5vbkNhbmNlbFRhc2t8fCh0aGlzLl9jYW5jZWxUYXNrWlM9Yyx0aGlzLl9jYW5jZWxUYXNrRGxndD10LHRoaXMuX2NhbmNlbFRhc2tDdXJyWm9uZT10aGlzLnpvbmUpKX1mb3JrKGUsdCl7cmV0dXJuIHRoaXMuX2ZvcmtaUz90aGlzLl9mb3JrWlMub25Gb3JrKHRoaXMuX2ZvcmtEbGd0LHRoaXMuem9uZSxlLHQpOm5ldyBzKGUsdCl9aW50ZXJjZXB0KGUsdCxuKXtyZXR1cm4gdGhpcy5faW50ZXJjZXB0WlM/dGhpcy5faW50ZXJjZXB0WlMub25JbnRlcmNlcHQodGhpcy5faW50ZXJjZXB0RGxndCx0aGlzLl9pbnRlcmNlcHRDdXJyWm9uZSxlLHQsbik6dH1pbnZva2UoZSx0LG4sbyxyKXtyZXR1cm4gdGhpcy5faW52b2tlWlM/dGhpcy5faW52b2tlWlMub25JbnZva2UodGhpcy5faW52b2tlRGxndCx0aGlzLl9pbnZva2VDdXJyWm9uZSxlLHQsbixvLHIpOnQuYXBwbHkobixvKX1oYW5kbGVFcnJvcihlLHQpe3JldHVybiF0aGlzLl9oYW5kbGVFcnJvclpTfHx0aGlzLl9oYW5kbGVFcnJvclpTLm9uSGFuZGxlRXJyb3IodGhpcy5faGFuZGxlRXJyb3JEbGd0LHRoaXMuX2hhbmRsZUVycm9yQ3VyclpvbmUsZSx0KX1zY2hlZHVsZVRhc2soZSx0KXtsZXQgbj10O2lmKHRoaXMuX3NjaGVkdWxlVGFza1pTKXRoaXMuX2hhc1Rhc2taUyYmbi5fem9uZURlbGVnYXRlcy5wdXNoKHRoaXMuX2hhc1Rhc2tEbGd0T3duZXIpLG49dGhpcy5fc2NoZWR1bGVUYXNrWlMub25TY2hlZHVsZVRhc2sodGhpcy5fc2NoZWR1bGVUYXNrRGxndCx0aGlzLl9zY2hlZHVsZVRhc2tDdXJyWm9uZSxlLHQpLG58fChuPXQpO2Vsc2UgaWYodC5zY2hlZHVsZUZuKXQuc2NoZWR1bGVGbih0KTtlbHNle2lmKHQudHlwZSE9TSl0aHJvdyBuZXcgRXJyb3IoIlRhc2sgaXMgbWlzc2luZyBzY2hlZHVsZUZuLiIpO1QodCl9cmV0dXJuIG59aW52b2tlVGFzayhlLHQsbixvKXtyZXR1cm4gdGhpcy5faW52b2tlVGFza1pTP3RoaXMuX2ludm9rZVRhc2taUy5vbkludm9rZVRhc2sodGhpcy5faW52b2tlVGFza0RsZ3QsdGhpcy5faW52b2tlVGFza0N1cnJab25lLGUsdCxuLG8pOnQuY2FsbGJhY2suYXBwbHkobixvKX1jYW5jZWxUYXNrKGUsdCl7bGV0IG47aWYodGhpcy5fY2FuY2VsVGFza1pTKW49dGhpcy5fY2FuY2VsVGFza1pTLm9uQ2FuY2VsVGFzayh0aGlzLl9jYW5jZWxUYXNrRGxndCx0aGlzLl9jYW5jZWxUYXNrQ3VyclpvbmUsZSx0KTtlbHNle2lmKCF0LmNhbmNlbEZuKXRocm93IEVycm9yKCJUYXNrIGlzIG5vdCBjYW5jZWxhYmxlIik7bj10LmNhbmNlbEZuKHQpfXJldHVybiBufWhhc1Rhc2soZSx0KXt0cnl7dGhpcy5faGFzVGFza1pTJiZ0aGlzLl9oYXNUYXNrWlMub25IYXNUYXNrKHRoaXMuX2hhc1Rhc2tEbGd0LHRoaXMuX2hhc1Rhc2tDdXJyWm9uZSxlLHQpfWNhdGNoKG4pe3RoaXMuaGFuZGxlRXJyb3IoZSxuKX19X3VwZGF0ZVRhc2tDb3VudChlLHQpe2NvbnN0IG49dGhpcy5fdGFza0NvdW50cyxvPW5bZV0scj1uW2VdPW8rdDtpZihyPDApdGhyb3cgbmV3IEVycm9yKCJNb3JlIHRhc2tzIGV4ZWN1dGVkIHRoZW4gd2VyZSBzY2hlZHVsZWQuIik7MCE9byYmMCE9cnx8dGhpcy5oYXNUYXNrKHRoaXMuem9uZSx7bWljcm9UYXNrOm4ubWljcm9UYXNrPjAsbWFjcm9UYXNrOm4ubWFjcm9UYXNrPjAsZXZlbnRUYXNrOm4uZXZlbnRUYXNrPjAsY2hhbmdlOmV9KX19Y2xhc3MgdXtjb25zdHJ1Y3Rvcih0LG4sbyxyLGEsaSl7aWYodGhpcy5fem9uZT1udWxsLHRoaXMucnVuQ291bnQ9MCx0aGlzLl96b25lRGVsZWdhdGVzPW51bGwsdGhpcy5fc3RhdGU9Im5vdFNjaGVkdWxlZCIsdGhpcy50eXBlPXQsdGhpcy5zb3VyY2U9bix0aGlzLmRhdGE9cix0aGlzLnNjaGVkdWxlRm49YSx0aGlzLmNhbmNlbEZuPWksIW8pdGhyb3cgbmV3IEVycm9yKCJjYWxsYmFjayBpcyBub3QgZGVmaW5lZCIpO3RoaXMuY2FsbGJhY2s9bztjb25zdCBzPXRoaXM7dGhpcy5pbnZva2U9dD09PVMmJnImJnIudXNlRz91Lmludm9rZVRhc2s6ZnVuY3Rpb24oKXtyZXR1cm4gdS5pbnZva2VUYXNrLmNhbGwoZSxzLHRoaXMsYXJndW1lbnRzKX19c3RhdGljIGludm9rZVRhc2soZSx0LG4pe2V8fChlPXRoaXMpLFArKzt0cnl7cmV0dXJuIGUucnVuQ291bnQrKyxlLnpvbmUucnVuVGFzayhlLHQsbil9ZmluYWxseXsxPT1QJiZ5KCksUC0tfX1nZXQgem9uZSgpe3JldHVybiB0aGlzLl96b25lfWdldCBzdGF0ZSgpe3JldHVybiB0aGlzLl9zdGF0ZX1jYW5jZWxTY2hlZHVsZVJlcXVlc3QoKXt0aGlzLl90cmFuc2l0aW9uVG8oXyxrKX1fdHJhbnNpdGlvblRvKGUsdCxuKXtpZih0aGlzLl9zdGF0ZSE9PXQmJnRoaXMuX3N0YXRlIT09bil0aHJvdyBuZXcgRXJyb3IoYCR7dGhpcy50eXBlfSAnJHt0aGlzLnNvdXJjZX0nOiBjYW4gbm90IHRyYW5zaXRpb24gdG8gJyR7ZX0nLCBleHBlY3Rpbmcgc3RhdGUgJyR7dH0nJHtuPyIgb3IgJyIrbisiJyI6IiJ9LCB3YXMgJyR7dGhpcy5fc3RhdGV9Jy5gKTt0aGlzLl9zdGF0ZT1lLGU9PV8mJih0aGlzLl96b25lRGVsZWdhdGVzPW51bGwpfXRvU3RyaW5nKCl7cmV0dXJuIHRoaXMuZGF0YSYmdm9pZCAwIT09dGhpcy5kYXRhLmhhbmRsZUlkP3RoaXMuZGF0YS5oYW5kbGVJZC50b1N0cmluZygpOk9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0aGlzKX10b0pTT04oKXtyZXR1cm57dHlwZTp0aGlzLnR5cGUsc3RhdGU6dGhpcy5zdGF0ZSxzb3VyY2U6dGhpcy5zb3VyY2Usem9uZTp0aGlzLnpvbmUubmFtZSxydW5Db3VudDp0aGlzLnJ1bkNvdW50fX19Y29uc3QgaD1hKCJzZXRUaW1lb3V0IikscD1hKCJQcm9taXNlIiksZj1hKCJ0aGVuIik7bGV0IGQsbT1bXSxnPSExO2Z1bmN0aW9uIFQodCl7aWYoMD09PVAmJjA9PT1tLmxlbmd0aClpZihkfHxlW3BdJiYoZD1lW3BdLnJlc29sdmUoMCkpLGQpe2xldCBlPWRbZl07ZXx8KGU9ZC50aGVuKSxlLmNhbGwoZCx5KX1lbHNlIGVbaF0oeSwwKTt0JiZtLnB1c2godCl9ZnVuY3Rpb24geSgpe2lmKCFnKXtmb3IoZz0hMDttLmxlbmd0aDspe2NvbnN0IHQ9bTttPVtdO2ZvcihsZXQgbj0wO248dC5sZW5ndGg7bisrKXtjb25zdCBvPXRbbl07dHJ5e28uem9uZS5ydW5UYXNrKG8sbnVsbCxudWxsKX1jYXRjaChlKXtILm9uVW5oYW5kbGVkRXJyb3IoZSl9fX1ILm1pY3JvdGFza0RyYWluRG9uZSgpLGc9ITF9fWNvbnN0IHY9e25hbWU6Ik5PIFpPTkUifSxfPSJub3RTY2hlZHVsZWQiLGs9InNjaGVkdWxpbmciLGI9InNjaGVkdWxlZCIsRT0icnVubmluZyIsdz0iY2FuY2VsaW5nIixMPSJ1bmtub3duIixNPSJtaWNyb1Rhc2siLEM9Im1hY3JvVGFzayIsUz0iZXZlbnRUYXNrIixEPXt9LEg9e3N5bWJvbDphLGN1cnJlbnRab25lRnJhbWU6KCk9Pk8sb25VbmhhbmRsZWRFcnJvcjpOLG1pY3JvdGFza0RyYWluRG9uZTpOLHNjaGVkdWxlTWljcm9UYXNrOlQsc2hvd1VuY2F1Z2h0RXJyb3I6KCk9PiFzW2EoImlnbm9yZUNvbnNvbGVFcnJvclVuY2F1Z2h0RXJyb3IiKV0scGF0Y2hFdmVudFRhcmdldDooKT0+W10scGF0Y2hPblByb3BlcnRpZXM6TixwYXRjaE1ldGhvZDooKT0+TixiaW5kQXJndW1lbnRzOigpPT5bXSxwYXRjaFRoZW46KCk9Pk4scGF0Y2hNYWNyb1Rhc2s6KCk9Pk4sc2V0TmF0aXZlUHJvbWlzZTplPT57ZSYmImZ1bmN0aW9uIj09dHlwZW9mIGUucmVzb2x2ZSYmKGQ9ZS5yZXNvbHZlKDApKX0scGF0Y2hFdmVudFByb3RvdHlwZTooKT0+Tixpc0lFT3JFZGdlOigpPT4hMSxnZXRHbG9iYWxPYmplY3RzOigpPT57fSxPYmplY3REZWZpbmVQcm9wZXJ0eTooKT0+TixPYmplY3RHZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I6KCk9Pnt9LE9iamVjdENyZWF0ZTooKT0+e30sQXJyYXlTbGljZTooKT0+W10scGF0Y2hDbGFzczooKT0+Tix3cmFwV2l0aEN1cnJlbnRab25lOigpPT5OLGZpbHRlclByb3BlcnRpZXM6KCk9PltdLGF0dGFjaE9yaWdpblRvUGF0Y2hlZDooKT0+TixfcmVkZWZpbmVQcm9wZXJ0eTooKT0+TixwYXRjaENhbGxiYWNrczooKT0+Tn07bGV0IE89e3BhcmVudDpudWxsLHpvbmU6bmV3IHMobnVsbCxudWxsKX0sWj1udWxsLFA9MDtmdW5jdGlvbiBOKCl7fW8oIlpvbmUiLCJab25lIiksZS5ab25lPXN9KCJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3d8fCJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZiYmc2VsZnx8Z2xvYmFsKSxab25lLl9fbG9hZF9wYXRjaCgiWm9uZUF3YXJlUHJvbWlzZSIsKGUsdCxuKT0+e2NvbnN0IG89T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcixyPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSxhPW4uc3ltYm9sLGk9W10scz0hMD09PWVbYSgiRElTQUJMRV9XUkFQUElOR19VTkNBVUdIVF9QUk9NSVNFX1JFSkVDVElPTiIpXSxjPWEoIlByb21pc2UiKSxsPWEoInRoZW4iKTtuLm9uVW5oYW5kbGVkRXJyb3I9ZT0+e2lmKG4uc2hvd1VuY2F1Z2h0RXJyb3IoKSl7Y29uc3QgdD1lJiZlLnJlamVjdGlvbjt0P2NvbnNvbGUuZXJyb3IoIlVuaGFuZGxlZCBQcm9taXNlIHJlamVjdGlvbjoiLHQgaW5zdGFuY2VvZiBFcnJvcj90Lm1lc3NhZ2U6dCwiOyBab25lOiIsZS56b25lLm5hbWUsIjsgVGFzazoiLGUudGFzayYmZS50YXNrLnNvdXJjZSwiOyBWYWx1ZToiLHQsdCBpbnN0YW5jZW9mIEVycm9yP3Quc3RhY2s6dm9pZCAwKTpjb25zb2xlLmVycm9yKGUpfX0sbi5taWNyb3Rhc2tEcmFpbkRvbmU9KCk9Pntmb3IoO2kubGVuZ3RoOyl7Y29uc3QgdD1pLnNoaWZ0KCk7dHJ5e3Quem9uZS5ydW5HdWFyZGVkKCgpPT57dGhyb3cgdH0pfWNhdGNoKGUpe2goZSl9fX07Y29uc3QgdT1hKCJ1bmhhbmRsZWRQcm9taXNlUmVqZWN0aW9uSGFuZGxlciIpO2Z1bmN0aW9uIGgoZSl7bi5vblVuaGFuZGxlZEVycm9yKGUpO3RyeXtjb25zdCBuPXRbdV07ImZ1bmN0aW9uIj09dHlwZW9mIG4mJm4uY2FsbCh0aGlzLGUpfWNhdGNoKG8pe319ZnVuY3Rpb24gcChlKXtyZXR1cm4gZSYmZS50aGVufWZ1bmN0aW9uIGYoZSl7cmV0dXJuIGV9ZnVuY3Rpb24gZChlKXtyZXR1cm4gSC5yZWplY3QoZSl9Y29uc3QgbT1hKCJzdGF0ZSIpLGc9YSgidmFsdWUiKSxUPWEoImZpbmFsbHkiKSx5PWEoInBhcmVudFByb21pc2VWYWx1ZSIpLHY9YSgicGFyZW50UHJvbWlzZVN0YXRlIiksXz1udWxsLGs9ITAsYj0hMTtmdW5jdGlvbiBFKGUsdCl7cmV0dXJuIG49Pnt0cnl7TChlLHQsbil9Y2F0Y2gobyl7TChlLCExLG8pfX19Y29uc3Qgdz1hKCJjdXJyZW50VGFza1RyYWNlIik7ZnVuY3Rpb24gTChlLG8sYSl7Y29uc3QgYz1mdW5jdGlvbigpe2xldCBlPSExO3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXtlfHwoZT0hMCx0LmFwcGx5KG51bGwsYXJndW1lbnRzKSl9fX0oKTtpZihlPT09YSl0aHJvdyBuZXcgVHlwZUVycm9yKCJQcm9taXNlIHJlc29sdmVkIHdpdGggaXRzZWxmIik7aWYoZVttXT09PV8pe2xldCBoPW51bGw7dHJ5eyJvYmplY3QiIT10eXBlb2YgYSYmImZ1bmN0aW9uIiE9dHlwZW9mIGF8fChoPWEmJmEudGhlbil9Y2F0Y2godSl7cmV0dXJuIGMoKCk9PntMKGUsITEsdSl9KSgpLGV9aWYobyE9PWImJmEgaW5zdGFuY2VvZiBIJiZhLmhhc093blByb3BlcnR5KG0pJiZhLmhhc093blByb3BlcnR5KGcpJiZhW21dIT09XylDKGEpLEwoZSxhW21dLGFbZ10pO2Vsc2UgaWYobyE9PWImJiJmdW5jdGlvbiI9PXR5cGVvZiBoKXRyeXtoLmNhbGwoYSxjKEUoZSxvKSksYyhFKGUsITEpKSl9Y2F0Y2godSl7YygoKT0+e0woZSwhMSx1KX0pKCl9ZWxzZXtlW21dPW87Y29uc3QgYz1lW2ddO2lmKGVbZ109YSxlW1RdPT09VCYmbz09PWsmJihlW21dPWVbdl0sZVtnXT1lW3ldKSxvPT09YiYmYSBpbnN0YW5jZW9mIEVycm9yKXtjb25zdCBlPXQuY3VycmVudFRhc2smJnQuY3VycmVudFRhc2suZGF0YSYmdC5jdXJyZW50VGFzay5kYXRhLl9fY3JlYXRpb25UcmFjZV9fO2UmJnIoYSx3LHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCx2YWx1ZTplfSl9Zm9yKGxldCB0PTA7dDxjLmxlbmd0aDspUyhlLGNbdCsrXSxjW3QrK10sY1t0KytdLGNbdCsrXSk7aWYoMD09Yy5sZW5ndGgmJm89PWIpe2VbbV09MDtsZXQgbz1hO2lmKCFzKXRyeXt0aHJvdyBuZXcgRXJyb3IoIlVuY2F1Z2h0IChpbiBwcm9taXNlKTogIisoKGw9YSkmJmwudG9TdHJpbmc9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nPyhsLmNvbnN0cnVjdG9yJiZsLmNvbnN0cnVjdG9yLm5hbWV8fCIiKSsiOiAiK0pTT04uc3RyaW5naWZ5KGwpOmw/bC50b1N0cmluZygpOk9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChsKSkrKGEmJmEuc3RhY2s/IlxuIithLnN0YWNrOiIiKSl9Y2F0Y2godSl7bz11fW8ucmVqZWN0aW9uPWEsby5wcm9taXNlPWUsby56b25lPXQuY3VycmVudCxvLnRhc2s9dC5jdXJyZW50VGFzayxpLnB1c2gobyksbi5zY2hlZHVsZU1pY3JvVGFzaygpfX19dmFyIGw7cmV0dXJuIGV9Y29uc3QgTT1hKCJyZWplY3Rpb25IYW5kbGVkSGFuZGxlciIpO2Z1bmN0aW9uIEMoZSl7aWYoMD09PWVbbV0pe3RyeXtjb25zdCBuPXRbTV07biYmImZ1bmN0aW9uIj09dHlwZW9mIG4mJm4uY2FsbCh0aGlzLHtyZWplY3Rpb246ZVtnXSxwcm9taXNlOmV9KX1jYXRjaChuKXt9ZVttXT1iO2ZvcihsZXQgdD0wO3Q8aS5sZW5ndGg7dCsrKWU9PT1pW3RdLnByb21pc2UmJmkuc3BsaWNlKHQsMSl9fWZ1bmN0aW9uIFMoZSx0LG4sbyxyKXtDKGUpO2NvbnN0IGE9ZVttXSxpPWE/ImZ1bmN0aW9uIj09dHlwZW9mIG8/bzpmOiJmdW5jdGlvbiI9PXR5cGVvZiByP3I6ZDt0LnNjaGVkdWxlTWljcm9UYXNrKCJQcm9taXNlLnRoZW4iLCgpPT57dHJ5e2NvbnN0IG89ZVtnXSxyPSEhbiYmVD09PW5bVF07ciYmKG5beV09byxuW3ZdPWEpO2NvbnN0IHM9dC5ydW4oaSx2b2lkIDAsciYmaSE9PWQmJmkhPT1mP1tdOltvXSk7TChuLCEwLHMpfWNhdGNoKG8pe0wobiwhMSxvKX19LG4pfWNvbnN0IEQ9ZnVuY3Rpb24oKXt9O2NsYXNzIEh7c3RhdGljIHRvU3RyaW5nKCl7cmV0dXJuImZ1bmN0aW9uIFpvbmVBd2FyZVByb21pc2UoKSB7IFtuYXRpdmUgY29kZV0gfSJ9c3RhdGljIHJlc29sdmUoZSl7cmV0dXJuIEwobmV3IHRoaXMobnVsbCksayxlKX1zdGF0aWMgcmVqZWN0KGUpe3JldHVybiBMKG5ldyB0aGlzKG51bGwpLGIsZSl9c3RhdGljIHJhY2UoZSl7bGV0IHQsbixvPW5ldyB0aGlzKChlLG8pPT57dD1lLG49b30pO2Z1bmN0aW9uIHIoZSl7dChlKX1mdW5jdGlvbiBhKGUpe24oZSl9Zm9yKGxldCBpIG9mIGUpcChpKXx8KGk9dGhpcy5yZXNvbHZlKGkpKSxpLnRoZW4ocixhKTtyZXR1cm4gb31zdGF0aWMgYWxsKGUpe3JldHVybiBILmFsbFdpdGhDYWxsYmFjayhlKX1zdGF0aWMgYWxsU2V0dGxlZChlKXtyZXR1cm4odGhpcyYmdGhpcy5wcm90b3R5cGUgaW5zdGFuY2VvZiBIP3RoaXM6SCkuYWxsV2l0aENhbGxiYWNrKGUse3RoZW5DYWxsYmFjazplPT4oe3N0YXR1czoiZnVsZmlsbGVkIix2YWx1ZTplfSksZXJyb3JDYWxsYmFjazplPT4oe3N0YXR1czoicmVqZWN0ZWQiLHJlYXNvbjplfSl9KX1zdGF0aWMgYWxsV2l0aENhbGxiYWNrKGUsdCl7bGV0IG4sbyxyPW5ldyB0aGlzKChlLHQpPT57bj1lLG89dH0pLGE9MixpPTA7Y29uc3Qgcz1bXTtmb3IobGV0IGwgb2YgZSl7cChsKXx8KGw9dGhpcy5yZXNvbHZlKGwpKTtjb25zdCBlPWk7dHJ5e2wudGhlbihvPT57c1tlXT10P3QudGhlbkNhbGxiYWNrKG8pOm8sYS0tLDA9PT1hJiZuKHMpfSxyPT57dD8oc1tlXT10LmVycm9yQ2FsbGJhY2sociksYS0tLDA9PT1hJiZuKHMpKTpvKHIpfSl9Y2F0Y2goYyl7byhjKX1hKyssaSsrfXJldHVybiBhLT0yLDA9PT1hJiZuKHMpLHJ9Y29uc3RydWN0b3IoZSl7Y29uc3QgdD10aGlzO2lmKCEodCBpbnN0YW5jZW9mIEgpKXRocm93IG5ldyBFcnJvcigiTXVzdCBiZSBhbiBpbnN0YW5jZW9mIFByb21pc2UuIik7dFttXT1fLHRbZ109W107dHJ5e2UmJmUoRSh0LGspLEUodCxiKSl9Y2F0Y2gobil7TCh0LCExLG4pfX1nZXRbU3ltYm9sLnRvU3RyaW5nVGFnXSgpe3JldHVybiJQcm9taXNlIn1nZXRbU3ltYm9sLnNwZWNpZXNdKCl7cmV0dXJuIEh9dGhlbihlLG4pe2xldCBvPXRoaXMuY29uc3RydWN0b3JbU3ltYm9sLnNwZWNpZXNdO28mJiJmdW5jdGlvbiI9PXR5cGVvZiBvfHwobz10aGlzLmNvbnN0cnVjdG9yfHxIKTtjb25zdCByPW5ldyBvKEQpLGE9dC5jdXJyZW50O3JldHVybiB0aGlzW21dPT1fP3RoaXNbZ10ucHVzaChhLHIsZSxuKTpTKHRoaXMsYSxyLGUsbikscn1jYXRjaChlKXtyZXR1cm4gdGhpcy50aGVuKG51bGwsZSl9ZmluYWxseShlKXtsZXQgbj10aGlzLmNvbnN0cnVjdG9yW1N5bWJvbC5zcGVjaWVzXTtuJiYiZnVuY3Rpb24iPT10eXBlb2Ygbnx8KG49SCk7Y29uc3Qgbz1uZXcgbihEKTtvW1RdPVQ7Y29uc3Qgcj10LmN1cnJlbnQ7cmV0dXJuIHRoaXNbbV09PV8/dGhpc1tnXS5wdXNoKHIsbyxlLGUpOlModGhpcyxyLG8sZSxlKSxvfX1ILnJlc29sdmU9SC5yZXNvbHZlLEgucmVqZWN0PUgucmVqZWN0LEgucmFjZT1ILnJhY2UsSC5hbGw9SC5hbGw7Y29uc3QgTz1lW2NdPWUuUHJvbWlzZSxaPXQuX19zeW1ib2xfXygiWm9uZUF3YXJlUHJvbWlzZSIpO2xldCBQPW8oZSwiUHJvbWlzZSIpO1AmJiFQLmNvbmZpZ3VyYWJsZXx8KFAmJmRlbGV0ZSBQLndyaXRhYmxlLFAmJmRlbGV0ZSBQLnZhbHVlLFB8fChQPXtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMH0pLFAuZ2V0PWZ1bmN0aW9uKCl7cmV0dXJuIGVbWl0/ZVtaXTplW2NdfSxQLnNldD1mdW5jdGlvbih0KXt0PT09SD9lW1pdPXQ6KGVbY109dCx0LnByb3RvdHlwZVtsXXx8eih0KSxuLnNldE5hdGl2ZVByb21pc2UodCkpfSxyKGUsIlByb21pc2UiLFApKSxlLlByb21pc2U9SDtjb25zdCBOPWEoInRoZW5QYXRjaGVkIik7ZnVuY3Rpb24geihlKXtjb25zdCB0PWUucHJvdG90eXBlLG49byh0LCJ0aGVuIik7aWYobiYmKCExPT09bi53cml0YWJsZXx8IW4uY29uZmlndXJhYmxlKSlyZXR1cm47Y29uc3Qgcj10LnRoZW47dFtsXT1yLGUucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbmV3IEgoKGUsdCk9PntyLmNhbGwodGhpcyxlLHQpfSkudGhlbihlLHQpfSxlW05dPSEwfWlmKG4ucGF0Y2hUaGVuPXosTyl7eihPKTtjb25zdCB0PWUuZmV0Y2g7ImZ1bmN0aW9uIj09dHlwZW9mIHQmJihlW24uc3ltYm9sKCJmZXRjaCIpXT10LGUuZmV0Y2g9KEE9dCxmdW5jdGlvbigpe2xldCBlPUEuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGUgaW5zdGFuY2VvZiBIKXJldHVybiBlO2xldCB0PWUuY29uc3RydWN0b3I7cmV0dXJuIHRbTl18fHoodCksZX0pKX12YXIgQTtyZXR1cm4gUHJvbWlzZVt0Ll9fc3ltYm9sX18oInVuY2F1Z2h0UHJvbWlzZUVycm9ycyIpXT1pLEh9KTtjb25zdCBlPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IsdD1PYmplY3QuZGVmaW5lUHJvcGVydHksbj1PYmplY3QuZ2V0UHJvdG90eXBlT2Ysbz1PYmplY3QuY3JlYXRlLHI9QXJyYXkucHJvdG90eXBlLnNsaWNlLGE9ImFkZEV2ZW50TGlzdGVuZXIiLGk9InJlbW92ZUV2ZW50TGlzdGVuZXIiLHM9Wm9uZS5fX3N5bWJvbF9fKGEpLGM9Wm9uZS5fX3N5bWJvbF9fKGkpLGw9InRydWUiLHU9ImZhbHNlIixoPVpvbmUuX19zeW1ib2xfXygiIik7ZnVuY3Rpb24gcChlLHQpe3JldHVybiBab25lLmN1cnJlbnQud3JhcChlLHQpfWZ1bmN0aW9uIGYoZSx0LG4sbyxyKXtyZXR1cm4gWm9uZS5jdXJyZW50LnNjaGVkdWxlTWFjcm9UYXNrKGUsdCxuLG8scil9Y29uc3QgZD1ab25lLl9fc3ltYm9sX18sbT0idW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdyxnPW0/d2luZG93OnZvaWQgMCxUPW0mJmd8fCJvYmplY3QiPT10eXBlb2Ygc2VsZiYmc2VsZnx8Z2xvYmFsLHk9W251bGxdO2Z1bmN0aW9uIHYoZSx0KXtmb3IobGV0IG49ZS5sZW5ndGgtMTtuPj0wO24tLSkiZnVuY3Rpb24iPT10eXBlb2YgZVtuXSYmKGVbbl09cChlW25dLHQrIl8iK24pKTtyZXR1cm4gZX1mdW5jdGlvbiBfKGUpe3JldHVybiFlfHwhMSE9PWUud3JpdGFibGUmJiEoImZ1bmN0aW9uIj09dHlwZW9mIGUuZ2V0JiZ2b2lkIDA9PT1lLnNldCl9Y29uc3Qgaz0idW5kZWZpbmVkIiE9dHlwZW9mIFdvcmtlckdsb2JhbFNjb3BlJiZzZWxmIGluc3RhbmNlb2YgV29ya2VyR2xvYmFsU2NvcGUsYj0hKCJudyJpbiBUKSYmdm9pZCAwIT09VC5wcm9jZXNzJiYiW29iamVjdCBwcm9jZXNzXSI9PT17fS50b1N0cmluZy5jYWxsKFQucHJvY2VzcyksRT0hYiYmIWsmJiEoIW18fCFnLkhUTUxFbGVtZW50KSx3PXZvaWQgMCE9PVQucHJvY2VzcyYmIltvYmplY3QgcHJvY2Vzc10iPT09e30udG9TdHJpbmcuY2FsbChULnByb2Nlc3MpJiYhayYmISghbXx8IWcuSFRNTEVsZW1lbnQpLEw9e30sTT1mdW5jdGlvbihlKXtpZighKGU9ZXx8VC5ldmVudCkpcmV0dXJuO2xldCB0PUxbZS50eXBlXTt0fHwodD1MW2UudHlwZV09ZCgiT05fUFJPUEVSVFkiK2UudHlwZSkpO2NvbnN0IG49dGhpc3x8ZS50YXJnZXR8fFQsbz1uW3RdO2xldCByO2lmKEUmJm49PT1nJiYiZXJyb3IiPT09ZS50eXBlKXtjb25zdCB0PWU7cj1vJiZvLmNhbGwodGhpcyx0Lm1lc3NhZ2UsdC5maWxlbmFtZSx0LmxpbmVubyx0LmNvbG5vLHQuZXJyb3IpLCEwPT09ciYmZS5wcmV2ZW50RGVmYXVsdCgpfWVsc2Ugcj1vJiZvLmFwcGx5KHRoaXMsYXJndW1lbnRzKSxudWxsPT1yfHxyfHxlLnByZXZlbnREZWZhdWx0KCk7cmV0dXJuIHJ9O2Z1bmN0aW9uIEMobixvLHIpe2xldCBhPWUobixvKTtpZighYSYmciYmZShyLG8pJiYoYT17ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITB9KSwhYXx8IWEuY29uZmlndXJhYmxlKXJldHVybjtjb25zdCBpPWQoIm9uIitvKyJwYXRjaGVkIik7aWYobi5oYXNPd25Qcm9wZXJ0eShpKSYmbltpXSlyZXR1cm47ZGVsZXRlIGEud3JpdGFibGUsZGVsZXRlIGEudmFsdWU7Y29uc3Qgcz1hLmdldCxjPWEuc2V0LGw9by5zdWJzdHIoMik7bGV0IHU9TFtsXTt1fHwodT1MW2xdPWQoIk9OX1BST1BFUlRZIitsKSksYS5zZXQ9ZnVuY3Rpb24oZSl7bGV0IHQ9dGhpczt0fHxuIT09VHx8KHQ9VCksdCYmKHRbdV0mJnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihsLE0pLGMmJmMuYXBwbHkodCx5KSwiZnVuY3Rpb24iPT10eXBlb2YgZT8odFt1XT1lLHQuYWRkRXZlbnRMaXN0ZW5lcihsLE0sITEpKTp0W3VdPW51bGwpfSxhLmdldD1mdW5jdGlvbigpe2xldCBlPXRoaXM7aWYoZXx8biE9PVR8fChlPVQpLCFlKXJldHVybiBudWxsO2NvbnN0IHQ9ZVt1XTtpZih0KXJldHVybiB0O2lmKHMpe2xldCB0PXMmJnMuY2FsbCh0aGlzKTtpZih0KXJldHVybiBhLnNldC5jYWxsKHRoaXMsdCksImZ1bmN0aW9uIj09dHlwZW9mIGUucmVtb3ZlQXR0cmlidXRlJiZlLnJlbW92ZUF0dHJpYnV0ZShvKSx0fXJldHVybiBudWxsfSx0KG4sbyxhKSxuW2ldPSEwfWZ1bmN0aW9uIFMoZSx0LG4pe2lmKHQpZm9yKGxldCBvPTA7bzx0Lmxlbmd0aDtvKyspQyhlLCJvbiIrdFtvXSxuKTtlbHNle2NvbnN0IHQ9W107Zm9yKGNvbnN0IG4gaW4gZSkib24iPT1uLnN1YnN0cigwLDIpJiZ0LnB1c2gobik7Zm9yKGxldCBvPTA7bzx0Lmxlbmd0aDtvKyspQyhlLHRbb10sbil9fWNvbnN0IEQ9ZCgib3JpZ2luYWxJbnN0YW5jZSIpO2Z1bmN0aW9uIEgoZSl7Y29uc3Qgbj1UW2VdO2lmKCFuKXJldHVybjtUW2QoZSldPW4sVFtlXT1mdW5jdGlvbigpe2NvbnN0IHQ9dihhcmd1bWVudHMsZSk7c3dpdGNoKHQubGVuZ3RoKXtjYXNlIDA6dGhpc1tEXT1uZXcgbjticmVhaztjYXNlIDE6dGhpc1tEXT1uZXcgbih0WzBdKTticmVhaztjYXNlIDI6dGhpc1tEXT1uZXcgbih0WzBdLHRbMV0pO2JyZWFrO2Nhc2UgMzp0aGlzW0RdPW5ldyBuKHRbMF0sdFsxXSx0WzJdKTticmVhaztjYXNlIDQ6dGhpc1tEXT1uZXcgbih0WzBdLHRbMV0sdFsyXSx0WzNdKTticmVhaztkZWZhdWx0OnRocm93IG5ldyBFcnJvcigiQXJnIGxpc3QgdG9vIGxvbmcuIil9fSxQKFRbZV0sbik7Y29uc3Qgbz1uZXcgbigoZnVuY3Rpb24oKXt9KSk7bGV0IHI7Zm9yKHIgaW4gbykiWE1MSHR0cFJlcXVlc3QiPT09ZSYmInJlc3BvbnNlQmxvYiI9PT1yfHxmdW5jdGlvbihuKXsiZnVuY3Rpb24iPT10eXBlb2Ygb1tuXT9UW2VdLnByb3RvdHlwZVtuXT1mdW5jdGlvbigpe3JldHVybiB0aGlzW0RdW25dLmFwcGx5KHRoaXNbRF0sYXJndW1lbnRzKX06dChUW2VdLnByb3RvdHlwZSxuLHtzZXQ6ZnVuY3Rpb24odCl7ImZ1bmN0aW9uIj09dHlwZW9mIHQ/KHRoaXNbRF1bbl09cCh0LGUrIi4iK24pLFAodGhpc1tEXVtuXSx0KSk6dGhpc1tEXVtuXT10fSxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc1tEXVtuXX19KX0ocik7Zm9yKHIgaW4gbikicHJvdG90eXBlIiE9PXImJm4uaGFzT3duUHJvcGVydHkocikmJihUW2VdW3JdPW5bcl0pfWZ1bmN0aW9uIE8odCxvLHIpe2xldCBhPXQ7Zm9yKDthJiYhYS5oYXNPd25Qcm9wZXJ0eShvKTspYT1uKGEpOyFhJiZ0W29dJiYoYT10KTtjb25zdCBpPWQobyk7bGV0IHM9bnVsbDtpZihhJiYhKHM9YVtpXSkmJihzPWFbaV09YVtvXSxfKGEmJmUoYSxvKSkpKXtjb25zdCBlPXIocyxpLG8pO2Fbb109ZnVuY3Rpb24oKXtyZXR1cm4gZSh0aGlzLGFyZ3VtZW50cyl9LFAoYVtvXSxzKX1yZXR1cm4gc31mdW5jdGlvbiBaKGUsdCxuKXtsZXQgbz1udWxsO2Z1bmN0aW9uIHIoZSl7Y29uc3QgdD1lLmRhdGE7cmV0dXJuIHQuYXJnc1t0LmNiSWR4XT1mdW5jdGlvbigpe2UuaW52b2tlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sby5hcHBseSh0LnRhcmdldCx0LmFyZ3MpLGV9bz1PKGUsdCxlPT5mdW5jdGlvbih0LG8pe2NvbnN0IGE9bih0LG8pO3JldHVybiBhLmNiSWR4Pj0wJiYiZnVuY3Rpb24iPT10eXBlb2Ygb1thLmNiSWR4XT9mKGEubmFtZSxvW2EuY2JJZHhdLGEscik6ZS5hcHBseSh0LG8pfSl9ZnVuY3Rpb24gUChlLHQpe2VbZCgiT3JpZ2luYWxEZWxlZ2F0ZSIpXT10fWxldCBOPSExLHo9ITE7ZnVuY3Rpb24gQSgpe3RyeXtjb25zdCBlPWcubmF2aWdhdG9yLnVzZXJBZ2VudDtpZigtMSE9PWUuaW5kZXhPZigiTVNJRSAiKXx8LTEhPT1lLmluZGV4T2YoIlRyaWRlbnQvIikpcmV0dXJuITB9Y2F0Y2goZSl7fXJldHVybiExfWZ1bmN0aW9uIEkoKXtpZihOKXJldHVybiB6O049ITA7dHJ5e2NvbnN0IGU9Zy5uYXZpZ2F0b3IudXNlckFnZW50Oy0xPT09ZS5pbmRleE9mKCJNU0lFICIpJiYtMT09PWUuaW5kZXhPZigiVHJpZGVudC8iKSYmLTE9PT1lLmluZGV4T2YoIkVkZ2UvIil8fCh6PSEwKX1jYXRjaChlKXt9cmV0dXJuIHp9Wm9uZS5fX2xvYWRfcGF0Y2goInRvU3RyaW5nIixlPT57Y29uc3QgdD1GdW5jdGlvbi5wcm90b3R5cGUudG9TdHJpbmcsbj1kKCJPcmlnaW5hbERlbGVnYXRlIiksbz1kKCJQcm9taXNlIikscj1kKCJFcnJvciIpLGE9ZnVuY3Rpb24oKXtpZigiZnVuY3Rpb24iPT10eXBlb2YgdGhpcyl7Y29uc3QgYT10aGlzW25dO2lmKGEpcmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIGE/dC5jYWxsKGEpOk9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhKTtpZih0aGlzPT09UHJvbWlzZSl7Y29uc3Qgbj1lW29dO2lmKG4pcmV0dXJuIHQuY2FsbChuKX1pZih0aGlzPT09RXJyb3Ipe2NvbnN0IG49ZVtyXTtpZihuKXJldHVybiB0LmNhbGwobil9fXJldHVybiB0LmNhbGwodGhpcyl9O2Fbbl09dCxGdW5jdGlvbi5wcm90b3R5cGUudG9TdHJpbmc9YTtjb25zdCBpPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzIGluc3RhbmNlb2YgUHJvbWlzZT8iW29iamVjdCBQcm9taXNlXSI6aS5jYWxsKHRoaXMpfX0pO2xldCBqPSExO2lmKCJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93KXRyeXtjb25zdCBlPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwicGFzc2l2ZSIse2dldDpmdW5jdGlvbigpe2o9ITB9fSk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoInRlc3QiLGUsZSksd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoInRlc3QiLGUsZSl9Y2F0Y2goaGUpe2o9ITF9Y29uc3QgUj17dXNlRzohMH0seD17fSxGPXt9LFY9bmV3IFJlZ0V4cCgiXiIraCsiKFxcdyspKHRydWV8ZmFsc2UpJCIpLFU9ZCgicHJvcGFnYXRpb25TdG9wcGVkIik7ZnVuY3Rpb24gcShlLHQpe2NvbnN0IG49KHQ/dChlKTplKSt1LG89KHQ/dChlKTplKStsLHI9aCtuLGE9aCtvO3hbZV09e30seFtlXS5mYWxzZT1yLHhbZV0udHJ1ZT1hfWZ1bmN0aW9uIEIoZSx0LG8pe2NvbnN0IHI9byYmby5hZGR8fGEscz1vJiZvLnJtfHxpLGM9byYmby5saXN0ZW5lcnN8fCJldmVudExpc3RlbmVycyIscD1vJiZvLnJtQWxsfHwicmVtb3ZlQWxsTGlzdGVuZXJzIixmPWQociksbT0iLiIrcisiOiIsZz1mdW5jdGlvbihlLHQsbil7aWYoZS5pc1JlbW92ZWQpcmV0dXJuO2NvbnN0IG89ZS5jYWxsYmFjazsib2JqZWN0Ij09dHlwZW9mIG8mJm8uaGFuZGxlRXZlbnQmJihlLmNhbGxiYWNrPWU9Pm8uaGFuZGxlRXZlbnQoZSksZS5vcmlnaW5hbERlbGVnYXRlPW8pLGUuaW52b2tlKGUsdCxbbl0pO2NvbnN0IHI9ZS5vcHRpb25zO3ImJiJvYmplY3QiPT10eXBlb2YgciYmci5vbmNlJiZ0W3NdLmNhbGwodCxuLnR5cGUsZS5vcmlnaW5hbERlbGVnYXRlP2Uub3JpZ2luYWxEZWxlZ2F0ZTplLmNhbGxiYWNrLHIpfSxUPWZ1bmN0aW9uKHQpe2lmKCEodD10fHxlLmV2ZW50KSlyZXR1cm47Y29uc3Qgbj10aGlzfHx0LnRhcmdldHx8ZSxvPW5beFt0LnR5cGVdLmZhbHNlXTtpZihvKWlmKDE9PT1vLmxlbmd0aClnKG9bMF0sbix0KTtlbHNle2NvbnN0IGU9by5zbGljZSgpO2ZvcihsZXQgbz0wO288ZS5sZW5ndGgmJighdHx8ITAhPT10W1VdKTtvKyspZyhlW29dLG4sdCl9fSx5PWZ1bmN0aW9uKHQpe2lmKCEodD10fHxlLmV2ZW50KSlyZXR1cm47Y29uc3Qgbj10aGlzfHx0LnRhcmdldHx8ZSxvPW5beFt0LnR5cGVdLnRydWVdO2lmKG8paWYoMT09PW8ubGVuZ3RoKWcob1swXSxuLHQpO2Vsc2V7Y29uc3QgZT1vLnNsaWNlKCk7Zm9yKGxldCBvPTA7bzxlLmxlbmd0aCYmKCF0fHwhMCE9PXRbVV0pO28rKylnKGVbb10sbix0KX19O2Z1bmN0aW9uIHYodCxvKXtpZighdClyZXR1cm4hMTtsZXQgYT0hMDtvJiZ2b2lkIDAhPT1vLnVzZUcmJihhPW8udXNlRyk7Y29uc3QgaT1vJiZvLnZoO2xldCBnPSEwO28mJnZvaWQgMCE9PW8uY2hrRHVwJiYoZz1vLmNoa0R1cCk7bGV0IHY9ITE7byYmdm9pZCAwIT09by5ydCYmKHY9by5ydCk7bGV0IF89dDtmb3IoO18mJiFfLmhhc093blByb3BlcnR5KHIpOylfPW4oXyk7aWYoIV8mJnRbcl0mJihfPXQpLCFfKXJldHVybiExO2lmKF9bZl0pcmV0dXJuITE7Y29uc3Qgaz1vJiZvLmV2ZW50TmFtZVRvU3RyaW5nLEU9e30sdz1fW2ZdPV9bcl0sTD1fW2QocyldPV9bc10sTT1fW2QoYyldPV9bY10sQz1fW2QocCldPV9bcF07bGV0IFM7ZnVuY3Rpb24gRChlLHQpe3JldHVybiFqJiYib2JqZWN0Ij09dHlwZW9mIGUmJmU/ISFlLmNhcHR1cmU6aiYmdD8iYm9vbGVhbiI9PXR5cGVvZiBlP3tjYXB0dXJlOmUscGFzc2l2ZTohMH06ZT8ib2JqZWN0Ij09dHlwZW9mIGUmJiExIT09ZS5wYXNzaXZlP09iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSxlKSx7cGFzc2l2ZTohMH0pOmU6e3Bhc3NpdmU6ITB9OmV9byYmby5wcmVwZW5kJiYoUz1fW2Qoby5wcmVwZW5kKV09X1tvLnByZXBlbmRdKTtjb25zdCBIPWE/ZnVuY3Rpb24oZSl7aWYoIUUuaXNFeGlzdGluZylyZXR1cm4gdy5jYWxsKEUudGFyZ2V0LEUuZXZlbnROYW1lLEUuY2FwdHVyZT95OlQsRS5vcHRpb25zKX06ZnVuY3Rpb24oZSl7cmV0dXJuIHcuY2FsbChFLnRhcmdldCxFLmV2ZW50TmFtZSxlLmludm9rZSxFLm9wdGlvbnMpfSxPPWE/ZnVuY3Rpb24oZSl7aWYoIWUuaXNSZW1vdmVkKXtjb25zdCB0PXhbZS5ldmVudE5hbWVdO2xldCBuO3QmJihuPXRbZS5jYXB0dXJlP2w6dV0pO2NvbnN0IG89biYmZS50YXJnZXRbbl07aWYobylmb3IobGV0IHI9MDtyPG8ubGVuZ3RoO3IrKylpZihvW3JdPT09ZSl7by5zcGxpY2UociwxKSxlLmlzUmVtb3ZlZD0hMCwwPT09by5sZW5ndGgmJihlLmFsbFJlbW92ZWQ9ITAsZS50YXJnZXRbbl09bnVsbCk7YnJlYWt9fWlmKGUuYWxsUmVtb3ZlZClyZXR1cm4gTC5jYWxsKGUudGFyZ2V0LGUuZXZlbnROYW1lLGUuY2FwdHVyZT95OlQsZS5vcHRpb25zKX06ZnVuY3Rpb24oZSl7cmV0dXJuIEwuY2FsbChlLnRhcmdldCxlLmV2ZW50TmFtZSxlLmludm9rZSxlLm9wdGlvbnMpfSxaPW8mJm8uZGlmZj9vLmRpZmY6ZnVuY3Rpb24oZSx0KXtjb25zdCBuPXR5cGVvZiB0O3JldHVybiJmdW5jdGlvbiI9PT1uJiZlLmNhbGxiYWNrPT09dHx8Im9iamVjdCI9PT1uJiZlLm9yaWdpbmFsRGVsZWdhdGU9PT10fSxOPVpvbmVbZCgiQkxBQ0tfTElTVEVEX0VWRU5UUyIpXSx6PWVbZCgiUEFTU0lWRV9FVkVOVFMiKV0sQT1mdW5jdGlvbih0LG4scixzLGM9ITEsaD0hMSl7cmV0dXJuIGZ1bmN0aW9uKCl7Y29uc3QgcD10aGlzfHxlO2xldCBmPWFyZ3VtZW50c1swXTtvJiZvLnRyYW5zZmVyRXZlbnROYW1lJiYoZj1vLnRyYW5zZmVyRXZlbnROYW1lKGYpKTtsZXQgZD1hcmd1bWVudHNbMV07aWYoIWQpcmV0dXJuIHQuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGImJiJ1bmNhdWdodEV4Y2VwdGlvbiI9PT1mKXJldHVybiB0LmFwcGx5KHRoaXMsYXJndW1lbnRzKTtsZXQgbT0hMTtpZigiZnVuY3Rpb24iIT10eXBlb2YgZCl7aWYoIWQuaGFuZGxlRXZlbnQpcmV0dXJuIHQuYXBwbHkodGhpcyxhcmd1bWVudHMpO209ITB9aWYoaSYmIWkodCxkLHAsYXJndW1lbnRzKSlyZXR1cm47Y29uc3QgVD1qJiYhIXomJi0xIT09ei5pbmRleE9mKGYpLHk9RChhcmd1bWVudHNbMl0sVCk7aWYoTilmb3IobGV0IGU9MDtlPE4ubGVuZ3RoO2UrKylpZihmPT09TltlXSlyZXR1cm4gVD90LmNhbGwocCxmLGQseSk6dC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7Y29uc3Qgdj0hIXkmJigiYm9vbGVhbiI9PXR5cGVvZiB5fHx5LmNhcHR1cmUpLF89ISgheXx8Im9iamVjdCIhPXR5cGVvZiB5KSYmeS5vbmNlLHc9Wm9uZS5jdXJyZW50O2xldCBMPXhbZl07THx8KHEoZixrKSxMPXhbZl0pO2NvbnN0IE09TFt2P2w6dV07bGV0IEMsUz1wW01dLEg9ITE7aWYoUyl7aWYoSD0hMCxnKWZvcihsZXQgZT0wO2U8Uy5sZW5ndGg7ZSsrKWlmKFooU1tlXSxkKSlyZXR1cm59ZWxzZSBTPXBbTV09W107Y29uc3QgTz1wLmNvbnN0cnVjdG9yLm5hbWUsUD1GW09dO1AmJihDPVBbZl0pLEN8fChDPU8rbisoaz9rKGYpOmYpKSxFLm9wdGlvbnM9eSxfJiYoRS5vcHRpb25zLm9uY2U9ITEpLEUudGFyZ2V0PXAsRS5jYXB0dXJlPXYsRS5ldmVudE5hbWU9ZixFLmlzRXhpc3Rpbmc9SDtjb25zdCBBPWE/Ujp2b2lkIDA7QSYmKEEudGFza0RhdGE9RSk7Y29uc3QgST13LnNjaGVkdWxlRXZlbnRUYXNrKEMsZCxBLHIscyk7cmV0dXJuIEUudGFyZ2V0PW51bGwsQSYmKEEudGFza0RhdGE9bnVsbCksXyYmKHkub25jZT0hMCksKGp8fCJib29sZWFuIiE9dHlwZW9mIEkub3B0aW9ucykmJihJLm9wdGlvbnM9eSksSS50YXJnZXQ9cCxJLmNhcHR1cmU9dixJLmV2ZW50TmFtZT1mLG0mJihJLm9yaWdpbmFsRGVsZWdhdGU9ZCksaD9TLnVuc2hpZnQoSSk6Uy5wdXNoKEkpLGM/cDp2b2lkIDB9fTtyZXR1cm4gX1tyXT1BKHcsbSxILE8sdiksUyYmKF8ucHJlcGVuZExpc3RlbmVyPUEoUywiLnByZXBlbmRMaXN0ZW5lcjoiLChmdW5jdGlvbihlKXtyZXR1cm4gUy5jYWxsKEUudGFyZ2V0LEUuZXZlbnROYW1lLGUuaW52b2tlLEUub3B0aW9ucyl9KSxPLHYsITApKSxfW3NdPWZ1bmN0aW9uKCl7Y29uc3QgdD10aGlzfHxlO2xldCBuPWFyZ3VtZW50c1swXTtvJiZvLnRyYW5zZmVyRXZlbnROYW1lJiYobj1vLnRyYW5zZmVyRXZlbnROYW1lKG4pKTtjb25zdCByPWFyZ3VtZW50c1syXSxhPSEhciYmKCJib29sZWFuIj09dHlwZW9mIHJ8fHIuY2FwdHVyZSkscz1hcmd1bWVudHNbMV07aWYoIXMpcmV0dXJuIEwuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGkmJiFpKEwscyx0LGFyZ3VtZW50cykpcmV0dXJuO2NvbnN0IGM9eFtuXTtsZXQgcDtjJiYocD1jW2E/bDp1XSk7Y29uc3QgZj1wJiZ0W3BdO2lmKGYpZm9yKGxldCBlPTA7ZTxmLmxlbmd0aDtlKyspe2NvbnN0IG89ZltlXTtpZihaKG8scykpcmV0dXJuIGYuc3BsaWNlKGUsMSksby5pc1JlbW92ZWQ9ITAsMD09PWYubGVuZ3RoJiYoby5hbGxSZW1vdmVkPSEwLHRbcF09bnVsbCwic3RyaW5nIj09dHlwZW9mIG4pJiYodFtoKyJPTl9QUk9QRVJUWSIrbl09bnVsbCksby56b25lLmNhbmNlbFRhc2sobyksdj90OnZvaWQgMH1yZXR1cm4gTC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LF9bY109ZnVuY3Rpb24oKXtjb25zdCB0PXRoaXN8fGU7bGV0IG49YXJndW1lbnRzWzBdO28mJm8udHJhbnNmZXJFdmVudE5hbWUmJihuPW8udHJhbnNmZXJFdmVudE5hbWUobikpO2NvbnN0IHI9W10sYT1HKHQsaz9rKG4pOm4pO2ZvcihsZXQgZT0wO2U8YS5sZW5ndGg7ZSsrKXtjb25zdCB0PWFbZV07ci5wdXNoKHQub3JpZ2luYWxEZWxlZ2F0ZT90Lm9yaWdpbmFsRGVsZWdhdGU6dC5jYWxsYmFjayl9cmV0dXJuIHJ9LF9bcF09ZnVuY3Rpb24oKXtjb25zdCB0PXRoaXN8fGU7bGV0IG49YXJndW1lbnRzWzBdO2lmKG4pe28mJm8udHJhbnNmZXJFdmVudE5hbWUmJihuPW8udHJhbnNmZXJFdmVudE5hbWUobikpO2NvbnN0IGU9eFtuXTtpZihlKXtjb25zdCBvPXRbZS5mYWxzZV0scj10W2UudHJ1ZV07aWYobyl7Y29uc3QgZT1vLnNsaWNlKCk7Zm9yKGxldCB0PTA7dDxlLmxlbmd0aDt0Kyspe2NvbnN0IG89ZVt0XTt0aGlzW3NdLmNhbGwodGhpcyxuLG8ub3JpZ2luYWxEZWxlZ2F0ZT9vLm9yaWdpbmFsRGVsZWdhdGU6by5jYWxsYmFjayxvLm9wdGlvbnMpfX1pZihyKXtjb25zdCBlPXIuc2xpY2UoKTtmb3IobGV0IHQ9MDt0PGUubGVuZ3RoO3QrKyl7Y29uc3Qgbz1lW3RdO3RoaXNbc10uY2FsbCh0aGlzLG4sby5vcmlnaW5hbERlbGVnYXRlP28ub3JpZ2luYWxEZWxlZ2F0ZTpvLmNhbGxiYWNrLG8ub3B0aW9ucyl9fX19ZWxzZXtjb25zdCBlPU9iamVjdC5rZXlzKHQpO2ZvcihsZXQgdD0wO3Q8ZS5sZW5ndGg7dCsrKXtjb25zdCBuPVYuZXhlYyhlW3RdKTtsZXQgbz1uJiZuWzFdO28mJiJyZW1vdmVMaXN0ZW5lciIhPT1vJiZ0aGlzW3BdLmNhbGwodGhpcyxvKX10aGlzW3BdLmNhbGwodGhpcywicmVtb3ZlTGlzdGVuZXIiKX1pZih2KXJldHVybiB0aGlzfSxQKF9bcl0sdyksUChfW3NdLEwpLEMmJlAoX1twXSxDKSxNJiZQKF9bY10sTSksITB9bGV0IF89W107Zm9yKGxldCBuPTA7bjx0Lmxlbmd0aDtuKyspX1tuXT12KHRbbl0sbyk7cmV0dXJuIF99ZnVuY3Rpb24gRyhlLHQpe2lmKCF0KXtjb25zdCBuPVtdO2ZvcihsZXQgbyBpbiBlKXtjb25zdCByPVYuZXhlYyhvKTtsZXQgYT1yJiZyWzFdO2lmKGEmJighdHx8YT09PXQpKXtjb25zdCB0PWVbb107aWYodClmb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKyluLnB1c2godFtlXSl9fXJldHVybiBufWxldCBuPXhbdF07bnx8KHEodCksbj14W3RdKTtjb25zdCBvPWVbbi5mYWxzZV0scj1lW24udHJ1ZV07cmV0dXJuIG8/cj9vLmNvbmNhdChyKTpvLnNsaWNlKCk6cj9yLnNsaWNlKCk6W119ZnVuY3Rpb24gVyhlLHQpe2NvbnN0IG49ZS5FdmVudDtuJiZuLnByb3RvdHlwZSYmdC5wYXRjaE1ldGhvZChuLnByb3RvdHlwZSwic3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uIixlPT5mdW5jdGlvbih0LG4pe3RbVV09ITAsZSYmZS5hcHBseSh0LG4pfSl9ZnVuY3Rpb24gJChlLHQsbixvLHIpe2NvbnN0IGE9Wm9uZS5fX3N5bWJvbF9fKG8pO2lmKHRbYV0pcmV0dXJuO2NvbnN0IGk9dFthXT10W29dO3Rbb109ZnVuY3Rpb24oYSxzLGMpe3JldHVybiBzJiZzLnByb3RvdHlwZSYmci5mb3JFYWNoKChmdW5jdGlvbih0KXtjb25zdCByPWAke259LiR7b306OmArdCxhPXMucHJvdG90eXBlO2lmKGEuaGFzT3duUHJvcGVydHkodCkpe2NvbnN0IG49ZS5PYmplY3RHZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYSx0KTtuJiZuLnZhbHVlPyhuLnZhbHVlPWUud3JhcFdpdGhDdXJyZW50Wm9uZShuLnZhbHVlLHIpLGUuX3JlZGVmaW5lUHJvcGVydHkocy5wcm90b3R5cGUsdCxuKSk6YVt0XSYmKGFbdF09ZS53cmFwV2l0aEN1cnJlbnRab25lKGFbdF0scikpfWVsc2UgYVt0XSYmKGFbdF09ZS53cmFwV2l0aEN1cnJlbnRab25lKGFbdF0scikpfSkpLGkuY2FsbCh0LGEscyxjKX0sZS5hdHRhY2hPcmlnaW5Ub1BhdGNoZWQodFtvXSxpKX1jb25zdCBYPVsiYWJzb2x1dGVkZXZpY2VvcmllbnRhdGlvbiIsImFmdGVyaW5wdXQiLCJhZnRlcnByaW50IiwiYXBwaW5zdGFsbGVkIiwiYmVmb3JlaW5zdGFsbHByb21wdCIsImJlZm9yZXByaW50IiwiYmVmb3JldW5sb2FkIiwiZGV2aWNlbGlnaHQiLCJkZXZpY2Vtb3Rpb24iLCJkZXZpY2VvcmllbnRhdGlvbiIsImRldmljZW9yaWVudGF0aW9uYWJzb2x1dGUiLCJkZXZpY2Vwcm94aW1pdHkiLCJoYXNoY2hhbmdlIiwibGFuZ3VhZ2VjaGFuZ2UiLCJtZXNzYWdlIiwibW96YmVmb3JlcGFpbnQiLCJvZmZsaW5lIiwib25saW5lIiwicGFpbnQiLCJwYWdlc2hvdyIsInBhZ2VoaWRlIiwicG9wc3RhdGUiLCJyZWplY3Rpb25oYW5kbGVkIiwic3RvcmFnZSIsInVuaGFuZGxlZHJlamVjdGlvbiIsInVubG9hZCIsInVzZXJwcm94aW1pdHkiLCJ2cmRpc3BsYXljb25uZWN0ZWQiLCJ2cmRpc3BsYXlkaXNjb25uZWN0ZWQiLCJ2cmRpc3BsYXlwcmVzZW50Y2hhbmdlIl0sSj1bImVuY3J5cHRlZCIsIndhaXRpbmdmb3JrZXkiLCJtc25lZWRrZXkiLCJtb3ppbnRlcnJ1cHRiZWdpbiIsIm1vemludGVycnVwdGVuZCJdLEs9WyJsb2FkIl0sWT1bImJsdXIiLCJlcnJvciIsImZvY3VzIiwibG9hZCIsInJlc2l6ZSIsInNjcm9sbCIsIm1lc3NhZ2VlcnJvciJdLFE9WyJib3VuY2UiLCJmaW5pc2giLCJzdGFydCJdLGVlPVsibG9hZHN0YXJ0IiwicHJvZ3Jlc3MiLCJhYm9ydCIsImVycm9yIiwibG9hZCIsInByb2dyZXNzIiwidGltZW91dCIsImxvYWRlbmQiLCJyZWFkeXN0YXRlY2hhbmdlIl0sdGU9WyJ1cGdyYWRlbmVlZGVkIiwiY29tcGxldGUiLCJhYm9ydCIsInN1Y2Nlc3MiLCJlcnJvciIsImJsb2NrZWQiLCJ2ZXJzaW9uY2hhbmdlIiwiY2xvc2UiXSxuZT1bImNsb3NlIiwiZXJyb3IiLCJvcGVuIiwibWVzc2FnZSJdLG9lPVsiZXJyb3IiLCJtZXNzYWdlIl0scmU9WyJhYm9ydCIsImFuaW1hdGlvbmNhbmNlbCIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImF1eGNsaWNrIiwiYmVmb3JlaW5wdXQiLCJibHVyIiwiY2FuY2VsIiwiY2FucGxheSIsImNhbnBsYXl0aHJvdWdoIiwiY2hhbmdlIiwiY29tcG9zaXRpb25zdGFydCIsImNvbXBvc2l0aW9udXBkYXRlIiwiY29tcG9zaXRpb25lbmQiLCJjdWVjaGFuZ2UiLCJjbGljayIsImNsb3NlIiwiY29udGV4dG1lbnUiLCJjdXJlY2hhbmdlIiwiZGJsY2xpY2siLCJkcmFnIiwiZHJhZ2VuZCIsImRyYWdlbnRlciIsImRyYWdleGl0IiwiZHJhZ2xlYXZlIiwiZHJhZ292ZXIiLCJkcm9wIiwiZHVyYXRpb25jaGFuZ2UiLCJlbXB0aWVkIiwiZW5kZWQiLCJlcnJvciIsImZvY3VzIiwiZm9jdXNpbiIsImZvY3Vzb3V0IiwiZ290cG9pbnRlcmNhcHR1cmUiLCJpbnB1dCIsImludmFsaWQiLCJrZXlkb3duIiwia2V5cHJlc3MiLCJrZXl1cCIsImxvYWQiLCJsb2Fkc3RhcnQiLCJsb2FkZWRkYXRhIiwibG9hZGVkbWV0YWRhdGEiLCJsb3N0cG9pbnRlcmNhcHR1cmUiLCJtb3VzZWRvd24iLCJtb3VzZWVudGVyIiwibW91c2VsZWF2ZSIsIm1vdXNlbW92ZSIsIm1vdXNlb3V0IiwibW91c2VvdmVyIiwibW91c2V1cCIsIm1vdXNld2hlZWwiLCJvcmllbnRhdGlvbmNoYW5nZSIsInBhdXNlIiwicGxheSIsInBsYXlpbmciLCJwb2ludGVyY2FuY2VsIiwicG9pbnRlcmRvd24iLCJwb2ludGVyZW50ZXIiLCJwb2ludGVybGVhdmUiLCJwb2ludGVybG9ja2NoYW5nZSIsIm1venBvaW50ZXJsb2NrY2hhbmdlIiwid2Via2l0cG9pbnRlcmxvY2tlcmNoYW5nZSIsInBvaW50ZXJsb2NrZXJyb3IiLCJtb3pwb2ludGVybG9ja2Vycm9yIiwid2Via2l0cG9pbnRlcmxvY2tlcnJvciIsInBvaW50ZXJtb3ZlIiwicG9pbnRvdXQiLCJwb2ludGVyb3ZlciIsInBvaW50ZXJ1cCIsInByb2dyZXNzIiwicmF0ZWNoYW5nZSIsInJlc2V0IiwicmVzaXplIiwic2Nyb2xsIiwic2Vla2VkIiwic2Vla2luZyIsInNlbGVjdCIsInNlbGVjdGlvbmNoYW5nZSIsInNlbGVjdHN0YXJ0Iiwic2hvdyIsInNvcnQiLCJzdGFsbGVkIiwic3VibWl0Iiwic3VzcGVuZCIsInRpbWV1cGRhdGUiLCJ2b2x1bWVjaGFuZ2UiLCJ0b3VjaGNhbmNlbCIsInRvdWNobW92ZSIsInRvdWNoc3RhcnQiLCJ0b3VjaGVuZCIsInRyYW5zaXRpb25jYW5jZWwiLCJ0cmFuc2l0aW9uZW5kIiwid2FpdGluZyIsIndoZWVsIl0uY29uY2F0KFsid2ViZ2xjb250ZXh0cmVzdG9yZWQiLCJ3ZWJnbGNvbnRleHRsb3N0Iiwid2ViZ2xjb250ZXh0Y3JlYXRpb25lcnJvciJdLFsiYXV0b2NvbXBsZXRlIiwiYXV0b2NvbXBsZXRlZXJyb3IiXSxbInRvZ2dsZSJdLFsiYWZ0ZXJzY3JpcHRleGVjdXRlIiwiYmVmb3Jlc2NyaXB0ZXhlY3V0ZSIsIkRPTUNvbnRlbnRMb2FkZWQiLCJmcmVlemUiLCJmdWxsc2NyZWVuY2hhbmdlIiwibW96ZnVsbHNjcmVlbmNoYW5nZSIsIndlYmtpdGZ1bGxzY3JlZW5jaGFuZ2UiLCJtc2Z1bGxzY3JlZW5jaGFuZ2UiLCJmdWxsc2NyZWVuZXJyb3IiLCJtb3pmdWxsc2NyZWVuZXJyb3IiLCJ3ZWJraXRmdWxsc2NyZWVuZXJyb3IiLCJtc2Z1bGxzY3JlZW5lcnJvciIsInJlYWR5c3RhdGVjaGFuZ2UiLCJ2aXNpYmlsaXR5Y2hhbmdlIiwicmVzdW1lIl0sWCxbImJlZm9yZWNvcHkiLCJiZWZvcmVjdXQiLCJiZWZvcmVwYXN0ZSIsImNvcHkiLCJjdXQiLCJwYXN0ZSIsImRyYWdzdGFydCIsImxvYWRlbmQiLCJhbmltYXRpb25zdGFydCIsInNlYXJjaCIsInRyYW5zaXRpb25ydW4iLCJ0cmFuc2l0aW9uc3RhcnQiLCJ3ZWJraXRhbmltYXRpb25lbmQiLCJ3ZWJraXRhbmltYXRpb25pdGVyYXRpb24iLCJ3ZWJraXRhbmltYXRpb25zdGFydCIsIndlYmtpdHRyYW5zaXRpb25lbmQiXSxbImFjdGl2YXRlIiwiYWZ0ZXJ1cGRhdGUiLCJhcmlhcmVxdWVzdCIsImJlZm9yZWFjdGl2YXRlIiwiYmVmb3JlZGVhY3RpdmF0ZSIsImJlZm9yZWVkaXRmb2N1cyIsImJlZm9yZXVwZGF0ZSIsImNlbGxjaGFuZ2UiLCJjb250cm9sc2VsZWN0IiwiZGF0YWF2YWlsYWJsZSIsImRhdGFzZXRjaGFuZ2VkIiwiZGF0YXNldGNvbXBsZXRlIiwiZXJyb3J1cGRhdGUiLCJmaWx0ZXJjaGFuZ2UiLCJsYXlvdXRjb21wbGV0ZSIsImxvc2VjYXB0dXJlIiwibW92ZSIsIm1vdmVlbmQiLCJtb3Zlc3RhcnQiLCJwcm9wZXJ0eWNoYW5nZSIsInJlc2l6ZWVuZCIsInJlc2l6ZXN0YXJ0Iiwicm93ZW50ZXIiLCJyb3dleGl0Iiwicm93c2RlbGV0ZSIsInJvd3NpbnNlcnRlZCIsImNvbW1hbmQiLCJjb21wYXNzbmVlZHNjYWxpYnJhdGlvbiIsImRlYWN0aXZhdGUiLCJoZWxwIiwibXNjb250ZW50em9vbSIsIm1zbWFuaXB1bGF0aW9uc3RhdGVjaGFuZ2VkIiwibXNnZXN0dXJlY2hhbmdlIiwibXNnZXN0dXJlZG91YmxldGFwIiwibXNnZXN0dXJlZW5kIiwibXNnZXN0dXJlaG9sZCIsIm1zZ2VzdHVyZXN0YXJ0IiwibXNnZXN0dXJldGFwIiwibXNnb3Rwb2ludGVyY2FwdHVyZSIsIm1zaW5lcnRpYXN0YXJ0IiwibXNsb3N0cG9pbnRlcmNhcHR1cmUiLCJtc3BvaW50ZXJjYW5jZWwiLCJtc3BvaW50ZXJkb3duIiwibXNwb2ludGVyZW50ZXIiLCJtc3BvaW50ZXJob3ZlciIsIm1zcG9pbnRlcmxlYXZlIiwibXNwb2ludGVybW92ZSIsIm1zcG9pbnRlcm91dCIsIm1zcG9pbnRlcm92ZXIiLCJtc3BvaW50ZXJ1cCIsInBvaW50ZXJvdXQiLCJtc3NpdGVtb2RlanVtcGxpc3RpdGVtcmVtb3ZlZCIsIm1zdGh1bWJuYWlsY2xpY2siLCJzdG9wIiwic3RvcmFnZWNvbW1pdCJdKTtmdW5jdGlvbiBhZShlLHQsbil7aWYoIW58fDA9PT1uLmxlbmd0aClyZXR1cm4gdDtjb25zdCBvPW4uZmlsdGVyKHQ9PnQudGFyZ2V0PT09ZSk7aWYoIW98fDA9PT1vLmxlbmd0aClyZXR1cm4gdDtjb25zdCByPW9bMF0uaWdub3JlUHJvcGVydGllcztyZXR1cm4gdC5maWx0ZXIoZT0+LTE9PT1yLmluZGV4T2YoZSkpfWZ1bmN0aW9uIGllKGUsdCxuLG8pe2UmJlMoZSxhZShlLHQsbiksbyl9ZnVuY3Rpb24gc2UoZSx0KXtpZihiJiYhdylyZXR1cm47aWYoWm9uZVtlLnN5bWJvbCgicGF0Y2hFdmVudHMiKV0pcmV0dXJuO2NvbnN0IG89InVuZGVmaW5lZCIhPXR5cGVvZiBXZWJTb2NrZXQscj10Ll9fWm9uZV9pZ25vcmVfb25fcHJvcGVydGllcztpZihFKXtjb25zdCBlPXdpbmRvdyx0PUE/W3t0YXJnZXQ6ZSxpZ25vcmVQcm9wZXJ0aWVzOlsiZXJyb3IiXX1dOltdO2llKGUscmUuY29uY2F0KFsibWVzc2FnZWVycm9yIl0pLHI/ci5jb25jYXQodCk6cixuKGUpKSxpZShEb2N1bWVudC5wcm90b3R5cGUscmUsciksdm9pZCAwIT09ZS5TVkdFbGVtZW50JiZpZShlLlNWR0VsZW1lbnQucHJvdG90eXBlLHJlLHIpLGllKEVsZW1lbnQucHJvdG90eXBlLHJlLHIpLGllKEhUTUxFbGVtZW50LnByb3RvdHlwZSxyZSxyKSxpZShIVE1MTWVkaWFFbGVtZW50LnByb3RvdHlwZSxKLHIpLGllKEhUTUxGcmFtZVNldEVsZW1lbnQucHJvdG90eXBlLFguY29uY2F0KFkpLHIpLGllKEhUTUxCb2R5RWxlbWVudC5wcm90b3R5cGUsWC5jb25jYXQoWSksciksaWUoSFRNTEZyYW1lRWxlbWVudC5wcm90b3R5cGUsSyxyKSxpZShIVE1MSUZyYW1lRWxlbWVudC5wcm90b3R5cGUsSyxyKTtjb25zdCBvPWUuSFRNTE1hcnF1ZWVFbGVtZW50O28mJmllKG8ucHJvdG90eXBlLFEscik7Y29uc3QgYT1lLldvcmtlcjthJiZpZShhLnByb3RvdHlwZSxvZSxyKX1jb25zdCBhPXQuWE1MSHR0cFJlcXVlc3Q7YSYmaWUoYS5wcm90b3R5cGUsZWUscik7Y29uc3QgaT10LlhNTEh0dHBSZXF1ZXN0RXZlbnRUYXJnZXQ7aSYmaWUoaSYmaS5wcm90b3R5cGUsZWUsciksInVuZGVmaW5lZCIhPXR5cGVvZiBJREJJbmRleCYmKGllKElEQkluZGV4LnByb3RvdHlwZSx0ZSxyKSxpZShJREJSZXF1ZXN0LnByb3RvdHlwZSx0ZSxyKSxpZShJREJPcGVuREJSZXF1ZXN0LnByb3RvdHlwZSx0ZSxyKSxpZShJREJEYXRhYmFzZS5wcm90b3R5cGUsdGUsciksaWUoSURCVHJhbnNhY3Rpb24ucHJvdG90eXBlLHRlLHIpLGllKElEQkN1cnNvci5wcm90b3R5cGUsdGUscikpLG8mJmllKFdlYlNvY2tldC5wcm90b3R5cGUsbmUscil9Wm9uZS5fX2xvYWRfcGF0Y2goInV0aWwiLChuLHMsYyk9PntjLnBhdGNoT25Qcm9wZXJ0aWVzPVMsYy5wYXRjaE1ldGhvZD1PLGMuYmluZEFyZ3VtZW50cz12LGMucGF0Y2hNYWNyb1Rhc2s9Wjtjb25zdCBmPXMuX19zeW1ib2xfXygiQkxBQ0tfTElTVEVEX0VWRU5UUyIpLGQ9cy5fX3N5bWJvbF9fKCJVTlBBVENIRURfRVZFTlRTIik7bltkXSYmKG5bZl09bltkXSksbltmXSYmKHNbZl09c1tkXT1uW2ZdKSxjLnBhdGNoRXZlbnRQcm90b3R5cGU9VyxjLnBhdGNoRXZlbnRUYXJnZXQ9QixjLmlzSUVPckVkZ2U9SSxjLk9iamVjdERlZmluZVByb3BlcnR5PXQsYy5PYmplY3RHZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I9ZSxjLk9iamVjdENyZWF0ZT1vLGMuQXJyYXlTbGljZT1yLGMucGF0Y2hDbGFzcz1ILGMud3JhcFdpdGhDdXJyZW50Wm9uZT1wLGMuZmlsdGVyUHJvcGVydGllcz1hZSxjLmF0dGFjaE9yaWdpblRvUGF0Y2hlZD1QLGMuX3JlZGVmaW5lUHJvcGVydHk9T2JqZWN0LmRlZmluZVByb3BlcnR5LGMucGF0Y2hDYWxsYmFja3M9JCxjLmdldEdsb2JhbE9iamVjdHM9KCk9Pih7Z2xvYmFsU291cmNlczpGLHpvbmVTeW1ib2xFdmVudE5hbWVzOngsZXZlbnROYW1lczpyZSxpc0Jyb3dzZXI6RSxpc01peDp3LGlzTm9kZTpiLFRSVUVfU1RSOmwsRkFMU0VfU1RSOnUsWk9ORV9TWU1CT0xfUFJFRklYOmgsQUREX0VWRU5UX0xJU1RFTkVSX1NUUjphLFJFTU9WRV9FVkVOVF9MSVNURU5FUl9TVFI6aX0pfSk7Y29uc3QgY2U9ZCgiem9uZVRhc2siKTtmdW5jdGlvbiBsZShlLHQsbixvKXtsZXQgcj1udWxsLGE9bnVsbDtuKz1vO2NvbnN0IGk9e307ZnVuY3Rpb24gcyh0KXtjb25zdCBuPXQuZGF0YTtyZXR1cm4gbi5hcmdzWzBdPWZ1bmN0aW9uKCl7dHJ5e3QuaW52b2tlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e3QuZGF0YSYmdC5kYXRhLmlzUGVyaW9kaWN8fCgibnVtYmVyIj09dHlwZW9mIG4uaGFuZGxlSWQ/ZGVsZXRlIGlbbi5oYW5kbGVJZF06bi5oYW5kbGVJZCYmKG4uaGFuZGxlSWRbY2VdPW51bGwpKX19LG4uaGFuZGxlSWQ9ci5hcHBseShlLG4uYXJncyksdH1mdW5jdGlvbiBjKGUpe3JldHVybiBhKGUuZGF0YS5oYW5kbGVJZCl9cj1PKGUsdCs9byxuPT5mdW5jdGlvbihyLGEpe2lmKCJmdW5jdGlvbiI9PXR5cGVvZiBhWzBdKXtjb25zdCBlPWYodCxhWzBdLHtpc1BlcmlvZGljOiJJbnRlcnZhbCI9PT1vLGRlbGF5OiJUaW1lb3V0Ij09PW98fCJJbnRlcnZhbCI9PT1vP2FbMV18fDA6dm9pZCAwLGFyZ3M6YX0scyxjKTtpZighZSlyZXR1cm4gZTtjb25zdCBuPWUuZGF0YS5oYW5kbGVJZDtyZXR1cm4ibnVtYmVyIj09dHlwZW9mIG4/aVtuXT1lOm4mJihuW2NlXT1lKSxuJiZuLnJlZiYmbi51bnJlZiYmImZ1bmN0aW9uIj09dHlwZW9mIG4ucmVmJiYiZnVuY3Rpb24iPT10eXBlb2Ygbi51bnJlZiYmKGUucmVmPW4ucmVmLmJpbmQobiksZS51bnJlZj1uLnVucmVmLmJpbmQobikpLCJudW1iZXIiPT10eXBlb2Ygbnx8bj9uOmV9cmV0dXJuIG4uYXBwbHkoZSxhKX0pLGE9TyhlLG4sdD0+ZnVuY3Rpb24obixvKXtjb25zdCByPW9bMF07bGV0IGE7Im51bWJlciI9PXR5cGVvZiByP2E9aVtyXTooYT1yJiZyW2NlXSxhfHwoYT1yKSksYSYmInN0cmluZyI9PXR5cGVvZiBhLnR5cGU/Im5vdFNjaGVkdWxlZCIhPT1hLnN0YXRlJiYoYS5jYW5jZWxGbiYmYS5kYXRhLmlzUGVyaW9kaWN8fDA9PT1hLnJ1bkNvdW50KSYmKCJudW1iZXIiPT10eXBlb2Ygcj9kZWxldGUgaVtyXTpyJiYocltjZV09bnVsbCksYS56b25lLmNhbmNlbFRhc2soYSkpOnQuYXBwbHkoZSxvKX0pfWZ1bmN0aW9uIHVlKGUsdCl7aWYoWm9uZVt0LnN5bWJvbCgicGF0Y2hFdmVudFRhcmdldCIpXSlyZXR1cm47Y29uc3R7ZXZlbnROYW1lczpuLHpvbmVTeW1ib2xFdmVudE5hbWVzOm8sVFJVRV9TVFI6cixGQUxTRV9TVFI6YSxaT05FX1NZTUJPTF9QUkVGSVg6aX09dC5nZXRHbG9iYWxPYmplY3RzKCk7Zm9yKGxldCBjPTA7YzxuLmxlbmd0aDtjKyspe2NvbnN0IGU9bltjXSx0PWkrKGUrYSkscz1pKyhlK3IpO29bZV09e30sb1tlXVthXT10LG9bZV1bcl09c31jb25zdCBzPWUuRXZlbnRUYXJnZXQ7cmV0dXJuIHMmJnMucHJvdG90eXBlPyh0LnBhdGNoRXZlbnRUYXJnZXQoZSxbcyYmcy5wcm90b3R5cGVdKSwhMCk6dm9pZCAwfVpvbmUuX19sb2FkX3BhdGNoKCJsZWdhY3kiLGU9Pntjb25zdCB0PWVbWm9uZS5fX3N5bWJvbF9fKCJsZWdhY3lQYXRjaCIpXTt0JiZ0KCl9KSxab25lLl9fbG9hZF9wYXRjaCgidGltZXJzIixlPT57Y29uc3QgdD0ic2V0IixuPSJjbGVhciI7bGUoZSx0LG4sIlRpbWVvdXQiKSxsZShlLHQsbiwiSW50ZXJ2YWwiKSxsZShlLHQsbiwiSW1tZWRpYXRlIil9KSxab25lLl9fbG9hZF9wYXRjaCgicmVxdWVzdEFuaW1hdGlvbkZyYW1lIixlPT57bGUoZSwicmVxdWVzdCIsImNhbmNlbCIsIkFuaW1hdGlvbkZyYW1lIiksbGUoZSwibW96UmVxdWVzdCIsIm1vekNhbmNlbCIsIkFuaW1hdGlvbkZyYW1lIiksbGUoZSwid2Via2l0UmVxdWVzdCIsIndlYmtpdENhbmNlbCIsIkFuaW1hdGlvbkZyYW1lIil9KSxab25lLl9fbG9hZF9wYXRjaCgiYmxvY2tpbmciLChlLHQpPT57Y29uc3Qgbj1bImFsZXJ0IiwicHJvbXB0IiwiY29uZmlybSJdO2ZvcihsZXQgbz0wO288bi5sZW5ndGg7bysrKU8oZSxuW29dLChuLG8scik9PmZ1bmN0aW9uKG8sYSl7cmV0dXJuIHQuY3VycmVudC5ydW4obixlLGEscil9KX0pLFpvbmUuX19sb2FkX3BhdGNoKCJFdmVudFRhcmdldCIsKGUsdCxuKT0+eyhmdW5jdGlvbihlLHQpe3QucGF0Y2hFdmVudFByb3RvdHlwZShlLHQpfSkoZSxuKSx1ZShlLG4pO2NvbnN0IG89ZS5YTUxIdHRwUmVxdWVzdEV2ZW50VGFyZ2V0O28mJm8ucHJvdG90eXBlJiZuLnBhdGNoRXZlbnRUYXJnZXQoZSxbby5wcm90b3R5cGVdKSxIKCJNdXRhdGlvbk9ic2VydmVyIiksSCgiV2ViS2l0TXV0YXRpb25PYnNlcnZlciIpLEgoIkludGVyc2VjdGlvbk9ic2VydmVyIiksSCgiRmlsZVJlYWRlciIpfSksWm9uZS5fX2xvYWRfcGF0Y2goIm9uX3Byb3BlcnR5IiwoZSx0LG4pPT57c2UobixlKX0pLFpvbmUuX19sb2FkX3BhdGNoKCJjdXN0b21FbGVtZW50cyIsKGUsdCxuKT0+eyFmdW5jdGlvbihlLHQpe2NvbnN0e2lzQnJvd3NlcjpuLGlzTWl4Om99PXQuZ2V0R2xvYmFsT2JqZWN0cygpOyhufHxvKSYmZS5jdXN0b21FbGVtZW50cyYmImN1c3RvbUVsZW1lbnRzImluIGUmJnQucGF0Y2hDYWxsYmFja3ModCxlLmN1c3RvbUVsZW1lbnRzLCJjdXN0b21FbGVtZW50cyIsImRlZmluZSIsWyJjb25uZWN0ZWRDYWxsYmFjayIsImRpc2Nvbm5lY3RlZENhbGxiYWNrIiwiYWRvcHRlZENhbGxiYWNrIiwiYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrIl0pfShlLG4pfSksWm9uZS5fX2xvYWRfcGF0Y2goIlhIUiIsKGUsdCk9PnshZnVuY3Rpb24oZSl7Y29uc3QgdT1lLlhNTEh0dHBSZXF1ZXN0O2lmKCF1KXJldHVybjtjb25zdCBoPXUucHJvdG90eXBlO2xldCBwPWhbc10sbT1oW2NdO2lmKCFwKXtjb25zdCB0PWUuWE1MSHR0cFJlcXVlc3RFdmVudFRhcmdldDtpZih0KXtjb25zdCBlPXQucHJvdG90eXBlO3A9ZVtzXSxtPWVbY119fWNvbnN0IGc9InJlYWR5c3RhdGVjaGFuZ2UiLFQ9InNjaGVkdWxlZCI7ZnVuY3Rpb24geShlKXtjb25zdCBvPWUuZGF0YSxpPW8udGFyZ2V0O2lbYV09ITEsaVtsXT0hMTtjb25zdCB1PWlbcl07cHx8KHA9aVtzXSxtPWlbY10pLHUmJm0uY2FsbChpLGcsdSk7Y29uc3QgaD1pW3JdPSgpPT57aWYoaS5yZWFkeVN0YXRlPT09aS5ET05FKWlmKCFvLmFib3J0ZWQmJmlbYV0mJmUuc3RhdGU9PT1UKXtjb25zdCBuPWlbdC5fX3N5bWJvbF9fKCJsb2FkZmFsc2UiKV07aWYobiYmbi5sZW5ndGg+MCl7Y29uc3Qgcj1lLmludm9rZTtlLmludm9rZT1mdW5jdGlvbigpe2NvbnN0IG49aVt0Ll9fc3ltYm9sX18oImxvYWRmYWxzZSIpXTtmb3IobGV0IHQ9MDt0PG4ubGVuZ3RoO3QrKyluW3RdPT09ZSYmbi5zcGxpY2UodCwxKTtvLmFib3J0ZWR8fGUuc3RhdGUhPT1UfHxyLmNhbGwoZSl9LG4ucHVzaChlKX1lbHNlIGUuaW52b2tlKCl9ZWxzZSBvLmFib3J0ZWR8fCExIT09aVthXXx8KGlbbF09ITApfTtyZXR1cm4gcC5jYWxsKGksZyxoKSxpW25dfHwoaVtuXT1lKSx3LmFwcGx5KGksby5hcmdzKSxpW2FdPSEwLGV9ZnVuY3Rpb24gdigpe31mdW5jdGlvbiBfKGUpe2NvbnN0IHQ9ZS5kYXRhO3JldHVybiB0LmFib3J0ZWQ9ITAsTC5hcHBseSh0LnRhcmdldCx0LmFyZ3MpfWNvbnN0IGs9TyhoLCJvcGVuIiwoKT0+ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZVtvXT0wPT10WzJdLGVbaV09dFsxXSxrLmFwcGx5KGUsdCl9KSxiPWQoImZldGNoVGFza0Fib3J0aW5nIiksRT1kKCJmZXRjaFRhc2tTY2hlZHVsaW5nIiksdz1PKGgsInNlbmQiLCgpPT5mdW5jdGlvbihlLG4pe2lmKCEwPT09dC5jdXJyZW50W0VdKXJldHVybiB3LmFwcGx5KGUsbik7aWYoZVtvXSlyZXR1cm4gdy5hcHBseShlLG4pO3tjb25zdCB0PXt0YXJnZXQ6ZSx1cmw6ZVtpXSxpc1BlcmlvZGljOiExLGFyZ3M6bixhYm9ydGVkOiExfSxvPWYoIlhNTEh0dHBSZXF1ZXN0LnNlbmQiLHYsdCx5LF8pO2UmJiEwPT09ZVtsXSYmIXQuYWJvcnRlZCYmby5zdGF0ZT09PVQmJm8uaW52b2tlKCl9fSksTD1PKGgsImFib3J0IiwoKT0+ZnVuY3Rpb24oZSxvKXtjb25zdCByPWVbbl07aWYociYmInN0cmluZyI9PXR5cGVvZiByLnR5cGUpe2lmKG51bGw9PXIuY2FuY2VsRm58fHIuZGF0YSYmci5kYXRhLmFib3J0ZWQpcmV0dXJuO3Iuem9uZS5jYW5jZWxUYXNrKHIpfWVsc2UgaWYoITA9PT10LmN1cnJlbnRbYl0pcmV0dXJuIEwuYXBwbHkoZSxvKX0pfShlKTtjb25zdCBuPWQoInhoclRhc2siKSxvPWQoInhoclN5bmMiKSxyPWQoInhockxpc3RlbmVyIiksYT1kKCJ4aHJTY2hlZHVsZWQiKSxpPWQoInhoclVSTCIpLGw9ZCgieGhyRXJyb3JCZWZvcmVTY2hlZHVsZWQiKX0pLFpvbmUuX19sb2FkX3BhdGNoKCJnZW9sb2NhdGlvbiIsdD0+e3QubmF2aWdhdG9yJiZ0Lm5hdmlnYXRvci5nZW9sb2NhdGlvbiYmZnVuY3Rpb24odCxuKXtjb25zdCBvPXQuY29uc3RydWN0b3IubmFtZTtmb3IobGV0IHI9MDtyPG4ubGVuZ3RoO3IrKyl7Y29uc3QgYT1uW3JdLGk9dFthXTtpZihpKXtpZighXyhlKHQsYSkpKWNvbnRpbnVlO3RbYV09KGU9Pntjb25zdCB0PWZ1bmN0aW9uKCl7cmV0dXJuIGUuYXBwbHkodGhpcyx2KGFyZ3VtZW50cyxvKyIuIithKSl9O3JldHVybiBQKHQsZSksdH0pKGkpfX19KHQubmF2aWdhdG9yLmdlb2xvY2F0aW9uLFsiZ2V0Q3VycmVudFBvc2l0aW9uIiwid2F0Y2hQb3NpdGlvbiJdKX0pLFpvbmUuX19sb2FkX3BhdGNoKCJQcm9taXNlUmVqZWN0aW9uRXZlbnQiLChlLHQpPT57ZnVuY3Rpb24gbih0KXtyZXR1cm4gZnVuY3Rpb24obil7RyhlLHQpLmZvckVhY2gobz0+e2NvbnN0IHI9ZS5Qcm9taXNlUmVqZWN0aW9uRXZlbnQ7aWYocil7Y29uc3QgZT1uZXcgcih0LHtwcm9taXNlOm4ucHJvbWlzZSxyZWFzb246bi5yZWplY3Rpb259KTtvLmludm9rZShlKX19KX19ZS5Qcm9taXNlUmVqZWN0aW9uRXZlbnQmJih0W2QoInVuaGFuZGxlZFByb21pc2VSZWplY3Rpb25IYW5kbGVyIildPW4oInVuaGFuZGxlZHJlamVjdGlvbiIpLHRbZCgicmVqZWN0aW9uSGFuZGxlZEhhbmRsZXIiKV09bigicmVqZWN0aW9uaGFuZGxlZCIpKX0pfSk/by5jYWxsKHQsbix0LGUpOm8pfHwoZS5leHBvcnRzPXIpfX0sW1sxLDBdXV0pOyh3aW5kb3cud2VicGFja0pzb25wPXdpbmRvdy53ZWJwYWNrSnNvbnB8fFtdKS5wdXNoKFtbMV0sezA6ZnVuY3Rpb24odCxlLG4pe3QuZXhwb3J0cz1uKCJ6VW5iIil9LHpVbmI6ZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiByKHQpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiB0fW4ucihlKTtsZXQgcz0hMTtjb25zdCBpPXtQcm9taXNlOnZvaWQgMCxzZXQgdXNlRGVwcmVjYXRlZFN5bmNocm9ub3VzRXJyb3JIYW5kbGluZyh0KXtpZih0KXtjb25zdCB0PW5ldyBFcnJvcjtjb25zb2xlLndhcm4oIkRFUFJFQ0FURUQhIFJ4SlMgd2FzIHNldCB0byB1c2UgZGVwcmVjYXRlZCBzeW5jaHJvbm91cyBlcnJvciBoYW5kbGluZyBiZWhhdmlvciBieSBjb2RlIGF0OiBcbiIrdC5zdGFjayl9ZWxzZSBzJiZjb25zb2xlLmxvZygiUnhKUzogQmFjayB0byBhIGJldHRlciBlcnJvciBiZWhhdmlvci4gVGhhbmsgeW91LiA8MyIpO3M9dH0sZ2V0IHVzZURlcHJlY2F0ZWRTeW5jaHJvbm91c0Vycm9ySGFuZGxpbmcoKXtyZXR1cm4gc319O2Z1bmN0aW9uIG8odCl7c2V0VGltZW91dCgoKT0+e3Rocm93IHR9LDApfWNvbnN0IGE9e2Nsb3NlZDohMCxuZXh0KHQpe30sZXJyb3IodCl7aWYoaS51c2VEZXByZWNhdGVkU3luY2hyb25vdXNFcnJvckhhbmRsaW5nKXRocm93IHQ7byh0KX0sY29tcGxldGUoKXt9fSxsPSgoKT0+QXJyYXkuaXNBcnJheXx8KHQ9PnQmJiJudW1iZXIiPT10eXBlb2YgdC5sZW5ndGgpKSgpO2Z1bmN0aW9uIHUodCl7cmV0dXJuIG51bGwhPT10JiYib2JqZWN0Ij09dHlwZW9mIHR9Y29uc3QgYz0oKCk9PntmdW5jdGlvbiB0KHQpe3JldHVybiBFcnJvci5jYWxsKHRoaXMpLHRoaXMubWVzc2FnZT10P2Ake3QubGVuZ3RofSBlcnJvcnMgb2NjdXJyZWQgZHVyaW5nIHVuc3Vic2NyaXB0aW9uOlxuJHt0Lm1hcCgodCxlKT0+YCR7ZSsxfSkgJHt0LnRvU3RyaW5nKCl9YCkuam9pbigiXG4gICIpfWA6IiIsdGhpcy5uYW1lPSJVbnN1YnNjcmlwdGlvbkVycm9yIix0aGlzLmVycm9ycz10LHRoaXN9cmV0dXJuIHQucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoRXJyb3IucHJvdG90eXBlKSx0fSkoKTtsZXQgaD0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKHQpe3RoaXMuY2xvc2VkPSExLHRoaXMuX3BhcmVudE9yUGFyZW50cz1udWxsLHRoaXMuX3N1YnNjcmlwdGlvbnM9bnVsbCx0JiYodGhpcy5fY3RvclVuc3Vic2NyaWJlPSEwLHRoaXMuX3Vuc3Vic2NyaWJlPXQpfXVuc3Vic2NyaWJlKCl7bGV0IGU7aWYodGhpcy5jbG9zZWQpcmV0dXJuO2xldHtfcGFyZW50T3JQYXJlbnRzOm4sX2N0b3JVbnN1YnNjcmliZTpzLF91bnN1YnNjcmliZTppLF9zdWJzY3JpcHRpb25zOm99PXRoaXM7aWYodGhpcy5jbG9zZWQ9ITAsdGhpcy5fcGFyZW50T3JQYXJlbnRzPW51bGwsdGhpcy5fc3Vic2NyaXB0aW9ucz1udWxsLG4gaW5zdGFuY2VvZiB0KW4ucmVtb3ZlKHRoaXMpO2Vsc2UgaWYobnVsbCE9PW4pZm9yKGxldCB0PTA7dDxuLmxlbmd0aDsrK3Qpblt0XS5yZW1vdmUodGhpcyk7aWYocihpKSl7cyYmKHRoaXMuX3Vuc3Vic2NyaWJlPXZvaWQgMCk7dHJ5e2kuY2FsbCh0aGlzKX1jYXRjaChhKXtlPWEgaW5zdGFuY2VvZiBjP2QoYS5lcnJvcnMpOlthXX19aWYobChvKSl7bGV0IHQ9LTEsbj1vLmxlbmd0aDtmb3IoOysrdDxuOyl7Y29uc3Qgbj1vW3RdO2lmKHUobikpdHJ5e24udW5zdWJzY3JpYmUoKX1jYXRjaChhKXtlPWV8fFtdLGEgaW5zdGFuY2VvZiBjP2U9ZS5jb25jYXQoZChhLmVycm9ycykpOmUucHVzaChhKX19fWlmKGUpdGhyb3cgbmV3IGMoZSl9YWRkKGUpe2xldCBuPWU7aWYoIWUpcmV0dXJuIHQuRU1QVFk7c3dpdGNoKHR5cGVvZiBlKXtjYXNlImZ1bmN0aW9uIjpuPW5ldyB0KGUpO2Nhc2Uib2JqZWN0IjppZihuPT09dGhpc3x8bi5jbG9zZWR8fCJmdW5jdGlvbiIhPXR5cGVvZiBuLnVuc3Vic2NyaWJlKXJldHVybiBuO2lmKHRoaXMuY2xvc2VkKXJldHVybiBuLnVuc3Vic2NyaWJlKCksbjtpZighKG4gaW5zdGFuY2VvZiB0KSl7Y29uc3QgZT1uO249bmV3IHQsbi5fc3Vic2NyaXB0aW9ucz1bZV19YnJlYWs7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoInVucmVjb2duaXplZCB0ZWFyZG93biAiK2UrIiBhZGRlZCB0byBTdWJzY3JpcHRpb24uIil9bGV0e19wYXJlbnRPclBhcmVudHM6cn09bjtpZihudWxsPT09ciluLl9wYXJlbnRPclBhcmVudHM9dGhpcztlbHNlIGlmKHIgaW5zdGFuY2VvZiB0KXtpZihyPT09dGhpcylyZXR1cm4gbjtuLl9wYXJlbnRPclBhcmVudHM9W3IsdGhpc119ZWxzZXtpZigtMSE9PXIuaW5kZXhPZih0aGlzKSlyZXR1cm4gbjtyLnB1c2godGhpcyl9Y29uc3Qgcz10aGlzLl9zdWJzY3JpcHRpb25zO3JldHVybiBudWxsPT09cz90aGlzLl9zdWJzY3JpcHRpb25zPVtuXTpzLnB1c2gobiksbn1yZW1vdmUodCl7Y29uc3QgZT10aGlzLl9zdWJzY3JpcHRpb25zO2lmKGUpe2NvbnN0IG49ZS5pbmRleE9mKHQpOy0xIT09biYmZS5zcGxpY2UobiwxKX19fXJldHVybiB0LkVNUFRZPWZ1bmN0aW9uKHQpe3JldHVybiB0LmNsb3NlZD0hMCx0fShuZXcgdCksdH0pKCk7ZnVuY3Rpb24gZCh0KXtyZXR1cm4gdC5yZWR1Y2UoKHQsZSk9PnQuY29uY2F0KGUgaW5zdGFuY2VvZiBjP2UuZXJyb3JzOmUpLFtdKX1jb25zdCBwPSgoKT0+ImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbD9TeW1ib2woInJ4U3Vic2NyaWJlciIpOiJAQHJ4U3Vic2NyaWJlcl8iK01hdGgucmFuZG9tKCkpKCk7Y2xhc3MgZiBleHRlbmRzIGh7Y29uc3RydWN0b3IodCxlLG4pe3N3aXRjaChzdXBlcigpLHRoaXMuc3luY0Vycm9yVmFsdWU9bnVsbCx0aGlzLnN5bmNFcnJvclRocm93bj0hMSx0aGlzLnN5bmNFcnJvclRocm93YWJsZT0hMSx0aGlzLmlzU3RvcHBlZD0hMSxhcmd1bWVudHMubGVuZ3RoKXtjYXNlIDA6dGhpcy5kZXN0aW5hdGlvbj1hO2JyZWFrO2Nhc2UgMTppZighdCl7dGhpcy5kZXN0aW5hdGlvbj1hO2JyZWFrfWlmKCJvYmplY3QiPT10eXBlb2YgdCl7dCBpbnN0YW5jZW9mIGY/KHRoaXMuc3luY0Vycm9yVGhyb3dhYmxlPXQuc3luY0Vycm9yVGhyb3dhYmxlLHRoaXMuZGVzdGluYXRpb249dCx0LmFkZCh0aGlzKSk6KHRoaXMuc3luY0Vycm9yVGhyb3dhYmxlPSEwLHRoaXMuZGVzdGluYXRpb249bmV3IGcodGhpcyx0KSk7YnJlYWt9ZGVmYXVsdDp0aGlzLnN5bmNFcnJvclRocm93YWJsZT0hMCx0aGlzLmRlc3RpbmF0aW9uPW5ldyBnKHRoaXMsdCxlLG4pfX1bcF0oKXtyZXR1cm4gdGhpc31zdGF0aWMgY3JlYXRlKHQsZSxuKXtjb25zdCByPW5ldyBmKHQsZSxuKTtyZXR1cm4gci5zeW5jRXJyb3JUaHJvd2FibGU9ITEscn1uZXh0KHQpe3RoaXMuaXNTdG9wcGVkfHx0aGlzLl9uZXh0KHQpfWVycm9yKHQpe3RoaXMuaXNTdG9wcGVkfHwodGhpcy5pc1N0b3BwZWQ9ITAsdGhpcy5fZXJyb3IodCkpfWNvbXBsZXRlKCl7dGhpcy5pc1N0b3BwZWR8fCh0aGlzLmlzU3RvcHBlZD0hMCx0aGlzLl9jb21wbGV0ZSgpKX11bnN1YnNjcmliZSgpe3RoaXMuY2xvc2VkfHwodGhpcy5pc1N0b3BwZWQ9ITAsc3VwZXIudW5zdWJzY3JpYmUoKSl9X25leHQodCl7dGhpcy5kZXN0aW5hdGlvbi5uZXh0KHQpfV9lcnJvcih0KXt0aGlzLmRlc3RpbmF0aW9uLmVycm9yKHQpLHRoaXMudW5zdWJzY3JpYmUoKX1fY29tcGxldGUoKXt0aGlzLmRlc3RpbmF0aW9uLmNvbXBsZXRlKCksdGhpcy51bnN1YnNjcmliZSgpfV91bnN1YnNjcmliZUFuZFJlY3ljbGUoKXtjb25zdHtfcGFyZW50T3JQYXJlbnRzOnR9PXRoaXM7cmV0dXJuIHRoaXMuX3BhcmVudE9yUGFyZW50cz1udWxsLHRoaXMudW5zdWJzY3JpYmUoKSx0aGlzLmNsb3NlZD0hMSx0aGlzLmlzU3RvcHBlZD0hMSx0aGlzLl9wYXJlbnRPclBhcmVudHM9dCx0aGlzfX1jbGFzcyBnIGV4dGVuZHMgZntjb25zdHJ1Y3Rvcih0LGUsbixzKXtsZXQgaTtzdXBlcigpLHRoaXMuX3BhcmVudFN1YnNjcmliZXI9dDtsZXQgbz10aGlzO3IoZSk/aT1lOmUmJihpPWUubmV4dCxuPWUuZXJyb3Iscz1lLmNvbXBsZXRlLGUhPT1hJiYobz1PYmplY3QuY3JlYXRlKGUpLHIoby51bnN1YnNjcmliZSkmJnRoaXMuYWRkKG8udW5zdWJzY3JpYmUuYmluZChvKSksby51bnN1YnNjcmliZT10aGlzLnVuc3Vic2NyaWJlLmJpbmQodGhpcykpKSx0aGlzLl9jb250ZXh0PW8sdGhpcy5fbmV4dD1pLHRoaXMuX2Vycm9yPW4sdGhpcy5fY29tcGxldGU9c31uZXh0KHQpe2lmKCF0aGlzLmlzU3RvcHBlZCYmdGhpcy5fbmV4dCl7Y29uc3R7X3BhcmVudFN1YnNjcmliZXI6ZX09dGhpcztpLnVzZURlcHJlY2F0ZWRTeW5jaHJvbm91c0Vycm9ySGFuZGxpbmcmJmUuc3luY0Vycm9yVGhyb3dhYmxlP3RoaXMuX190cnlPclNldEVycm9yKGUsdGhpcy5fbmV4dCx0KSYmdGhpcy51bnN1YnNjcmliZSgpOnRoaXMuX190cnlPclVuc3ViKHRoaXMuX25leHQsdCl9fWVycm9yKHQpe2lmKCF0aGlzLmlzU3RvcHBlZCl7Y29uc3R7X3BhcmVudFN1YnNjcmliZXI6ZX09dGhpcyx7dXNlRGVwcmVjYXRlZFN5bmNocm9ub3VzRXJyb3JIYW5kbGluZzpufT1pO2lmKHRoaXMuX2Vycm9yKW4mJmUuc3luY0Vycm9yVGhyb3dhYmxlPyh0aGlzLl9fdHJ5T3JTZXRFcnJvcihlLHRoaXMuX2Vycm9yLHQpLHRoaXMudW5zdWJzY3JpYmUoKSk6KHRoaXMuX190cnlPclVuc3ViKHRoaXMuX2Vycm9yLHQpLHRoaXMudW5zdWJzY3JpYmUoKSk7ZWxzZSBpZihlLnN5bmNFcnJvclRocm93YWJsZSluPyhlLnN5bmNFcnJvclZhbHVlPXQsZS5zeW5jRXJyb3JUaHJvd249ITApOm8odCksdGhpcy51bnN1YnNjcmliZSgpO2Vsc2V7aWYodGhpcy51bnN1YnNjcmliZSgpLG4pdGhyb3cgdDtvKHQpfX19Y29tcGxldGUoKXtpZighdGhpcy5pc1N0b3BwZWQpe2NvbnN0e19wYXJlbnRTdWJzY3JpYmVyOnR9PXRoaXM7aWYodGhpcy5fY29tcGxldGUpe2NvbnN0IGU9KCk9PnRoaXMuX2NvbXBsZXRlLmNhbGwodGhpcy5fY29udGV4dCk7aS51c2VEZXByZWNhdGVkU3luY2hyb25vdXNFcnJvckhhbmRsaW5nJiZ0LnN5bmNFcnJvclRocm93YWJsZT8odGhpcy5fX3RyeU9yU2V0RXJyb3IodCxlKSx0aGlzLnVuc3Vic2NyaWJlKCkpOih0aGlzLl9fdHJ5T3JVbnN1YihlKSx0aGlzLnVuc3Vic2NyaWJlKCkpfWVsc2UgdGhpcy51bnN1YnNjcmliZSgpfX1fX3RyeU9yVW5zdWIodCxlKXt0cnl7dC5jYWxsKHRoaXMuX2NvbnRleHQsZSl9Y2F0Y2gobil7aWYodGhpcy51bnN1YnNjcmliZSgpLGkudXNlRGVwcmVjYXRlZFN5bmNocm9ub3VzRXJyb3JIYW5kbGluZyl0aHJvdyBuO28obil9fV9fdHJ5T3JTZXRFcnJvcih0LGUsbil7aWYoIWkudXNlRGVwcmVjYXRlZFN5bmNocm9ub3VzRXJyb3JIYW5kbGluZyl0aHJvdyBuZXcgRXJyb3IoImJhZCBjYWxsIik7dHJ5e2UuY2FsbCh0aGlzLl9jb250ZXh0LG4pfWNhdGNoKHIpe3JldHVybiBpLnVzZURlcHJlY2F0ZWRTeW5jaHJvbm91c0Vycm9ySGFuZGxpbmc/KHQuc3luY0Vycm9yVmFsdWU9cix0LnN5bmNFcnJvclRocm93bj0hMCwhMCk6KG8ociksITApfXJldHVybiExfV91bnN1YnNjcmliZSgpe2NvbnN0e19wYXJlbnRTdWJzY3JpYmVyOnR9PXRoaXM7dGhpcy5fY29udGV4dD1udWxsLHRoaXMuX3BhcmVudFN1YnNjcmliZXI9bnVsbCx0LnVuc3Vic2NyaWJlKCl9fWNvbnN0IG09KCgpPT4iZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiZTeW1ib2wub2JzZXJ2YWJsZXx8IkBAb2JzZXJ2YWJsZSIpKCk7ZnVuY3Rpb24geSh0KXtyZXR1cm4gdH1sZXQgdj0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKHQpe3RoaXMuX2lzU2NhbGFyPSExLHQmJih0aGlzLl9zdWJzY3JpYmU9dCl9bGlmdChlKXtjb25zdCBuPW5ldyB0O3JldHVybiBuLnNvdXJjZT10aGlzLG4ub3BlcmF0b3I9ZSxufXN1YnNjcmliZSh0LGUsbil7Y29uc3R7b3BlcmF0b3I6cn09dGhpcyxzPWZ1bmN0aW9uKHQsZSxuKXtpZih0KXtpZih0IGluc3RhbmNlb2YgZilyZXR1cm4gdDtpZih0W3BdKXJldHVybiB0W3BdKCl9cmV0dXJuIHR8fGV8fG4/bmV3IGYodCxlLG4pOm5ldyBmKGEpfSh0LGUsbik7aWYocy5hZGQocj9yLmNhbGwocyx0aGlzLnNvdXJjZSk6dGhpcy5zb3VyY2V8fGkudXNlRGVwcmVjYXRlZFN5bmNocm9ub3VzRXJyb3JIYW5kbGluZyYmIXMuc3luY0Vycm9yVGhyb3dhYmxlP3RoaXMuX3N1YnNjcmliZShzKTp0aGlzLl90cnlTdWJzY3JpYmUocykpLGkudXNlRGVwcmVjYXRlZFN5bmNocm9ub3VzRXJyb3JIYW5kbGluZyYmcy5zeW5jRXJyb3JUaHJvd2FibGUmJihzLnN5bmNFcnJvclRocm93YWJsZT0hMSxzLnN5bmNFcnJvclRocm93bikpdGhyb3cgcy5zeW5jRXJyb3JWYWx1ZTtyZXR1cm4gc31fdHJ5U3Vic2NyaWJlKHQpe3RyeXtyZXR1cm4gdGhpcy5fc3Vic2NyaWJlKHQpfWNhdGNoKGUpe2kudXNlRGVwcmVjYXRlZFN5bmNocm9ub3VzRXJyb3JIYW5kbGluZyYmKHQuc3luY0Vycm9yVGhyb3duPSEwLHQuc3luY0Vycm9yVmFsdWU9ZSksZnVuY3Rpb24odCl7Zm9yKDt0Oyl7Y29uc3R7Y2xvc2VkOmUsZGVzdGluYXRpb246bixpc1N0b3BwZWQ6cn09dDtpZihlfHxyKXJldHVybiExO3Q9biYmbiBpbnN0YW5jZW9mIGY/bjpudWxsfXJldHVybiEwfSh0KT90LmVycm9yKGUpOmNvbnNvbGUud2FybihlKX19Zm9yRWFjaCh0LGUpe3JldHVybiBuZXcoZT1iKGUpKSgoZSxuKT0+e2xldCByO3I9dGhpcy5zdWJzY3JpYmUoZT0+e3RyeXt0KGUpfWNhdGNoKHMpe24ocyksciYmci51bnN1YnNjcmliZSgpfX0sbixlKX0pfV9zdWJzY3JpYmUodCl7Y29uc3R7c291cmNlOmV9PXRoaXM7cmV0dXJuIGUmJmUuc3Vic2NyaWJlKHQpfVttXSgpe3JldHVybiB0aGlzfXBpcGUoLi4udCl7cmV0dXJuIDA9PT10Lmxlbmd0aD90aGlzOigwPT09KGU9dCkubGVuZ3RoP3k6MT09PWUubGVuZ3RoP2VbMF06ZnVuY3Rpb24odCl7cmV0dXJuIGUucmVkdWNlKCh0LGUpPT5lKHQpLHQpfSkodGhpcyk7dmFyIGV9dG9Qcm9taXNlKHQpe3JldHVybiBuZXcodD1iKHQpKSgodCxlKT0+e2xldCBuO3RoaXMuc3Vic2NyaWJlKHQ9Pm49dCx0PT5lKHQpLCgpPT50KG4pKX0pfX1yZXR1cm4gdC5jcmVhdGU9ZT0+bmV3IHQoZSksdH0pKCk7ZnVuY3Rpb24gYih0KXtpZih0fHwodD1pLlByb21pc2V8fFByb21pc2UpLCF0KXRocm93IG5ldyBFcnJvcigibm8gUHJvbWlzZSBpbXBsIGZvdW5kIik7cmV0dXJuIHR9Y29uc3Qgdz0oKCk9PntmdW5jdGlvbiB0KCl7cmV0dXJuIEVycm9yLmNhbGwodGhpcyksdGhpcy5tZXNzYWdlPSJvYmplY3QgdW5zdWJzY3JpYmVkIix0aGlzLm5hbWU9Ik9iamVjdFVuc3Vic2NyaWJlZEVycm9yIix0aGlzfXJldHVybiB0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKEVycm9yLnByb3RvdHlwZSksdH0pKCk7Y2xhc3MgXyBleHRlbmRzIGh7Y29uc3RydWN0b3IodCxlKXtzdXBlcigpLHRoaXMuc3ViamVjdD10LHRoaXMuc3Vic2NyaWJlcj1lLHRoaXMuY2xvc2VkPSExfXVuc3Vic2NyaWJlKCl7aWYodGhpcy5jbG9zZWQpcmV0dXJuO3RoaXMuY2xvc2VkPSEwO2NvbnN0IHQ9dGhpcy5zdWJqZWN0LGU9dC5vYnNlcnZlcnM7aWYodGhpcy5zdWJqZWN0PW51bGwsIWV8fDA9PT1lLmxlbmd0aHx8dC5pc1N0b3BwZWR8fHQuY2xvc2VkKXJldHVybjtjb25zdCBuPWUuaW5kZXhPZih0aGlzLnN1YnNjcmliZXIpOy0xIT09biYmZS5zcGxpY2UobiwxKX19Y2xhc3MgQyBleHRlbmRzIGZ7Y29uc3RydWN0b3IodCl7c3VwZXIodCksdGhpcy5kZXN0aW5hdGlvbj10fX1sZXQgRD0oKCk9PntjbGFzcyB0IGV4dGVuZHMgdntjb25zdHJ1Y3Rvcigpe3N1cGVyKCksdGhpcy5vYnNlcnZlcnM9W10sdGhpcy5jbG9zZWQ9ITEsdGhpcy5pc1N0b3BwZWQ9ITEsdGhpcy5oYXNFcnJvcj0hMSx0aGlzLnRocm93bkVycm9yPW51bGx9W3BdKCl7cmV0dXJuIG5ldyBDKHRoaXMpfWxpZnQodCl7Y29uc3QgZT1uZXcgRSh0aGlzLHRoaXMpO3JldHVybiBlLm9wZXJhdG9yPXQsZX1uZXh0KHQpe2lmKHRoaXMuY2xvc2VkKXRocm93IG5ldyB3O2lmKCF0aGlzLmlzU3RvcHBlZCl7Y29uc3R7b2JzZXJ2ZXJzOmV9PXRoaXMsbj1lLmxlbmd0aCxyPWUuc2xpY2UoKTtmb3IobGV0IHM9MDtzPG47cysrKXJbc10ubmV4dCh0KX19ZXJyb3IodCl7aWYodGhpcy5jbG9zZWQpdGhyb3cgbmV3IHc7dGhpcy5oYXNFcnJvcj0hMCx0aGlzLnRocm93bkVycm9yPXQsdGhpcy5pc1N0b3BwZWQ9ITA7Y29uc3R7b2JzZXJ2ZXJzOmV9PXRoaXMsbj1lLmxlbmd0aCxyPWUuc2xpY2UoKTtmb3IobGV0IHM9MDtzPG47cysrKXJbc10uZXJyb3IodCk7dGhpcy5vYnNlcnZlcnMubGVuZ3RoPTB9Y29tcGxldGUoKXtpZih0aGlzLmNsb3NlZCl0aHJvdyBuZXcgdzt0aGlzLmlzU3RvcHBlZD0hMDtjb25zdHtvYnNlcnZlcnM6dH09dGhpcyxlPXQubGVuZ3RoLG49dC5zbGljZSgpO2ZvcihsZXQgcj0wO3I8ZTtyKyspbltyXS5jb21wbGV0ZSgpO3RoaXMub2JzZXJ2ZXJzLmxlbmd0aD0wfXVuc3Vic2NyaWJlKCl7dGhpcy5pc1N0b3BwZWQ9ITAsdGhpcy5jbG9zZWQ9ITAsdGhpcy5vYnNlcnZlcnM9bnVsbH1fdHJ5U3Vic2NyaWJlKHQpe2lmKHRoaXMuY2xvc2VkKXRocm93IG5ldyB3O3JldHVybiBzdXBlci5fdHJ5U3Vic2NyaWJlKHQpfV9zdWJzY3JpYmUodCl7aWYodGhpcy5jbG9zZWQpdGhyb3cgbmV3IHc7cmV0dXJuIHRoaXMuaGFzRXJyb3I/KHQuZXJyb3IodGhpcy50aHJvd25FcnJvciksaC5FTVBUWSk6dGhpcy5pc1N0b3BwZWQ/KHQuY29tcGxldGUoKSxoLkVNUFRZKToodGhpcy5vYnNlcnZlcnMucHVzaCh0KSxuZXcgXyh0aGlzLHQpKX1hc09ic2VydmFibGUoKXtjb25zdCB0PW5ldyB2O3JldHVybiB0LnNvdXJjZT10aGlzLHR9fXJldHVybiB0LmNyZWF0ZT0odCxlKT0+bmV3IEUodCxlKSx0fSkoKTtjbGFzcyBFIGV4dGVuZHMgRHtjb25zdHJ1Y3Rvcih0LGUpe3N1cGVyKCksdGhpcy5kZXN0aW5hdGlvbj10LHRoaXMuc291cmNlPWV9bmV4dCh0KXtjb25zdHtkZXN0aW5hdGlvbjplfT10aGlzO2UmJmUubmV4dCYmZS5uZXh0KHQpfWVycm9yKHQpe2NvbnN0e2Rlc3RpbmF0aW9uOmV9PXRoaXM7ZSYmZS5lcnJvciYmdGhpcy5kZXN0aW5hdGlvbi5lcnJvcih0KX1jb21wbGV0ZSgpe2NvbnN0e2Rlc3RpbmF0aW9uOnR9PXRoaXM7dCYmdC5jb21wbGV0ZSYmdGhpcy5kZXN0aW5hdGlvbi5jb21wbGV0ZSgpfV9zdWJzY3JpYmUodCl7Y29uc3R7c291cmNlOmV9PXRoaXM7cmV0dXJuIGU/dGhpcy5zb3VyY2Uuc3Vic2NyaWJlKHQpOmguRU1QVFl9fWZ1bmN0aW9uIEEodCl7cmV0dXJuIHQmJiJmdW5jdGlvbiI9PXR5cGVvZiB0LnNjaGVkdWxlfWZ1bmN0aW9uIFModCxlKXtyZXR1cm4gZnVuY3Rpb24obil7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcigiYXJndW1lbnQgaXMgbm90IGEgZnVuY3Rpb24uIEFyZSB5b3UgbG9va2luZyBmb3IgYG1hcFRvKClgPyIpO3JldHVybiBuLmxpZnQobmV3IHgodCxlKSl9fWNsYXNzIHh7Y29uc3RydWN0b3IodCxlKXt0aGlzLnByb2plY3Q9dCx0aGlzLnRoaXNBcmc9ZX1jYWxsKHQsZSl7cmV0dXJuIGUuc3Vic2NyaWJlKG5ldyBrKHQsdGhpcy5wcm9qZWN0LHRoaXMudGhpc0FyZykpfX1jbGFzcyBrIGV4dGVuZHMgZntjb25zdHJ1Y3Rvcih0LGUsbil7c3VwZXIodCksdGhpcy5wcm9qZWN0PWUsdGhpcy5jb3VudD0wLHRoaXMudGhpc0FyZz1ufHx0aGlzfV9uZXh0KHQpe2xldCBlO3RyeXtlPXRoaXMucHJvamVjdC5jYWxsKHRoaXMudGhpc0FyZyx0LHRoaXMuY291bnQrKyl9Y2F0Y2gobil7cmV0dXJuIHZvaWQgdGhpcy5kZXN0aW5hdGlvbi5lcnJvcihuKX10aGlzLmRlc3RpbmF0aW9uLm5leHQoZSl9fWNvbnN0IFQ9dD0+ZT0+e2ZvcihsZXQgbj0wLHI9dC5sZW5ndGg7bjxyJiYhZS5jbG9zZWQ7bisrKWUubmV4dCh0W25dKTtlLmNvbXBsZXRlKCl9O2Z1bmN0aW9uIEYoKXtyZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I/U3ltYm9sLml0ZXJhdG9yOiJAQGl0ZXJhdG9yIn1jb25zdCBPPUYoKSxQPXQ9PnQmJiJudW1iZXIiPT10eXBlb2YgdC5sZW5ndGgmJiJmdW5jdGlvbiIhPXR5cGVvZiB0O2Z1bmN0aW9uIEkodCl7cmV0dXJuISF0JiYiZnVuY3Rpb24iIT10eXBlb2YgdC5zdWJzY3JpYmUmJiJmdW5jdGlvbiI9PXR5cGVvZiB0LnRoZW59Y29uc3QgUj10PT57aWYodCYmImZ1bmN0aW9uIj09dHlwZW9mIHRbbV0pcmV0dXJuIHI9dCx0PT57Y29uc3QgZT1yW21dKCk7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIGUuc3Vic2NyaWJlKXRocm93IG5ldyBUeXBlRXJyb3IoIlByb3ZpZGVkIG9iamVjdCBkb2VzIG5vdCBjb3JyZWN0bHkgaW1wbGVtZW50IFN5bWJvbC5vYnNlcnZhYmxlIik7cmV0dXJuIGUuc3Vic2NyaWJlKHQpfTtpZihQKHQpKXJldHVybiBUKHQpO2lmKEkodCkpcmV0dXJuIG49dCx0PT4obi50aGVuKGU9Pnt0LmNsb3NlZHx8KHQubmV4dChlKSx0LmNvbXBsZXRlKCkpfSxlPT50LmVycm9yKGUpKS50aGVuKG51bGwsbyksdCk7aWYodCYmImZ1bmN0aW9uIj09dHlwZW9mIHRbT10pcmV0dXJuIGU9dCx0PT57Y29uc3Qgbj1lW09dKCk7Zm9yKDs7KXtsZXQgZTt0cnl7ZT1uLm5leHQoKX1jYXRjaChyKXtyZXR1cm4gdC5lcnJvcihyKSx0fWlmKGUuZG9uZSl7dC5jb21wbGV0ZSgpO2JyZWFrfWlmKHQubmV4dChlLnZhbHVlKSx0LmNsb3NlZClicmVha31yZXR1cm4iZnVuY3Rpb24iPT10eXBlb2Ygbi5yZXR1cm4mJnQuYWRkKCgpPT57bi5yZXR1cm4mJm4ucmV0dXJuKCl9KSx0fTt7Y29uc3QgZT11KHQpPyJhbiBpbnZhbGlkIG9iamVjdCI6YCcke3R9J2A7dGhyb3cgbmV3IFR5cGVFcnJvcihgWW91IHByb3ZpZGVkICR7ZX0gd2hlcmUgYSBzdHJlYW0gd2FzIGV4cGVjdGVkLiBZb3UgY2FuIHByb3ZpZGUgYW4gT2JzZXJ2YWJsZSwgUHJvbWlzZSwgQXJyYXksIG9yIEl0ZXJhYmxlLmApfXZhciBlLG4scn07ZnVuY3Rpb24gTSh0LGUpe3JldHVybiBuZXcgdihuPT57Y29uc3Qgcj1uZXcgaDtsZXQgcz0wO3JldHVybiByLmFkZChlLnNjaGVkdWxlKChmdW5jdGlvbigpe3MhPT10Lmxlbmd0aD8obi5uZXh0KHRbcysrXSksbi5jbG9zZWR8fHIuYWRkKHRoaXMuc2NoZWR1bGUoKSkpOm4uY29tcGxldGUoKX0pKSkscn0pfWZ1bmN0aW9uIGoodCxlKXtyZXR1cm4gZT9mdW5jdGlvbih0LGUpe2lmKG51bGwhPXQpe2lmKGZ1bmN0aW9uKHQpe3JldHVybiB0JiYiZnVuY3Rpb24iPT10eXBlb2YgdFttXX0odCkpcmV0dXJuIGZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5ldyB2KG49Pntjb25zdCByPW5ldyBoO3JldHVybiByLmFkZChlLnNjaGVkdWxlKCgpPT57Y29uc3Qgcz10W21dKCk7ci5hZGQocy5zdWJzY3JpYmUoe25leHQodCl7ci5hZGQoZS5zY2hlZHVsZSgoKT0+bi5uZXh0KHQpKSl9LGVycm9yKHQpe3IuYWRkKGUuc2NoZWR1bGUoKCk9Pm4uZXJyb3IodCkpKX0sY29tcGxldGUoKXtyLmFkZChlLnNjaGVkdWxlKCgpPT5uLmNvbXBsZXRlKCkpKX19KSl9KSkscn0pfSh0LGUpO2lmKEkodCkpcmV0dXJuIGZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5ldyB2KG49Pntjb25zdCByPW5ldyBoO3JldHVybiByLmFkZChlLnNjaGVkdWxlKCgpPT50LnRoZW4odD0+e3IuYWRkKGUuc2NoZWR1bGUoKCk9PntuLm5leHQodCksci5hZGQoZS5zY2hlZHVsZSgoKT0+bi5jb21wbGV0ZSgpKSl9KSl9LHQ9PntyLmFkZChlLnNjaGVkdWxlKCgpPT5uLmVycm9yKHQpKSl9KSkpLHJ9KX0odCxlKTtpZihQKHQpKXJldHVybiBNKHQsZSk7aWYoZnVuY3Rpb24odCl7cmV0dXJuIHQmJiJmdW5jdGlvbiI9PXR5cGVvZiB0W09dfSh0KXx8InN0cmluZyI9PXR5cGVvZiB0KXJldHVybiBmdW5jdGlvbih0LGUpe2lmKCF0KXRocm93IG5ldyBFcnJvcigiSXRlcmFibGUgY2Fubm90IGJlIG51bGwiKTtyZXR1cm4gbmV3IHYobj0+e2NvbnN0IHI9bmV3IGg7bGV0IHM7cmV0dXJuIHIuYWRkKCgpPT57cyYmImZ1bmN0aW9uIj09dHlwZW9mIHMucmV0dXJuJiZzLnJldHVybigpfSksci5hZGQoZS5zY2hlZHVsZSgoKT0+e3M9dFtPXSgpLHIuYWRkKGUuc2NoZWR1bGUoKGZ1bmN0aW9uKCl7aWYobi5jbG9zZWQpcmV0dXJuO2xldCB0LGU7dHJ5e2NvbnN0IG49cy5uZXh0KCk7dD1uLnZhbHVlLGU9bi5kb25lfWNhdGNoKHIpe3JldHVybiB2b2lkIG4uZXJyb3Iocil9ZT9uLmNvbXBsZXRlKCk6KG4ubmV4dCh0KSx0aGlzLnNjaGVkdWxlKCkpfSkpKX0pKSxyfSl9KHQsZSl9dGhyb3cgbmV3IFR5cGVFcnJvcigobnVsbCE9PXQmJnR5cGVvZiB0fHx0KSsiIGlzIG5vdCBvYnNlcnZhYmxlIil9KHQsZSk6dCBpbnN0YW5jZW9mIHY/dDpuZXcgdihSKHQpKX1jbGFzcyBOIGV4dGVuZHMgZntjb25zdHJ1Y3Rvcih0KXtzdXBlcigpLHRoaXMucGFyZW50PXR9X25leHQodCl7dGhpcy5wYXJlbnQubm90aWZ5TmV4dCh0KX1fZXJyb3IodCl7dGhpcy5wYXJlbnQubm90aWZ5RXJyb3IodCksdGhpcy51bnN1YnNjcmliZSgpfV9jb21wbGV0ZSgpe3RoaXMucGFyZW50Lm5vdGlmeUNvbXBsZXRlKCksdGhpcy51bnN1YnNjcmliZSgpfX1jbGFzcyBWIGV4dGVuZHMgZntub3RpZnlOZXh0KHQpe3RoaXMuZGVzdGluYXRpb24ubmV4dCh0KX1ub3RpZnlFcnJvcih0KXt0aGlzLmRlc3RpbmF0aW9uLmVycm9yKHQpfW5vdGlmeUNvbXBsZXRlKCl7dGhpcy5kZXN0aW5hdGlvbi5jb21wbGV0ZSgpfX1mdW5jdGlvbiBCKHQsZSl7aWYoZS5jbG9zZWQpcmV0dXJuO2lmKHQgaW5zdGFuY2VvZiB2KXJldHVybiB0LnN1YnNjcmliZShlKTtsZXQgbjt0cnl7bj1SKHQpKGUpfWNhdGNoKHIpe2UuZXJyb3Iocil9cmV0dXJuIG59ZnVuY3Rpb24gTCh0LGUsbj1OdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFkpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiBlP3I9PnIucGlwZShMKChuLHIpPT5qKHQobixyKSkucGlwZShTKCh0LHMpPT5lKG4sdCxyLHMpKSksbikpOigibnVtYmVyIj09dHlwZW9mIGUmJihuPWUpLGU9PmUubGlmdChuZXcgVSh0LG4pKSl9Y2xhc3MgVXtjb25zdHJ1Y3Rvcih0LGU9TnVtYmVyLlBPU0lUSVZFX0lORklOSVRZKXt0aGlzLnByb2plY3Q9dCx0aGlzLmNvbmN1cnJlbnQ9ZX1jYWxsKHQsZSl7cmV0dXJuIGUuc3Vic2NyaWJlKG5ldyBIKHQsdGhpcy5wcm9qZWN0LHRoaXMuY29uY3VycmVudCkpfX1jbGFzcyBIIGV4dGVuZHMgVntjb25zdHJ1Y3Rvcih0LGUsbj1OdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFkpe3N1cGVyKHQpLHRoaXMucHJvamVjdD1lLHRoaXMuY29uY3VycmVudD1uLHRoaXMuaGFzQ29tcGxldGVkPSExLHRoaXMuYnVmZmVyPVtdLHRoaXMuYWN0aXZlPTAsdGhpcy5pbmRleD0wfV9uZXh0KHQpe3RoaXMuYWN0aXZlPHRoaXMuY29uY3VycmVudD90aGlzLl90cnlOZXh0KHQpOnRoaXMuYnVmZmVyLnB1c2godCl9X3RyeU5leHQodCl7bGV0IGU7Y29uc3Qgbj10aGlzLmluZGV4Kys7dHJ5e2U9dGhpcy5wcm9qZWN0KHQsbil9Y2F0Y2gocil7cmV0dXJuIHZvaWQgdGhpcy5kZXN0aW5hdGlvbi5lcnJvcihyKX10aGlzLmFjdGl2ZSsrLHRoaXMuX2lubmVyU3ViKGUpfV9pbm5lclN1Yih0KXtjb25zdCBlPW5ldyBOKHRoaXMpLG49dGhpcy5kZXN0aW5hdGlvbjtuLmFkZChlKTtjb25zdCByPUIodCxlKTtyIT09ZSYmbi5hZGQocil9X2NvbXBsZXRlKCl7dGhpcy5oYXNDb21wbGV0ZWQ9ITAsMD09PXRoaXMuYWN0aXZlJiYwPT09dGhpcy5idWZmZXIubGVuZ3RoJiZ0aGlzLmRlc3RpbmF0aW9uLmNvbXBsZXRlKCksdGhpcy51bnN1YnNjcmliZSgpfW5vdGlmeU5leHQodCl7dGhpcy5kZXN0aW5hdGlvbi5uZXh0KHQpfW5vdGlmeUNvbXBsZXRlKCl7Y29uc3QgdD10aGlzLmJ1ZmZlcjt0aGlzLmFjdGl2ZS0tLHQubGVuZ3RoPjA/dGhpcy5fbmV4dCh0LnNoaWZ0KCkpOjA9PT10aGlzLmFjdGl2ZSYmdGhpcy5oYXNDb21wbGV0ZWQmJnRoaXMuZGVzdGluYXRpb24uY29tcGxldGUoKX19ZnVuY3Rpb24gJCh0PU51bWJlci5QT1NJVElWRV9JTkZJTklUWSl7cmV0dXJuIEwoeSx0KX1mdW5jdGlvbiB6KHQsZSl7cmV0dXJuIGU/TSh0LGUpOm5ldyB2KFQodCkpfWZ1bmN0aW9uIHEoLi4udCl7bGV0IGU9TnVtYmVyLlBPU0lUSVZFX0lORklOSVRZLG49bnVsbCxyPXRbdC5sZW5ndGgtMV07cmV0dXJuIEEocik/KG49dC5wb3AoKSx0Lmxlbmd0aD4xJiYibnVtYmVyIj09dHlwZW9mIHRbdC5sZW5ndGgtMV0mJihlPXQucG9wKCkpKToibnVtYmVyIj09dHlwZW9mIHImJihlPXQucG9wKCkpLG51bGw9PT1uJiYxPT09dC5sZW5ndGgmJnRbMF1pbnN0YW5jZW9mIHY/dFswXTokKGUpKHoodCxuKSl9ZnVuY3Rpb24gVygpe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gdC5saWZ0KG5ldyBaKHQpKX19Y2xhc3MgWntjb25zdHJ1Y3Rvcih0KXt0aGlzLmNvbm5lY3RhYmxlPXR9Y2FsbCh0LGUpe2NvbnN0e2Nvbm5lY3RhYmxlOm59PXRoaXM7bi5fcmVmQ291bnQrKztjb25zdCByPW5ldyBHKHQsbikscz1lLnN1YnNjcmliZShyKTtyZXR1cm4gci5jbG9zZWR8fChyLmNvbm5lY3Rpb249bi5jb25uZWN0KCkpLHN9fWNsYXNzIEcgZXh0ZW5kcyBme2NvbnN0cnVjdG9yKHQsZSl7c3VwZXIodCksdGhpcy5jb25uZWN0YWJsZT1lfV91bnN1YnNjcmliZSgpe2NvbnN0e2Nvbm5lY3RhYmxlOnR9PXRoaXM7aWYoIXQpcmV0dXJuIHZvaWQodGhpcy5jb25uZWN0aW9uPW51bGwpO3RoaXMuY29ubmVjdGFibGU9bnVsbDtjb25zdCBlPXQuX3JlZkNvdW50O2lmKGU8PTApcmV0dXJuIHZvaWQodGhpcy5jb25uZWN0aW9uPW51bGwpO2lmKHQuX3JlZkNvdW50PWUtMSxlPjEpcmV0dXJuIHZvaWQodGhpcy5jb25uZWN0aW9uPW51bGwpO2NvbnN0e2Nvbm5lY3Rpb246bn09dGhpcyxyPXQuX2Nvbm5lY3Rpb247dGhpcy5jb25uZWN0aW9uPW51bGwsIXJ8fG4mJnIhPT1ufHxyLnVuc3Vic2NyaWJlKCl9fWNsYXNzIEsgZXh0ZW5kcyB2e2NvbnN0cnVjdG9yKHQsZSl7c3VwZXIoKSx0aGlzLnNvdXJjZT10LHRoaXMuc3ViamVjdEZhY3Rvcnk9ZSx0aGlzLl9yZWZDb3VudD0wLHRoaXMuX2lzQ29tcGxldGU9ITF9X3N1YnNjcmliZSh0KXtyZXR1cm4gdGhpcy5nZXRTdWJqZWN0KCkuc3Vic2NyaWJlKHQpfWdldFN1YmplY3QoKXtjb25zdCB0PXRoaXMuX3N1YmplY3Q7cmV0dXJuIHQmJiF0LmlzU3RvcHBlZHx8KHRoaXMuX3N1YmplY3Q9dGhpcy5zdWJqZWN0RmFjdG9yeSgpKSx0aGlzLl9zdWJqZWN0fWNvbm5lY3QoKXtsZXQgdD10aGlzLl9jb25uZWN0aW9uO3JldHVybiB0fHwodGhpcy5faXNDb21wbGV0ZT0hMSx0PXRoaXMuX2Nvbm5lY3Rpb249bmV3IGgsdC5hZGQodGhpcy5zb3VyY2Uuc3Vic2NyaWJlKG5ldyBZKHRoaXMuZ2V0U3ViamVjdCgpLHRoaXMpKSksdC5jbG9zZWQmJih0aGlzLl9jb25uZWN0aW9uPW51bGwsdD1oLkVNUFRZKSksdH1yZWZDb3VudCgpe3JldHVybiBXKCkodGhpcyl9fWNvbnN0IFE9KCgpPT57Y29uc3QgdD1LLnByb3RvdHlwZTtyZXR1cm57b3BlcmF0b3I6e3ZhbHVlOm51bGx9LF9yZWZDb3VudDp7dmFsdWU6MCx3cml0YWJsZTohMH0sX3N1YmplY3Q6e3ZhbHVlOm51bGwsd3JpdGFibGU6ITB9LF9jb25uZWN0aW9uOnt2YWx1ZTpudWxsLHdyaXRhYmxlOiEwfSxfc3Vic2NyaWJlOnt2YWx1ZTp0Ll9zdWJzY3JpYmV9LF9pc0NvbXBsZXRlOnt2YWx1ZTp0Ll9pc0NvbXBsZXRlLHdyaXRhYmxlOiEwfSxnZXRTdWJqZWN0Ont2YWx1ZTp0LmdldFN1YmplY3R9LGNvbm5lY3Q6e3ZhbHVlOnQuY29ubmVjdH0scmVmQ291bnQ6e3ZhbHVlOnQucmVmQ291bnR9fX0pKCk7Y2xhc3MgWSBleHRlbmRzIEN7Y29uc3RydWN0b3IodCxlKXtzdXBlcih0KSx0aGlzLmNvbm5lY3RhYmxlPWV9X2Vycm9yKHQpe3RoaXMuX3Vuc3Vic2NyaWJlKCksc3VwZXIuX2Vycm9yKHQpfV9jb21wbGV0ZSgpe3RoaXMuY29ubmVjdGFibGUuX2lzQ29tcGxldGU9ITAsdGhpcy5fdW5zdWJzY3JpYmUoKSxzdXBlci5fY29tcGxldGUoKX1fdW5zdWJzY3JpYmUoKXtjb25zdCB0PXRoaXMuY29ubmVjdGFibGU7aWYodCl7dGhpcy5jb25uZWN0YWJsZT1udWxsO2NvbnN0IGU9dC5fY29ubmVjdGlvbjt0Ll9yZWZDb3VudD0wLHQuX3N1YmplY3Q9bnVsbCx0Ll9jb25uZWN0aW9uPW51bGwsZSYmZS51bnN1YnNjcmliZSgpfX19ZnVuY3Rpb24gSigpe3JldHVybiBuZXcgRH1mdW5jdGlvbiBYKHQpe3JldHVybnt0b1N0cmluZzp0fS50b1N0cmluZygpfWNvbnN0IHR0PSJfX3BhcmFtZXRlcnNfXyI7ZnVuY3Rpb24gZXQodCxlLG4pe3JldHVybiBYKCgpPT57Y29uc3Qgcj1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oLi4uZSl7aWYodCl7Y29uc3Qgbj10KC4uLmUpO2Zvcihjb25zdCB0IGluIG4pdGhpc1t0XT1uW3RdfX19KGUpO2Z1bmN0aW9uIHMoLi4udCl7aWYodGhpcyBpbnN0YW5jZW9mIHMpcmV0dXJuIHIuYXBwbHkodGhpcyx0KSx0aGlzO2NvbnN0IGU9bmV3IHMoLi4udCk7cmV0dXJuIG4uYW5ub3RhdGlvbj1lLG47ZnVuY3Rpb24gbih0LG4scil7Y29uc3Qgcz10Lmhhc093blByb3BlcnR5KHR0KT90W3R0XTpPYmplY3QuZGVmaW5lUHJvcGVydHkodCx0dCx7dmFsdWU6W119KVt0dF07Zm9yKDtzLmxlbmd0aDw9cjspcy5wdXNoKG51bGwpO3JldHVybihzW3JdPXNbcl18fFtdKS5wdXNoKGUpLHR9fXJldHVybiBuJiYocy5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShuLnByb3RvdHlwZSkpLHMucHJvdG90eXBlLm5nTWV0YWRhdGFOYW1lPXQscy5hbm5vdGF0aW9uQ2xzPXMsc30pfWNvbnN0IG50PWV0KCJJbmplY3QiLHQ9Pih7dG9rZW46dH0pKSxydD1ldCgiT3B0aW9uYWwiKSxzdD1ldCgiU2VsZiIpLGl0PWV0KCJTa2lwU2VsZiIpO3ZhciBvdD1mdW5jdGlvbih0KXtyZXR1cm4gdFt0LkRlZmF1bHQ9MF09IkRlZmF1bHQiLHRbdC5Ib3N0PTFdPSJIb3N0Iix0W3QuU2VsZj0yXT0iU2VsZiIsdFt0LlNraXBTZWxmPTRdPSJTa2lwU2VsZiIsdFt0Lk9wdGlvbmFsPThdPSJPcHRpb25hbCIsdH0oe30pO2Z1bmN0aW9uIGF0KHQpe2ZvcihsZXQgZSBpbiB0KWlmKHRbZV09PT1hdClyZXR1cm4gZTt0aHJvdyBFcnJvcigiQ291bGQgbm90IGZpbmQgcmVuYW1lZCBwcm9wZXJ0eSBvbiB0YXJnZXQgb2JqZWN0LiIpfWZ1bmN0aW9uIGx0KHQsZSl7Zm9yKGNvbnN0IG4gaW4gZSllLmhhc093blByb3BlcnR5KG4pJiYhdC5oYXNPd25Qcm9wZXJ0eShuKSYmKHRbbl09ZVtuXSl9ZnVuY3Rpb24gdXQodCl7cmV0dXJue3Rva2VuOnQudG9rZW4scHJvdmlkZWRJbjp0LnByb3ZpZGVkSW58fG51bGwsZmFjdG9yeTp0LmZhY3RvcnksdmFsdWU6dm9pZCAwfX1mdW5jdGlvbiBjdCh0KXtyZXR1cm57ZmFjdG9yeTp0LmZhY3RvcnkscHJvdmlkZXJzOnQucHJvdmlkZXJzfHxbXSxpbXBvcnRzOnQuaW1wb3J0c3x8W119fWZ1bmN0aW9uIGh0KHQpe3JldHVybiBkdCh0LHRbZnRdKXx8ZHQodCx0W3l0XSl9ZnVuY3Rpb24gZHQodCxlKXtyZXR1cm4gZSYmZS50b2tlbj09PXQ/ZTpudWxsfWZ1bmN0aW9uIHB0KHQpe3JldHVybiB0JiYodC5oYXNPd25Qcm9wZXJ0eShndCl8fHQuaGFzT3duUHJvcGVydHkodnQpKT90W2d0XTpudWxsfWNvbnN0IGZ0PWF0KHsiXHUwMjc1cHJvdiI6YXR9KSxndD1hdCh7Ilx1MDI3NWluaiI6YXR9KSxtdD1hdCh7Ilx1MDI3NXByb3ZGYWxsYmFjayI6YXR9KSx5dD1hdCh7bmdJbmplY3RhYmxlRGVmOmF0fSksdnQ9YXQoe25nSW5qZWN0b3JEZWY6YXR9KTtmdW5jdGlvbiBidCh0KXtpZigic3RyaW5nIj09dHlwZW9mIHQpcmV0dXJuIHQ7aWYoQXJyYXkuaXNBcnJheSh0KSlyZXR1cm4iWyIrdC5tYXAoYnQpLmpvaW4oIiwgIikrIl0iO2lmKG51bGw9PXQpcmV0dXJuIiIrdDtpZih0Lm92ZXJyaWRkZW5OYW1lKXJldHVybiIiK3Qub3ZlcnJpZGRlbk5hbWU7aWYodC5uYW1lKXJldHVybiIiK3QubmFtZTtjb25zdCBlPXQudG9TdHJpbmcoKTtpZihudWxsPT1lKXJldHVybiIiK2U7Y29uc3Qgbj1lLmluZGV4T2YoIlxuIik7cmV0dXJuLTE9PT1uP2U6ZS5zdWJzdHJpbmcoMCxuKX1mdW5jdGlvbiB3dCh0LGUpe3JldHVybiBudWxsPT10fHwiIj09PXQ/bnVsbD09PWU/IiI6ZTpudWxsPT1lfHwiIj09PWU/dDp0KyIgIitlfWNvbnN0IF90PWF0KHtfX2ZvcndhcmRfcmVmX186YXR9KTtmdW5jdGlvbiBDdCh0KXtyZXR1cm4gdC5fX2ZvcndhcmRfcmVmX189Q3QsdC50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiBidCh0aGlzKCkpfSx0fWZ1bmN0aW9uIER0KHQpe3JldHVybiBFdCh0KT90KCk6dH1mdW5jdGlvbiBFdCh0KXtyZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgdCYmdC5oYXNPd25Qcm9wZXJ0eShfdCkmJnQuX19mb3J3YXJkX3JlZl9fPT09Q3R9Y29uc3QgQXQ9InVuZGVmaW5lZCIhPXR5cGVvZiBnbG9iYWxUaGlzJiZnbG9iYWxUaGlzLFN0PSJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3cseHQ9InVuZGVmaW5lZCIhPXR5cGVvZiBzZWxmJiYidW5kZWZpbmVkIiE9dHlwZW9mIFdvcmtlckdsb2JhbFNjb3BlJiZzZWxmIGluc3RhbmNlb2YgV29ya2VyR2xvYmFsU2NvcGUmJnNlbGYsa3Q9InVuZGVmaW5lZCIhPXR5cGVvZiBnbG9iYWwmJmdsb2JhbCxUdD1BdHx8a3R8fFN0fHx4dCxGdD1hdCh7Ilx1MDI3NWNtcCI6YXR9KSxPdD1hdCh7Ilx1MDI3NWRpciI6YXR9KSxQdD1hdCh7Ilx1MDI3NXBpcGUiOmF0fSksSXQ9YXQoeyJcdTAyNzVtb2QiOmF0fSksUnQ9YXQoeyJcdTAyNzVsb2MiOmF0fSksTXQ9YXQoeyJcdTAyNzVmYWMiOmF0fSksanQ9YXQoe19fTkdfRUxFTUVOVF9JRF9fOmF0fSk7Y2xhc3MgTnR7Y29uc3RydWN0b3IodCxlKXt0aGlzLl9kZXNjPXQsdGhpcy5uZ01ldGFkYXRhTmFtZT0iSW5qZWN0aW9uVG9rZW4iLHRoaXMuXHUwMjc1cHJvdj12b2lkIDAsIm51bWJlciI9PXR5cGVvZiBlP3RoaXMuX19OR19FTEVNRU5UX0lEX189ZTp2b2lkIDAhPT1lJiYodGhpcy5cdTAyNzVwcm92PXV0KHt0b2tlbjp0aGlzLHByb3ZpZGVkSW46ZS5wcm92aWRlZElufHwicm9vdCIsZmFjdG9yeTplLmZhY3Rvcnl9KSl9dG9TdHJpbmcoKXtyZXR1cm4iSW5qZWN0aW9uVG9rZW4gIit0aGlzLl9kZXNjfX1jb25zdCBWdD1uZXcgTnQoIklOSkVDVE9SIiwtMSksQnQ9e30sTHQ9L1xuL2dtLFV0PSJfX3NvdXJjZSIsSHQ9YXQoe3Byb3ZpZGU6U3RyaW5nLHVzZVZhbHVlOmF0fSk7bGV0ICR0LHp0PXZvaWQgMDtmdW5jdGlvbiBxdCh0KXtjb25zdCBlPXp0O3JldHVybiB6dD10LGV9ZnVuY3Rpb24gV3QodCl7Y29uc3QgZT0kdDtyZXR1cm4gJHQ9dCxlfWZ1bmN0aW9uIFp0KHQsZT1vdC5EZWZhdWx0KXtpZih2b2lkIDA9PT16dCl0aHJvdyBuZXcgRXJyb3IoImluamVjdCgpIG11c3QgYmUgY2FsbGVkIGZyb20gYW4gaW5qZWN0aW9uIGNvbnRleHQiKTtyZXR1cm4gbnVsbD09PXp0P0t0KHQsdm9pZCAwLGUpOnp0LmdldCh0LGUmb3QuT3B0aW9uYWw/bnVsbDp2b2lkIDAsZSl9ZnVuY3Rpb24gR3QodCxlPW90LkRlZmF1bHQpe3JldHVybigkdHx8WnQpKER0KHQpLGUpfWZ1bmN0aW9uIEt0KHQsZSxuKXtjb25zdCByPWh0KHQpO2lmKHImJiJyb290Ij09ci5wcm92aWRlZEluKXJldHVybiB2b2lkIDA9PT1yLnZhbHVlP3IudmFsdWU9ci5mYWN0b3J5KCk6ci52YWx1ZTtpZihuJm90Lk9wdGlvbmFsKXJldHVybiBudWxsO2lmKHZvaWQgMCE9PWUpcmV0dXJuIGU7dGhyb3cgbmV3IEVycm9yKGBJbmplY3RvcjogTk9UX0ZPVU5EIFske2J0KHQpfV1gKX1mdW5jdGlvbiBRdCh0KXtjb25zdCBlPVtdO2ZvcihsZXQgbj0wO248dC5sZW5ndGg7bisrKXtjb25zdCByPUR0KHRbbl0pO2lmKEFycmF5LmlzQXJyYXkocikpe2lmKDA9PT1yLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoIkFyZ3VtZW50cyBhcnJheSBtdXN0IGhhdmUgYXJndW1lbnRzLiIpO2xldCB0PXZvaWQgMCxuPW90LkRlZmF1bHQ7Zm9yKGxldCBlPTA7ZTxyLmxlbmd0aDtlKyspe2NvbnN0IHM9cltlXTtzIGluc3RhbmNlb2YgcnR8fCJPcHRpb25hbCI9PT1zLm5nTWV0YWRhdGFOYW1lfHxzPT09cnQ/bnw9b3QuT3B0aW9uYWw6cyBpbnN0YW5jZW9mIGl0fHwiU2tpcFNlbGYiPT09cy5uZ01ldGFkYXRhTmFtZXx8cz09PWl0P258PW90LlNraXBTZWxmOnMgaW5zdGFuY2VvZiBzdHx8IlNlbGYiPT09cy5uZ01ldGFkYXRhTmFtZXx8cz09PXN0P258PW90LlNlbGY6dD1zIGluc3RhbmNlb2YgbnR8fHM9PT1udD9zLnRva2VuOnN9ZS5wdXNoKEd0KHQsbikpfWVsc2UgZS5wdXNoKEd0KHIpKX1yZXR1cm4gZX1jbGFzcyBZdHtnZXQodCxlPUJ0KXtpZihlPT09QnQpe2NvbnN0IGU9bmV3IEVycm9yKGBOdWxsSW5qZWN0b3JFcnJvcjogTm8gcHJvdmlkZXIgZm9yICR7YnQodCl9IWApO3Rocm93IGUubmFtZT0iTnVsbEluamVjdG9yRXJyb3IiLGV9cmV0dXJuIGV9fWNsYXNzIEp0e31jbGFzcyBYdHt9ZnVuY3Rpb24gdGUodCxlKXt0LmZvckVhY2godD0+QXJyYXkuaXNBcnJheSh0KT90ZSh0LGUpOmUodCkpfWZ1bmN0aW9uIGVlKHQsZSxuKXtlPj10Lmxlbmd0aD90LnB1c2gobik6dC5zcGxpY2UoZSwwLG4pfWZ1bmN0aW9uIG5lKHQsZSl7cmV0dXJuIGU+PXQubGVuZ3RoLTE/dC5wb3AoKTp0LnNwbGljZShlLDEpWzBdfWZ1bmN0aW9uIHJlKHQsZSl7Y29uc3Qgbj1bXTtmb3IobGV0IHI9MDtyPHQ7cisrKW4ucHVzaChlKTtyZXR1cm4gbn1mdW5jdGlvbiBzZSh0LGUsbil7bGV0IHI9b2UodCxlKTtyZXR1cm4gcj49MD90WzF8cl09bjoocj1+cixmdW5jdGlvbih0LGUsbixyKXtsZXQgcz10Lmxlbmd0aDtpZihzPT1lKXQucHVzaChuLHIpO2Vsc2UgaWYoMT09PXMpdC5wdXNoKHIsdFswXSksdFswXT1uO2Vsc2V7Zm9yKHMtLSx0LnB1c2godFtzLTFdLHRbc10pO3M+ZTspdFtzXT10W3MtMl0scy0tO3RbZV09bix0W2UrMV09cn19KHQscixlLG4pKSxyfWZ1bmN0aW9uIGllKHQsZSl7Y29uc3Qgbj1vZSh0LGUpO2lmKG4+PTApcmV0dXJuIHRbMXxuXX1mdW5jdGlvbiBvZSh0LGUpe3JldHVybiBmdW5jdGlvbih0LGUsbil7bGV0IHI9MCxzPXQubGVuZ3RoPj4xO2Zvcig7cyE9PXI7KXtjb25zdCBuPXIrKHMtcj4+MSksaT10W248PDFdO2lmKGU9PT1pKXJldHVybiBuPDwxO2k+ZT9zPW46cj1uKzF9cmV0dXJufihzPDwxKX0odCxlKX12YXIgYWU9ZnVuY3Rpb24odCl7cmV0dXJuIHRbdC5PblB1c2g9MF09Ik9uUHVzaCIsdFt0LkRlZmF1bHQ9MV09IkRlZmF1bHQiLHR9KHt9KSxsZT1mdW5jdGlvbih0KXtyZXR1cm4gdFt0LkVtdWxhdGVkPTBdPSJFbXVsYXRlZCIsdFt0Lk5hdGl2ZT0xXT0iTmF0aXZlIix0W3QuTm9uZT0yXT0iTm9uZSIsdFt0LlNoYWRvd0RvbT0zXT0iU2hhZG93RG9tIix0fSh7fSk7Y29uc3QgdWU9e30sY2U9W107bGV0IGhlPTA7ZnVuY3Rpb24gZGUodCl7cmV0dXJuIFgoKCk9Pntjb25zdCBlPXt9LG49e3R5cGU6dC50eXBlLHByb3ZpZGVyc1Jlc29sdmVyOm51bGwsZGVjbHM6dC5kZWNscyx2YXJzOnQudmFycyxmYWN0b3J5Om51bGwsdGVtcGxhdGU6dC50ZW1wbGF0ZXx8bnVsbCxjb25zdHM6dC5jb25zdHN8fG51bGwsbmdDb250ZW50U2VsZWN0b3JzOnQubmdDb250ZW50U2VsZWN0b3JzLGhvc3RCaW5kaW5nczp0Lmhvc3RCaW5kaW5nc3x8bnVsbCxob3N0VmFyczp0Lmhvc3RWYXJzfHwwLGhvc3RBdHRyczp0Lmhvc3RBdHRyc3x8bnVsbCxjb250ZW50UXVlcmllczp0LmNvbnRlbnRRdWVyaWVzfHxudWxsLGRlY2xhcmVkSW5wdXRzOmUsaW5wdXRzOm51bGwsb3V0cHV0czpudWxsLGV4cG9ydEFzOnQuZXhwb3J0QXN8fG51bGwsb25QdXNoOnQuY2hhbmdlRGV0ZWN0aW9uPT09YWUuT25QdXNoLGRpcmVjdGl2ZURlZnM6bnVsbCxwaXBlRGVmczpudWxsLHNlbGVjdG9yczp0LnNlbGVjdG9yc3x8Y2Usdmlld1F1ZXJ5OnQudmlld1F1ZXJ5fHxudWxsLGZlYXR1cmVzOnQuZmVhdHVyZXN8fG51bGwsZGF0YTp0LmRhdGF8fHt9LGVuY2Fwc3VsYXRpb246dC5lbmNhcHN1bGF0aW9ufHxsZS5FbXVsYXRlZCxpZDoiYyIsc3R5bGVzOnQuc3R5bGVzfHxjZSxfOm51bGwsc2V0SW5wdXQ6bnVsbCxzY2hlbWFzOnQuc2NoZW1hc3x8bnVsbCx0VmlldzpudWxsfSxyPXQuZGlyZWN0aXZlcyxzPXQuZmVhdHVyZXMsaT10LnBpcGVzO3JldHVybiBuLmlkKz1oZSsrLG4uaW5wdXRzPXllKHQuaW5wdXRzLGUpLG4ub3V0cHV0cz15ZSh0Lm91dHB1dHMpLHMmJnMuZm9yRWFjaCh0PT50KG4pKSxuLmRpcmVjdGl2ZURlZnM9cj8oKT0+KCJmdW5jdGlvbiI9PXR5cGVvZiByP3IoKTpyKS5tYXAocGUpOm51bGwsbi5waXBlRGVmcz1pPygpPT4oImZ1bmN0aW9uIj09dHlwZW9mIGk/aSgpOmkpLm1hcChmZSk6bnVsbCxufSl9ZnVuY3Rpb24gcGUodCl7cmV0dXJuIHdlKHQpfHxmdW5jdGlvbih0KXtyZXR1cm4gdFtPdF18fG51bGx9KHQpfWZ1bmN0aW9uIGZlKHQpe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gdFtQdF18fG51bGx9KHQpfWNvbnN0IGdlPXt9O2Z1bmN0aW9uIG1lKHQpe2NvbnN0IGU9e3R5cGU6dC50eXBlLGJvb3RzdHJhcDp0LmJvb3RzdHJhcHx8Y2UsZGVjbGFyYXRpb25zOnQuZGVjbGFyYXRpb25zfHxjZSxpbXBvcnRzOnQuaW1wb3J0c3x8Y2UsZXhwb3J0czp0LmV4cG9ydHN8fGNlLHRyYW5zaXRpdmVDb21waWxlU2NvcGVzOm51bGwsc2NoZW1hczp0LnNjaGVtYXN8fG51bGwsaWQ6dC5pZHx8bnVsbH07cmV0dXJuIG51bGwhPXQuaWQmJlgoKCk9PntnZVt0LmlkXT10LnR5cGV9KSxlfWZ1bmN0aW9uIHllKHQsZSl7aWYobnVsbD09dClyZXR1cm4gdWU7Y29uc3Qgbj17fTtmb3IoY29uc3QgciBpbiB0KWlmKHQuaGFzT3duUHJvcGVydHkocikpe2xldCBzPXRbcl0saT1zO0FycmF5LmlzQXJyYXkocykmJihpPXNbMV0scz1zWzBdKSxuW3NdPXIsZSYmKGVbc109aSl9cmV0dXJuIG59Y29uc3QgdmU9ZGU7ZnVuY3Rpb24gYmUodCl7cmV0dXJue3R5cGU6dC50eXBlLG5hbWU6dC5uYW1lLGZhY3Rvcnk6bnVsbCxwdXJlOiExIT09dC5wdXJlLG9uRGVzdHJveTp0LnR5cGUucHJvdG90eXBlLm5nT25EZXN0cm95fHxudWxsfX1mdW5jdGlvbiB3ZSh0KXtyZXR1cm4gdFtGdF18fG51bGx9ZnVuY3Rpb24gX2UodCxlKXtyZXR1cm4gdC5oYXNPd25Qcm9wZXJ0eShNdCk/dFtNdF06bnVsbH1mdW5jdGlvbiBDZSh0LGUpe2NvbnN0IG49dFtJdF18fG51bGw7aWYoIW4mJiEwPT09ZSl0aHJvdyBuZXcgRXJyb3IoYFR5cGUgJHtidCh0KX0gZG9lcyBub3QgaGF2ZSAnXHUwMjc1bW9kJyBwcm9wZXJ0eS5gKTtyZXR1cm4gbn1jb25zdCBEZT0yMCxFZT0xMDtmdW5jdGlvbiBBZSh0KXtyZXR1cm4gQXJyYXkuaXNBcnJheSh0KSYmIm9iamVjdCI9PXR5cGVvZiB0WzFdfWZ1bmN0aW9uIFNlKHQpe3JldHVybiBBcnJheS5pc0FycmF5KHQpJiYhMD09PXRbMV19ZnVuY3Rpb24geGUodCl7cmV0dXJuIDAhPSg4JnQuZmxhZ3MpfWZ1bmN0aW9uIGtlKHQpe3JldHVybiAyPT0oMiZ0LmZsYWdzKX1mdW5jdGlvbiBUZSh0KXtyZXR1cm4gMT09KDEmdC5mbGFncyl9ZnVuY3Rpb24gRmUodCl7cmV0dXJuIG51bGwhPT10LnRlbXBsYXRlfWZ1bmN0aW9uIE9lKHQpe3JldHVybiAwIT0oNTEyJnRbMl0pfWNsYXNzIFBle2NvbnN0cnVjdG9yKHQsZSxuKXt0aGlzLnByZXZpb3VzVmFsdWU9dCx0aGlzLmN1cnJlbnRWYWx1ZT1lLHRoaXMuZmlyc3RDaGFuZ2U9bn1pc0ZpcnN0Q2hhbmdlKCl7cmV0dXJuIHRoaXMuZmlyc3RDaGFuZ2V9fWZ1bmN0aW9uIEllKCl7cmV0dXJuIFJlfWZ1bmN0aW9uIFJlKHQpe3JldHVybiB0LnR5cGUucHJvdG90eXBlLm5nT25DaGFuZ2VzJiYodC5zZXRJbnB1dD1qZSksTWV9ZnVuY3Rpb24gTWUoKXtjb25zdCB0PU5lKHRoaXMpLGU9bnVsbD09dD92b2lkIDA6dC5jdXJyZW50O2lmKGUpe2NvbnN0IG49dC5wcmV2aW91cztpZihuPT09dWUpdC5wcmV2aW91cz1lO2Vsc2UgZm9yKGxldCB0IGluIGUpblt0XT1lW3RdO3QuY3VycmVudD1udWxsLHRoaXMubmdPbkNoYW5nZXMoZSl9fWZ1bmN0aW9uIGplKHQsZSxuLHIpe2NvbnN0IHM9TmUodCl8fGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuX19uZ1NpbXBsZUNoYW5nZXNfXz1lfSh0LHtwcmV2aW91czp1ZSxjdXJyZW50Om51bGx9KSxpPXMuY3VycmVudHx8KHMuY3VycmVudD17fSksbz1zLnByZXZpb3VzLGE9dGhpcy5kZWNsYXJlZElucHV0c1tuXSxsPW9bYV07aVthXT1uZXcgUGUobCYmbC5jdXJyZW50VmFsdWUsZSxvPT09dWUpLHRbcl09ZX1mdW5jdGlvbiBOZSh0KXtyZXR1cm4gdC5fX25nU2ltcGxlQ2hhbmdlc19ffHxudWxsfUllLm5nSW5oZXJpdD0hMDtsZXQgVmU9dm9pZCAwO2Z1bmN0aW9uIEJlKHQpe3JldHVybiEhdC5saXN0ZW59Y29uc3QgTGU9e2NyZWF0ZVJlbmRlcmVyOih0LGUpPT52b2lkIDAhPT1WZT9WZToidW5kZWZpbmVkIiE9dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMH07ZnVuY3Rpb24gVWUodCl7Zm9yKDtBcnJheS5pc0FycmF5KHQpOyl0PXRbMF07cmV0dXJuIHR9ZnVuY3Rpb24gSGUodCxlKXtyZXR1cm4gVWUoZVt0K0RlXSl9ZnVuY3Rpb24gJGUodCxlKXtyZXR1cm4gVWUoZVt0LmluZGV4XSl9ZnVuY3Rpb24gemUodCxlKXtyZXR1cm4gdC5kYXRhW2UrRGVdfWZ1bmN0aW9uIHFlKHQsZSl7Y29uc3Qgbj1lW3RdO3JldHVybiBBZShuKT9uOm5bMF19ZnVuY3Rpb24gV2UodCl7Y29uc3QgZT1mdW5jdGlvbih0KXtyZXR1cm4gdC5fX25nQ29udGV4dF9ffHxudWxsfSh0KTtyZXR1cm4gZT9BcnJheS5pc0FycmF5KGUpP2U6ZS5sVmlldzpudWxsfWZ1bmN0aW9uIFplKHQpe3JldHVybiA0PT0oNCZ0WzJdKX1mdW5jdGlvbiBHZSh0KXtyZXR1cm4gMTI4PT0oMTI4JnRbMl0pfWZ1bmN0aW9uIEtlKHQsZSl7cmV0dXJuIG51bGw9PT10fHxudWxsPT1lP251bGw6dFtlXX1mdW5jdGlvbiBRZSh0KXt0WzE4XT0wfWZ1bmN0aW9uIFllKHQsZSl7dFs1XSs9ZTtsZXQgbj10LHI9dFszXTtmb3IoO251bGwhPT1yJiYoMT09PWUmJjE9PT1uWzVdfHwtMT09PWUmJjA9PT1uWzVdKTspcls1XSs9ZSxuPXIscj1yWzNdfWNvbnN0IEplPXtsRnJhbWU6Ym4obnVsbCksYmluZGluZ3NFbmFibGVkOiEwLGNoZWNrTm9DaGFuZ2VzTW9kZTohMX07ZnVuY3Rpb24gWGUoKXtyZXR1cm4gSmUuYmluZGluZ3NFbmFibGVkfWZ1bmN0aW9uIHRuKCl7cmV0dXJuIEplLmxGcmFtZS5sVmlld31mdW5jdGlvbiBlbigpe3JldHVybiBKZS5sRnJhbWUudFZpZXd9ZnVuY3Rpb24gbm4odCl7SmUubEZyYW1lLmNvbnRleHRMVmlldz10fWZ1bmN0aW9uIHJuKCl7cmV0dXJuIEplLmxGcmFtZS5jdXJyZW50VE5vZGV9ZnVuY3Rpb24gc24odCxlKXtKZS5sRnJhbWUuY3VycmVudFROb2RlPXQsSmUubEZyYW1lLmlzUGFyZW50PWV9ZnVuY3Rpb24gb24oKXtyZXR1cm4gSmUubEZyYW1lLmlzUGFyZW50fWZ1bmN0aW9uIGFuKCl7SmUubEZyYW1lLmlzUGFyZW50PSExfWZ1bmN0aW9uIGxuKCl7cmV0dXJuIEplLmNoZWNrTm9DaGFuZ2VzTW9kZX1mdW5jdGlvbiB1bih0KXtKZS5jaGVja05vQ2hhbmdlc01vZGU9dH1mdW5jdGlvbiBjbigpe3JldHVybiBKZS5sRnJhbWUuYmluZGluZ0luZGV4Kyt9ZnVuY3Rpb24gaG4odCl7Y29uc3QgZT1KZS5sRnJhbWUsbj1lLmJpbmRpbmdJbmRleDtyZXR1cm4gZS5iaW5kaW5nSW5kZXg9ZS5iaW5kaW5nSW5kZXgrdCxufWZ1bmN0aW9uIGRuKHQsZSl7Y29uc3Qgbj1KZS5sRnJhbWU7bi5iaW5kaW5nSW5kZXg9bi5iaW5kaW5nUm9vdEluZGV4PXQscG4oZSl9ZnVuY3Rpb24gcG4odCl7SmUubEZyYW1lLmN1cnJlbnREaXJlY3RpdmVJbmRleD10fWZ1bmN0aW9uIGZuKCl7cmV0dXJuIEplLmxGcmFtZS5jdXJyZW50UXVlcnlJbmRleH1mdW5jdGlvbiBnbih0KXtKZS5sRnJhbWUuY3VycmVudFF1ZXJ5SW5kZXg9dH1mdW5jdGlvbiBtbih0LGUpe2NvbnN0IG49dm4oKTtKZS5sRnJhbWU9bixuLmN1cnJlbnRUTm9kZT1lLG4ubFZpZXc9dH1mdW5jdGlvbiB5bih0KXtjb25zdCBlPXZuKCksbj10WzFdO0plLmxGcmFtZT1lLGUuY3VycmVudFROb2RlPW4uZmlyc3RDaGlsZCxlLmxWaWV3PXQsZS50Vmlldz1uLGUuY29udGV4dExWaWV3PXQsZS5iaW5kaW5nSW5kZXg9bi5iaW5kaW5nU3RhcnRJbmRleH1mdW5jdGlvbiB2bigpe2NvbnN0IHQ9SmUubEZyYW1lLGU9bnVsbD09PXQ/bnVsbDp0LmNoaWxkO3JldHVybiBudWxsPT09ZT9ibih0KTplfWZ1bmN0aW9uIGJuKHQpe2NvbnN0IGU9e2N1cnJlbnRUTm9kZTpudWxsLGlzUGFyZW50OiEwLGxWaWV3Om51bGwsdFZpZXc6bnVsbCxzZWxlY3RlZEluZGV4OjAsY29udGV4dExWaWV3Om51bGwsZWxlbWVudERlcHRoQ291bnQ6MCxjdXJyZW50TmFtZXNwYWNlOm51bGwsY3VycmVudERpcmVjdGl2ZUluZGV4Oi0xLGJpbmRpbmdSb290SW5kZXg6LTEsYmluZGluZ0luZGV4Oi0xLGN1cnJlbnRRdWVyeUluZGV4OjAscGFyZW50OnQsY2hpbGQ6bnVsbH07cmV0dXJuIG51bGwhPT10JiYodC5jaGlsZD1lKSxlfWZ1bmN0aW9uIHduKCl7Y29uc3QgdD1KZS5sRnJhbWU7cmV0dXJuIEplLmxGcmFtZT10LnBhcmVudCx0LmN1cnJlbnRUTm9kZT1udWxsLHQubFZpZXc9bnVsbCx0fWNvbnN0IF9uPXduO2Z1bmN0aW9uIENuKCl7Y29uc3QgdD13bigpO3QuaXNQYXJlbnQ9ITAsdC50Vmlldz1udWxsLHQuc2VsZWN0ZWRJbmRleD0wLHQuY29udGV4dExWaWV3PW51bGwsdC5lbGVtZW50RGVwdGhDb3VudD0wLHQuY3VycmVudERpcmVjdGl2ZUluZGV4PS0xLHQuY3VycmVudE5hbWVzcGFjZT1udWxsLHQuYmluZGluZ1Jvb3RJbmRleD0tMSx0LmJpbmRpbmdJbmRleD0tMSx0LmN1cnJlbnRRdWVyeUluZGV4PTB9ZnVuY3Rpb24gRG4oKXtyZXR1cm4gSmUubEZyYW1lLnNlbGVjdGVkSW5kZXh9ZnVuY3Rpb24gRW4odCl7SmUubEZyYW1lLnNlbGVjdGVkSW5kZXg9dH1mdW5jdGlvbiBBbigpe2NvbnN0IHQ9SmUubEZyYW1lO3JldHVybiB6ZSh0LnRWaWV3LHQuc2VsZWN0ZWRJbmRleCl9ZnVuY3Rpb24gU24odCxlKXtmb3IobGV0IG49ZS5kaXJlY3RpdmVTdGFydCxyPWUuZGlyZWN0aXZlRW5kO248cjtuKyspe2NvbnN0IGU9dC5kYXRhW25dLnR5cGUucHJvdG90eXBlLHtuZ0FmdGVyQ29udGVudEluaXQ6cixuZ0FmdGVyQ29udGVudENoZWNrZWQ6cyxuZ0FmdGVyVmlld0luaXQ6aSxuZ0FmdGVyVmlld0NoZWNrZWQ6byxuZ09uRGVzdHJveTphfT1lO3ImJih0LmNvbnRlbnRIb29rc3x8KHQuY29udGVudEhvb2tzPVtdKSkucHVzaCgtbixyKSxzJiYoKHQuY29udGVudEhvb2tzfHwodC5jb250ZW50SG9va3M9W10pKS5wdXNoKG4scyksKHQuY29udGVudENoZWNrSG9va3N8fCh0LmNvbnRlbnRDaGVja0hvb2tzPVtdKSkucHVzaChuLHMpKSxpJiYodC52aWV3SG9va3N8fCh0LnZpZXdIb29rcz1bXSkpLnB1c2goLW4saSksbyYmKCh0LnZpZXdIb29rc3x8KHQudmlld0hvb2tzPVtdKSkucHVzaChuLG8pLCh0LnZpZXdDaGVja0hvb2tzfHwodC52aWV3Q2hlY2tIb29rcz1bXSkpLnB1c2gobixvKSksbnVsbCE9YSYmKHQuZGVzdHJveUhvb2tzfHwodC5kZXN0cm95SG9va3M9W10pKS5wdXNoKG4sYSl9fWZ1bmN0aW9uIHhuKHQsZSxuKXtGbih0LGUsMyxuKX1mdW5jdGlvbiBrbih0LGUsbixyKXsoMyZ0WzJdKT09PW4mJkZuKHQsZSxuLHIpfWZ1bmN0aW9uIFRuKHQsZSl7bGV0IG49dFsyXTsoMyZuKT09PWUmJihuJj0yMDQ3LG4rPTEsdFsyXT1uKX1mdW5jdGlvbiBGbih0LGUsbixyKXtjb25zdCBzPW51bGwhPXI/cjotMTtsZXQgaT0wO2ZvcihsZXQgbz12b2lkIDAhPT1yPzY1NTM1JnRbMThdOjA7bzxlLmxlbmd0aDtvKyspaWYoIm51bWJlciI9PXR5cGVvZiBlW28rMV0pe2lmKGk9ZVtvXSxudWxsIT1yJiZpPj1yKWJyZWFrfWVsc2UgZVtvXTwwJiYodFsxOF0rPTY1NTM2KSwoaTxzfHwtMT09cykmJihPbih0LG4sZSxvKSx0WzE4XT0oNDI5NDkwMTc2MCZ0WzE4XSkrbysyKSxvKyt9ZnVuY3Rpb24gT24odCxlLG4scil7Y29uc3Qgcz1uW3JdPDAsaT1uW3IrMV0sbz10W3M/LW5bcl06bltyXV07cz90WzJdPj4xMTx0WzE4XT4+MTYmJigzJnRbMl0pPT09ZSYmKHRbMl0rPTIwNDgsaS5jYWxsKG8pKTppLmNhbGwobyl9Y29uc3QgUG49LTE7Y2xhc3MgSW57Y29uc3RydWN0b3IodCxlLG4pe3RoaXMuZmFjdG9yeT10LHRoaXMucmVzb2x2aW5nPSExLHRoaXMuY2FuU2VlVmlld1Byb3ZpZGVycz1lLHRoaXMuaW5qZWN0SW1wbD1ufX1mdW5jdGlvbiBSbih0LGUsbil7Y29uc3Qgcj1CZSh0KTtsZXQgcz0wO2Zvcig7czxuLmxlbmd0aDspe2NvbnN0IGk9bltzXTtpZigibnVtYmVyIj09dHlwZW9mIGkpe2lmKDAhPT1pKWJyZWFrO3MrKztjb25zdCBvPW5bcysrXSxhPW5bcysrXSxsPW5bcysrXTtyP3Quc2V0QXR0cmlidXRlKGUsYSxsLG8pOmUuc2V0QXR0cmlidXRlTlMobyxhLGwpfWVsc2V7Y29uc3Qgbz1pLGE9blsrK3NdO2puKG8pP3ImJnQuc2V0UHJvcGVydHkoZSxvLGEpOnI/dC5zZXRBdHRyaWJ1dGUoZSxvLGEpOmUuc2V0QXR0cmlidXRlKG8sYSkscysrfX1yZXR1cm4gc31mdW5jdGlvbiBNbih0KXtyZXR1cm4gMz09PXR8fDQ9PT10fHw2PT09dH1mdW5jdGlvbiBqbih0KXtyZXR1cm4gNjQ9PT10LmNoYXJDb2RlQXQoMCl9ZnVuY3Rpb24gTm4odCxlKXtpZihudWxsPT09ZXx8MD09PWUubGVuZ3RoKTtlbHNlIGlmKG51bGw9PT10fHwwPT09dC5sZW5ndGgpdD1lLnNsaWNlKCk7ZWxzZXtsZXQgbj0tMTtmb3IobGV0IHI9MDtyPGUubGVuZ3RoO3IrKyl7Y29uc3Qgcz1lW3JdOyJudW1iZXIiPT10eXBlb2Ygcz9uPXM6MD09PW58fFZuKHQsbixzLG51bGwsLTE9PT1ufHwyPT09bj9lWysrcl06bnVsbCl9fXJldHVybiB0fWZ1bmN0aW9uIFZuKHQsZSxuLHIscyl7bGV0IGk9MCxvPXQubGVuZ3RoO2lmKC0xPT09ZSlvPS0xO2Vsc2UgZm9yKDtpPHQubGVuZ3RoOyl7Y29uc3Qgbj10W2krK107aWYoIm51bWJlciI9PXR5cGVvZiBuKXtpZihuPT09ZSl7bz0tMTticmVha31pZihuPmUpe289aS0xO2JyZWFrfX19Zm9yKDtpPHQubGVuZ3RoOyl7Y29uc3QgZT10W2ldO2lmKCJudW1iZXIiPT10eXBlb2YgZSlicmVhaztpZihlPT09bil7aWYobnVsbD09PXIpcmV0dXJuIHZvaWQobnVsbCE9PXMmJih0W2krMV09cykpO2lmKHI9PT10W2krMV0pcmV0dXJuIHZvaWQodFtpKzJdPXMpfWkrKyxudWxsIT09ciYmaSsrLG51bGwhPT1zJiZpKyt9LTEhPT1vJiYodC5zcGxpY2UobywwLGUpLGk9bysxKSx0LnNwbGljZShpKyssMCxuKSxudWxsIT09ciYmdC5zcGxpY2UoaSsrLDAsciksbnVsbCE9PXMmJnQuc3BsaWNlKGkrKywwLHMpfWZ1bmN0aW9uIEJuKHQpe3JldHVybiB0IT09UG59ZnVuY3Rpb24gTG4odCl7cmV0dXJuIDMyNzY3JnR9ZnVuY3Rpb24gVW4odCxlKXtsZXQgbj10Pj4xNixyPWU7Zm9yKDtuPjA7KXI9clsxNV0sbi0tO3JldHVybiByfWZ1bmN0aW9uIEhuKHQpe3JldHVybiJzdHJpbmciPT10eXBlb2YgdD90Om51bGw9PXQ/IiI6IiIrdH1mdW5jdGlvbiAkbih0KXtyZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgdD90Lm5hbWV8fHQudG9TdHJpbmcoKToib2JqZWN0Ij09dHlwZW9mIHQmJm51bGwhPXQmJiJmdW5jdGlvbiI9PXR5cGVvZiB0LnR5cGU/dC50eXBlLm5hbWV8fHQudHlwZS50b1N0cmluZygpOkhuKHQpfWNvbnN0IHpuPSgoKT0+KCJ1bmRlZmluZWQiIT10eXBlb2YgcmVxdWVzdEFuaW1hdGlvbkZyYW1lJiZyZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHNldFRpbWVvdXQpLmJpbmQoVHQpKSgpO2Z1bmN0aW9uIHFuKHQpe3JldHVybiB0IGluc3RhbmNlb2YgRnVuY3Rpb24/dCgpOnR9bGV0IFduPSEwO2Z1bmN0aW9uIFpuKHQpe2NvbnN0IGU9V247cmV0dXJuIFduPXQsZX1sZXQgR249MDtmdW5jdGlvbiBLbih0LGUpe2NvbnN0IG49WW4odCxlKTtpZigtMSE9PW4pcmV0dXJuIG47Y29uc3Qgcj1lWzFdO3IuZmlyc3RDcmVhdGVQYXNzJiYodC5pbmplY3RvckluZGV4PWUubGVuZ3RoLFFuKHIuZGF0YSx0KSxRbihlLG51bGwpLFFuKHIuYmx1ZXByaW50LG51bGwpKTtjb25zdCBzPUpuKHQsZSksaT10LmluamVjdG9ySW5kZXg7aWYoQm4ocykpe2NvbnN0IHQ9TG4ocyksbj1VbihzLGUpLHI9blsxXS5kYXRhO2ZvcihsZXQgcz0wO3M8ODtzKyspZVtpK3NdPW5bdCtzXXxyW3Qrc119cmV0dXJuIGVbaSs4XT1zLGl9ZnVuY3Rpb24gUW4odCxlKXt0LnB1c2goMCwwLDAsMCwwLDAsMCwwLGUpfWZ1bmN0aW9uIFluKHQsZSl7cmV0dXJuLTE9PT10LmluamVjdG9ySW5kZXh8fHQucGFyZW50JiZ0LnBhcmVudC5pbmplY3RvckluZGV4PT09dC5pbmplY3RvckluZGV4fHxudWxsPT09ZVt0LmluamVjdG9ySW5kZXgrOF0/LTE6dC5pbmplY3RvckluZGV4fWZ1bmN0aW9uIEpuKHQsZSl7aWYodC5wYXJlbnQmJi0xIT09dC5wYXJlbnQuaW5qZWN0b3JJbmRleClyZXR1cm4gdC5wYXJlbnQuaW5qZWN0b3JJbmRleDtsZXQgbj0wLHI9bnVsbCxzPWU7Zm9yKDtudWxsIT09czspe2NvbnN0IHQ9c1sxXSxlPXQudHlwZTtpZihyPTI9PT1lP3QuZGVjbFROb2RlOjE9PT1lP3NbNl06bnVsbCxudWxsPT09cilyZXR1cm4gUG47aWYobisrLHM9c1sxNV0sLTEhPT1yLmluamVjdG9ySW5kZXgpcmV0dXJuIHIuaW5qZWN0b3JJbmRleHxuPDwxNn1yZXR1cm4gUG59ZnVuY3Rpb24gWG4odCxlLG4peyFmdW5jdGlvbih0LGUsbil7bGV0IHI7InN0cmluZyI9PXR5cGVvZiBuP3I9bi5jaGFyQ29kZUF0KDApfHwwOm4uaGFzT3duUHJvcGVydHkoanQpJiYocj1uW2p0XSksbnVsbD09ciYmKHI9bltqdF09R24rKyk7Y29uc3Qgcz0yNTUmcixpPTE8PHMsbz02NCZzLGE9MzImcyxsPWUuZGF0YTsxMjgmcz9vP2E/bFt0KzddfD1pOmxbdCs2XXw9aTphP2xbdCs1XXw9aTpsW3QrNF18PWk6bz9hP2xbdCszXXw9aTpsW3QrMl18PWk6YT9sW3QrMV18PWk6bFt0XXw9aX0odCxlLG4pfWZ1bmN0aW9uIHRyKHQsZSxuLHI9b3QuRGVmYXVsdCxzKXtpZihudWxsIT09dCl7Y29uc3Qgcz1mdW5jdGlvbih0KXtpZigic3RyaW5nIj09dHlwZW9mIHQpcmV0dXJuIHQuY2hhckNvZGVBdCgwKXx8MDtjb25zdCBlPXQuaGFzT3duUHJvcGVydHkoanQpP3RbanRdOnZvaWQgMDtyZXR1cm4ibnVtYmVyIj09dHlwZW9mIGUmJmU+MD8yNTUmZTplfShuKTtpZigiZnVuY3Rpb24iPT10eXBlb2Ygcyl7bW4oZSx0KTt0cnl7Y29uc3QgdD1zKCk7aWYobnVsbCE9dHx8ciZvdC5PcHRpb25hbClyZXR1cm4gdDt0aHJvdyBuZXcgRXJyb3IoYE5vIHByb3ZpZGVyIGZvciAkeyRuKG4pfSFgKX1maW5hbGx5e19uKCl9fWVsc2UgaWYoIm51bWJlciI9PXR5cGVvZiBzKXtpZigtMT09PXMpcmV0dXJuIG5ldyBhcih0LGUpO2xldCBpPW51bGwsbz1Zbih0LGUpLGE9UG4sbD1yJm90Lkhvc3Q/ZVsxNl1bNl06bnVsbDtmb3IoKC0xPT09b3x8ciZvdC5Ta2lwU2VsZikmJihhPS0xPT09bz9Kbih0LGUpOmVbbys4XSxhIT09UG4mJm9yKHIsITEpPyhpPWVbMV0sbz1MbihhKSxlPVVuKGEsZSkpOm89LTEpOy0xIT09bzspe2NvbnN0IHQ9ZVsxXTtpZihpcihzLG8sdC5kYXRhKSl7Y29uc3QgdD1ucihvLGUsbixpLHIsbCk7aWYodCE9PWVyKXJldHVybiB0fWE9ZVtvKzhdLGEhPT1QbiYmb3IocixlWzFdLmRhdGFbbys4XT09PWwpJiZpcihzLG8sZSk/KGk9dCxvPUxuKGEpLGU9VW4oYSxlKSk6bz0tMX19fWlmKHImb3QuT3B0aW9uYWwmJnZvaWQgMD09PXMmJihzPW51bGwpLDA9PShyJihvdC5TZWxmfG90Lkhvc3QpKSl7Y29uc3QgdD1lWzldLGk9V3Qodm9pZCAwKTt0cnl7cmV0dXJuIHQ/dC5nZXQobixzLHImb3QuT3B0aW9uYWwpOkt0KG4scyxyJm90Lk9wdGlvbmFsKX1maW5hbGx5e1d0KGkpfX1pZihyJm90Lk9wdGlvbmFsKXJldHVybiBzO3Rocm93IG5ldyBFcnJvcihgTm9kZUluamVjdG9yOiBOT1RfRk9VTkQgWyR7JG4obil9XWApfWNvbnN0IGVyPXt9O2Z1bmN0aW9uIG5yKHQsZSxuLHIscyxpKXtjb25zdCBvPWVbMV0sYT1vLmRhdGFbdCs4XSxsPXJyKGEsbyxuLG51bGw9PXI/a2UoYSkmJlduOnIhPW8mJjI9PT1hLnR5cGUscyZvdC5Ib3N0JiZpPT09YSk7cmV0dXJuIG51bGwhPT1sP3NyKGUsbyxsLGEpOmVyfWZ1bmN0aW9uIHJyKHQsZSxuLHIscyl7Y29uc3QgaT10LnByb3ZpZGVySW5kZXhlcyxvPWUuZGF0YSxhPTEwNDg1NzUmaSxsPXQuZGlyZWN0aXZlU3RhcnQsdT1pPj4yMCxjPXM/YSt1OnQuZGlyZWN0aXZlRW5kO2ZvcihsZXQgaD1yP2E6YSt1O2g8YztoKyspe2NvbnN0IHQ9b1toXTtpZihoPGwmJm49PT10fHxoPj1sJiZ0LnR5cGU9PT1uKXJldHVybiBofWlmKHMpe2NvbnN0IHQ9b1tsXTtpZih0JiZGZSh0KSYmdC50eXBlPT09bilyZXR1cm4gbH1yZXR1cm4gbnVsbH1mdW5jdGlvbiBzcih0LGUsbixyKXtsZXQgcz10W25dO2NvbnN0IGk9ZS5kYXRhO2lmKHMgaW5zdGFuY2VvZiBJbil7Y29uc3Qgbz1zO2lmKG8ucmVzb2x2aW5nKXRocm93IG5ldyBFcnJvcigiQ2lyY3VsYXIgZGVwIGZvciAiKyRuKGlbbl0pKTtjb25zdCBhPVpuKG8uY2FuU2VlVmlld1Byb3ZpZGVycyk7by5yZXNvbHZpbmc9ITA7Y29uc3QgbD1vLmluamVjdEltcGw/V3Qoby5pbmplY3RJbXBsKTpudWxsO21uKHQscik7dHJ5e3M9dFtuXT1vLmZhY3Rvcnkodm9pZCAwLGksdCxyKSxlLmZpcnN0Q3JlYXRlUGFzcyYmbj49ci5kaXJlY3RpdmVTdGFydCYmZnVuY3Rpb24odCxlLG4pe2NvbnN0e25nT25DaGFuZ2VzOnIsbmdPbkluaXQ6cyxuZ0RvQ2hlY2s6aX09ZS50eXBlLnByb3RvdHlwZTtpZihyKXtjb25zdCByPVJlKGUpOyhuLnByZU9yZGVySG9va3N8fChuLnByZU9yZGVySG9va3M9W10pKS5wdXNoKHQsciksKG4ucHJlT3JkZXJDaGVja0hvb2tzfHwobi5wcmVPcmRlckNoZWNrSG9va3M9W10pKS5wdXNoKHQscil9cyYmKG4ucHJlT3JkZXJIb29rc3x8KG4ucHJlT3JkZXJIb29rcz1bXSkpLnB1c2goMC10LHMpLGkmJigobi5wcmVPcmRlckhvb2tzfHwobi5wcmVPcmRlckhvb2tzPVtdKSkucHVzaCh0LGkpLChuLnByZU9yZGVyQ2hlY2tIb29rc3x8KG4ucHJlT3JkZXJDaGVja0hvb2tzPVtdKSkucHVzaCh0LGkpKX0obixpW25dLGUpfWZpbmFsbHl7bnVsbCE9PWwmJld0KGwpLFpuKGEpLG8ucmVzb2x2aW5nPSExLF9uKCl9fXJldHVybiBzfWZ1bmN0aW9uIGlyKHQsZSxuKXtjb25zdCByPTY0JnQscz0zMiZ0O2xldCBpO3JldHVybiBpPTEyOCZ0P3I/cz9uW2UrN106bltlKzZdOnM/bltlKzVdOm5bZSs0XTpyP3M/bltlKzNdOm5bZSsyXTpzP25bZSsxXTpuW2VdLCEhKGkmMTw8dCl9ZnVuY3Rpb24gb3IodCxlKXtyZXR1cm4hKHQmb3QuU2VsZnx8dCZvdC5Ib3N0JiZlKX1jbGFzcyBhcntjb25zdHJ1Y3Rvcih0LGUpe3RoaXMuX3ROb2RlPXQsdGhpcy5fbFZpZXc9ZX1nZXQodCxlKXtyZXR1cm4gdHIodGhpcy5fdE5vZGUsdGhpcy5fbFZpZXcsdCx2b2lkIDAsZSl9fWZ1bmN0aW9uIGxyKHQpe2NvbnN0IGU9dDtpZihFdCh0KSlyZXR1cm4oKT0+e2NvbnN0IHQ9bHIoRHQoZSkpO3JldHVybiB0P3QoKTpudWxsfTtsZXQgbj1fZShlKTtpZihudWxsPT09bil7Y29uc3QgdD1wdChlKTtuPXQmJnQuZmFjdG9yeX1yZXR1cm4gbnx8bnVsbH1mdW5jdGlvbiB1cih0KXtyZXR1cm4gWCgoKT0+e2NvbnN0IGU9dC5wcm90b3R5cGUuY29uc3RydWN0b3Isbj1lW010XXx8bHIoZSkscj1PYmplY3QucHJvdG90eXBlO2xldCBzPU9iamVjdC5nZXRQcm90b3R5cGVPZih0LnByb3RvdHlwZSkuY29uc3RydWN0b3I7Zm9yKDtzJiZzIT09cjspe2NvbnN0IHQ9c1tNdF18fGxyKHMpO2lmKHQmJnQhPT1uKXJldHVybiB0O3M9T2JqZWN0LmdldFByb3RvdHlwZU9mKHMpfXJldHVybiB0PT5uZXcgdH0pfWZ1bmN0aW9uIGNyKHQpe3JldHVybiB0Lm5nRGVidWdDb250ZXh0fWZ1bmN0aW9uIGhyKHQpe3JldHVybiB0Lm5nT3JpZ2luYWxFcnJvcn1mdW5jdGlvbiBkcih0LC4uLmUpe3QuZXJyb3IoLi4uZSl9Y2xhc3MgcHJ7Y29uc3RydWN0b3IoKXt0aGlzLl9jb25zb2xlPWNvbnNvbGV9aGFuZGxlRXJyb3IodCl7Y29uc3QgZT10aGlzLl9maW5kT3JpZ2luYWxFcnJvcih0KSxuPXRoaXMuX2ZpbmRDb250ZXh0KHQpLHI9ZnVuY3Rpb24odCl7cmV0dXJuIHQubmdFcnJvckxvZ2dlcnx8ZHJ9KHQpO3IodGhpcy5fY29uc29sZSwiRVJST1IiLHQpLGUmJnIodGhpcy5fY29uc29sZSwiT1JJR0lOQUwgRVJST1IiLGUpLG4mJnIodGhpcy5fY29uc29sZSwiRVJST1IgQ09OVEVYVCIsbil9X2ZpbmRDb250ZXh0KHQpe3JldHVybiB0P2NyKHQpP2NyKHQpOnRoaXMuX2ZpbmRDb250ZXh0KGhyKHQpKTpudWxsfV9maW5kT3JpZ2luYWxFcnJvcih0KXtsZXQgZT1ocih0KTtmb3IoO2UmJmhyKGUpOyllPWhyKGUpO3JldHVybiBlfX1mdW5jdGlvbiBmcih0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIGNsYXNze2NvbnN0cnVjdG9yKHQpe3RoaXMuY2hhbmdpbmdUaGlzQnJlYWtzQXBwbGljYXRpb25TZWN1cml0eT10fXRvU3RyaW5nKCl7cmV0dXJuIlNhZmVWYWx1ZSBtdXN0IHVzZSBbcHJvcGVydHldPWJpbmRpbmc6ICIrdGhpcy5jaGFuZ2luZ1RoaXNCcmVha3NBcHBsaWNhdGlvblNlY3VyaXR5KyIgKHNlZSBodHRwOi8vZy5jby9uZy9zZWN1cml0eSN4c3MpIn19P3QuY2hhbmdpbmdUaGlzQnJlYWtzQXBwbGljYXRpb25TZWN1cml0eTp0fWxldCBncj0hMCxtcj0hMTtmdW5jdGlvbiB5cigpe3JldHVybiBtcj0hMCxncn1mdW5jdGlvbiB2cih0LGUpe3QuX19uZ0NvbnRleHRfXz1lfWZ1bmN0aW9uIGJyKHQsZSxuKXtsZXQgcj10Lmxlbmd0aDtmb3IoOzspe2NvbnN0IHM9dC5pbmRleE9mKGUsbik7aWYoLTE9PT1zKXJldHVybiBzO2lmKDA9PT1zfHx0LmNoYXJDb2RlQXQocy0xKTw9MzIpe2NvbnN0IG49ZS5sZW5ndGg7aWYocytuPT09cnx8dC5jaGFyQ29kZUF0KHMrbik8PTMyKXJldHVybiBzfW49cysxfX1jb25zdCB3cj0ibmctdGVtcGxhdGUiO2Z1bmN0aW9uIF9yKHQsZSxuKXtsZXQgcj0wO2Zvcig7cjx0Lmxlbmd0aDspe2xldCBzPXRbcisrXTtpZihuJiYiY2xhc3MiPT09cyl7aWYocz10W3JdLC0xIT09YnIocy50b0xvd2VyQ2FzZSgpLGUsMCkpcmV0dXJuITB9ZWxzZSBpZigxPT09cyl7Zm9yKDtyPHQubGVuZ3RoJiYic3RyaW5nIj09dHlwZW9mKHM9dFtyKytdKTspaWYocy50b0xvd2VyQ2FzZSgpPT09ZSlyZXR1cm4hMDtyZXR1cm4hMX19cmV0dXJuITF9ZnVuY3Rpb24gQ3IodCl7cmV0dXJuIDA9PT10LnR5cGUmJnQudGFnTmFtZSE9PXdyfWZ1bmN0aW9uIERyKHQsZSxuKXtyZXR1cm4gZT09PSgwIT09dC50eXBlfHxuP3QudGFnTmFtZTp3cil9ZnVuY3Rpb24gRXIodCxlLG4pe2xldCByPTQ7Y29uc3Qgcz10LmF0dHJzfHxbXSxpPWZ1bmN0aW9uKHQpe2ZvcihsZXQgZT0wO2U8dC5sZW5ndGg7ZSsrKWlmKE1uKHRbZV0pKXJldHVybiBlO3JldHVybiB0Lmxlbmd0aH0ocyk7bGV0IG89ITE7Zm9yKGxldCBhPTA7YTxlLmxlbmd0aDthKyspe2NvbnN0IGw9ZVthXTtpZigibnVtYmVyIiE9dHlwZW9mIGwpe2lmKCFvKWlmKDQmcil7aWYocj0yfDEmciwiIiE9PWwmJiFEcih0LGwsbil8fCIiPT09bCYmMT09PWUubGVuZ3RoKXtpZihBcihyKSlyZXR1cm4hMTtvPSEwfX1lbHNle2NvbnN0IHU9OCZyP2w6ZVsrK2FdO2lmKDgmciYmbnVsbCE9PXQuYXR0cnMpe2lmKCFfcih0LmF0dHJzLHUsbikpe2lmKEFyKHIpKXJldHVybiExO289ITB9Y29udGludWV9Y29uc3QgYz1Tcig4JnI/ImNsYXNzIjpsLHMsQ3IodCksbik7aWYoLTE9PT1jKXtpZihBcihyKSlyZXR1cm4hMTtvPSEwO2NvbnRpbnVlfWlmKCIiIT09dSl7bGV0IHQ7dD1jPmk/IiI6c1tjKzFdLnRvTG93ZXJDYXNlKCk7Y29uc3QgZT04JnI/dDpudWxsO2lmKGUmJi0xIT09YnIoZSx1LDApfHwyJnImJnUhPT10KXtpZihBcihyKSlyZXR1cm4hMTtvPSEwfX19fWVsc2V7aWYoIW8mJiFBcihyKSYmIUFyKGwpKXJldHVybiExO2lmKG8mJkFyKGwpKWNvbnRpbnVlO289ITEscj1sfDEmcn19cmV0dXJuIEFyKHIpfHxvfWZ1bmN0aW9uIEFyKHQpe3JldHVybiAwPT0oMSZ0KX1mdW5jdGlvbiBTcih0LGUsbixyKXtpZihudWxsPT09ZSlyZXR1cm4tMTtsZXQgcz0wO2lmKHJ8fCFuKXtsZXQgbj0hMTtmb3IoO3M8ZS5sZW5ndGg7KXtjb25zdCByPWVbc107aWYocj09PXQpcmV0dXJuIHM7aWYoMz09PXJ8fDY9PT1yKW49ITA7ZWxzZXtpZigxPT09cnx8Mj09PXIpe2xldCB0PWVbKytzXTtmb3IoOyJzdHJpbmciPT10eXBlb2YgdDspdD1lWysrc107Y29udGludWV9aWYoND09PXIpYnJlYWs7aWYoMD09PXIpe3MrPTQ7Y29udGludWV9fXMrPW4/MToyfXJldHVybi0xfXJldHVybiBmdW5jdGlvbih0LGUpe2xldCBuPXQuaW5kZXhPZig0KTtpZihuPi0xKWZvcihuKys7bjx0Lmxlbmd0aDspe2NvbnN0IHI9dFtuXTtpZigibnVtYmVyIj09dHlwZW9mIHIpcmV0dXJuLTE7aWYocj09PWUpcmV0dXJuIG47bisrfXJldHVybi0xfShlLHQpfWZ1bmN0aW9uIHhyKHQsZSxuPSExKXtmb3IobGV0IHI9MDtyPGUubGVuZ3RoO3IrKylpZihFcih0LGVbcl0sbikpcmV0dXJuITA7cmV0dXJuITF9ZnVuY3Rpb24ga3IodCxlKXt0OmZvcihsZXQgbj0wO248ZS5sZW5ndGg7bisrKXtjb25zdCByPWVbbl07aWYodC5sZW5ndGg9PT1yLmxlbmd0aCl7Zm9yKGxldCBlPTA7ZTx0Lmxlbmd0aDtlKyspaWYodFtlXSE9PXJbZV0pY29udGludWUgdDtyZXR1cm4hMH19cmV0dXJuITF9ZnVuY3Rpb24gVHIodCxlKXtyZXR1cm4gdD8iOm5vdCgiK2UudHJpbSgpKyIpIjplfWZ1bmN0aW9uIEZyKHQpe2xldCBlPXRbMF0sbj0xLHI9MixzPSIiLGk9ITE7Zm9yKDtuPHQubGVuZ3RoOyl7bGV0IG89dFtuXTtpZigic3RyaW5nIj09dHlwZW9mIG8paWYoMiZyKXtjb25zdCBlPXRbKytuXTtzKz0iWyIrbysoZS5sZW5ndGg+MD8nPSInK2UrJyInOiIiKSsiXSJ9ZWxzZSA4JnI/cys9Ii4iK286NCZyJiYocys9IiAiK28pO2Vsc2UiIj09PXN8fEFyKG8pfHwoZSs9VHIoaSxzKSxzPSIiKSxyPW8saT1pfHwhQXIocik7bisrfXJldHVybiIiIT09cyYmKGUrPVRyKGkscykpLGV9Y29uc3QgT3I9e307ZnVuY3Rpb24gUHIodCl7Y29uc3QgZT10WzNdO3JldHVybiBTZShlKT9lWzNdOmV9ZnVuY3Rpb24gSXIodCl7cmV0dXJuIE1yKHRbMTNdKX1mdW5jdGlvbiBScih0KXtyZXR1cm4gTXIodFs0XSl9ZnVuY3Rpb24gTXIodCl7Zm9yKDtudWxsIT09dCYmIVNlKHQpOyl0PXRbNF07cmV0dXJuIHR9ZnVuY3Rpb24ganIodCl7TnIoZW4oKSx0bigpLERuKCkrdCxsbigpKX1mdW5jdGlvbiBOcih0LGUsbixyKXtpZighcilpZigzPT0oMyZlWzJdKSl7Y29uc3Qgcj10LnByZU9yZGVyQ2hlY2tIb29rcztudWxsIT09ciYmeG4oZSxyLG4pfWVsc2V7Y29uc3Qgcj10LnByZU9yZGVySG9va3M7bnVsbCE9PXImJmtuKGUsciwwLG4pfUVuKG4pfWZ1bmN0aW9uIFZyKHQsZSl7cmV0dXJuIHQ8PDE3fGU8PDJ9ZnVuY3Rpb24gQnIodCl7cmV0dXJuIHQ+PjE3JjMyNzY3fWZ1bmN0aW9uIExyKHQpe3JldHVybiAyfHR9ZnVuY3Rpb24gVXIodCl7cmV0dXJuKDEzMTA2OCZ0KT4+Mn1mdW5jdGlvbiBIcih0LGUpe3JldHVybi0xMzEwNjkmdHxlPDwyfWZ1bmN0aW9uICRyKHQpe3JldHVybiAxfHR9ZnVuY3Rpb24genIodCxlKXtjb25zdCBuPXQuY29udGVudFF1ZXJpZXM7aWYobnVsbCE9PW4pZm9yKGxldCByPTA7cjxuLmxlbmd0aDtyKz0yKXtjb25zdCBzPW5bcl0saT1uW3IrMV07aWYoLTEhPT1pKXtjb25zdCBuPXQuZGF0YVtpXTtnbihzKSxuLmNvbnRlbnRRdWVyaWVzKDIsZVtpXSxpKX19fWZ1bmN0aW9uIHFyKHQsZSxuKXtyZXR1cm4gQmUoZSk/ZS5jcmVhdGVFbGVtZW50KHQsbik6bnVsbD09PW4/ZS5jcmVhdGVFbGVtZW50KHQpOmUuY3JlYXRlRWxlbWVudE5TKG4sdCl9ZnVuY3Rpb24gV3IodCxlLG4scixzLGksbyxhLGwsdSl7Y29uc3QgYz1lLmJsdWVwcmludC5zbGljZSgpO3JldHVybiBjWzBdPXMsY1syXT0xNDB8cixRZShjKSxjWzNdPWNbMTVdPXQsY1s4XT1uLGNbMTBdPW98fHQmJnRbMTBdLGNbMTFdPWF8fHQmJnRbMTFdLGNbMTJdPWx8fHQmJnRbMTJdfHxudWxsLGNbOV09dXx8dCYmdFs5XXx8bnVsbCxjWzZdPWksY1sxNl09Mj09ZS50eXBlP3RbMTZdOmMsY31mdW5jdGlvbiBacih0LGUsbixyLHMpe2NvbnN0IGk9ZStEZSxvPXQuZGF0YVtpXXx8ZnVuY3Rpb24odCxlLG4scixzKXtjb25zdCBpPXJuKCksbz1vbigpLGE9dC5kYXRhW2VdPWZ1bmN0aW9uKHQsZSxuLHIscyxpKXtyZXR1cm57dHlwZTpuLGluZGV4OnIsaW5qZWN0b3JJbmRleDplP2UuaW5qZWN0b3JJbmRleDotMSxkaXJlY3RpdmVTdGFydDotMSxkaXJlY3RpdmVFbmQ6LTEsZGlyZWN0aXZlU3R5bGluZ0xhc3Q6LTEscHJvcGVydHlCaW5kaW5nczpudWxsLGZsYWdzOjAscHJvdmlkZXJJbmRleGVzOjAsdGFnTmFtZTpzLGF0dHJzOmksbWVyZ2VkQXR0cnM6bnVsbCxsb2NhbE5hbWVzOm51bGwsaW5pdGlhbElucHV0czp2b2lkIDAsaW5wdXRzOm51bGwsb3V0cHV0czpudWxsLHRWaWV3czpudWxsLG5leHQ6bnVsbCxwcm9qZWN0aW9uTmV4dDpudWxsLGNoaWxkOm51bGwscGFyZW50OmUscHJvamVjdGlvbjpudWxsLHN0eWxlczpudWxsLHN0eWxlc1dpdGhvdXRIb3N0Om51bGwscmVzaWR1YWxTdHlsZXM6dm9pZCAwLGNsYXNzZXM6bnVsbCxjbGFzc2VzV2l0aG91dEhvc3Q6bnVsbCxyZXNpZHVhbENsYXNzZXM6dm9pZCAwLGNsYXNzQmluZGluZ3M6MCxzdHlsZUJpbmRpbmdzOjB9fSgwLG8/aTppJiZpLnBhcmVudCxuLGUscixzKTtyZXR1cm4gbnVsbD09PXQuZmlyc3RDaGlsZCYmKHQuZmlyc3RDaGlsZD1hKSxudWxsIT09aSYmKG8mJm51bGw9PWkuY2hpbGQmJm51bGwhPT1hLnBhcmVudD9pLmNoaWxkPWE6b3x8KGkubmV4dD1hKSksYX0odCxpLG4scixzKTtyZXR1cm4gc24obywhMCksb31mdW5jdGlvbiBHcih0LGUsbil7eW4oZSk7dHJ5e2NvbnN0IHI9dC52aWV3UXVlcnk7bnVsbCE9PXImJkVzKDEscixuKTtjb25zdCBzPXQudGVtcGxhdGU7bnVsbCE9PXMmJllyKHQsZSxzLDEsbiksdC5maXJzdENyZWF0ZVBhc3MmJih0LmZpcnN0Q3JlYXRlUGFzcz0hMSksdC5zdGF0aWNDb250ZW50UXVlcmllcyYmenIodCxlKSx0LnN0YXRpY1ZpZXdRdWVyaWVzJiZFcygyLHQudmlld1F1ZXJ5LG4pO2NvbnN0IGk9dC5jb21wb25lbnRzO251bGwhPT1pJiZmdW5jdGlvbih0LGUpe2ZvcihsZXQgbj0wO248ZS5sZW5ndGg7bisrKWJzKHQsZVtuXSl9KGUsaSl9Y2F0Y2gocil7dGhyb3cgdC5maXJzdENyZWF0ZVBhc3MmJih0LmluY29tcGxldGVGaXJzdFBhc3M9ITApLHJ9ZmluYWxseXtlWzJdJj0tNSxDbigpfX1mdW5jdGlvbiBLcih0LGUsbixyKXtjb25zdCBzPWVbMl07aWYoMjU2PT0oMjU2JnMpKXJldHVybjt5bihlKTtjb25zdCBpPWxuKCk7dHJ5e1FlKGUpLEplLmxGcmFtZS5iaW5kaW5nSW5kZXg9dC5iaW5kaW5nU3RhcnRJbmRleCxudWxsIT09biYmWXIodCxlLG4sMixyKTtjb25zdCBvPTM9PSgzJnMpO2lmKCFpKWlmKG8pe2NvbnN0IG49dC5wcmVPcmRlckNoZWNrSG9va3M7bnVsbCE9PW4mJnhuKGUsbixudWxsKX1lbHNle2NvbnN0IG49dC5wcmVPcmRlckhvb2tzO251bGwhPT1uJiZrbihlLG4sMCxudWxsKSxUbihlLDApfWlmKGZ1bmN0aW9uKHQpe2ZvcihsZXQgZT1Jcih0KTtudWxsIT09ZTtlPVJyKGUpKXtpZighZVsyXSljb250aW51ZTtjb25zdCB0PWVbOV07Zm9yKGxldCBlPTA7ZTx0Lmxlbmd0aDtlKyspe2NvbnN0IG49dFtlXSxyPW5bM107MD09KDEwMjQmblsyXSkmJlllKHIsMSksblsyXXw9MTAyNH19fShlKSxmdW5jdGlvbih0KXtmb3IobGV0IGU9SXIodCk7bnVsbCE9PWU7ZT1ScihlKSlmb3IobGV0IHQ9RWU7dDxlLmxlbmd0aDt0Kyspe2NvbnN0IG49ZVt0XSxyPW5bMV07R2UobikmJktyKHIsbixyLnRlbXBsYXRlLG5bOF0pfX0oZSksbnVsbCE9PXQuY29udGVudFF1ZXJpZXMmJnpyKHQsZSksIWkpaWYobyl7Y29uc3Qgbj10LmNvbnRlbnRDaGVja0hvb2tzO251bGwhPT1uJiZ4bihlLG4pfWVsc2V7Y29uc3Qgbj10LmNvbnRlbnRIb29rcztudWxsIT09biYma24oZSxuLDEpLFRuKGUsMSl9IWZ1bmN0aW9uKHQsZSl7dHJ5e2NvbnN0IG49dC5leHBhbmRvSW5zdHJ1Y3Rpb25zO2lmKG51bGwhPT1uKXtsZXQgcj10LmV4cGFuZG9TdGFydEluZGV4LHM9LTEsaT0tMTtmb3IobGV0IHQ9MDt0PG4ubGVuZ3RoO3QrKyl7Y29uc3Qgbz1uW3RdOyJudW1iZXIiPT10eXBlb2Ygbz9vPD0wPyhpPTAtbyxFbihpKSxyKz05K25bKyt0XSxzPXIpOnIrPW86KG51bGwhPT1vJiYoZG4ocixzKSxvKDIsZVtzXSkpLHMrKyl9fX1maW5hbGx5e0VuKC0xKX19KHQsZSk7Y29uc3QgYT10LmNvbXBvbmVudHM7bnVsbCE9PWEmJmZ1bmN0aW9uKHQsZSl7Zm9yKGxldCBuPTA7bjxlLmxlbmd0aDtuKyspdnModCxlW25dKX0oZSxhKTtjb25zdCBsPXQudmlld1F1ZXJ5O2lmKG51bGwhPT1sJiZFcygyLGwsciksIWkpaWYobyl7Y29uc3Qgbj10LnZpZXdDaGVja0hvb2tzO251bGwhPT1uJiZ4bihlLG4pfWVsc2V7Y29uc3Qgbj10LnZpZXdIb29rcztudWxsIT09biYma24oZSxuLDIpLFRuKGUsMil9ITA9PT10LmZpcnN0VXBkYXRlUGFzcyYmKHQuZmlyc3RVcGRhdGVQYXNzPSExKSxpfHwoZVsyXSY9LTczKSwxMDI0JmVbMl0mJihlWzJdJj0tMTAyNSxZZShlWzNdLC0xKSl9ZmluYWxseXtDbigpfX1mdW5jdGlvbiBRcih0LGUsbixyKXtjb25zdCBzPWVbMTBdLGk9IWxuKCksbz1aZShlKTt0cnl7aSYmIW8mJnMuYmVnaW4mJnMuYmVnaW4oKSxvJiZHcih0LGUsciksS3IodCxlLG4scil9ZmluYWxseXtpJiYhbyYmcy5lbmQmJnMuZW5kKCl9fWZ1bmN0aW9uIFlyKHQsZSxuLHIscyl7Y29uc3QgaT1EbigpO3RyeXtFbigtMSksMiZyJiZlLmxlbmd0aD5EZSYmTnIodCxlLDAsbG4oKSksbihyLHMpfWZpbmFsbHl7RW4oaSl9fWZ1bmN0aW9uIEpyKHQsZSxuKXtpZih4ZShlKSl7Y29uc3Qgcj1lLmRpcmVjdGl2ZUVuZDtmb3IobGV0IHM9ZS5kaXJlY3RpdmVTdGFydDtzPHI7cysrKXtjb25zdCBlPXQuZGF0YVtzXTtlLmNvbnRlbnRRdWVyaWVzJiZlLmNvbnRlbnRRdWVyaWVzKDEsbltzXSxzKX19fWZ1bmN0aW9uIFhyKHQsZSxuKXtYZSgpJiYoZnVuY3Rpb24odCxlLG4scil7Y29uc3Qgcz1uLmRpcmVjdGl2ZVN0YXJ0LGk9bi5kaXJlY3RpdmVFbmQ7dC5maXJzdENyZWF0ZVBhc3N8fEtuKG4sZSksdnIocixlKTtjb25zdCBvPW4uaW5pdGlhbElucHV0cztmb3IobGV0IGE9czthPGk7YSsrKXtjb25zdCByPXQuZGF0YVthXSxpPUZlKHIpO2kmJmZzKGUsbixyKTtjb25zdCBsPXNyKGUsdCxhLG4pO3ZyKGwsZSksbnVsbCE9PW8mJmdzKDAsYS1zLGwsciwwLG8pLGkmJihxZShuLmluZGV4LGUpWzhdPWwpfX0odCxlLG4sJGUobixlKSksMTI4PT0oMTI4Jm4uZmxhZ3MpJiZmdW5jdGlvbih0LGUsbil7Y29uc3Qgcj1uLmRpcmVjdGl2ZVN0YXJ0LHM9bi5kaXJlY3RpdmVFbmQsaT10LmV4cGFuZG9JbnN0cnVjdGlvbnMsbz10LmZpcnN0Q3JlYXRlUGFzcyxhPW4uaW5kZXgtRGUsbD1KZS5sRnJhbWUuY3VycmVudERpcmVjdGl2ZUluZGV4O3RyeXtFbihhKTtmb3IobGV0IG49cjtuPHM7bisrKXtjb25zdCByPXQuZGF0YVtuXSxzPWVbbl07cG4obiksbnVsbCE9PXIuaG9zdEJpbmRpbmdzfHwwIT09ci5ob3N0VmFyc3x8bnVsbCE9PXIuaG9zdEF0dHJzP2xzKHIscyk6byYmaS5wdXNoKG51bGwpfX1maW5hbGx5e0VuKC0xKSxwbihsKX19KHQsZSxuKSl9ZnVuY3Rpb24gdHModCxlLG49JGUpe2NvbnN0IHI9ZS5sb2NhbE5hbWVzO2lmKG51bGwhPT1yKXtsZXQgcz1lLmluZGV4KzE7Zm9yKGxldCBpPTA7aTxyLmxlbmd0aDtpKz0yKXtjb25zdCBvPXJbaSsxXSxhPS0xPT09bz9uKGUsdCk6dFtvXTt0W3MrK109YX19fWZ1bmN0aW9uIGVzKHQpe2NvbnN0IGU9dC50VmlldztyZXR1cm4gbnVsbD09PWV8fGUuaW5jb21wbGV0ZUZpcnN0UGFzcz90LnRWaWV3PW5zKDEsbnVsbCx0LnRlbXBsYXRlLHQuZGVjbHMsdC52YXJzLHQuZGlyZWN0aXZlRGVmcyx0LnBpcGVEZWZzLHQudmlld1F1ZXJ5LHQuc2NoZW1hcyx0LmNvbnN0cyk6ZX1mdW5jdGlvbiBucyh0LGUsbixyLHMsaSxvLGEsbCx1KXtjb25zdCBjPURlK3IsaD1jK3MsZD1mdW5jdGlvbih0LGUpe2NvbnN0IG49W107Zm9yKGxldCByPTA7cjxlO3IrKyluLnB1c2gocjx0P251bGw6T3IpO3JldHVybiBufShjLGgpLHA9ImZ1bmN0aW9uIj09dHlwZW9mIHU/dSgpOnU7cmV0dXJuIGRbMV09e3R5cGU6dCxibHVlcHJpbnQ6ZCx0ZW1wbGF0ZTpuLHF1ZXJpZXM6bnVsbCx2aWV3UXVlcnk6YSxkZWNsVE5vZGU6ZSxkYXRhOmQuc2xpY2UoKS5maWxsKG51bGwsYyksYmluZGluZ1N0YXJ0SW5kZXg6YyxleHBhbmRvU3RhcnRJbmRleDpoLGV4cGFuZG9JbnN0cnVjdGlvbnM6bnVsbCxmaXJzdENyZWF0ZVBhc3M6ITAsZmlyc3RVcGRhdGVQYXNzOiEwLHN0YXRpY1ZpZXdRdWVyaWVzOiExLHN0YXRpY0NvbnRlbnRRdWVyaWVzOiExLHByZU9yZGVySG9va3M6bnVsbCxwcmVPcmRlckNoZWNrSG9va3M6bnVsbCxjb250ZW50SG9va3M6bnVsbCxjb250ZW50Q2hlY2tIb29rczpudWxsLHZpZXdIb29rczpudWxsLHZpZXdDaGVja0hvb2tzOm51bGwsZGVzdHJveUhvb2tzOm51bGwsY2xlYW51cDpudWxsLGNvbnRlbnRRdWVyaWVzOm51bGwsY29tcG9uZW50czpudWxsLGRpcmVjdGl2ZVJlZ2lzdHJ5OiJmdW5jdGlvbiI9PXR5cGVvZiBpP2koKTppLHBpcGVSZWdpc3RyeToiZnVuY3Rpb24iPT10eXBlb2Ygbz9vKCk6byxmaXJzdENoaWxkOm51bGwsc2NoZW1hczpsLGNvbnN0czpwLGluY29tcGxldGVGaXJzdFBhc3M6ITF9fWZ1bmN0aW9uIHJzKHQsZSxuLHIpe2NvbnN0IHM9U3MoZSk7cy5wdXNoKG4pLHQuZmlyc3RDcmVhdGVQYXNzJiZmdW5jdGlvbih0KXtyZXR1cm4gdC5jbGVhbnVwfHwodC5jbGVhbnVwPVtdKX0odCkucHVzaChyLHMubGVuZ3RoLTEpfWZ1bmN0aW9uIHNzKHQsZSxuKXtmb3IobGV0IHIgaW4gdClpZih0Lmhhc093blByb3BlcnR5KHIpKXtjb25zdCBzPXRbcl07KG49bnVsbD09PW4/e306bikuaGFzT3duUHJvcGVydHkocik/bltyXS5wdXNoKGUscyk6bltyXT1bZSxzXX1yZXR1cm4gbn1mdW5jdGlvbiBpcyh0LGUsbixyKXtsZXQgcz0hMTtpZihYZSgpKXtjb25zdCBpPWZ1bmN0aW9uKHQsZSxuKXtjb25zdCByPXQuZGlyZWN0aXZlUmVnaXN0cnk7bGV0IHM9bnVsbDtpZihyKWZvcihsZXQgaT0wO2k8ci5sZW5ndGg7aSsrKXtjb25zdCBvPXJbaV07eHIobixvLnNlbGVjdG9ycywhMSkmJihzfHwocz1bXSksWG4oS24obixlKSx0LG8udHlwZSksRmUobyk/KGNzKHQsbikscy51bnNoaWZ0KG8pKTpzLnB1c2gobykpfXJldHVybiBzfSh0LGUsbiksbz1udWxsPT09cj9udWxsOnsiIjotMX07aWYobnVsbCE9PWkpe2xldCByPTA7cz0hMCxkcyhuLHQuZGF0YS5sZW5ndGgsaS5sZW5ndGgpO2ZvcihsZXQgdD0wO3Q8aS5sZW5ndGg7dCsrKXtjb25zdCBlPWlbdF07ZS5wcm92aWRlcnNSZXNvbHZlciYmZS5wcm92aWRlcnNSZXNvbHZlcihlKX11cyh0LG4saS5sZW5ndGgpO2xldCBhPSExLGw9ITE7Zm9yKGxldCBzPTA7czxpLmxlbmd0aDtzKyspe2NvbnN0IHU9aVtzXTtuLm1lcmdlZEF0dHJzPU5uKG4ubWVyZ2VkQXR0cnMsdS5ob3N0QXR0cnMpLHBzKHQsZSx1KSxocyh0LmRhdGEubGVuZ3RoLTEsdSxvKSxudWxsIT09dS5jb250ZW50UXVlcmllcyYmKG4uZmxhZ3N8PTgpLG51bGw9PT11Lmhvc3RCaW5kaW5ncyYmbnVsbD09PXUuaG9zdEF0dHJzJiYwPT09dS5ob3N0VmFyc3x8KG4uZmxhZ3N8PTEyOCk7Y29uc3QgYz11LnR5cGUucHJvdG90eXBlOyFhJiYoYy5uZ09uQ2hhbmdlc3x8Yy5uZ09uSW5pdHx8Yy5uZ0RvQ2hlY2spJiYoKHQucHJlT3JkZXJIb29rc3x8KHQucHJlT3JkZXJIb29rcz1bXSkpLnB1c2gobi5pbmRleC1EZSksYT0hMCksbHx8IWMubmdPbkNoYW5nZXMmJiFjLm5nRG9DaGVja3x8KCh0LnByZU9yZGVyQ2hlY2tIb29rc3x8KHQucHJlT3JkZXJDaGVja0hvb2tzPVtdKSkucHVzaChuLmluZGV4LURlKSxsPSEwKSxvcyh0LHUpLHIrPXUuaG9zdFZhcnN9IWZ1bmN0aW9uKHQsZSl7Y29uc3Qgbj1lLmRpcmVjdGl2ZUVuZCxyPXQuZGF0YSxzPWUuYXR0cnMsaT1bXTtsZXQgbz1udWxsLGE9bnVsbDtmb3IobGV0IGw9ZS5kaXJlY3RpdmVTdGFydDtsPG47bCsrKXtjb25zdCB0PXJbbF0sbj10LmlucHV0cyx1PW51bGw9PT1zfHxDcihlKT9udWxsOm1zKG4scyk7aS5wdXNoKHUpLG89c3MobixsLG8pLGE9c3ModC5vdXRwdXRzLGwsYSl9bnVsbCE9PW8mJihvLmhhc093blByb3BlcnR5KCJjbGFzcyIpJiYoZS5mbGFnc3w9MTYpLG8uaGFzT3duUHJvcGVydHkoInN0eWxlIikmJihlLmZsYWdzfD0zMikpLGUuaW5pdGlhbElucHV0cz1pLGUuaW5wdXRzPW8sZS5vdXRwdXRzPWF9KHQsbiksYXModCxlLHIpfW8mJmZ1bmN0aW9uKHQsZSxuKXtpZihlKXtjb25zdCByPXQubG9jYWxOYW1lcz1bXTtmb3IobGV0IHQ9MDt0PGUubGVuZ3RoO3QrPTIpe2NvbnN0IHM9bltlW3QrMV1dO2lmKG51bGw9PXMpdGhyb3cgbmV3IEVycm9yKGBFeHBvcnQgb2YgbmFtZSAnJHtlW3QrMV19JyBub3QgZm91bmQhYCk7ci5wdXNoKGVbdF0scyl9fX0obixyLG8pfXJldHVybiBuLm1lcmdlZEF0dHJzPU5uKG4ubWVyZ2VkQXR0cnMsbi5hdHRycyksc31mdW5jdGlvbiBvcyh0LGUpe2NvbnN0IG49dC5leHBhbmRvSW5zdHJ1Y3Rpb25zO24ucHVzaChlLmhvc3RCaW5kaW5ncyksMCE9PWUuaG9zdFZhcnMmJm4ucHVzaChlLmhvc3RWYXJzKX1mdW5jdGlvbiBhcyh0LGUsbil7Zm9yKGxldCByPTA7cjxuO3IrKyllLnB1c2goT3IpLHQuYmx1ZXByaW50LnB1c2goT3IpLHQuZGF0YS5wdXNoKG51bGwpfWZ1bmN0aW9uIGxzKHQsZSl7bnVsbCE9PXQuaG9zdEJpbmRpbmdzJiZ0Lmhvc3RCaW5kaW5ncygxLGUpfWZ1bmN0aW9uIHVzKHQsZSxuKXtjb25zdCByPURlLWUuaW5kZXgscz10LmRhdGEubGVuZ3RoLSgxMDQ4NTc1JmUucHJvdmlkZXJJbmRleGVzKTsodC5leHBhbmRvSW5zdHJ1Y3Rpb25zfHwodC5leHBhbmRvSW5zdHJ1Y3Rpb25zPVtdKSkucHVzaChyLHMsbil9ZnVuY3Rpb24gY3ModCxlKXtlLmZsYWdzfD0yLCh0LmNvbXBvbmVudHN8fCh0LmNvbXBvbmVudHM9W10pKS5wdXNoKGUuaW5kZXgpfWZ1bmN0aW9uIGhzKHQsZSxuKXtpZihuKXtpZihlLmV4cG9ydEFzKWZvcihsZXQgcj0wO3I8ZS5leHBvcnRBcy5sZW5ndGg7cisrKW5bZS5leHBvcnRBc1tyXV09dDtGZShlKSYmKG5bIiJdPXQpfX1mdW5jdGlvbiBkcyh0LGUsbil7dC5mbGFnc3w9MSx0LmRpcmVjdGl2ZVN0YXJ0PWUsdC5kaXJlY3RpdmVFbmQ9ZStuLHQucHJvdmlkZXJJbmRleGVzPWV9ZnVuY3Rpb24gcHModCxlLG4pe3QuZGF0YS5wdXNoKG4pO2NvbnN0IHI9bi5mYWN0b3J5fHwobi5mYWN0b3J5PV9lKG4udHlwZSkpLHM9bmV3IEluKHIsRmUobiksbnVsbCk7dC5ibHVlcHJpbnQucHVzaChzKSxlLnB1c2gocyl9ZnVuY3Rpb24gZnModCxlLG4pe2NvbnN0IHI9JGUoZSx0KSxzPWVzKG4pLGk9dFsxMF0sbz13cyh0LFdyKHQscyxudWxsLG4ub25QdXNoPzY0OjE2LHIsZSxpLGkuY3JlYXRlUmVuZGVyZXIocixuKSxudWxsLG51bGwpKTt0W2UuaW5kZXhdPW99ZnVuY3Rpb24gZ3ModCxlLG4scixzLGkpe2NvbnN0IG89aVtlXTtpZihudWxsIT09byl7Y29uc3QgdD1yLnNldElucHV0O2ZvcihsZXQgZT0wO2U8by5sZW5ndGg7KXtjb25zdCBzPW9bZSsrXSxpPW9bZSsrXSxhPW9bZSsrXTtudWxsIT09dD9yLnNldElucHV0KG4sYSxzLGkpOm5baV09YX19fWZ1bmN0aW9uIG1zKHQsZSl7bGV0IG49bnVsbCxyPTA7Zm9yKDtyPGUubGVuZ3RoOyl7Y29uc3Qgcz1lW3JdO2lmKDAhPT1zKWlmKDUhPT1zKXtpZigibnVtYmVyIj09dHlwZW9mIHMpYnJlYWs7dC5oYXNPd25Qcm9wZXJ0eShzKSYmKG51bGw9PT1uJiYobj1bXSksbi5wdXNoKHMsdFtzXSxlW3IrMV0pKSxyKz0yfWVsc2Ugcis9MjtlbHNlIHIrPTR9cmV0dXJuIG59ZnVuY3Rpb24geXModCxlLG4scil7cmV0dXJuIG5ldyBBcnJheSh0LCEwLCExLGUsbnVsbCwwLHIsbixudWxsLG51bGwpfWZ1bmN0aW9uIHZzKHQsZSl7Y29uc3Qgbj1xZShlLHQpO2lmKEdlKG4pKXtjb25zdCB0PW5bMV07ODAmblsyXT9Lcih0LG4sdC50ZW1wbGF0ZSxuWzhdKTpuWzVdPjAmJmZ1bmN0aW9uIHQoZSl7Zm9yKGxldCByPUlyKGUpO251bGwhPT1yO3I9UnIocikpZm9yKGxldCBlPUVlO2U8ci5sZW5ndGg7ZSsrKXtjb25zdCBuPXJbZV07aWYoMTAyNCZuWzJdKXtjb25zdCB0PW5bMV07S3IodCxuLHQudGVtcGxhdGUsbls4XSl9ZWxzZSBuWzVdPjAmJnQobil9Y29uc3Qgbj1lWzFdLmNvbXBvbmVudHM7aWYobnVsbCE9PW4pZm9yKGxldCByPTA7cjxuLmxlbmd0aDtyKyspe2NvbnN0IHM9cWUobltyXSxlKTtHZShzKSYmc1s1XT4wJiZ0KHMpfX0obil9fWZ1bmN0aW9uIGJzKHQsZSl7Y29uc3Qgbj1xZShlLHQpLHI9blsxXTshZnVuY3Rpb24odCxlKXtmb3IobGV0IG49ZS5sZW5ndGg7bjx0LmJsdWVwcmludC5sZW5ndGg7bisrKWUucHVzaCh0LmJsdWVwcmludFtuXSl9KHIsbiksR3IocixuLG5bOF0pfWZ1bmN0aW9uIHdzKHQsZSl7cmV0dXJuIHRbMTNdP3RbMTRdWzRdPWU6dFsxM109ZSx0WzE0XT1lLGV9ZnVuY3Rpb24gX3ModCl7Zm9yKDt0Oyl7dFsyXXw9NjQ7Y29uc3QgZT1Qcih0KTtpZihPZSh0KSYmIWUpcmV0dXJuIHQ7dD1lfXJldHVybiBudWxsfWZ1bmN0aW9uIENzKHQsZSxuKXtjb25zdCByPWVbMTBdO3IuYmVnaW4mJnIuYmVnaW4oKTt0cnl7S3IodCxlLHQudGVtcGxhdGUsbil9Y2F0Y2gocyl7dGhyb3cgeHMoZSxzKSxzfWZpbmFsbHl7ci5lbmQmJnIuZW5kKCl9fWZ1bmN0aW9uIERzKHQpeyFmdW5jdGlvbih0KXtmb3IobGV0IGU9MDtlPHQuY29tcG9uZW50cy5sZW5ndGg7ZSsrKXtjb25zdCBuPXQuY29tcG9uZW50c1tlXSxyPVdlKG4pLHM9clsxXTtRcihzLHIscy50ZW1wbGF0ZSxuKX19KHRbOF0pfWZ1bmN0aW9uIEVzKHQsZSxuKXtnbigwKSxlKHQsbil9Y29uc3QgQXM9KCgpPT5Qcm9taXNlLnJlc29sdmUobnVsbCkpKCk7ZnVuY3Rpb24gU3ModCl7cmV0dXJuIHRbN118fCh0WzddPVtdKX1mdW5jdGlvbiB4cyh0LGUpe2NvbnN0IG49dFs5XSxyPW4/bi5nZXQocHIsbnVsbCk6bnVsbDtyJiZyLmhhbmRsZUVycm9yKGUpfWZ1bmN0aW9uIGtzKHQsZSxuLHIscyl7Zm9yKGxldCBpPTA7aTxuLmxlbmd0aDspe2NvbnN0IG89bltpKytdLGE9bltpKytdLGw9ZVtvXSx1PXQuZGF0YVtvXTtudWxsIT09dS5zZXRJbnB1dD91LnNldElucHV0KGwscyxyLGEpOmxbYV09c319ZnVuY3Rpb24gVHModCxlLG4scixzKXtpZihudWxsIT1yKXtsZXQgaSxvPSExO1NlKHIpP2k9cjpBZShyKSYmKG89ITAscj1yWzBdKTtjb25zdCBhPVVlKHIpOzA9PT10JiZudWxsIT09bj9udWxsPT1zP2pzKGUsbixhKTpNcyhlLG4sYSxzfHxudWxsKToxPT09dCYmbnVsbCE9PW4/TXMoZSxuLGEsc3x8bnVsbCk6Mj09PXQ/ZnVuY3Rpb24odCxlLG4pe2NvbnN0IHI9VnModCxlKTtyJiZmdW5jdGlvbih0LGUsbixyKXtCZSh0KT90LnJlbW92ZUNoaWxkKGUsbixyKTplLnJlbW92ZUNoaWxkKG4pfSh0LHIsZSxuKX0oZSxhLG8pOjM9PT10JiZlLmRlc3Ryb3lOb2RlKGEpLG51bGwhPWkmJmZ1bmN0aW9uKHQsZSxuLHIscyl7Y29uc3QgaT1uWzddO2khPT1VZShuKSYmVHMoZSx0LHIsaSxzKTtmb3IobGV0IG89RWU7bzxuLmxlbmd0aDtvKyspe2NvbnN0IHM9bltvXTtIcyhzWzFdLHMsdCxlLHIsaSl9fShlLHQsaSxuLHMpfX1mdW5jdGlvbiBGcyh0LGUpe2NvbnN0IG49dFs5XSxyPW4uaW5kZXhPZihlKSxzPWVbM107MTAyNCZlWzJdJiYoZVsyXSY9LTEwMjUsWWUocywtMSkpLG4uc3BsaWNlKHIsMSl9ZnVuY3Rpb24gT3ModCxlKXtpZih0Lmxlbmd0aDw9RWUpcmV0dXJuO2NvbnN0IG49RWUrZSxyPXRbbl07aWYocil7Y29uc3QgaT1yWzE3XTtudWxsIT09aSYmaSE9PXQmJkZzKGksciksZT4wJiYodFtuLTFdWzRdPXJbNF0pO2NvbnN0IG89bmUodCxFZStlKTtIcyhyWzFdLHM9cixzWzExXSwyLG51bGwsbnVsbCksc1swXT1udWxsLHNbNl09bnVsbDtjb25zdCBhPW9bMTldO251bGwhPT1hJiZhLmRldGFjaFZpZXcob1sxXSksclszXT1udWxsLHJbNF09bnVsbCxyWzJdJj0tMTI5fXZhciBzO3JldHVybiByfWZ1bmN0aW9uIFBzKHQsZSl7aWYoISgyNTYmZVsyXSkpe2NvbnN0IG49ZVsxMV07QmUobikmJm4uZGVzdHJveU5vZGUmJkhzKHQsZSxuLDMsbnVsbCxudWxsKSxmdW5jdGlvbih0KXtsZXQgZT10WzEzXTtpZighZSlyZXR1cm4gSXModFsxXSx0KTtmb3IoO2U7KXtsZXQgbj1udWxsO2lmKEFlKGUpKW49ZVsxM107ZWxzZXtjb25zdCB0PWVbMTBdO3QmJihuPXQpfWlmKCFuKXtmb3IoO2UmJiFlWzRdJiZlIT09dDspQWUoZSkmJklzKGVbMV0sZSksZT1lWzNdO251bGw9PT1lJiYoZT10KSxBZShlKSYmSXMoZVsxXSxlKSxuPWUmJmVbNF19ZT1ufX0oZSl9fWZ1bmN0aW9uIElzKHQsZSl7aWYoISgyNTYmZVsyXSkpe2VbMl0mPS0xMjksZVsyXXw9MjU2LGZ1bmN0aW9uKHQsZSl7bGV0IG47aWYobnVsbCE9dCYmbnVsbCE9KG49dC5kZXN0cm95SG9va3MpKWZvcihsZXQgcj0wO3I8bi5sZW5ndGg7cis9Mil7Y29uc3QgdD1lW25bcl1dO2lmKCEodCBpbnN0YW5jZW9mIEluKSl7Y29uc3QgZT1uW3IrMV07aWYoQXJyYXkuaXNBcnJheShlKSlmb3IobGV0IG49MDtuPGUubGVuZ3RoO24rPTIpZVtuKzFdLmNhbGwodFtlW25dXSk7ZWxzZSBlLmNhbGwodCl9fX0odCxlKSxmdW5jdGlvbih0LGUpe2NvbnN0IG49dC5jbGVhbnVwO2lmKG51bGwhPT1uKXtjb25zdCB0PWVbN107Zm9yKGxldCByPTA7cjxuLmxlbmd0aC0xO3IrPTIpaWYoInN0cmluZyI9PXR5cGVvZiBuW3JdKXtjb25zdCBzPW5bcisxXSxpPSJmdW5jdGlvbiI9PXR5cGVvZiBzP3MoZSk6VWUoZVtzXSksbz10W25bcisyXV0sYT1uW3IrM107ImJvb2xlYW4iPT10eXBlb2YgYT9pLnJlbW92ZUV2ZW50TGlzdGVuZXIobltyXSxvLGEpOmE+PTA/dFthXSgpOnRbLWFdLnVuc3Vic2NyaWJlKCkscis9Mn1lbHNlIG5bcl0uY2FsbCh0W25bcisxXV0pO2VbN109bnVsbH19KHQsZSksMT09PWVbMV0udHlwZSYmQmUoZVsxMV0pJiZlWzExXS5kZXN0cm95KCk7Y29uc3Qgbj1lWzE3XTtpZihudWxsIT09biYmU2UoZVszXSkpe24hPT1lWzNdJiZGcyhuLGUpO2NvbnN0IHI9ZVsxOV07bnVsbCE9PXImJnIuZGV0YWNoVmlldyh0KX19fWZ1bmN0aW9uIFJzKHQsZSxuKXtsZXQgcj1lLnBhcmVudDtmb3IoO251bGwhPXImJigzPT09ci50eXBlfHw0PT09ci50eXBlKTspcj0oZT1yKS5wYXJlbnQ7aWYobnVsbD09PXIpcmV0dXJuIG5bMF07aWYoZSYmND09PWUudHlwZSYmNCZlLmZsYWdzKXJldHVybiAkZShlLG4pLnBhcmVudE5vZGU7aWYoMiZyLmZsYWdzKXtjb25zdCBlPXQuZGF0YSxuPWVbZVtyLmluZGV4XS5kaXJlY3RpdmVTdGFydF0uZW5jYXBzdWxhdGlvbjtpZihuIT09bGUuU2hhZG93RG9tJiZuIT09bGUuTmF0aXZlKXJldHVybiBudWxsfXJldHVybiAkZShyLG4pfWZ1bmN0aW9uIE1zKHQsZSxuLHIpe0JlKHQpP3QuaW5zZXJ0QmVmb3JlKGUsbixyKTplLmluc2VydEJlZm9yZShuLHIsITApfWZ1bmN0aW9uIGpzKHQsZSxuKXtCZSh0KT90LmFwcGVuZENoaWxkKGUsbik6ZS5hcHBlbmRDaGlsZChuKX1mdW5jdGlvbiBOcyh0LGUsbixyKXtudWxsIT09cj9Ncyh0LGUsbixyKTpqcyh0LGUsbil9ZnVuY3Rpb24gVnModCxlKXtyZXR1cm4gQmUodCk/dC5wYXJlbnROb2RlKGUpOmUucGFyZW50Tm9kZX1mdW5jdGlvbiBCcyh0LGUpe3JldHVybiAzPT09dC50eXBlfHw0PT09dC50eXBlPyRlKHQsZSk6bnVsbH1mdW5jdGlvbiBMcyh0LGUsbixyKXtjb25zdCBzPVJzKHQscixlKTtpZihudWxsIT1zKXtjb25zdCB0PWVbMTFdLGk9QnMoci5wYXJlbnR8fGVbNl0sZSk7aWYoQXJyYXkuaXNBcnJheShuKSlmb3IobGV0IGU9MDtlPG4ubGVuZ3RoO2UrKylOcyh0LHMsbltlXSxpKTtlbHNlIE5zKHQscyxuLGkpfX1mdW5jdGlvbiBVcyh0LGUsbixyLHMsaSxvKXtmb3IoO251bGwhPW47KXtjb25zdCBhPXJbbi5pbmRleF0sbD1uLnR5cGU7byYmMD09PWUmJihhJiZ2cihVZShhKSxyKSxuLmZsYWdzfD00KSw2NCE9KDY0Jm4uZmxhZ3MpJiYoMz09PWx8fDQ9PT1sPyhVcyh0LGUsbi5jaGlsZCxyLHMsaSwhMSksVHMoZSx0LHMsYSxpKSk6MT09PWw/JHModCxlLHIsbixzLGkpOlRzKGUsdCxzLGEsaSkpLG49bz9uLnByb2plY3Rpb25OZXh0Om4ubmV4dH19ZnVuY3Rpb24gSHModCxlLG4scixzLGkpe1VzKG4scix0LmZpcnN0Q2hpbGQsZSxzLGksITEpfWZ1bmN0aW9uICRzKHQsZSxuLHIscyxpKXtjb25zdCBvPW5bMTZdLGE9b1s2XS5wcm9qZWN0aW9uW3IucHJvamVjdGlvbl07aWYoQXJyYXkuaXNBcnJheShhKSlmb3IobGV0IGw9MDtsPGEubGVuZ3RoO2wrKylUcyhlLHQscyxhW2xdLGkpO2Vsc2UgVXModCxlLGEsb1szXSxzLGksITApfWZ1bmN0aW9uIHpzKHQsZSxuKXtCZSh0KT90LnNldEF0dHJpYnV0ZShlLCJzdHlsZSIsbik6ZS5zdHlsZS5jc3NUZXh0PW59ZnVuY3Rpb24gcXModCxlLG4pe0JlKHQpPyIiPT09bj90LnJlbW92ZUF0dHJpYnV0ZShlLCJjbGFzcyIpOnQuc2V0QXR0cmlidXRlKGUsImNsYXNzIixuKTplLmNsYXNzTmFtZT1ufWNsYXNzIFdze2NvbnN0cnVjdG9yKHQsZSl7dGhpcy5fbFZpZXc9dCx0aGlzLl9jZFJlZkluamVjdGluZ1ZpZXc9ZSx0aGlzLl9hcHBSZWY9bnVsbCx0aGlzLl92aWV3Q29udGFpbmVyUmVmPW51bGx9Z2V0IHJvb3ROb2Rlcygpe2NvbnN0IHQ9dGhpcy5fbFZpZXcsZT10WzFdO3JldHVybiBmdW5jdGlvbiB0KGUsbixyLHMsaT0hMSl7Zm9yKDtudWxsIT09cjspe2NvbnN0IG89bltyLmluZGV4XTtpZihudWxsIT09byYmcy5wdXNoKFVlKG8pKSxTZShvKSlmb3IobGV0IGU9RWU7ZTxvLmxlbmd0aDtlKyspe2NvbnN0IG49b1tlXSxyPW5bMV0uZmlyc3RDaGlsZDtudWxsIT09ciYmdChuWzFdLG4scixzKX1jb25zdCBhPXIudHlwZTtpZigzPT09YXx8ND09PWEpdChlLG4sci5jaGlsZCxzKTtlbHNlIGlmKDE9PT1hKXtjb25zdCBlPW5bMTZdLGk9ZVs2XS5wcm9qZWN0aW9uW3IucHJvamVjdGlvbl07aWYoQXJyYXkuaXNBcnJheShpKSlzLnB1c2goLi4uaSk7ZWxzZXtjb25zdCBuPVByKGUpO3QoblsxXSxuLGkscywhMCl9fXI9aT9yLnByb2plY3Rpb25OZXh0OnIubmV4dH1yZXR1cm4gc30oZSx0LGUuZmlyc3RDaGlsZCxbXSl9Z2V0IGNvbnRleHQoKXtyZXR1cm4gdGhpcy5fbFZpZXdbOF19Z2V0IGRlc3Ryb3llZCgpe3JldHVybiAyNTY9PSgyNTYmdGhpcy5fbFZpZXdbMl0pfWRlc3Ryb3koKXtpZih0aGlzLl9hcHBSZWYpdGhpcy5fYXBwUmVmLmRldGFjaFZpZXcodGhpcyk7ZWxzZSBpZih0aGlzLl92aWV3Q29udGFpbmVyUmVmKXtjb25zdCB0PXRoaXMuX3ZpZXdDb250YWluZXJSZWYuaW5kZXhPZih0aGlzKTt0Pi0xJiZ0aGlzLl92aWV3Q29udGFpbmVyUmVmLmRldGFjaCh0KSx0aGlzLl92aWV3Q29udGFpbmVyUmVmPW51bGx9UHModGhpcy5fbFZpZXdbMV0sdGhpcy5fbFZpZXcpfW9uRGVzdHJveSh0KXtycyh0aGlzLl9sVmlld1sxXSx0aGlzLl9sVmlldyxudWxsLHQpfW1hcmtGb3JDaGVjaygpe19zKHRoaXMuX2NkUmVmSW5qZWN0aW5nVmlld3x8dGhpcy5fbFZpZXcpfWRldGFjaCgpe3RoaXMuX2xWaWV3WzJdJj0tMTI5fXJlYXR0YWNoKCl7dGhpcy5fbFZpZXdbMl18PTEyOH1kZXRlY3RDaGFuZ2VzKCl7Q3ModGhpcy5fbFZpZXdbMV0sdGhpcy5fbFZpZXcsdGhpcy5jb250ZXh0KX1jaGVja05vQ2hhbmdlcygpeyFmdW5jdGlvbih0LGUsbil7dW4oITApO3RyeXtDcyh0LGUsbil9ZmluYWxseXt1bighMSl9fSh0aGlzLl9sVmlld1sxXSx0aGlzLl9sVmlldyx0aGlzLmNvbnRleHQpfWF0dGFjaFRvVmlld0NvbnRhaW5lclJlZih0KXtpZih0aGlzLl9hcHBSZWYpdGhyb3cgbmV3IEVycm9yKCJUaGlzIHZpZXcgaXMgYWxyZWFkeSBhdHRhY2hlZCBkaXJlY3RseSB0byB0aGUgQXBwbGljYXRpb25SZWYhIik7dGhpcy5fdmlld0NvbnRhaW5lclJlZj10fWRldGFjaEZyb21BcHBSZWYoKXt2YXIgdDt0aGlzLl9hcHBSZWY9bnVsbCxIcyh0aGlzLl9sVmlld1sxXSx0PXRoaXMuX2xWaWV3LHRbMTFdLDIsbnVsbCxudWxsKX1hdHRhY2hUb0FwcFJlZih0KXtpZih0aGlzLl92aWV3Q29udGFpbmVyUmVmKXRocm93IG5ldyBFcnJvcigiVGhpcyB2aWV3IGlzIGFscmVhZHkgYXR0YWNoZWQgdG8gYSBWaWV3Q29udGFpbmVyISIpO3RoaXMuX2FwcFJlZj10fX1jbGFzcyBacyBleHRlbmRzIFdze2NvbnN0cnVjdG9yKHQpe3N1cGVyKHQpLHRoaXMuX3ZpZXc9dH1kZXRlY3RDaGFuZ2VzKCl7RHModGhpcy5fdmlldyl9Y2hlY2tOb0NoYW5nZXMoKXshZnVuY3Rpb24odCl7dW4oITApO3RyeXtEcyh0KX1maW5hbGx5e3VuKCExKX19KHRoaXMuX3ZpZXcpfWdldCBjb250ZXh0KCl7cmV0dXJuIG51bGx9fWxldCBHcyxLcyxRcztmdW5jdGlvbiBZcyh0LGUsbil7cmV0dXJuIEdzfHwoR3M9Y2xhc3MgZXh0ZW5kcyB0e30pLG5ldyBHcygkZShlLG4pKX1mdW5jdGlvbiBKcyh0LGUsbixyKXtyZXR1cm4gS3N8fChLcz1jbGFzcyBleHRlbmRzIHR7Y29uc3RydWN0b3IodCxlLG4pe3N1cGVyKCksdGhpcy5fZGVjbGFyYXRpb25WaWV3PXQsdGhpcy5fZGVjbGFyYXRpb25UQ29udGFpbmVyPWUsdGhpcy5lbGVtZW50UmVmPW59Y3JlYXRlRW1iZWRkZWRWaWV3KHQpe2NvbnN0IGU9dGhpcy5fZGVjbGFyYXRpb25UQ29udGFpbmVyLnRWaWV3cyxuPVdyKHRoaXMuX2RlY2xhcmF0aW9uVmlldyxlLHQsMTYsbnVsbCxlLmRlY2xUTm9kZSxudWxsLG51bGwsbnVsbCxudWxsKTtuWzE3XT10aGlzLl9kZWNsYXJhdGlvblZpZXdbdGhpcy5fZGVjbGFyYXRpb25UQ29udGFpbmVyLmluZGV4XTtjb25zdCByPXRoaXMuX2RlY2xhcmF0aW9uVmlld1sxOV07cmV0dXJuIG51bGwhPT1yJiYoblsxOV09ci5jcmVhdGVFbWJlZGRlZFZpZXcoZSkpLEdyKGUsbix0KSxuZXcgV3Mobil9fSksMD09PW4udHlwZT9uZXcgS3MocixuLFlzKGUsbixyKSk6bnVsbH1mdW5jdGlvbiBYcyh0LGUsbixyKXtsZXQgcztRc3x8KFFzPWNsYXNzIGV4dGVuZHMgdHtjb25zdHJ1Y3Rvcih0LGUsbil7c3VwZXIoKSx0aGlzLl9sQ29udGFpbmVyPXQsdGhpcy5faG9zdFROb2RlPWUsdGhpcy5faG9zdFZpZXc9bn1nZXQgZWxlbWVudCgpe3JldHVybiBZcyhlLHRoaXMuX2hvc3RUTm9kZSx0aGlzLl9ob3N0Vmlldyl9Z2V0IGluamVjdG9yKCl7cmV0dXJuIG5ldyBhcih0aGlzLl9ob3N0VE5vZGUsdGhpcy5faG9zdFZpZXcpfWdldCBwYXJlbnRJbmplY3Rvcigpe2NvbnN0IHQ9Sm4odGhpcy5faG9zdFROb2RlLHRoaXMuX2hvc3RWaWV3KTtpZihCbih0KSl7Y29uc3QgZT1Vbih0LHRoaXMuX2hvc3RWaWV3KSxuPUxuKHQpO3JldHVybiBuZXcgYXIoZVsxXS5kYXRhW24rOF0sZSl9cmV0dXJuIG5ldyBhcihudWxsLHRoaXMuX2hvc3RWaWV3KX1jbGVhcigpe2Zvcig7dGhpcy5sZW5ndGg+MDspdGhpcy5yZW1vdmUodGhpcy5sZW5ndGgtMSl9Z2V0KHQpe3JldHVybiBudWxsIT09dGhpcy5fbENvbnRhaW5lcls4XSYmdGhpcy5fbENvbnRhaW5lcls4XVt0XXx8bnVsbH1nZXQgbGVuZ3RoKCl7cmV0dXJuIHRoaXMuX2xDb250YWluZXIubGVuZ3RoLUVlfWNyZWF0ZUVtYmVkZGVkVmlldyh0LGUsbil7Y29uc3Qgcj10LmNyZWF0ZUVtYmVkZGVkVmlldyhlfHx7fSk7cmV0dXJuIHRoaXMuaW5zZXJ0KHIsbikscn1jcmVhdGVDb21wb25lbnQodCxlLG4scixzKXtjb25zdCBpPW58fHRoaXMucGFyZW50SW5qZWN0b3I7aWYoIXMmJm51bGw9PXQubmdNb2R1bGUmJmkpe2NvbnN0IHQ9aS5nZXQoSnQsbnVsbCk7dCYmKHM9dCl9Y29uc3Qgbz10LmNyZWF0ZShpLHIsdm9pZCAwLHMpO3JldHVybiB0aGlzLmluc2VydChvLmhvc3RWaWV3LGUpLG99aW5zZXJ0KHQsZSl7Y29uc3Qgbj10Ll9sVmlldyxyPW5bMV07aWYodC5kZXN0cm95ZWQpdGhyb3cgbmV3IEVycm9yKCJDYW5ub3QgaW5zZXJ0IGEgZGVzdHJveWVkIFZpZXcgaW4gYSBWaWV3Q29udGFpbmVyISIpO2lmKHRoaXMuYWxsb2NhdGVDb250YWluZXJJZk5lZWRlZCgpLFNlKG5bM10pKXtjb25zdCBlPXRoaXMuaW5kZXhPZih0KTtpZigtMSE9PWUpdGhpcy5kZXRhY2goZSk7ZWxzZXtjb25zdCBlPW5bM10scj1uZXcgUXMoZSxlWzZdLGVbM10pO3IuZGV0YWNoKHIuaW5kZXhPZih0KSl9fWNvbnN0IHM9dGhpcy5fYWRqdXN0SW5kZXgoZSksaT10aGlzLl9sQ29udGFpbmVyOyFmdW5jdGlvbih0LGUsbixyKXtjb25zdCBzPUVlK3IsaT1uLmxlbmd0aDtyPjAmJihuW3MtMV1bNF09ZSkscjxpLUVlPyhlWzRdPW5bc10sZWUobixFZStyLGUpKToobi5wdXNoKGUpLGVbNF09bnVsbCksZVszXT1uO2NvbnN0IG89ZVsxN107bnVsbCE9PW8mJm4hPT1vJiZmdW5jdGlvbih0LGUpe2NvbnN0IG49dFs5XTtlWzE2XSE9PWVbM11bM11bMTZdJiYodFsyXT0hMCksbnVsbD09PW4/dFs5XT1bZV06bi5wdXNoKGUpfShvLGUpO2NvbnN0IGE9ZVsxOV07bnVsbCE9PWEmJmEuaW5zZXJ0Vmlldyh0KSxlWzJdfD0xMjh9KHIsbixpLHMpO2NvbnN0IG89ZnVuY3Rpb24gdChlLG4pe2NvbnN0IHI9RWUrZSsxO2lmKHI8bi5sZW5ndGgpe2NvbnN0IGU9bltyXSxzPWVbMV0uZmlyc3RDaGlsZDtpZihudWxsIT09cylyZXR1cm4gZnVuY3Rpb24gZShuLHIpe2lmKG51bGwhPT1yKXtjb25zdCBzPXIudHlwZTtpZigyPT09cylyZXR1cm4gJGUocixuKTtpZigwPT09cylyZXR1cm4gdCgtMSxuW3IuaW5kZXhdKTtpZigzPT09c3x8ND09PXMpe2NvbnN0IHM9ci5jaGlsZDtpZihudWxsIT09cylyZXR1cm4gZShuLHMpO3tjb25zdCBlPW5bci5pbmRleF07cmV0dXJuIFNlKGUpP3QoLTEsZSk6VWUoZSl9fXtjb25zdCB0PW5bMTZdLHM9dFs2XSxpPVByKHQpLG89cy5wcm9qZWN0aW9uW3IucHJvamVjdGlvbl07cmV0dXJuIG51bGwhPW8/ZShpLG8pOmUobixyLm5leHQpfX1yZXR1cm4gbnVsbH0oZSxzKX1yZXR1cm4gbls3XX0ocyxpKSxhPW5bMTFdLGw9VnMoYSxpWzddKTtyZXR1cm4gbnVsbCE9PWwmJmZ1bmN0aW9uKHQsZSxuLHIscyxpKXtyWzBdPXMscls2XT1lLEhzKHQscixuLDEscyxpKX0ocixpWzZdLGEsbixsLG8pLHQuYXR0YWNoVG9WaWV3Q29udGFpbmVyUmVmKHRoaXMpLGVlKGlbOF0scyx0KSx0fW1vdmUodCxlKXtpZih0LmRlc3Ryb3llZCl0aHJvdyBuZXcgRXJyb3IoIkNhbm5vdCBtb3ZlIGEgZGVzdHJveWVkIFZpZXcgaW4gYSBWaWV3Q29udGFpbmVyISIpO3JldHVybiB0aGlzLmluc2VydCh0LGUpfWluZGV4T2YodCl7Y29uc3QgZT10aGlzLl9sQ29udGFpbmVyWzhdO3JldHVybiBudWxsIT09ZT9lLmluZGV4T2YodCk6LTF9cmVtb3ZlKHQpe3RoaXMuYWxsb2NhdGVDb250YWluZXJJZk5lZWRlZCgpO2NvbnN0IGU9dGhpcy5fYWRqdXN0SW5kZXgodCwtMSksbj1Pcyh0aGlzLl9sQ29udGFpbmVyLGUpO24mJihuZSh0aGlzLl9sQ29udGFpbmVyWzhdLGUpLFBzKG5bMV0sbikpfWRldGFjaCh0KXt0aGlzLmFsbG9jYXRlQ29udGFpbmVySWZOZWVkZWQoKTtjb25zdCBlPXRoaXMuX2FkanVzdEluZGV4KHQsLTEpLG49T3ModGhpcy5fbENvbnRhaW5lcixlKTtyZXR1cm4gbiYmbnVsbCE9bmUodGhpcy5fbENvbnRhaW5lcls4XSxlKT9uZXcgV3Mobik6bnVsbH1fYWRqdXN0SW5kZXgodCxlPTApe3JldHVybiBudWxsPT10P3RoaXMubGVuZ3RoK2U6dH1hbGxvY2F0ZUNvbnRhaW5lcklmTmVlZGVkKCl7bnVsbD09PXRoaXMuX2xDb250YWluZXJbOF0mJih0aGlzLl9sQ29udGFpbmVyWzhdPVtdKX19KTtjb25zdCBpPXJbbi5pbmRleF07aWYoU2UoaSkpcz1pO2Vsc2V7bGV0IHQ7aWYoMz09PW4udHlwZSl0PVVlKGkpO2Vsc2UgaWYodD1yWzExXS5jcmVhdGVDb21tZW50KCIiKSxPZShyKSl7Y29uc3QgZT1yWzExXSxzPSRlKG4scik7TXMoZSxWcyhlLHMpLHQsZnVuY3Rpb24odCxlKXtyZXR1cm4gQmUodCk/dC5uZXh0U2libGluZyhlKTplLm5leHRTaWJsaW5nfShlLHMpKX1lbHNlIExzKHJbMV0scix0LG4pO3Jbbi5pbmRleF09cz15cyhpLHIsdCxuKSx3cyhyLHMpfXJldHVybiBuZXcgUXMocyxuLHIpfWxldCB0aT0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5fX05HX0VMRU1FTlRfSURfXz0oKT0+ZWkoKSx0fSkoKTtjb25zdCBlaT1mdW5jdGlvbih0PSExKXtyZXR1cm4gZnVuY3Rpb24odCxlLG4pe2lmKCFuJiZrZSh0KSl7Y29uc3Qgbj1xZSh0LmluZGV4LGUpO3JldHVybiBuZXcgV3MobixuKX1yZXR1cm4gMj09PXQudHlwZXx8MD09PXQudHlwZXx8Mz09PXQudHlwZXx8ND09PXQudHlwZT9uZXcgV3MoZVsxNl0sZSk6bnVsbH0ocm4oKSx0bigpLHQpfSxuaT1GdW5jdGlvbixyaT1uZXcgTnQoIlNldCBJbmplY3RvciBzY29wZS4iKSxzaT17fSxpaT17fSxvaT1bXTtsZXQgYWk9dm9pZCAwO2Z1bmN0aW9uIGxpKCl7cmV0dXJuIHZvaWQgMD09PWFpJiYoYWk9bmV3IFl0KSxhaX1mdW5jdGlvbiB1aSh0LGU9bnVsbCxuPW51bGwscil7cmV0dXJuIG5ldyBjaSh0LG4sZXx8bGkoKSxyKX1jbGFzcyBjaXtjb25zdHJ1Y3Rvcih0LGUsbixyPW51bGwpe3RoaXMucGFyZW50PW4sdGhpcy5yZWNvcmRzPW5ldyBNYXAsdGhpcy5pbmplY3RvckRlZlR5cGVzPW5ldyBTZXQsdGhpcy5vbkRlc3Ryb3k9bmV3IFNldCx0aGlzLl9kZXN0cm95ZWQ9ITE7Y29uc3Qgcz1bXTtlJiZ0ZShlLG49PnRoaXMucHJvY2Vzc1Byb3ZpZGVyKG4sdCxlKSksdGUoW3RdLHQ9PnRoaXMucHJvY2Vzc0luamVjdG9yVHlwZSh0LFtdLHMpKSx0aGlzLnJlY29yZHMuc2V0KFZ0LHBpKHZvaWQgMCx0aGlzKSk7Y29uc3QgaT10aGlzLnJlY29yZHMuZ2V0KHJpKTt0aGlzLnNjb3BlPW51bGwhPWk/aS52YWx1ZTpudWxsLHRoaXMuc291cmNlPXJ8fCgib2JqZWN0Ij09dHlwZW9mIHQ/bnVsbDpidCh0KSl9Z2V0IGRlc3Ryb3llZCgpe3JldHVybiB0aGlzLl9kZXN0cm95ZWR9ZGVzdHJveSgpe3RoaXMuYXNzZXJ0Tm90RGVzdHJveWVkKCksdGhpcy5fZGVzdHJveWVkPSEwO3RyeXt0aGlzLm9uRGVzdHJveS5mb3JFYWNoKHQ9PnQubmdPbkRlc3Ryb3koKSl9ZmluYWxseXt0aGlzLnJlY29yZHMuY2xlYXIoKSx0aGlzLm9uRGVzdHJveS5jbGVhcigpLHRoaXMuaW5qZWN0b3JEZWZUeXBlcy5jbGVhcigpfX1nZXQodCxlPUJ0LG49b3QuRGVmYXVsdCl7dGhpcy5hc3NlcnROb3REZXN0cm95ZWQoKTtjb25zdCByPXF0KHRoaXMpO3RyeXtpZighKG4mb3QuU2tpcFNlbGYpKXtsZXQgZT10aGlzLnJlY29yZHMuZ2V0KHQpO2lmKHZvaWQgMD09PWUpe2NvbnN0IG49KCJmdW5jdGlvbiI9PXR5cGVvZihzPXQpfHwib2JqZWN0Ij09dHlwZW9mIHMmJnMgaW5zdGFuY2VvZiBOdCkmJmh0KHQpO2U9biYmdGhpcy5pbmplY3RhYmxlRGVmSW5TY29wZShuKT9waShoaSh0KSxzaSk6bnVsbCx0aGlzLnJlY29yZHMuc2V0KHQsZSl9aWYobnVsbCE9ZSlyZXR1cm4gdGhpcy5oeWRyYXRlKHQsZSl9cmV0dXJuKG4mb3QuU2VsZj9saSgpOnRoaXMucGFyZW50KS5nZXQodCxlPW4mb3QuT3B0aW9uYWwmJmU9PT1CdD9udWxsOmUpfWNhdGNoKGkpe2lmKCJOdWxsSW5qZWN0b3JFcnJvciI9PT1pLm5hbWUpe2lmKChpLm5nVGVtcFRva2VuUGF0aD1pLm5nVGVtcFRva2VuUGF0aHx8W10pLnVuc2hpZnQoYnQodCkpLHIpdGhyb3cgaTtyZXR1cm4gZnVuY3Rpb24odCxlLG4scil7Y29uc3Qgcz10Lm5nVGVtcFRva2VuUGF0aDt0aHJvdyBlW1V0XSYmcy51bnNoaWZ0KGVbVXRdKSx0Lm1lc3NhZ2U9ZnVuY3Rpb24odCxlLG4scj1udWxsKXt0PXQmJiJcbiI9PT10LmNoYXJBdCgwKSYmIlx1MDI3NSI9PXQuY2hhckF0KDEpP3Quc3Vic3RyKDIpOnQ7bGV0IHM9YnQoZSk7aWYoQXJyYXkuaXNBcnJheShlKSlzPWUubWFwKGJ0KS5qb2luKCIgLT4gIik7ZWxzZSBpZigib2JqZWN0Ij09dHlwZW9mIGUpe2xldCB0PVtdO2ZvcihsZXQgbiBpbiBlKWlmKGUuaGFzT3duUHJvcGVydHkobikpe2xldCByPWVbbl07dC5wdXNoKG4rIjoiKygic3RyaW5nIj09dHlwZW9mIHI/SlNPTi5zdHJpbmdpZnkocik6YnQocikpKX1zPWB7JHt0LmpvaW4oIiwgIil9fWB9cmV0dXJuYCR7bn0ke3I/IigiK3IrIikiOiIifVske3N9XTogJHt0LnJlcGxhY2UoTHQsIlxuICAiKX1gfSgiXG4iK3QubWVzc2FnZSxzLG4sciksdC5uZ1Rva2VuUGF0aD1zLHQubmdUZW1wVG9rZW5QYXRoPW51bGwsdH0oaSx0LCJSM0luamVjdG9yRXJyb3IiLHRoaXMuc291cmNlKX10aHJvdyBpfWZpbmFsbHl7cXQocil9dmFyIHN9X3Jlc29sdmVJbmplY3RvckRlZlR5cGVzKCl7dGhpcy5pbmplY3RvckRlZlR5cGVzLmZvckVhY2godD0+dGhpcy5nZXQodCkpfXRvU3RyaW5nKCl7Y29uc3QgdD1bXTtyZXR1cm4gdGhpcy5yZWNvcmRzLmZvckVhY2goKGUsbik9PnQucHVzaChidChuKSkpLGBSM0luamVjdG9yWyR7dC5qb2luKCIsICIpfV1gfWFzc2VydE5vdERlc3Ryb3llZCgpe2lmKHRoaXMuX2Rlc3Ryb3llZCl0aHJvdyBuZXcgRXJyb3IoIkluamVjdG9yIGhhcyBhbHJlYWR5IGJlZW4gZGVzdHJveWVkLiIpfXByb2Nlc3NJbmplY3RvclR5cGUodCxlLG4pe2lmKCEodD1EdCh0KSkpcmV0dXJuITE7bGV0IHI9cHQodCk7Y29uc3Qgcz1udWxsPT1yJiZ0Lm5nTW9kdWxlfHx2b2lkIDAsaT12b2lkIDA9PT1zP3Q6cyxvPS0xIT09bi5pbmRleE9mKGkpO2lmKHZvaWQgMCE9PXMmJihyPXB0KHMpKSxudWxsPT1yKXJldHVybiExO2lmKG51bGwhPXIuaW1wb3J0cyYmIW8pe2xldCB0O24ucHVzaChpKTt0cnl7dGUoci5pbXBvcnRzLHI9Pnt0aGlzLnByb2Nlc3NJbmplY3RvclR5cGUocixlLG4pJiYodm9pZCAwPT09dCYmKHQ9W10pLHQucHVzaChyKSl9KX1maW5hbGx5e31pZih2b2lkIDAhPT10KWZvcihsZXQgZT0wO2U8dC5sZW5ndGg7ZSsrKXtjb25zdHtuZ01vZHVsZTpuLHByb3ZpZGVyczpyfT10W2VdO3RlKHIsdD0+dGhpcy5wcm9jZXNzUHJvdmlkZXIodCxuLHJ8fG9pKSl9fXRoaXMuaW5qZWN0b3JEZWZUeXBlcy5hZGQoaSksdGhpcy5yZWNvcmRzLnNldChpLHBpKHIuZmFjdG9yeSxzaSkpO2NvbnN0IGE9ci5wcm92aWRlcnM7aWYobnVsbCE9YSYmIW8pe2NvbnN0IGU9dDt0ZShhLHQ9PnRoaXMucHJvY2Vzc1Byb3ZpZGVyKHQsZSxhKSl9cmV0dXJuIHZvaWQgMCE9PXMmJnZvaWQgMCE9PXQucHJvdmlkZXJzfXByb2Nlc3NQcm92aWRlcih0LGUsbil7bGV0IHI9Z2kodD1EdCh0KSk/dDpEdCh0JiZ0LnByb3ZpZGUpO2NvbnN0IHM9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBmaSh0KT9waSh2b2lkIDAsdC51c2VWYWx1ZSk6cGkoZGkodCksc2kpfSh0KTtpZihnaSh0KXx8ITAhPT10Lm11bHRpKXRoaXMucmVjb3Jkcy5nZXQocik7ZWxzZXtsZXQgZT10aGlzLnJlY29yZHMuZ2V0KHIpO2V8fChlPXBpKHZvaWQgMCxzaSwhMCksZS5mYWN0b3J5PSgpPT5RdChlLm11bHRpKSx0aGlzLnJlY29yZHMuc2V0KHIsZSkpLHI9dCxlLm11bHRpLnB1c2godCl9dGhpcy5yZWNvcmRzLnNldChyLHMpfWh5ZHJhdGUodCxlKXt2YXIgbjtyZXR1cm4gZS52YWx1ZT09PXNpJiYoZS52YWx1ZT1paSxlLnZhbHVlPWUuZmFjdG9yeSgpKSwib2JqZWN0Ij09dHlwZW9mIGUudmFsdWUmJmUudmFsdWUmJm51bGwhPT0obj1lLnZhbHVlKSYmIm9iamVjdCI9PXR5cGVvZiBuJiYiZnVuY3Rpb24iPT10eXBlb2Ygbi5uZ09uRGVzdHJveSYmdGhpcy5vbkRlc3Ryb3kuYWRkKGUudmFsdWUpLGUudmFsdWV9aW5qZWN0YWJsZURlZkluU2NvcGUodCl7cmV0dXJuISF0LnByb3ZpZGVkSW4mJigic3RyaW5nIj09dHlwZW9mIHQucHJvdmlkZWRJbj8iYW55Ij09PXQucHJvdmlkZWRJbnx8dC5wcm92aWRlZEluPT09dGhpcy5zY29wZTp0aGlzLmluamVjdG9yRGVmVHlwZXMuaGFzKHQucHJvdmlkZWRJbikpfX1mdW5jdGlvbiBoaSh0KXtjb25zdCBlPWh0KHQpLG49bnVsbCE9PWU/ZS5mYWN0b3J5Ol9lKHQpO2lmKG51bGwhPT1uKXJldHVybiBuO2NvbnN0IHI9cHQodCk7aWYobnVsbCE9PXIpcmV0dXJuIHIuZmFjdG9yeTtpZih0IGluc3RhbmNlb2YgTnQpdGhyb3cgbmV3IEVycm9yKGBUb2tlbiAke2J0KHQpfSBpcyBtaXNzaW5nIGEgXHUwMjc1cHJvdiBkZWZpbml0aW9uLmApO2lmKHQgaW5zdGFuY2VvZiBGdW5jdGlvbilyZXR1cm4gZnVuY3Rpb24odCl7Y29uc3QgZT10Lmxlbmd0aDtpZihlPjApe2NvbnN0IG49cmUoZSwiPyIpO3Rocm93IG5ldyBFcnJvcihgQ2FuJ3QgcmVzb2x2ZSBhbGwgcGFyYW1ldGVycyBmb3IgJHtidCh0KX06ICgke24uam9pbigiLCAiKX0pLmApfWNvbnN0IG49ZnVuY3Rpb24odCl7Y29uc3QgZT10JiYodFtmdF18fHRbeXRdfHx0W210XSYmdFttdF0oKSk7aWYoZSl7Y29uc3Qgbj1mdW5jdGlvbih0KXtpZih0Lmhhc093blByb3BlcnR5KCJuYW1lIikpcmV0dXJuIHQubmFtZTtjb25zdCBlPSgiIit0KS5tYXRjaCgvXmZ1bmN0aW9uXHMqKFteXHMoXSspLyk7cmV0dXJuIG51bGw9PT1lPyIiOmVbMV19KHQpO3JldHVybiBjb25zb2xlLndhcm4oYERFUFJFQ0FURUQ6IERJIGlzIGluc3RhbnRpYXRpbmcgYSB0b2tlbiAiJHtufSIgdGhhdCBpbmhlcml0cyBpdHMgQEluamVjdGFibGUgZGVjb3JhdG9yIGJ1dCBkb2VzIG5vdCBwcm92aWRlIG9uZSBpdHNlbGYuXG5UaGlzIHdpbGwgYmVjb21lIGFuIGVycm9yIGluIGEgZnV0dXJlIHZlcnNpb24gb2YgQW5ndWxhci4gUGxlYXNlIGFkZCBASW5qZWN0YWJsZSgpIHRvIHRoZSAiJHtufSIgY2xhc3MuYCksZX1yZXR1cm4gbnVsbH0odCk7cmV0dXJuIG51bGwhPT1uPygpPT5uLmZhY3RvcnkodCk6KCk9Pm5ldyB0fSh0KTt0aHJvdyBuZXcgRXJyb3IoInVucmVhY2hhYmxlIil9ZnVuY3Rpb24gZGkodCxlLG4pe2xldCByPXZvaWQgMDtpZihnaSh0KSl7Y29uc3QgZT1EdCh0KTtyZXR1cm4gX2UoZSl8fGhpKGUpfWlmKGZpKHQpKXI9KCk9PkR0KHQudXNlVmFsdWUpO2Vsc2UgaWYoKHM9dCkmJnMudXNlRmFjdG9yeSlyPSgpPT50LnVzZUZhY3RvcnkoLi4uUXQodC5kZXBzfHxbXSkpO2Vsc2UgaWYoZnVuY3Rpb24odCl7cmV0dXJuISghdHx8IXQudXNlRXhpc3RpbmcpfSh0KSlyPSgpPT5HdChEdCh0LnVzZUV4aXN0aW5nKSk7ZWxzZXtjb25zdCBlPUR0KHQmJih0LnVzZUNsYXNzfHx0LnByb3ZpZGUpKTtpZighZnVuY3Rpb24odCl7cmV0dXJuISF0LmRlcHN9KHQpKXJldHVybiBfZShlKXx8aGkoZSk7cj0oKT0+bmV3IGUoLi4uUXQodC5kZXBzKSl9dmFyIHM7cmV0dXJuIHJ9ZnVuY3Rpb24gcGkodCxlLG49ITEpe3JldHVybntmYWN0b3J5OnQsdmFsdWU6ZSxtdWx0aTpuP1tdOnZvaWQgMH19ZnVuY3Rpb24gZmkodCl7cmV0dXJuIG51bGwhPT10JiYib2JqZWN0Ij09dHlwZW9mIHQmJkh0IGluIHR9ZnVuY3Rpb24gZ2kodCl7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIHR9Y29uc3QgbWk9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBmdW5jdGlvbih0LGU9bnVsbCxuPW51bGwscil7Y29uc3Qgcz11aSh0LGUsbixyKTtyZXR1cm4gcy5fcmVzb2x2ZUluamVjdG9yRGVmVHlwZXMoKSxzfSh7bmFtZTpufSxlLHQsbil9O2xldCB5aT0oKCk9PntjbGFzcyB0e3N0YXRpYyBjcmVhdGUodCxlKXtyZXR1cm4gQXJyYXkuaXNBcnJheSh0KT9taSh0LGUsIiIpOm1pKHQucHJvdmlkZXJzLHQucGFyZW50LHQubmFtZXx8IiIpfX1yZXR1cm4gdC5USFJPV19JRl9OT1RfRk9VTkQ9QnQsdC5OVUxMPW5ldyBZdCx0Llx1MDI3NXByb3Y9dXQoe3Rva2VuOnQscHJvdmlkZWRJbjoiYW55IixmYWN0b3J5OigpPT5HdChWdCl9KSx0Ll9fTkdfRUxFTUVOVF9JRF9fPS0xLHR9KSgpO2NvbnN0IHZpPW5ldyBOdCgiQW5hbHl6ZUZvckVudHJ5Q29tcG9uZW50cyIpO2Z1bmN0aW9uIGJpKHQsZSxuKXtsZXQgcj1uP3Quc3R5bGVzOm51bGwscz1uP3QuY2xhc3NlczpudWxsLGk9MDtpZihudWxsIT09ZSlmb3IobGV0IG89MDtvPGUubGVuZ3RoO28rKyl7Y29uc3QgdD1lW29dOyJudW1iZXIiPT10eXBlb2YgdD9pPXQ6MT09aT9zPXd0KHMsdCk6Mj09aSYmKHI9d3Qocix0KyI6ICIrZVsrK29dKyI7IikpfW4/dC5zdHlsZXM9cjp0LnN0eWxlc1dpdGhvdXRIb3N0PXIsbj90LmNsYXNzZXM9czp0LmNsYXNzZXNXaXRob3V0SG9zdD1zfWZ1bmN0aW9uIHdpKHQsZSl7Y29uc3Qgbj1XZSh0KVsxXSxyPW4uZGF0YS5sZW5ndGgtMTtTbihuLHtkaXJlY3RpdmVTdGFydDpyLGRpcmVjdGl2ZUVuZDpyKzF9KX1mdW5jdGlvbiBfaSh0KXtsZXQgZT1PYmplY3QuZ2V0UHJvdG90eXBlT2YodC50eXBlLnByb3RvdHlwZSkuY29uc3RydWN0b3Isbj0hMDtjb25zdCByPVt0XTtmb3IoO2U7KXtsZXQgcz12b2lkIDA7aWYoRmUodCkpcz1lLlx1MDI3NWNtcHx8ZS5cdTAyNzVkaXI7ZWxzZXtpZihlLlx1MDI3NWNtcCl0aHJvdyBuZXcgRXJyb3IoIkRpcmVjdGl2ZXMgY2Fubm90IGluaGVyaXQgQ29tcG9uZW50cyIpO3M9ZS5cdTAyNzVkaXJ9aWYocyl7aWYobil7ci5wdXNoKHMpO2NvbnN0IGU9dDtlLmlucHV0cz1DaSh0LmlucHV0cyksZS5kZWNsYXJlZElucHV0cz1DaSh0LmRlY2xhcmVkSW5wdXRzKSxlLm91dHB1dHM9Q2kodC5vdXRwdXRzKTtjb25zdCBuPXMuaG9zdEJpbmRpbmdzO24mJkFpKHQsbik7Y29uc3QgaT1zLnZpZXdRdWVyeSxvPXMuY29udGVudFF1ZXJpZXM7aWYoaSYmRGkodCxpKSxvJiZFaSh0LG8pLGx0KHQuaW5wdXRzLHMuaW5wdXRzKSxsdCh0LmRlY2xhcmVkSW5wdXRzLHMuZGVjbGFyZWRJbnB1dHMpLGx0KHQub3V0cHV0cyxzLm91dHB1dHMpLEZlKHMpJiZzLmRhdGEuYW5pbWF0aW9uKXtjb25zdCBlPXQuZGF0YTtlLmFuaW1hdGlvbj0oZS5hbmltYXRpb258fFtdKS5jb25jYXQocy5kYXRhLmFuaW1hdGlvbil9fWNvbnN0IGU9cy5mZWF0dXJlcztpZihlKWZvcihsZXQgcj0wO3I8ZS5sZW5ndGg7cisrKXtjb25zdCBzPWVbcl07cyYmcy5uZ0luaGVyaXQmJnModCkscz09PV9pJiYobj0hMSl9fWU9T2JqZWN0LmdldFByb3RvdHlwZU9mKGUpfSFmdW5jdGlvbih0KXtsZXQgZT0wLG49bnVsbDtmb3IobGV0IHI9dC5sZW5ndGgtMTtyPj0wO3ItLSl7Y29uc3Qgcz10W3JdO3MuaG9zdFZhcnM9ZSs9cy5ob3N0VmFycyxzLmhvc3RBdHRycz1ObihzLmhvc3RBdHRycyxuPU5uKG4scy5ob3N0QXR0cnMpKX19KHIpfWZ1bmN0aW9uIENpKHQpe3JldHVybiB0PT09dWU/e306dD09PWNlP1tdOnR9ZnVuY3Rpb24gRGkodCxlKXtjb25zdCBuPXQudmlld1F1ZXJ5O3Qudmlld1F1ZXJ5PW4/KHQscik9PntlKHQsciksbih0LHIpfTplfWZ1bmN0aW9uIEVpKHQsZSl7Y29uc3Qgbj10LmNvbnRlbnRRdWVyaWVzO3QuY29udGVudFF1ZXJpZXM9bj8odCxyLHMpPT57ZSh0LHIscyksbih0LHIscyl9OmV9ZnVuY3Rpb24gQWkodCxlKXtjb25zdCBuPXQuaG9zdEJpbmRpbmdzO3QuaG9zdEJpbmRpbmdzPW4/KHQscik9PntlKHQsciksbih0LHIpfTplfWxldCBTaT1udWxsO2Z1bmN0aW9uIHhpKCl7aWYoIVNpKXtjb25zdCB0PVR0LlN5bWJvbDtpZih0JiZ0Lml0ZXJhdG9yKVNpPXQuaXRlcmF0b3I7ZWxzZXtjb25zdCB0PU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE1hcC5wcm90b3R5cGUpO2ZvcihsZXQgZT0wO2U8dC5sZW5ndGg7KytlKXtjb25zdCBuPXRbZV07ImVudHJpZXMiIT09biYmInNpemUiIT09biYmTWFwLnByb3RvdHlwZVtuXT09PU1hcC5wcm90b3R5cGUuZW50cmllcyYmKFNpPW4pfX19cmV0dXJuIFNpfWZ1bmN0aW9uIGtpKHQpe3JldHVybiEhVGkodCkmJihBcnJheS5pc0FycmF5KHQpfHwhKHQgaW5zdGFuY2VvZiBNYXApJiZ4aSgpaW4gdCl9ZnVuY3Rpb24gVGkodCl7cmV0dXJuIG51bGwhPT10JiYoImZ1bmN0aW9uIj09dHlwZW9mIHR8fCJvYmplY3QiPT10eXBlb2YgdCl9ZnVuY3Rpb24gRmkodCxlLG4pe3JldHVybiFPYmplY3QuaXModFtlXSxuKSYmKHRbZV09biwhMCl9ZnVuY3Rpb24gT2kodCxlLG4scil7Y29uc3Qgcz10bigpO3JldHVybiBGaShzLGNuKCksZSkmJihlbigpLGZ1bmN0aW9uKHQsZSxuLHIscyxpKXtjb25zdCBvPSRlKHQsZSksYT1lWzExXTtpZihudWxsPT1yKUJlKGEpP2EucmVtb3ZlQXR0cmlidXRlKG8sbixpKTpvLnJlbW92ZUF0dHJpYnV0ZShuKTtlbHNle2NvbnN0IGU9bnVsbD09cz9IbihyKTpzKHIsdC50YWdOYW1lfHwiIixuKTtCZShhKT9hLnNldEF0dHJpYnV0ZShvLG4sZSxpKTppP28uc2V0QXR0cmlidXRlTlMoaSxuLGUpOm8uc2V0QXR0cmlidXRlKG4sZSl9fShBbigpLHMsdCxlLG4scikpLE9pfWZ1bmN0aW9uIFBpKHQsZSxuLHIpe3JldHVybiBGaSh0LGNuKCksbik/ZStIbihuKStyOk9yfWZ1bmN0aW9uIElpKHQsZSxuLHIscyxpLG8sYSl7Y29uc3QgbD10bigpLHU9ZW4oKSxjPXQrRGUsaD11LmZpcnN0Q3JlYXRlUGFzcz9mdW5jdGlvbih0LGUsbixyLHMsaSxvLGEsbCl7Y29uc3QgdT1lLmNvbnN0cyxjPVpyKGUsdCwwLG98fG51bGwsS2UodSxhKSk7aXMoZSxuLGMsS2UodSxsKSksU24oZSxjKTtjb25zdCBoPWMudFZpZXdzPW5zKDIsYyxyLHMsaSxlLmRpcmVjdGl2ZVJlZ2lzdHJ5LGUucGlwZVJlZ2lzdHJ5LG51bGwsZS5zY2hlbWFzLHUpO3JldHVybiBudWxsIT09ZS5xdWVyaWVzJiYoZS5xdWVyaWVzLnRlbXBsYXRlKGUsYyksaC5xdWVyaWVzPWUucXVlcmllcy5lbWJlZGRlZFRWaWV3KGMpKSxjfSh0LHUsbCxlLG4scixzLGksbyk6dS5kYXRhW2NdO3NuKGgsITEpO2NvbnN0IGQ9bFsxMV0uY3JlYXRlQ29tbWVudCgiIik7THModSxsLGQsaCksdnIoZCxsKSx3cyhsLGxbY109eXMoZCxsLGQsaCkpLFRlKGgpJiZYcih1LGwsaCksbnVsbCE9byYmdHMobCxoLGEpfWZ1bmN0aW9uIFJpKHQsZT1vdC5EZWZhdWx0KXtjb25zdCBuPXRuKCk7cmV0dXJuIG51bGw9PT1uP0d0KHQsZSk6dHIocm4oKSxuLER0KHQpLGUpfWZ1bmN0aW9uIE1pKHQsZSxuKXtjb25zdCByPXRuKCk7cmV0dXJuIEZpKHIsY24oKSxlKSYmZnVuY3Rpb24odCxlLG4scixzLGksbyxhKXtjb25zdCBsPSRlKGUsbik7bGV0IHUsYz1lLmlucHV0czt2YXIgaDtudWxsIT1jJiYodT1jW3JdKT8oa3ModCxuLHUscixzKSxrZShlKSYmZnVuY3Rpb24odCxlKXtjb25zdCBuPXFlKGUsdCk7MTYmblsyXXx8KG5bMl18PTY0KX0obixlLmluZGV4KSk6Mj09PWUudHlwZSYmKHI9ImNsYXNzIj09PShoPXIpPyJjbGFzc05hbWUiOiJmb3IiPT09aD8iaHRtbEZvciI6ImZvcm1hY3Rpb24iPT09aD8iZm9ybUFjdGlvbiI6ImlubmVySHRtbCI9PT1oPyJpbm5lckhUTUwiOiJyZWFkb25seSI9PT1oPyJyZWFkT25seSI6InRhYmluZGV4Ij09PWg/InRhYkluZGV4IjpoLHM9bnVsbCE9bz9vKHMsZS50YWdOYW1lfHwiIixyKTpzLEJlKGkpP2kuc2V0UHJvcGVydHkobCxyLHMpOmpuKHIpfHwobC5zZXRQcm9wZXJ0eT9sLnNldFByb3BlcnR5KHIscyk6bFtyXT1zKSl9KGVuKCksQW4oKSxyLHQsZSxyWzExXSxuKSxNaX1mdW5jdGlvbiBqaSh0LGUsbixyLHMpe2NvbnN0IGk9cz8iY2xhc3MiOiJzdHlsZSI7a3ModCxuLGUuaW5wdXRzW2ldLGkscil9ZnVuY3Rpb24gTmkodCxlLG4scil7Y29uc3Qgcz10bigpLGk9ZW4oKSxvPURlK3QsYT1zWzExXSxsPXNbb109cXIoZSxhLEplLmxGcmFtZS5jdXJyZW50TmFtZXNwYWNlKSx1PWkuZmlyc3RDcmVhdGVQYXNzP2Z1bmN0aW9uKHQsZSxuLHIscyxpLG8pe2NvbnN0IGE9ZS5jb25zdHMsbD1acihlLHQsMixzLEtlKGEsaSkpO3JldHVybiBpcyhlLG4sbCxLZShhLG8pKSxudWxsIT09bC5hdHRycyYmYmkobCxsLmF0dHJzLCExKSxudWxsIT09bC5tZXJnZWRBdHRycyYmYmkobCxsLm1lcmdlZEF0dHJzLCEwKSxudWxsIT09ZS5xdWVyaWVzJiZlLnF1ZXJpZXMuZWxlbWVudFN0YXJ0KGUsbCksbH0odCxpLHMsMCxlLG4scik6aS5kYXRhW29dO3NuKHUsITApO2NvbnN0IGM9dS5tZXJnZWRBdHRycztudWxsIT09YyYmUm4oYSxsLGMpO2NvbnN0IGg9dS5jbGFzc2VzO251bGwhPT1oJiZxcyhhLGwsaCk7Y29uc3QgZD11LnN0eWxlcztudWxsIT09ZCYmenMoYSxsLGQpLExzKGkscyxsLHUpLDA9PT1KZS5sRnJhbWUuZWxlbWVudERlcHRoQ291bnQmJnZyKGwscyksSmUubEZyYW1lLmVsZW1lbnREZXB0aENvdW50KyssVGUodSkmJihYcihpLHMsdSksSnIoaSx1LHMpKSxudWxsIT09ciYmdHMocyx1KX1mdW5jdGlvbiBWaSgpe2xldCB0PXJuKCk7b24oKT9hbigpOih0PXQucGFyZW50LHNuKHQsITEpKTtjb25zdCBlPXQ7SmUubEZyYW1lLmVsZW1lbnREZXB0aENvdW50LS07Y29uc3Qgbj1lbigpO24uZmlyc3RDcmVhdGVQYXNzJiYoU24obix0KSx4ZSh0KSYmbi5xdWVyaWVzLmVsZW1lbnRFbmQodCkpLG51bGwhPWUuY2xhc3Nlc1dpdGhvdXRIb3N0JiZmdW5jdGlvbih0KXtyZXR1cm4gMCE9KDE2JnQuZmxhZ3MpfShlKSYmamkobixlLHRuKCksZS5jbGFzc2VzV2l0aG91dEhvc3QsITApLG51bGwhPWUuc3R5bGVzV2l0aG91dEhvc3QmJmZ1bmN0aW9uKHQpe3JldHVybiAwIT0oMzImdC5mbGFncyl9KGUpJiZqaShuLGUsdG4oKSxlLnN0eWxlc1dpdGhvdXRIb3N0LCExKX1mdW5jdGlvbiBCaSh0LGUsbixyKXtOaSh0LGUsbixyKSxWaSgpfWZ1bmN0aW9uIExpKCl7cmV0dXJuIHRuKCl9ZnVuY3Rpb24gVWkodCl7cmV0dXJuISF0JiYiZnVuY3Rpb24iPT10eXBlb2YgdC50aGVufWZ1bmN0aW9uIEhpKHQpe3JldHVybiEhdCYmImZ1bmN0aW9uIj09dHlwZW9mIHQuc3Vic2NyaWJlfWZ1bmN0aW9uICRpKHQsZSxuPSExLHIpe2NvbnN0IHM9dG4oKSxpPWVuKCksbz1ybigpO3JldHVybiBmdW5jdGlvbih0LGUsbixyLHMsaSxvPSExLGEpe2NvbnN0IGw9VGUociksdT10LmZpcnN0Q3JlYXRlUGFzcyYmKHQuY2xlYW51cHx8KHQuY2xlYW51cD1bXSkpLGM9U3MoZSk7bGV0IGg9ITA7aWYoMj09PXIudHlwZSl7Y29uc3QgZD0kZShyLGUpLHA9YT9hKGQpOnVlLGY9cC50YXJnZXR8fGQsZz1jLmxlbmd0aCxtPWE/dD0+YShVZSh0W3IuaW5kZXhdKSkudGFyZ2V0OnIuaW5kZXg7aWYoQmUobikpe2xldCBvPW51bGw7aWYoIWEmJmwmJihvPWZ1bmN0aW9uKHQsZSxuLHIpe2NvbnN0IHM9dC5jbGVhbnVwO2lmKG51bGwhPXMpZm9yKGxldCBpPTA7aTxzLmxlbmd0aC0xO2krPTIpe2NvbnN0IHQ9c1tpXTtpZih0PT09biYmc1tpKzFdPT09cil7Y29uc3QgdD1lWzddLG49c1tpKzJdO3JldHVybiB0Lmxlbmd0aD5uP3Rbbl06bnVsbH0ic3RyaW5nIj09dHlwZW9mIHQmJihpKz0yKX1yZXR1cm4gbnVsbH0odCxlLHMsci5pbmRleCkpLG51bGwhPT1vKShvLl9fbmdMYXN0TGlzdGVuZXJGbl9ffHxvKS5fX25nTmV4dExpc3RlbmVyRm5fXz1pLG8uX19uZ0xhc3RMaXN0ZW5lckZuX189aSxoPSExO2Vsc2V7aT1xaShyLGUsaSwhMSk7Y29uc3QgdD1uLmxpc3RlbihwLm5hbWV8fGYscyxpKTtjLnB1c2goaSx0KSx1JiZ1LnB1c2gocyxtLGcsZysxKX19ZWxzZSBpPXFpKHIsZSxpLCEwKSxmLmFkZEV2ZW50TGlzdGVuZXIocyxpLG8pLGMucHVzaChpKSx1JiZ1LnB1c2gocyxtLGcsbyl9Y29uc3QgZD1yLm91dHB1dHM7bGV0IHA7aWYoaCYmbnVsbCE9PWQmJihwPWRbc10pKXtjb25zdCB0PXAubGVuZ3RoO2lmKHQpZm9yKGxldCBuPTA7bjx0O24rPTIpe2NvbnN0IHQ9ZVtwW25dXVtwW24rMV1dLnN1YnNjcmliZShpKSxvPWMubGVuZ3RoO2MucHVzaChpLHQpLHUmJnUucHVzaChzLHIuaW5kZXgsbywtKG8rMSkpfX19KGkscyxzWzExXSxvLHQsZSxuLHIpLCRpfWZ1bmN0aW9uIHppKHQsZSxuKXt0cnl7cmV0dXJuITEhPT1lKG4pfWNhdGNoKHIpe3JldHVybiB4cyh0LHIpLCExfX1mdW5jdGlvbiBxaSh0LGUsbixyKXtyZXR1cm4gZnVuY3Rpb24gcyhpKXtpZihpPT09RnVuY3Rpb24pcmV0dXJuIG47Y29uc3Qgbz0yJnQuZmxhZ3M/cWUodC5pbmRleCxlKTplOzA9PSgzMiZlWzJdKSYmX3Mobyk7bGV0IGE9emkoZSxuLGkpLGw9cy5fX25nTmV4dExpc3RlbmVyRm5fXztmb3IoO2w7KWE9emkoZSxsLGkpJiZhLGw9bC5fX25nTmV4dExpc3RlbmVyRm5fXztyZXR1cm4gciYmITE9PT1hJiYoaS5wcmV2ZW50RGVmYXVsdCgpLGkucmV0dXJuVmFsdWU9ITEpLGF9fWZ1bmN0aW9uIFdpKHQ9MSl7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybihKZS5sRnJhbWUuY29udGV4dExWaWV3PWZ1bmN0aW9uKHQsZSl7Zm9yKDt0PjA7KWU9ZVsxNV0sdC0tO3JldHVybiBlfSh0LEplLmxGcmFtZS5jb250ZXh0TFZpZXcpKVs4XX0odCl9ZnVuY3Rpb24gWmkodCxlKXtsZXQgbj1udWxsO2NvbnN0IHI9ZnVuY3Rpb24odCl7Y29uc3QgZT10LmF0dHJzO2lmKG51bGwhPWUpe2NvbnN0IHQ9ZS5pbmRleE9mKDUpO2lmKDA9PSgxJnQpKXJldHVybiBlW3QrMV19cmV0dXJuIG51bGx9KHQpO2ZvcihsZXQgcz0wO3M8ZS5sZW5ndGg7cysrKXtjb25zdCBpPWVbc107aWYoIioiIT09aSl7aWYobnVsbD09PXI/eHIodCxpLCEwKTprcihyLGkpKXJldHVybiBzfWVsc2Ugbj1zfXJldHVybiBufWZ1bmN0aW9uIEdpKHQpe2NvbnN0IGU9dG4oKVsxNl1bNl07aWYoIWUucHJvamVjdGlvbil7Y29uc3Qgbj1lLnByb2plY3Rpb249cmUodD90Lmxlbmd0aDoxLG51bGwpLHI9bi5zbGljZSgpO2xldCBzPWUuY2hpbGQ7Zm9yKDtudWxsIT09czspe2NvbnN0IGU9dD9aaShzLHQpOjA7bnVsbCE9PWUmJihyW2VdP3JbZV0ucHJvamVjdGlvbk5leHQ9czpuW2VdPXMscltlXT1zKSxzPXMubmV4dH19fWZ1bmN0aW9uIEtpKHQsZT0wLG4pe2NvbnN0IHI9dG4oKSxzPWVuKCksaT1acihzLHQsMSxudWxsLG58fG51bGwpO251bGw9PT1pLnByb2plY3Rpb24mJihpLnByb2plY3Rpb249ZSksYW4oKSxmdW5jdGlvbih0LGUsbil7JHMoZVsxMV0sMCxlLG4sUnModCxuLGUpLEJzKG4ucGFyZW50fHxlWzZdLGUpKX0ocyxyLGkpfWNvbnN0IFFpPVtdO2Z1bmN0aW9uIFlpKHQsZSxuLHIscyl7Y29uc3QgaT10W24rMV0sbz1udWxsPT09ZTtsZXQgYT1yP0JyKGkpOlVyKGkpLGw9ITE7Zm9yKDswIT09YSYmKCExPT09bHx8byk7KXtjb25zdCBuPXRbYSsxXTtKaSh0W2FdLGUpJiYobD0hMCx0W2ErMV09cj8kcihuKTpMcihuKSksYT1yP0JyKG4pOlVyKG4pfWwmJih0W24rMV09cj9McihpKTokcihpKSl9ZnVuY3Rpb24gSmkodCxlKXtyZXR1cm4gbnVsbD09PXR8fG51bGw9PWV8fChBcnJheS5pc0FycmF5KHQpP3RbMV06dCk9PT1lfHwhKCFBcnJheS5pc0FycmF5KHQpfHwic3RyaW5nIiE9dHlwZW9mIGUpJiZvZSh0LGUpPj0wfWNvbnN0IFhpPXt0ZXh0RW5kOjAsa2V5OjAsa2V5RW5kOjAsdmFsdWU6MCx2YWx1ZUVuZDowfTtmdW5jdGlvbiB0byh0KXtyZXR1cm4gdC5zdWJzdHJpbmcoWGkua2V5LFhpLmtleUVuZCl9ZnVuY3Rpb24gZW8odCxlKXtjb25zdCBuPVhpLnRleHRFbmQ7cmV0dXJuIG49PT1lPy0xOihlPVhpLmtleUVuZD1mdW5jdGlvbih0LGUsbil7Zm9yKDtlPG4mJnQuY2hhckNvZGVBdChlKT4zMjspZSsrO3JldHVybiBlfSh0LFhpLmtleT1lLG4pLG5vKHQsZSxuKSl9ZnVuY3Rpb24gbm8odCxlLG4pe2Zvcig7ZTxuJiZ0LmNoYXJDb2RlQXQoZSk8PTMyOyllKys7cmV0dXJuIGV9ZnVuY3Rpb24gcm8odCxlKXtyZXR1cm4gZnVuY3Rpb24odCxlLG4scil7Y29uc3Qgcz10bigpLGk9ZW4oKSxvPWhuKDIpO2kuZmlyc3RVcGRhdGVQYXNzJiZhbyhpLHQsbyx0cnVlKSxlIT09T3ImJkZpKHMsbyxlKSYmY28oaSxpLmRhdGFbRG4oKStEZV0scyxzWzExXSx0LHNbbysxXT1mdW5jdGlvbih0LGUpe3JldHVybiBudWxsPT10fHwib2JqZWN0Ij09dHlwZW9mIHQmJih0PWJ0KGZyKHQpKSksdH0oZSksdHJ1ZSxvKX0odCxlKSxyb31mdW5jdGlvbiBzbyh0LGUpe2ZvcihsZXQgbj1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24odCl7WGkua2V5PTAsWGkua2V5RW5kPTAsWGkudmFsdWU9MCxYaS52YWx1ZUVuZD0wLFhpLnRleHRFbmQ9dC5sZW5ndGh9KHQpLGVvKHQsbm8odCwwLFhpLnRleHRFbmQpKX0oZSk7bj49MDtuPWVvKGUsbikpc2UodCx0byhlKSwhMCl9ZnVuY3Rpb24gaW8odCxlLG4scil7Y29uc3Qgcz1lbigpLGk9aG4oMik7cy5maXJzdFVwZGF0ZVBhc3MmJmFvKHMsbnVsbCxpLHIpO2NvbnN0IG89dG4oKTtpZihuIT09T3ImJkZpKG8saSxuKSl7Y29uc3QgYT1zLmRhdGFbRG4oKStEZV07aWYoZm8oYSxyKSYmIW9vKHMsaSkpe2xldCB0PXI/YS5jbGFzc2VzV2l0aG91dEhvc3Q6YS5zdHlsZXNXaXRob3V0SG9zdDtudWxsIT09dCYmKG49d3QodCxufHwiIikpLGppKHMsYSxvLG4scil9ZWxzZSFmdW5jdGlvbih0LGUsbixyLHMsaSxvLGEpe3M9PT1PciYmKHM9UWkpO2xldCBsPTAsdT0wLGM9MDxzLmxlbmd0aD9zWzBdOm51bGwsaD0wPGkubGVuZ3RoP2lbMF06bnVsbDtmb3IoO251bGwhPT1jfHxudWxsIT09aDspe2NvbnN0IGQ9bDxzLmxlbmd0aD9zW2wrMV06dm9pZCAwLHA9dTxpLmxlbmd0aD9pW3UrMV06dm9pZCAwO2xldCBmPW51bGwsZz12b2lkIDA7Yz09PWg/KGwrPTIsdSs9MixkIT09cCYmKGY9aCxnPXApKTpudWxsPT09aHx8bnVsbCE9PWMmJmM8aD8obCs9MixmPWMpOih1Kz0yLGY9aCxnPXApLG51bGwhPT1mJiZjbyh0LGUsbixyLGYsZyxvLGEpLGM9bDxzLmxlbmd0aD9zW2xdOm51bGwsaD11PGkubGVuZ3RoP2lbdV06bnVsbH19KHMsYSxvLG9bMTFdLG9baSsxXSxvW2krMV09ZnVuY3Rpb24odCxlLG4pe2lmKG51bGw9PW58fCIiPT09bilyZXR1cm4gUWk7Y29uc3Qgcj1bXSxzPWZyKG4pO2lmKEFycmF5LmlzQXJyYXkocykpZm9yKGxldCBpPTA7aTxzLmxlbmd0aDtpKyspdChyLHNbaV0sITApO2Vsc2UgaWYoIm9iamVjdCI9PXR5cGVvZiBzKWZvcihjb25zdCBpIGluIHMpcy5oYXNPd25Qcm9wZXJ0eShpKSYmdChyLGksc1tpXSk7ZWxzZSJzdHJpbmciPT10eXBlb2YgcyYmZShyLHMpO3JldHVybiByfSh0LGUsbikscixpKX19ZnVuY3Rpb24gb28odCxlKXtyZXR1cm4gZT49dC5leHBhbmRvU3RhcnRJbmRleH1mdW5jdGlvbiBhbyh0LGUsbixyKXtjb25zdCBzPXQuZGF0YTtpZihudWxsPT09c1tuKzFdKXtjb25zdCBpPXNbRG4oKStEZV0sbz1vbyh0LG4pO2ZvKGkscikmJm51bGw9PT1lJiYhbyYmKGU9ITEpLGU9ZnVuY3Rpb24odCxlLG4scil7Y29uc3Qgcz1mdW5jdGlvbih0KXtjb25zdCBlPUplLmxGcmFtZS5jdXJyZW50RGlyZWN0aXZlSW5kZXg7cmV0dXJuLTE9PT1lP251bGw6dFtlXX0odCk7bGV0IGk9cj9lLnJlc2lkdWFsQ2xhc3NlczplLnJlc2lkdWFsU3R5bGVzO2lmKG51bGw9PT1zKTA9PT0ocj9lLmNsYXNzQmluZGluZ3M6ZS5zdHlsZUJpbmRpbmdzKSYmKG49dW8obj1sbyhudWxsLHQsZSxuLHIpLGUuYXR0cnMsciksaT1udWxsKTtlbHNle2NvbnN0IG89ZS5kaXJlY3RpdmVTdHlsaW5nTGFzdDtpZigtMT09PW98fHRbb10hPT1zKWlmKG49bG8ocyx0LGUsbixyKSxudWxsPT09aSl7bGV0IG49ZnVuY3Rpb24odCxlLG4pe2NvbnN0IHI9bj9lLmNsYXNzQmluZGluZ3M6ZS5zdHlsZUJpbmRpbmdzO2lmKDAhPT1VcihyKSlyZXR1cm4gdFtCcihyKV19KHQsZSxyKTt2b2lkIDAhPT1uJiZBcnJheS5pc0FycmF5KG4pJiYobj1sbyhudWxsLHQsZSxuWzFdLHIpLG49dW8obixlLmF0dHJzLHIpLGZ1bmN0aW9uKHQsZSxuLHIpe3RbQnIobj9lLmNsYXNzQmluZGluZ3M6ZS5zdHlsZUJpbmRpbmdzKV09cn0odCxlLHIsbikpfWVsc2UgaT1mdW5jdGlvbih0LGUsbil7bGV0IHI9dm9pZCAwO2NvbnN0IHM9ZS5kaXJlY3RpdmVFbmQ7Zm9yKGxldCBpPTErZS5kaXJlY3RpdmVTdHlsaW5nTGFzdDtpPHM7aSsrKXI9dW8ocix0W2ldLmhvc3RBdHRycyxuKTtyZXR1cm4gdW8ocixlLmF0dHJzLG4pfSh0LGUscil9cmV0dXJuIHZvaWQgMCE9PWkmJihyP2UucmVzaWR1YWxDbGFzc2VzPWk6ZS5yZXNpZHVhbFN0eWxlcz1pKSxufShzLGksZSxyKSxmdW5jdGlvbih0LGUsbixyLHMsaSl7bGV0IG89aT9lLmNsYXNzQmluZGluZ3M6ZS5zdHlsZUJpbmRpbmdzLGE9QnIobyksbD1VcihvKTt0W3JdPW47bGV0IHUsYz0hMTtpZihBcnJheS5pc0FycmF5KG4pKXtjb25zdCB0PW47dT10WzFdLChudWxsPT09dXx8b2UodCx1KT4wKSYmKGM9ITApfWVsc2UgdT1uO2lmKHMpaWYoMCE9PWwpe2NvbnN0IGU9QnIodFthKzFdKTt0W3IrMV09VnIoZSxhKSwwIT09ZSYmKHRbZSsxXT1Icih0W2UrMV0scikpLHRbYSsxXT0xMzEwNzEmdFthKzFdfHI8PDE3fWVsc2UgdFtyKzFdPVZyKGEsMCksMCE9PWEmJih0W2ErMV09SHIodFthKzFdLHIpKSxhPXI7ZWxzZSB0W3IrMV09VnIobCwwKSwwPT09YT9hPXI6dFtsKzFdPUhyKHRbbCsxXSxyKSxsPXI7YyYmKHRbcisxXT1Mcih0W3IrMV0pKSxZaSh0LHUsciwhMCksWWkodCx1LHIsITEpLGZ1bmN0aW9uKHQsZSxuLHIscyl7Y29uc3QgaT1zP3QucmVzaWR1YWxDbGFzc2VzOnQucmVzaWR1YWxTdHlsZXM7bnVsbCE9aSYmInN0cmluZyI9PXR5cGVvZiBlJiZvZShpLGUpPj0wJiYobltyKzFdPSRyKG5bcisxXSkpfShlLHUsdCxyLGkpLG89VnIoYSxsKSxpP2UuY2xhc3NCaW5kaW5ncz1vOmUuc3R5bGVCaW5kaW5ncz1vfShzLGksZSxuLG8scil9fWZ1bmN0aW9uIGxvKHQsZSxuLHIscyl7bGV0IGk9bnVsbDtjb25zdCBvPW4uZGlyZWN0aXZlRW5kO2xldCBhPW4uZGlyZWN0aXZlU3R5bGluZ0xhc3Q7Zm9yKC0xPT09YT9hPW4uZGlyZWN0aXZlU3RhcnQ6YSsrO2E8byYmKGk9ZVthXSxyPXVvKHIsaS5ob3N0QXR0cnMscyksaSE9PXQpOylhKys7cmV0dXJuIG51bGwhPT10JiYobi5kaXJlY3RpdmVTdHlsaW5nTGFzdD1hKSxyfWZ1bmN0aW9uIHVvKHQsZSxuKXtjb25zdCByPW4/MToyO2xldCBzPS0xO2lmKG51bGwhPT1lKWZvcihsZXQgaT0wO2k8ZS5sZW5ndGg7aSsrKXtjb25zdCBvPWVbaV07Im51bWJlciI9PXR5cGVvZiBvP3M9bzpzPT09ciYmKEFycmF5LmlzQXJyYXkodCl8fCh0PXZvaWQgMD09PXQ/W106WyIiLHRdKSxzZSh0LG8sISFufHxlWysraV0pKX1yZXR1cm4gdm9pZCAwPT09dD9udWxsOnR9ZnVuY3Rpb24gY28odCxlLG4scixzLGksbyxhKXtpZigyIT09ZS50eXBlKXJldHVybjtjb25zdCBsPXQuZGF0YSx1PWxbYSsxXTtwbygxPT0oMSZ1KT9obyhsLGUsbixzLFVyKHUpLG8pOnZvaWQgMCl8fChwbyhpKXx8Mj09KDImdSkmJihpPWhvKGwsbnVsbCxuLHMsYSxvKSksZnVuY3Rpb24odCxlLG4scixzKXtjb25zdCBpPUJlKHQpO2lmKGUpcz9pP3QuYWRkQ2xhc3MobixyKTpuLmNsYXNzTGlzdC5hZGQocik6aT90LnJlbW92ZUNsYXNzKG4scik6bi5jbGFzc0xpc3QucmVtb3ZlKHIpO2Vsc2V7Y29uc3QgZT0tMT09ci5pbmRleE9mKCItIik/dm9pZCAwOjI7bnVsbD09cz9pP3QucmVtb3ZlU3R5bGUobixyLGUpOm4uc3R5bGUucmVtb3ZlUHJvcGVydHkocik6aT90LnNldFN0eWxlKG4scixzLGUpOm4uc3R5bGUuc2V0UHJvcGVydHkocixzKX19KHIsbyxIZShEbigpLG4pLHMsaSkpfWZ1bmN0aW9uIGhvKHQsZSxuLHIscyxpKXtjb25zdCBvPW51bGw9PT1lO2xldCBhPXZvaWQgMDtmb3IoO3M+MDspe2NvbnN0IGU9dFtzXSxpPUFycmF5LmlzQXJyYXkoZSksbD1pP2VbMV06ZSx1PW51bGw9PT1sO2xldCBjPW5bcysxXTtjPT09T3ImJihjPXU/UWk6dm9pZCAwKTtsZXQgaD11P2llKGMscik6bD09PXI/Yzp2b2lkIDA7aWYoaSYmIXBvKGgpJiYoaD1pZShlLHIpKSxwbyhoKSYmKGE9aCxvKSlyZXR1cm4gYTtjb25zdCBkPXRbcysxXTtzPW8/QnIoZCk6VXIoZCl9aWYobnVsbCE9PWUpe2xldCB0PWk/ZS5yZXNpZHVhbENsYXNzZXM6ZS5yZXNpZHVhbFN0eWxlcztudWxsIT10JiYoYT1pZSh0LHIpKX1yZXR1cm4gYX1mdW5jdGlvbiBwbyh0KXtyZXR1cm4gdm9pZCAwIT09dH1mdW5jdGlvbiBmbyh0LGUpe3JldHVybiAwIT0odC5mbGFncyYoZT8xNjozMikpfWZ1bmN0aW9uIGdvKHQsZT0iIil7Y29uc3Qgbj10bigpLHI9ZW4oKSxzPXQrRGUsaT1yLmZpcnN0Q3JlYXRlUGFzcz9acihyLHQsMixudWxsLG51bGwpOnIuZGF0YVtzXSxvPW5bc109ZnVuY3Rpb24odCxlKXtyZXR1cm4gQmUoZSk/ZS5jcmVhdGVUZXh0KHQpOmUuY3JlYXRlVGV4dE5vZGUodCl9KGUsblsxMV0pO0xzKHIsbixvLGkpLHNuKGksITEpfWZ1bmN0aW9uIG1vKHQpe3JldHVybiB5bygiIix0LCIiKSxtb31mdW5jdGlvbiB5byh0LGUsbil7Y29uc3Qgcj10bigpLHM9UGkocix0LGUsbik7cmV0dXJuIHMhPT1PciYmZnVuY3Rpb24odCxlLG4pe2NvbnN0IHI9SGUoZSx0KSxzPXRbMTFdO0JlKHMpP3Muc2V0VmFsdWUocixuKTpyLnRleHRDb250ZW50PW59KHIsRG4oKSxzKSx5b31mdW5jdGlvbiB2byh0LGUsbil7aW8oc2Usc28sUGkodG4oKSx0LGUsbiksITApfWZ1bmN0aW9uIGJvKHQsZSxuLHIscyl7aWYodD1EdCh0KSxBcnJheS5pc0FycmF5KHQpKWZvcihsZXQgaT0wO2k8dC5sZW5ndGg7aSsrKWJvKHRbaV0sZSxuLHIscyk7ZWxzZXtjb25zdCBpPWVuKCksbz10bigpO2xldCBhPWdpKHQpP3Q6RHQodC5wcm92aWRlKSxsPWRpKHQpO2NvbnN0IHU9cm4oKSxjPTEwNDg1NzUmdS5wcm92aWRlckluZGV4ZXMsaD11LmRpcmVjdGl2ZVN0YXJ0LGQ9dS5wcm92aWRlckluZGV4ZXM+PjIwO2lmKGdpKHQpfHwhdC5tdWx0aSl7Y29uc3Qgcj1uZXcgSW4obCxzLFJpKSxwPUNvKGEsZSxzP2M6YytkLGgpOy0xPT09cD8oWG4oS24odSxvKSxpLGEpLHdvKGksdCxlLmxlbmd0aCksZS5wdXNoKGEpLHUuZGlyZWN0aXZlU3RhcnQrKyx1LmRpcmVjdGl2ZUVuZCsrLHMmJih1LnByb3ZpZGVySW5kZXhlcys9MTA0ODU3Niksbi5wdXNoKHIpLG8ucHVzaChyKSk6KG5bcF09cixvW3BdPXIpfWVsc2V7Y29uc3QgcD1DbyhhLGUsYytkLGgpLGY9Q28oYSxlLGMsYytkKSxnPXA+PTAmJm5bcF0sbT1mPj0wJiZuW2ZdO2lmKHMmJiFtfHwhcyYmIWcpe1huKEtuKHUsbyksaSxhKTtjb25zdCBjPWZ1bmN0aW9uKHQsZSxuLHIscyl7Y29uc3QgaT1uZXcgSW4odCxuLFJpKTtyZXR1cm4gaS5tdWx0aT1bXSxpLmluZGV4PWUsaS5jb21wb25lbnRQcm92aWRlcnM9MCxfbyhpLHMsciYmIW4pLGl9KHM/RW86RG8sbi5sZW5ndGgscyxyLGwpOyFzJiZtJiYobltmXS5wcm92aWRlckZhY3Rvcnk9Yyksd28oaSx0LGUubGVuZ3RoLDApLGUucHVzaChhKSx1LmRpcmVjdGl2ZVN0YXJ0KyssdS5kaXJlY3RpdmVFbmQrKyxzJiYodS5wcm92aWRlckluZGV4ZXMrPTEwNDg1NzYpLG4ucHVzaChjKSxvLnB1c2goYyl9ZWxzZSB3byhpLHQscD4tMT9wOmYsX28obltzP2Y6cF0sbCwhcyYmcikpOyFzJiZyJiZtJiZuW2ZdLmNvbXBvbmVudFByb3ZpZGVycysrfX19ZnVuY3Rpb24gd28odCxlLG4scil7Y29uc3Qgcz1naShlKTtpZihzfHxlLnVzZUNsYXNzKXtjb25zdCBpPShlLnVzZUNsYXNzfHxlKS5wcm90b3R5cGUubmdPbkRlc3Ryb3k7aWYoaSl7Y29uc3Qgbz10LmRlc3Ryb3lIb29rc3x8KHQuZGVzdHJveUhvb2tzPVtdKTtpZighcyYmZS5tdWx0aSl7Y29uc3QgdD1vLmluZGV4T2Yobik7LTE9PT10P28ucHVzaChuLFtyLGldKTpvW3QrMV0ucHVzaChyLGkpfWVsc2Ugby5wdXNoKG4saSl9fX1mdW5jdGlvbiBfbyh0LGUsbil7cmV0dXJuIG4mJnQuY29tcG9uZW50UHJvdmlkZXJzKyssdC5tdWx0aS5wdXNoKGUpLTF9ZnVuY3Rpb24gQ28odCxlLG4scil7Zm9yKGxldCBzPW47czxyO3MrKylpZihlW3NdPT09dClyZXR1cm4gcztyZXR1cm4tMX1mdW5jdGlvbiBEbyh0LGUsbixyKXtyZXR1cm4gQW8odGhpcy5tdWx0aSxbXSl9ZnVuY3Rpb24gRW8odCxlLG4scil7Y29uc3Qgcz10aGlzLm11bHRpO2xldCBpO2lmKHRoaXMucHJvdmlkZXJGYWN0b3J5KXtjb25zdCB0PXRoaXMucHJvdmlkZXJGYWN0b3J5LmNvbXBvbmVudFByb3ZpZGVycyxlPXNyKG4sblsxXSx0aGlzLnByb3ZpZGVyRmFjdG9yeS5pbmRleCxyKTtpPWUuc2xpY2UoMCx0KSxBbyhzLGkpO2ZvcihsZXQgbj10O248ZS5sZW5ndGg7bisrKWkucHVzaChlW25dKX1lbHNlIGk9W10sQW8ocyxpKTtyZXR1cm4gaX1mdW5jdGlvbiBBbyh0LGUpe2ZvcihsZXQgbj0wO248dC5sZW5ndGg7bisrKWUucHVzaCgoMCx0W25dKSgpKTtyZXR1cm4gZX1mdW5jdGlvbiBTbyh0LGU9W10pe3JldHVybiBuPT57bi5wcm92aWRlcnNSZXNvbHZlcj0obixyKT0+ZnVuY3Rpb24odCxlLG4pe2NvbnN0IHI9ZW4oKTtpZihyLmZpcnN0Q3JlYXRlUGFzcyl7Y29uc3Qgcz1GZSh0KTtibyhuLHIuZGF0YSxyLmJsdWVwcmludCxzLCEwKSxibyhlLHIuZGF0YSxyLmJsdWVwcmludCxzLCExKX19KG4scj9yKHQpOnQsZSl9fWNsYXNzIHhve31jbGFzcyBrb3tyZXNvbHZlQ29tcG9uZW50RmFjdG9yeSh0KXt0aHJvdyBmdW5jdGlvbih0KXtjb25zdCBlPUVycm9yKGBObyBjb21wb25lbnQgZmFjdG9yeSBmb3VuZCBmb3IgJHtidCh0KX0uIERpZCB5b3UgYWRkIGl0IHRvIEBOZ01vZHVsZS5lbnRyeUNvbXBvbmVudHM/YCk7cmV0dXJuIGUubmdDb21wb25lbnQ9dCxlfSh0KX19bGV0IFRvPSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Lk5VTEw9bmV3IGtvLHR9KSgpLEZvPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IodCl7dGhpcy5uYXRpdmVFbGVtZW50PXR9fXJldHVybiB0Ll9fTkdfRUxFTUVOVF9JRF9fPSgpPT5Pbyh0KSx0fSkoKTtjb25zdCBPbz1mdW5jdGlvbih0KXtyZXR1cm4gWXModCxybigpLHRuKCkpfTtjbGFzcyBQb3t9dmFyIElvPWZ1bmN0aW9uKHQpe3JldHVybiB0W3QuSW1wb3J0YW50PTFdPSJJbXBvcnRhbnQiLHRbdC5EYXNoQ2FzZT0yXT0iRGFzaENhc2UiLHR9KHt9KTtsZXQgUm89KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuX19OR19FTEVNRU5UX0lEX189KCk9Pk1vKCksdH0pKCk7Y29uc3QgTW89ZnVuY3Rpb24oKXtjb25zdCB0PXRuKCksZT1xZShybigpLmluZGV4LHQpO3JldHVybiBmdW5jdGlvbih0KXtjb25zdCBlPXRbMTFdO2lmKEJlKGUpKXJldHVybiBlO3Rocm93IG5ldyBFcnJvcigiQ2Fubm90IGluamVjdCBSZW5kZXJlcjIgd2hlbiB0aGUgYXBwbGljYXRpb24gdXNlcyBSZW5kZXJlcjMhIil9KEFlKGUpP2U6dCl9O2xldCBqbz0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVwcm92PXV0KHt0b2tlbjp0LHByb3ZpZGVkSW46InJvb3QiLGZhY3Rvcnk6KCk9Pm51bGx9KSx0fSkoKTtjbGFzcyBOb3tjb25zdHJ1Y3Rvcih0KXt0aGlzLmZ1bGw9dCx0aGlzLm1ham9yPXQuc3BsaXQoIi4iKVswXSx0aGlzLm1pbm9yPXQuc3BsaXQoIi4iKVsxXSx0aGlzLnBhdGNoPXQuc3BsaXQoIi4iKS5zbGljZSgyKS5qb2luKCIuIil9fWNvbnN0IFZvPW5ldyBObygiMTAuMS42Iik7Y2xhc3MgQm97Y29uc3RydWN0b3IoKXt9c3VwcG9ydHModCl7cmV0dXJuIGtpKHQpfWNyZWF0ZSh0KXtyZXR1cm4gbmV3IFVvKHQpfX1jb25zdCBMbz0odCxlKT0+ZTtjbGFzcyBVb3tjb25zdHJ1Y3Rvcih0KXt0aGlzLmxlbmd0aD0wLHRoaXMuX2xpbmtlZFJlY29yZHM9bnVsbCx0aGlzLl91bmxpbmtlZFJlY29yZHM9bnVsbCx0aGlzLl9wcmV2aW91c0l0SGVhZD1udWxsLHRoaXMuX2l0SGVhZD1udWxsLHRoaXMuX2l0VGFpbD1udWxsLHRoaXMuX2FkZGl0aW9uc0hlYWQ9bnVsbCx0aGlzLl9hZGRpdGlvbnNUYWlsPW51bGwsdGhpcy5fbW92ZXNIZWFkPW51bGwsdGhpcy5fbW92ZXNUYWlsPW51bGwsdGhpcy5fcmVtb3ZhbHNIZWFkPW51bGwsdGhpcy5fcmVtb3ZhbHNUYWlsPW51bGwsdGhpcy5faWRlbnRpdHlDaGFuZ2VzSGVhZD1udWxsLHRoaXMuX2lkZW50aXR5Q2hhbmdlc1RhaWw9bnVsbCx0aGlzLl90cmFja0J5Rm49dHx8TG99Zm9yRWFjaEl0ZW0odCl7bGV0IGU7Zm9yKGU9dGhpcy5faXRIZWFkO251bGwhPT1lO2U9ZS5fbmV4dCl0KGUpfWZvckVhY2hPcGVyYXRpb24odCl7bGV0IGU9dGhpcy5faXRIZWFkLG49dGhpcy5fcmVtb3ZhbHNIZWFkLHI9MCxzPW51bGw7Zm9yKDtlfHxuOyl7Y29uc3QgaT0hbnx8ZSYmZS5jdXJyZW50SW5kZXg8cW8obixyLHMpP2U6bixvPXFvKGkscixzKSxhPWkuY3VycmVudEluZGV4O2lmKGk9PT1uKXItLSxuPW4uX25leHRSZW1vdmVkO2Vsc2UgaWYoZT1lLl9uZXh0LG51bGw9PWkucHJldmlvdXNJbmRleClyKys7ZWxzZXtzfHwocz1bXSk7Y29uc3QgdD1vLXIsZT1hLXI7aWYodCE9ZSl7Zm9yKGxldCBuPTA7bjx0O24rKyl7Y29uc3Qgcj1uPHMubGVuZ3RoP3Nbbl06c1tuXT0wLGk9cituO2U8PWkmJmk8dCYmKHNbbl09cisxKX1zW2kucHJldmlvdXNJbmRleF09ZS10fX1vIT09YSYmdChpLG8sYSl9fWZvckVhY2hQcmV2aW91c0l0ZW0odCl7bGV0IGU7Zm9yKGU9dGhpcy5fcHJldmlvdXNJdEhlYWQ7bnVsbCE9PWU7ZT1lLl9uZXh0UHJldmlvdXMpdChlKX1mb3JFYWNoQWRkZWRJdGVtKHQpe2xldCBlO2ZvcihlPXRoaXMuX2FkZGl0aW9uc0hlYWQ7bnVsbCE9PWU7ZT1lLl9uZXh0QWRkZWQpdChlKX1mb3JFYWNoTW92ZWRJdGVtKHQpe2xldCBlO2ZvcihlPXRoaXMuX21vdmVzSGVhZDtudWxsIT09ZTtlPWUuX25leHRNb3ZlZCl0KGUpfWZvckVhY2hSZW1vdmVkSXRlbSh0KXtsZXQgZTtmb3IoZT10aGlzLl9yZW1vdmFsc0hlYWQ7bnVsbCE9PWU7ZT1lLl9uZXh0UmVtb3ZlZCl0KGUpfWZvckVhY2hJZGVudGl0eUNoYW5nZSh0KXtsZXQgZTtmb3IoZT10aGlzLl9pZGVudGl0eUNoYW5nZXNIZWFkO251bGwhPT1lO2U9ZS5fbmV4dElkZW50aXR5Q2hhbmdlKXQoZSl9ZGlmZih0KXtpZihudWxsPT10JiYodD1bXSksIWtpKHQpKXRocm93IG5ldyBFcnJvcihgRXJyb3IgdHJ5aW5nIHRvIGRpZmYgJyR7YnQodCl9Jy4gT25seSBhcnJheXMgYW5kIGl0ZXJhYmxlcyBhcmUgYWxsb3dlZGApO3JldHVybiB0aGlzLmNoZWNrKHQpP3RoaXM6bnVsbH1vbkRlc3Ryb3koKXt9Y2hlY2sodCl7dGhpcy5fcmVzZXQoKTtsZXQgZSxuLHIscz10aGlzLl9pdEhlYWQsaT0hMTtpZihBcnJheS5pc0FycmF5KHQpKXt0aGlzLmxlbmd0aD10Lmxlbmd0aDtmb3IobGV0IGU9MDtlPHRoaXMubGVuZ3RoO2UrKyluPXRbZV0scj10aGlzLl90cmFja0J5Rm4oZSxuKSxudWxsIT09cyYmT2JqZWN0LmlzKHMudHJhY2tCeUlkLHIpPyhpJiYocz10aGlzLl92ZXJpZnlSZWluc2VydGlvbihzLG4scixlKSksT2JqZWN0LmlzKHMuaXRlbSxuKXx8dGhpcy5fYWRkSWRlbnRpdHlDaGFuZ2UocyxuKSk6KHM9dGhpcy5fbWlzbWF0Y2gocyxuLHIsZSksaT0hMCkscz1zLl9uZXh0fWVsc2UgZT0wLGZ1bmN0aW9uKHQsZSl7aWYoQXJyYXkuaXNBcnJheSh0KSlmb3IobGV0IG49MDtuPHQubGVuZ3RoO24rKyllKHRbbl0pO2Vsc2V7Y29uc3Qgbj10W3hpKCldKCk7bGV0IHI7Zm9yKDshKHI9bi5uZXh0KCkpLmRvbmU7KWUoci52YWx1ZSl9fSh0LHQ9PntyPXRoaXMuX3RyYWNrQnlGbihlLHQpLG51bGwhPT1zJiZPYmplY3QuaXMocy50cmFja0J5SWQscik/KGkmJihzPXRoaXMuX3ZlcmlmeVJlaW5zZXJ0aW9uKHMsdCxyLGUpKSxPYmplY3QuaXMocy5pdGVtLHQpfHx0aGlzLl9hZGRJZGVudGl0eUNoYW5nZShzLHQpKToocz10aGlzLl9taXNtYXRjaChzLHQscixlKSxpPSEwKSxzPXMuX25leHQsZSsrfSksdGhpcy5sZW5ndGg9ZTtyZXR1cm4gdGhpcy5fdHJ1bmNhdGUocyksdGhpcy5jb2xsZWN0aW9uPXQsdGhpcy5pc0RpcnR5fWdldCBpc0RpcnR5KCl7cmV0dXJuIG51bGwhPT10aGlzLl9hZGRpdGlvbnNIZWFkfHxudWxsIT09dGhpcy5fbW92ZXNIZWFkfHxudWxsIT09dGhpcy5fcmVtb3ZhbHNIZWFkfHxudWxsIT09dGhpcy5faWRlbnRpdHlDaGFuZ2VzSGVhZH1fcmVzZXQoKXtpZih0aGlzLmlzRGlydHkpe2xldCB0O2Zvcih0PXRoaXMuX3ByZXZpb3VzSXRIZWFkPXRoaXMuX2l0SGVhZDtudWxsIT09dDt0PXQuX25leHQpdC5fbmV4dFByZXZpb3VzPXQuX25leHQ7Zm9yKHQ9dGhpcy5fYWRkaXRpb25zSGVhZDtudWxsIT09dDt0PXQuX25leHRBZGRlZCl0LnByZXZpb3VzSW5kZXg9dC5jdXJyZW50SW5kZXg7Zm9yKHRoaXMuX2FkZGl0aW9uc0hlYWQ9dGhpcy5fYWRkaXRpb25zVGFpbD1udWxsLHQ9dGhpcy5fbW92ZXNIZWFkO251bGwhPT10O3Q9dC5fbmV4dE1vdmVkKXQucHJldmlvdXNJbmRleD10LmN1cnJlbnRJbmRleDt0aGlzLl9tb3Zlc0hlYWQ9dGhpcy5fbW92ZXNUYWlsPW51bGwsdGhpcy5fcmVtb3ZhbHNIZWFkPXRoaXMuX3JlbW92YWxzVGFpbD1udWxsLHRoaXMuX2lkZW50aXR5Q2hhbmdlc0hlYWQ9dGhpcy5faWRlbnRpdHlDaGFuZ2VzVGFpbD1udWxsfX1fbWlzbWF0Y2godCxlLG4scil7bGV0IHM7cmV0dXJuIG51bGw9PT10P3M9dGhpcy5faXRUYWlsOihzPXQuX3ByZXYsdGhpcy5fcmVtb3ZlKHQpKSxudWxsIT09KHQ9bnVsbD09PXRoaXMuX2xpbmtlZFJlY29yZHM/bnVsbDp0aGlzLl9saW5rZWRSZWNvcmRzLmdldChuLHIpKT8oT2JqZWN0LmlzKHQuaXRlbSxlKXx8dGhpcy5fYWRkSWRlbnRpdHlDaGFuZ2UodCxlKSx0aGlzLl9tb3ZlQWZ0ZXIodCxzLHIpKTpudWxsIT09KHQ9bnVsbD09PXRoaXMuX3VubGlua2VkUmVjb3Jkcz9udWxsOnRoaXMuX3VubGlua2VkUmVjb3Jkcy5nZXQobixudWxsKSk/KE9iamVjdC5pcyh0Lml0ZW0sZSl8fHRoaXMuX2FkZElkZW50aXR5Q2hhbmdlKHQsZSksdGhpcy5fcmVpbnNlcnRBZnRlcih0LHMscikpOnQ9dGhpcy5fYWRkQWZ0ZXIobmV3IEhvKGUsbikscyxyKSx0fV92ZXJpZnlSZWluc2VydGlvbih0LGUsbixyKXtsZXQgcz1udWxsPT09dGhpcy5fdW5saW5rZWRSZWNvcmRzP251bGw6dGhpcy5fdW5saW5rZWRSZWNvcmRzLmdldChuLG51bGwpO3JldHVybiBudWxsIT09cz90PXRoaXMuX3JlaW5zZXJ0QWZ0ZXIocyx0Ll9wcmV2LHIpOnQuY3VycmVudEluZGV4IT1yJiYodC5jdXJyZW50SW5kZXg9cix0aGlzLl9hZGRUb01vdmVzKHQscikpLHR9X3RydW5jYXRlKHQpe2Zvcig7bnVsbCE9PXQ7KXtjb25zdCBlPXQuX25leHQ7dGhpcy5fYWRkVG9SZW1vdmFscyh0aGlzLl91bmxpbmsodCkpLHQ9ZX1udWxsIT09dGhpcy5fdW5saW5rZWRSZWNvcmRzJiZ0aGlzLl91bmxpbmtlZFJlY29yZHMuY2xlYXIoKSxudWxsIT09dGhpcy5fYWRkaXRpb25zVGFpbCYmKHRoaXMuX2FkZGl0aW9uc1RhaWwuX25leHRBZGRlZD1udWxsKSxudWxsIT09dGhpcy5fbW92ZXNUYWlsJiYodGhpcy5fbW92ZXNUYWlsLl9uZXh0TW92ZWQ9bnVsbCksbnVsbCE9PXRoaXMuX2l0VGFpbCYmKHRoaXMuX2l0VGFpbC5fbmV4dD1udWxsKSxudWxsIT09dGhpcy5fcmVtb3ZhbHNUYWlsJiYodGhpcy5fcmVtb3ZhbHNUYWlsLl9uZXh0UmVtb3ZlZD1udWxsKSxudWxsIT09dGhpcy5faWRlbnRpdHlDaGFuZ2VzVGFpbCYmKHRoaXMuX2lkZW50aXR5Q2hhbmdlc1RhaWwuX25leHRJZGVudGl0eUNoYW5nZT1udWxsKX1fcmVpbnNlcnRBZnRlcih0LGUsbil7bnVsbCE9PXRoaXMuX3VubGlua2VkUmVjb3JkcyYmdGhpcy5fdW5saW5rZWRSZWNvcmRzLnJlbW92ZSh0KTtjb25zdCByPXQuX3ByZXZSZW1vdmVkLHM9dC5fbmV4dFJlbW92ZWQ7cmV0dXJuIG51bGw9PT1yP3RoaXMuX3JlbW92YWxzSGVhZD1zOnIuX25leHRSZW1vdmVkPXMsbnVsbD09PXM/dGhpcy5fcmVtb3ZhbHNUYWlsPXI6cy5fcHJldlJlbW92ZWQ9cix0aGlzLl9pbnNlcnRBZnRlcih0LGUsbiksdGhpcy5fYWRkVG9Nb3Zlcyh0LG4pLHR9X21vdmVBZnRlcih0LGUsbil7cmV0dXJuIHRoaXMuX3VubGluayh0KSx0aGlzLl9pbnNlcnRBZnRlcih0LGUsbiksdGhpcy5fYWRkVG9Nb3Zlcyh0LG4pLHR9X2FkZEFmdGVyKHQsZSxuKXtyZXR1cm4gdGhpcy5faW5zZXJ0QWZ0ZXIodCxlLG4pLHRoaXMuX2FkZGl0aW9uc1RhaWw9bnVsbD09PXRoaXMuX2FkZGl0aW9uc1RhaWw/dGhpcy5fYWRkaXRpb25zSGVhZD10OnRoaXMuX2FkZGl0aW9uc1RhaWwuX25leHRBZGRlZD10LHR9X2luc2VydEFmdGVyKHQsZSxuKXtjb25zdCByPW51bGw9PT1lP3RoaXMuX2l0SGVhZDplLl9uZXh0O3JldHVybiB0Ll9uZXh0PXIsdC5fcHJldj1lLG51bGw9PT1yP3RoaXMuX2l0VGFpbD10OnIuX3ByZXY9dCxudWxsPT09ZT90aGlzLl9pdEhlYWQ9dDplLl9uZXh0PXQsbnVsbD09PXRoaXMuX2xpbmtlZFJlY29yZHMmJih0aGlzLl9saW5rZWRSZWNvcmRzPW5ldyB6byksdGhpcy5fbGlua2VkUmVjb3Jkcy5wdXQodCksdC5jdXJyZW50SW5kZXg9bix0fV9yZW1vdmUodCl7cmV0dXJuIHRoaXMuX2FkZFRvUmVtb3ZhbHModGhpcy5fdW5saW5rKHQpKX1fdW5saW5rKHQpe251bGwhPT10aGlzLl9saW5rZWRSZWNvcmRzJiZ0aGlzLl9saW5rZWRSZWNvcmRzLnJlbW92ZSh0KTtjb25zdCBlPXQuX3ByZXYsbj10Ll9uZXh0O3JldHVybiBudWxsPT09ZT90aGlzLl9pdEhlYWQ9bjplLl9uZXh0PW4sbnVsbD09PW4/dGhpcy5faXRUYWlsPWU6bi5fcHJldj1lLHR9X2FkZFRvTW92ZXModCxlKXtyZXR1cm4gdC5wcmV2aW91c0luZGV4PT09ZXx8KHRoaXMuX21vdmVzVGFpbD1udWxsPT09dGhpcy5fbW92ZXNUYWlsP3RoaXMuX21vdmVzSGVhZD10OnRoaXMuX21vdmVzVGFpbC5fbmV4dE1vdmVkPXQpLHR9X2FkZFRvUmVtb3ZhbHModCl7cmV0dXJuIG51bGw9PT10aGlzLl91bmxpbmtlZFJlY29yZHMmJih0aGlzLl91bmxpbmtlZFJlY29yZHM9bmV3IHpvKSx0aGlzLl91bmxpbmtlZFJlY29yZHMucHV0KHQpLHQuY3VycmVudEluZGV4PW51bGwsdC5fbmV4dFJlbW92ZWQ9bnVsbCxudWxsPT09dGhpcy5fcmVtb3ZhbHNUYWlsPyh0aGlzLl9yZW1vdmFsc1RhaWw9dGhpcy5fcmVtb3ZhbHNIZWFkPXQsdC5fcHJldlJlbW92ZWQ9bnVsbCk6KHQuX3ByZXZSZW1vdmVkPXRoaXMuX3JlbW92YWxzVGFpbCx0aGlzLl9yZW1vdmFsc1RhaWw9dGhpcy5fcmVtb3ZhbHNUYWlsLl9uZXh0UmVtb3ZlZD10KSx0fV9hZGRJZGVudGl0eUNoYW5nZSh0LGUpe3JldHVybiB0Lml0ZW09ZSx0aGlzLl9pZGVudGl0eUNoYW5nZXNUYWlsPW51bGw9PT10aGlzLl9pZGVudGl0eUNoYW5nZXNUYWlsP3RoaXMuX2lkZW50aXR5Q2hhbmdlc0hlYWQ9dDp0aGlzLl9pZGVudGl0eUNoYW5nZXNUYWlsLl9uZXh0SWRlbnRpdHlDaGFuZ2U9dCx0fX1jbGFzcyBIb3tjb25zdHJ1Y3Rvcih0LGUpe3RoaXMuaXRlbT10LHRoaXMudHJhY2tCeUlkPWUsdGhpcy5jdXJyZW50SW5kZXg9bnVsbCx0aGlzLnByZXZpb3VzSW5kZXg9bnVsbCx0aGlzLl9uZXh0UHJldmlvdXM9bnVsbCx0aGlzLl9wcmV2PW51bGwsdGhpcy5fbmV4dD1udWxsLHRoaXMuX3ByZXZEdXA9bnVsbCx0aGlzLl9uZXh0RHVwPW51bGwsdGhpcy5fcHJldlJlbW92ZWQ9bnVsbCx0aGlzLl9uZXh0UmVtb3ZlZD1udWxsLHRoaXMuX25leHRBZGRlZD1udWxsLHRoaXMuX25leHRNb3ZlZD1udWxsLHRoaXMuX25leHRJZGVudGl0eUNoYW5nZT1udWxsfX1jbGFzcyAkb3tjb25zdHJ1Y3Rvcigpe3RoaXMuX2hlYWQ9bnVsbCx0aGlzLl90YWlsPW51bGx9YWRkKHQpe251bGw9PT10aGlzLl9oZWFkPyh0aGlzLl9oZWFkPXRoaXMuX3RhaWw9dCx0Ll9uZXh0RHVwPW51bGwsdC5fcHJldkR1cD1udWxsKToodGhpcy5fdGFpbC5fbmV4dER1cD10LHQuX3ByZXZEdXA9dGhpcy5fdGFpbCx0Ll9uZXh0RHVwPW51bGwsdGhpcy5fdGFpbD10KX1nZXQodCxlKXtsZXQgbjtmb3Iobj10aGlzLl9oZWFkO251bGwhPT1uO249bi5fbmV4dER1cClpZigobnVsbD09PWV8fGU8PW4uY3VycmVudEluZGV4KSYmT2JqZWN0LmlzKG4udHJhY2tCeUlkLHQpKXJldHVybiBuO3JldHVybiBudWxsfXJlbW92ZSh0KXtjb25zdCBlPXQuX3ByZXZEdXAsbj10Ll9uZXh0RHVwO3JldHVybiBudWxsPT09ZT90aGlzLl9oZWFkPW46ZS5fbmV4dER1cD1uLG51bGw9PT1uP3RoaXMuX3RhaWw9ZTpuLl9wcmV2RHVwPWUsbnVsbD09PXRoaXMuX2hlYWR9fWNsYXNzIHpve2NvbnN0cnVjdG9yKCl7dGhpcy5tYXA9bmV3IE1hcH1wdXQodCl7Y29uc3QgZT10LnRyYWNrQnlJZDtsZXQgbj10aGlzLm1hcC5nZXQoZSk7bnx8KG49bmV3ICRvLHRoaXMubWFwLnNldChlLG4pKSxuLmFkZCh0KX1nZXQodCxlKXtjb25zdCBuPXRoaXMubWFwLmdldCh0KTtyZXR1cm4gbj9uLmdldCh0LGUpOm51bGx9cmVtb3ZlKHQpe2NvbnN0IGU9dC50cmFja0J5SWQ7cmV0dXJuIHRoaXMubWFwLmdldChlKS5yZW1vdmUodCkmJnRoaXMubWFwLmRlbGV0ZShlKSx0fWdldCBpc0VtcHR5KCl7cmV0dXJuIDA9PT10aGlzLm1hcC5zaXplfWNsZWFyKCl7dGhpcy5tYXAuY2xlYXIoKX19ZnVuY3Rpb24gcW8odCxlLG4pe2NvbnN0IHI9dC5wcmV2aW91c0luZGV4O2lmKG51bGw9PT1yKXJldHVybiByO2xldCBzPTA7cmV0dXJuIG4mJnI8bi5sZW5ndGgmJihzPW5bcl0pLHIrZStzfWNsYXNzIFdve2NvbnN0cnVjdG9yKCl7fXN1cHBvcnRzKHQpe3JldHVybiB0IGluc3RhbmNlb2YgTWFwfHxUaSh0KX1jcmVhdGUoKXtyZXR1cm4gbmV3IFpvfX1jbGFzcyBab3tjb25zdHJ1Y3Rvcigpe3RoaXMuX3JlY29yZHM9bmV3IE1hcCx0aGlzLl9tYXBIZWFkPW51bGwsdGhpcy5fYXBwZW5kQWZ0ZXI9bnVsbCx0aGlzLl9wcmV2aW91c01hcEhlYWQ9bnVsbCx0aGlzLl9jaGFuZ2VzSGVhZD1udWxsLHRoaXMuX2NoYW5nZXNUYWlsPW51bGwsdGhpcy5fYWRkaXRpb25zSGVhZD1udWxsLHRoaXMuX2FkZGl0aW9uc1RhaWw9bnVsbCx0aGlzLl9yZW1vdmFsc0hlYWQ9bnVsbCx0aGlzLl9yZW1vdmFsc1RhaWw9bnVsbH1nZXQgaXNEaXJ0eSgpe3JldHVybiBudWxsIT09dGhpcy5fYWRkaXRpb25zSGVhZHx8bnVsbCE9PXRoaXMuX2NoYW5nZXNIZWFkfHxudWxsIT09dGhpcy5fcmVtb3ZhbHNIZWFkfWZvckVhY2hJdGVtKHQpe2xldCBlO2ZvcihlPXRoaXMuX21hcEhlYWQ7bnVsbCE9PWU7ZT1lLl9uZXh0KXQoZSl9Zm9yRWFjaFByZXZpb3VzSXRlbSh0KXtsZXQgZTtmb3IoZT10aGlzLl9wcmV2aW91c01hcEhlYWQ7bnVsbCE9PWU7ZT1lLl9uZXh0UHJldmlvdXMpdChlKX1mb3JFYWNoQ2hhbmdlZEl0ZW0odCl7bGV0IGU7Zm9yKGU9dGhpcy5fY2hhbmdlc0hlYWQ7bnVsbCE9PWU7ZT1lLl9uZXh0Q2hhbmdlZCl0KGUpfWZvckVhY2hBZGRlZEl0ZW0odCl7bGV0IGU7Zm9yKGU9dGhpcy5fYWRkaXRpb25zSGVhZDtudWxsIT09ZTtlPWUuX25leHRBZGRlZCl0KGUpfWZvckVhY2hSZW1vdmVkSXRlbSh0KXtsZXQgZTtmb3IoZT10aGlzLl9yZW1vdmFsc0hlYWQ7bnVsbCE9PWU7ZT1lLl9uZXh0UmVtb3ZlZCl0KGUpfWRpZmYodCl7aWYodCl7aWYoISh0IGluc3RhbmNlb2YgTWFwfHxUaSh0KSkpdGhyb3cgbmV3IEVycm9yKGBFcnJvciB0cnlpbmcgdG8gZGlmZiAnJHtidCh0KX0nLiBPbmx5IG1hcHMgYW5kIG9iamVjdHMgYXJlIGFsbG93ZWRgKX1lbHNlIHQ9bmV3IE1hcDtyZXR1cm4gdGhpcy5jaGVjayh0KT90aGlzOm51bGx9b25EZXN0cm95KCl7fWNoZWNrKHQpe3RoaXMuX3Jlc2V0KCk7bGV0IGU9dGhpcy5fbWFwSGVhZDtpZih0aGlzLl9hcHBlbmRBZnRlcj1udWxsLHRoaXMuX2ZvckVhY2godCwodCxuKT0+e2lmKGUmJmUua2V5PT09bil0aGlzLl9tYXliZUFkZFRvQ2hhbmdlcyhlLHQpLHRoaXMuX2FwcGVuZEFmdGVyPWUsZT1lLl9uZXh0O2Vsc2V7Y29uc3Qgcj10aGlzLl9nZXRPckNyZWF0ZVJlY29yZEZvcktleShuLHQpO2U9dGhpcy5faW5zZXJ0QmVmb3JlT3JBcHBlbmQoZSxyKX19KSxlKXtlLl9wcmV2JiYoZS5fcHJldi5fbmV4dD1udWxsKSx0aGlzLl9yZW1vdmFsc0hlYWQ9ZTtmb3IobGV0IHQ9ZTtudWxsIT09dDt0PXQuX25leHRSZW1vdmVkKXQ9PT10aGlzLl9tYXBIZWFkJiYodGhpcy5fbWFwSGVhZD1udWxsKSx0aGlzLl9yZWNvcmRzLmRlbGV0ZSh0LmtleSksdC5fbmV4dFJlbW92ZWQ9dC5fbmV4dCx0LnByZXZpb3VzVmFsdWU9dC5jdXJyZW50VmFsdWUsdC5jdXJyZW50VmFsdWU9bnVsbCx0Ll9wcmV2PW51bGwsdC5fbmV4dD1udWxsfXJldHVybiB0aGlzLl9jaGFuZ2VzVGFpbCYmKHRoaXMuX2NoYW5nZXNUYWlsLl9uZXh0Q2hhbmdlZD1udWxsKSx0aGlzLl9hZGRpdGlvbnNUYWlsJiYodGhpcy5fYWRkaXRpb25zVGFpbC5fbmV4dEFkZGVkPW51bGwpLHRoaXMuaXNEaXJ0eX1faW5zZXJ0QmVmb3JlT3JBcHBlbmQodCxlKXtpZih0KXtjb25zdCBuPXQuX3ByZXY7cmV0dXJuIGUuX25leHQ9dCxlLl9wcmV2PW4sdC5fcHJldj1lLG4mJihuLl9uZXh0PWUpLHQ9PT10aGlzLl9tYXBIZWFkJiYodGhpcy5fbWFwSGVhZD1lKSx0aGlzLl9hcHBlbmRBZnRlcj10LHR9cmV0dXJuIHRoaXMuX2FwcGVuZEFmdGVyPyh0aGlzLl9hcHBlbmRBZnRlci5fbmV4dD1lLGUuX3ByZXY9dGhpcy5fYXBwZW5kQWZ0ZXIpOnRoaXMuX21hcEhlYWQ9ZSx0aGlzLl9hcHBlbmRBZnRlcj1lLG51bGx9X2dldE9yQ3JlYXRlUmVjb3JkRm9yS2V5KHQsZSl7aWYodGhpcy5fcmVjb3Jkcy5oYXModCkpe2NvbnN0IG49dGhpcy5fcmVjb3Jkcy5nZXQodCk7dGhpcy5fbWF5YmVBZGRUb0NoYW5nZXMobixlKTtjb25zdCByPW4uX3ByZXYscz1uLl9uZXh0O3JldHVybiByJiYoci5fbmV4dD1zKSxzJiYocy5fcHJldj1yKSxuLl9uZXh0PW51bGwsbi5fcHJldj1udWxsLG59Y29uc3Qgbj1uZXcgR28odCk7cmV0dXJuIHRoaXMuX3JlY29yZHMuc2V0KHQsbiksbi5jdXJyZW50VmFsdWU9ZSx0aGlzLl9hZGRUb0FkZGl0aW9ucyhuKSxufV9yZXNldCgpe2lmKHRoaXMuaXNEaXJ0eSl7bGV0IHQ7Zm9yKHRoaXMuX3ByZXZpb3VzTWFwSGVhZD10aGlzLl9tYXBIZWFkLHQ9dGhpcy5fcHJldmlvdXNNYXBIZWFkO251bGwhPT10O3Q9dC5fbmV4dCl0Ll9uZXh0UHJldmlvdXM9dC5fbmV4dDtmb3IodD10aGlzLl9jaGFuZ2VzSGVhZDtudWxsIT09dDt0PXQuX25leHRDaGFuZ2VkKXQucHJldmlvdXNWYWx1ZT10LmN1cnJlbnRWYWx1ZTtmb3IodD10aGlzLl9hZGRpdGlvbnNIZWFkO251bGwhPXQ7dD10Ll9uZXh0QWRkZWQpdC5wcmV2aW91c1ZhbHVlPXQuY3VycmVudFZhbHVlO3RoaXMuX2NoYW5nZXNIZWFkPXRoaXMuX2NoYW5nZXNUYWlsPW51bGwsdGhpcy5fYWRkaXRpb25zSGVhZD10aGlzLl9hZGRpdGlvbnNUYWlsPW51bGwsdGhpcy5fcmVtb3ZhbHNIZWFkPW51bGx9fV9tYXliZUFkZFRvQ2hhbmdlcyh0LGUpe09iamVjdC5pcyhlLHQuY3VycmVudFZhbHVlKXx8KHQucHJldmlvdXNWYWx1ZT10LmN1cnJlbnRWYWx1ZSx0LmN1cnJlbnRWYWx1ZT1lLHRoaXMuX2FkZFRvQ2hhbmdlcyh0KSl9X2FkZFRvQWRkaXRpb25zKHQpe251bGw9PT10aGlzLl9hZGRpdGlvbnNIZWFkP3RoaXMuX2FkZGl0aW9uc0hlYWQ9dGhpcy5fYWRkaXRpb25zVGFpbD10Oih0aGlzLl9hZGRpdGlvbnNUYWlsLl9uZXh0QWRkZWQ9dCx0aGlzLl9hZGRpdGlvbnNUYWlsPXQpfV9hZGRUb0NoYW5nZXModCl7bnVsbD09PXRoaXMuX2NoYW5nZXNIZWFkP3RoaXMuX2NoYW5nZXNIZWFkPXRoaXMuX2NoYW5nZXNUYWlsPXQ6KHRoaXMuX2NoYW5nZXNUYWlsLl9uZXh0Q2hhbmdlZD10LHRoaXMuX2NoYW5nZXNUYWlsPXQpfV9mb3JFYWNoKHQsZSl7dCBpbnN0YW5jZW9mIE1hcD90LmZvckVhY2goZSk6T2JqZWN0LmtleXModCkuZm9yRWFjaChuPT5lKHRbbl0sbikpfX1jbGFzcyBHb3tjb25zdHJ1Y3Rvcih0KXt0aGlzLmtleT10LHRoaXMucHJldmlvdXNWYWx1ZT1udWxsLHRoaXMuY3VycmVudFZhbHVlPW51bGwsdGhpcy5fbmV4dFByZXZpb3VzPW51bGwsdGhpcy5fbmV4dD1udWxsLHRoaXMuX3ByZXY9bnVsbCx0aGlzLl9uZXh0QWRkZWQ9bnVsbCx0aGlzLl9uZXh0UmVtb3ZlZD1udWxsLHRoaXMuX25leHRDaGFuZ2VkPW51bGx9fWxldCBLbz0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKHQpe3RoaXMuZmFjdG9yaWVzPXR9c3RhdGljIGNyZWF0ZShlLG4pe2lmKG51bGwhPW4pe2NvbnN0IHQ9bi5mYWN0b3JpZXMuc2xpY2UoKTtlPWUuY29uY2F0KHQpfXJldHVybiBuZXcgdChlKX1zdGF0aWMgZXh0ZW5kKGUpe3JldHVybntwcm92aWRlOnQsdXNlRmFjdG9yeTpuPT57aWYoIW4pdGhyb3cgbmV3IEVycm9yKCJDYW5ub3QgZXh0ZW5kIEl0ZXJhYmxlRGlmZmVycyB3aXRob3V0IGEgcGFyZW50IGluamVjdG9yIik7cmV0dXJuIHQuY3JlYXRlKGUsbil9LGRlcHM6W1t0LG5ldyBpdCxuZXcgcnRdXX19ZmluZCh0KXtjb25zdCBlPXRoaXMuZmFjdG9yaWVzLmZpbmQoZT0+ZS5zdXBwb3J0cyh0KSk7aWYobnVsbCE9ZSlyZXR1cm4gZTt0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBmaW5kIGEgZGlmZmVyIHN1cHBvcnRpbmcgb2JqZWN0ICcke3R9JyBvZiB0eXBlICcke249dCxuLm5hbWV8fHR5cGVvZiBufSdgKTt2YXIgbn19cmV0dXJuIHQuXHUwMjc1cHJvdj11dCh7dG9rZW46dCxwcm92aWRlZEluOiJyb290IixmYWN0b3J5OigpPT5uZXcgdChbbmV3IEJvXSl9KSx0fSkoKSxRbz0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKHQpe3RoaXMuZmFjdG9yaWVzPXR9c3RhdGljIGNyZWF0ZShlLG4pe2lmKG4pe2NvbnN0IHQ9bi5mYWN0b3JpZXMuc2xpY2UoKTtlPWUuY29uY2F0KHQpfXJldHVybiBuZXcgdChlKX1zdGF0aWMgZXh0ZW5kKGUpe3JldHVybntwcm92aWRlOnQsdXNlRmFjdG9yeTpuPT57aWYoIW4pdGhyb3cgbmV3IEVycm9yKCJDYW5ub3QgZXh0ZW5kIEtleVZhbHVlRGlmZmVycyB3aXRob3V0IGEgcGFyZW50IGluamVjdG9yIik7cmV0dXJuIHQuY3JlYXRlKGUsbil9LGRlcHM6W1t0LG5ldyBpdCxuZXcgcnRdXX19ZmluZCh0KXtjb25zdCBlPXRoaXMuZmFjdG9yaWVzLmZpbmQoZT0+ZS5zdXBwb3J0cyh0KSk7aWYoZSlyZXR1cm4gZTt0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBmaW5kIGEgZGlmZmVyIHN1cHBvcnRpbmcgb2JqZWN0ICcke3R9J2ApfX1yZXR1cm4gdC5cdTAyNzVwcm92PXV0KHt0b2tlbjp0LHByb3ZpZGVkSW46InJvb3QiLGZhY3Rvcnk6KCk9Pm5ldyB0KFtuZXcgV29dKX0pLHR9KSgpO2NvbnN0IFlvPVtuZXcgV29dLEpvPW5ldyBLbyhbbmV3IEJvXSksWG89bmV3IFFvKFlvKTtsZXQgdGE9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuX19OR19FTEVNRU5UX0lEX189KCk9PmVhKHQsRm8pLHR9KSgpO2NvbnN0IGVhPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIEpzKHQsZSxybigpLHRuKCkpfTtsZXQgbmE9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuX19OR19FTEVNRU5UX0lEX189KCk9PnJhKHQsRm8pLHR9KSgpO2NvbnN0IHJhPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIFhzKHQsZSxybigpLHRuKCkpfSxzYT17fTtjbGFzcyBpYSBleHRlbmRzIFRve2NvbnN0cnVjdG9yKHQpe3N1cGVyKCksdGhpcy5uZ01vZHVsZT10fXJlc29sdmVDb21wb25lbnRGYWN0b3J5KHQpe2NvbnN0IGU9d2UodCk7cmV0dXJuIG5ldyBsYShlLHRoaXMubmdNb2R1bGUpfX1mdW5jdGlvbiBvYSh0KXtjb25zdCBlPVtdO2ZvcihsZXQgbiBpbiB0KXQuaGFzT3duUHJvcGVydHkobikmJmUucHVzaCh7cHJvcE5hbWU6dFtuXSx0ZW1wbGF0ZU5hbWU6bn0pO3JldHVybiBlfWNvbnN0IGFhPW5ldyBOdCgiU0NIRURVTEVSX1RPS0VOIix7cHJvdmlkZWRJbjoicm9vdCIsZmFjdG9yeTooKT0+em59KTtjbGFzcyBsYSBleHRlbmRzIHhve2NvbnN0cnVjdG9yKHQsZSl7c3VwZXIoKSx0aGlzLmNvbXBvbmVudERlZj10LHRoaXMubmdNb2R1bGU9ZSx0aGlzLmNvbXBvbmVudFR5cGU9dC50eXBlLHRoaXMuc2VsZWN0b3I9dC5zZWxlY3RvcnMubWFwKEZyKS5qb2luKCIsIiksdGhpcy5uZ0NvbnRlbnRTZWxlY3RvcnM9dC5uZ0NvbnRlbnRTZWxlY3RvcnM/dC5uZ0NvbnRlbnRTZWxlY3RvcnM6W10sdGhpcy5pc0JvdW5kVG9Nb2R1bGU9ISFlfWdldCBpbnB1dHMoKXtyZXR1cm4gb2EodGhpcy5jb21wb25lbnREZWYuaW5wdXRzKX1nZXQgb3V0cHV0cygpe3JldHVybiBvYSh0aGlzLmNvbXBvbmVudERlZi5vdXRwdXRzKX1jcmVhdGUodCxlLG4scil7Y29uc3Qgcz0ocj1yfHx0aGlzLm5nTW9kdWxlKT9mdW5jdGlvbih0LGUpe3JldHVybntnZXQ6KG4scixzKT0+e2NvbnN0IGk9dC5nZXQobixzYSxzKTtyZXR1cm4gaSE9PXNhfHxyPT09c2E/aTplLmdldChuLHIscyl9fX0odCxyLmluamVjdG9yKTp0LGk9cy5nZXQoUG8sTGUpLG89cy5nZXQoam8sbnVsbCksYT1pLmNyZWF0ZVJlbmRlcmVyKG51bGwsdGhpcy5jb21wb25lbnREZWYpLGw9dGhpcy5jb21wb25lbnREZWYuc2VsZWN0b3JzWzBdWzBdfHwiZGl2Iix1PW4/ZnVuY3Rpb24odCxlLG4pe2lmKEJlKHQpKXJldHVybiB0LnNlbGVjdFJvb3RFbGVtZW50KGUsbj09PWxlLlNoYWRvd0RvbSk7bGV0IHI9InN0cmluZyI9PXR5cGVvZiBlP3QucXVlcnlTZWxlY3RvcihlKTplO3JldHVybiByLnRleHRDb250ZW50PSIiLHJ9KGEsbix0aGlzLmNvbXBvbmVudERlZi5lbmNhcHN1bGF0aW9uKTpxcihsLGkuY3JlYXRlUmVuZGVyZXIobnVsbCx0aGlzLmNvbXBvbmVudERlZiksZnVuY3Rpb24odCl7Y29uc3QgZT10LnRvTG93ZXJDYXNlKCk7cmV0dXJuInN2ZyI9PT1lPyJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI6Im1hdGgiPT09ZT8iaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoTUwvIjpudWxsfShsKSksYz10aGlzLmNvbXBvbmVudERlZi5vblB1c2g/NTc2OjUyOCxoPXtjb21wb25lbnRzOltdLHNjaGVkdWxlcjp6bixjbGVhbjpBcyxwbGF5ZXJIYW5kbGVyOm51bGwsZmxhZ3M6MH0sZD1ucygwLG51bGwsbnVsbCwxLDAsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsKSxwPVdyKG51bGwsZCxoLGMsbnVsbCxudWxsLGksYSxvLHMpO2xldCBmLGc7eW4ocCk7dHJ5e2NvbnN0IHQ9ZnVuY3Rpb24odCxlLG4scixzLGkpe2NvbnN0IG89blsxXTtuWzIwXT10O2NvbnN0IGE9WnIobywwLDIsbnVsbCxudWxsKSxsPWEubWVyZ2VkQXR0cnM9ZS5ob3N0QXR0cnM7bnVsbCE9PWwmJihiaShhLGwsITApLG51bGwhPT10JiYoUm4ocyx0LGwpLG51bGwhPT1hLmNsYXNzZXMmJnFzKHMsdCxhLmNsYXNzZXMpLG51bGwhPT1hLnN0eWxlcyYmenMocyx0LGEuc3R5bGVzKSkpO2NvbnN0IHU9ci5jcmVhdGVSZW5kZXJlcih0LGUpLGM9V3IobixlcyhlKSxudWxsLGUub25QdXNoPzY0OjE2LG5bMjBdLGEscix1LG51bGwsbnVsbCk7cmV0dXJuIG8uZmlyc3RDcmVhdGVQYXNzJiYoWG4oS24oYSxuKSxvLGUudHlwZSksY3MobyxhKSxkcyhhLG4ubGVuZ3RoLDEpKSx3cyhuLGMpLG5bMjBdPWN9KHUsdGhpcy5jb21wb25lbnREZWYscCxpLGEpO2lmKHUpaWYobilSbihhLHUsWyJuZy12ZXJzaW9uIixWby5mdWxsXSk7ZWxzZXtjb25zdHthdHRyczp0LGNsYXNzZXM6ZX09ZnVuY3Rpb24odCl7Y29uc3QgZT1bXSxuPVtdO2xldCByPTEscz0yO2Zvcig7cjx0Lmxlbmd0aDspe2xldCBpPXRbcl07aWYoInN0cmluZyI9PXR5cGVvZiBpKTI9PT1zPyIiIT09aSYmZS5wdXNoKGksdFsrK3JdKTo4PT09cyYmbi5wdXNoKGkpO2Vsc2V7aWYoIUFyKHMpKWJyZWFrO3M9aX1yKyt9cmV0dXJue2F0dHJzOmUsY2xhc3NlczpufX0odGhpcy5jb21wb25lbnREZWYuc2VsZWN0b3JzWzBdKTt0JiZSbihhLHUsdCksZSYmZS5sZW5ndGg+MCYmcXMoYSx1LGUuam9pbigiICIpKX1pZihnPXplKGQsMCksdm9pZCAwIT09ZSl7Y29uc3QgdD1nLnByb2plY3Rpb249W107Zm9yKGxldCBuPTA7bjx0aGlzLm5nQ29udGVudFNlbGVjdG9ycy5sZW5ndGg7bisrKXtjb25zdCByPWVbbl07dC5wdXNoKG51bGwhPXI/QXJyYXkuZnJvbShyKTpudWxsKX19Zj1mdW5jdGlvbih0LGUsbixyLHMpe2NvbnN0IGk9blsxXSxvPWZ1bmN0aW9uKHQsZSxuKXtjb25zdCByPXJuKCk7dC5maXJzdENyZWF0ZVBhc3MmJihuLnByb3ZpZGVyc1Jlc29sdmVyJiZuLnByb3ZpZGVyc1Jlc29sdmVyKG4pLHVzKHQsciwxKSxwcyh0LGUsbikpO2NvbnN0IHM9c3IoZSx0LGUubGVuZ3RoLTEscik7dnIocyxlKTtjb25zdCBpPSRlKHIsZSk7cmV0dXJuIGkmJnZyKGksZSksc30oaSxuLGUpO3IuY29tcG9uZW50cy5wdXNoKG8pLHRbOF09byxzJiZzLmZvckVhY2godD0+dChvLGUpKSxlLmNvbnRlbnRRdWVyaWVzJiZlLmNvbnRlbnRRdWVyaWVzKDEsbyxuLmxlbmd0aC0xKTtjb25zdCBhPXJuKCk7aWYoaS5maXJzdENyZWF0ZVBhc3MmJihudWxsIT09ZS5ob3N0QmluZGluZ3N8fG51bGwhPT1lLmhvc3RBdHRycykpe0VuKGEuaW5kZXgtRGUpO2NvbnN0IHQ9blsxXTtvcyh0LGUpLGFzKHQsbixlLmhvc3RWYXJzKSxscyhlLG8pfXJldHVybiBvfSh0LHRoaXMuY29tcG9uZW50RGVmLHAsaCxbd2ldKSxHcihkLHAsbnVsbCl9ZmluYWxseXtDbigpfXJldHVybiBuZXcgdWEodGhpcy5jb21wb25lbnRUeXBlLGYsWXMoRm8sZyxwKSxwLGcpfX1jbGFzcyB1YSBleHRlbmRzIGNsYXNze317Y29uc3RydWN0b3IodCxlLG4scixzKXtzdXBlcigpLHRoaXMubG9jYXRpb249bix0aGlzLl9yb290TFZpZXc9cix0aGlzLl90Tm9kZT1zLHRoaXMuZGVzdHJveUNicz1bXSx0aGlzLmluc3RhbmNlPWUsdGhpcy5ob3N0Vmlldz10aGlzLmNoYW5nZURldGVjdG9yUmVmPW5ldyBacyhyKSx0aGlzLmNvbXBvbmVudFR5cGU9dH1nZXQgaW5qZWN0b3IoKXtyZXR1cm4gbmV3IGFyKHRoaXMuX3ROb2RlLHRoaXMuX3Jvb3RMVmlldyl9ZGVzdHJveSgpe3RoaXMuZGVzdHJveUNicyYmKHRoaXMuZGVzdHJveUNicy5mb3JFYWNoKHQ9PnQoKSksdGhpcy5kZXN0cm95Q2JzPW51bGwsIXRoaXMuaG9zdFZpZXcuZGVzdHJveWVkJiZ0aGlzLmhvc3RWaWV3LmRlc3Ryb3koKSl9b25EZXN0cm95KHQpe3RoaXMuZGVzdHJveUNicyYmdGhpcy5kZXN0cm95Q2JzLnB1c2godCl9fWNvbnN0IGNhPXZvaWQgMDt2YXIgaGE9WyJlbiIsW1siYSIsInAiXSxbIkFNIiwiUE0iXSxjYV0sW1siQU0iLCJQTSJdLGNhLGNhXSxbWyJTIiwiTSIsIlQiLCJXIiwiVCIsIkYiLCJTIl0sWyJTdW4iLCJNb24iLCJUdWUiLCJXZWQiLCJUaHUiLCJGcmkiLCJTYXQiXSxbIlN1bmRheSIsIk1vbmRheSIsIlR1ZXNkYXkiLCJXZWRuZXNkYXkiLCJUaHVyc2RheSIsIkZyaWRheSIsIlNhdHVyZGF5Il0sWyJTdSIsIk1vIiwiVHUiLCJXZSIsIlRoIiwiRnIiLCJTYSJdXSxjYSxbWyJKIiwiRiIsIk0iLCJBIiwiTSIsIkoiLCJKIiwiQSIsIlMiLCJPIiwiTiIsIkQiXSxbIkphbiIsIkZlYiIsIk1hciIsIkFwciIsIk1heSIsIkp1biIsIkp1bCIsIkF1ZyIsIlNlcCIsIk9jdCIsIk5vdiIsIkRlYyJdLFsiSmFudWFyeSIsIkZlYnJ1YXJ5IiwiTWFyY2giLCJBcHJpbCIsIk1heSIsIkp1bmUiLCJKdWx5IiwiQXVndXN0IiwiU2VwdGVtYmVyIiwiT2N0b2JlciIsIk5vdmVtYmVyIiwiRGVjZW1iZXIiXV0sY2EsW1siQiIsIkEiXSxbIkJDIiwiQUQiXSxbIkJlZm9yZSBDaHJpc3QiLCJBbm5vIERvbWluaSJdXSwwLFs2LDBdLFsiTS9kL3l5IiwiTU1NIGQsIHkiLCJNTU1NIGQsIHkiLCJFRUVFLCBNTU1NIGQsIHkiXSxbImg6bW0gYSIsImg6bW06c3MgYSIsImg6bW06c3MgYSB6IiwiaDptbTpzcyBhIHp6enoiXSxbInsxfSwgezB9IixjYSwiezF9ICdhdCcgezB9IixjYV0sWyIuIiwiLCIsIjsiLCIlIiwiKyIsIi0iLCJFIiwiXHhkNyIsIlx1MjAzMCIsIlx1MjIxZSIsIk5hTiIsIjoiXSxbIiMsIyMwLiMjIyIsIiMsIyMwJSIsIlx4YTQjLCMjMC4wMCIsIiNFMCJdLCJVU0QiLCIkIiwiVVMgRG9sbGFyIix7fSwibHRyIixmdW5jdGlvbih0KXtsZXQgZT1NYXRoLmZsb29yKE1hdGguYWJzKHQpKSxuPXQudG9TdHJpbmcoKS5yZXBsYWNlKC9eW14uXSpcLj8vLCIiKS5sZW5ndGg7cmV0dXJuIDE9PT1lJiYwPT09bj8xOjV9XTtsZXQgZGE9e307ZnVuY3Rpb24gcGEodCl7Y29uc3QgZT1mdW5jdGlvbih0KXtyZXR1cm4gdC50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL18vZywiLSIpfSh0KTtsZXQgbj1mYShlKTtpZihuKXJldHVybiBuO2NvbnN0IHI9ZS5zcGxpdCgiLSIpWzBdO2lmKG49ZmEociksbilyZXR1cm4gbjtpZigiZW4iPT09cilyZXR1cm4gaGE7dGhyb3cgbmV3IEVycm9yKGBNaXNzaW5nIGxvY2FsZSBkYXRhIGZvciB0aGUgbG9jYWxlICIke3R9Ii5gKX1mdW5jdGlvbiBmYSh0KXtyZXR1cm4gdCBpbiBkYXx8KGRhW3RdPVR0Lm5nJiZUdC5uZy5jb21tb24mJlR0Lm5nLmNvbW1vbi5sb2NhbGVzJiZUdC5uZy5jb21tb24ubG9jYWxlc1t0XSksZGFbdF19dmFyIGdhPWZ1bmN0aW9uKHQpe3JldHVybiB0W3QuTG9jYWxlSWQ9MF09IkxvY2FsZUlkIix0W3QuRGF5UGVyaW9kc0Zvcm1hdD0xXT0iRGF5UGVyaW9kc0Zvcm1hdCIsdFt0LkRheVBlcmlvZHNTdGFuZGFsb25lPTJdPSJEYXlQZXJpb2RzU3RhbmRhbG9uZSIsdFt0LkRheXNGb3JtYXQ9M109IkRheXNGb3JtYXQiLHRbdC5EYXlzU3RhbmRhbG9uZT00XT0iRGF5c1N0YW5kYWxvbmUiLHRbdC5Nb250aHNGb3JtYXQ9NV09Ik1vbnRoc0Zvcm1hdCIsdFt0Lk1vbnRoc1N0YW5kYWxvbmU9Nl09Ik1vbnRoc1N0YW5kYWxvbmUiLHRbdC5FcmFzPTddPSJFcmFzIix0W3QuRmlyc3REYXlPZldlZWs9OF09IkZpcnN0RGF5T2ZXZWVrIix0W3QuV2Vla2VuZFJhbmdlPTldPSJXZWVrZW5kUmFuZ2UiLHRbdC5EYXRlRm9ybWF0PTEwXT0iRGF0ZUZvcm1hdCIsdFt0LlRpbWVGb3JtYXQ9MTFdPSJUaW1lRm9ybWF0Iix0W3QuRGF0ZVRpbWVGb3JtYXQ9MTJdPSJEYXRlVGltZUZvcm1hdCIsdFt0Lk51bWJlclN5bWJvbHM9MTNdPSJOdW1iZXJTeW1ib2xzIix0W3QuTnVtYmVyRm9ybWF0cz0xNF09Ik51bWJlckZvcm1hdHMiLHRbdC5DdXJyZW5jeUNvZGU9MTVdPSJDdXJyZW5jeUNvZGUiLHRbdC5DdXJyZW5jeVN5bWJvbD0xNl09IkN1cnJlbmN5U3ltYm9sIix0W3QuQ3VycmVuY3lOYW1lPTE3XT0iQ3VycmVuY3lOYW1lIix0W3QuQ3VycmVuY2llcz0xOF09IkN1cnJlbmNpZXMiLHRbdC5EaXJlY3Rpb25hbGl0eT0xOV09IkRpcmVjdGlvbmFsaXR5Iix0W3QuUGx1cmFsQ2FzZT0yMF09IlBsdXJhbENhc2UiLHRbdC5FeHRyYURhdGE9MjFdPSJFeHRyYURhdGEiLHR9KHt9KTtjb25zdCBtYT0iZW4tVVMiO2xldCB5YT1tYTtmdW5jdGlvbiB2YSh0KXt2YXIgZSxuO249IkV4cGVjdGVkIGxvY2FsZUlkIHRvIGJlIGRlZmluZWQiLG51bGw9PShlPXQpJiZmdW5jdGlvbih0LGUsbixyKXt0aHJvdyBuZXcgRXJyb3IoIkFTU0VSVElPTiBFUlJPUjogIit0K2AgW0V4cGVjdGVkPT4gbnVsbCAhPSAke2V9IDw9QWN0dWFsXWApfShuLGUpLCJzdHJpbmciPT10eXBlb2YgdCYmKHlhPXQudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9fL2csIi0iKSl9Y29uc3QgYmE9bmV3IE1hcDtjbGFzcyB3YSBleHRlbmRzIEp0e2NvbnN0cnVjdG9yKHQsZSl7c3VwZXIoKSx0aGlzLl9wYXJlbnQ9ZSx0aGlzLl9ib290c3RyYXBDb21wb25lbnRzPVtdLHRoaXMuaW5qZWN0b3I9dGhpcyx0aGlzLmRlc3Ryb3lDYnM9W10sdGhpcy5jb21wb25lbnRGYWN0b3J5UmVzb2x2ZXI9bmV3IGlhKHRoaXMpO2NvbnN0IG49Q2UodCkscj10W1J0XXx8bnVsbDtyJiZ2YShyKSx0aGlzLl9ib290c3RyYXBDb21wb25lbnRzPXFuKG4uYm9vdHN0cmFwKSx0aGlzLl9yM0luamVjdG9yPXVpKHQsZSxbe3Byb3ZpZGU6SnQsdXNlVmFsdWU6dGhpc30se3Byb3ZpZGU6VG8sdXNlVmFsdWU6dGhpcy5jb21wb25lbnRGYWN0b3J5UmVzb2x2ZXJ9XSxidCh0KSksdGhpcy5fcjNJbmplY3Rvci5fcmVzb2x2ZUluamVjdG9yRGVmVHlwZXMoKSx0aGlzLmluc3RhbmNlPXRoaXMuZ2V0KHQpfWdldCh0LGU9eWkuVEhST1dfSUZfTk9UX0ZPVU5ELG49b3QuRGVmYXVsdCl7cmV0dXJuIHQ9PT15aXx8dD09PUp0fHx0PT09VnQ/dGhpczp0aGlzLl9yM0luamVjdG9yLmdldCh0LGUsbil9ZGVzdHJveSgpe2NvbnN0IHQ9dGhpcy5fcjNJbmplY3RvcjshdC5kZXN0cm95ZWQmJnQuZGVzdHJveSgpLHRoaXMuZGVzdHJveUNicy5mb3JFYWNoKHQ9PnQoKSksdGhpcy5kZXN0cm95Q2JzPW51bGx9b25EZXN0cm95KHQpe3RoaXMuZGVzdHJveUNicy5wdXNoKHQpfX1jbGFzcyBfYSBleHRlbmRzIFh0e2NvbnN0cnVjdG9yKHQpe3N1cGVyKCksdGhpcy5tb2R1bGVUeXBlPXQsbnVsbCE9PUNlKHQpJiZmdW5jdGlvbiB0KGUpe2lmKG51bGwhPT1lLlx1MDI3NW1vZC5pZCl7Y29uc3QgdD1lLlx1MDI3NW1vZC5pZDsoZnVuY3Rpb24odCxlLG4pe2lmKGUmJmUhPT1uKXRocm93IG5ldyBFcnJvcihgRHVwbGljYXRlIG1vZHVsZSByZWdpc3RlcmVkIGZvciAke3R9IC0gJHtidChlKX0gdnMgJHtidChlLm5hbWUpfWApfSkodCxiYS5nZXQodCksZSksYmEuc2V0KHQsZSl9bGV0IG49ZS5cdTAyNzVtb2QuaW1wb3J0cztuIGluc3RhbmNlb2YgRnVuY3Rpb24mJihuPW4oKSksbiYmbi5mb3JFYWNoKGU9PnQoZSkpfSh0KX1jcmVhdGUodCl7cmV0dXJuIG5ldyB3YSh0aGlzLm1vZHVsZVR5cGUsdCl9fWNvbnN0IENhPWNsYXNzIGV4dGVuZHMgRHtjb25zdHJ1Y3Rvcih0PSExKXtzdXBlcigpLHRoaXMuX19pc0FzeW5jPXR9ZW1pdCh0KXtzdXBlci5uZXh0KHQpfXN1YnNjcmliZSh0LGUsbil7bGV0IHIscz10PT5udWxsLGk9KCk9Pm51bGw7dCYmIm9iamVjdCI9PXR5cGVvZiB0PyhyPXRoaXMuX19pc0FzeW5jP2U9PntzZXRUaW1lb3V0KCgpPT50Lm5leHQoZSkpfTplPT57dC5uZXh0KGUpfSx0LmVycm9yJiYocz10aGlzLl9faXNBc3luYz9lPT57c2V0VGltZW91dCgoKT0+dC5lcnJvcihlKSl9OmU9Pnt0LmVycm9yKGUpfSksdC5jb21wbGV0ZSYmKGk9dGhpcy5fX2lzQXN5bmM/KCk9PntzZXRUaW1lb3V0KCgpPT50LmNvbXBsZXRlKCkpfTooKT0+e3QuY29tcGxldGUoKX0pKToocj10aGlzLl9faXNBc3luYz9lPT57c2V0VGltZW91dCgoKT0+dChlKSl9OmU9Pnt0KGUpfSxlJiYocz10aGlzLl9faXNBc3luYz90PT57c2V0VGltZW91dCgoKT0+ZSh0KSl9OnQ9PntlKHQpfSksbiYmKGk9dGhpcy5fX2lzQXN5bmM/KCk9PntzZXRUaW1lb3V0KCgpPT5uKCkpfTooKT0+e24oKX0pKTtjb25zdCBvPXN1cGVyLnN1YnNjcmliZShyLHMsaSk7cmV0dXJuIHQgaW5zdGFuY2VvZiBoJiZ0LmFkZChvKSxvfX07ZnVuY3Rpb24gRGEoKXtyZXR1cm4gdGhpcy5fcmVzdWx0c1t4aSgpXSgpfWNsYXNzIEVhe2NvbnN0cnVjdG9yKCl7dGhpcy5kaXJ0eT0hMCx0aGlzLl9yZXN1bHRzPVtdLHRoaXMuY2hhbmdlcz1uZXcgQ2EsdGhpcy5sZW5ndGg9MDtjb25zdCB0PXhpKCksZT1FYS5wcm90b3R5cGU7ZVt0XXx8KGVbdF09RGEpfW1hcCh0KXtyZXR1cm4gdGhpcy5fcmVzdWx0cy5tYXAodCl9ZmlsdGVyKHQpe3JldHVybiB0aGlzLl9yZXN1bHRzLmZpbHRlcih0KX1maW5kKHQpe3JldHVybiB0aGlzLl9yZXN1bHRzLmZpbmQodCl9cmVkdWNlKHQsZSl7cmV0dXJuIHRoaXMuX3Jlc3VsdHMucmVkdWNlKHQsZSl9Zm9yRWFjaCh0KXt0aGlzLl9yZXN1bHRzLmZvckVhY2godCl9c29tZSh0KXtyZXR1cm4gdGhpcy5fcmVzdWx0cy5zb21lKHQpfXRvQXJyYXkoKXtyZXR1cm4gdGhpcy5fcmVzdWx0cy5zbGljZSgpfXRvU3RyaW5nKCl7cmV0dXJuIHRoaXMuX3Jlc3VsdHMudG9TdHJpbmcoKX1yZXNldCh0KXt0aGlzLl9yZXN1bHRzPWZ1bmN0aW9uIHQoZSxuKXt2b2lkIDA9PT1uJiYobj1lKTtmb3IobGV0IHI9MDtyPGUubGVuZ3RoO3IrKyl7bGV0IHM9ZVtyXTtBcnJheS5pc0FycmF5KHMpPyhuPT09ZSYmKG49ZS5zbGljZSgwLHIpKSx0KHMsbikpOm4hPT1lJiZuLnB1c2gocyl9cmV0dXJuIG59KHQpLHRoaXMuZGlydHk9ITEsdGhpcy5sZW5ndGg9dGhpcy5fcmVzdWx0cy5sZW5ndGgsdGhpcy5sYXN0PXRoaXMuX3Jlc3VsdHNbdGhpcy5sZW5ndGgtMV0sdGhpcy5maXJzdD10aGlzLl9yZXN1bHRzWzBdfW5vdGlmeU9uQ2hhbmdlcygpe3RoaXMuY2hhbmdlcy5lbWl0KHRoaXMpfXNldERpcnR5KCl7dGhpcy5kaXJ0eT0hMH1kZXN0cm95KCl7dGhpcy5jaGFuZ2VzLmNvbXBsZXRlKCksdGhpcy5jaGFuZ2VzLnVuc3Vic2NyaWJlKCl9fWNsYXNzIEFhe2NvbnN0cnVjdG9yKHQpe3RoaXMucXVlcnlMaXN0PXQsdGhpcy5tYXRjaGVzPW51bGx9Y2xvbmUoKXtyZXR1cm4gbmV3IEFhKHRoaXMucXVlcnlMaXN0KX1zZXREaXJ0eSgpe3RoaXMucXVlcnlMaXN0LnNldERpcnR5KCl9fWNsYXNzIFNhe2NvbnN0cnVjdG9yKHQ9W10pe3RoaXMucXVlcmllcz10fWNyZWF0ZUVtYmVkZGVkVmlldyh0KXtjb25zdCBlPXQucXVlcmllcztpZihudWxsIT09ZSl7Y29uc3Qgbj1udWxsIT09dC5jb250ZW50UXVlcmllcz90LmNvbnRlbnRRdWVyaWVzWzBdOmUubGVuZ3RoLHI9W107Zm9yKGxldCB0PTA7dDxuO3QrKyl7Y29uc3Qgbj1lLmdldEJ5SW5kZXgodCk7ci5wdXNoKHRoaXMucXVlcmllc1tuLmluZGV4SW5EZWNsYXJhdGlvblZpZXddLmNsb25lKCkpfXJldHVybiBuZXcgU2Eocil9cmV0dXJuIG51bGx9aW5zZXJ0Vmlldyh0KXt0aGlzLmRpcnR5UXVlcmllc1dpdGhNYXRjaGVzKHQpfWRldGFjaFZpZXcodCl7dGhpcy5kaXJ0eVF1ZXJpZXNXaXRoTWF0Y2hlcyh0KX1kaXJ0eVF1ZXJpZXNXaXRoTWF0Y2hlcyh0KXtmb3IobGV0IGU9MDtlPHRoaXMucXVlcmllcy5sZW5ndGg7ZSsrKW51bGwhPT1MYSh0LGUpLm1hdGNoZXMmJnRoaXMucXVlcmllc1tlXS5zZXREaXJ0eSgpfX1jbGFzcyB4YXtjb25zdHJ1Y3Rvcih0LGUsbixyPW51bGwpe3RoaXMucHJlZGljYXRlPXQsdGhpcy5kZXNjZW5kYW50cz1lLHRoaXMuaXNTdGF0aWM9bix0aGlzLnJlYWQ9cn19Y2xhc3Mga2F7Y29uc3RydWN0b3IodD1bXSl7dGhpcy5xdWVyaWVzPXR9ZWxlbWVudFN0YXJ0KHQsZSl7Zm9yKGxldCBuPTA7bjx0aGlzLnF1ZXJpZXMubGVuZ3RoO24rKyl0aGlzLnF1ZXJpZXNbbl0uZWxlbWVudFN0YXJ0KHQsZSl9ZWxlbWVudEVuZCh0KXtmb3IobGV0IGU9MDtlPHRoaXMucXVlcmllcy5sZW5ndGg7ZSsrKXRoaXMucXVlcmllc1tlXS5lbGVtZW50RW5kKHQpfWVtYmVkZGVkVFZpZXcodCl7bGV0IGU9bnVsbDtmb3IobGV0IG49MDtuPHRoaXMubGVuZ3RoO24rKyl7Y29uc3Qgcj1udWxsIT09ZT9lLmxlbmd0aDowLHM9dGhpcy5nZXRCeUluZGV4KG4pLmVtYmVkZGVkVFZpZXcodCxyKTtzJiYocy5pbmRleEluRGVjbGFyYXRpb25WaWV3PW4sbnVsbCE9PWU/ZS5wdXNoKHMpOmU9W3NdKX1yZXR1cm4gbnVsbCE9PWU/bmV3IGthKGUpOm51bGx9dGVtcGxhdGUodCxlKXtmb3IobGV0IG49MDtuPHRoaXMucXVlcmllcy5sZW5ndGg7bisrKXRoaXMucXVlcmllc1tuXS50ZW1wbGF0ZSh0LGUpfWdldEJ5SW5kZXgodCl7cmV0dXJuIHRoaXMucXVlcmllc1t0XX1nZXQgbGVuZ3RoKCl7cmV0dXJuIHRoaXMucXVlcmllcy5sZW5ndGh9dHJhY2sodCl7dGhpcy5xdWVyaWVzLnB1c2godCl9fWNsYXNzIFRhe2NvbnN0cnVjdG9yKHQsZT0tMSl7dGhpcy5tZXRhZGF0YT10LHRoaXMubWF0Y2hlcz1udWxsLHRoaXMuaW5kZXhJbkRlY2xhcmF0aW9uVmlldz0tMSx0aGlzLmNyb3NzZXNOZ1RlbXBsYXRlPSExLHRoaXMuX2FwcGxpZXNUb05leHROb2RlPSEwLHRoaXMuX2RlY2xhcmF0aW9uTm9kZUluZGV4PWV9ZWxlbWVudFN0YXJ0KHQsZSl7dGhpcy5pc0FwcGx5aW5nVG9Ob2RlKGUpJiZ0aGlzLm1hdGNoVE5vZGUodCxlKX1lbGVtZW50RW5kKHQpe3RoaXMuX2RlY2xhcmF0aW9uTm9kZUluZGV4PT09dC5pbmRleCYmKHRoaXMuX2FwcGxpZXNUb05leHROb2RlPSExKX10ZW1wbGF0ZSh0LGUpe3RoaXMuZWxlbWVudFN0YXJ0KHQsZSl9ZW1iZWRkZWRUVmlldyh0LGUpe3JldHVybiB0aGlzLmlzQXBwbHlpbmdUb05vZGUodCk/KHRoaXMuY3Jvc3Nlc05nVGVtcGxhdGU9ITAsdGhpcy5hZGRNYXRjaCgtdC5pbmRleCxlKSxuZXcgVGEodGhpcy5tZXRhZGF0YSkpOm51bGx9aXNBcHBseWluZ1RvTm9kZSh0KXtpZih0aGlzLl9hcHBsaWVzVG9OZXh0Tm9kZSYmITE9PT10aGlzLm1ldGFkYXRhLmRlc2NlbmRhbnRzKXtjb25zdCBlPXRoaXMuX2RlY2xhcmF0aW9uTm9kZUluZGV4O2xldCBuPXQucGFyZW50O2Zvcig7bnVsbCE9PW4mJjM9PT1uLnR5cGUmJm4uaW5kZXghPT1lOyluPW4ucGFyZW50O3JldHVybiBlPT09KG51bGwhPT1uP24uaW5kZXg6LTEpfXJldHVybiB0aGlzLl9hcHBsaWVzVG9OZXh0Tm9kZX1tYXRjaFROb2RlKHQsZSl7Y29uc3Qgbj10aGlzLm1ldGFkYXRhLnByZWRpY2F0ZTtpZihBcnJheS5pc0FycmF5KG4pKWZvcihsZXQgcj0wO3I8bi5sZW5ndGg7cisrKXtjb25zdCBzPW5bcl07dGhpcy5tYXRjaFROb2RlV2l0aFJlYWRPcHRpb24odCxlLEZhKGUscykpLHRoaXMubWF0Y2hUTm9kZVdpdGhSZWFkT3B0aW9uKHQsZSxycihlLHQscywhMSwhMSkpfWVsc2Ugbj09PXRhPzA9PT1lLnR5cGUmJnRoaXMubWF0Y2hUTm9kZVdpdGhSZWFkT3B0aW9uKHQsZSwtMSk6dGhpcy5tYXRjaFROb2RlV2l0aFJlYWRPcHRpb24odCxlLHJyKGUsdCxuLCExLCExKSl9bWF0Y2hUTm9kZVdpdGhSZWFkT3B0aW9uKHQsZSxuKXtpZihudWxsIT09bil7Y29uc3Qgcj10aGlzLm1ldGFkYXRhLnJlYWQ7aWYobnVsbCE9PXIpaWYocj09PUZvfHxyPT09bmF8fHI9PT10YSYmMD09PWUudHlwZSl0aGlzLmFkZE1hdGNoKGUuaW5kZXgsLTIpO2Vsc2V7Y29uc3Qgbj1ycihlLHQsciwhMSwhMSk7bnVsbCE9PW4mJnRoaXMuYWRkTWF0Y2goZS5pbmRleCxuKX1lbHNlIHRoaXMuYWRkTWF0Y2goZS5pbmRleCxuKX19YWRkTWF0Y2godCxlKXtudWxsPT09dGhpcy5tYXRjaGVzP3RoaXMubWF0Y2hlcz1bdCxlXTp0aGlzLm1hdGNoZXMucHVzaCh0LGUpfX1mdW5jdGlvbiBGYSh0LGUpe2NvbnN0IG49dC5sb2NhbE5hbWVzO2lmKG51bGwhPT1uKWZvcihsZXQgcj0wO3I8bi5sZW5ndGg7cis9MilpZihuW3JdPT09ZSlyZXR1cm4gbltyKzFdO3JldHVybiBudWxsfWZ1bmN0aW9uIE9hKHQsZSxuLHIpe3JldHVybi0xPT09bj9mdW5jdGlvbih0LGUpe3JldHVybiAyPT09dC50eXBlfHwzPT09dC50eXBlP1lzKEZvLHQsZSk6MD09PXQudHlwZT9Kcyh0YSxGbyx0LGUpOm51bGx9KGUsdCk6LTI9PT1uP2Z1bmN0aW9uKHQsZSxuKXtyZXR1cm4gbj09PUZvP1lzKEZvLGUsdCk6bj09PXRhP0pzKHRhLEZvLGUsdCk6bj09PW5hP1hzKG5hLEZvLGUsdCk6dm9pZCAwfSh0LGUscik6c3IodCx0WzFdLG4sZSl9ZnVuY3Rpb24gUGEodCxlLG4scil7Y29uc3Qgcz1lWzE5XS5xdWVyaWVzW3JdO2lmKG51bGw9PT1zLm1hdGNoZXMpe2NvbnN0IHI9dC5kYXRhLGk9bi5tYXRjaGVzLG89W107Zm9yKGxldCB0PTA7dDxpLmxlbmd0aDt0Kz0yKXtjb25zdCBzPWlbdF07by5wdXNoKHM8MD9udWxsOk9hKGUscltzXSxpW3QrMV0sbi5tZXRhZGF0YS5yZWFkKSl9cy5tYXRjaGVzPW99cmV0dXJuIHMubWF0Y2hlc31mdW5jdGlvbiBJYSh0KXtjb25zdCBlPXRuKCksbj1lbigpLHI9Zm4oKTtnbihyKzEpO2NvbnN0IHM9TGEobixyKTtpZih0LmRpcnR5JiZaZShlKT09PXMubWV0YWRhdGEuaXNTdGF0aWMpe2lmKG51bGw9PT1zLm1hdGNoZXMpdC5yZXNldChbXSk7ZWxzZXtjb25zdCBpPXMuY3Jvc3Nlc05nVGVtcGxhdGU/ZnVuY3Rpb24gdChlLG4scixzKXtjb25zdCBpPWUucXVlcmllcy5nZXRCeUluZGV4KHIpLG89aS5tYXRjaGVzO2lmKG51bGwhPT1vKXtjb25zdCBhPVBhKGUsbixpLHIpO2ZvcihsZXQgZT0wO2U8by5sZW5ndGg7ZSs9Mil7Y29uc3Qgcj1vW2VdO2lmKHI+MClzLnB1c2goYVtlLzJdKTtlbHNle2NvbnN0IGk9b1tlKzFdLGE9blstcl07Zm9yKGxldCBlPUVlO2U8YS5sZW5ndGg7ZSsrKXtjb25zdCBuPWFbZV07blsxN109PT1uWzNdJiZ0KG5bMV0sbixpLHMpfWlmKG51bGwhPT1hWzldKXtjb25zdCBlPWFbOV07Zm9yKGxldCBuPTA7bjxlLmxlbmd0aDtuKyspe2NvbnN0IHI9ZVtuXTt0KHJbMV0scixpLHMpfX19fX1yZXR1cm4gc30obixlLHIsW10pOlBhKG4sZSxzLHIpO3QucmVzZXQoaSksdC5ub3RpZnlPbkNoYW5nZXMoKX1yZXR1cm4hMH1yZXR1cm4hMX1mdW5jdGlvbiBSYSh0LGUsbil7amEoZW4oKSx0bigpLHQsZSxuLCEwKX1mdW5jdGlvbiBNYSh0LGUsbil7amEoZW4oKSx0bigpLHQsZSxuLCExKX1mdW5jdGlvbiBqYSh0LGUsbixyLHMsaSl7dC5maXJzdENyZWF0ZVBhc3MmJihCYSh0LG5ldyB4YShuLHIsaSxzKSwtMSksaSYmKHQuc3RhdGljVmlld1F1ZXJpZXM9ITApKSxWYSh0LGUpfWZ1bmN0aW9uIE5hKCl7cmV0dXJuIHQ9dG4oKSxlPWZuKCksdFsxOV0ucXVlcmllc1tlXS5xdWVyeUxpc3Q7dmFyIHQsZX1mdW5jdGlvbiBWYSh0LGUpe2NvbnN0IG49bmV3IEVhO3JzKHQsZSxuLG4uZGVzdHJveSksbnVsbD09PWVbMTldJiYoZVsxOV09bmV3IFNhKSxlWzE5XS5xdWVyaWVzLnB1c2gobmV3IEFhKG4pKX1mdW5jdGlvbiBCYSh0LGUsbil7bnVsbD09PXQucXVlcmllcyYmKHQucXVlcmllcz1uZXcga2EpLHQucXVlcmllcy50cmFjayhuZXcgVGEoZSxuKSl9ZnVuY3Rpb24gTGEodCxlKXtyZXR1cm4gdC5xdWVyaWVzLmdldEJ5SW5kZXgoZSl9Y29uc3QgVWE9bmV3IE50KCJBcHBsaWNhdGlvbiBJbml0aWFsaXplciIpO2xldCBIYT0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKHQpe3RoaXMuYXBwSW5pdHM9dCx0aGlzLmluaXRpYWxpemVkPSExLHRoaXMuZG9uZT0hMSx0aGlzLmRvbmVQcm9taXNlPW5ldyBQcm9taXNlKCh0LGUpPT57dGhpcy5yZXNvbHZlPXQsdGhpcy5yZWplY3Q9ZX0pfXJ1bkluaXRpYWxpemVycygpe2lmKHRoaXMuaW5pdGlhbGl6ZWQpcmV0dXJuO2NvbnN0IHQ9W10sZT0oKT0+e3RoaXMuZG9uZT0hMCx0aGlzLnJlc29sdmUoKX07aWYodGhpcy5hcHBJbml0cylmb3IobGV0IG49MDtuPHRoaXMuYXBwSW5pdHMubGVuZ3RoO24rKyl7Y29uc3QgZT10aGlzLmFwcEluaXRzW25dKCk7VWkoZSkmJnQucHVzaChlKX1Qcm9taXNlLmFsbCh0KS50aGVuKCgpPT57ZSgpfSkuY2F0Y2godD0+e3RoaXMucmVqZWN0KHQpfSksMD09PXQubGVuZ3RoJiZlKCksdGhpcy5pbml0aWFsaXplZD0hMH19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCkoR3QoVWEsOCkpfSx0Llx1MDI3NXByb3Y9dXQoe3Rva2VuOnQsZmFjdG9yeTp0Llx1MDI3NWZhY30pLHR9KSgpO2NvbnN0ICRhPW5ldyBOdCgiQXBwSWQiKSx6YT17cHJvdmlkZTokYSx1c2VGYWN0b3J5OmZ1bmN0aW9uKCl7cmV0dXJuYCR7cWEoKX0ke3FhKCl9JHtxYSgpfWB9LGRlcHM6W119O2Z1bmN0aW9uIHFhKCl7cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoOTcrTWF0aC5mbG9vcigyNSpNYXRoLnJhbmRvbSgpKSl9Y29uc3QgV2E9bmV3IE50KCJQbGF0Zm9ybSBJbml0aWFsaXplciIpLFphPW5ldyBOdCgiUGxhdGZvcm0gSUQiKSxHYT1uZXcgTnQoImFwcEJvb3RzdHJhcExpc3RlbmVyIik7bGV0IEthPSgoKT0+e2NsYXNzIHR7bG9nKHQpe2NvbnNvbGUubG9nKHQpfXdhcm4odCl7Y29uc29sZS53YXJuKHQpfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0sdC5cdTAyNzVwcm92PXV0KHt0b2tlbjp0LGZhY3Rvcnk6dC5cdTAyNzVmYWN9KSx0fSkoKTtjb25zdCBRYT1uZXcgTnQoIkxvY2FsZUlkIiksWWE9bmV3IE50KCJEZWZhdWx0Q3VycmVuY3lDb2RlIik7Y2xhc3MgSmF7Y29uc3RydWN0b3IodCxlKXt0aGlzLm5nTW9kdWxlRmFjdG9yeT10LHRoaXMuY29tcG9uZW50RmFjdG9yaWVzPWV9fWNvbnN0IFhhPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgX2EodCl9LHRsPVhhLGVsPWZ1bmN0aW9uKHQpe3JldHVybiBQcm9taXNlLnJlc29sdmUoWGEodCkpfSxubD1mdW5jdGlvbih0KXtjb25zdCBlPVhhKHQpLG49cW4oQ2UodCkuZGVjbGFyYXRpb25zKS5yZWR1Y2UoKHQsZSk9Pntjb25zdCBuPXdlKGUpO3JldHVybiBuJiZ0LnB1c2gobmV3IGxhKG4pKSx0fSxbXSk7cmV0dXJuIG5ldyBKYShlLG4pfSxybD1ubCxzbD1mdW5jdGlvbih0KXtyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5sKHQpKX07bGV0IGlsPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IoKXt0aGlzLmNvbXBpbGVNb2R1bGVTeW5jPXRsLHRoaXMuY29tcGlsZU1vZHVsZUFzeW5jPWVsLHRoaXMuY29tcGlsZU1vZHVsZUFuZEFsbENvbXBvbmVudHNTeW5jPXJsLHRoaXMuY29tcGlsZU1vZHVsZUFuZEFsbENvbXBvbmVudHNBc3luYz1zbH1jbGVhckNhY2hlKCl7fWNsZWFyQ2FjaGVGb3IodCl7fWdldE1vZHVsZUlkKHQpe319cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LHQuXHUwMjc1cHJvdj11dCh7dG9rZW46dCxmYWN0b3J5OnQuXHUwMjc1ZmFjfSksdH0pKCk7Y29uc3Qgb2w9KCgpPT5Qcm9taXNlLnJlc29sdmUoMCkpKCk7ZnVuY3Rpb24gYWwodCl7InVuZGVmaW5lZCI9PXR5cGVvZiBab25lP29sLnRoZW4oKCk9Pnt0JiZ0LmFwcGx5KG51bGwsbnVsbCl9KTpab25lLmN1cnJlbnQuc2NoZWR1bGVNaWNyb1Rhc2soInNjaGVkdWxlTWljcm90YXNrIix0KX1jbGFzcyBsbHtjb25zdHJ1Y3Rvcih7ZW5hYmxlTG9uZ1N0YWNrVHJhY2U6dD0hMSxzaG91bGRDb2FsZXNjZUV2ZW50Q2hhbmdlRGV0ZWN0aW9uOmU9ITF9KXtpZih0aGlzLmhhc1BlbmRpbmdNYWNyb3Rhc2tzPSExLHRoaXMuaGFzUGVuZGluZ01pY3JvdGFza3M9ITEsdGhpcy5pc1N0YWJsZT0hMCx0aGlzLm9uVW5zdGFibGU9bmV3IENhKCExKSx0aGlzLm9uTWljcm90YXNrRW1wdHk9bmV3IENhKCExKSx0aGlzLm9uU3RhYmxlPW5ldyBDYSghMSksdGhpcy5vbkVycm9yPW5ldyBDYSghMSksInVuZGVmaW5lZCI9PXR5cGVvZiBab25lKXRocm93IG5ldyBFcnJvcigiSW4gdGhpcyBjb25maWd1cmF0aW9uIEFuZ3VsYXIgcmVxdWlyZXMgWm9uZS5qcyIpO1pvbmUuYXNzZXJ0Wm9uZVBhdGNoZWQoKTtjb25zdCBuPXRoaXM7bi5fbmVzdGluZz0wLG4uX291dGVyPW4uX2lubmVyPVpvbmUuY3VycmVudCxab25lLnd0ZlpvbmVTcGVjJiYobi5faW5uZXI9bi5faW5uZXIuZm9yayhab25lLnd0ZlpvbmVTcGVjKSksWm9uZS5UYXNrVHJhY2tpbmdab25lU3BlYyYmKG4uX2lubmVyPW4uX2lubmVyLmZvcmsobmV3IFpvbmUuVGFza1RyYWNraW5nWm9uZVNwZWMpKSx0JiZab25lLmxvbmdTdGFja1RyYWNlWm9uZVNwZWMmJihuLl9pbm5lcj1uLl9pbm5lci5mb3JrKFpvbmUubG9uZ1N0YWNrVHJhY2Vab25lU3BlYykpLG4uc2hvdWxkQ29hbGVzY2VFdmVudENoYW5nZURldGVjdGlvbj1lLG4ubGFzdFJlcXVlc3RBbmltYXRpb25GcmFtZUlkPS0xLG4ubmF0aXZlUmVxdWVzdEFuaW1hdGlvbkZyYW1lPWZ1bmN0aW9uKCl7bGV0IHQ9VHQucmVxdWVzdEFuaW1hdGlvbkZyYW1lLGU9VHQuY2FuY2VsQW5pbWF0aW9uRnJhbWU7aWYoInVuZGVmaW5lZCIhPXR5cGVvZiBab25lJiZ0JiZlKXtjb25zdCBuPXRbWm9uZS5fX3N5bWJvbF9fKCJPcmlnaW5hbERlbGVnYXRlIildO24mJih0PW4pO2NvbnN0IHI9ZVtab25lLl9fc3ltYm9sX18oIk9yaWdpbmFsRGVsZWdhdGUiKV07ciYmKGU9cil9cmV0dXJue25hdGl2ZVJlcXVlc3RBbmltYXRpb25GcmFtZTp0LG5hdGl2ZUNhbmNlbEFuaW1hdGlvbkZyYW1lOmV9fSgpLm5hdGl2ZVJlcXVlc3RBbmltYXRpb25GcmFtZSxmdW5jdGlvbih0KXtjb25zdCBlPSEhdC5zaG91bGRDb2FsZXNjZUV2ZW50Q2hhbmdlRGV0ZWN0aW9uJiZ0Lm5hdGl2ZVJlcXVlc3RBbmltYXRpb25GcmFtZSYmKCgpPT57IWZ1bmN0aW9uKHQpey0xPT09dC5sYXN0UmVxdWVzdEFuaW1hdGlvbkZyYW1lSWQmJih0Lmxhc3RSZXF1ZXN0QW5pbWF0aW9uRnJhbWVJZD10Lm5hdGl2ZVJlcXVlc3RBbmltYXRpb25GcmFtZS5jYWxsKFR0LCgpPT57dC5mYWtlVG9wRXZlbnRUYXNrfHwodC5mYWtlVG9wRXZlbnRUYXNrPVpvbmUucm9vdC5zY2hlZHVsZUV2ZW50VGFzaygiZmFrZVRvcEV2ZW50VGFzayIsKCk9Pnt0Lmxhc3RSZXF1ZXN0QW5pbWF0aW9uRnJhbWVJZD0tMSxkbCh0KSxobCh0KX0sdm9pZCAwLCgpPT57fSwoKT0+e30pKSx0LmZha2VUb3BFdmVudFRhc2suaW52b2tlKCl9KSxkbCh0KSl9KHQpfSk7dC5faW5uZXI9dC5faW5uZXIuZm9yayh7bmFtZToiYW5ndWxhciIscHJvcGVydGllczp7aXNBbmd1bGFyWm9uZTohMCxtYXliZURlbGF5Q2hhbmdlRGV0ZWN0aW9uOmV9LG9uSW52b2tlVGFzazoobixyLHMsaSxvLGEpPT57dHJ5e3JldHVybiBwbCh0KSxuLmludm9rZVRhc2socyxpLG8sYSl9ZmluYWxseXtlJiYiZXZlbnRUYXNrIj09PWkudHlwZSYmZSgpLGZsKHQpfX0sb25JbnZva2U6KGUsbixyLHMsaSxvLGEpPT57dHJ5e3JldHVybiBwbCh0KSxlLmludm9rZShyLHMsaSxvLGEpfWZpbmFsbHl7ZmwodCl9fSxvbkhhc1Rhc2s6KGUsbixyLHMpPT57ZS5oYXNUYXNrKHIscyksbj09PXImJigibWljcm9UYXNrIj09cy5jaGFuZ2U/KHQuX2hhc1BlbmRpbmdNaWNyb3Rhc2tzPXMubWljcm9UYXNrLGRsKHQpLGhsKHQpKToibWFjcm9UYXNrIj09cy5jaGFuZ2UmJih0Lmhhc1BlbmRpbmdNYWNyb3Rhc2tzPXMubWFjcm9UYXNrKSl9LG9uSGFuZGxlRXJyb3I6KGUsbixyLHMpPT4oZS5oYW5kbGVFcnJvcihyLHMpLHQucnVuT3V0c2lkZUFuZ3VsYXIoKCk9PnQub25FcnJvci5lbWl0KHMpKSwhMSl9KX0obil9c3RhdGljIGlzSW5Bbmd1bGFyWm9uZSgpe3JldHVybiEwPT09Wm9uZS5jdXJyZW50LmdldCgiaXNBbmd1bGFyWm9uZSIpfXN0YXRpYyBhc3NlcnRJbkFuZ3VsYXJab25lKCl7aWYoIWxsLmlzSW5Bbmd1bGFyWm9uZSgpKXRocm93IG5ldyBFcnJvcigiRXhwZWN0ZWQgdG8gYmUgaW4gQW5ndWxhciBab25lLCBidXQgaXQgaXMgbm90ISIpfXN0YXRpYyBhc3NlcnROb3RJbkFuZ3VsYXJab25lKCl7aWYobGwuaXNJbkFuZ3VsYXJab25lKCkpdGhyb3cgbmV3IEVycm9yKCJFeHBlY3RlZCB0byBub3QgYmUgaW4gQW5ndWxhciBab25lLCBidXQgaXQgaXMhIil9cnVuKHQsZSxuKXtyZXR1cm4gdGhpcy5faW5uZXIucnVuKHQsZSxuKX1ydW5UYXNrKHQsZSxuLHIpe2NvbnN0IHM9dGhpcy5faW5uZXIsaT1zLnNjaGVkdWxlRXZlbnRUYXNrKCJOZ1pvbmVFdmVudDogIityLHQsY2wsdWwsdWwpO3RyeXtyZXR1cm4gcy5ydW5UYXNrKGksZSxuKX1maW5hbGx5e3MuY2FuY2VsVGFzayhpKX19cnVuR3VhcmRlZCh0LGUsbil7cmV0dXJuIHRoaXMuX2lubmVyLnJ1bkd1YXJkZWQodCxlLG4pfXJ1bk91dHNpZGVBbmd1bGFyKHQpe3JldHVybiB0aGlzLl9vdXRlci5ydW4odCl9fWZ1bmN0aW9uIHVsKCl7fWNvbnN0IGNsPXt9O2Z1bmN0aW9uIGhsKHQpe2lmKDA9PXQuX25lc3RpbmcmJiF0Lmhhc1BlbmRpbmdNaWNyb3Rhc2tzJiYhdC5pc1N0YWJsZSl0cnl7dC5fbmVzdGluZysrLHQub25NaWNyb3Rhc2tFbXB0eS5lbWl0KG51bGwpfWZpbmFsbHl7aWYodC5fbmVzdGluZy0tLCF0Lmhhc1BlbmRpbmdNaWNyb3Rhc2tzKXRyeXt0LnJ1bk91dHNpZGVBbmd1bGFyKCgpPT50Lm9uU3RhYmxlLmVtaXQobnVsbCkpfWZpbmFsbHl7dC5pc1N0YWJsZT0hMH19fWZ1bmN0aW9uIGRsKHQpe3QuaGFzUGVuZGluZ01pY3JvdGFza3M9ISEodC5faGFzUGVuZGluZ01pY3JvdGFza3N8fHQuc2hvdWxkQ29hbGVzY2VFdmVudENoYW5nZURldGVjdGlvbiYmLTEhPT10Lmxhc3RSZXF1ZXN0QW5pbWF0aW9uRnJhbWVJZCl9ZnVuY3Rpb24gcGwodCl7dC5fbmVzdGluZysrLHQuaXNTdGFibGUmJih0LmlzU3RhYmxlPSExLHQub25VbnN0YWJsZS5lbWl0KG51bGwpKX1mdW5jdGlvbiBmbCh0KXt0Ll9uZXN0aW5nLS0saGwodCl9Y2xhc3MgZ2x7Y29uc3RydWN0b3IoKXt0aGlzLmhhc1BlbmRpbmdNaWNyb3Rhc2tzPSExLHRoaXMuaGFzUGVuZGluZ01hY3JvdGFza3M9ITEsdGhpcy5pc1N0YWJsZT0hMCx0aGlzLm9uVW5zdGFibGU9bmV3IENhLHRoaXMub25NaWNyb3Rhc2tFbXB0eT1uZXcgQ2EsdGhpcy5vblN0YWJsZT1uZXcgQ2EsdGhpcy5vbkVycm9yPW5ldyBDYX1ydW4odCxlLG4pe3JldHVybiB0LmFwcGx5KGUsbil9cnVuR3VhcmRlZCh0LGUsbil7cmV0dXJuIHQuYXBwbHkoZSxuKX1ydW5PdXRzaWRlQW5ndWxhcih0KXtyZXR1cm4gdCgpfXJ1blRhc2sodCxlLG4scil7cmV0dXJuIHQuYXBwbHkoZSxuKX19bGV0IG1sPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IodCl7dGhpcy5fbmdab25lPXQsdGhpcy5fcGVuZGluZ0NvdW50PTAsdGhpcy5faXNab25lU3RhYmxlPSEwLHRoaXMuX2RpZFdvcms9ITEsdGhpcy5fY2FsbGJhY2tzPVtdLHRoaXMudGFza1RyYWNraW5nWm9uZT1udWxsLHRoaXMuX3dhdGNoQW5ndWxhckV2ZW50cygpLHQucnVuKCgpPT57dGhpcy50YXNrVHJhY2tpbmdab25lPSJ1bmRlZmluZWQiPT10eXBlb2YgWm9uZT9udWxsOlpvbmUuY3VycmVudC5nZXQoIlRhc2tUcmFja2luZ1pvbmUiKX0pfV93YXRjaEFuZ3VsYXJFdmVudHMoKXt0aGlzLl9uZ1pvbmUub25VbnN0YWJsZS5zdWJzY3JpYmUoe25leHQ6KCk9Pnt0aGlzLl9kaWRXb3JrPSEwLHRoaXMuX2lzWm9uZVN0YWJsZT0hMX19KSx0aGlzLl9uZ1pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCk9Pnt0aGlzLl9uZ1pvbmUub25TdGFibGUuc3Vic2NyaWJlKHtuZXh0OigpPT57bGwuYXNzZXJ0Tm90SW5Bbmd1bGFyWm9uZSgpLGFsKCgpPT57dGhpcy5faXNab25lU3RhYmxlPSEwLHRoaXMuX3J1bkNhbGxiYWNrc0lmUmVhZHkoKX0pfX0pfSl9aW5jcmVhc2VQZW5kaW5nUmVxdWVzdENvdW50KCl7cmV0dXJuIHRoaXMuX3BlbmRpbmdDb3VudCs9MSx0aGlzLl9kaWRXb3JrPSEwLHRoaXMuX3BlbmRpbmdDb3VudH1kZWNyZWFzZVBlbmRpbmdSZXF1ZXN0Q291bnQoKXtpZih0aGlzLl9wZW5kaW5nQ291bnQtPTEsdGhpcy5fcGVuZGluZ0NvdW50PDApdGhyb3cgbmV3IEVycm9yKCJwZW5kaW5nIGFzeW5jIHJlcXVlc3RzIGJlbG93IHplcm8iKTtyZXR1cm4gdGhpcy5fcnVuQ2FsbGJhY2tzSWZSZWFkeSgpLHRoaXMuX3BlbmRpbmdDb3VudH1pc1N0YWJsZSgpe3JldHVybiB0aGlzLl9pc1pvbmVTdGFibGUmJjA9PT10aGlzLl9wZW5kaW5nQ291bnQmJiF0aGlzLl9uZ1pvbmUuaGFzUGVuZGluZ01hY3JvdGFza3N9X3J1bkNhbGxiYWNrc0lmUmVhZHkoKXtpZih0aGlzLmlzU3RhYmxlKCkpYWwoKCk9Pntmb3IoOzAhPT10aGlzLl9jYWxsYmFja3MubGVuZ3RoOyl7bGV0IHQ9dGhpcy5fY2FsbGJhY2tzLnBvcCgpO2NsZWFyVGltZW91dCh0LnRpbWVvdXRJZCksdC5kb25lQ2IodGhpcy5fZGlkV29yayl9dGhpcy5fZGlkV29yaz0hMX0pO2Vsc2V7bGV0IHQ9dGhpcy5nZXRQZW5kaW5nVGFza3MoKTt0aGlzLl9jYWxsYmFja3M9dGhpcy5fY2FsbGJhY2tzLmZpbHRlcihlPT4hZS51cGRhdGVDYnx8IWUudXBkYXRlQ2IodCl8fChjbGVhclRpbWVvdXQoZS50aW1lb3V0SWQpLCExKSksdGhpcy5fZGlkV29yaz0hMH19Z2V0UGVuZGluZ1Rhc2tzKCl7cmV0dXJuIHRoaXMudGFza1RyYWNraW5nWm9uZT90aGlzLnRhc2tUcmFja2luZ1pvbmUubWFjcm9UYXNrcy5tYXAodD0+KHtzb3VyY2U6dC5zb3VyY2UsY3JlYXRpb25Mb2NhdGlvbjp0LmNyZWF0aW9uTG9jYXRpb24sZGF0YTp0LmRhdGF9KSk6W119YWRkQ2FsbGJhY2sodCxlLG4pe2xldCByPS0xO2UmJmU+MCYmKHI9c2V0VGltZW91dCgoKT0+e3RoaXMuX2NhbGxiYWNrcz10aGlzLl9jYWxsYmFja3MuZmlsdGVyKHQ9PnQudGltZW91dElkIT09ciksdCh0aGlzLl9kaWRXb3JrLHRoaXMuZ2V0UGVuZGluZ1Rhc2tzKCkpfSxlKSksdGhpcy5fY2FsbGJhY2tzLnB1c2goe2RvbmVDYjp0LHRpbWVvdXRJZDpyLHVwZGF0ZUNiOm59KX13aGVuU3RhYmxlKHQsZSxuKXtpZihuJiYhdGhpcy50YXNrVHJhY2tpbmdab25lKXRocm93IG5ldyBFcnJvcignVGFzayB0cmFja2luZyB6b25lIGlzIHJlcXVpcmVkIHdoZW4gcGFzc2luZyBhbiB1cGRhdGUgY2FsbGJhY2sgdG8gd2hlblN0YWJsZSgpLiBJcyAiem9uZS5qcy9kaXN0L3Rhc2stdHJhY2tpbmcuanMiIGxvYWRlZD8nKTt0aGlzLmFkZENhbGxiYWNrKHQsZSxuKSx0aGlzLl9ydW5DYWxsYmFja3NJZlJlYWR5KCl9Z2V0UGVuZGluZ1JlcXVlc3RDb3VudCgpe3JldHVybiB0aGlzLl9wZW5kaW5nQ291bnR9ZmluZFByb3ZpZGVycyh0LGUsbil7cmV0dXJuW119fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKEd0KGxsKSl9LHQuXHUwMjc1cHJvdj11dCh7dG9rZW46dCxmYWN0b3J5OnQuXHUwMjc1ZmFjfSksdH0pKCkseWw9KCgpPT57Y2xhc3MgdHtjb25zdHJ1Y3Rvcigpe3RoaXMuX2FwcGxpY2F0aW9ucz1uZXcgTWFwLHdsLmFkZFRvV2luZG93KHRoaXMpfXJlZ2lzdGVyQXBwbGljYXRpb24odCxlKXt0aGlzLl9hcHBsaWNhdGlvbnMuc2V0KHQsZSl9dW5yZWdpc3RlckFwcGxpY2F0aW9uKHQpe3RoaXMuX2FwcGxpY2F0aW9ucy5kZWxldGUodCl9dW5yZWdpc3RlckFsbEFwcGxpY2F0aW9ucygpe3RoaXMuX2FwcGxpY2F0aW9ucy5jbGVhcigpfWdldFRlc3RhYmlsaXR5KHQpe3JldHVybiB0aGlzLl9hcHBsaWNhdGlvbnMuZ2V0KHQpfHxudWxsfWdldEFsbFRlc3RhYmlsaXRpZXMoKXtyZXR1cm4gQXJyYXkuZnJvbSh0aGlzLl9hcHBsaWNhdGlvbnMudmFsdWVzKCkpfWdldEFsbFJvb3RFbGVtZW50cygpe3JldHVybiBBcnJheS5mcm9tKHRoaXMuX2FwcGxpY2F0aW9ucy5rZXlzKCkpfWZpbmRUZXN0YWJpbGl0eUluVHJlZSh0LGU9ITApe3JldHVybiB3bC5maW5kVGVzdGFiaWxpdHlJblRyZWUodGhpcyx0LGUpfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0sdC5cdTAyNzVwcm92PXV0KHt0b2tlbjp0LGZhY3Rvcnk6dC5cdTAyNzVmYWN9KSx0fSkoKTtjbGFzcyB2bHthZGRUb1dpbmRvdyh0KXt9ZmluZFRlc3RhYmlsaXR5SW5UcmVlKHQsZSxuKXtyZXR1cm4gbnVsbH19bGV0IGJsLHdsPW5ldyB2bDtjb25zdCBfbD1uZXcgTnQoIkFsbG93TXVsdGlwbGVUb2tlbiIpO2NsYXNzIENse2NvbnN0cnVjdG9yKHQsZSl7dGhpcy5uYW1lPXQsdGhpcy50b2tlbj1lfX1mdW5jdGlvbiBEbCh0LGUsbj1bXSl7Y29uc3Qgcj0iUGxhdGZvcm06ICIrZSxzPW5ldyBOdChyKTtyZXR1cm4oZT1bXSk9PntsZXQgaT1FbCgpO2lmKCFpfHxpLmluamVjdG9yLmdldChfbCwhMSkpaWYodCl0KG4uY29uY2F0KGUpLmNvbmNhdCh7cHJvdmlkZTpzLHVzZVZhbHVlOiEwfSkpO2Vsc2V7Y29uc3QgdD1uLmNvbmNhdChlKS5jb25jYXQoe3Byb3ZpZGU6cyx1c2VWYWx1ZTohMH0se3Byb3ZpZGU6cmksdXNlVmFsdWU6InBsYXRmb3JtIn0pOyFmdW5jdGlvbih0KXtpZihibCYmIWJsLmRlc3Ryb3llZCYmIWJsLmluamVjdG9yLmdldChfbCwhMSkpdGhyb3cgbmV3IEVycm9yKCJUaGVyZSBjYW4gYmUgb25seSBvbmUgcGxhdGZvcm0uIERlc3Ryb3kgdGhlIHByZXZpb3VzIG9uZSB0byBjcmVhdGUgYSBuZXcgb25lLiIpO2JsPXQuZ2V0KEFsKTtjb25zdCBlPXQuZ2V0KFdhLG51bGwpO2UmJmUuZm9yRWFjaCh0PT50KCkpfSh5aS5jcmVhdGUoe3Byb3ZpZGVyczp0LG5hbWU6cn0pKX1yZXR1cm4gZnVuY3Rpb24odCl7Y29uc3QgZT1FbCgpO2lmKCFlKXRocm93IG5ldyBFcnJvcigiTm8gcGxhdGZvcm0gZXhpc3RzISIpO2lmKCFlLmluamVjdG9yLmdldCh0LG51bGwpKXRocm93IG5ldyBFcnJvcigiQSBwbGF0Zm9ybSB3aXRoIGEgZGlmZmVyZW50IGNvbmZpZ3VyYXRpb24gaGFzIGJlZW4gY3JlYXRlZC4gUGxlYXNlIGRlc3Ryb3kgaXQgZmlyc3QuIik7cmV0dXJuIGV9KHMpfX1mdW5jdGlvbiBFbCgpe3JldHVybiBibCYmIWJsLmRlc3Ryb3llZD9ibDpudWxsfWxldCBBbD0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKHQpe3RoaXMuX2luamVjdG9yPXQsdGhpcy5fbW9kdWxlcz1bXSx0aGlzLl9kZXN0cm95TGlzdGVuZXJzPVtdLHRoaXMuX2Rlc3Ryb3llZD0hMX1ib290c3RyYXBNb2R1bGVGYWN0b3J5KHQsZSl7Y29uc3Qgbj1mdW5jdGlvbih0LGUpe2xldCBuO3JldHVybiBuPSJub29wIj09PXQ/bmV3IGdsOigiem9uZS5qcyI9PT10P3ZvaWQgMDp0KXx8bmV3IGxsKHtlbmFibGVMb25nU3RhY2tUcmFjZTp5cigpLHNob3VsZENvYWxlc2NlRXZlbnRDaGFuZ2VEZXRlY3Rpb246ZX0pLG59KGU/ZS5uZ1pvbmU6dm9pZCAwLGUmJmUubmdab25lRXZlbnRDb2FsZXNjaW5nfHwhMSkscj1be3Byb3ZpZGU6bGwsdXNlVmFsdWU6bn1dO3JldHVybiBuLnJ1bigoKT0+e2NvbnN0IGU9eWkuY3JlYXRlKHtwcm92aWRlcnM6cixwYXJlbnQ6dGhpcy5pbmplY3RvcixuYW1lOnQubW9kdWxlVHlwZS5uYW1lfSkscz10LmNyZWF0ZShlKSxpPXMuaW5qZWN0b3IuZ2V0KHByLG51bGwpO2lmKCFpKXRocm93IG5ldyBFcnJvcigiTm8gRXJyb3JIYW5kbGVyLiBJcyBwbGF0Zm9ybSBtb2R1bGUgKEJyb3dzZXJNb2R1bGUpIGluY2x1ZGVkPyIpO3JldHVybiBzLm9uRGVzdHJveSgoKT0+a2wodGhpcy5fbW9kdWxlcyxzKSksbi5ydW5PdXRzaWRlQW5ndWxhcigoKT0+bi5vbkVycm9yLnN1YnNjcmliZSh7bmV4dDp0PT57aS5oYW5kbGVFcnJvcih0KX19KSksZnVuY3Rpb24odCxlLG4pe3RyeXtjb25zdCByPW4oKTtyZXR1cm4gVWkocik/ci5jYXRjaChuPT57dGhyb3cgZS5ydW5PdXRzaWRlQW5ndWxhcigoKT0+dC5oYW5kbGVFcnJvcihuKSksbn0pOnJ9Y2F0Y2gocil7dGhyb3cgZS5ydW5PdXRzaWRlQW5ndWxhcigoKT0+dC5oYW5kbGVFcnJvcihyKSkscn19KGksbiwoKT0+e2NvbnN0IHQ9cy5pbmplY3Rvci5nZXQoSGEpO3JldHVybiB0LnJ1bkluaXRpYWxpemVycygpLHQuZG9uZVByb21pc2UudGhlbigoKT0+KHZhKHMuaW5qZWN0b3IuZ2V0KFFhLG1hKXx8bWEpLHRoaXMuX21vZHVsZURvQm9vdHN0cmFwKHMpLHMpKX0pfSl9Ym9vdHN0cmFwTW9kdWxlKHQsZT1bXSl7Y29uc3Qgbj1TbCh7fSxlKTtyZXR1cm4gZnVuY3Rpb24odCxlLG4pe2NvbnN0IHI9bmV3IF9hKG4pO3JldHVybiBQcm9taXNlLnJlc29sdmUocil9KDAsMCx0KS50aGVuKHQ9PnRoaXMuYm9vdHN0cmFwTW9kdWxlRmFjdG9yeSh0LG4pKX1fbW9kdWxlRG9Cb290c3RyYXAodCl7Y29uc3QgZT10LmluamVjdG9yLmdldCh4bCk7aWYodC5fYm9vdHN0cmFwQ29tcG9uZW50cy5sZW5ndGg+MCl0Ll9ib290c3RyYXBDb21wb25lbnRzLmZvckVhY2godD0+ZS5ib290c3RyYXAodCkpO2Vsc2V7aWYoIXQuaW5zdGFuY2UubmdEb0Jvb3RzdHJhcCl0aHJvdyBuZXcgRXJyb3IoYFRoZSBtb2R1bGUgJHtidCh0Lmluc3RhbmNlLmNvbnN0cnVjdG9yKX0gd2FzIGJvb3RzdHJhcHBlZCwgYnV0IGl0IGRvZXMgbm90IGRlY2xhcmUgIkBOZ01vZHVsZS5ib290c3RyYXAiIGNvbXBvbmVudHMgbm9yIGEgIm5nRG9Cb290c3RyYXAiIG1ldGhvZC4gUGxlYXNlIGRlZmluZSBvbmUgb2YgdGhlc2UuYCk7dC5pbnN0YW5jZS5uZ0RvQm9vdHN0cmFwKGUpfXRoaXMuX21vZHVsZXMucHVzaCh0KX1vbkRlc3Ryb3kodCl7dGhpcy5fZGVzdHJveUxpc3RlbmVycy5wdXNoKHQpfWdldCBpbmplY3Rvcigpe3JldHVybiB0aGlzLl9pbmplY3Rvcn1kZXN0cm95KCl7aWYodGhpcy5fZGVzdHJveWVkKXRocm93IG5ldyBFcnJvcigiVGhlIHBsYXRmb3JtIGhhcyBhbHJlYWR5IGJlZW4gZGVzdHJveWVkISIpO3RoaXMuX21vZHVsZXMuc2xpY2UoKS5mb3JFYWNoKHQ9PnQuZGVzdHJveSgpKSx0aGlzLl9kZXN0cm95TGlzdGVuZXJzLmZvckVhY2godD0+dCgpKSx0aGlzLl9kZXN0cm95ZWQ9ITB9Z2V0IGRlc3Ryb3llZCgpe3JldHVybiB0aGlzLl9kZXN0cm95ZWR9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKEd0KHlpKSl9LHQuXHUwMjc1cHJvdj11dCh7dG9rZW46dCxmYWN0b3J5OnQuXHUwMjc1ZmFjfSksdH0pKCk7ZnVuY3Rpb24gU2wodCxlKXtyZXR1cm4gQXJyYXkuaXNBcnJheShlKT9lLnJlZHVjZShTbCx0KTpPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sdCksZSl9bGV0IHhsPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IodCxlLG4scixzLGkpe3RoaXMuX3pvbmU9dCx0aGlzLl9jb25zb2xlPWUsdGhpcy5faW5qZWN0b3I9bix0aGlzLl9leGNlcHRpb25IYW5kbGVyPXIsdGhpcy5fY29tcG9uZW50RmFjdG9yeVJlc29sdmVyPXMsdGhpcy5faW5pdFN0YXR1cz1pLHRoaXMuX2Jvb3RzdHJhcExpc3RlbmVycz1bXSx0aGlzLl92aWV3cz1bXSx0aGlzLl9ydW5uaW5nVGljaz0hMSx0aGlzLl9lbmZvcmNlTm9OZXdDaGFuZ2VzPSExLHRoaXMuX3N0YWJsZT0hMCx0aGlzLmNvbXBvbmVudFR5cGVzPVtdLHRoaXMuY29tcG9uZW50cz1bXSx0aGlzLl9lbmZvcmNlTm9OZXdDaGFuZ2VzPXlyKCksdGhpcy5fem9uZS5vbk1pY3JvdGFza0VtcHR5LnN1YnNjcmliZSh7bmV4dDooKT0+e3RoaXMuX3pvbmUucnVuKCgpPT57dGhpcy50aWNrKCl9KX19KTtjb25zdCBvPW5ldyB2KHQ9Pnt0aGlzLl9zdGFibGU9dGhpcy5fem9uZS5pc1N0YWJsZSYmIXRoaXMuX3pvbmUuaGFzUGVuZGluZ01hY3JvdGFza3MmJiF0aGlzLl96b25lLmhhc1BlbmRpbmdNaWNyb3Rhc2tzLHRoaXMuX3pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCk9Pnt0Lm5leHQodGhpcy5fc3RhYmxlKSx0LmNvbXBsZXRlKCl9KX0pLGE9bmV3IHYodD0+e2xldCBlO3RoaXMuX3pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCk9PntlPXRoaXMuX3pvbmUub25TdGFibGUuc3Vic2NyaWJlKCgpPT57bGwuYXNzZXJ0Tm90SW5Bbmd1bGFyWm9uZSgpLGFsKCgpPT57dGhpcy5fc3RhYmxlfHx0aGlzLl96b25lLmhhc1BlbmRpbmdNYWNyb3Rhc2tzfHx0aGlzLl96b25lLmhhc1BlbmRpbmdNaWNyb3Rhc2tzfHwodGhpcy5fc3RhYmxlPSEwLHQubmV4dCghMCkpfSl9KX0pO2NvbnN0IG49dGhpcy5fem9uZS5vblVuc3RhYmxlLnN1YnNjcmliZSgoKT0+e2xsLmFzc2VydEluQW5ndWxhclpvbmUoKSx0aGlzLl9zdGFibGUmJih0aGlzLl9zdGFibGU9ITEsdGhpcy5fem9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKT0+e3QubmV4dCghMSl9KSl9KTtyZXR1cm4oKT0+e2UudW5zdWJzY3JpYmUoKSxuLnVuc3Vic2NyaWJlKCl9fSk7dGhpcy5pc1N0YWJsZT1xKG8sYS5waXBlKHQ9PntyZXR1cm4gVygpKChlPUosZnVuY3Rpb24odCl7bGV0IG47bj0iZnVuY3Rpb24iPT10eXBlb2YgZT9lOmZ1bmN0aW9uKCl7cmV0dXJuIGV9O2NvbnN0IHI9T2JqZWN0LmNyZWF0ZSh0LFEpO3JldHVybiByLnNvdXJjZT10LHIuc3ViamVjdEZhY3Rvcnk9bixyfSkodCkpO3ZhciBlfSkpfWJvb3RzdHJhcCh0LGUpe2lmKCF0aGlzLl9pbml0U3RhdHVzLmRvbmUpdGhyb3cgbmV3IEVycm9yKCJDYW5ub3QgYm9vdHN0cmFwIGFzIHRoZXJlIGFyZSBzdGlsbCBhc3luY2hyb25vdXMgaW5pdGlhbGl6ZXJzIHJ1bm5pbmcuIEJvb3RzdHJhcCBjb21wb25lbnRzIGluIHRoZSBgbmdEb0Jvb3RzdHJhcGAgbWV0aG9kIG9mIHRoZSByb290IG1vZHVsZS4iKTtsZXQgbjtuPXQgaW5zdGFuY2VvZiB4bz90OnRoaXMuX2NvbXBvbmVudEZhY3RvcnlSZXNvbHZlci5yZXNvbHZlQ29tcG9uZW50RmFjdG9yeSh0KSx0aGlzLmNvbXBvbmVudFR5cGVzLnB1c2gobi5jb21wb25lbnRUeXBlKTtjb25zdCByPW4uaXNCb3VuZFRvTW9kdWxlP3ZvaWQgMDp0aGlzLl9pbmplY3Rvci5nZXQoSnQpLHM9bi5jcmVhdGUoeWkuTlVMTCxbXSxlfHxuLnNlbGVjdG9yLHIpO3Mub25EZXN0cm95KCgpPT57dGhpcy5fdW5sb2FkQ29tcG9uZW50KHMpfSk7Y29uc3QgaT1zLmluamVjdG9yLmdldChtbCxudWxsKTtyZXR1cm4gaSYmcy5pbmplY3Rvci5nZXQoeWwpLnJlZ2lzdGVyQXBwbGljYXRpb24ocy5sb2NhdGlvbi5uYXRpdmVFbGVtZW50LGkpLHRoaXMuX2xvYWRDb21wb25lbnQocykseXIoKSYmdGhpcy5fY29uc29sZS5sb2coIkFuZ3VsYXIgaXMgcnVubmluZyBpbiBkZXZlbG9wbWVudCBtb2RlLiBDYWxsIGVuYWJsZVByb2RNb2RlKCkgdG8gZW5hYmxlIHByb2R1Y3Rpb24gbW9kZS4iKSxzfXRpY2soKXtpZih0aGlzLl9ydW5uaW5nVGljayl0aHJvdyBuZXcgRXJyb3IoIkFwcGxpY2F0aW9uUmVmLnRpY2sgaXMgY2FsbGVkIHJlY3Vyc2l2ZWx5Iik7dHJ5e3RoaXMuX3J1bm5pbmdUaWNrPSEwO2ZvcihsZXQgdCBvZiB0aGlzLl92aWV3cyl0LmRldGVjdENoYW5nZXMoKTtpZih0aGlzLl9lbmZvcmNlTm9OZXdDaGFuZ2VzKWZvcihsZXQgdCBvZiB0aGlzLl92aWV3cyl0LmNoZWNrTm9DaGFuZ2VzKCl9Y2F0Y2godCl7dGhpcy5fem9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKT0+dGhpcy5fZXhjZXB0aW9uSGFuZGxlci5oYW5kbGVFcnJvcih0KSl9ZmluYWxseXt0aGlzLl9ydW5uaW5nVGljaz0hMX19YXR0YWNoVmlldyh0KXtjb25zdCBlPXQ7dGhpcy5fdmlld3MucHVzaChlKSxlLmF0dGFjaFRvQXBwUmVmKHRoaXMpfWRldGFjaFZpZXcodCl7Y29uc3QgZT10O2tsKHRoaXMuX3ZpZXdzLGUpLGUuZGV0YWNoRnJvbUFwcFJlZigpfV9sb2FkQ29tcG9uZW50KHQpe3RoaXMuYXR0YWNoVmlldyh0Lmhvc3RWaWV3KSx0aGlzLnRpY2soKSx0aGlzLmNvbXBvbmVudHMucHVzaCh0KSx0aGlzLl9pbmplY3Rvci5nZXQoR2EsW10pLmNvbmNhdCh0aGlzLl9ib290c3RyYXBMaXN0ZW5lcnMpLmZvckVhY2goZT0+ZSh0KSl9X3VubG9hZENvbXBvbmVudCh0KXt0aGlzLmRldGFjaFZpZXcodC5ob3N0Vmlldyksa2wodGhpcy5jb21wb25lbnRzLHQpfW5nT25EZXN0cm95KCl7dGhpcy5fdmlld3Muc2xpY2UoKS5mb3JFYWNoKHQ9PnQuZGVzdHJveSgpKX1nZXQgdmlld0NvdW50KCl7cmV0dXJuIHRoaXMuX3ZpZXdzLmxlbmd0aH19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCkoR3QobGwpLEd0KEthKSxHdCh5aSksR3QocHIpLEd0KFRvKSxHdChIYSkpfSx0Llx1MDI3NXByb3Y9dXQoe3Rva2VuOnQsZmFjdG9yeTp0Llx1MDI3NWZhY30pLHR9KSgpO2Z1bmN0aW9uIGtsKHQsZSl7Y29uc3Qgbj10LmluZGV4T2YoZSk7bj4tMSYmdC5zcGxpY2UobiwxKX1jbGFzcyBUbHt9Y2xhc3MgRmx7fWNvbnN0IE9sPXtmYWN0b3J5UGF0aFByZWZpeDoiIixmYWN0b3J5UGF0aFN1ZmZpeDoiLm5nZmFjdG9yeSJ9O2xldCBQbD0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKHQsZSl7dGhpcy5fY29tcGlsZXI9dCx0aGlzLl9jb25maWc9ZXx8T2x9bG9hZCh0KXtyZXR1cm4gdGhpcy5sb2FkQW5kQ29tcGlsZSh0KX1sb2FkQW5kQ29tcGlsZSh0KXtsZXRbZSxyXT10LnNwbGl0KCIjIik7cmV0dXJuIHZvaWQgMD09PXImJihyPSJkZWZhdWx0Iiksbigiem44UCIpKGUpLnRoZW4odD0+dFtyXSkudGhlbih0PT5JbCh0LGUscikpLnRoZW4odD0+dGhpcy5fY29tcGlsZXIuY29tcGlsZU1vZHVsZUFzeW5jKHQpKX1sb2FkRmFjdG9yeSh0KXtsZXRbZSxyXT10LnNwbGl0KCIjIikscz0iTmdGYWN0b3J5IjtyZXR1cm4gdm9pZCAwPT09ciYmKHI9ImRlZmF1bHQiLHM9IiIpLG4oInpuOFAiKSh0aGlzLl9jb25maWcuZmFjdG9yeVBhdGhQcmVmaXgrZSt0aGlzLl9jb25maWcuZmFjdG9yeVBhdGhTdWZmaXgpLnRoZW4odD0+dFtyK3NdKS50aGVuKHQ9PklsKHQsZSxyKSl9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKEd0KGlsKSxHdChGbCw4KSl9LHQuXHUwMjc1cHJvdj11dCh7dG9rZW46dCxmYWN0b3J5OnQuXHUwMjc1ZmFjfSksdH0pKCk7ZnVuY3Rpb24gSWwodCxlLG4pe2lmKCF0KXRocm93IG5ldyBFcnJvcihgQ2Fubm90IGZpbmQgJyR7bn0nIGluICcke2V9J2ApO3JldHVybiB0fWNvbnN0IFJsPURsKG51bGwsImNvcmUiLFt7cHJvdmlkZTpaYSx1c2VWYWx1ZToidW5rbm93biJ9LHtwcm92aWRlOkFsLGRlcHM6W3lpXX0se3Byb3ZpZGU6eWwsZGVwczpbXX0se3Byb3ZpZGU6S2EsZGVwczpbXX1dKSxNbD1be3Byb3ZpZGU6eGwsdXNlQ2xhc3M6eGwsZGVwczpbbGwsS2EseWkscHIsVG8sSGFdfSx7cHJvdmlkZTphYSxkZXBzOltsbF0sdXNlRmFjdG9yeTpmdW5jdGlvbih0KXtsZXQgZT1bXTtyZXR1cm4gdC5vblN0YWJsZS5zdWJzY3JpYmUoKCk9Pntmb3IoO2UubGVuZ3RoOyllLnBvcCgpKCl9KSxmdW5jdGlvbih0KXtlLnB1c2godCl9fX0se3Byb3ZpZGU6SGEsdXNlQ2xhc3M6SGEsZGVwczpbW25ldyBydCxVYV1dfSx7cHJvdmlkZTppbCx1c2VDbGFzczppbCxkZXBzOltdfSx6YSx7cHJvdmlkZTpLbyx1c2VGYWN0b3J5OmZ1bmN0aW9uKCl7cmV0dXJuIEpvfSxkZXBzOltdfSx7cHJvdmlkZTpRbyx1c2VGYWN0b3J5OmZ1bmN0aW9uKCl7cmV0dXJuIFhvfSxkZXBzOltdfSx7cHJvdmlkZTpRYSx1c2VGYWN0b3J5OmZ1bmN0aW9uKHQpe3JldHVybiB2YSh0PXR8fCJ1bmRlZmluZWQiIT10eXBlb2YgJGxvY2FsaXplJiYkbG9jYWxpemUubG9jYWxlfHxtYSksdH0sZGVwczpbW25ldyBudChRYSksbmV3IHJ0LG5ldyBpdF1dfSx7cHJvdmlkZTpZYSx1c2VWYWx1ZToiVVNEIn1dO2xldCBqbD0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKHQpe319cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKEd0KHhsKSl9LHByb3ZpZGVyczpNbH0pLHR9KSgpLE5sPW51bGw7ZnVuY3Rpb24gVmwoKXtyZXR1cm4gTmx9Y29uc3QgQmw9bmV3IE50KCJEb2N1bWVudFRva2VuIik7bGV0IExsPSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSx0Llx1MDI3NXByb3Y9dXQoe2ZhY3Rvcnk6VWwsdG9rZW46dCxwcm92aWRlZEluOiJwbGF0Zm9ybSJ9KSx0fSkoKTtmdW5jdGlvbiBVbCgpe3JldHVybiBHdCgkbCl9Y29uc3QgSGw9bmV3IE50KCJMb2NhdGlvbiBJbml0aWFsaXplZCIpO2xldCAkbD0oKCk9PntjbGFzcyB0IGV4dGVuZHMgTGx7Y29uc3RydWN0b3IodCl7c3VwZXIoKSx0aGlzLl9kb2M9dCx0aGlzLl9pbml0KCl9X2luaXQoKXt0aGlzLmxvY2F0aW9uPVZsKCkuZ2V0TG9jYXRpb24oKSx0aGlzLl9oaXN0b3J5PVZsKCkuZ2V0SGlzdG9yeSgpfWdldEJhc2VIcmVmRnJvbURPTSgpe3JldHVybiBWbCgpLmdldEJhc2VIcmVmKHRoaXMuX2RvYyl9b25Qb3BTdGF0ZSh0KXtWbCgpLmdldEdsb2JhbEV2ZW50VGFyZ2V0KHRoaXMuX2RvYywid2luZG93IikuYWRkRXZlbnRMaXN0ZW5lcigicG9wc3RhdGUiLHQsITEpfW9uSGFzaENoYW5nZSh0KXtWbCgpLmdldEdsb2JhbEV2ZW50VGFyZ2V0KHRoaXMuX2RvYywid2luZG93IikuYWRkRXZlbnRMaXN0ZW5lcigiaGFzaGNoYW5nZSIsdCwhMSl9Z2V0IGhyZWYoKXtyZXR1cm4gdGhpcy5sb2NhdGlvbi5ocmVmfWdldCBwcm90b2NvbCgpe3JldHVybiB0aGlzLmxvY2F0aW9uLnByb3RvY29sfWdldCBob3N0bmFtZSgpe3JldHVybiB0aGlzLmxvY2F0aW9uLmhvc3RuYW1lfWdldCBwb3J0KCl7cmV0dXJuIHRoaXMubG9jYXRpb24ucG9ydH1nZXQgcGF0aG5hbWUoKXtyZXR1cm4gdGhpcy5sb2NhdGlvbi5wYXRobmFtZX1nZXQgc2VhcmNoKCl7cmV0dXJuIHRoaXMubG9jYXRpb24uc2VhcmNofWdldCBoYXNoKCl7cmV0dXJuIHRoaXMubG9jYXRpb24uaGFzaH1zZXQgcGF0aG5hbWUodCl7dGhpcy5sb2NhdGlvbi5wYXRobmFtZT10fXB1c2hTdGF0ZSh0LGUsbil7emwoKT90aGlzLl9oaXN0b3J5LnB1c2hTdGF0ZSh0LGUsbik6dGhpcy5sb2NhdGlvbi5oYXNoPW59cmVwbGFjZVN0YXRlKHQsZSxuKXt6bCgpP3RoaXMuX2hpc3RvcnkucmVwbGFjZVN0YXRlKHQsZSxuKTp0aGlzLmxvY2F0aW9uLmhhc2g9bn1mb3J3YXJkKCl7dGhpcy5faGlzdG9yeS5mb3J3YXJkKCl9YmFjaygpe3RoaXMuX2hpc3RvcnkuYmFjaygpfWdldFN0YXRlKCl7cmV0dXJuIHRoaXMuX2hpc3Rvcnkuc3RhdGV9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKEd0KEJsKSl9LHQuXHUwMjc1cHJvdj11dCh7ZmFjdG9yeTpxbCx0b2tlbjp0LHByb3ZpZGVkSW46InBsYXRmb3JtIn0pLHR9KSgpO2Z1bmN0aW9uIHpsKCl7cmV0dXJuISF3aW5kb3cuaGlzdG9yeS5wdXNoU3RhdGV9ZnVuY3Rpb24gcWwoKXtyZXR1cm4gbmV3ICRsKEd0KEJsKSl9ZnVuY3Rpb24gV2wodCxlKXtpZigwPT10Lmxlbmd0aClyZXR1cm4gZTtpZigwPT1lLmxlbmd0aClyZXR1cm4gdDtsZXQgbj0wO3JldHVybiB0LmVuZHNXaXRoKCIvIikmJm4rKyxlLnN0YXJ0c1dpdGgoIi8iKSYmbisrLDI9PW4/dCtlLnN1YnN0cmluZygxKToxPT1uP3QrZTp0KyIvIitlfWZ1bmN0aW9uIFpsKHQpe2NvbnN0IGU9dC5tYXRjaCgvI3xcP3wkLyksbj1lJiZlLmluZGV4fHx0Lmxlbmd0aDtyZXR1cm4gdC5zbGljZSgwLG4tKCIvIj09PXRbbi0xXT8xOjApKSt0LnNsaWNlKG4pfWZ1bmN0aW9uIEdsKHQpe3JldHVybiB0JiYiPyIhPT10WzBdPyI/Iit0OnR9bGV0IEtsPSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSx0Llx1MDI3NXByb3Y9dXQoe2ZhY3Rvcnk6UWwsdG9rZW46dCxwcm92aWRlZEluOiJyb290In0pLHR9KSgpO2Z1bmN0aW9uIFFsKHQpe2NvbnN0IGU9R3QoQmwpLmxvY2F0aW9uO3JldHVybiBuZXcgSmwoR3QoTGwpLGUmJmUub3JpZ2lufHwiIil9Y29uc3QgWWw9bmV3IE50KCJhcHBCYXNlSHJlZiIpO2xldCBKbD0oKCk9PntjbGFzcyB0IGV4dGVuZHMgS2x7Y29uc3RydWN0b3IodCxlKXtpZihzdXBlcigpLHRoaXMuX3BsYXRmb3JtTG9jYXRpb249dCxudWxsPT1lJiYoZT10aGlzLl9wbGF0Zm9ybUxvY2F0aW9uLmdldEJhc2VIcmVmRnJvbURPTSgpKSxudWxsPT1lKXRocm93IG5ldyBFcnJvcigiTm8gYmFzZSBocmVmIHNldC4gUGxlYXNlIHByb3ZpZGUgYSB2YWx1ZSBmb3IgdGhlIEFQUF9CQVNFX0hSRUYgdG9rZW4gb3IgYWRkIGEgYmFzZSBlbGVtZW50IHRvIHRoZSBkb2N1bWVudC4iKTt0aGlzLl9iYXNlSHJlZj1lfW9uUG9wU3RhdGUodCl7dGhpcy5fcGxhdGZvcm1Mb2NhdGlvbi5vblBvcFN0YXRlKHQpLHRoaXMuX3BsYXRmb3JtTG9jYXRpb24ub25IYXNoQ2hhbmdlKHQpfWdldEJhc2VIcmVmKCl7cmV0dXJuIHRoaXMuX2Jhc2VIcmVmfXByZXBhcmVFeHRlcm5hbFVybCh0KXtyZXR1cm4gV2wodGhpcy5fYmFzZUhyZWYsdCl9cGF0aCh0PSExKXtjb25zdCBlPXRoaXMuX3BsYXRmb3JtTG9jYXRpb24ucGF0aG5hbWUrR2wodGhpcy5fcGxhdGZvcm1Mb2NhdGlvbi5zZWFyY2gpLG49dGhpcy5fcGxhdGZvcm1Mb2NhdGlvbi5oYXNoO3JldHVybiBuJiZ0P2Ake2V9JHtufWA6ZX1wdXNoU3RhdGUodCxlLG4scil7Y29uc3Qgcz10aGlzLnByZXBhcmVFeHRlcm5hbFVybChuK0dsKHIpKTt0aGlzLl9wbGF0Zm9ybUxvY2F0aW9uLnB1c2hTdGF0ZSh0LGUscyl9cmVwbGFjZVN0YXRlKHQsZSxuLHIpe2NvbnN0IHM9dGhpcy5wcmVwYXJlRXh0ZXJuYWxVcmwobitHbChyKSk7dGhpcy5fcGxhdGZvcm1Mb2NhdGlvbi5yZXBsYWNlU3RhdGUodCxlLHMpfWZvcndhcmQoKXt0aGlzLl9wbGF0Zm9ybUxvY2F0aW9uLmZvcndhcmQoKX1iYWNrKCl7dGhpcy5fcGxhdGZvcm1Mb2NhdGlvbi5iYWNrKCl9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKEd0KExsKSxHdChZbCw4KSl9LHQuXHUwMjc1cHJvdj11dCh7dG9rZW46dCxmYWN0b3J5OnQuXHUwMjc1ZmFjfSksdH0pKCksWGw9KCgpPT57Y2xhc3MgdCBleHRlbmRzIEtse2NvbnN0cnVjdG9yKHQsZSl7c3VwZXIoKSx0aGlzLl9wbGF0Zm9ybUxvY2F0aW9uPXQsdGhpcy5fYmFzZUhyZWY9IiIsbnVsbCE9ZSYmKHRoaXMuX2Jhc2VIcmVmPWUpfW9uUG9wU3RhdGUodCl7dGhpcy5fcGxhdGZvcm1Mb2NhdGlvbi5vblBvcFN0YXRlKHQpLHRoaXMuX3BsYXRmb3JtTG9jYXRpb24ub25IYXNoQ2hhbmdlKHQpfWdldEJhc2VIcmVmKCl7cmV0dXJuIHRoaXMuX2Jhc2VIcmVmfXBhdGgodD0hMSl7bGV0IGU9dGhpcy5fcGxhdGZvcm1Mb2NhdGlvbi5oYXNoO3JldHVybiBudWxsPT1lJiYoZT0iIyIpLGUubGVuZ3RoPjA/ZS5zdWJzdHJpbmcoMSk6ZX1wcmVwYXJlRXh0ZXJuYWxVcmwodCl7Y29uc3QgZT1XbCh0aGlzLl9iYXNlSHJlZix0KTtyZXR1cm4gZS5sZW5ndGg+MD8iIyIrZTplfXB1c2hTdGF0ZSh0LGUsbixyKXtsZXQgcz10aGlzLnByZXBhcmVFeHRlcm5hbFVybChuK0dsKHIpKTswPT1zLmxlbmd0aCYmKHM9dGhpcy5fcGxhdGZvcm1Mb2NhdGlvbi5wYXRobmFtZSksdGhpcy5fcGxhdGZvcm1Mb2NhdGlvbi5wdXNoU3RhdGUodCxlLHMpfXJlcGxhY2VTdGF0ZSh0LGUsbixyKXtsZXQgcz10aGlzLnByZXBhcmVFeHRlcm5hbFVybChuK0dsKHIpKTswPT1zLmxlbmd0aCYmKHM9dGhpcy5fcGxhdGZvcm1Mb2NhdGlvbi5wYXRobmFtZSksdGhpcy5fcGxhdGZvcm1Mb2NhdGlvbi5yZXBsYWNlU3RhdGUodCxlLHMpfWZvcndhcmQoKXt0aGlzLl9wbGF0Zm9ybUxvY2F0aW9uLmZvcndhcmQoKX1iYWNrKCl7dGhpcy5fcGxhdGZvcm1Mb2NhdGlvbi5iYWNrKCl9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKEd0KExsKSxHdChZbCw4KSl9LHQuXHUwMjc1cHJvdj11dCh7dG9rZW46dCxmYWN0b3J5OnQuXHUwMjc1ZmFjfSksdH0pKCksdHU9KCgpPT57Y2xhc3MgdHtjb25zdHJ1Y3Rvcih0LGUpe3RoaXMuX3N1YmplY3Q9bmV3IENhLHRoaXMuX3VybENoYW5nZUxpc3RlbmVycz1bXSx0aGlzLl9wbGF0Zm9ybVN0cmF0ZWd5PXQ7Y29uc3Qgbj10aGlzLl9wbGF0Zm9ybVN0cmF0ZWd5LmdldEJhc2VIcmVmKCk7dGhpcy5fcGxhdGZvcm1Mb2NhdGlvbj1lLHRoaXMuX2Jhc2VIcmVmPVpsKG51KG4pKSx0aGlzLl9wbGF0Zm9ybVN0cmF0ZWd5Lm9uUG9wU3RhdGUodD0+e3RoaXMuX3N1YmplY3QuZW1pdCh7dXJsOnRoaXMucGF0aCghMCkscG9wOiEwLHN0YXRlOnQuc3RhdGUsdHlwZTp0LnR5cGV9KX0pfXBhdGgodD0hMSl7cmV0dXJuIHRoaXMubm9ybWFsaXplKHRoaXMuX3BsYXRmb3JtU3RyYXRlZ3kucGF0aCh0KSl9Z2V0U3RhdGUoKXtyZXR1cm4gdGhpcy5fcGxhdGZvcm1Mb2NhdGlvbi5nZXRTdGF0ZSgpfWlzQ3VycmVudFBhdGhFcXVhbFRvKHQsZT0iIil7cmV0dXJuIHRoaXMucGF0aCgpPT10aGlzLm5vcm1hbGl6ZSh0K0dsKGUpKX1ub3JtYWxpemUoZSl7cmV0dXJuIHQuc3RyaXBUcmFpbGluZ1NsYXNoKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQmJmUuc3RhcnRzV2l0aCh0KT9lLnN1YnN0cmluZyh0Lmxlbmd0aCk6ZX0odGhpcy5fYmFzZUhyZWYsbnUoZSkpKX1wcmVwYXJlRXh0ZXJuYWxVcmwodCl7cmV0dXJuIHQmJiIvIiE9PXRbMF0mJih0PSIvIit0KSx0aGlzLl9wbGF0Zm9ybVN0cmF0ZWd5LnByZXBhcmVFeHRlcm5hbFVybCh0KX1nbyh0LGU9IiIsbj1udWxsKXt0aGlzLl9wbGF0Zm9ybVN0cmF0ZWd5LnB1c2hTdGF0ZShuLCIiLHQsZSksdGhpcy5fbm90aWZ5VXJsQ2hhbmdlTGlzdGVuZXJzKHRoaXMucHJlcGFyZUV4dGVybmFsVXJsKHQrR2woZSkpLG4pfXJlcGxhY2VTdGF0ZSh0LGU9IiIsbj1udWxsKXt0aGlzLl9wbGF0Zm9ybVN0cmF0ZWd5LnJlcGxhY2VTdGF0ZShuLCIiLHQsZSksdGhpcy5fbm90aWZ5VXJsQ2hhbmdlTGlzdGVuZXJzKHRoaXMucHJlcGFyZUV4dGVybmFsVXJsKHQrR2woZSkpLG4pfWZvcndhcmQoKXt0aGlzLl9wbGF0Zm9ybVN0cmF0ZWd5LmZvcndhcmQoKX1iYWNrKCl7dGhpcy5fcGxhdGZvcm1TdHJhdGVneS5iYWNrKCl9b25VcmxDaGFuZ2UodCl7dGhpcy5fdXJsQ2hhbmdlTGlzdGVuZXJzLnB1c2godCksdGhpcy5fdXJsQ2hhbmdlU3Vic2NyaXB0aW9ufHwodGhpcy5fdXJsQ2hhbmdlU3Vic2NyaXB0aW9uPXRoaXMuc3Vic2NyaWJlKHQ9Pnt0aGlzLl9ub3RpZnlVcmxDaGFuZ2VMaXN0ZW5lcnModC51cmwsdC5zdGF0ZSl9KSl9X25vdGlmeVVybENoYW5nZUxpc3RlbmVycyh0PSIiLGUpe3RoaXMuX3VybENoYW5nZUxpc3RlbmVycy5mb3JFYWNoKG49Pm4odCxlKSl9c3Vic2NyaWJlKHQsZSxuKXtyZXR1cm4gdGhpcy5fc3ViamVjdC5zdWJzY3JpYmUoe25leHQ6dCxlcnJvcjplLGNvbXBsZXRlOm59KX19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCkoR3QoS2wpLEd0KExsKSl9LHQubm9ybWFsaXplUXVlcnlQYXJhbXM9R2wsdC5qb2luV2l0aFNsYXNoPVdsLHQuc3RyaXBUcmFpbGluZ1NsYXNoPVpsLHQuXHUwMjc1cHJvdj11dCh7ZmFjdG9yeTpldSx0b2tlbjp0LHByb3ZpZGVkSW46InJvb3QifSksdH0pKCk7ZnVuY3Rpb24gZXUoKXtyZXR1cm4gbmV3IHR1KEd0KEtsKSxHdChMbCkpfWZ1bmN0aW9uIG51KHQpe3JldHVybiB0LnJlcGxhY2UoL1wvaW5kZXguaHRtbCQvLCIiKX1jb25zdCBydT17QURQOlt2b2lkIDAsdm9pZCAwLDBdLEFGTjpbdm9pZCAwLHZvaWQgMCwwXSxBTEw6W3ZvaWQgMCx2b2lkIDAsMF0sQU1EOlt2b2lkIDAsdm9pZCAwLDJdLEFPQTpbdm9pZCAwLCJLeiJdLEFSUzpbdm9pZCAwLCIkIl0sQVVEOlsiQSQiLCIkIl0sQkFNOlt2b2lkIDAsIktNIl0sQkJEOlt2b2lkIDAsIiQiXSxCRFQ6W3ZvaWQgMCwiXHUwOWYzIl0sQkhEOlt2b2lkIDAsdm9pZCAwLDNdLEJJRjpbdm9pZCAwLHZvaWQgMCwwXSxCTUQ6W3ZvaWQgMCwiJCJdLEJORDpbdm9pZCAwLCIkIl0sQk9COlt2b2lkIDAsIkJzIl0sQlJMOlsiUiQiXSxCU0Q6W3ZvaWQgMCwiJCJdLEJXUDpbdm9pZCAwLCJQIl0sQllOOlt2b2lkIDAsIlx1MDQ0MC4iLDJdLEJZUjpbdm9pZCAwLHZvaWQgMCwwXSxCWkQ6W3ZvaWQgMCwiJCJdLENBRDpbIkNBJCIsIiQiLDJdLENIRjpbdm9pZCAwLHZvaWQgMCwyXSxDTEY6W3ZvaWQgMCx2b2lkIDAsNF0sQ0xQOlt2b2lkIDAsIiQiLDBdLENOWTpbIkNOXHhhNSIsIlx4YTUiXSxDT1A6W3ZvaWQgMCwiJCIsMl0sQ1JDOlt2b2lkIDAsIlx1MjBhMSIsMl0sQ1VDOlt2b2lkIDAsIiQiXSxDVVA6W3ZvaWQgMCwiJCJdLENaSzpbdm9pZCAwLCJLXHUwMTBkIiwyXSxESkY6W3ZvaWQgMCx2b2lkIDAsMF0sREtLOlt2b2lkIDAsImtyIiwyXSxET1A6W3ZvaWQgMCwiJCJdLEVHUDpbdm9pZCAwLCJFXHhhMyJdLEVTUDpbdm9pZCAwLCJcdTIwYTciLDBdLEVVUjpbIlx1MjBhYyJdLEZKRDpbdm9pZCAwLCIkIl0sRktQOlt2b2lkIDAsIlx4YTMiXSxHQlA6WyJceGEzIl0sR0VMOlt2b2lkIDAsIlx1MjBiZSJdLEdJUDpbdm9pZCAwLCJceGEzIl0sR05GOlt2b2lkIDAsIkZHIiwwXSxHVFE6W3ZvaWQgMCwiUSJdLEdZRDpbdm9pZCAwLCIkIiwyXSxIS0Q6WyJISyQiLCIkIl0sSE5MOlt2b2lkIDAsIkwiXSxIUks6W3ZvaWQgMCwia24iXSxIVUY6W3ZvaWQgMCwiRnQiLDJdLElEUjpbdm9pZCAwLCJScCIsMl0sSUxTOlsiXHUyMGFhIl0sSU5SOlsiXHUyMGI5Il0sSVFEOlt2b2lkIDAsdm9pZCAwLDBdLElSUjpbdm9pZCAwLHZvaWQgMCwwXSxJU0s6W3ZvaWQgMCwia3IiLDBdLElUTDpbdm9pZCAwLHZvaWQgMCwwXSxKTUQ6W3ZvaWQgMCwiJCJdLEpPRDpbdm9pZCAwLHZvaWQgMCwzXSxKUFk6WyJceGE1Iix2b2lkIDAsMF0sS0hSOlt2b2lkIDAsIlx1MTdkYiJdLEtNRjpbdm9pZCAwLCJDRiIsMF0sS1BXOlt2b2lkIDAsIlx1MjBhOSIsMF0sS1JXOlsiXHUyMGE5Iix2b2lkIDAsMF0sS1dEOlt2b2lkIDAsdm9pZCAwLDNdLEtZRDpbdm9pZCAwLCIkIl0sS1pUOlt2b2lkIDAsIlx1MjBiOCJdLExBSzpbdm9pZCAwLCJcdTIwYWQiLDBdLExCUDpbdm9pZCAwLCJMXHhhMyIsMF0sTEtSOlt2b2lkIDAsIlJzIl0sTFJEOlt2b2lkIDAsIiQiXSxMVEw6W3ZvaWQgMCwiTHQiXSxMVUY6W3ZvaWQgMCx2b2lkIDAsMF0sTFZMOlt2b2lkIDAsIkxzIl0sTFlEOlt2b2lkIDAsdm9pZCAwLDNdLE1HQTpbdm9pZCAwLCJBciIsMF0sTUdGOlt2b2lkIDAsdm9pZCAwLDBdLE1NSzpbdm9pZCAwLCJLIiwwXSxNTlQ6W3ZvaWQgMCwiXHUyMGFlIiwyXSxNUk86W3ZvaWQgMCx2b2lkIDAsMF0sTVVSOlt2b2lkIDAsIlJzIiwyXSxNWE46WyJNWCQiLCIkIl0sTVlSOlt2b2lkIDAsIlJNIl0sTkFEOlt2b2lkIDAsIiQiXSxOR046W3ZvaWQgMCwiXHUyMGE2Il0sTklPOlt2b2lkIDAsIkMkIl0sTk9LOlt2b2lkIDAsImtyIiwyXSxOUFI6W3ZvaWQgMCwiUnMiXSxOWkQ6WyJOWiQiLCIkIl0sT01SOlt2b2lkIDAsdm9pZCAwLDNdLFBIUDpbdm9pZCAwLCJcdTIwYjEiXSxQS1I6W3ZvaWQgMCwiUnMiLDJdLFBMTjpbdm9pZCAwLCJ6XHUwMTQyIl0sUFlHOlt2b2lkIDAsIlx1MjBiMiIsMF0sUk9OOlt2b2lkIDAsImxlaSJdLFJTRDpbdm9pZCAwLHZvaWQgMCwwXSxSVUI6W3ZvaWQgMCwiXHUyMGJkIl0sUlVSOlt2b2lkIDAsIlx1MDQ0MC4iXSxSV0Y6W3ZvaWQgMCwiUkYiLDBdLFNCRDpbdm9pZCAwLCIkIl0sU0VLOlt2b2lkIDAsImtyIiwyXSxTR0Q6W3ZvaWQgMCwiJCJdLFNIUDpbdm9pZCAwLCJceGEzIl0sU0xMOlt2b2lkIDAsdm9pZCAwLDBdLFNPUzpbdm9pZCAwLHZvaWQgMCwwXSxTUkQ6W3ZvaWQgMCwiJCJdLFNTUDpbdm9pZCAwLCJceGEzIl0sU1REOlt2b2lkIDAsdm9pZCAwLDBdLFNUTjpbdm9pZCAwLCJEYiJdLFNZUDpbdm9pZCAwLCJceGEzIiwwXSxUSEI6W3ZvaWQgMCwiXHUwZTNmIl0sVE1NOlt2b2lkIDAsdm9pZCAwLDBdLFRORDpbdm9pZCAwLHZvaWQgMCwzXSxUT1A6W3ZvaWQgMCwiVCQiXSxUUkw6W3ZvaWQgMCx2b2lkIDAsMF0sVFJZOlt2b2lkIDAsIlx1MjBiYSJdLFRURDpbdm9pZCAwLCIkIl0sVFdEOlsiTlQkIiwiJCIsMl0sVFpTOlt2b2lkIDAsdm9pZCAwLDJdLFVBSDpbdm9pZCAwLCJcdTIwYjQiXSxVR1g6W3ZvaWQgMCx2b2lkIDAsMF0sVVNEOlsiJCJdLFVZSTpbdm9pZCAwLHZvaWQgMCwwXSxVWVU6W3ZvaWQgMCwiJCJdLFVZVzpbdm9pZCAwLHZvaWQgMCw0XSxVWlM6W3ZvaWQgMCx2b2lkIDAsMl0sVkVGOlt2b2lkIDAsIkJzIiwyXSxWTkQ6WyJcdTIwYWIiLHZvaWQgMCwwXSxWVVY6W3ZvaWQgMCx2b2lkIDAsMF0sWEFGOlsiRkNGQSIsdm9pZCAwLDBdLFhDRDpbIkVDJCIsIiQiXSxYT0Y6WyJDRkEiLHZvaWQgMCwwXSxYUEY6WyJDRlBGIix2b2lkIDAsMF0sWFhYOlsiXHhhNCJdLFlFUjpbdm9pZCAwLHZvaWQgMCwwXSxaQVI6W3ZvaWQgMCwiUiJdLFpNSzpbdm9pZCAwLHZvaWQgMCwwXSxaTVc6W3ZvaWQgMCwiWksiXSxaV0Q6W3ZvaWQgMCx2b2lkIDAsMF19O3ZhciBzdT1mdW5jdGlvbih0KXtyZXR1cm4gdFt0LkRlY2ltYWw9MF09IkRlY2ltYWwiLHRbdC5QZXJjZW50PTFdPSJQZXJjZW50Iix0W3QuQ3VycmVuY3k9Ml09IkN1cnJlbmN5Iix0W3QuU2NpZW50aWZpYz0zXT0iU2NpZW50aWZpYyIsdH0oe30pLGl1PWZ1bmN0aW9uKHQpe3JldHVybiB0W3QuWmVybz0wXT0iWmVybyIsdFt0Lk9uZT0xXT0iT25lIix0W3QuVHdvPTJdPSJUd28iLHRbdC5GZXc9M109IkZldyIsdFt0Lk1hbnk9NF09Ik1hbnkiLHRbdC5PdGhlcj01XT0iT3RoZXIiLHR9KHt9KSxvdT1mdW5jdGlvbih0KXtyZXR1cm4gdFt0LkZvcm1hdD0wXT0iRm9ybWF0Iix0W3QuU3RhbmRhbG9uZT0xXT0iU3RhbmRhbG9uZSIsdH0oe30pLGF1PWZ1bmN0aW9uKHQpe3JldHVybiB0W3QuTmFycm93PTBdPSJOYXJyb3ciLHRbdC5BYmJyZXZpYXRlZD0xXT0iQWJicmV2aWF0ZWQiLHRbdC5XaWRlPTJdPSJXaWRlIix0W3QuU2hvcnQ9M109IlNob3J0Iix0fSh7fSksbHU9ZnVuY3Rpb24odCl7cmV0dXJuIHRbdC5TaG9ydD0wXT0iU2hvcnQiLHRbdC5NZWRpdW09MV09Ik1lZGl1bSIsdFt0Lkxvbmc9Ml09IkxvbmciLHRbdC5GdWxsPTNdPSJGdWxsIix0fSh7fSksdXU9ZnVuY3Rpb24odCl7cmV0dXJuIHRbdC5EZWNpbWFsPTBdPSJEZWNpbWFsIix0W3QuR3JvdXA9MV09Ikdyb3VwIix0W3QuTGlzdD0yXT0iTGlzdCIsdFt0LlBlcmNlbnRTaWduPTNdPSJQZXJjZW50U2lnbiIsdFt0LlBsdXNTaWduPTRdPSJQbHVzU2lnbiIsdFt0Lk1pbnVzU2lnbj01XT0iTWludXNTaWduIix0W3QuRXhwb25lbnRpYWw9Nl09IkV4cG9uZW50aWFsIix0W3QuU3VwZXJzY3JpcHRpbmdFeHBvbmVudD03XT0iU3VwZXJzY3JpcHRpbmdFeHBvbmVudCIsdFt0LlBlck1pbGxlPThdPSJQZXJNaWxsZSIsdFt0WzEvMF09OV09IkluZmluaXR5Iix0W3QuTmFOPTEwXT0iTmFOIix0W3QuVGltZVNlcGFyYXRvcj0xMV09IlRpbWVTZXBhcmF0b3IiLHRbdC5DdXJyZW5jeURlY2ltYWw9MTJdPSJDdXJyZW5jeURlY2ltYWwiLHRbdC5DdXJyZW5jeUdyb3VwPTEzXT0iQ3VycmVuY3lHcm91cCIsdH0oe30pO2Z1bmN0aW9uIGN1KHQsZSl7cmV0dXJuIG11KHBhKHQpW2dhLkRhdGVGb3JtYXRdLGUpfWZ1bmN0aW9uIGh1KHQsZSl7cmV0dXJuIG11KHBhKHQpW2dhLlRpbWVGb3JtYXRdLGUpfWZ1bmN0aW9uIGR1KHQsZSl7cmV0dXJuIG11KHBhKHQpW2dhLkRhdGVUaW1lRm9ybWF0XSxlKX1mdW5jdGlvbiBwdSh0LGUpe2NvbnN0IG49cGEodCkscj1uW2dhLk51bWJlclN5bWJvbHNdW2VdO2lmKHZvaWQgMD09PXIpe2lmKGU9PT11dS5DdXJyZW5jeURlY2ltYWwpcmV0dXJuIG5bZ2EuTnVtYmVyU3ltYm9sc11bdXUuRGVjaW1hbF07aWYoZT09PXV1LkN1cnJlbmN5R3JvdXApcmV0dXJuIG5bZ2EuTnVtYmVyU3ltYm9sc11bdXUuR3JvdXBdfXJldHVybiByfWZ1bmN0aW9uIGZ1KHQsZSl7cmV0dXJuIHBhKHQpW2dhLk51bWJlckZvcm1hdHNdW2VdfWZ1bmN0aW9uIGd1KHQpe2lmKCF0W2dhLkV4dHJhRGF0YV0pdGhyb3cgbmV3IEVycm9yKGBNaXNzaW5nIGV4dHJhIGxvY2FsZSBkYXRhIGZvciB0aGUgbG9jYWxlICIke3RbZ2EuTG9jYWxlSWRdfSIuIFVzZSAicmVnaXN0ZXJMb2NhbGVEYXRhIiB0byBsb2FkIG5ldyBkYXRhLiBTZWUgdGhlICJJMThuIGd1aWRlIiBvbiBhbmd1bGFyLmlvIHRvIGtub3cgbW9yZS5gKX1mdW5jdGlvbiBtdSh0LGUpe2ZvcihsZXQgbj1lO24+LTE7bi0tKWlmKHZvaWQgMCE9PXRbbl0pcmV0dXJuIHRbbl07dGhyb3cgbmV3IEVycm9yKCJMb2NhbGUgZGF0YSBBUEk6IGxvY2FsZSBkYXRhIHVuZGVmaW5lZCIpfWZ1bmN0aW9uIHl1KHQpe2NvbnN0W2Usbl09dC5zcGxpdCgiOiIpO3JldHVybntob3VyczorZSxtaW51dGVzOitufX1jb25zdCB2dT0vXihcZHs0fSktPyhcZFxkKS0/KFxkXGQpKD86VChcZFxkKSg/Ojo/KFxkXGQpKD86Oj8oXGRcZCkoPzpcLihcZCspKT8pPyk/KFp8KFsrLV0pKFxkXGQpOj8oXGRcZCkpPyk/JC8sYnU9e30sd3U9LygoPzpbXkd5TUx3V2RFYWJCaEhtc1N6Wk8nXSspfCg/OicoPzpbXiddfCcnKSonKXwoPzpHezEsNX18eXsxLDR9fE17MSw1fXxMezEsNX18d3sxLDJ9fFd7MX18ZHsxLDJ9fEV7MSw2fXxhezEsNX18YnsxLDV9fEJ7MSw1fXxoezEsMn18SHsxLDJ9fG17MSwyfXxzezEsMn18U3sxLDN9fHp7MSw0fXxaezEsNX18T3sxLDR9KSkoW1xzXFNdKikvO3ZhciBfdT1mdW5jdGlvbih0KXtyZXR1cm4gdFt0LlNob3J0PTBdPSJTaG9ydCIsdFt0LlNob3J0R01UPTFdPSJTaG9ydEdNVCIsdFt0Lkxvbmc9Ml09IkxvbmciLHRbdC5FeHRlbmRlZD0zXT0iRXh0ZW5kZWQiLHR9KHt9KSxDdT1mdW5jdGlvbih0KXtyZXR1cm4gdFt0LkZ1bGxZZWFyPTBdPSJGdWxsWWVhciIsdFt0Lk1vbnRoPTFdPSJNb250aCIsdFt0LkRhdGU9Ml09IkRhdGUiLHRbdC5Ib3Vycz0zXT0iSG91cnMiLHRbdC5NaW51dGVzPTRdPSJNaW51dGVzIix0W3QuU2Vjb25kcz01XT0iU2Vjb25kcyIsdFt0LkZyYWN0aW9uYWxTZWNvbmRzPTZdPSJGcmFjdGlvbmFsU2Vjb25kcyIsdFt0LkRheT03XT0iRGF5Iix0fSh7fSksRHU9ZnVuY3Rpb24odCl7cmV0dXJuIHRbdC5EYXlQZXJpb2RzPTBdPSJEYXlQZXJpb2RzIix0W3QuRGF5cz0xXT0iRGF5cyIsdFt0Lk1vbnRocz0yXT0iTW9udGhzIix0W3QuRXJhcz0zXT0iRXJhcyIsdH0oe30pO2Z1bmN0aW9uIEV1KHQsZSl7cmV0dXJuIGUmJih0PXQucmVwbGFjZSgvXHsoW159XSspfS9nLChmdW5jdGlvbih0LG4pe3JldHVybiBudWxsIT1lJiZuIGluIGU/ZVtuXTp0fSkpKSx0fWZ1bmN0aW9uIEF1KHQsZSxuPSItIixyLHMpe2xldCBpPSIiOyh0PDB8fHMmJnQ8PTApJiYocz90PTEtdDoodD0tdCxpPW4pKTtsZXQgbz1TdHJpbmcodCk7Zm9yKDtvLmxlbmd0aDxlOylvPSIwIitvO3JldHVybiByJiYobz1vLnN1YnN0cihvLmxlbmd0aC1lKSksaStvfWZ1bmN0aW9uIFN1KHQsZSxuPTAscj0hMSxzPSExKXtyZXR1cm4gZnVuY3Rpb24oaSxvKXtsZXQgYT1mdW5jdGlvbih0LGUpe3N3aXRjaCh0KXtjYXNlIEN1LkZ1bGxZZWFyOnJldHVybiBlLmdldEZ1bGxZZWFyKCk7Y2FzZSBDdS5Nb250aDpyZXR1cm4gZS5nZXRNb250aCgpO2Nhc2UgQ3UuRGF0ZTpyZXR1cm4gZS5nZXREYXRlKCk7Y2FzZSBDdS5Ib3VyczpyZXR1cm4gZS5nZXRIb3VycygpO2Nhc2UgQ3UuTWludXRlczpyZXR1cm4gZS5nZXRNaW51dGVzKCk7Y2FzZSBDdS5TZWNvbmRzOnJldHVybiBlLmdldFNlY29uZHMoKTtjYXNlIEN1LkZyYWN0aW9uYWxTZWNvbmRzOnJldHVybiBlLmdldE1pbGxpc2Vjb25kcygpO2Nhc2UgQ3UuRGF5OnJldHVybiBlLmdldERheSgpO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKGBVbmtub3duIERhdGVUeXBlIHZhbHVlICIke3R9Ii5gKX19KHQsaSk7aWYoKG4+MHx8YT4tbikmJihhKz1uKSx0PT09Q3UuSG91cnMpMD09PWEmJi0xMj09PW4mJihhPTEyKTtlbHNlIGlmKHQ9PT1DdS5GcmFjdGlvbmFsU2Vjb25kcylyZXR1cm4gbD1lLEF1KGEsMykuc3Vic3RyKDAsbCk7dmFyIGw7Y29uc3QgdT1wdShvLHV1Lk1pbnVzU2lnbik7cmV0dXJuIEF1KGEsZSx1LHIscyl9fWZ1bmN0aW9uIHh1KHQsZSxuPW91LkZvcm1hdCxyPSExKXtyZXR1cm4gZnVuY3Rpb24ocyxpKXtyZXR1cm4gZnVuY3Rpb24odCxlLG4scixzLGkpe3N3aXRjaChuKXtjYXNlIER1Lk1vbnRoczpyZXR1cm4gZnVuY3Rpb24odCxlLG4pe2NvbnN0IHI9cGEodCkscz1tdShbcltnYS5Nb250aHNGb3JtYXRdLHJbZ2EuTW9udGhzU3RhbmRhbG9uZV1dLGUpO3JldHVybiBtdShzLG4pfShlLHMscilbdC5nZXRNb250aCgpXTtjYXNlIER1LkRheXM6cmV0dXJuIGZ1bmN0aW9uKHQsZSxuKXtjb25zdCByPXBhKHQpLHM9bXUoW3JbZ2EuRGF5c0Zvcm1hdF0scltnYS5EYXlzU3RhbmRhbG9uZV1dLGUpO3JldHVybiBtdShzLG4pfShlLHMscilbdC5nZXREYXkoKV07Y2FzZSBEdS5EYXlQZXJpb2RzOmNvbnN0IG89dC5nZXRIb3VycygpLGE9dC5nZXRNaW51dGVzKCk7aWYoaSl7Y29uc3QgdD1mdW5jdGlvbih0KXtjb25zdCBlPXBhKHQpO3JldHVybiBndShlKSwoZVtnYS5FeHRyYURhdGFdWzJdfHxbXSkubWFwKHQ9PiJzdHJpbmciPT10eXBlb2YgdD95dSh0KTpbeXUodFswXSkseXUodFsxXSldKX0oZSksbj1mdW5jdGlvbih0LGUsbil7Y29uc3Qgcj1wYSh0KTtndShyKTtjb25zdCBzPW11KFtyW2dhLkV4dHJhRGF0YV1bMF0scltnYS5FeHRyYURhdGFdWzFdXSxlKXx8W107cmV0dXJuIG11KHMsbil8fFtdfShlLHMsciksaT10LmZpbmRJbmRleCh0PT57aWYoQXJyYXkuaXNBcnJheSh0KSl7Y29uc3RbZSxuXT10LHI9bz49ZS5ob3VycyYmYT49ZS5taW51dGVzLHM9bzxuLmhvdXJzfHxvPT09bi5ob3VycyYmYTxuLm1pbnV0ZXM7aWYoZS5ob3VyczxuLmhvdXJzKXtpZihyJiZzKXJldHVybiEwfWVsc2UgaWYocnx8cylyZXR1cm4hMH1lbHNlIGlmKHQuaG91cnM9PT1vJiZ0Lm1pbnV0ZXM9PT1hKXJldHVybiEwO3JldHVybiExfSk7aWYoLTEhPT1pKXJldHVybiBuW2ldfXJldHVybiBmdW5jdGlvbih0LGUsbil7Y29uc3Qgcj1wYSh0KSxzPW11KFtyW2dhLkRheVBlcmlvZHNGb3JtYXRdLHJbZ2EuRGF5UGVyaW9kc1N0YW5kYWxvbmVdXSxlKTtyZXR1cm4gbXUocyxuKX0oZSxzLHIpW288MTI/MDoxXTtjYXNlIER1LkVyYXM6cmV0dXJuIGZ1bmN0aW9uKHQsZSl7cmV0dXJuIG11KHBhKHQpW2dhLkVyYXNdLGUpfShlLHIpW3QuZ2V0RnVsbFllYXIoKTw9MD8wOjFdO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKCJ1bmV4cGVjdGVkIHRyYW5zbGF0aW9uIHR5cGUgIituKX19KHMsaSx0LGUsbixyKX19ZnVuY3Rpb24ga3UodCl7cmV0dXJuIGZ1bmN0aW9uKGUsbixyKXtjb25zdCBzPS0xKnIsaT1wdShuLHV1Lk1pbnVzU2lnbiksbz1zPjA/TWF0aC5mbG9vcihzLzYwKTpNYXRoLmNlaWwocy82MCk7c3dpdGNoKHQpe2Nhc2UgX3UuU2hvcnQ6cmV0dXJuKHM+PTA/IisiOiIiKStBdShvLDIsaSkrQXUoTWF0aC5hYnMocyU2MCksMixpKTtjYXNlIF91LlNob3J0R01UOnJldHVybiJHTVQiKyhzPj0wPyIrIjoiIikrQXUobywxLGkpO2Nhc2UgX3UuTG9uZzpyZXR1cm4iR01UIisocz49MD8iKyI6IiIpK0F1KG8sMixpKSsiOiIrQXUoTWF0aC5hYnMocyU2MCksMixpKTtjYXNlIF91LkV4dGVuZGVkOnJldHVybiAwPT09cj8iWiI6KHM+PTA/IisiOiIiKStBdShvLDIsaSkrIjoiK0F1KE1hdGguYWJzKHMlNjApLDIsaSk7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gem9uZSB3aWR0aCAiJHt0fSJgKX19fWZ1bmN0aW9uIFR1KHQsZT0hMSl7cmV0dXJuIGZ1bmN0aW9uKG4scil7bGV0IHM7aWYoZSl7Y29uc3QgdD1uZXcgRGF0ZShuLmdldEZ1bGxZZWFyKCksbi5nZXRNb250aCgpLDEpLmdldERheSgpLTEsZT1uLmdldERhdGUoKTtzPTErTWF0aC5mbG9vcigoZSt0KS83KX1lbHNle2NvbnN0IHQ9KGk9bixuZXcgRGF0ZShpLmdldEZ1bGxZZWFyKCksaS5nZXRNb250aCgpLGkuZ2V0RGF0ZSgpKyg0LWkuZ2V0RGF5KCkpKSksZT1mdW5jdGlvbih0KXtjb25zdCBlPW5ldyBEYXRlKHQsMCwxKS5nZXREYXkoKTtyZXR1cm4gbmV3IERhdGUodCwwLDErKGU8PTQ/NDoxMSktZSl9KHQuZ2V0RnVsbFllYXIoKSkscj10LmdldFRpbWUoKS1lLmdldFRpbWUoKTtzPTErTWF0aC5yb3VuZChyLzYwNDhlNSl9dmFyIGk7cmV0dXJuIEF1KHMsdCxwdShyLHV1Lk1pbnVzU2lnbikpfX1jb25zdCBGdT17fTtmdW5jdGlvbiBPdSh0LGUpe3Q9dC5yZXBsYWNlKC86L2csIiIpO2NvbnN0IG49RGF0ZS5wYXJzZSgiSmFuIDAxLCAxOTcwIDAwOjAwOjAwICIrdCkvNmU0O3JldHVybiBpc05hTihuKT9lOm59ZnVuY3Rpb24gUHUodCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBEYXRlJiYhaXNOYU4odC52YWx1ZU9mKCkpfWNvbnN0IEl1PS9eKFxkKyk/XC4oKFxkKykoLShcZCspKT8pPyQvLFJ1PSIuIixNdT0iMCI7ZnVuY3Rpb24ganUodCxlLG4scixzLGksbz0hMSl7bGV0IGE9IiIsbD0hMTtpZihpc0Zpbml0ZSh0KSl7bGV0IHU9ZnVuY3Rpb24odCl7bGV0IGUsbixyLHMsaSxvPU1hdGguYWJzKHQpKyIiLGE9MDtmb3IoKG49by5pbmRleE9mKFJ1KSk+LTEmJihvPW8ucmVwbGFjZShSdSwiIikpLChyPW8uc2VhcmNoKC9lL2kpKT4wPyhuPDAmJihuPXIpLG4rPStvLnNsaWNlKHIrMSksbz1vLnN1YnN0cmluZygwLHIpKTpuPDAmJihuPW8ubGVuZ3RoKSxyPTA7by5jaGFyQXQocik9PT1NdTtyKyspO2lmKHI9PT0oaT1vLmxlbmd0aCkpZT1bMF0sbj0xO2Vsc2V7Zm9yKGktLTtvLmNoYXJBdChpKT09PU11OylpLS07Zm9yKG4tPXIsZT1bXSxzPTA7cjw9aTtyKysscysrKWVbc109TnVtYmVyKG8uY2hhckF0KHIpKX1yZXR1cm4gbj4yMiYmKGU9ZS5zcGxpY2UoMCwyMSksYT1uLTEsbj0xKSx7ZGlnaXRzOmUsZXhwb25lbnQ6YSxpbnRlZ2VyTGVuOm59fSh0KTtvJiYodT1mdW5jdGlvbih0KXtpZigwPT09dC5kaWdpdHNbMF0pcmV0dXJuIHQ7Y29uc3QgZT10LmRpZ2l0cy5sZW5ndGgtdC5pbnRlZ2VyTGVuO3JldHVybiB0LmV4cG9uZW50P3QuZXhwb25lbnQrPTI6KDA9PT1lP3QuZGlnaXRzLnB1c2goMCwwKToxPT09ZSYmdC5kaWdpdHMucHVzaCgwKSx0LmludGVnZXJMZW4rPTIpLHR9KHUpKTtsZXQgYz1lLm1pbkludCxoPWUubWluRnJhYyxkPWUubWF4RnJhYztpZihpKXtjb25zdCB0PWkubWF0Y2goSXUpO2lmKG51bGw9PT10KXRocm93IG5ldyBFcnJvcihpKyIgaXMgbm90IGEgdmFsaWQgZGlnaXQgaW5mbyIpO2NvbnN0IGU9dFsxXSxuPXRbM10scj10WzVdO251bGwhPWUmJihjPVZ1KGUpKSxudWxsIT1uJiYoaD1WdShuKSksbnVsbCE9cj9kPVZ1KHIpOm51bGwhPW4mJmg+ZCYmKGQ9aCl9IWZ1bmN0aW9uKHQsZSxuKXtpZihlPm4pdGhyb3cgbmV3IEVycm9yKGBUaGUgbWluaW11bSBudW1iZXIgb2YgZGlnaXRzIGFmdGVyIGZyYWN0aW9uICgke2V9KSBpcyBoaWdoZXIgdGhhbiB0aGUgbWF4aW11bSAoJHtufSkuYCk7bGV0IHI9dC5kaWdpdHMscz1yLmxlbmd0aC10LmludGVnZXJMZW47Y29uc3QgaT1NYXRoLm1pbihNYXRoLm1heChlLHMpLG4pO2xldCBvPWkrdC5pbnRlZ2VyTGVuLGE9cltvXTtpZihvPjApe3Iuc3BsaWNlKE1hdGgubWF4KHQuaW50ZWdlckxlbixvKSk7Zm9yKGxldCB0PW87dDxyLmxlbmd0aDt0Kyspclt0XT0wfWVsc2V7cz1NYXRoLm1heCgwLHMpLHQuaW50ZWdlckxlbj0xLHIubGVuZ3RoPU1hdGgubWF4KDEsbz1pKzEpLHJbMF09MDtmb3IobGV0IHQ9MTt0PG87dCsrKXJbdF09MH1pZihhPj01KWlmKG8tMTwwKXtmb3IobGV0IGU9MDtlPm87ZS0tKXIudW5zaGlmdCgwKSx0LmludGVnZXJMZW4rKztyLnVuc2hpZnQoMSksdC5pbnRlZ2VyTGVuKyt9ZWxzZSByW28tMV0rKztmb3IoO3M8TWF0aC5tYXgoMCxpKTtzKyspci5wdXNoKDApO2xldCBsPTAhPT1pO2NvbnN0IHU9ZSt0LmludGVnZXJMZW4sYz1yLnJlZHVjZVJpZ2h0KChmdW5jdGlvbih0LGUsbixyKXtyZXR1cm4gcltuXT0oZSs9dCk8MTA/ZTplLTEwLGwmJigwPT09cltuXSYmbj49dT9yLnBvcCgpOmw9ITEpLGU+PTEwPzE6MH0pLDApO2MmJihyLnVuc2hpZnQoYyksdC5pbnRlZ2VyTGVuKyspfSh1LGgsZCk7bGV0IHA9dS5kaWdpdHMsZj11LmludGVnZXJMZW47Y29uc3QgZz11LmV4cG9uZW50O2xldCBtPVtdO2ZvcihsPXAuZXZlcnkodD0+IXQpO2Y8YztmKyspcC51bnNoaWZ0KDApO2Zvcig7ZjwwO2YrKylwLnVuc2hpZnQoMCk7Zj4wP209cC5zcGxpY2UoZixwLmxlbmd0aCk6KG09cCxwPVswXSk7Y29uc3QgeT1bXTtmb3IocC5sZW5ndGg+PWUubGdTaXplJiZ5LnVuc2hpZnQocC5zcGxpY2UoLWUubGdTaXplLHAubGVuZ3RoKS5qb2luKCIiKSk7cC5sZW5ndGg+ZS5nU2l6ZTspeS51bnNoaWZ0KHAuc3BsaWNlKC1lLmdTaXplLHAubGVuZ3RoKS5qb2luKCIiKSk7cC5sZW5ndGgmJnkudW5zaGlmdChwLmpvaW4oIiIpKSxhPXkuam9pbihwdShuLHIpKSxtLmxlbmd0aCYmKGErPXB1KG4scykrbS5qb2luKCIiKSksZyYmKGErPXB1KG4sdXUuRXhwb25lbnRpYWwpKyIrIitnKX1lbHNlIGE9cHUobix1dS5JbmZpbml0eSk7cmV0dXJuIGE9dDwwJiYhbD9lLm5lZ1ByZSthK2UubmVnU3VmOmUucG9zUHJlK2ErZS5wb3NTdWYsYX1mdW5jdGlvbiBOdSh0LGU9Ii0iKXtjb25zdCBuPXttaW5JbnQ6MSxtaW5GcmFjOjAsbWF4RnJhYzowLHBvc1ByZToiIixwb3NTdWY6IiIsbmVnUHJlOiIiLG5lZ1N1ZjoiIixnU2l6ZTowLGxnU2l6ZTowfSxyPXQuc3BsaXQoIjsiKSxzPXJbMF0saT1yWzFdLG89LTEhPT1zLmluZGV4T2YoUnUpP3Muc3BsaXQoUnUpOltzLnN1YnN0cmluZygwLHMubGFzdEluZGV4T2YoTXUpKzEpLHMuc3Vic3RyaW5nKHMubGFzdEluZGV4T2YoTXUpKzEpXSxhPW9bMF0sbD1vWzFdfHwiIjtuLnBvc1ByZT1hLnN1YnN0cigwLGEuaW5kZXhPZigiIyIpKTtmb3IobGV0IGM9MDtjPGwubGVuZ3RoO2MrKyl7Y29uc3QgdD1sLmNoYXJBdChjKTt0PT09TXU/bi5taW5GcmFjPW4ubWF4RnJhYz1jKzE6IiMiPT09dD9uLm1heEZyYWM9YysxOm4ucG9zU3VmKz10fWNvbnN0IHU9YS5zcGxpdCgiLCIpO2lmKG4uZ1NpemU9dVsxXT91WzFdLmxlbmd0aDowLG4ubGdTaXplPXVbMl18fHVbMV0/KHVbMl18fHVbMV0pLmxlbmd0aDowLGkpe2NvbnN0IHQ9cy5sZW5ndGgtbi5wb3NQcmUubGVuZ3RoLW4ucG9zU3VmLmxlbmd0aCxlPWkuaW5kZXhPZigiIyIpO24ubmVnUHJlPWkuc3Vic3RyKDAsZSkucmVwbGFjZSgvJy9nLCIiKSxuLm5lZ1N1Zj1pLnN1YnN0cihlK3QpLnJlcGxhY2UoLycvZywiIil9ZWxzZSBuLm5lZ1ByZT1lK24ucG9zUHJlLG4ubmVnU3VmPW4ucG9zU3VmO3JldHVybiBufWZ1bmN0aW9uIFZ1KHQpe2NvbnN0IGU9cGFyc2VJbnQodCk7aWYoaXNOYU4oZSkpdGhyb3cgbmV3IEVycm9yKCJJbnZhbGlkIGludGVnZXIgbGl0ZXJhbCB3aGVuIHBhcnNpbmcgIit0KTtyZXR1cm4gZX1jbGFzcyBCdXt9bGV0IEx1PSgoKT0+e2NsYXNzIHQgZXh0ZW5kcyBCdXtjb25zdHJ1Y3Rvcih0KXtzdXBlcigpLHRoaXMubG9jYWxlPXR9Z2V0UGx1cmFsQ2F0ZWdvcnkodCxlKXtzd2l0Y2goZnVuY3Rpb24odCl7cmV0dXJuIHBhKHQpW2dhLlBsdXJhbENhc2VdfShlfHx0aGlzLmxvY2FsZSkodCkpe2Nhc2UgaXUuWmVybzpyZXR1cm4iemVybyI7Y2FzZSBpdS5PbmU6cmV0dXJuIm9uZSI7Y2FzZSBpdS5Ud286cmV0dXJuInR3byI7Y2FzZSBpdS5GZXc6cmV0dXJuImZldyI7Y2FzZSBpdS5NYW55OnJldHVybiJtYW55IjtkZWZhdWx0OnJldHVybiJvdGhlciJ9fX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KShHdChRYSkpfSx0Llx1MDI3NXByb3Y9dXQoe3Rva2VuOnQsZmFjdG9yeTp0Llx1MDI3NWZhY30pLHR9KSgpO2Z1bmN0aW9uIFV1KHQsZSl7ZT1lbmNvZGVVUklDb21wb25lbnQoZSk7Zm9yKGNvbnN0IG4gb2YgdC5zcGxpdCgiOyIpKXtjb25zdCB0PW4uaW5kZXhPZigiPSIpLFtyLHNdPS0xPT10P1tuLCIiXTpbbi5zbGljZSgwLHQpLG4uc2xpY2UodCsxKV07aWYoci50cmltKCk9PT1lKXJldHVybiBkZWNvZGVVUklDb21wb25lbnQocyl9cmV0dXJuIG51bGx9bGV0IEh1PSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IodCxlLG4scil7dGhpcy5faXRlcmFibGVEaWZmZXJzPXQsdGhpcy5fa2V5VmFsdWVEaWZmZXJzPWUsdGhpcy5fbmdFbD1uLHRoaXMuX3JlbmRlcmVyPXIsdGhpcy5faXRlcmFibGVEaWZmZXI9bnVsbCx0aGlzLl9rZXlWYWx1ZURpZmZlcj1udWxsLHRoaXMuX2luaXRpYWxDbGFzc2VzPVtdLHRoaXMuX3Jhd0NsYXNzPW51bGx9c2V0IGtsYXNzKHQpe3RoaXMuX3JlbW92ZUNsYXNzZXModGhpcy5faW5pdGlhbENsYXNzZXMpLHRoaXMuX2luaXRpYWxDbGFzc2VzPSJzdHJpbmciPT10eXBlb2YgdD90LnNwbGl0KC9ccysvKTpbXSx0aGlzLl9hcHBseUNsYXNzZXModGhpcy5faW5pdGlhbENsYXNzZXMpLHRoaXMuX2FwcGx5Q2xhc3Nlcyh0aGlzLl9yYXdDbGFzcyl9c2V0IG5nQ2xhc3ModCl7dGhpcy5fcmVtb3ZlQ2xhc3Nlcyh0aGlzLl9yYXdDbGFzcyksdGhpcy5fYXBwbHlDbGFzc2VzKHRoaXMuX2luaXRpYWxDbGFzc2VzKSx0aGlzLl9pdGVyYWJsZURpZmZlcj1udWxsLHRoaXMuX2tleVZhbHVlRGlmZmVyPW51bGwsdGhpcy5fcmF3Q2xhc3M9InN0cmluZyI9PXR5cGVvZiB0P3Quc3BsaXQoL1xzKy8pOnQsdGhpcy5fcmF3Q2xhc3MmJihraSh0aGlzLl9yYXdDbGFzcyk/dGhpcy5faXRlcmFibGVEaWZmZXI9dGhpcy5faXRlcmFibGVEaWZmZXJzLmZpbmQodGhpcy5fcmF3Q2xhc3MpLmNyZWF0ZSgpOnRoaXMuX2tleVZhbHVlRGlmZmVyPXRoaXMuX2tleVZhbHVlRGlmZmVycy5maW5kKHRoaXMuX3Jhd0NsYXNzKS5jcmVhdGUoKSl9bmdEb0NoZWNrKCl7aWYodGhpcy5faXRlcmFibGVEaWZmZXIpe2NvbnN0IHQ9dGhpcy5faXRlcmFibGVEaWZmZXIuZGlmZih0aGlzLl9yYXdDbGFzcyk7dCYmdGhpcy5fYXBwbHlJdGVyYWJsZUNoYW5nZXModCl9ZWxzZSBpZih0aGlzLl9rZXlWYWx1ZURpZmZlcil7Y29uc3QgdD10aGlzLl9rZXlWYWx1ZURpZmZlci5kaWZmKHRoaXMuX3Jhd0NsYXNzKTt0JiZ0aGlzLl9hcHBseUtleVZhbHVlQ2hhbmdlcyh0KX19X2FwcGx5S2V5VmFsdWVDaGFuZ2VzKHQpe3QuZm9yRWFjaEFkZGVkSXRlbSh0PT50aGlzLl90b2dnbGVDbGFzcyh0LmtleSx0LmN1cnJlbnRWYWx1ZSkpLHQuZm9yRWFjaENoYW5nZWRJdGVtKHQ9PnRoaXMuX3RvZ2dsZUNsYXNzKHQua2V5LHQuY3VycmVudFZhbHVlKSksdC5mb3JFYWNoUmVtb3ZlZEl0ZW0odD0+e3QucHJldmlvdXNWYWx1ZSYmdGhpcy5fdG9nZ2xlQ2xhc3ModC5rZXksITEpfSl9X2FwcGx5SXRlcmFibGVDaGFuZ2VzKHQpe3QuZm9yRWFjaEFkZGVkSXRlbSh0PT57aWYoInN0cmluZyIhPXR5cGVvZiB0Lml0ZW0pdGhyb3cgbmV3IEVycm9yKCJOZ0NsYXNzIGNhbiBvbmx5IHRvZ2dsZSBDU1MgY2xhc3NlcyBleHByZXNzZWQgYXMgc3RyaW5ncywgZ290ICIrYnQodC5pdGVtKSk7dGhpcy5fdG9nZ2xlQ2xhc3ModC5pdGVtLCEwKX0pLHQuZm9yRWFjaFJlbW92ZWRJdGVtKHQ9PnRoaXMuX3RvZ2dsZUNsYXNzKHQuaXRlbSwhMSkpfV9hcHBseUNsYXNzZXModCl7dCYmKEFycmF5LmlzQXJyYXkodCl8fHQgaW5zdGFuY2VvZiBTZXQ/dC5mb3JFYWNoKHQ9PnRoaXMuX3RvZ2dsZUNsYXNzKHQsITApKTpPYmplY3Qua2V5cyh0KS5mb3JFYWNoKGU9PnRoaXMuX3RvZ2dsZUNsYXNzKGUsISF0W2VdKSkpfV9yZW1vdmVDbGFzc2VzKHQpe3QmJihBcnJheS5pc0FycmF5KHQpfHx0IGluc3RhbmNlb2YgU2V0P3QuZm9yRWFjaCh0PT50aGlzLl90b2dnbGVDbGFzcyh0LCExKSk6T2JqZWN0LmtleXModCkuZm9yRWFjaCh0PT50aGlzLl90b2dnbGVDbGFzcyh0LCExKSkpfV90b2dnbGVDbGFzcyh0LGUpeyh0PXQudHJpbSgpKSYmdC5zcGxpdCgvXHMrL2cpLmZvckVhY2godD0+e2U/dGhpcy5fcmVuZGVyZXIuYWRkQ2xhc3ModGhpcy5fbmdFbC5uYXRpdmVFbGVtZW50LHQpOnRoaXMuX3JlbmRlcmVyLnJlbW92ZUNsYXNzKHRoaXMuX25nRWwubmF0aXZlRWxlbWVudCx0KX0pfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KShSaShLbyksUmkoUW8pLFJpKEZvKSxSaShSbykpfSx0Llx1MDI3NWRpcj12ZSh7dHlwZTp0LHNlbGVjdG9yczpbWyIiLCJuZ0NsYXNzIiwiIl1dLGlucHV0czp7a2xhc3M6WyJjbGFzcyIsImtsYXNzIl0sbmdDbGFzczoibmdDbGFzcyJ9fSksdH0pKCk7Y2xhc3MgJHV7Y29uc3RydWN0b3IodCxlLG4scil7dGhpcy4kaW1wbGljaXQ9dCx0aGlzLm5nRm9yT2Y9ZSx0aGlzLmluZGV4PW4sdGhpcy5jb3VudD1yfWdldCBmaXJzdCgpe3JldHVybiAwPT09dGhpcy5pbmRleH1nZXQgbGFzdCgpe3JldHVybiB0aGlzLmluZGV4PT09dGhpcy5jb3VudC0xfWdldCBldmVuKCl7cmV0dXJuIHRoaXMuaW5kZXglMj09MH1nZXQgb2RkKCl7cmV0dXJuIXRoaXMuZXZlbn19bGV0IHp1PSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IodCxlLG4pe3RoaXMuX3ZpZXdDb250YWluZXI9dCx0aGlzLl90ZW1wbGF0ZT1lLHRoaXMuX2RpZmZlcnM9bix0aGlzLl9uZ0Zvck9mPW51bGwsdGhpcy5fbmdGb3JPZkRpcnR5PSEwLHRoaXMuX2RpZmZlcj1udWxsfXNldCBuZ0Zvck9mKHQpe3RoaXMuX25nRm9yT2Y9dCx0aGlzLl9uZ0Zvck9mRGlydHk9ITB9c2V0IG5nRm9yVHJhY2tCeSh0KXt5cigpJiZudWxsIT10JiYiZnVuY3Rpb24iIT10eXBlb2YgdCYmY29uc29sZSYmY29uc29sZS53YXJuJiZjb25zb2xlLndhcm4oYHRyYWNrQnkgbXVzdCBiZSBhIGZ1bmN0aW9uLCBidXQgcmVjZWl2ZWQgJHtKU09OLnN0cmluZ2lmeSh0KX0uIFNlZSBodHRwczovL2FuZ3VsYXIuaW8vYXBpL2NvbW1vbi9OZ0Zvck9mI2NoYW5nZS1wcm9wYWdhdGlvbiBmb3IgbW9yZSBpbmZvcm1hdGlvbi5gKSx0aGlzLl90cmFja0J5Rm49dH1nZXQgbmdGb3JUcmFja0J5KCl7cmV0dXJuIHRoaXMuX3RyYWNrQnlGbn1zZXQgbmdGb3JUZW1wbGF0ZSh0KXt0JiYodGhpcy5fdGVtcGxhdGU9dCl9bmdEb0NoZWNrKCl7aWYodGhpcy5fbmdGb3JPZkRpcnR5KXt0aGlzLl9uZ0Zvck9mRGlydHk9ITE7Y29uc3Qgbj10aGlzLl9uZ0Zvck9mO2lmKCF0aGlzLl9kaWZmZXImJm4pdHJ5e3RoaXMuX2RpZmZlcj10aGlzLl9kaWZmZXJzLmZpbmQobikuY3JlYXRlKHRoaXMubmdGb3JUcmFja0J5KX1jYXRjaChlKXt0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBmaW5kIGEgZGlmZmVyIHN1cHBvcnRpbmcgb2JqZWN0ICcke259JyBvZiB0eXBlICcke3Q9bix0Lm5hbWV8fHR5cGVvZiB0fScuIE5nRm9yIG9ubHkgc3VwcG9ydHMgYmluZGluZyB0byBJdGVyYWJsZXMgc3VjaCBhcyBBcnJheXMuYCl9fXZhciB0O2lmKHRoaXMuX2RpZmZlcil7Y29uc3QgdD10aGlzLl9kaWZmZXIuZGlmZih0aGlzLl9uZ0Zvck9mKTt0JiZ0aGlzLl9hcHBseUNoYW5nZXModCl9fV9hcHBseUNoYW5nZXModCl7Y29uc3QgZT1bXTt0LmZvckVhY2hPcGVyYXRpb24oKHQsbixyKT0+e2lmKG51bGw9PXQucHJldmlvdXNJbmRleCl7Y29uc3Qgbj10aGlzLl92aWV3Q29udGFpbmVyLmNyZWF0ZUVtYmVkZGVkVmlldyh0aGlzLl90ZW1wbGF0ZSxuZXcgJHUobnVsbCx0aGlzLl9uZ0Zvck9mLC0xLC0xKSxudWxsPT09cj92b2lkIDA6cikscz1uZXcgcXUodCxuKTtlLnB1c2gocyl9ZWxzZSBpZihudWxsPT1yKXRoaXMuX3ZpZXdDb250YWluZXIucmVtb3ZlKG51bGw9PT1uP3ZvaWQgMDpuKTtlbHNlIGlmKG51bGwhPT1uKXtjb25zdCBzPXRoaXMuX3ZpZXdDb250YWluZXIuZ2V0KG4pO3RoaXMuX3ZpZXdDb250YWluZXIubW92ZShzLHIpO2NvbnN0IGk9bmV3IHF1KHQscyk7ZS5wdXNoKGkpfX0pO2ZvcihsZXQgbj0wO248ZS5sZW5ndGg7bisrKXRoaXMuX3BlclZpZXdDaGFuZ2UoZVtuXS52aWV3LGVbbl0ucmVjb3JkKTtmb3IobGV0IG49MCxyPXRoaXMuX3ZpZXdDb250YWluZXIubGVuZ3RoO248cjtuKyspe2NvbnN0IHQ9dGhpcy5fdmlld0NvbnRhaW5lci5nZXQobik7dC5jb250ZXh0LmluZGV4PW4sdC5jb250ZXh0LmNvdW50PXIsdC5jb250ZXh0Lm5nRm9yT2Y9dGhpcy5fbmdGb3JPZn10LmZvckVhY2hJZGVudGl0eUNoYW5nZSh0PT57dGhpcy5fdmlld0NvbnRhaW5lci5nZXQodC5jdXJyZW50SW5kZXgpLmNvbnRleHQuJGltcGxpY2l0PXQuaXRlbX0pfV9wZXJWaWV3Q2hhbmdlKHQsZSl7dC5jb250ZXh0LiRpbXBsaWNpdD1lLml0ZW19c3RhdGljIG5nVGVtcGxhdGVDb250ZXh0R3VhcmQodCxlKXtyZXR1cm4hMH19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCkoUmkobmEpLFJpKHRhKSxSaShLbykpfSx0Llx1MDI3NWRpcj12ZSh7dHlwZTp0LHNlbGVjdG9yczpbWyIiLCJuZ0ZvciIsIiIsIm5nRm9yT2YiLCIiXV0saW5wdXRzOntuZ0Zvck9mOiJuZ0Zvck9mIixuZ0ZvclRyYWNrQnk6Im5nRm9yVHJhY2tCeSIsbmdGb3JUZW1wbGF0ZToibmdGb3JUZW1wbGF0ZSJ9fSksdH0pKCk7Y2xhc3MgcXV7Y29uc3RydWN0b3IodCxlKXt0aGlzLnJlY29yZD10LHRoaXMudmlldz1lfX1sZXQgV3U9KCgpPT57Y2xhc3MgdHtjb25zdHJ1Y3Rvcih0LGUpe3RoaXMuX3ZpZXdDb250YWluZXI9dCx0aGlzLl9jb250ZXh0PW5ldyBadSx0aGlzLl90aGVuVGVtcGxhdGVSZWY9bnVsbCx0aGlzLl9lbHNlVGVtcGxhdGVSZWY9bnVsbCx0aGlzLl90aGVuVmlld1JlZj1udWxsLHRoaXMuX2Vsc2VWaWV3UmVmPW51bGwsdGhpcy5fdGhlblRlbXBsYXRlUmVmPWV9c2V0IG5nSWYodCl7dGhpcy5fY29udGV4dC4kaW1wbGljaXQ9dGhpcy5fY29udGV4dC5uZ0lmPXQsdGhpcy5fdXBkYXRlVmlldygpfXNldCBuZ0lmVGhlbih0KXtHdSgibmdJZlRoZW4iLHQpLHRoaXMuX3RoZW5UZW1wbGF0ZVJlZj10LHRoaXMuX3RoZW5WaWV3UmVmPW51bGwsdGhpcy5fdXBkYXRlVmlldygpfXNldCBuZ0lmRWxzZSh0KXtHdSgibmdJZkVsc2UiLHQpLHRoaXMuX2Vsc2VUZW1wbGF0ZVJlZj10LHRoaXMuX2Vsc2VWaWV3UmVmPW51bGwsdGhpcy5fdXBkYXRlVmlldygpfV91cGRhdGVWaWV3KCl7dGhpcy5fY29udGV4dC4kaW1wbGljaXQ/dGhpcy5fdGhlblZpZXdSZWZ8fCh0aGlzLl92aWV3Q29udGFpbmVyLmNsZWFyKCksdGhpcy5fZWxzZVZpZXdSZWY9bnVsbCx0aGlzLl90aGVuVGVtcGxhdGVSZWYmJih0aGlzLl90aGVuVmlld1JlZj10aGlzLl92aWV3Q29udGFpbmVyLmNyZWF0ZUVtYmVkZGVkVmlldyh0aGlzLl90aGVuVGVtcGxhdGVSZWYsdGhpcy5fY29udGV4dCkpKTp0aGlzLl9lbHNlVmlld1JlZnx8KHRoaXMuX3ZpZXdDb250YWluZXIuY2xlYXIoKSx0aGlzLl90aGVuVmlld1JlZj1udWxsLHRoaXMuX2Vsc2VUZW1wbGF0ZVJlZiYmKHRoaXMuX2Vsc2VWaWV3UmVmPXRoaXMuX3ZpZXdDb250YWluZXIuY3JlYXRlRW1iZWRkZWRWaWV3KHRoaXMuX2Vsc2VUZW1wbGF0ZVJlZix0aGlzLl9jb250ZXh0KSkpfXN0YXRpYyBuZ1RlbXBsYXRlQ29udGV4dEd1YXJkKHQsZSl7cmV0dXJuITB9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKFJpKG5hKSxSaSh0YSkpfSx0Llx1MDI3NWRpcj12ZSh7dHlwZTp0LHNlbGVjdG9yczpbWyIiLCJuZ0lmIiwiIl1dLGlucHV0czp7bmdJZjoibmdJZiIsbmdJZlRoZW46Im5nSWZUaGVuIixuZ0lmRWxzZToibmdJZkVsc2UifX0pLHR9KSgpO2NsYXNzIFp1e2NvbnN0cnVjdG9yKCl7dGhpcy4kaW1wbGljaXQ9bnVsbCx0aGlzLm5nSWY9bnVsbH19ZnVuY3Rpb24gR3UodCxlKXtpZihlJiYhZS5jcmVhdGVFbWJlZGRlZFZpZXcpdGhyb3cgbmV3IEVycm9yKGAke3R9IG11c3QgYmUgYSBUZW1wbGF0ZVJlZiwgYnV0IHJlY2VpdmVkICcke2J0KGUpfScuYCl9bGV0IEt1PSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IodCl7dGhpcy5fdmlld0NvbnRhaW5lclJlZj10LHRoaXMuX3ZpZXdSZWY9bnVsbCx0aGlzLm5nVGVtcGxhdGVPdXRsZXRDb250ZXh0PW51bGwsdGhpcy5uZ1RlbXBsYXRlT3V0bGV0PW51bGx9bmdPbkNoYW5nZXModCl7aWYodGhpcy5fc2hvdWxkUmVjcmVhdGVWaWV3KHQpKXtjb25zdCB0PXRoaXMuX3ZpZXdDb250YWluZXJSZWY7dGhpcy5fdmlld1JlZiYmdC5yZW1vdmUodC5pbmRleE9mKHRoaXMuX3ZpZXdSZWYpKSx0aGlzLl92aWV3UmVmPXRoaXMubmdUZW1wbGF0ZU91dGxldD90LmNyZWF0ZUVtYmVkZGVkVmlldyh0aGlzLm5nVGVtcGxhdGVPdXRsZXQsdGhpcy5uZ1RlbXBsYXRlT3V0bGV0Q29udGV4dCk6bnVsbH1lbHNlIHRoaXMuX3ZpZXdSZWYmJnRoaXMubmdUZW1wbGF0ZU91dGxldENvbnRleHQmJnRoaXMuX3VwZGF0ZUV4aXN0aW5nQ29udGV4dCh0aGlzLm5nVGVtcGxhdGVPdXRsZXRDb250ZXh0KX1fc2hvdWxkUmVjcmVhdGVWaWV3KHQpe2NvbnN0IGU9dC5uZ1RlbXBsYXRlT3V0bGV0Q29udGV4dDtyZXR1cm4hIXQubmdUZW1wbGF0ZU91dGxldHx8ZSYmdGhpcy5faGFzQ29udGV4dFNoYXBlQ2hhbmdlZChlKX1faGFzQ29udGV4dFNoYXBlQ2hhbmdlZCh0KXtjb25zdCBlPU9iamVjdC5rZXlzKHQucHJldmlvdXNWYWx1ZXx8e30pLG49T2JqZWN0LmtleXModC5jdXJyZW50VmFsdWV8fHt9KTtpZihlLmxlbmd0aD09PW4ubGVuZ3RoKXtmb3IobGV0IHQgb2YgbilpZigtMT09PWUuaW5kZXhPZih0KSlyZXR1cm4hMDtyZXR1cm4hMX1yZXR1cm4hMH1fdXBkYXRlRXhpc3RpbmdDb250ZXh0KHQpe2ZvcihsZXQgZSBvZiBPYmplY3Qua2V5cyh0KSl0aGlzLl92aWV3UmVmLmNvbnRleHRbZV09dGhpcy5uZ1RlbXBsYXRlT3V0bGV0Q29udGV4dFtlXX19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCkoUmkobmEpKX0sdC5cdTAyNzVkaXI9dmUoe3R5cGU6dCxzZWxlY3RvcnM6W1siIiwibmdUZW1wbGF0ZU91dGxldCIsIiJdXSxpbnB1dHM6e25nVGVtcGxhdGVPdXRsZXRDb250ZXh0OiJuZ1RlbXBsYXRlT3V0bGV0Q29udGV4dCIsbmdUZW1wbGF0ZU91dGxldDoibmdUZW1wbGF0ZU91dGxldCJ9LGZlYXR1cmVzOltJZV19KSx0fSkoKTtmdW5jdGlvbiBRdSh0LGUpe3JldHVybiBFcnJvcihgSW52YWxpZFBpcGVBcmd1bWVudDogJyR7ZX0nIGZvciBwaXBlICcke2J0KHQpfSdgKX1jb25zdCBZdT0vKD86W0EtWmEtelx4QUFceEI1XHhCQVx4QzAtXHhENlx4RDgtXHhGNlx4RjgtXHUwMkMxXHUwMkM2LVx1MDJEMVx1MDJFMC1cdTAyRTRcdTAyRUNcdTAyRUVcdTAzNzAtXHUwMzc0XHUwMzc2XHUwMzc3XHUwMzdBLVx1MDM3RFx1MDM3Rlx1MDM4Nlx1MDM4OC1cdTAzOEFcdTAzOENcdTAzOEUtXHUwM0ExXHUwM0EzLVx1MDNGNVx1MDNGNy1cdTA0ODFcdTA0OEEtXHUwNTJGXHUwNTMxLVx1MDU1Nlx1MDU1OVx1MDU2MS1cdTA1ODdcdTA1RDAtXHUwNUVBXHUwNUYwLVx1MDVGMlx1MDYyMC1cdTA2NEFcdTA2NkVcdTA2NkZcdTA2NzEtXHUwNkQzXHUwNkQ1XHUwNkU1XHUwNkU2XHUwNkVFXHUwNkVGXHUwNkZBLVx1MDZGQ1x1MDZGRlx1MDcxMFx1MDcxMi1cdTA3MkZcdTA3NEQtXHUwN0E1XHUwN0IxXHUwN0NBLVx1MDdFQVx1MDdGNFx1MDdGNVx1MDdGQVx1MDgwMC1cdTA4MTVcdTA4MUFcdTA4MjRcdTA4MjhcdTA4NDAtXHUwODU4XHUwODYwLVx1MDg2QVx1MDhBMC1cdTA4QjRcdTA4QjYtXHUwOEJEXHUwOTA0LVx1MDkzOVx1MDkzRFx1MDk1MFx1MDk1OC1cdTA5NjFcdTA5NzEtXHUwOTgwXHUwOTg1LVx1MDk4Q1x1MDk4Rlx1MDk5MFx1MDk5My1cdTA5QThcdTA5QUEtXHUwOUIwXHUwOUIyXHUwOUI2LVx1MDlCOVx1MDlCRFx1MDlDRVx1MDlEQ1x1MDlERFx1MDlERi1cdTA5RTFcdTA5RjBcdTA5RjFcdTA5RkNcdTBBMDUtXHUwQTBBXHUwQTBGXHUwQTEwXHUwQTEzLVx1MEEyOFx1MEEyQS1cdTBBMzBcdTBBMzJcdTBBMzNcdTBBMzVcdTBBMzZcdTBBMzhcdTBBMzlcdTBBNTktXHUwQTVDXHUwQTVFXHUwQTcyLVx1MEE3NFx1MEE4NS1cdTBBOERcdTBBOEYtXHUwQTkxXHUwQTkzLVx1MEFBOFx1MEFBQS1cdTBBQjBcdTBBQjJcdTBBQjNcdTBBQjUtXHUwQUI5XHUwQUJEXHUwQUQwXHUwQUUwXHUwQUUxXHUwQUY5XHUwQjA1LVx1MEIwQ1x1MEIwRlx1MEIxMFx1MEIxMy1cdTBCMjhcdTBCMkEtXHUwQjMwXHUwQjMyXHUwQjMzXHUwQjM1LVx1MEIzOVx1MEIzRFx1MEI1Q1x1MEI1RFx1MEI1Ri1cdTBCNjFcdTBCNzFcdTBCODNcdTBCODUtXHUwQjhBXHUwQjhFLVx1MEI5MFx1MEI5Mi1cdTBCOTVcdTBCOTlcdTBCOUFcdTBCOUNcdTBCOUVcdTBCOUZcdTBCQTNcdTBCQTRcdTBCQTgtXHUwQkFBXHUwQkFFLVx1MEJCOVx1MEJEMFx1MEMwNS1cdTBDMENcdTBDMEUtXHUwQzEwXHUwQzEyLVx1MEMyOFx1MEMyQS1cdTBDMzlcdTBDM0RcdTBDNTgtXHUwQzVBXHUwQzYwXHUwQzYxXHUwQzgwXHUwQzg1LVx1MEM4Q1x1MEM4RS1cdTBDOTBcdTBDOTItXHUwQ0E4XHUwQ0FBLVx1MENCM1x1MENCNS1cdTBDQjlcdTBDQkRcdTBDREVcdTBDRTBcdTBDRTFcdTBDRjFcdTBDRjJcdTBEMDUtXHUwRDBDXHUwRDBFLVx1MEQxMFx1MEQxMi1cdTBEM0FcdTBEM0RcdTBENEVcdTBENTQtXHUwRDU2XHUwRDVGLVx1MEQ2MVx1MEQ3QS1cdTBEN0ZcdTBEODUtXHUwRDk2XHUwRDlBLVx1MERCMVx1MERCMy1cdTBEQkJcdTBEQkRcdTBEQzAtXHUwREM2XHUwRTAxLVx1MEUzMFx1MEUzMlx1MEUzM1x1MEU0MC1cdTBFNDZcdTBFODFcdTBFODJcdTBFODRcdTBFODdcdTBFODhcdTBFOEFcdTBFOERcdTBFOTQtXHUwRTk3XHUwRTk5LVx1MEU5Rlx1MEVBMS1cdTBFQTNcdTBFQTVcdTBFQTdcdTBFQUFcdTBFQUJcdTBFQUQtXHUwRUIwXHUwRUIyXHUwRUIzXHUwRUJEXHUwRUMwLVx1MEVDNFx1MEVDNlx1MEVEQy1cdTBFREZcdTBGMDBcdTBGNDAtXHUwRjQ3XHUwRjQ5LVx1MEY2Q1x1MEY4OC1cdTBGOENcdTEwMDAtXHUxMDJBXHUxMDNGXHUxMDUwLVx1MTA1NVx1MTA1QS1cdTEwNURcdTEwNjFcdTEwNjVcdTEwNjZcdTEwNkUtXHUxMDcwXHUxMDc1LVx1MTA4MVx1MTA4RVx1MTBBMC1cdTEwQzVcdTEwQzdcdTEwQ0RcdTEwRDAtXHUxMEZBXHUxMEZDLVx1MTI0OFx1MTI0QS1cdTEyNERcdTEyNTAtXHUxMjU2XHUxMjU4XHUxMjVBLVx1MTI1RFx1MTI2MC1cdTEyODhcdTEyOEEtXHUxMjhEXHUxMjkwLVx1MTJCMFx1MTJCMi1cdTEyQjVcdTEyQjgtXHUxMkJFXHUxMkMwXHUxMkMyLVx1MTJDNVx1MTJDOC1cdTEyRDZcdTEyRDgtXHUxMzEwXHUxMzEyLVx1MTMxNVx1MTMxOC1cdTEzNUFcdTEzODAtXHUxMzhGXHUxM0EwLVx1MTNGNVx1MTNGOC1cdTEzRkRcdTE0MDEtXHUxNjZDXHUxNjZGLVx1MTY3Rlx1MTY4MS1cdTE2OUFcdTE2QTAtXHUxNkVBXHUxNkYxLVx1MTZGOFx1MTcwMC1cdTE3MENcdTE3MEUtXHUxNzExXHUxNzIwLVx1MTczMVx1MTc0MC1cdTE3NTFcdTE3NjAtXHUxNzZDXHUxNzZFLVx1MTc3MFx1MTc4MC1cdTE3QjNcdTE3RDdcdTE3RENcdTE4MjAtXHUxODc3XHUxODgwLVx1MTg4NFx1MTg4Ny1cdTE4QThcdTE4QUFcdTE4QjAtXHUxOEY1XHUxOTAwLVx1MTkxRVx1MTk1MC1cdTE5NkRcdTE5NzAtXHUxOTc0XHUxOTgwLVx1MTlBQlx1MTlCMC1cdTE5QzlcdTFBMDAtXHUxQTE2XHUxQTIwLVx1MUE1NFx1MUFBN1x1MUIwNS1cdTFCMzNcdTFCNDUtXHUxQjRCXHUxQjgzLVx1MUJBMFx1MUJBRVx1MUJBRlx1MUJCQS1cdTFCRTVcdTFDMDAtXHUxQzIzXHUxQzRELVx1MUM0Rlx1MUM1QS1cdTFDN0RcdTFDODAtXHUxQzg4XHUxQ0U5LVx1MUNFQ1x1MUNFRS1cdTFDRjFcdTFDRjVcdTFDRjZcdTFEMDAtXHUxREJGXHUxRTAwLVx1MUYxNVx1MUYxOC1cdTFGMURcdTFGMjAtXHUxRjQ1XHUxRjQ4LVx1MUY0RFx1MUY1MC1cdTFGNTdcdTFGNTlcdTFGNUJcdTFGNURcdTFGNUYtXHUxRjdEXHUxRjgwLVx1MUZCNFx1MUZCNi1cdTFGQkNcdTFGQkVcdTFGQzItXHUxRkM0XHUxRkM2LVx1MUZDQ1x1MUZEMC1cdTFGRDNcdTFGRDYtXHUxRkRCXHUxRkUwLVx1MUZFQ1x1MUZGMi1cdTFGRjRcdTFGRjYtXHUxRkZDXHUyMDcxXHUyMDdGXHUyMDkwLVx1MjA5Q1x1MjEwMlx1MjEwN1x1MjEwQS1cdTIxMTNcdTIxMTVcdTIxMTktXHUyMTFEXHUyMTI0XHUyMTI2XHUyMTI4XHUyMTJBLVx1MjEyRFx1MjEyRi1cdTIxMzlcdTIxM0MtXHUyMTNGXHUyMTQ1LVx1MjE0OVx1MjE0RVx1MjE4M1x1MjE4NFx1MkMwMC1cdTJDMkVcdTJDMzAtXHUyQzVFXHUyQzYwLVx1MkNFNFx1MkNFQi1cdTJDRUVcdTJDRjJcdTJDRjNcdTJEMDAtXHUyRDI1XHUyRDI3XHUyRDJEXHUyRDMwLVx1MkQ2N1x1MkQ2Rlx1MkQ4MC1cdTJEOTZcdTJEQTAtXHUyREE2XHUyREE4LVx1MkRBRVx1MkRCMC1cdTJEQjZcdTJEQjgtXHUyREJFXHUyREMwLVx1MkRDNlx1MkRDOC1cdTJEQ0VcdTJERDAtXHUyREQ2XHUyREQ4LVx1MkRERVx1MkUyRlx1MzAwNVx1MzAwNlx1MzAzMS1cdTMwMzVcdTMwM0JcdTMwM0NcdTMwNDEtXHUzMDk2XHUzMDlELVx1MzA5Rlx1MzBBMS1cdTMwRkFcdTMwRkMtXHUzMEZGXHUzMTA1LVx1MzEyRVx1MzEzMS1cdTMxOEVcdTMxQTAtXHUzMUJBXHUzMUYwLVx1MzFGRlx1MzQwMC1cdTREQjVcdTRFMDAtXHU5RkVBXHVBMDAwLVx1QTQ4Q1x1QTREMC1cdUE0RkRcdUE1MDAtXHVBNjBDXHVBNjEwLVx1QTYxRlx1QTYyQVx1QTYyQlx1QTY0MC1cdUE2NkVcdUE2N0YtXHVBNjlEXHVBNkEwLVx1QTZFNVx1QTcxNy1cdUE3MUZcdUE3MjItXHVBNzg4XHVBNzhCLVx1QTdBRVx1QTdCMC1cdUE3QjdcdUE3RjctXHVBODAxXHVBODAzLVx1QTgwNVx1QTgwNy1cdUE4MEFcdUE4MEMtXHVBODIyXHVBODQwLVx1QTg3M1x1QTg4Mi1cdUE4QjNcdUE4RjItXHVBOEY3XHVBOEZCXHVBOEZEXHVBOTBBLVx1QTkyNVx1QTkzMC1cdUE5NDZcdUE5NjAtXHVBOTdDXHVBOTg0LVx1QTlCMlx1QTlDRlx1QTlFMC1cdUE5RTRcdUE5RTYtXHVBOUVGXHVBOUZBLVx1QTlGRVx1QUEwMC1cdUFBMjhcdUFBNDAtXHVBQTQyXHVBQTQ0LVx1QUE0Qlx1QUE2MC1cdUFBNzZcdUFBN0FcdUFBN0UtXHVBQUFGXHVBQUIxXHVBQUI1XHVBQUI2XHVBQUI5LVx1QUFCRFx1QUFDMFx1QUFDMlx1QUFEQi1cdUFBRERcdUFBRTAtXHVBQUVBXHVBQUYyLVx1QUFGNFx1QUIwMS1cdUFCMDZcdUFCMDktXHVBQjBFXHVBQjExLVx1QUIxNlx1QUIyMC1cdUFCMjZcdUFCMjgtXHVBQjJFXHVBQjMwLVx1QUI1QVx1QUI1Qy1cdUFCNjVcdUFCNzAtXHVBQkUyXHVBQzAwLVx1RDdBM1x1RDdCMC1cdUQ3QzZcdUQ3Q0ItXHVEN0ZCXHVGOTAwLVx1RkE2RFx1RkE3MC1cdUZBRDlcdUZCMDAtXHVGQjA2XHVGQjEzLVx1RkIxN1x1RkIxRFx1RkIxRi1cdUZCMjhcdUZCMkEtXHVGQjM2XHVGQjM4LVx1RkIzQ1x1RkIzRVx1RkI0MFx1RkI0MVx1RkI0M1x1RkI0NFx1RkI0Ni1cdUZCQjFcdUZCRDMtXHVGRDNEXHVGRDUwLVx1RkQ4Rlx1RkQ5Mi1cdUZEQzdcdUZERjAtXHVGREZCXHVGRTcwLVx1RkU3NFx1RkU3Ni1cdUZFRkNcdUZGMjEtXHVGRjNBXHVGRjQxLVx1RkY1QVx1RkY2Ni1cdUZGQkVcdUZGQzItXHVGRkM3XHVGRkNBLVx1RkZDRlx1RkZEMi1cdUZGRDdcdUZGREEtXHVGRkRDXXxcdUQ4MDBbXHVEQzAwLVx1REMwQlx1REMwRC1cdURDMjZcdURDMjgtXHVEQzNBXHVEQzNDXHVEQzNEXHVEQzNGLVx1REM0RFx1REM1MC1cdURDNURcdURDODAtXHVEQ0ZBXHVERTgwLVx1REU5Q1x1REVBMC1cdURFRDBcdURGMDAtXHVERjFGXHVERjJELVx1REY0MFx1REY0Mi1cdURGNDlcdURGNTAtXHVERjc1XHVERjgwLVx1REY5RFx1REZBMC1cdURGQzNcdURGQzgtXHVERkNGXXxcdUQ4MDFbXHVEQzAwLVx1REM5RFx1RENCMC1cdURDRDNcdURDRDgtXHVEQ0ZCXHVERDAwLVx1REQyN1x1REQzMC1cdURENjNcdURFMDAtXHVERjM2XHVERjQwLVx1REY1NVx1REY2MC1cdURGNjddfFx1RDgwMltcdURDMDAtXHVEQzA1XHVEQzA4XHVEQzBBLVx1REMzNVx1REMzN1x1REMzOFx1REMzQ1x1REMzRi1cdURDNTVcdURDNjAtXHVEQzc2XHVEQzgwLVx1REM5RVx1RENFMC1cdURDRjJcdURDRjRcdURDRjVcdUREMDAtXHVERDE1XHVERDIwLVx1REQzOVx1REQ4MC1cdUREQjdcdUREQkVcdUREQkZcdURFMDBcdURFMTAtXHVERTEzXHVERTE1LVx1REUxN1x1REUxOS1cdURFMzNcdURFNjAtXHVERTdDXHVERTgwLVx1REU5Q1x1REVDMC1cdURFQzdcdURFQzktXHVERUU0XHVERjAwLVx1REYzNVx1REY0MC1cdURGNTVcdURGNjAtXHVERjcyXHVERjgwLVx1REY5MV18XHVEODAzW1x1REMwMC1cdURDNDhcdURDODAtXHVEQ0IyXHVEQ0MwLVx1RENGMl18XHVEODA0W1x1REMwMy1cdURDMzdcdURDODMtXHVEQ0FGXHVEQ0QwLVx1RENFOFx1REQwMy1cdUREMjZcdURENTAtXHVERDcyXHVERDc2XHVERDgzLVx1RERCMlx1RERDMS1cdUREQzRcdUREREFcdURERENcdURFMDAtXHVERTExXHVERTEzLVx1REUyQlx1REU4MC1cdURFODZcdURFODhcdURFOEEtXHVERThEXHVERThGLVx1REU5RFx1REU5Ri1cdURFQThcdURFQjAtXHVERURFXHVERjA1LVx1REYwQ1x1REYwRlx1REYxMFx1REYxMy1cdURGMjhcdURGMkEtXHVERjMwXHVERjMyXHVERjMzXHVERjM1LVx1REYzOVx1REYzRFx1REY1MFx1REY1RC1cdURGNjFdfFx1RDgwNVtcdURDMDAtXHVEQzM0XHVEQzQ3LVx1REM0QVx1REM4MC1cdURDQUZcdURDQzRcdURDQzVcdURDQzdcdUREODAtXHVEREFFXHVEREQ4LVx1REREQlx1REUwMC1cdURFMkZcdURFNDRcdURFODAtXHVERUFBXHVERjAwLVx1REYxOV18XHVEODA2W1x1RENBMC1cdURDREZcdURDRkZcdURFMDBcdURFMEItXHVERTMyXHVERTNBXHVERTUwXHVERTVDLVx1REU4M1x1REU4Ni1cdURFODlcdURFQzAtXHVERUY4XXxcdUQ4MDdbXHVEQzAwLVx1REMwOFx1REMwQS1cdURDMkVcdURDNDBcdURDNzItXHVEQzhGXHVERDAwLVx1REQwNlx1REQwOFx1REQwOVx1REQwQi1cdUREMzBcdURENDZdfFx1RDgwOFtcdURDMDAtXHVERjk5XXxcdUQ4MDlbXHVEQzgwLVx1REQ0M118W1x1RDgwQ1x1RDgxQy1cdUQ4MjBcdUQ4NDAtXHVEODY4XHVEODZBLVx1RDg2Q1x1RDg2Ri1cdUQ4NzJcdUQ4NzQtXHVEODc5XVtcdURDMDAtXHVERkZGXXxcdUQ4MERbXHVEQzAwLVx1REMyRV18XHVEODExW1x1REMwMC1cdURFNDZdfFx1RDgxQVtcdURDMDAtXHVERTM4XHVERTQwLVx1REU1RVx1REVEMC1cdURFRURcdURGMDAtXHVERjJGXHVERjQwLVx1REY0M1x1REY2My1cdURGNzdcdURGN0QtXHVERjhGXXxcdUQ4MUJbXHVERjAwLVx1REY0NFx1REY1MFx1REY5My1cdURGOUZcdURGRTBcdURGRTFdfFx1RDgyMVtcdURDMDAtXHVERkVDXXxcdUQ4MjJbXHVEQzAwLVx1REVGMl18XHVEODJDW1x1REMwMC1cdUREMUVcdURENzAtXHVERUZCXXxcdUQ4MkZbXHVEQzAwLVx1REM2QVx1REM3MC1cdURDN0NcdURDODAtXHVEQzg4XHVEQzkwLVx1REM5OV18XHVEODM1W1x1REMwMC1cdURDNTRcdURDNTYtXHVEQzlDXHVEQzlFXHVEQzlGXHVEQ0EyXHVEQ0E1XHVEQ0E2XHVEQ0E5LVx1RENBQ1x1RENBRS1cdURDQjlcdURDQkJcdURDQkQtXHVEQ0MzXHVEQ0M1LVx1REQwNVx1REQwNy1cdUREMEFcdUREMEQtXHVERDE0XHVERDE2LVx1REQxQ1x1REQxRS1cdUREMzlcdUREM0ItXHVERDNFXHVERDQwLVx1REQ0NFx1REQ0Nlx1REQ0QS1cdURENTBcdURENTItXHVERUE1XHVERUE4LVx1REVDMFx1REVDMi1cdURFREFcdURFREMtXHVERUZBXHVERUZDLVx1REYxNFx1REYxNi1cdURGMzRcdURGMzYtXHVERjRFXHVERjUwLVx1REY2RVx1REY3MC1cdURGODhcdURGOEEtXHVERkE4XHVERkFBLVx1REZDMlx1REZDNC1cdURGQ0JdfFx1RDgzQVtcdURDMDAtXHVEQ0M0XHVERDAwLVx1REQ0M118XHVEODNCW1x1REUwMC1cdURFMDNcdURFMDUtXHVERTFGXHVERTIxXHVERTIyXHVERTI0XHVERTI3XHVERTI5LVx1REUzMlx1REUzNC1cdURFMzdcdURFMzlcdURFM0JcdURFNDJcdURFNDdcdURFNDlcdURFNEJcdURFNEQtXHVERTRGXHVERTUxXHVERTUyXHVERTU0XHVERTU3XHVERTU5XHVERTVCXHVERTVEXHVERTVGXHVERTYxXHVERTYyXHVERTY0XHVERTY3LVx1REU2QVx1REU2Qy1cdURFNzJcdURFNzQtXHVERTc3XHVERTc5LVx1REU3Q1x1REU3RVx1REU4MC1cdURFODlcdURFOEItXHVERTlCXHVERUExLVx1REVBM1x1REVBNS1cdURFQTlcdURFQUItXHVERUJCXXxcdUQ4NjlbXHVEQzAwLVx1REVENlx1REYwMC1cdURGRkZdfFx1RDg2RFtcdURDMDAtXHVERjM0XHVERjQwLVx1REZGRl18XHVEODZFW1x1REMwMC1cdURDMURcdURDMjAtXHVERkZGXXxcdUQ4NzNbXHVEQzAwLVx1REVBMVx1REVCMC1cdURGRkZdfFx1RDg3QVtcdURDMDAtXHVERkUwXXxcdUQ4N0VbXHVEQzAwLVx1REUxRF0pXFMqL2c7bGV0IEp1PSgoKT0+e2NsYXNzIHR7dHJhbnNmb3JtKGUpe2lmKCFlKXJldHVybiBlO2lmKCJzdHJpbmciIT10eXBlb2YgZSl0aHJvdyBRdSh0LGUpO3JldHVybiBlLnJlcGxhY2UoWXUsdD0+dFswXS50b1VwcGVyQ2FzZSgpK3Quc3Vic3RyKDEpLnRvTG93ZXJDYXNlKCkpfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0sdC5cdTAyNzVwaXBlPWJlKHtuYW1lOiJ0aXRsZWNhc2UiLHR5cGU6dCxwdXJlOiEwfSksdH0pKCksWHU9KCgpPT57Y2xhc3MgdHtjb25zdHJ1Y3Rvcih0KXt0aGlzLmxvY2FsZT10fXRyYW5zZm9ybShlLG49Im1lZGl1bURhdGUiLHIscyl7aWYobnVsbD09ZXx8IiI9PT1lfHxlIT1lKXJldHVybiBudWxsO3RyeXtyZXR1cm4gZnVuY3Rpb24odCxlLG4scil7bGV0IHM9ZnVuY3Rpb24odCl7aWYoUHUodCkpcmV0dXJuIHQ7aWYoIm51bWJlciI9PXR5cGVvZiB0JiYhaXNOYU4odCkpcmV0dXJuIG5ldyBEYXRlKHQpO2lmKCJzdHJpbmciPT10eXBlb2YgdCl7dD10LnRyaW0oKTtjb25zdCBlPXBhcnNlRmxvYXQodCk7aWYoIWlzTmFOKHQtZSkpcmV0dXJuIG5ldyBEYXRlKGUpO2lmKC9eKFxkezR9LVxkezEsMn0tXGR7MSwyfSkkLy50ZXN0KHQpKXtjb25zdFtlLG4scl09dC5zcGxpdCgiLSIpLm1hcCh0PT4rdCk7cmV0dXJuIG5ldyBEYXRlKGUsbi0xLHIpfWxldCBuO2lmKG49dC5tYXRjaCh2dSkpcmV0dXJuIGZ1bmN0aW9uKHQpe2NvbnN0IGU9bmV3IERhdGUoMCk7bGV0IG49MCxyPTA7Y29uc3Qgcz10WzhdP2Uuc2V0VVRDRnVsbFllYXI6ZS5zZXRGdWxsWWVhcixpPXRbOF0/ZS5zZXRVVENIb3VyczplLnNldEhvdXJzO3RbOV0mJihuPU51bWJlcih0WzldK3RbMTBdKSxyPU51bWJlcih0WzldK3RbMTFdKSkscy5jYWxsKGUsTnVtYmVyKHRbMV0pLE51bWJlcih0WzJdKS0xLE51bWJlcih0WzNdKSk7Y29uc3Qgbz1OdW1iZXIodFs0XXx8MCktbixhPU51bWJlcih0WzVdfHwwKS1yLGw9TnVtYmVyKHRbNl18fDApLHU9TWF0aC5yb3VuZCgxZTMqcGFyc2VGbG9hdCgiMC4iKyh0WzddfHwwKSkpO3JldHVybiBpLmNhbGwoZSxvLGEsbCx1KSxlfShuKX1jb25zdCBlPW5ldyBEYXRlKHQpO2lmKCFQdShlKSl0aHJvdyBuZXcgRXJyb3IoYFVuYWJsZSB0byBjb252ZXJ0ICIke3R9IiBpbnRvIGEgZGF0ZWApO3JldHVybiBlfSh0KTtlPWZ1bmN0aW9uIHQoZSxuKXtjb25zdCByPWZ1bmN0aW9uKHQpe3JldHVybiBwYSh0KVtnYS5Mb2NhbGVJZF19KGUpO2lmKGJ1W3JdPWJ1W3JdfHx7fSxidVtyXVtuXSlyZXR1cm4gYnVbcl1bbl07bGV0IHM9IiI7c3dpdGNoKG4pe2Nhc2Uic2hvcnREYXRlIjpzPWN1KGUsbHUuU2hvcnQpO2JyZWFrO2Nhc2UibWVkaXVtRGF0ZSI6cz1jdShlLGx1Lk1lZGl1bSk7YnJlYWs7Y2FzZSJsb25nRGF0ZSI6cz1jdShlLGx1LkxvbmcpO2JyZWFrO2Nhc2UiZnVsbERhdGUiOnM9Y3UoZSxsdS5GdWxsKTticmVhaztjYXNlInNob3J0VGltZSI6cz1odShlLGx1LlNob3J0KTticmVhaztjYXNlIm1lZGl1bVRpbWUiOnM9aHUoZSxsdS5NZWRpdW0pO2JyZWFrO2Nhc2UibG9uZ1RpbWUiOnM9aHUoZSxsdS5Mb25nKTticmVhaztjYXNlImZ1bGxUaW1lIjpzPWh1KGUsbHUuRnVsbCk7YnJlYWs7Y2FzZSJzaG9ydCI6Y29uc3Qgbj10KGUsInNob3J0VGltZSIpLHI9dChlLCJzaG9ydERhdGUiKTtzPUV1KGR1KGUsbHUuU2hvcnQpLFtuLHJdKTticmVhaztjYXNlIm1lZGl1bSI6Y29uc3QgaT10KGUsIm1lZGl1bVRpbWUiKSxvPXQoZSwibWVkaXVtRGF0ZSIpO3M9RXUoZHUoZSxsdS5NZWRpdW0pLFtpLG9dKTticmVhaztjYXNlImxvbmciOmNvbnN0IGE9dChlLCJsb25nVGltZSIpLGw9dChlLCJsb25nRGF0ZSIpO3M9RXUoZHUoZSxsdS5Mb25nKSxbYSxsXSk7YnJlYWs7Y2FzZSJmdWxsIjpjb25zdCB1PXQoZSwiZnVsbFRpbWUiKSxjPXQoZSwiZnVsbERhdGUiKTtzPUV1KGR1KGUsbHUuRnVsbCksW3UsY10pfXJldHVybiBzJiYoYnVbcl1bbl09cyksc30obixlKXx8ZTtsZXQgaSxvPVtdO2Zvcig7ZTspe2lmKGk9d3UuZXhlYyhlKSwhaSl7by5wdXNoKGUpO2JyZWFrfXtvPW8uY29uY2F0KGkuc2xpY2UoMSkpO2NvbnN0IHQ9by5wb3AoKTtpZighdClicmVhaztlPXR9fWxldCBhPXMuZ2V0VGltZXpvbmVPZmZzZXQoKTtyJiYoYT1PdShyLGEpLHM9ZnVuY3Rpb24odCxlLG4pe2NvbnN0IHI9dC5nZXRUaW1lem9uZU9mZnNldCgpO3JldHVybiBmdW5jdGlvbih0LGUpe3JldHVybih0PW5ldyBEYXRlKHQuZ2V0VGltZSgpKSkuc2V0TWludXRlcyh0LmdldE1pbnV0ZXMoKStlKSx0fSh0LC0xKihPdShlLHIpLXIpKX0ocyxyKSk7bGV0IGw9IiI7cmV0dXJuIG8uZm9yRWFjaCh0PT57Y29uc3QgZT1mdW5jdGlvbih0KXtpZihGdVt0XSlyZXR1cm4gRnVbdF07bGV0IGU7c3dpdGNoKHQpe2Nhc2UiRyI6Y2FzZSJHRyI6Y2FzZSJHR0ciOmU9eHUoRHUuRXJhcyxhdS5BYmJyZXZpYXRlZCk7YnJlYWs7Y2FzZSJHR0dHIjplPXh1KER1LkVyYXMsYXUuV2lkZSk7YnJlYWs7Y2FzZSJHR0dHRyI6ZT14dShEdS5FcmFzLGF1Lk5hcnJvdyk7YnJlYWs7Y2FzZSJ5IjplPVN1KEN1LkZ1bGxZZWFyLDEsMCwhMSwhMCk7YnJlYWs7Y2FzZSJ5eSI6ZT1TdShDdS5GdWxsWWVhciwyLDAsITAsITApO2JyZWFrO2Nhc2UieXl5IjplPVN1KEN1LkZ1bGxZZWFyLDMsMCwhMSwhMCk7YnJlYWs7Y2FzZSJ5eXl5IjplPVN1KEN1LkZ1bGxZZWFyLDQsMCwhMSwhMCk7YnJlYWs7Y2FzZSJNIjpjYXNlIkwiOmU9U3UoQ3UuTW9udGgsMSwxKTticmVhaztjYXNlIk1NIjpjYXNlIkxMIjplPVN1KEN1Lk1vbnRoLDIsMSk7YnJlYWs7Y2FzZSJNTU0iOmU9eHUoRHUuTW9udGhzLGF1LkFiYnJldmlhdGVkKTticmVhaztjYXNlIk1NTU0iOmU9eHUoRHUuTW9udGhzLGF1LldpZGUpO2JyZWFrO2Nhc2UiTU1NTU0iOmU9eHUoRHUuTW9udGhzLGF1Lk5hcnJvdyk7YnJlYWs7Y2FzZSJMTEwiOmU9eHUoRHUuTW9udGhzLGF1LkFiYnJldmlhdGVkLG91LlN0YW5kYWxvbmUpO2JyZWFrO2Nhc2UiTExMTCI6ZT14dShEdS5Nb250aHMsYXUuV2lkZSxvdS5TdGFuZGFsb25lKTticmVhaztjYXNlIkxMTExMIjplPXh1KER1Lk1vbnRocyxhdS5OYXJyb3csb3UuU3RhbmRhbG9uZSk7YnJlYWs7Y2FzZSJ3IjplPVR1KDEpO2JyZWFrO2Nhc2Uid3ciOmU9VHUoMik7YnJlYWs7Y2FzZSJXIjplPVR1KDEsITApO2JyZWFrO2Nhc2UiZCI6ZT1TdShDdS5EYXRlLDEpO2JyZWFrO2Nhc2UiZGQiOmU9U3UoQ3UuRGF0ZSwyKTticmVhaztjYXNlIkUiOmNhc2UiRUUiOmNhc2UiRUVFIjplPXh1KER1LkRheXMsYXUuQWJicmV2aWF0ZWQpO2JyZWFrO2Nhc2UiRUVFRSI6ZT14dShEdS5EYXlzLGF1LldpZGUpO2JyZWFrO2Nhc2UiRUVFRUUiOmU9eHUoRHUuRGF5cyxhdS5OYXJyb3cpO2JyZWFrO2Nhc2UiRUVFRUVFIjplPXh1KER1LkRheXMsYXUuU2hvcnQpO2JyZWFrO2Nhc2UiYSI6Y2FzZSJhYSI6Y2FzZSJhYWEiOmU9eHUoRHUuRGF5UGVyaW9kcyxhdS5BYmJyZXZpYXRlZCk7YnJlYWs7Y2FzZSJhYWFhIjplPXh1KER1LkRheVBlcmlvZHMsYXUuV2lkZSk7YnJlYWs7Y2FzZSJhYWFhYSI6ZT14dShEdS5EYXlQZXJpb2RzLGF1Lk5hcnJvdyk7YnJlYWs7Y2FzZSJiIjpjYXNlImJiIjpjYXNlImJiYiI6ZT14dShEdS5EYXlQZXJpb2RzLGF1LkFiYnJldmlhdGVkLG91LlN0YW5kYWxvbmUsITApO2JyZWFrO2Nhc2UiYmJiYiI6ZT14dShEdS5EYXlQZXJpb2RzLGF1LldpZGUsb3UuU3RhbmRhbG9uZSwhMCk7YnJlYWs7Y2FzZSJiYmJiYiI6ZT14dShEdS5EYXlQZXJpb2RzLGF1Lk5hcnJvdyxvdS5TdGFuZGFsb25lLCEwKTticmVhaztjYXNlIkIiOmNhc2UiQkIiOmNhc2UiQkJCIjplPXh1KER1LkRheVBlcmlvZHMsYXUuQWJicmV2aWF0ZWQsb3UuRm9ybWF0LCEwKTticmVhaztjYXNlIkJCQkIiOmU9eHUoRHUuRGF5UGVyaW9kcyxhdS5XaWRlLG91LkZvcm1hdCwhMCk7YnJlYWs7Y2FzZSJCQkJCQiI6ZT14dShEdS5EYXlQZXJpb2RzLGF1Lk5hcnJvdyxvdS5Gb3JtYXQsITApO2JyZWFrO2Nhc2UiaCI6ZT1TdShDdS5Ib3VycywxLC0xMik7YnJlYWs7Y2FzZSJoaCI6ZT1TdShDdS5Ib3VycywyLC0xMik7YnJlYWs7Y2FzZSJIIjplPVN1KEN1LkhvdXJzLDEpO2JyZWFrO2Nhc2UiSEgiOmU9U3UoQ3UuSG91cnMsMik7YnJlYWs7Y2FzZSJtIjplPVN1KEN1Lk1pbnV0ZXMsMSk7YnJlYWs7Y2FzZSJtbSI6ZT1TdShDdS5NaW51dGVzLDIpO2JyZWFrO2Nhc2UicyI6ZT1TdShDdS5TZWNvbmRzLDEpO2JyZWFrO2Nhc2Uic3MiOmU9U3UoQ3UuU2Vjb25kcywyKTticmVhaztjYXNlIlMiOmU9U3UoQ3UuRnJhY3Rpb25hbFNlY29uZHMsMSk7YnJlYWs7Y2FzZSJTUyI6ZT1TdShDdS5GcmFjdGlvbmFsU2Vjb25kcywyKTticmVhaztjYXNlIlNTUyI6ZT1TdShDdS5GcmFjdGlvbmFsU2Vjb25kcywzKTticmVhaztjYXNlIloiOmNhc2UiWloiOmNhc2UiWlpaIjplPWt1KF91LlNob3J0KTticmVhaztjYXNlIlpaWlpaIjplPWt1KF91LkV4dGVuZGVkKTticmVhaztjYXNlIk8iOmNhc2UiT08iOmNhc2UiT09PIjpjYXNlInoiOmNhc2UienoiOmNhc2Uienp6IjplPWt1KF91LlNob3J0R01UKTticmVhaztjYXNlIk9PT08iOmNhc2UiWlpaWiI6Y2FzZSJ6enp6IjplPWt1KF91LkxvbmcpO2JyZWFrO2RlZmF1bHQ6cmV0dXJuIG51bGx9cmV0dXJuIEZ1W3RdPWUsZX0odCk7bCs9ZT9lKHMsbixhKToiJyciPT09dD8iJyI6dC5yZXBsYWNlKC8oXid8JyQpL2csIiIpLnJlcGxhY2UoLycnL2csIiciKX0pLGx9KGUsbixzfHx0aGlzLmxvY2FsZSxyKX1jYXRjaChpKXt0aHJvdyBRdSh0LGkubWVzc2FnZSl9fX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KShSaShRYSkpfSx0Llx1MDI3NXBpcGU9YmUoe25hbWU6ImRhdGUiLHR5cGU6dCxwdXJlOiEwfSksdH0pKCksdGM9KCgpPT57Y2xhc3MgdHtjb25zdHJ1Y3Rvcih0KXt0aGlzLl9sb2NhbGU9dH10cmFuc2Zvcm0oZSxuLHIpe2lmKG5jKGUpKXJldHVybiBudWxsO3I9cnx8dGhpcy5fbG9jYWxlO3RyeXtyZXR1cm4gZnVuY3Rpb24odCxlLG4pe3JldHVybiBqdSh0LE51KGZ1KGUsc3UuRGVjaW1hbCkscHUoZSx1dS5NaW51c1NpZ24pKSxlLHV1Lkdyb3VwLHV1LkRlY2ltYWwsbil9KHJjKGUpLHIsbil9Y2F0Y2gocyl7dGhyb3cgUXUodCxzLm1lc3NhZ2UpfX19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCkoUmkoUWEpKX0sdC5cdTAyNzVwaXBlPWJlKHtuYW1lOiJudW1iZXIiLHR5cGU6dCxwdXJlOiEwfSksdH0pKCksZWM9KCgpPT57Y2xhc3MgdHtjb25zdHJ1Y3Rvcih0LGU9IlVTRCIpe3RoaXMuX2xvY2FsZT10LHRoaXMuX2RlZmF1bHRDdXJyZW5jeUNvZGU9ZX10cmFuc2Zvcm0oZSxuLHI9InN5bWJvbCIscyxpKXtpZihuYyhlKSlyZXR1cm4gbnVsbDtpPWl8fHRoaXMuX2xvY2FsZSwiYm9vbGVhbiI9PXR5cGVvZiByJiYoY29uc29sZSYmY29uc29sZS53YXJuJiZjb25zb2xlLndhcm4oJ1dhcm5pbmc6IHRoZSBjdXJyZW5jeSBwaXBlIGhhcyBiZWVuIGNoYW5nZWQgaW4gQW5ndWxhciB2NS4gVGhlIHN5bWJvbERpc3BsYXkgb3B0aW9uICh0aGlyZCBwYXJhbWV0ZXIpIGlzIG5vdyBhIHN0cmluZyBpbnN0ZWFkIG9mIGEgYm9vbGVhbi4gVGhlIGFjY2VwdGVkIHZhbHVlcyBhcmUgImNvZGUiLCAic3ltYm9sIiBvciAic3ltYm9sLW5hcnJvdyIuJykscj1yPyJzeW1ib2wiOiJjb2RlIik7bGV0IG89bnx8dGhpcy5fZGVmYXVsdEN1cnJlbmN5Q29kZTsiY29kZSIhPT1yJiYobz0ic3ltYm9sIj09PXJ8fCJzeW1ib2wtbmFycm93Ij09PXI/ZnVuY3Rpb24odCxlLG49ImVuIil7Y29uc3Qgcj1mdW5jdGlvbih0KXtyZXR1cm4gcGEodClbZ2EuQ3VycmVuY2llc119KG4pW3RdfHxydVt0XXx8W10scz1yWzFdO3JldHVybiJuYXJyb3ciPT09ZSYmInN0cmluZyI9PXR5cGVvZiBzP3M6clswXXx8dH0obywic3ltYm9sIj09PXI/IndpZGUiOiJuYXJyb3ciLGkpOnIpO3RyeXtyZXR1cm4gZnVuY3Rpb24odCxlLG4scixzKXtjb25zdCBpPU51KGZ1KGUsc3UuQ3VycmVuY3kpLHB1KGUsdXUuTWludXNTaWduKSk7cmV0dXJuIGkubWluRnJhYz1mdW5jdGlvbih0KXtsZXQgZTtjb25zdCBuPXJ1W3RdO3JldHVybiBuJiYoZT1uWzJdKSwibnVtYmVyIj09dHlwZW9mIGU/ZToyfShyKSxpLm1heEZyYWM9aS5taW5GcmFjLGp1KHQsaSxlLHV1LkN1cnJlbmN5R3JvdXAsdXUuQ3VycmVuY3lEZWNpbWFsLHMpLnJlcGxhY2UoIlx4YTQiLG4pLnJlcGxhY2UoIlx4YTQiLCIiKS50cmltKCl9KHJjKGUpLGksbyxuLHMpfWNhdGNoKGEpe3Rocm93IFF1KHQsYS5tZXNzYWdlKX19fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKFJpKFFhKSxSaShZYSkpfSx0Llx1MDI3NXBpcGU9YmUoe25hbWU6ImN1cnJlbmN5Iix0eXBlOnQscHVyZTohMH0pLHR9KSgpO2Z1bmN0aW9uIG5jKHQpe3JldHVybiBudWxsPT10fHwiIj09PXR8fHQhPXR9ZnVuY3Rpb24gcmModCl7aWYoInN0cmluZyI9PXR5cGVvZiB0JiYhaXNOYU4oTnVtYmVyKHQpLXBhcnNlRmxvYXQodCkpKXJldHVybiBOdW1iZXIodCk7aWYoIm51bWJlciIhPXR5cGVvZiB0KXRocm93IG5ldyBFcnJvcih0KyIgaXMgbm90IGEgbnVtYmVyIik7cmV0dXJuIHR9bGV0IHNjPSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0scHJvdmlkZXJzOlt7cHJvdmlkZTpCdSx1c2VDbGFzczpMdX1dfSksdH0pKCksaWM9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1cHJvdj11dCh7dG9rZW46dCxwcm92aWRlZEluOiJyb290IixmYWN0b3J5OigpPT5uZXcgb2MoR3QoQmwpLHdpbmRvdyxHdChwcikpfSksdH0pKCk7Y2xhc3Mgb2N7Y29uc3RydWN0b3IodCxlLG4pe3RoaXMuZG9jdW1lbnQ9dCx0aGlzLndpbmRvdz1lLHRoaXMuZXJyb3JIYW5kbGVyPW4sdGhpcy5vZmZzZXQ9KCk9PlswLDBdfXNldE9mZnNldCh0KXt0aGlzLm9mZnNldD1BcnJheS5pc0FycmF5KHQpPygpPT50OnR9Z2V0U2Nyb2xsUG9zaXRpb24oKXtyZXR1cm4gdGhpcy5zdXBwb3J0c1Njcm9sbGluZygpP1t0aGlzLndpbmRvdy5zY3JvbGxYLHRoaXMud2luZG93LnNjcm9sbFldOlswLDBdfXNjcm9sbFRvUG9zaXRpb24odCl7dGhpcy5zdXBwb3J0c1Njcm9sbGluZygpJiZ0aGlzLndpbmRvdy5zY3JvbGxUbyh0WzBdLHRbMV0pfXNjcm9sbFRvQW5jaG9yKHQpe2lmKHRoaXMuc3VwcG9ydHNTY3JvbGxpbmcoKSl7Y29uc3QgZT10aGlzLmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHQpfHx0aGlzLmRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lKHQpWzBdO2UmJnRoaXMuc2Nyb2xsVG9FbGVtZW50KGUpfX1zZXRIaXN0b3J5U2Nyb2xsUmVzdG9yYXRpb24odCl7aWYodGhpcy5zdXBwb3J0U2Nyb2xsUmVzdG9yYXRpb24oKSl7Y29uc3QgZT10aGlzLndpbmRvdy5oaXN0b3J5O2UmJmUuc2Nyb2xsUmVzdG9yYXRpb24mJihlLnNjcm9sbFJlc3RvcmF0aW9uPXQpfX1zY3JvbGxUb0VsZW1lbnQodCl7Y29uc3QgZT10LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLG49ZS5sZWZ0K3RoaXMud2luZG93LnBhZ2VYT2Zmc2V0LHI9ZS50b3ArdGhpcy53aW5kb3cucGFnZVlPZmZzZXQscz10aGlzLm9mZnNldCgpO3RoaXMud2luZG93LnNjcm9sbFRvKG4tc1swXSxyLXNbMV0pfXN1cHBvcnRTY3JvbGxSZXN0b3JhdGlvbigpe3RyeXtpZighdGhpcy53aW5kb3d8fCF0aGlzLndpbmRvdy5zY3JvbGxUbylyZXR1cm4hMTtjb25zdCB0PWFjKHRoaXMud2luZG93Lmhpc3RvcnkpfHxhYyhPYmplY3QuZ2V0UHJvdG90eXBlT2YodGhpcy53aW5kb3cuaGlzdG9yeSkpO3JldHVybiEoIXR8fCF0LndyaXRhYmxlJiYhdC5zZXQpfWNhdGNoKHQpe3JldHVybiExfX1zdXBwb3J0c1Njcm9sbGluZygpe3RyeXtyZXR1cm4hIXRoaXMud2luZG93LnNjcm9sbFRvfWNhdGNoKHQpe3JldHVybiExfX19ZnVuY3Rpb24gYWModCl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCwic2Nyb2xsUmVzdG9yYXRpb24iKX1jbGFzcyBsYyBleHRlbmRzIGNsYXNzIGV4dGVuZHMgY2xhc3N7fXtjb25zdHJ1Y3Rvcigpe3N1cGVyKCl9c3VwcG9ydHNET01FdmVudHMoKXtyZXR1cm4hMH19e3N0YXRpYyBtYWtlQ3VycmVudCgpe3ZhciB0O3Q9bmV3IGxjLE5sfHwoTmw9dCl9Z2V0UHJvcGVydHkodCxlKXtyZXR1cm4gdFtlXX1sb2codCl7d2luZG93LmNvbnNvbGUmJndpbmRvdy5jb25zb2xlLmxvZyYmd2luZG93LmNvbnNvbGUubG9nKHQpfWxvZ0dyb3VwKHQpe3dpbmRvdy5jb25zb2xlJiZ3aW5kb3cuY29uc29sZS5ncm91cCYmd2luZG93LmNvbnNvbGUuZ3JvdXAodCl9bG9nR3JvdXBFbmQoKXt3aW5kb3cuY29uc29sZSYmd2luZG93LmNvbnNvbGUuZ3JvdXBFbmQmJndpbmRvdy5jb25zb2xlLmdyb3VwRW5kKCl9b25BbmRDYW5jZWwodCxlLG4pe3JldHVybiB0LmFkZEV2ZW50TGlzdGVuZXIoZSxuLCExKSwoKT0+e3QucmVtb3ZlRXZlbnRMaXN0ZW5lcihlLG4sITEpfX1kaXNwYXRjaEV2ZW50KHQsZSl7dC5kaXNwYXRjaEV2ZW50KGUpfXJlbW92ZSh0KXtyZXR1cm4gdC5wYXJlbnROb2RlJiZ0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodCksdH1nZXRWYWx1ZSh0KXtyZXR1cm4gdC52YWx1ZX1jcmVhdGVFbGVtZW50KHQsZSl7cmV0dXJuKGU9ZXx8dGhpcy5nZXREZWZhdWx0RG9jdW1lbnQoKSkuY3JlYXRlRWxlbWVudCh0KX1jcmVhdGVIdG1sRG9jdW1lbnQoKXtyZXR1cm4gZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KCJmYWtlVGl0bGUiKX1nZXREZWZhdWx0RG9jdW1lbnQoKXtyZXR1cm4gZG9jdW1lbnR9aXNFbGVtZW50Tm9kZSh0KXtyZXR1cm4gdC5ub2RlVHlwZT09PU5vZGUuRUxFTUVOVF9OT0RFfWlzU2hhZG93Um9vdCh0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIERvY3VtZW50RnJhZ21lbnR9Z2V0R2xvYmFsRXZlbnRUYXJnZXQodCxlKXtyZXR1cm4id2luZG93Ij09PWU/d2luZG93OiJkb2N1bWVudCI9PT1lP3Q6ImJvZHkiPT09ZT90LmJvZHk6bnVsbH1nZXRIaXN0b3J5KCl7cmV0dXJuIHdpbmRvdy5oaXN0b3J5fWdldExvY2F0aW9uKCl7cmV0dXJuIHdpbmRvdy5sb2NhdGlvbn1nZXRCYXNlSHJlZih0KXtjb25zdCBlPWNjfHwoY2M9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiYmFzZSIpLGNjKT9jYy5nZXRBdHRyaWJ1dGUoImhyZWYiKTpudWxsO3JldHVybiBudWxsPT1lP251bGw6KG49ZSx1Y3x8KHVjPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImEiKSksdWMuc2V0QXR0cmlidXRlKCJocmVmIixuKSwiLyI9PT11Yy5wYXRobmFtZS5jaGFyQXQoMCk/dWMucGF0aG5hbWU6Ii8iK3VjLnBhdGhuYW1lKTt2YXIgbn1yZXNldEJhc2VFbGVtZW50KCl7Y2M9bnVsbH1nZXRVc2VyQWdlbnQoKXtyZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnR9cGVyZm9ybWFuY2VOb3coKXtyZXR1cm4gd2luZG93LnBlcmZvcm1hbmNlJiZ3aW5kb3cucGVyZm9ybWFuY2Uubm93P3dpbmRvdy5wZXJmb3JtYW5jZS5ub3coKToobmV3IERhdGUpLmdldFRpbWUoKX1zdXBwb3J0c0Nvb2tpZXMoKXtyZXR1cm4hMH1nZXRDb29raWUodCl7cmV0dXJuIFV1KGRvY3VtZW50LmNvb2tpZSx0KX19bGV0IHVjLGNjPW51bGw7Y29uc3QgaGM9bmV3IE50KCJUUkFOU0lUSU9OX0lEIiksZGM9W3twcm92aWRlOlVhLHVzZUZhY3Rvcnk6ZnVuY3Rpb24odCxlLG4pe3JldHVybigpPT57bi5nZXQoSGEpLmRvbmVQcm9taXNlLnRoZW4oKCk9Pntjb25zdCBuPVZsKCk7QXJyYXkucHJvdG90eXBlLnNsaWNlLmFwcGx5KGUucXVlcnlTZWxlY3RvckFsbCgic3R5bGVbbmctdHJhbnNpdGlvbl0iKSkuZmlsdGVyKGU9PmUuZ2V0QXR0cmlidXRlKCJuZy10cmFuc2l0aW9uIik9PT10KS5mb3JFYWNoKHQ9Pm4ucmVtb3ZlKHQpKX0pfX0sZGVwczpbaGMsQmwseWldLG11bHRpOiEwfV07Y2xhc3MgcGN7c3RhdGljIGluaXQoKXshZnVuY3Rpb24odCl7d2w9dH0obmV3IHBjKX1hZGRUb1dpbmRvdyh0KXtUdC5nZXRBbmd1bGFyVGVzdGFiaWxpdHk9KGUsbj0hMCk9Pntjb25zdCByPXQuZmluZFRlc3RhYmlsaXR5SW5UcmVlKGUsbik7aWYobnVsbD09cil0aHJvdyBuZXcgRXJyb3IoIkNvdWxkIG5vdCBmaW5kIHRlc3RhYmlsaXR5IGZvciBlbGVtZW50LiIpO3JldHVybiByfSxUdC5nZXRBbGxBbmd1bGFyVGVzdGFiaWxpdGllcz0oKT0+dC5nZXRBbGxUZXN0YWJpbGl0aWVzKCksVHQuZ2V0QWxsQW5ndWxhclJvb3RFbGVtZW50cz0oKT0+dC5nZXRBbGxSb290RWxlbWVudHMoKSxUdC5mcmFtZXdvcmtTdGFiaWxpemVyc3x8KFR0LmZyYW1ld29ya1N0YWJpbGl6ZXJzPVtdKSxUdC5mcmFtZXdvcmtTdGFiaWxpemVycy5wdXNoKHQ9Pntjb25zdCBlPVR0LmdldEFsbEFuZ3VsYXJUZXN0YWJpbGl0aWVzKCk7bGV0IG49ZS5sZW5ndGgscj0hMTtjb25zdCBzPWZ1bmN0aW9uKGUpe3I9cnx8ZSxuLS0sMD09biYmdChyKX07ZS5mb3JFYWNoKChmdW5jdGlvbih0KXt0LndoZW5TdGFibGUocyl9KSl9KX1maW5kVGVzdGFiaWxpdHlJblRyZWUodCxlLG4pe2lmKG51bGw9PWUpcmV0dXJuIG51bGw7Y29uc3Qgcj10LmdldFRlc3RhYmlsaXR5KGUpO3JldHVybiBudWxsIT1yP3I6bj9WbCgpLmlzU2hhZG93Um9vdChlKT90aGlzLmZpbmRUZXN0YWJpbGl0eUluVHJlZSh0LGUuaG9zdCwhMCk6dGhpcy5maW5kVGVzdGFiaWxpdHlJblRyZWUodCxlLnBhcmVudEVsZW1lbnQsITApOm51bGx9fWNvbnN0IGZjPW5ldyBOdCgiRXZlbnRNYW5hZ2VyUGx1Z2lucyIpO2xldCBnYz0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKHQsZSl7dGhpcy5fem9uZT1lLHRoaXMuX2V2ZW50TmFtZVRvUGx1Z2luPW5ldyBNYXAsdC5mb3JFYWNoKHQ9PnQubWFuYWdlcj10aGlzKSx0aGlzLl9wbHVnaW5zPXQuc2xpY2UoKS5yZXZlcnNlKCl9YWRkRXZlbnRMaXN0ZW5lcih0LGUsbil7cmV0dXJuIHRoaXMuX2ZpbmRQbHVnaW5Gb3IoZSkuYWRkRXZlbnRMaXN0ZW5lcih0LGUsbil9YWRkR2xvYmFsRXZlbnRMaXN0ZW5lcih0LGUsbil7cmV0dXJuIHRoaXMuX2ZpbmRQbHVnaW5Gb3IoZSkuYWRkR2xvYmFsRXZlbnRMaXN0ZW5lcih0LGUsbil9Z2V0Wm9uZSgpe3JldHVybiB0aGlzLl96b25lfV9maW5kUGx1Z2luRm9yKHQpe2NvbnN0IGU9dGhpcy5fZXZlbnROYW1lVG9QbHVnaW4uZ2V0KHQpO2lmKGUpcmV0dXJuIGU7Y29uc3Qgbj10aGlzLl9wbHVnaW5zO2ZvcihsZXQgcj0wO3I8bi5sZW5ndGg7cisrKXtjb25zdCBlPW5bcl07aWYoZS5zdXBwb3J0cyh0KSlyZXR1cm4gdGhpcy5fZXZlbnROYW1lVG9QbHVnaW4uc2V0KHQsZSksZX10aHJvdyBuZXcgRXJyb3IoIk5vIGV2ZW50IG1hbmFnZXIgcGx1Z2luIGZvdW5kIGZvciBldmVudCAiK3QpfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KShHdChmYyksR3QobGwpKX0sdC5cdTAyNzVwcm92PXV0KHt0b2tlbjp0LGZhY3Rvcnk6dC5cdTAyNzVmYWN9KSx0fSkoKTtjbGFzcyBtY3tjb25zdHJ1Y3Rvcih0KXt0aGlzLl9kb2M9dH1hZGRHbG9iYWxFdmVudExpc3RlbmVyKHQsZSxuKXtjb25zdCByPVZsKCkuZ2V0R2xvYmFsRXZlbnRUYXJnZXQodGhpcy5fZG9jLHQpO2lmKCFyKXRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgZXZlbnQgdGFyZ2V0ICR7cn0gZm9yIGV2ZW50ICR7ZX1gKTtyZXR1cm4gdGhpcy5hZGRFdmVudExpc3RlbmVyKHIsZSxuKX19bGV0IHljPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IoKXt0aGlzLl9zdHlsZXNTZXQ9bmV3IFNldH1hZGRTdHlsZXModCl7Y29uc3QgZT1uZXcgU2V0O3QuZm9yRWFjaCh0PT57dGhpcy5fc3R5bGVzU2V0Lmhhcyh0KXx8KHRoaXMuX3N0eWxlc1NldC5hZGQodCksZS5hZGQodCkpfSksdGhpcy5vblN0eWxlc0FkZGVkKGUpfW9uU3R5bGVzQWRkZWQodCl7fWdldEFsbFN0eWxlcygpe3JldHVybiBBcnJheS5mcm9tKHRoaXMuX3N0eWxlc1NldCl9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSx0Llx1MDI3NXByb3Y9dXQoe3Rva2VuOnQsZmFjdG9yeTp0Llx1MDI3NWZhY30pLHR9KSgpLHZjPSgoKT0+e2NsYXNzIHQgZXh0ZW5kcyB5Y3tjb25zdHJ1Y3Rvcih0KXtzdXBlcigpLHRoaXMuX2RvYz10LHRoaXMuX2hvc3ROb2Rlcz1uZXcgU2V0LHRoaXMuX3N0eWxlTm9kZXM9bmV3IFNldCx0aGlzLl9ob3N0Tm9kZXMuYWRkKHQuaGVhZCl9X2FkZFN0eWxlc1RvSG9zdCh0LGUpe3QuZm9yRWFjaCh0PT57Y29uc3Qgbj10aGlzLl9kb2MuY3JlYXRlRWxlbWVudCgic3R5bGUiKTtuLnRleHRDb250ZW50PXQsdGhpcy5fc3R5bGVOb2Rlcy5hZGQoZS5hcHBlbmRDaGlsZChuKSl9KX1hZGRIb3N0KHQpe3RoaXMuX2FkZFN0eWxlc1RvSG9zdCh0aGlzLl9zdHlsZXNTZXQsdCksdGhpcy5faG9zdE5vZGVzLmFkZCh0KX1yZW1vdmVIb3N0KHQpe3RoaXMuX2hvc3ROb2Rlcy5kZWxldGUodCl9b25TdHlsZXNBZGRlZCh0KXt0aGlzLl9ob3N0Tm9kZXMuZm9yRWFjaChlPT50aGlzLl9hZGRTdHlsZXNUb0hvc3QodCxlKSl9bmdPbkRlc3Ryb3koKXt0aGlzLl9zdHlsZU5vZGVzLmZvckVhY2godD0+VmwoKS5yZW1vdmUodCkpfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KShHdChCbCkpfSx0Llx1MDI3NXByb3Y9dXQoe3Rva2VuOnQsZmFjdG9yeTp0Llx1MDI3NWZhY30pLHR9KSgpO2NvbnN0IGJjPXtzdmc6Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIix4aHRtbDoiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCIseGxpbms6Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiLHhtbDoiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlIix4bWxuczoiaHR0cDovL3d3dy53My5vcmcvMjAwMC94bWxucy8ifSx3Yz0vJUNPTVAlL2c7ZnVuY3Rpb24gX2ModCxlLG4pe2ZvcihsZXQgcj0wO3I8ZS5sZW5ndGg7cisrKXtsZXQgcz1lW3JdO0FycmF5LmlzQXJyYXkocyk/X2ModCxzLG4pOihzPXMucmVwbGFjZSh3Yyx0KSxuLnB1c2gocykpfXJldHVybiBufWZ1bmN0aW9uIENjKHQpe3JldHVybiBlPT57aWYoIl9fbmdVbndyYXBfXyI9PT1lKXJldHVybiB0OyExPT09dChlKSYmKGUucHJldmVudERlZmF1bHQoKSxlLnJldHVyblZhbHVlPSExKX19bGV0IERjPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IodCxlLG4pe3RoaXMuZXZlbnRNYW5hZ2VyPXQsdGhpcy5zaGFyZWRTdHlsZXNIb3N0PWUsdGhpcy5hcHBJZD1uLHRoaXMucmVuZGVyZXJCeUNvbXBJZD1uZXcgTWFwLHRoaXMuZGVmYXVsdFJlbmRlcmVyPW5ldyBFYyh0KX1jcmVhdGVSZW5kZXJlcih0LGUpe2lmKCF0fHwhZSlyZXR1cm4gdGhpcy5kZWZhdWx0UmVuZGVyZXI7c3dpdGNoKGUuZW5jYXBzdWxhdGlvbil7Y2FzZSBsZS5FbXVsYXRlZDp7bGV0IG49dGhpcy5yZW5kZXJlckJ5Q29tcElkLmdldChlLmlkKTtyZXR1cm4gbnx8KG49bmV3IEFjKHRoaXMuZXZlbnRNYW5hZ2VyLHRoaXMuc2hhcmVkU3R5bGVzSG9zdCxlLHRoaXMuYXBwSWQpLHRoaXMucmVuZGVyZXJCeUNvbXBJZC5zZXQoZS5pZCxuKSksbi5hcHBseVRvSG9zdCh0KSxufWNhc2UgbGUuTmF0aXZlOmNhc2UgbGUuU2hhZG93RG9tOnJldHVybiBuZXcgU2ModGhpcy5ldmVudE1hbmFnZXIsdGhpcy5zaGFyZWRTdHlsZXNIb3N0LHQsZSk7ZGVmYXVsdDppZighdGhpcy5yZW5kZXJlckJ5Q29tcElkLmhhcyhlLmlkKSl7Y29uc3QgdD1fYyhlLmlkLGUuc3R5bGVzLFtdKTt0aGlzLnNoYXJlZFN0eWxlc0hvc3QuYWRkU3R5bGVzKHQpLHRoaXMucmVuZGVyZXJCeUNvbXBJZC5zZXQoZS5pZCx0aGlzLmRlZmF1bHRSZW5kZXJlcil9cmV0dXJuIHRoaXMuZGVmYXVsdFJlbmRlcmVyfX1iZWdpbigpe31lbmQoKXt9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKEd0KGdjKSxHdCh2YyksR3QoJGEpKX0sdC5cdTAyNzVwcm92PXV0KHt0b2tlbjp0LGZhY3Rvcnk6dC5cdTAyNzVmYWN9KSx0fSkoKTtjbGFzcyBFY3tjb25zdHJ1Y3Rvcih0KXt0aGlzLmV2ZW50TWFuYWdlcj10LHRoaXMuZGF0YT1PYmplY3QuY3JlYXRlKG51bGwpfWRlc3Ryb3koKXt9Y3JlYXRlRWxlbWVudCh0LGUpe3JldHVybiBlP2RvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyhiY1tlXXx8ZSx0KTpkb2N1bWVudC5jcmVhdGVFbGVtZW50KHQpfWNyZWF0ZUNvbW1lbnQodCl7cmV0dXJuIGRvY3VtZW50LmNyZWF0ZUNvbW1lbnQodCl9Y3JlYXRlVGV4dCh0KXtyZXR1cm4gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodCl9YXBwZW5kQ2hpbGQodCxlKXt0LmFwcGVuZENoaWxkKGUpfWluc2VydEJlZm9yZSh0LGUsbil7dCYmdC5pbnNlcnRCZWZvcmUoZSxuKX1yZW1vdmVDaGlsZCh0LGUpe3QmJnQucmVtb3ZlQ2hpbGQoZSl9c2VsZWN0Um9vdEVsZW1lbnQodCxlKXtsZXQgbj0ic3RyaW5nIj09dHlwZW9mIHQ/ZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0KTp0O2lmKCFuKXRocm93IG5ldyBFcnJvcihgVGhlIHNlbGVjdG9yICIke3R9IiBkaWQgbm90IG1hdGNoIGFueSBlbGVtZW50c2ApO3JldHVybiBlfHwobi50ZXh0Q29udGVudD0iIiksbn1wYXJlbnROb2RlKHQpe3JldHVybiB0LnBhcmVudE5vZGV9bmV4dFNpYmxpbmcodCl7cmV0dXJuIHQubmV4dFNpYmxpbmd9c2V0QXR0cmlidXRlKHQsZSxuLHIpe2lmKHIpe2U9cisiOiIrZTtjb25zdCBzPWJjW3JdO3M/dC5zZXRBdHRyaWJ1dGVOUyhzLGUsbik6dC5zZXRBdHRyaWJ1dGUoZSxuKX1lbHNlIHQuc2V0QXR0cmlidXRlKGUsbil9cmVtb3ZlQXR0cmlidXRlKHQsZSxuKXtpZihuKXtjb25zdCByPWJjW25dO3I/dC5yZW1vdmVBdHRyaWJ1dGVOUyhyLGUpOnQucmVtb3ZlQXR0cmlidXRlKGAke259OiR7ZX1gKX1lbHNlIHQucmVtb3ZlQXR0cmlidXRlKGUpfWFkZENsYXNzKHQsZSl7dC5jbGFzc0xpc3QuYWRkKGUpfXJlbW92ZUNsYXNzKHQsZSl7dC5jbGFzc0xpc3QucmVtb3ZlKGUpfXNldFN0eWxlKHQsZSxuLHIpe3ImSW8uRGFzaENhc2U/dC5zdHlsZS5zZXRQcm9wZXJ0eShlLG4sciZJby5JbXBvcnRhbnQ/ImltcG9ydGFudCI6IiIpOnQuc3R5bGVbZV09bn1yZW1vdmVTdHlsZSh0LGUsbil7biZJby5EYXNoQ2FzZT90LnN0eWxlLnJlbW92ZVByb3BlcnR5KGUpOnQuc3R5bGVbZV09IiJ9c2V0UHJvcGVydHkodCxlLG4pe3RbZV09bn1zZXRWYWx1ZSh0LGUpe3Qubm9kZVZhbHVlPWV9bGlzdGVuKHQsZSxuKXtyZXR1cm4ic3RyaW5nIj09dHlwZW9mIHQ/dGhpcy5ldmVudE1hbmFnZXIuYWRkR2xvYmFsRXZlbnRMaXN0ZW5lcih0LGUsQ2MobikpOnRoaXMuZXZlbnRNYW5hZ2VyLmFkZEV2ZW50TGlzdGVuZXIodCxlLENjKG4pKX19Y2xhc3MgQWMgZXh0ZW5kcyBFY3tjb25zdHJ1Y3Rvcih0LGUsbixyKXtzdXBlcih0KSx0aGlzLmNvbXBvbmVudD1uO2NvbnN0IHM9X2MocisiLSIrbi5pZCxuLnN0eWxlcyxbXSk7ZS5hZGRTdHlsZXMocyksdGhpcy5jb250ZW50QXR0cj0iX25nY29udGVudC0lQ09NUCUiLnJlcGxhY2Uod2MscisiLSIrbi5pZCksdGhpcy5ob3N0QXR0cj0iX25naG9zdC0lQ09NUCUiLnJlcGxhY2Uod2MscisiLSIrbi5pZCl9YXBwbHlUb0hvc3QodCl7c3VwZXIuc2V0QXR0cmlidXRlKHQsdGhpcy5ob3N0QXR0ciwiIil9Y3JlYXRlRWxlbWVudCh0LGUpe2NvbnN0IG49c3VwZXIuY3JlYXRlRWxlbWVudCh0LGUpO3JldHVybiBzdXBlci5zZXRBdHRyaWJ1dGUobix0aGlzLmNvbnRlbnRBdHRyLCIiKSxufX1jbGFzcyBTYyBleHRlbmRzIEVje2NvbnN0cnVjdG9yKHQsZSxuLHIpe3N1cGVyKHQpLHRoaXMuc2hhcmVkU3R5bGVzSG9zdD1lLHRoaXMuaG9zdEVsPW4sdGhpcy5jb21wb25lbnQ9cix0aGlzLnNoYWRvd1Jvb3Q9ci5lbmNhcHN1bGF0aW9uPT09bGUuU2hhZG93RG9tP24uYXR0YWNoU2hhZG93KHttb2RlOiJvcGVuIn0pOm4uY3JlYXRlU2hhZG93Um9vdCgpLHRoaXMuc2hhcmVkU3R5bGVzSG9zdC5hZGRIb3N0KHRoaXMuc2hhZG93Um9vdCk7Y29uc3Qgcz1fYyhyLmlkLHIuc3R5bGVzLFtdKTtmb3IobGV0IGk9MDtpPHMubGVuZ3RoO2krKyl7Y29uc3QgdD1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzdHlsZSIpO3QudGV4dENvbnRlbnQ9c1tpXSx0aGlzLnNoYWRvd1Jvb3QuYXBwZW5kQ2hpbGQodCl9fW5vZGVPclNoYWRvd1Jvb3QodCl7cmV0dXJuIHQ9PT10aGlzLmhvc3RFbD90aGlzLnNoYWRvd1Jvb3Q6dH1kZXN0cm95KCl7dGhpcy5zaGFyZWRTdHlsZXNIb3N0LnJlbW92ZUhvc3QodGhpcy5zaGFkb3dSb290KX1hcHBlbmRDaGlsZCh0LGUpe3JldHVybiBzdXBlci5hcHBlbmRDaGlsZCh0aGlzLm5vZGVPclNoYWRvd1Jvb3QodCksZSl9aW5zZXJ0QmVmb3JlKHQsZSxuKXtyZXR1cm4gc3VwZXIuaW5zZXJ0QmVmb3JlKHRoaXMubm9kZU9yU2hhZG93Um9vdCh0KSxlLG4pfXJlbW92ZUNoaWxkKHQsZSl7cmV0dXJuIHN1cGVyLnJlbW92ZUNoaWxkKHRoaXMubm9kZU9yU2hhZG93Um9vdCh0KSxlKX1wYXJlbnROb2RlKHQpe3JldHVybiB0aGlzLm5vZGVPclNoYWRvd1Jvb3Qoc3VwZXIucGFyZW50Tm9kZSh0aGlzLm5vZGVPclNoYWRvd1Jvb3QodCkpKX19bGV0IHhjPSgoKT0+e2NsYXNzIHQgZXh0ZW5kcyBtY3tjb25zdHJ1Y3Rvcih0KXtzdXBlcih0KX1zdXBwb3J0cyh0KXtyZXR1cm4hMH1hZGRFdmVudExpc3RlbmVyKHQsZSxuKXtyZXR1cm4gdC5hZGRFdmVudExpc3RlbmVyKGUsbiwhMSksKCk9PnRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcih0LGUsbil9cmVtb3ZlRXZlbnRMaXN0ZW5lcih0LGUsbil7cmV0dXJuIHQucmVtb3ZlRXZlbnRMaXN0ZW5lcihlLG4pfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KShHdChCbCkpfSx0Llx1MDI3NXByb3Y9dXQoe3Rva2VuOnQsZmFjdG9yeTp0Llx1MDI3NWZhY30pLHR9KSgpO2NvbnN0IGtjPVsiYWx0IiwiY29udHJvbCIsIm1ldGEiLCJzaGlmdCJdLFRjPXsiXGIiOiJCYWNrc3BhY2UiLCJcdCI6IlRhYiIsIlx4N2YiOiJEZWxldGUiLCJceDFiIjoiRXNjYXBlIixEZWw6IkRlbGV0ZSIsRXNjOiJFc2NhcGUiLExlZnQ6IkFycm93TGVmdCIsUmlnaHQ6IkFycm93UmlnaHQiLFVwOiJBcnJvd1VwIixEb3duOiJBcnJvd0Rvd24iLE1lbnU6IkNvbnRleHRNZW51IixTY3JvbGw6IlNjcm9sbExvY2siLFdpbjoiT1MifSxGYz17QToiMSIsQjoiMiIsQzoiMyIsRDoiNCIsRToiNSIsRjoiNiIsRzoiNyIsSDoiOCIsSToiOSIsSjoiKiIsSzoiKyIsTToiLSIsTjoiLiIsTzoiLyIsImAiOiIwIiwiXHg5MCI6Ik51bUxvY2sifSxPYz17YWx0OnQ9PnQuYWx0S2V5LGNvbnRyb2w6dD0+dC5jdHJsS2V5LG1ldGE6dD0+dC5tZXRhS2V5LHNoaWZ0OnQ9PnQuc2hpZnRLZXl9O2xldCBQYz0oKCk9PntjbGFzcyB0IGV4dGVuZHMgbWN7Y29uc3RydWN0b3IodCl7c3VwZXIodCl9c3VwcG9ydHMoZSl7cmV0dXJuIG51bGwhPXQucGFyc2VFdmVudE5hbWUoZSl9YWRkRXZlbnRMaXN0ZW5lcihlLG4scil7Y29uc3Qgcz10LnBhcnNlRXZlbnROYW1lKG4pLGk9dC5ldmVudENhbGxiYWNrKHMuZnVsbEtleSxyLHRoaXMubWFuYWdlci5nZXRab25lKCkpO3JldHVybiB0aGlzLm1hbmFnZXIuZ2V0Wm9uZSgpLnJ1bk91dHNpZGVBbmd1bGFyKCgpPT5WbCgpLm9uQW5kQ2FuY2VsKGUscy5kb21FdmVudE5hbWUsaSkpfXN0YXRpYyBwYXJzZUV2ZW50TmFtZShlKXtjb25zdCBuPWUudG9Mb3dlckNhc2UoKS5zcGxpdCgiLiIpLHI9bi5zaGlmdCgpO2lmKDA9PT1uLmxlbmd0aHx8ImtleWRvd24iIT09ciYmImtleXVwIiE9PXIpcmV0dXJuIG51bGw7Y29uc3Qgcz10Ll9ub3JtYWxpemVLZXkobi5wb3AoKSk7bGV0IGk9IiI7aWYoa2MuZm9yRWFjaCh0PT57Y29uc3QgZT1uLmluZGV4T2YodCk7ZT4tMSYmKG4uc3BsaWNlKGUsMSksaSs9dCsiLiIpfSksaSs9cywwIT1uLmxlbmd0aHx8MD09PXMubGVuZ3RoKXJldHVybiBudWxsO2NvbnN0IG89e307cmV0dXJuIG8uZG9tRXZlbnROYW1lPXIsby5mdWxsS2V5PWksb31zdGF0aWMgZ2V0RXZlbnRGdWxsS2V5KHQpe2xldCBlPSIiLG49ZnVuY3Rpb24odCl7bGV0IGU9dC5rZXk7aWYobnVsbD09ZSl7aWYoZT10LmtleUlkZW50aWZpZXIsbnVsbD09ZSlyZXR1cm4iVW5pZGVudGlmaWVkIjtlLnN0YXJ0c1dpdGgoIlUrIikmJihlPVN0cmluZy5mcm9tQ2hhckNvZGUocGFyc2VJbnQoZS5zdWJzdHJpbmcoMiksMTYpKSwzPT09dC5sb2NhdGlvbiYmRmMuaGFzT3duUHJvcGVydHkoZSkmJihlPUZjW2VdKSl9cmV0dXJuIFRjW2VdfHxlfSh0KTtyZXR1cm4gbj1uLnRvTG93ZXJDYXNlKCksIiAiPT09bj9uPSJzcGFjZSI6Ii4iPT09biYmKG49ImRvdCIpLGtjLmZvckVhY2gocj0+e3IhPW4mJigwLE9jW3JdKSh0KSYmKGUrPXIrIi4iKX0pLGUrPW4sZX1zdGF0aWMgZXZlbnRDYWxsYmFjayhlLG4scil7cmV0dXJuIHM9Pnt0LmdldEV2ZW50RnVsbEtleShzKT09PWUmJnIucnVuR3VhcmRlZCgoKT0+bihzKSl9fXN0YXRpYyBfbm9ybWFsaXplS2V5KHQpe3N3aXRjaCh0KXtjYXNlImVzYyI6cmV0dXJuImVzY2FwZSI7ZGVmYXVsdDpyZXR1cm4gdH19fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKEd0KEJsKSl9LHQuXHUwMjc1cHJvdj11dCh7dG9rZW46dCxmYWN0b3J5OnQuXHUwMjc1ZmFjfSksdH0pKCk7Y29uc3QgSWM9RGwoUmwsImJyb3dzZXIiLFt7cHJvdmlkZTpaYSx1c2VWYWx1ZToiYnJvd3NlciJ9LHtwcm92aWRlOldhLHVzZVZhbHVlOmZ1bmN0aW9uKCl7bGMubWFrZUN1cnJlbnQoKSxwYy5pbml0KCl9LG11bHRpOiEwfSx7cHJvdmlkZTpCbCx1c2VGYWN0b3J5OmZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHQpe1ZlPXR9KGRvY3VtZW50KSxkb2N1bWVudH0sZGVwczpbXX1dKSxSYz1bW10se3Byb3ZpZGU6cmksdXNlVmFsdWU6InJvb3QifSx7cHJvdmlkZTpwcix1c2VGYWN0b3J5OmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBwcn0sZGVwczpbXX0se3Byb3ZpZGU6ZmMsdXNlQ2xhc3M6eGMsbXVsdGk6ITAsZGVwczpbQmwsbGwsWmFdfSx7cHJvdmlkZTpmYyx1c2VDbGFzczpQYyxtdWx0aTohMCxkZXBzOltCbF19LFtdLHtwcm92aWRlOkRjLHVzZUNsYXNzOkRjLGRlcHM6W2djLHZjLCRhXX0se3Byb3ZpZGU6UG8sdXNlRXhpc3Rpbmc6RGN9LHtwcm92aWRlOnljLHVzZUV4aXN0aW5nOnZjfSx7cHJvdmlkZTp2Yyx1c2VDbGFzczp2YyxkZXBzOltCbF19LHtwcm92aWRlOm1sLHVzZUNsYXNzOm1sLGRlcHM6W2xsXX0se3Byb3ZpZGU6Z2MsdXNlQ2xhc3M6Z2MsZGVwczpbZmMsbGxdfSxbXV07bGV0IE1jPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IodCl7aWYodCl0aHJvdyBuZXcgRXJyb3IoIkJyb3dzZXJNb2R1bGUgaGFzIGFscmVhZHkgYmVlbiBsb2FkZWQuIElmIHlvdSBuZWVkIGFjY2VzcyB0byBjb21tb24gZGlyZWN0aXZlcyBzdWNoIGFzIE5nSWYgYW5kIE5nRm9yIGZyb20gYSBsYXp5IGxvYWRlZCBtb2R1bGUsIGltcG9ydCBDb21tb25Nb2R1bGUgaW5zdGVhZC4iKX1zdGF0aWMgd2l0aFNlcnZlclRyYW5zaXRpb24oZSl7cmV0dXJue25nTW9kdWxlOnQscHJvdmlkZXJzOlt7cHJvdmlkZTokYSx1c2VWYWx1ZTplLmFwcElkfSx7cHJvdmlkZTpoYyx1c2VFeGlzdGluZzokYX0sZGNdfX19cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKEd0KHQsMTIpKX0scHJvdmlkZXJzOlJjLGltcG9ydHM6W3NjLGpsXX0pLHR9KSgpOyJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3c7Y2xhc3MgamMgZXh0ZW5kcyBoe2NvbnN0cnVjdG9yKHQsZSl7c3VwZXIoKX1zY2hlZHVsZSh0LGU9MCl7cmV0dXJuIHRoaXN9fWNsYXNzIE5jIGV4dGVuZHMgamN7Y29uc3RydWN0b3IodCxlKXtzdXBlcih0LGUpLHRoaXMuc2NoZWR1bGVyPXQsdGhpcy53b3JrPWUsdGhpcy5wZW5kaW5nPSExfXNjaGVkdWxlKHQsZT0wKXtpZih0aGlzLmNsb3NlZClyZXR1cm4gdGhpczt0aGlzLnN0YXRlPXQ7Y29uc3Qgbj10aGlzLmlkLHI9dGhpcy5zY2hlZHVsZXI7cmV0dXJuIG51bGwhPW4mJih0aGlzLmlkPXRoaXMucmVjeWNsZUFzeW5jSWQocixuLGUpKSx0aGlzLnBlbmRpbmc9ITAsdGhpcy5kZWxheT1lLHRoaXMuaWQ9dGhpcy5pZHx8dGhpcy5yZXF1ZXN0QXN5bmNJZChyLHRoaXMuaWQsZSksdGhpc31yZXF1ZXN0QXN5bmNJZCh0LGUsbj0wKXtyZXR1cm4gc2V0SW50ZXJ2YWwodC5mbHVzaC5iaW5kKHQsdGhpcyksbil9cmVjeWNsZUFzeW5jSWQodCxlLG49MCl7aWYobnVsbCE9PW4mJnRoaXMuZGVsYXk9PT1uJiYhMT09PXRoaXMucGVuZGluZylyZXR1cm4gZTtjbGVhckludGVydmFsKGUpfWV4ZWN1dGUodCxlKXtpZih0aGlzLmNsb3NlZClyZXR1cm4gbmV3IEVycm9yKCJleGVjdXRpbmcgYSBjYW5jZWxsZWQgYWN0aW9uIik7dGhpcy5wZW5kaW5nPSExO2NvbnN0IG49dGhpcy5fZXhlY3V0ZSh0LGUpO2lmKG4pcmV0dXJuIG47ITE9PT10aGlzLnBlbmRpbmcmJm51bGwhPXRoaXMuaWQmJih0aGlzLmlkPXRoaXMucmVjeWNsZUFzeW5jSWQodGhpcy5zY2hlZHVsZXIsdGhpcy5pZCxudWxsKSl9X2V4ZWN1dGUodCxlKXtsZXQgbj0hMSxyPXZvaWQgMDt0cnl7dGhpcy53b3JrKHQpfWNhdGNoKHMpe249ITAscj0hIXMmJnN8fG5ldyBFcnJvcihzKX1pZihuKXJldHVybiB0aGlzLnVuc3Vic2NyaWJlKCkscn1fdW5zdWJzY3JpYmUoKXtjb25zdCB0PXRoaXMuaWQsZT10aGlzLnNjaGVkdWxlcixuPWUuYWN0aW9ucyxyPW4uaW5kZXhPZih0aGlzKTt0aGlzLndvcms9bnVsbCx0aGlzLnN0YXRlPW51bGwsdGhpcy5wZW5kaW5nPSExLHRoaXMuc2NoZWR1bGVyPW51bGwsLTEhPT1yJiZuLnNwbGljZShyLDEpLG51bGwhPXQmJih0aGlzLmlkPXRoaXMucmVjeWNsZUFzeW5jSWQoZSx0LG51bGwpKSx0aGlzLmRlbGF5PW51bGx9fWNsYXNzIFZjIGV4dGVuZHMgTmN7Y29uc3RydWN0b3IodCxlKXtzdXBlcih0LGUpLHRoaXMuc2NoZWR1bGVyPXQsdGhpcy53b3JrPWV9c2NoZWR1bGUodCxlPTApe3JldHVybiBlPjA/c3VwZXIuc2NoZWR1bGUodCxlKToodGhpcy5kZWxheT1lLHRoaXMuc3RhdGU9dCx0aGlzLnNjaGVkdWxlci5mbHVzaCh0aGlzKSx0aGlzKX1leGVjdXRlKHQsZSl7cmV0dXJuIGU+MHx8dGhpcy5jbG9zZWQ/c3VwZXIuZXhlY3V0ZSh0LGUpOnRoaXMuX2V4ZWN1dGUodCxlKX1yZXF1ZXN0QXN5bmNJZCh0LGUsbj0wKXtyZXR1cm4gbnVsbCE9PW4mJm4+MHx8bnVsbD09PW4mJnRoaXMuZGVsYXk+MD9zdXBlci5yZXF1ZXN0QXN5bmNJZCh0LGUsbik6dC5mbHVzaCh0aGlzKX19bGV0IEJjPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IoZSxuPXQubm93KXt0aGlzLlNjaGVkdWxlckFjdGlvbj1lLHRoaXMubm93PW59c2NoZWR1bGUodCxlPTAsbil7cmV0dXJuIG5ldyB0aGlzLlNjaGVkdWxlckFjdGlvbih0aGlzLHQpLnNjaGVkdWxlKG4sZSl9fXJldHVybiB0Lm5vdz0oKT0+RGF0ZS5ub3coKSx0fSkoKTtjbGFzcyBMYyBleHRlbmRzIEJje2NvbnN0cnVjdG9yKHQsZT1CYy5ub3cpe3N1cGVyKHQsKCk9PkxjLmRlbGVnYXRlJiZMYy5kZWxlZ2F0ZSE9PXRoaXM/TGMuZGVsZWdhdGUubm93KCk6ZSgpKSx0aGlzLmFjdGlvbnM9W10sdGhpcy5hY3RpdmU9ITEsdGhpcy5zY2hlZHVsZWQ9dm9pZCAwfXNjaGVkdWxlKHQsZT0wLG4pe3JldHVybiBMYy5kZWxlZ2F0ZSYmTGMuZGVsZWdhdGUhPT10aGlzP0xjLmRlbGVnYXRlLnNjaGVkdWxlKHQsZSxuKTpzdXBlci5zY2hlZHVsZSh0LGUsbil9Zmx1c2godCl7Y29uc3R7YWN0aW9uczplfT10aGlzO2lmKHRoaXMuYWN0aXZlKXJldHVybiB2b2lkIGUucHVzaCh0KTtsZXQgbjt0aGlzLmFjdGl2ZT0hMDtkb3tpZihuPXQuZXhlY3V0ZSh0LnN0YXRlLHQuZGVsYXkpKWJyZWFrfXdoaWxlKHQ9ZS5zaGlmdCgpKTtpZih0aGlzLmFjdGl2ZT0hMSxuKXtmb3IoO3Q9ZS5zaGlmdCgpOyl0LnVuc3Vic2NyaWJlKCk7dGhyb3cgbn19fWNsYXNzIFVjIGV4dGVuZHMgTGN7fWNvbnN0IEhjPW5ldyBVYyhWYyksJGM9bmV3IHYodD0+dC5jb21wbGV0ZSgpKTtmdW5jdGlvbiB6Yyh0KXtyZXR1cm4gdD9mdW5jdGlvbih0KXtyZXR1cm4gbmV3IHYoZT0+dC5zY2hlZHVsZSgoKT0+ZS5jb21wbGV0ZSgpKSl9KHQpOiRjfWZ1bmN0aW9uIHFjKC4uLnQpe2xldCBlPXRbdC5sZW5ndGgtMV07cmV0dXJuIEEoZSk/KHQucG9wKCksTSh0LGUpKTp6KHQpfWZ1bmN0aW9uIFdjKHQsZSl7cmV0dXJuIG5ldyB2KGU/bj0+ZS5zY2hlZHVsZShaYywwLHtlcnJvcjp0LHN1YnNjcmliZXI6bn0pOmU9PmUuZXJyb3IodCkpfWZ1bmN0aW9uIFpjKHtlcnJvcjp0LHN1YnNjcmliZXI6ZX0pe2UuZXJyb3IodCl9bGV0IEdjPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IodCxlLG4pe3RoaXMua2luZD10LHRoaXMudmFsdWU9ZSx0aGlzLmVycm9yPW4sdGhpcy5oYXNWYWx1ZT0iTiI9PT10fW9ic2VydmUodCl7c3dpdGNoKHRoaXMua2luZCl7Y2FzZSJOIjpyZXR1cm4gdC5uZXh0JiZ0Lm5leHQodGhpcy52YWx1ZSk7Y2FzZSJFIjpyZXR1cm4gdC5lcnJvciYmdC5lcnJvcih0aGlzLmVycm9yKTtjYXNlIkMiOnJldHVybiB0LmNvbXBsZXRlJiZ0LmNvbXBsZXRlKCl9fWRvKHQsZSxuKXtzd2l0Y2godGhpcy5raW5kKXtjYXNlIk4iOnJldHVybiB0JiZ0KHRoaXMudmFsdWUpO2Nhc2UiRSI6cmV0dXJuIGUmJmUodGhpcy5lcnJvcik7Y2FzZSJDIjpyZXR1cm4gbiYmbigpfX1hY2NlcHQodCxlLG4pe3JldHVybiB0JiYiZnVuY3Rpb24iPT10eXBlb2YgdC5uZXh0P3RoaXMub2JzZXJ2ZSh0KTp0aGlzLmRvKHQsZSxuKX10b09ic2VydmFibGUoKXtzd2l0Y2godGhpcy5raW5kKXtjYXNlIk4iOnJldHVybiBxYyh0aGlzLnZhbHVlKTtjYXNlIkUiOnJldHVybiBXYyh0aGlzLmVycm9yKTtjYXNlIkMiOnJldHVybiB6YygpfXRocm93IG5ldyBFcnJvcigidW5leHBlY3RlZCBub3RpZmljYXRpb24ga2luZCB2YWx1ZSIpfXN0YXRpYyBjcmVhdGVOZXh0KGUpe3JldHVybiB2b2lkIDAhPT1lP25ldyB0KCJOIixlKTp0LnVuZGVmaW5lZFZhbHVlTm90aWZpY2F0aW9ufXN0YXRpYyBjcmVhdGVFcnJvcihlKXtyZXR1cm4gbmV3IHQoIkUiLHZvaWQgMCxlKX1zdGF0aWMgY3JlYXRlQ29tcGxldGUoKXtyZXR1cm4gdC5jb21wbGV0ZU5vdGlmaWNhdGlvbn19cmV0dXJuIHQuY29tcGxldGVOb3RpZmljYXRpb249bmV3IHQoIkMiKSx0LnVuZGVmaW5lZFZhbHVlTm90aWZpY2F0aW9uPW5ldyB0KCJOIix2b2lkIDApLHR9KSgpO2NsYXNzIEtjIGV4dGVuZHMgZntjb25zdHJ1Y3Rvcih0LGUsbj0wKXtzdXBlcih0KSx0aGlzLnNjaGVkdWxlcj1lLHRoaXMuZGVsYXk9bn1zdGF0aWMgZGlzcGF0Y2godCl7Y29uc3R7bm90aWZpY2F0aW9uOmUsZGVzdGluYXRpb246bn09dDtlLm9ic2VydmUobiksdGhpcy51bnN1YnNjcmliZSgpfXNjaGVkdWxlTWVzc2FnZSh0KXt0aGlzLmRlc3RpbmF0aW9uLmFkZCh0aGlzLnNjaGVkdWxlci5zY2hlZHVsZShLYy5kaXNwYXRjaCx0aGlzLmRlbGF5LG5ldyBRYyh0LHRoaXMuZGVzdGluYXRpb24pKSl9X25leHQodCl7dGhpcy5zY2hlZHVsZU1lc3NhZ2UoR2MuY3JlYXRlTmV4dCh0KSl9X2Vycm9yKHQpe3RoaXMuc2NoZWR1bGVNZXNzYWdlKEdjLmNyZWF0ZUVycm9yKHQpKSx0aGlzLnVuc3Vic2NyaWJlKCl9X2NvbXBsZXRlKCl7dGhpcy5zY2hlZHVsZU1lc3NhZ2UoR2MuY3JlYXRlQ29tcGxldGUoKSksdGhpcy51bnN1YnNjcmliZSgpfX1jbGFzcyBRY3tjb25zdHJ1Y3Rvcih0LGUpe3RoaXMubm90aWZpY2F0aW9uPXQsdGhpcy5kZXN0aW5hdGlvbj1lfX1jbGFzcyBZYyBleHRlbmRzIER7Y29uc3RydWN0b3IodD1OdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFksZT1OdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFksbil7c3VwZXIoKSx0aGlzLnNjaGVkdWxlcj1uLHRoaXMuX2V2ZW50cz1bXSx0aGlzLl9pbmZpbml0ZVRpbWVXaW5kb3c9ITEsdGhpcy5fYnVmZmVyU2l6ZT10PDE/MTp0LHRoaXMuX3dpbmRvd1RpbWU9ZTwxPzE6ZSxlPT09TnVtYmVyLlBPU0lUSVZFX0lORklOSVRZPyh0aGlzLl9pbmZpbml0ZVRpbWVXaW5kb3c9ITAsdGhpcy5uZXh0PXRoaXMubmV4dEluZmluaXRlVGltZVdpbmRvdyk6dGhpcy5uZXh0PXRoaXMubmV4dFRpbWVXaW5kb3d9bmV4dEluZmluaXRlVGltZVdpbmRvdyh0KXtpZighdGhpcy5pc1N0b3BwZWQpe2NvbnN0IGU9dGhpcy5fZXZlbnRzO2UucHVzaCh0KSxlLmxlbmd0aD50aGlzLl9idWZmZXJTaXplJiZlLnNoaWZ0KCl9c3VwZXIubmV4dCh0KX1uZXh0VGltZVdpbmRvdyh0KXt0aGlzLmlzU3RvcHBlZHx8KHRoaXMuX2V2ZW50cy5wdXNoKG5ldyBKYyh0aGlzLl9nZXROb3coKSx0KSksdGhpcy5fdHJpbUJ1ZmZlclRoZW5HZXRFdmVudHMoKSksc3VwZXIubmV4dCh0KX1fc3Vic2NyaWJlKHQpe2NvbnN0IGU9dGhpcy5faW5maW5pdGVUaW1lV2luZG93LG49ZT90aGlzLl9ldmVudHM6dGhpcy5fdHJpbUJ1ZmZlclRoZW5HZXRFdmVudHMoKSxyPXRoaXMuc2NoZWR1bGVyLHM9bi5sZW5ndGg7bGV0IGk7aWYodGhpcy5jbG9zZWQpdGhyb3cgbmV3IHc7aWYodGhpcy5pc1N0b3BwZWR8fHRoaXMuaGFzRXJyb3I/aT1oLkVNUFRZOih0aGlzLm9ic2VydmVycy5wdXNoKHQpLGk9bmV3IF8odGhpcyx0KSksciYmdC5hZGQodD1uZXcgS2ModCxyKSksZSlmb3IobGV0IG89MDtvPHMmJiF0LmNsb3NlZDtvKyspdC5uZXh0KG5bb10pO2Vsc2UgZm9yKGxldCBvPTA7bzxzJiYhdC5jbG9zZWQ7bysrKXQubmV4dChuW29dLnZhbHVlKTtyZXR1cm4gdGhpcy5oYXNFcnJvcj90LmVycm9yKHRoaXMudGhyb3duRXJyb3IpOnRoaXMuaXNTdG9wcGVkJiZ0LmNvbXBsZXRlKCksaX1fZ2V0Tm93KCl7cmV0dXJuKHRoaXMuc2NoZWR1bGVyfHxIYykubm93KCl9X3RyaW1CdWZmZXJUaGVuR2V0RXZlbnRzKCl7Y29uc3QgdD10aGlzLl9nZXROb3coKSxlPXRoaXMuX2J1ZmZlclNpemUsbj10aGlzLl93aW5kb3dUaW1lLHI9dGhpcy5fZXZlbnRzLHM9ci5sZW5ndGg7bGV0IGk9MDtmb3IoO2k8cyYmISh0LXJbaV0udGltZTxuKTspaSsrO3JldHVybiBzPmUmJihpPU1hdGgubWF4KGkscy1lKSksaT4wJiZyLnNwbGljZSgwLGkpLHJ9fWNsYXNzIEpje2NvbnN0cnVjdG9yKHQsZSl7dGhpcy50aW1lPXQsdGhpcy52YWx1ZT1lfX1mdW5jdGlvbiBYYyh0LGUpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiBlP249Pm4ucGlwZShYYygobixyKT0+aih0KG4scikpLnBpcGUoUygodCxzKT0+ZShuLHQscixzKSkpKSk6ZT0+ZS5saWZ0KG5ldyB0aCh0KSl9Y2xhc3MgdGh7Y29uc3RydWN0b3IodCl7dGhpcy5wcm9qZWN0PXR9Y2FsbCh0LGUpe3JldHVybiBlLnN1YnNjcmliZShuZXcgZWgodCx0aGlzLnByb2plY3QpKX19Y2xhc3MgZWggZXh0ZW5kcyBWe2NvbnN0cnVjdG9yKHQsZSl7c3VwZXIodCksdGhpcy5wcm9qZWN0PWUsdGhpcy5pbmRleD0wfV9uZXh0KHQpe2xldCBlO2NvbnN0IG49dGhpcy5pbmRleCsrO3RyeXtlPXRoaXMucHJvamVjdCh0LG4pfWNhdGNoKHIpe3JldHVybiB2b2lkIHRoaXMuZGVzdGluYXRpb24uZXJyb3Iocil9dGhpcy5faW5uZXJTdWIoZSl9X2lubmVyU3ViKHQpe2NvbnN0IGU9dGhpcy5pbm5lclN1YnNjcmlwdGlvbjtlJiZlLnVuc3Vic2NyaWJlKCk7Y29uc3Qgbj1uZXcgTih0aGlzKSxyPXRoaXMuZGVzdGluYXRpb247ci5hZGQobiksdGhpcy5pbm5lclN1YnNjcmlwdGlvbj1CKHQsbiksdGhpcy5pbm5lclN1YnNjcmlwdGlvbiE9PW4mJnIuYWRkKHRoaXMuaW5uZXJTdWJzY3JpcHRpb24pfV9jb21wbGV0ZSgpe2NvbnN0e2lubmVyU3Vic2NyaXB0aW9uOnR9PXRoaXM7dCYmIXQuY2xvc2VkfHxzdXBlci5fY29tcGxldGUoKSx0aGlzLnVuc3Vic2NyaWJlKCl9X3Vuc3Vic2NyaWJlKCl7dGhpcy5pbm5lclN1YnNjcmlwdGlvbj12b2lkIDB9bm90aWZ5Q29tcGxldGUoKXt0aGlzLmlubmVyU3Vic2NyaXB0aW9uPXZvaWQgMCx0aGlzLmlzU3RvcHBlZCYmc3VwZXIuX2NvbXBsZXRlKCl9bm90aWZ5TmV4dCh0KXt0aGlzLmRlc3RpbmF0aW9uLm5leHQodCl9fWNvbnN0IG5oPXtzY2hlZHVsZSh0LGUpe2NvbnN0IG49c2V0VGltZW91dCh0LGUpO3JldHVybigpPT5jbGVhclRpbWVvdXQobil9LHNjaGVkdWxlQmVmb3JlUmVuZGVyKHQpe2lmKCJ1bmRlZmluZWQiPT10eXBlb2Ygd2luZG93KXJldHVybiBuaC5zY2hlZHVsZSh0LDApO2lmKHZvaWQgMD09PXdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUpcmV0dXJuIG5oLnNjaGVkdWxlKHQsMTYpO2NvbnN0IGU9d2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSh0KTtyZXR1cm4oKT0+d2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lKGUpfX07bGV0IHJoO2Z1bmN0aW9uIHNoKHQsZSxuKXtsZXQgcj1uO3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4hIXQmJnQubm9kZVR5cGU9PT1Ob2RlLkVMRU1FTlRfTk9ERX0odCkmJmUuc29tZSgoZSxuKT0+ISgiKiI9PT1lfHwhZnVuY3Rpb24odCxlKXtpZighcmgpe2NvbnN0IHQ9RWxlbWVudC5wcm90b3R5cGU7cmg9dC5tYXRjaGVzfHx0Lm1hdGNoZXNTZWxlY3Rvcnx8dC5tb3pNYXRjaGVzU2VsZWN0b3J8fHQubXNNYXRjaGVzU2VsZWN0b3J8fHQub01hdGNoZXNTZWxlY3Rvcnx8dC53ZWJraXRNYXRjaGVzU2VsZWN0b3J9cmV0dXJuIHQubm9kZVR5cGU9PT1Ob2RlLkVMRU1FTlRfTk9ERSYmcmguY2FsbCh0LGUpfSh0LGUpfHwocj1uLDApKSkscn1jbGFzcyBpaHtjb25zdHJ1Y3Rvcih0LGUpe3RoaXMuY29tcG9uZW50RmFjdG9yeT1lLmdldChUbykucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkodCl9Y3JlYXRlKHQpe3JldHVybiBuZXcgb2godGhpcy5jb21wb25lbnRGYWN0b3J5LHQpfX1jbGFzcyBvaHtjb25zdHJ1Y3Rvcih0LGUpe3RoaXMuY29tcG9uZW50RmFjdG9yeT10LHRoaXMuaW5qZWN0b3I9ZSx0aGlzLmV2ZW50RW1pdHRlcnM9bmV3IFljKDEpLHRoaXMuZXZlbnRzPXRoaXMuZXZlbnRFbWl0dGVycy5waXBlKFhjKHQ9PnEoLi4udCkpKSx0aGlzLmNvbXBvbmVudFJlZj1udWxsLHRoaXMuaW5wdXRDaGFuZ2VzPW51bGwsdGhpcy5pbXBsZW1lbnRzT25DaGFuZ2VzPSExLHRoaXMuc2NoZWR1bGVkQ2hhbmdlRGV0ZWN0aW9uRm49bnVsbCx0aGlzLnNjaGVkdWxlZERlc3Ryb3lGbj1udWxsLHRoaXMuaW5pdGlhbElucHV0VmFsdWVzPW5ldyBNYXAsdGhpcy51bmNoYW5nZWRJbnB1dHM9bmV3IFNldCx0aGlzLm5nWm9uZT10aGlzLmluamVjdG9yLmdldChsbCksdGhpcy5lbGVtZW50Wm9uZT0idW5kZWZpbmVkIj09dHlwZW9mIFpvbmU/bnVsbDp0aGlzLm5nWm9uZS5ydW4oKCk9PlpvbmUuY3VycmVudCl9Y29ubmVjdCh0KXt0aGlzLnJ1bkluWm9uZSgoKT0+e2lmKG51bGwhPT10aGlzLnNjaGVkdWxlZERlc3Ryb3lGbilyZXR1cm4gdGhpcy5zY2hlZHVsZWREZXN0cm95Rm4oKSx2b2lkKHRoaXMuc2NoZWR1bGVkRGVzdHJveUZuPW51bGwpO251bGw9PT10aGlzLmNvbXBvbmVudFJlZiYmdGhpcy5pbml0aWFsaXplQ29tcG9uZW50KHQpfSl9ZGlzY29ubmVjdCgpe3RoaXMucnVuSW5ab25lKCgpPT57bnVsbCE9PXRoaXMuY29tcG9uZW50UmVmJiZudWxsPT09dGhpcy5zY2hlZHVsZWREZXN0cm95Rm4mJih0aGlzLnNjaGVkdWxlZERlc3Ryb3lGbj1uaC5zY2hlZHVsZSgoKT0+e251bGwhPT10aGlzLmNvbXBvbmVudFJlZiYmKHRoaXMuY29tcG9uZW50UmVmLmRlc3Ryb3koKSx0aGlzLmNvbXBvbmVudFJlZj1udWxsKX0sMTApKX0pfWdldElucHV0VmFsdWUodCl7cmV0dXJuIHRoaXMucnVuSW5ab25lKCgpPT5udWxsPT09dGhpcy5jb21wb25lbnRSZWY/dGhpcy5pbml0aWFsSW5wdXRWYWx1ZXMuZ2V0KHQpOnRoaXMuY29tcG9uZW50UmVmLmluc3RhbmNlW3RdKX1zZXRJbnB1dFZhbHVlKHQsZSl7dGhpcy5ydW5JblpvbmUoKCk9Pnt2YXIgbixyO251bGwhPT10aGlzLmNvbXBvbmVudFJlZj8oKG49ZSkhPT0ocj10aGlzLmdldElucHV0VmFsdWUodCkpJiYobj09bnx8cj09cil8fHZvaWQgMD09PWUmJnRoaXMudW5jaGFuZ2VkSW5wdXRzLmhhcyh0KSkmJih0aGlzLnJlY29yZElucHV0Q2hhbmdlKHQsZSksdGhpcy5jb21wb25lbnRSZWYuaW5zdGFuY2VbdF09ZSx0aGlzLnNjaGVkdWxlRGV0ZWN0Q2hhbmdlcygpKTp0aGlzLmluaXRpYWxJbnB1dFZhbHVlcy5zZXQodCxlKX0pfWluaXRpYWxpemVDb21wb25lbnQodCl7Y29uc3QgZT15aS5jcmVhdGUoe3Byb3ZpZGVyczpbXSxwYXJlbnQ6dGhpcy5pbmplY3Rvcn0pLG49ZnVuY3Rpb24odCxlKXtjb25zdCBuPXQuY2hpbGROb2RlcyxyPWUubWFwKCgpPT5bXSk7bGV0IHM9LTE7ZS5zb21lKCh0LGUpPT4iKiI9PT10JiYocz1lLCEwKSk7Zm9yKGxldCBpPTAsbz1uLmxlbmd0aDtpPG87KytpKXtjb25zdCB0PW5baV0sbz1zaCh0LGUscyk7LTEhPT1vJiZyW29dLnB1c2godCl9cmV0dXJuIHJ9KHQsdGhpcy5jb21wb25lbnRGYWN0b3J5Lm5nQ29udGVudFNlbGVjdG9ycyk7dGhpcy5jb21wb25lbnRSZWY9dGhpcy5jb21wb25lbnRGYWN0b3J5LmNyZWF0ZShlLG4sdCksdGhpcy5pbXBsZW1lbnRzT25DaGFuZ2VzPSJmdW5jdGlvbiI9PXR5cGVvZiB0aGlzLmNvbXBvbmVudFJlZi5pbnN0YW5jZS5uZ09uQ2hhbmdlcyx0aGlzLmluaXRpYWxpemVJbnB1dHMoKSx0aGlzLmluaXRpYWxpemVPdXRwdXRzKHRoaXMuY29tcG9uZW50UmVmKSx0aGlzLmRldGVjdENoYW5nZXMoKSx0aGlzLmluamVjdG9yLmdldCh4bCkuYXR0YWNoVmlldyh0aGlzLmNvbXBvbmVudFJlZi5ob3N0Vmlldyl9aW5pdGlhbGl6ZUlucHV0cygpe3RoaXMuY29tcG9uZW50RmFjdG9yeS5pbnB1dHMuZm9yRWFjaCgoe3Byb3BOYW1lOnR9KT0+e3RoaXMuaW1wbGVtZW50c09uQ2hhbmdlcyYmdGhpcy51bmNoYW5nZWRJbnB1dHMuYWRkKHQpLHRoaXMuaW5pdGlhbElucHV0VmFsdWVzLmhhcyh0KSYmdGhpcy5zZXRJbnB1dFZhbHVlKHQsdGhpcy5pbml0aWFsSW5wdXRWYWx1ZXMuZ2V0KHQpKX0pLHRoaXMuaW5pdGlhbElucHV0VmFsdWVzLmNsZWFyKCl9aW5pdGlhbGl6ZU91dHB1dHModCl7Y29uc3QgZT10aGlzLmNvbXBvbmVudEZhY3Rvcnkub3V0cHV0cy5tYXAoKHtwcm9wTmFtZTplLHRlbXBsYXRlTmFtZTpufSk9PnQuaW5zdGFuY2VbZV0ucGlwZShTKHQ9Pih7bmFtZTpuLHZhbHVlOnR9KSkpKTt0aGlzLmV2ZW50RW1pdHRlcnMubmV4dChlKX1jYWxsTmdPbkNoYW5nZXModCl7aWYoIXRoaXMuaW1wbGVtZW50c09uQ2hhbmdlc3x8bnVsbD09PXRoaXMuaW5wdXRDaGFuZ2VzKXJldHVybjtjb25zdCBlPXRoaXMuaW5wdXRDaGFuZ2VzO3RoaXMuaW5wdXRDaGFuZ2VzPW51bGwsdC5pbnN0YW5jZS5uZ09uQ2hhbmdlcyhlKX1zY2hlZHVsZURldGVjdENoYW5nZXMoKXt0aGlzLnNjaGVkdWxlZENoYW5nZURldGVjdGlvbkZufHwodGhpcy5zY2hlZHVsZWRDaGFuZ2VEZXRlY3Rpb25Gbj1uaC5zY2hlZHVsZUJlZm9yZVJlbmRlcigoKT0+e3RoaXMuc2NoZWR1bGVkQ2hhbmdlRGV0ZWN0aW9uRm49bnVsbCx0aGlzLmRldGVjdENoYW5nZXMoKX0pKX1yZWNvcmRJbnB1dENoYW5nZSh0LGUpe2lmKG51bGwhPT10aGlzLmNvbXBvbmVudFJlZiYmIXRoaXMuaW1wbGVtZW50c09uQ2hhbmdlcylyZXR1cm47bnVsbD09PXRoaXMuaW5wdXRDaGFuZ2VzJiYodGhpcy5pbnB1dENoYW5nZXM9e30pO2NvbnN0IG49dGhpcy5pbnB1dENoYW5nZXNbdF07aWYobilyZXR1cm4gdm9pZChuLmN1cnJlbnRWYWx1ZT1lKTtjb25zdCByPXRoaXMudW5jaGFuZ2VkSW5wdXRzLmhhcyh0KTt0aGlzLnVuY2hhbmdlZElucHV0cy5kZWxldGUodCk7Y29uc3Qgcz1yP3ZvaWQgMDp0aGlzLmdldElucHV0VmFsdWUodCk7dGhpcy5pbnB1dENoYW5nZXNbdF09bmV3IFBlKHMsZSxyKX1kZXRlY3RDaGFuZ2VzKCl7bnVsbCE9PXRoaXMuY29tcG9uZW50UmVmJiYodGhpcy5jYWxsTmdPbkNoYW5nZXModGhpcy5jb21wb25lbnRSZWYpLHRoaXMuY29tcG9uZW50UmVmLmNoYW5nZURldGVjdG9yUmVmLmRldGVjdENoYW5nZXMoKSl9cnVuSW5ab25lKHQpe3JldHVybiB0aGlzLmVsZW1lbnRab25lJiZab25lLmN1cnJlbnQhPT10aGlzLmVsZW1lbnRab25lP3RoaXMubmdab25lLnJ1bih0KTp0KCl9fWNsYXNzIGFoIGV4dGVuZHMgSFRNTEVsZW1lbnR7Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLHRoaXMubmdFbGVtZW50RXZlbnRzU3Vic2NyaXB0aW9uPW51bGx9fWZ1bmN0aW9uIGxoKHQsZSl7dC5mb3JFYWNoKCh7cHJvcE5hbWU6dH0pPT57T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7Z2V0KCl7cmV0dXJuIHRoaXMubmdFbGVtZW50U3RyYXRlZ3kuZ2V0SW5wdXRWYWx1ZSh0KX0sc2V0KGUpe3RoaXMubmdFbGVtZW50U3RyYXRlZ3kuc2V0SW5wdXRWYWx1ZSh0LGUpfSxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMH0pfSl9ZnVuY3Rpb24gdWgodCxlKXtyZXR1cm4gbmV3IHYobj0+e2NvbnN0IHI9dC5sZW5ndGg7aWYoMD09PXIpcmV0dXJuIHZvaWQgbi5jb21wbGV0ZSgpO2NvbnN0IHM9bmV3IEFycmF5KHIpO2xldCBpPTAsbz0wO2ZvcihsZXQgYT0wO2E8cjthKyspe2NvbnN0IGw9aih0W2FdKTtsZXQgdT0hMTtuLmFkZChsLnN1YnNjcmliZSh7bmV4dDp0PT57dXx8KHU9ITAsbysrKSxzW2FdPXR9LGVycm9yOnQ9Pm4uZXJyb3IodCksY29tcGxldGU6KCk9PntpKyssaSE9PXImJnV8fChvPT09ciYmbi5uZXh0KGU/ZS5yZWR1Y2UoKHQsZSxuKT0+KHRbZV09c1tuXSx0KSx7fSk6cyksbi5jb21wbGV0ZSgpKX19KSl9fSl9Y29uc3QgY2g9bmV3IE50KCJOZ1ZhbHVlQWNjZXNzb3IiKSxoaD17cHJvdmlkZTpjaCx1c2VFeGlzdGluZzpDdCgoKT0+ZGgpLG11bHRpOiEwfTtsZXQgZGg9KCgpPT57Y2xhc3MgdHtjb25zdHJ1Y3Rvcih0LGUpe3RoaXMuX3JlbmRlcmVyPXQsdGhpcy5fZWxlbWVudFJlZj1lLHRoaXMub25DaGFuZ2U9dD0+e30sdGhpcy5vblRvdWNoZWQ9KCk9Pnt9fXdyaXRlVmFsdWUodCl7dGhpcy5fcmVuZGVyZXIuc2V0UHJvcGVydHkodGhpcy5fZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCJjaGVja2VkIix0KX1yZWdpc3Rlck9uQ2hhbmdlKHQpe3RoaXMub25DaGFuZ2U9dH1yZWdpc3Rlck9uVG91Y2hlZCh0KXt0aGlzLm9uVG91Y2hlZD10fXNldERpc2FibGVkU3RhdGUodCl7dGhpcy5fcmVuZGVyZXIuc2V0UHJvcGVydHkodGhpcy5fZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCJkaXNhYmxlZCIsdCl9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKFJpKFJvKSxSaShGbykpfSx0Llx1MDI3NWRpcj12ZSh7dHlwZTp0LHNlbGVjdG9yczpbWyJpbnB1dCIsInR5cGUiLCJjaGVja2JveCIsImZvcm1Db250cm9sTmFtZSIsIiJdLFsiaW5wdXQiLCJ0eXBlIiwiY2hlY2tib3giLCJmb3JtQ29udHJvbCIsIiJdLFsiaW5wdXQiLCJ0eXBlIiwiY2hlY2tib3giLCJuZ01vZGVsIiwiIl1dLGhvc3RCaW5kaW5nczpmdW5jdGlvbih0LGUpezEmdCYmJGkoImNoYW5nZSIsKGZ1bmN0aW9uKHQpe3JldHVybiBlLm9uQ2hhbmdlKHQudGFyZ2V0LmNoZWNrZWQpfSkpKCJibHVyIiwoZnVuY3Rpb24oKXtyZXR1cm4gZS5vblRvdWNoZWQoKX0pKX0sZmVhdHVyZXM6W1NvKFtoaF0pXX0pLHR9KSgpO2NvbnN0IHBoPXtwcm92aWRlOmNoLHVzZUV4aXN0aW5nOkN0KCgpPT5naCksbXVsdGk6ITB9LGZoPW5ldyBOdCgiQ29tcG9zaXRpb25FdmVudE1vZGUiKTtsZXQgZ2g9KCgpPT57Y2xhc3MgdHtjb25zdHJ1Y3Rvcih0LGUsbil7dGhpcy5fcmVuZGVyZXI9dCx0aGlzLl9lbGVtZW50UmVmPWUsdGhpcy5fY29tcG9zaXRpb25Nb2RlPW4sdGhpcy5vbkNoYW5nZT10PT57fSx0aGlzLm9uVG91Y2hlZD0oKT0+e30sdGhpcy5fY29tcG9zaW5nPSExLG51bGw9PXRoaXMuX2NvbXBvc2l0aW9uTW9kZSYmKHRoaXMuX2NvbXBvc2l0aW9uTW9kZT0hZnVuY3Rpb24oKXtjb25zdCB0PVZsKCk/VmwoKS5nZXRVc2VyQWdlbnQoKToiIjtyZXR1cm4vYW5kcm9pZCAoXGQrKS8udGVzdCh0LnRvTG93ZXJDYXNlKCkpfSgpKX13cml0ZVZhbHVlKHQpe3RoaXMuX3JlbmRlcmVyLnNldFByb3BlcnR5KHRoaXMuX2VsZW1lbnRSZWYubmF0aXZlRWxlbWVudCwidmFsdWUiLG51bGw9PXQ/IiI6dCl9cmVnaXN0ZXJPbkNoYW5nZSh0KXt0aGlzLm9uQ2hhbmdlPXR9cmVnaXN0ZXJPblRvdWNoZWQodCl7dGhpcy5vblRvdWNoZWQ9dH1zZXREaXNhYmxlZFN0YXRlKHQpe3RoaXMuX3JlbmRlcmVyLnNldFByb3BlcnR5KHRoaXMuX2VsZW1lbnRSZWYubmF0aXZlRWxlbWVudCwiZGlzYWJsZWQiLHQpfV9oYW5kbGVJbnB1dCh0KXsoIXRoaXMuX2NvbXBvc2l0aW9uTW9kZXx8dGhpcy5fY29tcG9zaXRpb25Nb2RlJiYhdGhpcy5fY29tcG9zaW5nKSYmdGhpcy5vbkNoYW5nZSh0KX1fY29tcG9zaXRpb25TdGFydCgpe3RoaXMuX2NvbXBvc2luZz0hMH1fY29tcG9zaXRpb25FbmQodCl7dGhpcy5fY29tcG9zaW5nPSExLHRoaXMuX2NvbXBvc2l0aW9uTW9kZSYmdGhpcy5vbkNoYW5nZSh0KX19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCkoUmkoUm8pLFJpKEZvKSxSaShmaCw4KSl9LHQuXHUwMjc1ZGlyPXZlKHt0eXBlOnQsc2VsZWN0b3JzOltbImlucHV0IiwiZm9ybUNvbnRyb2xOYW1lIiwiIiwzLCJ0eXBlIiwiY2hlY2tib3giXSxbInRleHRhcmVhIiwiZm9ybUNvbnRyb2xOYW1lIiwiIl0sWyJpbnB1dCIsImZvcm1Db250cm9sIiwiIiwzLCJ0eXBlIiwiY2hlY2tib3giXSxbInRleHRhcmVhIiwiZm9ybUNvbnRyb2wiLCIiXSxbImlucHV0IiwibmdNb2RlbCIsIiIsMywidHlwZSIsImNoZWNrYm94Il0sWyJ0ZXh0YXJlYSIsIm5nTW9kZWwiLCIiXSxbIiIsIm5nRGVmYXVsdENvbnRyb2wiLCIiXV0saG9zdEJpbmRpbmdzOmZ1bmN0aW9uKHQsZSl7MSZ0JiYkaSgiaW5wdXQiLChmdW5jdGlvbih0KXtyZXR1cm4gZS5faGFuZGxlSW5wdXQodC50YXJnZXQudmFsdWUpfSkpKCJibHVyIiwoZnVuY3Rpb24oKXtyZXR1cm4gZS5vblRvdWNoZWQoKX0pKSgiY29tcG9zaXRpb25zdGFydCIsKGZ1bmN0aW9uKCl7cmV0dXJuIGUuX2NvbXBvc2l0aW9uU3RhcnQoKX0pKSgiY29tcG9zaXRpb25lbmQiLChmdW5jdGlvbih0KXtyZXR1cm4gZS5fY29tcG9zaXRpb25FbmQodC50YXJnZXQudmFsdWUpfSkpfSxmZWF0dXJlczpbU28oW3BoXSldfSksdH0pKCksbWg9KCgpPT57Y2xhc3MgdHtnZXQgdmFsdWUoKXtyZXR1cm4gdGhpcy5jb250cm9sP3RoaXMuY29udHJvbC52YWx1ZTpudWxsfWdldCB2YWxpZCgpe3JldHVybiB0aGlzLmNvbnRyb2w/dGhpcy5jb250cm9sLnZhbGlkOm51bGx9Z2V0IGludmFsaWQoKXtyZXR1cm4gdGhpcy5jb250cm9sP3RoaXMuY29udHJvbC5pbnZhbGlkOm51bGx9Z2V0IHBlbmRpbmcoKXtyZXR1cm4gdGhpcy5jb250cm9sP3RoaXMuY29udHJvbC5wZW5kaW5nOm51bGx9Z2V0IGRpc2FibGVkKCl7cmV0dXJuIHRoaXMuY29udHJvbD90aGlzLmNvbnRyb2wuZGlzYWJsZWQ6bnVsbH1nZXQgZW5hYmxlZCgpe3JldHVybiB0aGlzLmNvbnRyb2w/dGhpcy5jb250cm9sLmVuYWJsZWQ6bnVsbH1nZXQgZXJyb3JzKCl7cmV0dXJuIHRoaXMuY29udHJvbD90aGlzLmNvbnRyb2wuZXJyb3JzOm51bGx9Z2V0IHByaXN0aW5lKCl7cmV0dXJuIHRoaXMuY29udHJvbD90aGlzLmNvbnRyb2wucHJpc3RpbmU6bnVsbH1nZXQgZGlydHkoKXtyZXR1cm4gdGhpcy5jb250cm9sP3RoaXMuY29udHJvbC5kaXJ0eTpudWxsfWdldCB0b3VjaGVkKCl7cmV0dXJuIHRoaXMuY29udHJvbD90aGlzLmNvbnRyb2wudG91Y2hlZDpudWxsfWdldCBzdGF0dXMoKXtyZXR1cm4gdGhpcy5jb250cm9sP3RoaXMuY29udHJvbC5zdGF0dXM6bnVsbH1nZXQgdW50b3VjaGVkKCl7cmV0dXJuIHRoaXMuY29udHJvbD90aGlzLmNvbnRyb2wudW50b3VjaGVkOm51bGx9Z2V0IHN0YXR1c0NoYW5nZXMoKXtyZXR1cm4gdGhpcy5jb250cm9sP3RoaXMuY29udHJvbC5zdGF0dXNDaGFuZ2VzOm51bGx9Z2V0IHZhbHVlQ2hhbmdlcygpe3JldHVybiB0aGlzLmNvbnRyb2w/dGhpcy5jb250cm9sLnZhbHVlQ2hhbmdlczpudWxsfWdldCBwYXRoKCl7cmV0dXJuIG51bGx9cmVzZXQodCl7dGhpcy5jb250cm9sJiZ0aGlzLmNvbnRyb2wucmVzZXQodCl9aGFzRXJyb3IodCxlKXtyZXR1cm4hIXRoaXMuY29udHJvbCYmdGhpcy5jb250cm9sLmhhc0Vycm9yKHQsZSl9Z2V0RXJyb3IodCxlKXtyZXR1cm4gdGhpcy5jb250cm9sP3RoaXMuY29udHJvbC5nZXRFcnJvcih0LGUpOm51bGx9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSx0Llx1MDI3NWRpcj12ZSh7dHlwZTp0fSksdH0pKCkseWg9KCgpPT57Y2xhc3MgdCBleHRlbmRzIG1oe2dldCBmb3JtRGlyZWN0aXZlKCl7cmV0dXJuIG51bGx9Z2V0IHBhdGgoKXtyZXR1cm4gbnVsbH19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiB2aChlfHx0KX0sdC5cdTAyNzVkaXI9dmUoe3R5cGU6dCxmZWF0dXJlczpbX2ldfSksdH0pKCk7Y29uc3Qgdmg9dXIoeWgpO2NsYXNzIGJoIGV4dGVuZHMgbWh7Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLHRoaXMuX3BhcmVudD1udWxsLHRoaXMubmFtZT1udWxsLHRoaXMudmFsdWVBY2Nlc3Nvcj1udWxsLHRoaXMuX3Jhd1ZhbGlkYXRvcnM9W10sdGhpcy5fcmF3QXN5bmNWYWxpZGF0b3JzPVtdfWdldCB2YWxpZGF0b3IoKXt9Z2V0IGFzeW5jVmFsaWRhdG9yKCl7fX1sZXQgd2g9KCgpPT57Y2xhc3MgdCBleHRlbmRzIGNsYXNze2NvbnN0cnVjdG9yKHQpe3RoaXMuX2NkPXR9Z2V0IG5nQ2xhc3NVbnRvdWNoZWQoKXtyZXR1cm4hIXRoaXMuX2NkLmNvbnRyb2wmJnRoaXMuX2NkLmNvbnRyb2wudW50b3VjaGVkfWdldCBuZ0NsYXNzVG91Y2hlZCgpe3JldHVybiEhdGhpcy5fY2QuY29udHJvbCYmdGhpcy5fY2QuY29udHJvbC50b3VjaGVkfWdldCBuZ0NsYXNzUHJpc3RpbmUoKXtyZXR1cm4hIXRoaXMuX2NkLmNvbnRyb2wmJnRoaXMuX2NkLmNvbnRyb2wucHJpc3RpbmV9Z2V0IG5nQ2xhc3NEaXJ0eSgpe3JldHVybiEhdGhpcy5fY2QuY29udHJvbCYmdGhpcy5fY2QuY29udHJvbC5kaXJ0eX1nZXQgbmdDbGFzc1ZhbGlkKCl7cmV0dXJuISF0aGlzLl9jZC5jb250cm9sJiZ0aGlzLl9jZC5jb250cm9sLnZhbGlkfWdldCBuZ0NsYXNzSW52YWxpZCgpe3JldHVybiEhdGhpcy5fY2QuY29udHJvbCYmdGhpcy5fY2QuY29udHJvbC5pbnZhbGlkfWdldCBuZ0NsYXNzUGVuZGluZygpe3JldHVybiEhdGhpcy5fY2QuY29udHJvbCYmdGhpcy5fY2QuY29udHJvbC5wZW5kaW5nfX17Y29uc3RydWN0b3IodCl7c3VwZXIodCl9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKFJpKGJoLDIpKX0sdC5cdTAyNzVkaXI9dmUoe3R5cGU6dCxzZWxlY3RvcnM6W1siIiwiZm9ybUNvbnRyb2xOYW1lIiwiIl0sWyIiLCJuZ01vZGVsIiwiIl0sWyIiLCJmb3JtQ29udHJvbCIsIiJdXSxob3N0VmFyczoxNCxob3N0QmluZGluZ3M6ZnVuY3Rpb24odCxlKXsyJnQmJnJvKCJuZy11bnRvdWNoZWQiLGUubmdDbGFzc1VudG91Y2hlZCkoIm5nLXRvdWNoZWQiLGUubmdDbGFzc1RvdWNoZWQpKCJuZy1wcmlzdGluZSIsZS5uZ0NsYXNzUHJpc3RpbmUpKCJuZy1kaXJ0eSIsZS5uZ0NsYXNzRGlydHkpKCJuZy12YWxpZCIsZS5uZ0NsYXNzVmFsaWQpKCJuZy1pbnZhbGlkIixlLm5nQ2xhc3NJbnZhbGlkKSgibmctcGVuZGluZyIsZS5uZ0NsYXNzUGVuZGluZyl9LGZlYXR1cmVzOltfaV19KSx0fSkoKTtmdW5jdGlvbiBfaCh0KXtyZXR1cm4gbnVsbD09dHx8MD09PXQubGVuZ3RofWZ1bmN0aW9uIENoKHQpe3JldHVybiBudWxsIT10JiYibnVtYmVyIj09dHlwZW9mIHQubGVuZ3RofWNvbnN0IERoPW5ldyBOdCgiTmdWYWxpZGF0b3JzIiksRWg9bmV3IE50KCJOZ0FzeW5jVmFsaWRhdG9ycyIpLEFoPS9eKD89LnsxLDI1NH0kKSg/PS57MSw2NH1AKVthLXpBLVowLTkhIyQlJicqKy89P15fYHt8fX4tXSsoPzpcLlthLXpBLVowLTkhIyQlJicqKy89P15fYHt8fX4tXSspKkBbYS16QS1aMC05XSg/OlthLXpBLVowLTktXXswLDYxfVthLXpBLVowLTldKT8oPzpcLlthLXpBLVowLTldKD86W2EtekEtWjAtOS1dezAsNjF9W2EtekEtWjAtOV0pPykqJC87Y2xhc3MgU2h7c3RhdGljIG1pbih0KXtyZXR1cm4gZT0+e2lmKF9oKGUudmFsdWUpfHxfaCh0KSlyZXR1cm4gbnVsbDtjb25zdCBuPXBhcnNlRmxvYXQoZS52YWx1ZSk7cmV0dXJuIWlzTmFOKG4pJiZuPHQ/e21pbjp7bWluOnQsYWN0dWFsOmUudmFsdWV9fTpudWxsfX1zdGF0aWMgbWF4KHQpe3JldHVybiBlPT57aWYoX2goZS52YWx1ZSl8fF9oKHQpKXJldHVybiBudWxsO2NvbnN0IG49cGFyc2VGbG9hdChlLnZhbHVlKTtyZXR1cm4haXNOYU4obikmJm4+dD97bWF4OnttYXg6dCxhY3R1YWw6ZS52YWx1ZX19Om51bGx9fXN0YXRpYyByZXF1aXJlZCh0KXtyZXR1cm4gX2godC52YWx1ZSk/e3JlcXVpcmVkOiEwfTpudWxsfXN0YXRpYyByZXF1aXJlZFRydWUodCl7cmV0dXJuITA9PT10LnZhbHVlP251bGw6e3JlcXVpcmVkOiEwfX1zdGF0aWMgZW1haWwodCl7cmV0dXJuIF9oKHQudmFsdWUpfHxBaC50ZXN0KHQudmFsdWUpP251bGw6e2VtYWlsOiEwfX1zdGF0aWMgbWluTGVuZ3RoKHQpe3JldHVybiBlPT5faChlLnZhbHVlKXx8IUNoKGUudmFsdWUpP251bGw6ZS52YWx1ZS5sZW5ndGg8dD97bWlubGVuZ3RoOntyZXF1aXJlZExlbmd0aDp0LGFjdHVhbExlbmd0aDplLnZhbHVlLmxlbmd0aH19Om51bGx9c3RhdGljIG1heExlbmd0aCh0KXtyZXR1cm4gZT0+Q2goZS52YWx1ZSkmJmUudmFsdWUubGVuZ3RoPnQ/e21heGxlbmd0aDp7cmVxdWlyZWRMZW5ndGg6dCxhY3R1YWxMZW5ndGg6ZS52YWx1ZS5sZW5ndGh9fTpudWxsfXN0YXRpYyBwYXR0ZXJuKHQpe2lmKCF0KXJldHVybiBTaC5udWxsVmFsaWRhdG9yO2xldCBlLG47cmV0dXJuInN0cmluZyI9PXR5cGVvZiB0PyhuPSIiLCJeIiE9PXQuY2hhckF0KDApJiYobis9Il4iKSxuKz10LCIkIiE9PXQuY2hhckF0KHQubGVuZ3RoLTEpJiYobis9IiQiKSxlPW5ldyBSZWdFeHAobikpOihuPXQudG9TdHJpbmcoKSxlPXQpLHQ9PntpZihfaCh0LnZhbHVlKSlyZXR1cm4gbnVsbDtjb25zdCByPXQudmFsdWU7cmV0dXJuIGUudGVzdChyKT9udWxsOntwYXR0ZXJuOntyZXF1aXJlZFBhdHRlcm46bixhY3R1YWxWYWx1ZTpyfX19fXN0YXRpYyBudWxsVmFsaWRhdG9yKHQpe3JldHVybiBudWxsfXN0YXRpYyBjb21wb3NlKHQpe2lmKCF0KXJldHVybiBudWxsO2NvbnN0IGU9dC5maWx0ZXIoeGgpO3JldHVybiAwPT1lLmxlbmd0aD9udWxsOmZ1bmN0aW9uKHQpe3JldHVybiBUaChGaCh0LGUpKX19c3RhdGljIGNvbXBvc2VBc3luYyh0KXtpZighdClyZXR1cm4gbnVsbDtjb25zdCBlPXQuZmlsdGVyKHhoKTtyZXR1cm4gMD09ZS5sZW5ndGg/bnVsbDpmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oLi4udCl7aWYoMT09PXQubGVuZ3RoKXtjb25zdCBlPXRbMF07aWYobChlKSlyZXR1cm4gdWgoZSxudWxsKTtpZih1KGUpJiZPYmplY3QuZ2V0UHJvdG90eXBlT2YoZSk9PT1PYmplY3QucHJvdG90eXBlKXtjb25zdCB0PU9iamVjdC5rZXlzKGUpO3JldHVybiB1aCh0Lm1hcCh0PT5lW3RdKSx0KX19aWYoImZ1bmN0aW9uIj09dHlwZW9mIHRbdC5sZW5ndGgtMV0pe2NvbnN0IGU9dC5wb3AoKTtyZXR1cm4gdWgodD0xPT09dC5sZW5ndGgmJmwodFswXSk/dFswXTp0LG51bGwpLnBpcGUoUyh0PT5lKC4uLnQpKSl9cmV0dXJuIHVoKHQsbnVsbCl9KEZoKHQsZSkubWFwKGtoKSkucGlwZShTKFRoKSl9fX1mdW5jdGlvbiB4aCh0KXtyZXR1cm4gbnVsbCE9dH1mdW5jdGlvbiBraCh0KXtjb25zdCBlPVVpKHQpP2oodCk6dDtyZXR1cm4gSGkoZSksZX1mdW5jdGlvbiBUaCh0KXtsZXQgZT17fTtyZXR1cm4gdC5mb3JFYWNoKHQ9PntlPW51bGwhPXQ/T2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LGUpLHQpOmV9KSwwPT09T2JqZWN0LmtleXMoZSkubGVuZ3RoP251bGw6ZX1mdW5jdGlvbiBGaCh0LGUpe3JldHVybiBlLm1hcChlPT5lKHQpKX1mdW5jdGlvbiBPaCh0KXtyZXR1cm4gdC5tYXAodD0+ZnVuY3Rpb24odCl7cmV0dXJuIXQudmFsaWRhdGV9KHQpP3Q6ZT0+dC52YWxpZGF0ZShlKSl9Y29uc3QgUGg9e3Byb3ZpZGU6Y2gsdXNlRXhpc3Rpbmc6Q3QoKCk9PkloKSxtdWx0aTohMH07bGV0IEloPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IodCxlKXt0aGlzLl9yZW5kZXJlcj10LHRoaXMuX2VsZW1lbnRSZWY9ZSx0aGlzLm9uQ2hhbmdlPXQ9Pnt9LHRoaXMub25Ub3VjaGVkPSgpPT57fX13cml0ZVZhbHVlKHQpe3RoaXMuX3JlbmRlcmVyLnNldFByb3BlcnR5KHRoaXMuX2VsZW1lbnRSZWYubmF0aXZlRWxlbWVudCwidmFsdWUiLG51bGw9PXQ/IiI6dCl9cmVnaXN0ZXJPbkNoYW5nZSh0KXt0aGlzLm9uQ2hhbmdlPWU9Pnt0KCIiPT1lP251bGw6cGFyc2VGbG9hdChlKSl9fXJlZ2lzdGVyT25Ub3VjaGVkKHQpe3RoaXMub25Ub3VjaGVkPXR9c2V0RGlzYWJsZWRTdGF0ZSh0KXt0aGlzLl9yZW5kZXJlci5zZXRQcm9wZXJ0eSh0aGlzLl9lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsImRpc2FibGVkIix0KX19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCkoUmkoUm8pLFJpKEZvKSl9LHQuXHUwMjc1ZGlyPXZlKHt0eXBlOnQsc2VsZWN0b3JzOltbImlucHV0IiwidHlwZSIsIm51bWJlciIsImZvcm1Db250cm9sTmFtZSIsIiJdLFsiaW5wdXQiLCJ0eXBlIiwibnVtYmVyIiwiZm9ybUNvbnRyb2wiLCIiXSxbImlucHV0IiwidHlwZSIsIm51bWJlciIsIm5nTW9kZWwiLCIiXV0saG9zdEJpbmRpbmdzOmZ1bmN0aW9uKHQsZSl7MSZ0JiYkaSgiaW5wdXQiLChmdW5jdGlvbih0KXtyZXR1cm4gZS5vbkNoYW5nZSh0LnRhcmdldC52YWx1ZSl9KSkoImJsdXIiLChmdW5jdGlvbigpe3JldHVybiBlLm9uVG91Y2hlZCgpfSkpfSxmZWF0dXJlczpbU28oW1BoXSldfSksdH0pKCk7Y29uc3QgUmg9e3Byb3ZpZGU6Y2gsdXNlRXhpc3Rpbmc6Q3QoKCk9PmpoKSxtdWx0aTohMH07bGV0IE1oPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IoKXt0aGlzLl9hY2Nlc3NvcnM9W119YWRkKHQsZSl7dGhpcy5fYWNjZXNzb3JzLnB1c2goW3QsZV0pfXJlbW92ZSh0KXtmb3IobGV0IGU9dGhpcy5fYWNjZXNzb3JzLmxlbmd0aC0xO2U+PTA7LS1lKWlmKHRoaXMuX2FjY2Vzc29yc1tlXVsxXT09PXQpcmV0dXJuIHZvaWQgdGhpcy5fYWNjZXNzb3JzLnNwbGljZShlLDEpfXNlbGVjdCh0KXt0aGlzLl9hY2Nlc3NvcnMuZm9yRWFjaChlPT57dGhpcy5faXNTYW1lR3JvdXAoZSx0KSYmZVsxXSE9PXQmJmVbMV0uZmlyZVVuY2hlY2sodC52YWx1ZSl9KX1faXNTYW1lR3JvdXAodCxlKXtyZXR1cm4hIXRbMF0uY29udHJvbCYmdFswXS5fcGFyZW50PT09ZS5fY29udHJvbC5fcGFyZW50JiZ0WzFdLm5hbWU9PT1lLm5hbWV9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSx0Llx1MDI3NXByb3Y9dXQoe3Rva2VuOnQsZmFjdG9yeTp0Llx1MDI3NWZhY30pLHR9KSgpLGpoPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IodCxlLG4scil7dGhpcy5fcmVuZGVyZXI9dCx0aGlzLl9lbGVtZW50UmVmPWUsdGhpcy5fcmVnaXN0cnk9bix0aGlzLl9pbmplY3Rvcj1yLHRoaXMub25DaGFuZ2U9KCk9Pnt9LHRoaXMub25Ub3VjaGVkPSgpPT57fX1uZ09uSW5pdCgpe3RoaXMuX2NvbnRyb2w9dGhpcy5faW5qZWN0b3IuZ2V0KGJoKSx0aGlzLl9jaGVja05hbWUoKSx0aGlzLl9yZWdpc3RyeS5hZGQodGhpcy5fY29udHJvbCx0aGlzKX1uZ09uRGVzdHJveSgpe3RoaXMuX3JlZ2lzdHJ5LnJlbW92ZSh0aGlzKX13cml0ZVZhbHVlKHQpe3RoaXMuX3N0YXRlPXQ9PT10aGlzLnZhbHVlLHRoaXMuX3JlbmRlcmVyLnNldFByb3BlcnR5KHRoaXMuX2VsZW1lbnRSZWYubmF0aXZlRWxlbWVudCwiY2hlY2tlZCIsdGhpcy5fc3RhdGUpfXJlZ2lzdGVyT25DaGFuZ2UodCl7dGhpcy5fZm49dCx0aGlzLm9uQ2hhbmdlPSgpPT57dCh0aGlzLnZhbHVlKSx0aGlzLl9yZWdpc3RyeS5zZWxlY3QodGhpcyl9fWZpcmVVbmNoZWNrKHQpe3RoaXMud3JpdGVWYWx1ZSh0KX1yZWdpc3Rlck9uVG91Y2hlZCh0KXt0aGlzLm9uVG91Y2hlZD10fXNldERpc2FibGVkU3RhdGUodCl7dGhpcy5fcmVuZGVyZXIuc2V0UHJvcGVydHkodGhpcy5fZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCJkaXNhYmxlZCIsdCl9X2NoZWNrTmFtZSgpeyF0aGlzLm5hbWUmJnRoaXMuZm9ybUNvbnRyb2xOYW1lJiYodGhpcy5uYW1lPXRoaXMuZm9ybUNvbnRyb2xOYW1lKX19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCkoUmkoUm8pLFJpKEZvKSxSaShNaCksUmkoeWkpKX0sdC5cdTAyNzVkaXI9dmUoe3R5cGU6dCxzZWxlY3RvcnM6W1siaW5wdXQiLCJ0eXBlIiwicmFkaW8iLCJmb3JtQ29udHJvbE5hbWUiLCIiXSxbImlucHV0IiwidHlwZSIsInJhZGlvIiwiZm9ybUNvbnRyb2wiLCIiXSxbImlucHV0IiwidHlwZSIsInJhZGlvIiwibmdNb2RlbCIsIiJdXSxob3N0QmluZGluZ3M6ZnVuY3Rpb24odCxlKXsxJnQmJiRpKCJjaGFuZ2UiLChmdW5jdGlvbigpe3JldHVybiBlLm9uQ2hhbmdlKCl9KSkoImJsdXIiLChmdW5jdGlvbigpe3JldHVybiBlLm9uVG91Y2hlZCgpfSkpfSxpbnB1dHM6e25hbWU6Im5hbWUiLGZvcm1Db250cm9sTmFtZToiZm9ybUNvbnRyb2xOYW1lIix2YWx1ZToidmFsdWUifSxmZWF0dXJlczpbU28oW1JoXSldfSksdH0pKCk7Y29uc3QgTmg9e3Byb3ZpZGU6Y2gsdXNlRXhpc3Rpbmc6Q3QoKCk9PlZoKSxtdWx0aTohMH07bGV0IFZoPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IodCxlKXt0aGlzLl9yZW5kZXJlcj10LHRoaXMuX2VsZW1lbnRSZWY9ZSx0aGlzLm9uQ2hhbmdlPXQ9Pnt9LHRoaXMub25Ub3VjaGVkPSgpPT57fX13cml0ZVZhbHVlKHQpe3RoaXMuX3JlbmRlcmVyLnNldFByb3BlcnR5KHRoaXMuX2VsZW1lbnRSZWYubmF0aXZlRWxlbWVudCwidmFsdWUiLHBhcnNlRmxvYXQodCkpfXJlZ2lzdGVyT25DaGFuZ2UodCl7dGhpcy5vbkNoYW5nZT1lPT57dCgiIj09ZT9udWxsOnBhcnNlRmxvYXQoZSkpfX1yZWdpc3Rlck9uVG91Y2hlZCh0KXt0aGlzLm9uVG91Y2hlZD10fXNldERpc2FibGVkU3RhdGUodCl7dGhpcy5fcmVuZGVyZXIuc2V0UHJvcGVydHkodGhpcy5fZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCJkaXNhYmxlZCIsdCl9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKFJpKFJvKSxSaShGbykpfSx0Llx1MDI3NWRpcj12ZSh7dHlwZTp0LHNlbGVjdG9yczpbWyJpbnB1dCIsInR5cGUiLCJyYW5nZSIsImZvcm1Db250cm9sTmFtZSIsIiJdLFsiaW5wdXQiLCJ0eXBlIiwicmFuZ2UiLCJmb3JtQ29udHJvbCIsIiJdLFsiaW5wdXQiLCJ0eXBlIiwicmFuZ2UiLCJuZ01vZGVsIiwiIl1dLGhvc3RCaW5kaW5nczpmdW5jdGlvbih0LGUpezEmdCYmJGkoImNoYW5nZSIsKGZ1bmN0aW9uKHQpe3JldHVybiBlLm9uQ2hhbmdlKHQudGFyZ2V0LnZhbHVlKX0pKSgiaW5wdXQiLChmdW5jdGlvbih0KXtyZXR1cm4gZS5vbkNoYW5nZSh0LnRhcmdldC52YWx1ZSl9KSkoImJsdXIiLChmdW5jdGlvbigpe3JldHVybiBlLm9uVG91Y2hlZCgpfSkpfSxmZWF0dXJlczpbU28oW05oXSldfSksdH0pKCk7Y29uc3QgQmg9e3Byb3ZpZGU6Y2gsdXNlRXhpc3Rpbmc6Q3QoKCk9PkxoKSxtdWx0aTohMH07bGV0IExoPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IodCxlKXt0aGlzLl9yZW5kZXJlcj10LHRoaXMuX2VsZW1lbnRSZWY9ZSx0aGlzLl9vcHRpb25NYXA9bmV3IE1hcCx0aGlzLl9pZENvdW50ZXI9MCx0aGlzLm9uQ2hhbmdlPXQ9Pnt9LHRoaXMub25Ub3VjaGVkPSgpPT57fSx0aGlzLl9jb21wYXJlV2l0aD1PYmplY3QuaXN9c2V0IGNvbXBhcmVXaXRoKHQpe3RoaXMuX2NvbXBhcmVXaXRoPXR9d3JpdGVWYWx1ZSh0KXt0aGlzLnZhbHVlPXQ7Y29uc3QgZT10aGlzLl9nZXRPcHRpb25JZCh0KTtudWxsPT1lJiZ0aGlzLl9yZW5kZXJlci5zZXRQcm9wZXJ0eSh0aGlzLl9lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsInNlbGVjdGVkSW5kZXgiLC0xKTtjb25zdCBuPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG51bGw9PXQ/IiIrZTooZSYmIm9iamVjdCI9PXR5cGVvZiBlJiYoZT0iT2JqZWN0IiksYCR7dH06ICR7ZX1gLnNsaWNlKDAsNTApKX0oZSx0KTt0aGlzLl9yZW5kZXJlci5zZXRQcm9wZXJ0eSh0aGlzLl9lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsInZhbHVlIixuKX1yZWdpc3Rlck9uQ2hhbmdlKHQpe3RoaXMub25DaGFuZ2U9ZT0+e3RoaXMudmFsdWU9dGhpcy5fZ2V0T3B0aW9uVmFsdWUoZSksdCh0aGlzLnZhbHVlKX19cmVnaXN0ZXJPblRvdWNoZWQodCl7dGhpcy5vblRvdWNoZWQ9dH1zZXREaXNhYmxlZFN0YXRlKHQpe3RoaXMuX3JlbmRlcmVyLnNldFByb3BlcnR5KHRoaXMuX2VsZW1lbnRSZWYubmF0aXZlRWxlbWVudCwiZGlzYWJsZWQiLHQpfV9yZWdpc3Rlck9wdGlvbigpe3JldHVybih0aGlzLl9pZENvdW50ZXIrKykudG9TdHJpbmcoKX1fZ2V0T3B0aW9uSWQodCl7Zm9yKGNvbnN0IGUgb2YgQXJyYXkuZnJvbSh0aGlzLl9vcHRpb25NYXAua2V5cygpKSlpZih0aGlzLl9jb21wYXJlV2l0aCh0aGlzLl9vcHRpb25NYXAuZ2V0KGUpLHQpKXJldHVybiBlO3JldHVybiBudWxsfV9nZXRPcHRpb25WYWx1ZSh0KXtjb25zdCBlPWZ1bmN0aW9uKHQpe3JldHVybiB0LnNwbGl0KCI6IilbMF19KHQpO3JldHVybiB0aGlzLl9vcHRpb25NYXAuaGFzKGUpP3RoaXMuX29wdGlvbk1hcC5nZXQoZSk6dH19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCkoUmkoUm8pLFJpKEZvKSl9LHQuXHUwMjc1ZGlyPXZlKHt0eXBlOnQsc2VsZWN0b3JzOltbInNlbGVjdCIsImZvcm1Db250cm9sTmFtZSIsIiIsMywibXVsdGlwbGUiLCIiXSxbInNlbGVjdCIsImZvcm1Db250cm9sIiwiIiwzLCJtdWx0aXBsZSIsIiJdLFsic2VsZWN0IiwibmdNb2RlbCIsIiIsMywibXVsdGlwbGUiLCIiXV0saG9zdEJpbmRpbmdzOmZ1bmN0aW9uKHQsZSl7MSZ0JiYkaSgiY2hhbmdlIiwoZnVuY3Rpb24odCl7cmV0dXJuIGUub25DaGFuZ2UodC50YXJnZXQudmFsdWUpfSkpKCJibHVyIiwoZnVuY3Rpb24oKXtyZXR1cm4gZS5vblRvdWNoZWQoKX0pKX0saW5wdXRzOntjb21wYXJlV2l0aDoiY29tcGFyZVdpdGgifSxmZWF0dXJlczpbU28oW0JoXSldfSksdH0pKCk7Y29uc3QgVWg9e3Byb3ZpZGU6Y2gsdXNlRXhpc3Rpbmc6Q3QoKCk9PkhoKSxtdWx0aTohMH07bGV0IEhoPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IodCxlKXt0aGlzLl9yZW5kZXJlcj10LHRoaXMuX2VsZW1lbnRSZWY9ZSx0aGlzLl9vcHRpb25NYXA9bmV3IE1hcCx0aGlzLl9pZENvdW50ZXI9MCx0aGlzLm9uQ2hhbmdlPXQ9Pnt9LHRoaXMub25Ub3VjaGVkPSgpPT57fSx0aGlzLl9jb21wYXJlV2l0aD1PYmplY3QuaXN9c2V0IGNvbXBhcmVXaXRoKHQpe3RoaXMuX2NvbXBhcmVXaXRoPXR9d3JpdGVWYWx1ZSh0KXtsZXQgZTtpZih0aGlzLnZhbHVlPXQsQXJyYXkuaXNBcnJheSh0KSl7Y29uc3Qgbj10Lm1hcCh0PT50aGlzLl9nZXRPcHRpb25JZCh0KSk7ZT0odCxlKT0+e3QuX3NldFNlbGVjdGVkKG4uaW5kZXhPZihlLnRvU3RyaW5nKCkpPi0xKX19ZWxzZSBlPSh0LGUpPT57dC5fc2V0U2VsZWN0ZWQoITEpfTt0aGlzLl9vcHRpb25NYXAuZm9yRWFjaChlKX1yZWdpc3Rlck9uQ2hhbmdlKHQpe3RoaXMub25DaGFuZ2U9ZT0+e2NvbnN0IG49W107aWYodm9pZCAwIT09ZS5zZWxlY3RlZE9wdGlvbnMpe2NvbnN0IHQ9ZS5zZWxlY3RlZE9wdGlvbnM7Zm9yKGxldCBlPTA7ZTx0Lmxlbmd0aDtlKyspe2NvbnN0IHI9dC5pdGVtKGUpLHM9dGhpcy5fZ2V0T3B0aW9uVmFsdWUoci52YWx1ZSk7bi5wdXNoKHMpfX1lbHNle2NvbnN0IHQ9ZS5vcHRpb25zO2ZvcihsZXQgZT0wO2U8dC5sZW5ndGg7ZSsrKXtjb25zdCByPXQuaXRlbShlKTtpZihyLnNlbGVjdGVkKXtjb25zdCB0PXRoaXMuX2dldE9wdGlvblZhbHVlKHIudmFsdWUpO24ucHVzaCh0KX19fXRoaXMudmFsdWU9bix0KG4pfX1yZWdpc3Rlck9uVG91Y2hlZCh0KXt0aGlzLm9uVG91Y2hlZD10fXNldERpc2FibGVkU3RhdGUodCl7dGhpcy5fcmVuZGVyZXIuc2V0UHJvcGVydHkodGhpcy5fZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCJkaXNhYmxlZCIsdCl9X3JlZ2lzdGVyT3B0aW9uKHQpe2NvbnN0IGU9KHRoaXMuX2lkQ291bnRlcisrKS50b1N0cmluZygpO3JldHVybiB0aGlzLl9vcHRpb25NYXAuc2V0KGUsdCksZX1fZ2V0T3B0aW9uSWQodCl7Zm9yKGNvbnN0IGUgb2YgQXJyYXkuZnJvbSh0aGlzLl9vcHRpb25NYXAua2V5cygpKSlpZih0aGlzLl9jb21wYXJlV2l0aCh0aGlzLl9vcHRpb25NYXAuZ2V0KGUpLl92YWx1ZSx0KSlyZXR1cm4gZTtyZXR1cm4gbnVsbH1fZ2V0T3B0aW9uVmFsdWUodCl7Y29uc3QgZT1mdW5jdGlvbih0KXtyZXR1cm4gdC5zcGxpdCgiOiIpWzBdfSh0KTtyZXR1cm4gdGhpcy5fb3B0aW9uTWFwLmhhcyhlKT90aGlzLl9vcHRpb25NYXAuZ2V0KGUpLl92YWx1ZTp0fX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KShSaShSbyksUmkoRm8pKX0sdC5cdTAyNzVkaXI9dmUoe3R5cGU6dCxzZWxlY3RvcnM6W1sic2VsZWN0IiwibXVsdGlwbGUiLCIiLCJmb3JtQ29udHJvbE5hbWUiLCIiXSxbInNlbGVjdCIsIm11bHRpcGxlIiwiIiwiZm9ybUNvbnRyb2wiLCIiXSxbInNlbGVjdCIsIm11bHRpcGxlIiwiIiwibmdNb2RlbCIsIiJdXSxob3N0QmluZGluZ3M6ZnVuY3Rpb24odCxlKXsxJnQmJiRpKCJjaGFuZ2UiLChmdW5jdGlvbih0KXtyZXR1cm4gZS5vbkNoYW5nZSh0LnRhcmdldCl9KSkoImJsdXIiLChmdW5jdGlvbigpe3JldHVybiBlLm9uVG91Y2hlZCgpfSkpfSxpbnB1dHM6e2NvbXBhcmVXaXRoOiJjb21wYXJlV2l0aCJ9LGZlYXR1cmVzOltTbyhbVWhdKV19KSx0fSkoKTtmdW5jdGlvbiAkaCh0LGUpe3QuX3BlbmRpbmdEaXJ0eSYmdC5tYXJrQXNEaXJ0eSgpLHQuc2V0VmFsdWUodC5fcGVuZGluZ1ZhbHVlLHtlbWl0TW9kZWxUb1ZpZXdDaGFuZ2U6ITF9KSxlLnZpZXdUb01vZGVsVXBkYXRlKHQuX3BlbmRpbmdWYWx1ZSksdC5fcGVuZGluZ0NoYW5nZT0hMX1mdW5jdGlvbiB6aCh0KXtyZXR1cm4gbnVsbCE9dD9TaC5jb21wb3NlKE9oKHQpKTpudWxsfWZ1bmN0aW9uIHFoKHQpe3JldHVybiBudWxsIT10P1NoLmNvbXBvc2VBc3luYyhPaCh0KSk6bnVsbH1jb25zdCBXaD1bZGgsVmgsSWgsTGgsSGgsamhdLFpoPSJWQUxJRCIsR2g9IklOVkFMSUQiLEtoPSJQRU5ESU5HIixRaD0iRElTQUJMRUQiO2Z1bmN0aW9uIFloKHQpe3JldHVybihlZCh0KT90LnZhbGlkYXRvcnM6dCl8fG51bGx9ZnVuY3Rpb24gSmgodCl7cmV0dXJuIEFycmF5LmlzQXJyYXkodCk/emgodCk6dHx8bnVsbH1mdW5jdGlvbiBYaCh0LGUpe3JldHVybihlZChlKT9lLmFzeW5jVmFsaWRhdG9yczp0KXx8bnVsbH1mdW5jdGlvbiB0ZCh0KXtyZXR1cm4gQXJyYXkuaXNBcnJheSh0KT9xaCh0KTp0fHxudWxsfWZ1bmN0aW9uIGVkKHQpe3JldHVybiBudWxsIT10JiYhQXJyYXkuaXNBcnJheSh0KSYmIm9iamVjdCI9PXR5cGVvZiB0fWNsYXNzIG5ke2NvbnN0cnVjdG9yKHQsZSl7dGhpcy5faGFzT3duUGVuZGluZ0FzeW5jVmFsaWRhdG9yPSExLHRoaXMuX29uQ29sbGVjdGlvbkNoYW5nZT0oKT0+e30sdGhpcy5wcmlzdGluZT0hMCx0aGlzLnRvdWNoZWQ9ITEsdGhpcy5fb25EaXNhYmxlZENoYW5nZT1bXSx0aGlzLl9yYXdWYWxpZGF0b3JzPXQsdGhpcy5fcmF3QXN5bmNWYWxpZGF0b3JzPWUsdGhpcy5fY29tcG9zZWRWYWxpZGF0b3JGbj1KaCh0aGlzLl9yYXdWYWxpZGF0b3JzKSx0aGlzLl9jb21wb3NlZEFzeW5jVmFsaWRhdG9yRm49dGQodGhpcy5fcmF3QXN5bmNWYWxpZGF0b3JzKX1nZXQgdmFsaWRhdG9yKCl7cmV0dXJuIHRoaXMuX2NvbXBvc2VkVmFsaWRhdG9yRm59c2V0IHZhbGlkYXRvcih0KXt0aGlzLl9yYXdWYWxpZGF0b3JzPXRoaXMuX2NvbXBvc2VkVmFsaWRhdG9yRm49dH1nZXQgYXN5bmNWYWxpZGF0b3IoKXtyZXR1cm4gdGhpcy5fY29tcG9zZWRBc3luY1ZhbGlkYXRvckZufXNldCBhc3luY1ZhbGlkYXRvcih0KXt0aGlzLl9yYXdBc3luY1ZhbGlkYXRvcnM9dGhpcy5fY29tcG9zZWRBc3luY1ZhbGlkYXRvckZuPXR9Z2V0IHBhcmVudCgpe3JldHVybiB0aGlzLl9wYXJlbnR9Z2V0IHZhbGlkKCl7cmV0dXJuIHRoaXMuc3RhdHVzPT09Wmh9Z2V0IGludmFsaWQoKXtyZXR1cm4gdGhpcy5zdGF0dXM9PT1HaH1nZXQgcGVuZGluZygpe3JldHVybiB0aGlzLnN0YXR1cz09S2h9Z2V0IGRpc2FibGVkKCl7cmV0dXJuIHRoaXMuc3RhdHVzPT09UWh9Z2V0IGVuYWJsZWQoKXtyZXR1cm4gdGhpcy5zdGF0dXMhPT1RaH1nZXQgZGlydHkoKXtyZXR1cm4hdGhpcy5wcmlzdGluZX1nZXQgdW50b3VjaGVkKCl7cmV0dXJuIXRoaXMudG91Y2hlZH1nZXQgdXBkYXRlT24oKXtyZXR1cm4gdGhpcy5fdXBkYXRlT24/dGhpcy5fdXBkYXRlT246dGhpcy5wYXJlbnQ/dGhpcy5wYXJlbnQudXBkYXRlT246ImNoYW5nZSJ9c2V0VmFsaWRhdG9ycyh0KXt0aGlzLl9yYXdWYWxpZGF0b3JzPXQsdGhpcy5fY29tcG9zZWRWYWxpZGF0b3JGbj1KaCh0KX1zZXRBc3luY1ZhbGlkYXRvcnModCl7dGhpcy5fcmF3QXN5bmNWYWxpZGF0b3JzPXQsdGhpcy5fY29tcG9zZWRBc3luY1ZhbGlkYXRvckZuPXRkKHQpfWNsZWFyVmFsaWRhdG9ycygpe3RoaXMudmFsaWRhdG9yPW51bGx9Y2xlYXJBc3luY1ZhbGlkYXRvcnMoKXt0aGlzLmFzeW5jVmFsaWRhdG9yPW51bGx9bWFya0FzVG91Y2hlZCh0PXt9KXt0aGlzLnRvdWNoZWQ9ITAsdGhpcy5fcGFyZW50JiYhdC5vbmx5U2VsZiYmdGhpcy5fcGFyZW50Lm1hcmtBc1RvdWNoZWQodCl9bWFya0FsbEFzVG91Y2hlZCgpe3RoaXMubWFya0FzVG91Y2hlZCh7b25seVNlbGY6ITB9KSx0aGlzLl9mb3JFYWNoQ2hpbGQodD0+dC5tYXJrQWxsQXNUb3VjaGVkKCkpfW1hcmtBc1VudG91Y2hlZCh0PXt9KXt0aGlzLnRvdWNoZWQ9ITEsdGhpcy5fcGVuZGluZ1RvdWNoZWQ9ITEsdGhpcy5fZm9yRWFjaENoaWxkKHQ9Pnt0Lm1hcmtBc1VudG91Y2hlZCh7b25seVNlbGY6ITB9KX0pLHRoaXMuX3BhcmVudCYmIXQub25seVNlbGYmJnRoaXMuX3BhcmVudC5fdXBkYXRlVG91Y2hlZCh0KX1tYXJrQXNEaXJ0eSh0PXt9KXt0aGlzLnByaXN0aW5lPSExLHRoaXMuX3BhcmVudCYmIXQub25seVNlbGYmJnRoaXMuX3BhcmVudC5tYXJrQXNEaXJ0eSh0KX1tYXJrQXNQcmlzdGluZSh0PXt9KXt0aGlzLnByaXN0aW5lPSEwLHRoaXMuX3BlbmRpbmdEaXJ0eT0hMSx0aGlzLl9mb3JFYWNoQ2hpbGQodD0+e3QubWFya0FzUHJpc3RpbmUoe29ubHlTZWxmOiEwfSl9KSx0aGlzLl9wYXJlbnQmJiF0Lm9ubHlTZWxmJiZ0aGlzLl9wYXJlbnQuX3VwZGF0ZVByaXN0aW5lKHQpfW1hcmtBc1BlbmRpbmcodD17fSl7dGhpcy5zdGF0dXM9S2gsITEhPT10LmVtaXRFdmVudCYmdGhpcy5zdGF0dXNDaGFuZ2VzLmVtaXQodGhpcy5zdGF0dXMpLHRoaXMuX3BhcmVudCYmIXQub25seVNlbGYmJnRoaXMuX3BhcmVudC5tYXJrQXNQZW5kaW5nKHQpfWRpc2FibGUodD17fSl7Y29uc3QgZT10aGlzLl9wYXJlbnRNYXJrZWREaXJ0eSh0Lm9ubHlTZWxmKTt0aGlzLnN0YXR1cz1RaCx0aGlzLmVycm9ycz1udWxsLHRoaXMuX2ZvckVhY2hDaGlsZChlPT57ZS5kaXNhYmxlKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSx0KSx7b25seVNlbGY6ITB9KSl9KSx0aGlzLl91cGRhdGVWYWx1ZSgpLCExIT09dC5lbWl0RXZlbnQmJih0aGlzLnZhbHVlQ2hhbmdlcy5lbWl0KHRoaXMudmFsdWUpLHRoaXMuc3RhdHVzQ2hhbmdlcy5lbWl0KHRoaXMuc3RhdHVzKSksdGhpcy5fdXBkYXRlQW5jZXN0b3JzKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSx0KSx7c2tpcFByaXN0aW5lQ2hlY2s6ZX0pKSx0aGlzLl9vbkRpc2FibGVkQ2hhbmdlLmZvckVhY2godD0+dCghMCkpfWVuYWJsZSh0PXt9KXtjb25zdCBlPXRoaXMuX3BhcmVudE1hcmtlZERpcnR5KHQub25seVNlbGYpO3RoaXMuc3RhdHVzPVpoLHRoaXMuX2ZvckVhY2hDaGlsZChlPT57ZS5lbmFibGUoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LHQpLHtvbmx5U2VsZjohMH0pKX0pLHRoaXMudXBkYXRlVmFsdWVBbmRWYWxpZGl0eSh7b25seVNlbGY6ITAsZW1pdEV2ZW50OnQuZW1pdEV2ZW50fSksdGhpcy5fdXBkYXRlQW5jZXN0b3JzKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSx0KSx7c2tpcFByaXN0aW5lQ2hlY2s6ZX0pKSx0aGlzLl9vbkRpc2FibGVkQ2hhbmdlLmZvckVhY2godD0+dCghMSkpfV91cGRhdGVBbmNlc3RvcnModCl7dGhpcy5fcGFyZW50JiYhdC5vbmx5U2VsZiYmKHRoaXMuX3BhcmVudC51cGRhdGVWYWx1ZUFuZFZhbGlkaXR5KHQpLHQuc2tpcFByaXN0aW5lQ2hlY2t8fHRoaXMuX3BhcmVudC5fdXBkYXRlUHJpc3RpbmUoKSx0aGlzLl9wYXJlbnQuX3VwZGF0ZVRvdWNoZWQoKSl9c2V0UGFyZW50KHQpe3RoaXMuX3BhcmVudD10fXVwZGF0ZVZhbHVlQW5kVmFsaWRpdHkodD17fSl7dGhpcy5fc2V0SW5pdGlhbFN0YXR1cygpLHRoaXMuX3VwZGF0ZVZhbHVlKCksdGhpcy5lbmFibGVkJiYodGhpcy5fY2FuY2VsRXhpc3RpbmdTdWJzY3JpcHRpb24oKSx0aGlzLmVycm9ycz10aGlzLl9ydW5WYWxpZGF0b3IoKSx0aGlzLnN0YXR1cz10aGlzLl9jYWxjdWxhdGVTdGF0dXMoKSx0aGlzLnN0YXR1cyE9PVpoJiZ0aGlzLnN0YXR1cyE9PUtofHx0aGlzLl9ydW5Bc3luY1ZhbGlkYXRvcih0LmVtaXRFdmVudCkpLCExIT09dC5lbWl0RXZlbnQmJih0aGlzLnZhbHVlQ2hhbmdlcy5lbWl0KHRoaXMudmFsdWUpLHRoaXMuc3RhdHVzQ2hhbmdlcy5lbWl0KHRoaXMuc3RhdHVzKSksdGhpcy5fcGFyZW50JiYhdC5vbmx5U2VsZiYmdGhpcy5fcGFyZW50LnVwZGF0ZVZhbHVlQW5kVmFsaWRpdHkodCl9X3VwZGF0ZVRyZWVWYWxpZGl0eSh0PXtlbWl0RXZlbnQ6ITB9KXt0aGlzLl9mb3JFYWNoQ2hpbGQoZT0+ZS5fdXBkYXRlVHJlZVZhbGlkaXR5KHQpKSx0aGlzLnVwZGF0ZVZhbHVlQW5kVmFsaWRpdHkoe29ubHlTZWxmOiEwLGVtaXRFdmVudDp0LmVtaXRFdmVudH0pfV9zZXRJbml0aWFsU3RhdHVzKCl7dGhpcy5zdGF0dXM9dGhpcy5fYWxsQ29udHJvbHNEaXNhYmxlZCgpP1FoOlpofV9ydW5WYWxpZGF0b3IoKXtyZXR1cm4gdGhpcy52YWxpZGF0b3I/dGhpcy52YWxpZGF0b3IodGhpcyk6bnVsbH1fcnVuQXN5bmNWYWxpZGF0b3IodCl7aWYodGhpcy5hc3luY1ZhbGlkYXRvcil7dGhpcy5zdGF0dXM9S2gsdGhpcy5faGFzT3duUGVuZGluZ0FzeW5jVmFsaWRhdG9yPSEwO2NvbnN0IGU9a2godGhpcy5hc3luY1ZhbGlkYXRvcih0aGlzKSk7dGhpcy5fYXN5bmNWYWxpZGF0aW9uU3Vic2NyaXB0aW9uPWUuc3Vic2NyaWJlKGU9Pnt0aGlzLl9oYXNPd25QZW5kaW5nQXN5bmNWYWxpZGF0b3I9ITEsdGhpcy5zZXRFcnJvcnMoZSx7ZW1pdEV2ZW50OnR9KX0pfX1fY2FuY2VsRXhpc3RpbmdTdWJzY3JpcHRpb24oKXt0aGlzLl9hc3luY1ZhbGlkYXRpb25TdWJzY3JpcHRpb24mJih0aGlzLl9hc3luY1ZhbGlkYXRpb25TdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKSx0aGlzLl9oYXNPd25QZW5kaW5nQXN5bmNWYWxpZGF0b3I9ITEpfXNldEVycm9ycyh0LGU9e30pe3RoaXMuZXJyb3JzPXQsdGhpcy5fdXBkYXRlQ29udHJvbHNFcnJvcnMoITEhPT1lLmVtaXRFdmVudCl9Z2V0KHQpe3JldHVybiBmdW5jdGlvbih0LGUsbil7aWYobnVsbD09ZSlyZXR1cm4gbnVsbDtpZihBcnJheS5pc0FycmF5KGUpfHwoZT1lLnNwbGl0KCIuIikpLEFycmF5LmlzQXJyYXkoZSkmJjA9PT1lLmxlbmd0aClyZXR1cm4gbnVsbDtsZXQgcj10O3JldHVybiBlLmZvckVhY2godD0+e3I9ciBpbnN0YW5jZW9mIHNkP3IuY29udHJvbHMuaGFzT3duUHJvcGVydHkodCk/ci5jb250cm9sc1t0XTpudWxsOnIgaW5zdGFuY2VvZiBpZCYmci5hdCh0KXx8bnVsbH0pLHJ9KHRoaXMsdCl9Z2V0RXJyb3IodCxlKXtjb25zdCBuPWU/dGhpcy5nZXQoZSk6dGhpcztyZXR1cm4gbiYmbi5lcnJvcnM/bi5lcnJvcnNbdF06bnVsbH1oYXNFcnJvcih0LGUpe3JldHVybiEhdGhpcy5nZXRFcnJvcih0LGUpfWdldCByb290KCl7bGV0IHQ9dGhpcztmb3IoO3QuX3BhcmVudDspdD10Ll9wYXJlbnQ7cmV0dXJuIHR9X3VwZGF0ZUNvbnRyb2xzRXJyb3JzKHQpe3RoaXMuc3RhdHVzPXRoaXMuX2NhbGN1bGF0ZVN0YXR1cygpLHQmJnRoaXMuc3RhdHVzQ2hhbmdlcy5lbWl0KHRoaXMuc3RhdHVzKSx0aGlzLl9wYXJlbnQmJnRoaXMuX3BhcmVudC5fdXBkYXRlQ29udHJvbHNFcnJvcnModCl9X2luaXRPYnNlcnZhYmxlcygpe3RoaXMudmFsdWVDaGFuZ2VzPW5ldyBDYSx0aGlzLnN0YXR1c0NoYW5nZXM9bmV3IENhfV9jYWxjdWxhdGVTdGF0dXMoKXtyZXR1cm4gdGhpcy5fYWxsQ29udHJvbHNEaXNhYmxlZCgpP1FoOnRoaXMuZXJyb3JzP0doOnRoaXMuX2hhc093blBlbmRpbmdBc3luY1ZhbGlkYXRvcnx8dGhpcy5fYW55Q29udHJvbHNIYXZlU3RhdHVzKEtoKT9LaDp0aGlzLl9hbnlDb250cm9sc0hhdmVTdGF0dXMoR2gpP0doOlpofV9hbnlDb250cm9sc0hhdmVTdGF0dXModCl7cmV0dXJuIHRoaXMuX2FueUNvbnRyb2xzKGU9PmUuc3RhdHVzPT09dCl9X2FueUNvbnRyb2xzRGlydHkoKXtyZXR1cm4gdGhpcy5fYW55Q29udHJvbHModD0+dC5kaXJ0eSl9X2FueUNvbnRyb2xzVG91Y2hlZCgpe3JldHVybiB0aGlzLl9hbnlDb250cm9scyh0PT50LnRvdWNoZWQpfV91cGRhdGVQcmlzdGluZSh0PXt9KXt0aGlzLnByaXN0aW5lPSF0aGlzLl9hbnlDb250cm9sc0RpcnR5KCksdGhpcy5fcGFyZW50JiYhdC5vbmx5U2VsZiYmdGhpcy5fcGFyZW50Ll91cGRhdGVQcmlzdGluZSh0KX1fdXBkYXRlVG91Y2hlZCh0PXt9KXt0aGlzLnRvdWNoZWQ9dGhpcy5fYW55Q29udHJvbHNUb3VjaGVkKCksdGhpcy5fcGFyZW50JiYhdC5vbmx5U2VsZiYmdGhpcy5fcGFyZW50Ll91cGRhdGVUb3VjaGVkKHQpfV9pc0JveGVkVmFsdWUodCl7cmV0dXJuIm9iamVjdCI9PXR5cGVvZiB0JiZudWxsIT09dCYmMj09PU9iamVjdC5rZXlzKHQpLmxlbmd0aCYmInZhbHVlImluIHQmJiJkaXNhYmxlZCJpbiB0fV9yZWdpc3Rlck9uQ29sbGVjdGlvbkNoYW5nZSh0KXt0aGlzLl9vbkNvbGxlY3Rpb25DaGFuZ2U9dH1fc2V0VXBkYXRlU3RyYXRlZ3kodCl7ZWQodCkmJm51bGwhPXQudXBkYXRlT24mJih0aGlzLl91cGRhdGVPbj10LnVwZGF0ZU9uKX1fcGFyZW50TWFya2VkRGlydHkodCl7cmV0dXJuIXQmJnRoaXMuX3BhcmVudCYmdGhpcy5fcGFyZW50LmRpcnR5JiYhdGhpcy5fcGFyZW50Ll9hbnlDb250cm9sc0RpcnR5KCl9fWNsYXNzIHJkIGV4dGVuZHMgbmR7Y29uc3RydWN0b3IodD1udWxsLGUsbil7c3VwZXIoWWgoZSksWGgobixlKSksdGhpcy5fb25DaGFuZ2U9W10sdGhpcy5fYXBwbHlGb3JtU3RhdGUodCksdGhpcy5fc2V0VXBkYXRlU3RyYXRlZ3koZSksdGhpcy51cGRhdGVWYWx1ZUFuZFZhbGlkaXR5KHtvbmx5U2VsZjohMCxlbWl0RXZlbnQ6ITF9KSx0aGlzLl9pbml0T2JzZXJ2YWJsZXMoKX1zZXRWYWx1ZSh0LGU9e30pe3RoaXMudmFsdWU9dGhpcy5fcGVuZGluZ1ZhbHVlPXQsdGhpcy5fb25DaGFuZ2UubGVuZ3RoJiYhMSE9PWUuZW1pdE1vZGVsVG9WaWV3Q2hhbmdlJiZ0aGlzLl9vbkNoYW5nZS5mb3JFYWNoKHQ9PnQodGhpcy52YWx1ZSwhMSE9PWUuZW1pdFZpZXdUb01vZGVsQ2hhbmdlKSksdGhpcy51cGRhdGVWYWx1ZUFuZFZhbGlkaXR5KGUpfXBhdGNoVmFsdWUodCxlPXt9KXt0aGlzLnNldFZhbHVlKHQsZSl9cmVzZXQodD1udWxsLGU9e30pe3RoaXMuX2FwcGx5Rm9ybVN0YXRlKHQpLHRoaXMubWFya0FzUHJpc3RpbmUoZSksdGhpcy5tYXJrQXNVbnRvdWNoZWQoZSksdGhpcy5zZXRWYWx1ZSh0aGlzLnZhbHVlLGUpLHRoaXMuX3BlbmRpbmdDaGFuZ2U9ITF9X3VwZGF0ZVZhbHVlKCl7fV9hbnlDb250cm9scyh0KXtyZXR1cm4hMX1fYWxsQ29udHJvbHNEaXNhYmxlZCgpe3JldHVybiB0aGlzLmRpc2FibGVkfXJlZ2lzdGVyT25DaGFuZ2UodCl7dGhpcy5fb25DaGFuZ2UucHVzaCh0KX1fY2xlYXJDaGFuZ2VGbnMoKXt0aGlzLl9vbkNoYW5nZT1bXSx0aGlzLl9vbkRpc2FibGVkQ2hhbmdlPVtdLHRoaXMuX29uQ29sbGVjdGlvbkNoYW5nZT0oKT0+e319cmVnaXN0ZXJPbkRpc2FibGVkQ2hhbmdlKHQpe3RoaXMuX29uRGlzYWJsZWRDaGFuZ2UucHVzaCh0KX1fZm9yRWFjaENoaWxkKHQpe31fc3luY1BlbmRpbmdDb250cm9scygpe3JldHVybiEoInN1Ym1pdCIhPT10aGlzLnVwZGF0ZU9ufHwodGhpcy5fcGVuZGluZ0RpcnR5JiZ0aGlzLm1hcmtBc0RpcnR5KCksdGhpcy5fcGVuZGluZ1RvdWNoZWQmJnRoaXMubWFya0FzVG91Y2hlZCgpLCF0aGlzLl9wZW5kaW5nQ2hhbmdlKXx8KHRoaXMuc2V0VmFsdWUodGhpcy5fcGVuZGluZ1ZhbHVlLHtvbmx5U2VsZjohMCxlbWl0TW9kZWxUb1ZpZXdDaGFuZ2U6ITF9KSwwKSl9X2FwcGx5Rm9ybVN0YXRlKHQpe3RoaXMuX2lzQm94ZWRWYWx1ZSh0KT8odGhpcy52YWx1ZT10aGlzLl9wZW5kaW5nVmFsdWU9dC52YWx1ZSx0LmRpc2FibGVkP3RoaXMuZGlzYWJsZSh7b25seVNlbGY6ITAsZW1pdEV2ZW50OiExfSk6dGhpcy5lbmFibGUoe29ubHlTZWxmOiEwLGVtaXRFdmVudDohMX0pKTp0aGlzLnZhbHVlPXRoaXMuX3BlbmRpbmdWYWx1ZT10fX1jbGFzcyBzZCBleHRlbmRzIG5ke2NvbnN0cnVjdG9yKHQsZSxuKXtzdXBlcihZaChlKSxYaChuLGUpKSx0aGlzLmNvbnRyb2xzPXQsdGhpcy5faW5pdE9ic2VydmFibGVzKCksdGhpcy5fc2V0VXBkYXRlU3RyYXRlZ3koZSksdGhpcy5fc2V0VXBDb250cm9scygpLHRoaXMudXBkYXRlVmFsdWVBbmRWYWxpZGl0eSh7b25seVNlbGY6ITAsZW1pdEV2ZW50OiExfSl9cmVnaXN0ZXJDb250cm9sKHQsZSl7cmV0dXJuIHRoaXMuY29udHJvbHNbdF0/dGhpcy5jb250cm9sc1t0XToodGhpcy5jb250cm9sc1t0XT1lLGUuc2V0UGFyZW50KHRoaXMpLGUuX3JlZ2lzdGVyT25Db2xsZWN0aW9uQ2hhbmdlKHRoaXMuX29uQ29sbGVjdGlvbkNoYW5nZSksZSl9YWRkQ29udHJvbCh0LGUpe3RoaXMucmVnaXN0ZXJDb250cm9sKHQsZSksdGhpcy51cGRhdGVWYWx1ZUFuZFZhbGlkaXR5KCksdGhpcy5fb25Db2xsZWN0aW9uQ2hhbmdlKCl9cmVtb3ZlQ29udHJvbCh0KXt0aGlzLmNvbnRyb2xzW3RdJiZ0aGlzLmNvbnRyb2xzW3RdLl9yZWdpc3Rlck9uQ29sbGVjdGlvbkNoYW5nZSgoKT0+e30pLGRlbGV0ZSB0aGlzLmNvbnRyb2xzW3RdLHRoaXMudXBkYXRlVmFsdWVBbmRWYWxpZGl0eSgpLHRoaXMuX29uQ29sbGVjdGlvbkNoYW5nZSgpfXNldENvbnRyb2wodCxlKXt0aGlzLmNvbnRyb2xzW3RdJiZ0aGlzLmNvbnRyb2xzW3RdLl9yZWdpc3Rlck9uQ29sbGVjdGlvbkNoYW5nZSgoKT0+e30pLGRlbGV0ZSB0aGlzLmNvbnRyb2xzW3RdLGUmJnRoaXMucmVnaXN0ZXJDb250cm9sKHQsZSksdGhpcy51cGRhdGVWYWx1ZUFuZFZhbGlkaXR5KCksdGhpcy5fb25Db2xsZWN0aW9uQ2hhbmdlKCl9Y29udGFpbnModCl7cmV0dXJuIHRoaXMuY29udHJvbHMuaGFzT3duUHJvcGVydHkodCkmJnRoaXMuY29udHJvbHNbdF0uZW5hYmxlZH1zZXRWYWx1ZSh0LGU9e30pe3RoaXMuX2NoZWNrQWxsVmFsdWVzUHJlc2VudCh0KSxPYmplY3Qua2V5cyh0KS5mb3JFYWNoKG49Pnt0aGlzLl90aHJvd0lmQ29udHJvbE1pc3NpbmcobiksdGhpcy5jb250cm9sc1tuXS5zZXRWYWx1ZSh0W25dLHtvbmx5U2VsZjohMCxlbWl0RXZlbnQ6ZS5lbWl0RXZlbnR9KX0pLHRoaXMudXBkYXRlVmFsdWVBbmRWYWxpZGl0eShlKX1wYXRjaFZhbHVlKHQsZT17fSl7T2JqZWN0LmtleXModCkuZm9yRWFjaChuPT57dGhpcy5jb250cm9sc1tuXSYmdGhpcy5jb250cm9sc1tuXS5wYXRjaFZhbHVlKHRbbl0se29ubHlTZWxmOiEwLGVtaXRFdmVudDplLmVtaXRFdmVudH0pfSksdGhpcy51cGRhdGVWYWx1ZUFuZFZhbGlkaXR5KGUpfXJlc2V0KHQ9e30sZT17fSl7dGhpcy5fZm9yRWFjaENoaWxkKChuLHIpPT57bi5yZXNldCh0W3JdLHtvbmx5U2VsZjohMCxlbWl0RXZlbnQ6ZS5lbWl0RXZlbnR9KX0pLHRoaXMuX3VwZGF0ZVByaXN0aW5lKGUpLHRoaXMuX3VwZGF0ZVRvdWNoZWQoZSksdGhpcy51cGRhdGVWYWx1ZUFuZFZhbGlkaXR5KGUpfWdldFJhd1ZhbHVlKCl7cmV0dXJuIHRoaXMuX3JlZHVjZUNoaWxkcmVuKHt9LCh0LGUsbik9Pih0W25dPWUgaW5zdGFuY2VvZiByZD9lLnZhbHVlOmUuZ2V0UmF3VmFsdWUoKSx0KSl9X3N5bmNQZW5kaW5nQ29udHJvbHMoKXtsZXQgdD10aGlzLl9yZWR1Y2VDaGlsZHJlbighMSwodCxlKT0+ISFlLl9zeW5jUGVuZGluZ0NvbnRyb2xzKCl8fHQpO3JldHVybiB0JiZ0aGlzLnVwZGF0ZVZhbHVlQW5kVmFsaWRpdHkoe29ubHlTZWxmOiEwfSksdH1fdGhyb3dJZkNvbnRyb2xNaXNzaW5nKHQpe2lmKCFPYmplY3Qua2V5cyh0aGlzLmNvbnRyb2xzKS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKCJcbiAgICAgICAgVGhlcmUgYXJlIG5vIGZvcm0gY29udHJvbHMgcmVnaXN0ZXJlZCB3aXRoIHRoaXMgZ3JvdXAgeWV0LiBJZiB5b3UncmUgdXNpbmcgbmdNb2RlbCxcbiAgICAgICAgeW91IG1heSB3YW50IHRvIGNoZWNrIG5leHQgdGljayAoZS5nLiB1c2Ugc2V0VGltZW91dCkuXG4gICAgICAiKTtpZighdGhpcy5jb250cm9sc1t0XSl0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBmaW5kIGZvcm0gY29udHJvbCB3aXRoIG5hbWU6ICR7dH0uYCl9X2ZvckVhY2hDaGlsZCh0KXtPYmplY3Qua2V5cyh0aGlzLmNvbnRyb2xzKS5mb3JFYWNoKGU9PnQodGhpcy5jb250cm9sc1tlXSxlKSl9X3NldFVwQ29udHJvbHMoKXt0aGlzLl9mb3JFYWNoQ2hpbGQodD0+e3Quc2V0UGFyZW50KHRoaXMpLHQuX3JlZ2lzdGVyT25Db2xsZWN0aW9uQ2hhbmdlKHRoaXMuX29uQ29sbGVjdGlvbkNoYW5nZSl9KX1fdXBkYXRlVmFsdWUoKXt0aGlzLnZhbHVlPXRoaXMuX3JlZHVjZVZhbHVlKCl9X2FueUNvbnRyb2xzKHQpe2Zvcihjb25zdCBlIG9mIE9iamVjdC5rZXlzKHRoaXMuY29udHJvbHMpKXtjb25zdCBuPXRoaXMuY29udHJvbHNbZV07aWYodGhpcy5jb250YWlucyhlKSYmdChuKSlyZXR1cm4hMH1yZXR1cm4hMX1fcmVkdWNlVmFsdWUoKXtyZXR1cm4gdGhpcy5fcmVkdWNlQ2hpbGRyZW4oe30sKHQsZSxuKT0+KChlLmVuYWJsZWR8fHRoaXMuZGlzYWJsZWQpJiYodFtuXT1lLnZhbHVlKSx0KSl9X3JlZHVjZUNoaWxkcmVuKHQsZSl7bGV0IG49dDtyZXR1cm4gdGhpcy5fZm9yRWFjaENoaWxkKCh0LHIpPT57bj1lKG4sdCxyKX0pLG59X2FsbENvbnRyb2xzRGlzYWJsZWQoKXtmb3IoY29uc3QgdCBvZiBPYmplY3Qua2V5cyh0aGlzLmNvbnRyb2xzKSlpZih0aGlzLmNvbnRyb2xzW3RdLmVuYWJsZWQpcmV0dXJuITE7cmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuY29udHJvbHMpLmxlbmd0aD4wfHx0aGlzLmRpc2FibGVkfV9jaGVja0FsbFZhbHVlc1ByZXNlbnQodCl7dGhpcy5fZm9yRWFjaENoaWxkKChlLG4pPT57aWYodm9pZCAwPT09dFtuXSl0aHJvdyBuZXcgRXJyb3IoYE11c3Qgc3VwcGx5IGEgdmFsdWUgZm9yIGZvcm0gY29udHJvbCB3aXRoIG5hbWU6ICcke259Jy5gKX0pfX1jbGFzcyBpZCBleHRlbmRzIG5ke2NvbnN0cnVjdG9yKHQsZSxuKXtzdXBlcihZaChlKSxYaChuLGUpKSx0aGlzLmNvbnRyb2xzPXQsdGhpcy5faW5pdE9ic2VydmFibGVzKCksdGhpcy5fc2V0VXBkYXRlU3RyYXRlZ3koZSksdGhpcy5fc2V0VXBDb250cm9scygpLHRoaXMudXBkYXRlVmFsdWVBbmRWYWxpZGl0eSh7b25seVNlbGY6ITAsZW1pdEV2ZW50OiExfSl9YXQodCl7cmV0dXJuIHRoaXMuY29udHJvbHNbdF19cHVzaCh0KXt0aGlzLmNvbnRyb2xzLnB1c2godCksdGhpcy5fcmVnaXN0ZXJDb250cm9sKHQpLHRoaXMudXBkYXRlVmFsdWVBbmRWYWxpZGl0eSgpLHRoaXMuX29uQ29sbGVjdGlvbkNoYW5nZSgpfWluc2VydCh0LGUpe3RoaXMuY29udHJvbHMuc3BsaWNlKHQsMCxlKSx0aGlzLl9yZWdpc3RlckNvbnRyb2woZSksdGhpcy51cGRhdGVWYWx1ZUFuZFZhbGlkaXR5KCl9cmVtb3ZlQXQodCl7dGhpcy5jb250cm9sc1t0XSYmdGhpcy5jb250cm9sc1t0XS5fcmVnaXN0ZXJPbkNvbGxlY3Rpb25DaGFuZ2UoKCk9Pnt9KSx0aGlzLmNvbnRyb2xzLnNwbGljZSh0LDEpLHRoaXMudXBkYXRlVmFsdWVBbmRWYWxpZGl0eSgpfXNldENvbnRyb2wodCxlKXt0aGlzLmNvbnRyb2xzW3RdJiZ0aGlzLmNvbnRyb2xzW3RdLl9yZWdpc3Rlck9uQ29sbGVjdGlvbkNoYW5nZSgoKT0+e30pLHRoaXMuY29udHJvbHMuc3BsaWNlKHQsMSksZSYmKHRoaXMuY29udHJvbHMuc3BsaWNlKHQsMCxlKSx0aGlzLl9yZWdpc3RlckNvbnRyb2woZSkpLHRoaXMudXBkYXRlVmFsdWVBbmRWYWxpZGl0eSgpLHRoaXMuX29uQ29sbGVjdGlvbkNoYW5nZSgpfWdldCBsZW5ndGgoKXtyZXR1cm4gdGhpcy5jb250cm9scy5sZW5ndGh9c2V0VmFsdWUodCxlPXt9KXt0aGlzLl9jaGVja0FsbFZhbHVlc1ByZXNlbnQodCksdC5mb3JFYWNoKCh0LG4pPT57dGhpcy5fdGhyb3dJZkNvbnRyb2xNaXNzaW5nKG4pLHRoaXMuYXQobikuc2V0VmFsdWUodCx7b25seVNlbGY6ITAsZW1pdEV2ZW50OmUuZW1pdEV2ZW50fSl9KSx0aGlzLnVwZGF0ZVZhbHVlQW5kVmFsaWRpdHkoZSl9cGF0Y2hWYWx1ZSh0LGU9e30pe3QuZm9yRWFjaCgodCxuKT0+e3RoaXMuYXQobikmJnRoaXMuYXQobikucGF0Y2hWYWx1ZSh0LHtvbmx5U2VsZjohMCxlbWl0RXZlbnQ6ZS5lbWl0RXZlbnR9KX0pLHRoaXMudXBkYXRlVmFsdWVBbmRWYWxpZGl0eShlKX1yZXNldCh0PVtdLGU9e30pe3RoaXMuX2ZvckVhY2hDaGlsZCgobixyKT0+e24ucmVzZXQodFtyXSx7b25seVNlbGY6ITAsZW1pdEV2ZW50OmUuZW1pdEV2ZW50fSl9KSx0aGlzLl91cGRhdGVQcmlzdGluZShlKSx0aGlzLl91cGRhdGVUb3VjaGVkKGUpLHRoaXMudXBkYXRlVmFsdWVBbmRWYWxpZGl0eShlKX1nZXRSYXdWYWx1ZSgpe3JldHVybiB0aGlzLmNvbnRyb2xzLm1hcCh0PT50IGluc3RhbmNlb2YgcmQ/dC52YWx1ZTp0LmdldFJhd1ZhbHVlKCkpfWNsZWFyKCl7dGhpcy5jb250cm9scy5sZW5ndGg8MXx8KHRoaXMuX2ZvckVhY2hDaGlsZCh0PT50Ll9yZWdpc3Rlck9uQ29sbGVjdGlvbkNoYW5nZSgoKT0+e30pKSx0aGlzLmNvbnRyb2xzLnNwbGljZSgwKSx0aGlzLnVwZGF0ZVZhbHVlQW5kVmFsaWRpdHkoKSl9X3N5bmNQZW5kaW5nQ29udHJvbHMoKXtsZXQgdD10aGlzLmNvbnRyb2xzLnJlZHVjZSgodCxlKT0+ISFlLl9zeW5jUGVuZGluZ0NvbnRyb2xzKCl8fHQsITEpO3JldHVybiB0JiZ0aGlzLnVwZGF0ZVZhbHVlQW5kVmFsaWRpdHkoe29ubHlTZWxmOiEwfSksdH1fdGhyb3dJZkNvbnRyb2xNaXNzaW5nKHQpe2lmKCF0aGlzLmNvbnRyb2xzLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoIlxuICAgICAgICBUaGVyZSBhcmUgbm8gZm9ybSBjb250cm9scyByZWdpc3RlcmVkIHdpdGggdGhpcyBhcnJheSB5ZXQuIElmIHlvdSdyZSB1c2luZyBuZ01vZGVsLFxuICAgICAgICB5b3UgbWF5IHdhbnQgdG8gY2hlY2sgbmV4dCB0aWNrIChlLmcuIHVzZSBzZXRUaW1lb3V0KS5cbiAgICAgICIpO2lmKCF0aGlzLmF0KHQpKXRocm93IG5ldyBFcnJvcigiQ2Fubm90IGZpbmQgZm9ybSBjb250cm9sIGF0IGluZGV4ICIrdCl9X2ZvckVhY2hDaGlsZCh0KXt0aGlzLmNvbnRyb2xzLmZvckVhY2goKGUsbik9Pnt0KGUsbil9KX1fdXBkYXRlVmFsdWUoKXt0aGlzLnZhbHVlPXRoaXMuY29udHJvbHMuZmlsdGVyKHQ9PnQuZW5hYmxlZHx8dGhpcy5kaXNhYmxlZCkubWFwKHQ9PnQudmFsdWUpfV9hbnlDb250cm9scyh0KXtyZXR1cm4gdGhpcy5jb250cm9scy5zb21lKGU9PmUuZW5hYmxlZCYmdChlKSl9X3NldFVwQ29udHJvbHMoKXt0aGlzLl9mb3JFYWNoQ2hpbGQodD0+dGhpcy5fcmVnaXN0ZXJDb250cm9sKHQpKX1fY2hlY2tBbGxWYWx1ZXNQcmVzZW50KHQpe3RoaXMuX2ZvckVhY2hDaGlsZCgoZSxuKT0+e2lmKHZvaWQgMD09PXRbbl0pdGhyb3cgbmV3IEVycm9yKGBNdXN0IHN1cHBseSBhIHZhbHVlIGZvciBmb3JtIGNvbnRyb2wgYXQgaW5kZXg6ICR7bn0uYCl9KX1fYWxsQ29udHJvbHNEaXNhYmxlZCgpe2Zvcihjb25zdCB0IG9mIHRoaXMuY29udHJvbHMpaWYodC5lbmFibGVkKXJldHVybiExO3JldHVybiB0aGlzLmNvbnRyb2xzLmxlbmd0aD4wfHx0aGlzLmRpc2FibGVkfV9yZWdpc3RlckNvbnRyb2wodCl7dC5zZXRQYXJlbnQodGhpcyksdC5fcmVnaXN0ZXJPbkNvbGxlY3Rpb25DaGFuZ2UodGhpcy5fb25Db2xsZWN0aW9uQ2hhbmdlKX19Y29uc3Qgb2Q9e3Byb3ZpZGU6YmgsdXNlRXhpc3Rpbmc6Q3QoKCk9PmxkKX0sYWQ9KCgpPT5Qcm9taXNlLnJlc29sdmUobnVsbCkpKCk7bGV0IGxkPSgoKT0+e2NsYXNzIHQgZXh0ZW5kcyBiaHtjb25zdHJ1Y3Rvcih0LGUsbixyKXtzdXBlcigpLHRoaXMuY29udHJvbD1uZXcgcmQsdGhpcy5fcmVnaXN0ZXJlZD0hMSx0aGlzLnVwZGF0ZT1uZXcgQ2EsdGhpcy5fcGFyZW50PXQsdGhpcy5fcmF3VmFsaWRhdG9ycz1lfHxbXSx0aGlzLl9yYXdBc3luY1ZhbGlkYXRvcnM9bnx8W10sdGhpcy52YWx1ZUFjY2Vzc29yPWZ1bmN0aW9uKHQsZSl7aWYoIWUpcmV0dXJuIG51bGw7QXJyYXkuaXNBcnJheShlKTtsZXQgbj12b2lkIDAscj12b2lkIDAscz12b2lkIDA7cmV0dXJuIGUuZm9yRWFjaCh0PT57dmFyIGU7dC5jb25zdHJ1Y3Rvcj09PWdoP249dDooZT10LFdoLnNvbWUodD0+ZS5jb25zdHJ1Y3Rvcj09PXQpP3I9dDpzPXQpfSksc3x8cnx8bnx8bnVsbH0oMCxyKX1uZ09uQ2hhbmdlcyh0KXt0aGlzLl9jaGVja0ZvckVycm9ycygpLHRoaXMuX3JlZ2lzdGVyZWR8fHRoaXMuX3NldFVwQ29udHJvbCgpLCJpc0Rpc2FibGVkImluIHQmJnRoaXMuX3VwZGF0ZURpc2FibGVkKHQpLGZ1bmN0aW9uKHQsZSl7aWYoIXQuaGFzT3duUHJvcGVydHkoIm1vZGVsIikpcmV0dXJuITE7Y29uc3Qgbj10Lm1vZGVsO3JldHVybiEhbi5pc0ZpcnN0Q2hhbmdlKCl8fCFPYmplY3QuaXMoZSxuLmN1cnJlbnRWYWx1ZSl9KHQsdGhpcy52aWV3TW9kZWwpJiYodGhpcy5fdXBkYXRlVmFsdWUodGhpcy5tb2RlbCksdGhpcy52aWV3TW9kZWw9dGhpcy5tb2RlbCl9bmdPbkRlc3Ryb3koKXt0aGlzLmZvcm1EaXJlY3RpdmUmJnRoaXMuZm9ybURpcmVjdGl2ZS5yZW1vdmVDb250cm9sKHRoaXMpfWdldCBwYXRoKCl7cmV0dXJuIHRoaXMuX3BhcmVudD9bLi4udGhpcy5fcGFyZW50LnBhdGgsdGhpcy5uYW1lXTpbdGhpcy5uYW1lXX1nZXQgZm9ybURpcmVjdGl2ZSgpe3JldHVybiB0aGlzLl9wYXJlbnQ/dGhpcy5fcGFyZW50LmZvcm1EaXJlY3RpdmU6bnVsbH1nZXQgdmFsaWRhdG9yKCl7cmV0dXJuIHpoKHRoaXMuX3Jhd1ZhbGlkYXRvcnMpfWdldCBhc3luY1ZhbGlkYXRvcigpe3JldHVybiBxaCh0aGlzLl9yYXdBc3luY1ZhbGlkYXRvcnMpfXZpZXdUb01vZGVsVXBkYXRlKHQpe3RoaXMudmlld01vZGVsPXQsdGhpcy51cGRhdGUuZW1pdCh0KX1fc2V0VXBDb250cm9sKCl7dGhpcy5fc2V0VXBkYXRlU3RyYXRlZ3koKSx0aGlzLl9pc1N0YW5kYWxvbmUoKT90aGlzLl9zZXRVcFN0YW5kYWxvbmUoKTp0aGlzLmZvcm1EaXJlY3RpdmUuYWRkQ29udHJvbCh0aGlzKSx0aGlzLl9yZWdpc3RlcmVkPSEwfV9zZXRVcGRhdGVTdHJhdGVneSgpe3RoaXMub3B0aW9ucyYmbnVsbCE9dGhpcy5vcHRpb25zLnVwZGF0ZU9uJiYodGhpcy5jb250cm9sLl91cGRhdGVPbj10aGlzLm9wdGlvbnMudXBkYXRlT24pfV9pc1N0YW5kYWxvbmUoKXtyZXR1cm4hdGhpcy5fcGFyZW50fHwhKCF0aGlzLm9wdGlvbnN8fCF0aGlzLm9wdGlvbnMuc3RhbmRhbG9uZSl9X3NldFVwU3RhbmRhbG9uZSgpe3ZhciB0LGU7KHQ9dGhpcy5jb250cm9sKS52YWxpZGF0b3I9U2guY29tcG9zZShbdC52YWxpZGF0b3IsKGU9dGhpcykudmFsaWRhdG9yXSksdC5hc3luY1ZhbGlkYXRvcj1TaC5jb21wb3NlQXN5bmMoW3QuYXN5bmNWYWxpZGF0b3IsZS5hc3luY1ZhbGlkYXRvcl0pLGUudmFsdWVBY2Nlc3Nvci53cml0ZVZhbHVlKHQudmFsdWUpLGZ1bmN0aW9uKHQsZSl7ZS52YWx1ZUFjY2Vzc29yLnJlZ2lzdGVyT25DaGFuZ2Uobj0+e3QuX3BlbmRpbmdWYWx1ZT1uLHQuX3BlbmRpbmdDaGFuZ2U9ITAsdC5fcGVuZGluZ0RpcnR5PSEwLCJjaGFuZ2UiPT09dC51cGRhdGVPbiYmJGgodCxlKX0pfSh0LGUpLGZ1bmN0aW9uKHQsZSl7dC5yZWdpc3Rlck9uQ2hhbmdlKCh0LG4pPT57ZS52YWx1ZUFjY2Vzc29yLndyaXRlVmFsdWUodCksbiYmZS52aWV3VG9Nb2RlbFVwZGF0ZSh0KX0pfSh0LGUpLGZ1bmN0aW9uKHQsZSl7ZS52YWx1ZUFjY2Vzc29yLnJlZ2lzdGVyT25Ub3VjaGVkKCgpPT57dC5fcGVuZGluZ1RvdWNoZWQ9ITAsImJsdXIiPT09dC51cGRhdGVPbiYmdC5fcGVuZGluZ0NoYW5nZSYmJGgodCxlKSwic3VibWl0IiE9PXQudXBkYXRlT24mJnQubWFya0FzVG91Y2hlZCgpfSl9KHQsZSksZS52YWx1ZUFjY2Vzc29yLnNldERpc2FibGVkU3RhdGUmJnQucmVnaXN0ZXJPbkRpc2FibGVkQ2hhbmdlKHQ9PntlLnZhbHVlQWNjZXNzb3Iuc2V0RGlzYWJsZWRTdGF0ZSh0KX0pLGUuX3Jhd1ZhbGlkYXRvcnMuZm9yRWFjaChlPT57ZS5yZWdpc3Rlck9uVmFsaWRhdG9yQ2hhbmdlJiZlLnJlZ2lzdGVyT25WYWxpZGF0b3JDaGFuZ2UoKCk9PnQudXBkYXRlVmFsdWVBbmRWYWxpZGl0eSgpKX0pLGUuX3Jhd0FzeW5jVmFsaWRhdG9ycy5mb3JFYWNoKGU9PntlLnJlZ2lzdGVyT25WYWxpZGF0b3JDaGFuZ2UmJmUucmVnaXN0ZXJPblZhbGlkYXRvckNoYW5nZSgoKT0+dC51cGRhdGVWYWx1ZUFuZFZhbGlkaXR5KCkpfSksdGhpcy5jb250cm9sLnVwZGF0ZVZhbHVlQW5kVmFsaWRpdHkoe2VtaXRFdmVudDohMX0pfV9jaGVja0ZvckVycm9ycygpe3RoaXMuX2lzU3RhbmRhbG9uZSgpfHx0aGlzLl9jaGVja1BhcmVudFR5cGUoKSx0aGlzLl9jaGVja05hbWUoKX1fY2hlY2tQYXJlbnRUeXBlKCl7fV9jaGVja05hbWUoKXt0aGlzLm9wdGlvbnMmJnRoaXMub3B0aW9ucy5uYW1lJiYodGhpcy5uYW1lPXRoaXMub3B0aW9ucy5uYW1lKSx0aGlzLl9pc1N0YW5kYWxvbmUoKX1fdXBkYXRlVmFsdWUodCl7YWQudGhlbigoKT0+e3RoaXMuY29udHJvbC5zZXRWYWx1ZSh0LHtlbWl0Vmlld1RvTW9kZWxDaGFuZ2U6ITF9KX0pfV91cGRhdGVEaXNhYmxlZCh0KXtjb25zdCBlPXQuaXNEaXNhYmxlZC5jdXJyZW50VmFsdWUsbj0iIj09PWV8fGUmJiJmYWxzZSIhPT1lO2FkLnRoZW4oKCk9PntuJiYhdGhpcy5jb250cm9sLmRpc2FibGVkP3RoaXMuY29udHJvbC5kaXNhYmxlKCk6IW4mJnRoaXMuY29udHJvbC5kaXNhYmxlZCYmdGhpcy5jb250cm9sLmVuYWJsZSgpfSl9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKFJpKHloLDkpLFJpKERoLDEwKSxSaShFaCwxMCksUmkoY2gsMTApKX0sdC5cdTAyNzVkaXI9dmUoe3R5cGU6dCxzZWxlY3RvcnM6W1siIiwibmdNb2RlbCIsIiIsMywiZm9ybUNvbnRyb2xOYW1lIiwiIiwzLCJmb3JtQ29udHJvbCIsIiJdXSxpbnB1dHM6e25hbWU6Im5hbWUiLGlzRGlzYWJsZWQ6WyJkaXNhYmxlZCIsImlzRGlzYWJsZWQiXSxtb2RlbDpbIm5nTW9kZWwiLCJtb2RlbCJdLG9wdGlvbnM6WyJuZ01vZGVsT3B0aW9ucyIsIm9wdGlvbnMiXX0sb3V0cHV0czp7dXBkYXRlOiJuZ01vZGVsQ2hhbmdlIn0sZXhwb3J0QXM6WyJuZ01vZGVsIl0sZmVhdHVyZXM6W1NvKFtvZF0pLF9pLEllXX0pLHR9KSgpLHVkPSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX19KSx0fSkoKSxjZD0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVtb2Q9bWUoe3R5cGU6dH0pLHQuXHUwMjc1aW5qPWN0KHtmYWN0b3J5OmZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LHByb3ZpZGVyczpbTWhdLGltcG9ydHM6W3VkXX0pLHR9KSgpO2Z1bmN0aW9uIGhkKHQsZSl7cmV0dXJue3R5cGU6NyxuYW1lOnQsZGVmaW5pdGlvbnM6ZSxvcHRpb25zOnt9fX1mdW5jdGlvbiBkZCh0LGU9bnVsbCl7cmV0dXJue3R5cGU6NCxzdHlsZXM6ZSx0aW1pbmdzOnR9fWZ1bmN0aW9uIHBkKHQpe3JldHVybnt0eXBlOjYsc3R5bGVzOnQsb2Zmc2V0Om51bGx9fWZ1bmN0aW9uIGZkKHQsZSxuPW51bGwpe3JldHVybnt0eXBlOjEsZXhwcjp0LGFuaW1hdGlvbjplLG9wdGlvbnM6bn19Y2xhc3MgZ2QgZXh0ZW5kcyBEe2NvbnN0cnVjdG9yKHQpe3N1cGVyKCksdGhpcy5fdmFsdWU9dH1nZXQgdmFsdWUoKXtyZXR1cm4gdGhpcy5nZXRWYWx1ZSgpfV9zdWJzY3JpYmUodCl7Y29uc3QgZT1zdXBlci5fc3Vic2NyaWJlKHQpO3JldHVybiBlJiYhZS5jbG9zZWQmJnQubmV4dCh0aGlzLl92YWx1ZSksZX1nZXRWYWx1ZSgpe2lmKHRoaXMuaGFzRXJyb3IpdGhyb3cgdGhpcy50aHJvd25FcnJvcjtpZih0aGlzLmNsb3NlZCl0aHJvdyBuZXcgdztyZXR1cm4gdGhpcy5fdmFsdWV9bmV4dCh0KXtzdXBlci5uZXh0KHRoaXMuX3ZhbHVlPXQpfX1jbGFzcyBtZCBleHRlbmRzIGZ7bm90aWZ5TmV4dCh0LGUsbixyLHMpe3RoaXMuZGVzdGluYXRpb24ubmV4dChlKX1ub3RpZnlFcnJvcih0LGUpe3RoaXMuZGVzdGluYXRpb24uZXJyb3IodCl9bm90aWZ5Q29tcGxldGUodCl7dGhpcy5kZXN0aW5hdGlvbi5jb21wbGV0ZSgpfX1jbGFzcyB5ZCBleHRlbmRzIGZ7Y29uc3RydWN0b3IodCxlLG4pe3N1cGVyKCksdGhpcy5wYXJlbnQ9dCx0aGlzLm91dGVyVmFsdWU9ZSx0aGlzLm91dGVySW5kZXg9bix0aGlzLmluZGV4PTB9X25leHQodCl7dGhpcy5wYXJlbnQubm90aWZ5TmV4dCh0aGlzLm91dGVyVmFsdWUsdCx0aGlzLm91dGVySW5kZXgsdGhpcy5pbmRleCsrLHRoaXMpfV9lcnJvcih0KXt0aGlzLnBhcmVudC5ub3RpZnlFcnJvcih0LHRoaXMpLHRoaXMudW5zdWJzY3JpYmUoKX1fY29tcGxldGUoKXt0aGlzLnBhcmVudC5ub3RpZnlDb21wbGV0ZSh0aGlzKSx0aGlzLnVuc3Vic2NyaWJlKCl9fWZ1bmN0aW9uIHZkKHQsZSxuLHIscz1uZXcgeWQodCxuLHIpKXtpZighcy5jbG9zZWQpcmV0dXJuIGUgaW5zdGFuY2VvZiB2P2Uuc3Vic2NyaWJlKHMpOlIoZSkocyl9Y29uc3QgYmQ9e307Y2xhc3Mgd2R7Y29uc3RydWN0b3IodCl7dGhpcy5yZXN1bHRTZWxlY3Rvcj10fWNhbGwodCxlKXtyZXR1cm4gZS5zdWJzY3JpYmUobmV3IF9kKHQsdGhpcy5yZXN1bHRTZWxlY3RvcikpfX1jbGFzcyBfZCBleHRlbmRzIG1ke2NvbnN0cnVjdG9yKHQsZSl7c3VwZXIodCksdGhpcy5yZXN1bHRTZWxlY3Rvcj1lLHRoaXMuYWN0aXZlPTAsdGhpcy52YWx1ZXM9W10sdGhpcy5vYnNlcnZhYmxlcz1bXX1fbmV4dCh0KXt0aGlzLnZhbHVlcy5wdXNoKGJkKSx0aGlzLm9ic2VydmFibGVzLnB1c2godCl9X2NvbXBsZXRlKCl7Y29uc3QgdD10aGlzLm9ic2VydmFibGVzLGU9dC5sZW5ndGg7aWYoMD09PWUpdGhpcy5kZXN0aW5hdGlvbi5jb21wbGV0ZSgpO2Vsc2V7dGhpcy5hY3RpdmU9ZSx0aGlzLnRvUmVzcG9uZD1lO2ZvcihsZXQgbj0wO248ZTtuKyspdGhpcy5hZGQodmQodGhpcyx0W25dLHZvaWQgMCxuKSl9fW5vdGlmeUNvbXBsZXRlKHQpezA9PSh0aGlzLmFjdGl2ZS09MSkmJnRoaXMuZGVzdGluYXRpb24uY29tcGxldGUoKX1ub3RpZnlOZXh0KHQsZSxuKXtjb25zdCByPXRoaXMudmFsdWVzLHM9dGhpcy50b1Jlc3BvbmQ/cltuXT09PWJkPy0tdGhpcy50b1Jlc3BvbmQ6dGhpcy50b1Jlc3BvbmQ6MDtyW25dPWUsMD09PXMmJih0aGlzLnJlc3VsdFNlbGVjdG9yP3RoaXMuX3RyeVJlc3VsdFNlbGVjdG9yKHIpOnRoaXMuZGVzdGluYXRpb24ubmV4dChyLnNsaWNlKCkpKX1fdHJ5UmVzdWx0U2VsZWN0b3IodCl7bGV0IGU7dHJ5e2U9dGhpcy5yZXN1bHRTZWxlY3Rvci5hcHBseSh0aGlzLHQpfWNhdGNoKG4pe3JldHVybiB2b2lkIHRoaXMuZGVzdGluYXRpb24uZXJyb3Iobil9dGhpcy5kZXN0aW5hdGlvbi5uZXh0KGUpfX1jb25zdCBDZD0oKCk9PntmdW5jdGlvbiB0KCl7cmV0dXJuIEVycm9yLmNhbGwodGhpcyksdGhpcy5tZXNzYWdlPSJubyBlbGVtZW50cyBpbiBzZXF1ZW5jZSIsdGhpcy5uYW1lPSJFbXB0eUVycm9yIix0aGlzfXJldHVybiB0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKEVycm9yLnByb3RvdHlwZSksdH0pKCk7ZnVuY3Rpb24gRGQodCl7cmV0dXJuIG5ldyB2KGU9PntsZXQgbjt0cnl7bj10KCl9Y2F0Y2gocil7cmV0dXJuIHZvaWQgZS5lcnJvcihyKX1yZXR1cm4obj9qKG4pOnpjKCkpLnN1YnNjcmliZShlKX0pfWZ1bmN0aW9uIEVkKCl7cmV0dXJuICQoMSl9ZnVuY3Rpb24gQWQodCxlKXtyZXR1cm4gZnVuY3Rpb24obil7cmV0dXJuIG4ubGlmdChuZXcgU2QodCxlKSl9fWNsYXNzIFNke2NvbnN0cnVjdG9yKHQsZSl7dGhpcy5wcmVkaWNhdGU9dCx0aGlzLnRoaXNBcmc9ZX1jYWxsKHQsZSl7cmV0dXJuIGUuc3Vic2NyaWJlKG5ldyB4ZCh0LHRoaXMucHJlZGljYXRlLHRoaXMudGhpc0FyZykpfX1jbGFzcyB4ZCBleHRlbmRzIGZ7Y29uc3RydWN0b3IodCxlLG4pe3N1cGVyKHQpLHRoaXMucHJlZGljYXRlPWUsdGhpcy50aGlzQXJnPW4sdGhpcy5jb3VudD0wfV9uZXh0KHQpe2xldCBlO3RyeXtlPXRoaXMucHJlZGljYXRlLmNhbGwodGhpcy50aGlzQXJnLHQsdGhpcy5jb3VudCsrKX1jYXRjaChuKXtyZXR1cm4gdm9pZCB0aGlzLmRlc3RpbmF0aW9uLmVycm9yKG4pfWUmJnRoaXMuZGVzdGluYXRpb24ubmV4dCh0KX19Y29uc3Qga2Q9KCgpPT57ZnVuY3Rpb24gdCgpe3JldHVybiBFcnJvci5jYWxsKHRoaXMpLHRoaXMubWVzc2FnZT0iYXJndW1lbnQgb3V0IG9mIHJhbmdlIix0aGlzLm5hbWU9IkFyZ3VtZW50T3V0T2ZSYW5nZUVycm9yIix0aGlzfXJldHVybiB0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKEVycm9yLnByb3RvdHlwZSksdH0pKCk7ZnVuY3Rpb24gVGQodCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiAwPT09dD96YygpOmUubGlmdChuZXcgRmQodCkpfX1jbGFzcyBGZHtjb25zdHJ1Y3Rvcih0KXtpZih0aGlzLnRvdGFsPXQsdGhpcy50b3RhbDwwKXRocm93IG5ldyBrZH1jYWxsKHQsZSl7cmV0dXJuIGUuc3Vic2NyaWJlKG5ldyBPZCh0LHRoaXMudG90YWwpKX19Y2xhc3MgT2QgZXh0ZW5kcyBme2NvbnN0cnVjdG9yKHQsZSl7c3VwZXIodCksdGhpcy50b3RhbD1lLHRoaXMucmluZz1uZXcgQXJyYXksdGhpcy5jb3VudD0wfV9uZXh0KHQpe2NvbnN0IGU9dGhpcy5yaW5nLG49dGhpcy50b3RhbCxyPXRoaXMuY291bnQrKztlLmxlbmd0aDxuP2UucHVzaCh0KTplW3Ilbl09dH1fY29tcGxldGUoKXtjb25zdCB0PXRoaXMuZGVzdGluYXRpb247bGV0IGU9dGhpcy5jb3VudDtpZihlPjApe2NvbnN0IG49dGhpcy5jb3VudD49dGhpcy50b3RhbD90aGlzLnRvdGFsOnRoaXMuY291bnQscj10aGlzLnJpbmc7Zm9yKGxldCBzPTA7czxuO3MrKyl7Y29uc3Qgcz1lKyslbjt0Lm5leHQocltzXSl9fXQuY29tcGxldGUoKX19ZnVuY3Rpb24gUGQodD1NZCl7cmV0dXJuIGU9PmUubGlmdChuZXcgSWQodCkpfWNsYXNzIElke2NvbnN0cnVjdG9yKHQpe3RoaXMuZXJyb3JGYWN0b3J5PXR9Y2FsbCh0LGUpe3JldHVybiBlLnN1YnNjcmliZShuZXcgUmQodCx0aGlzLmVycm9yRmFjdG9yeSkpfX1jbGFzcyBSZCBleHRlbmRzIGZ7Y29uc3RydWN0b3IodCxlKXtzdXBlcih0KSx0aGlzLmVycm9yRmFjdG9yeT1lLHRoaXMuaGFzVmFsdWU9ITF9X25leHQodCl7dGhpcy5oYXNWYWx1ZT0hMCx0aGlzLmRlc3RpbmF0aW9uLm5leHQodCl9X2NvbXBsZXRlKCl7aWYodGhpcy5oYXNWYWx1ZSlyZXR1cm4gdGhpcy5kZXN0aW5hdGlvbi5jb21wbGV0ZSgpO3tsZXQgZTt0cnl7ZT10aGlzLmVycm9yRmFjdG9yeSgpfWNhdGNoKHQpe2U9dH10aGlzLmRlc3RpbmF0aW9uLmVycm9yKGUpfX19ZnVuY3Rpb24gTWQoKXtyZXR1cm4gbmV3IENkfWZ1bmN0aW9uIGpkKHQ9bnVsbCl7cmV0dXJuIGU9PmUubGlmdChuZXcgTmQodCkpfWNsYXNzIE5ke2NvbnN0cnVjdG9yKHQpe3RoaXMuZGVmYXVsdFZhbHVlPXR9Y2FsbCh0LGUpe3JldHVybiBlLnN1YnNjcmliZShuZXcgVmQodCx0aGlzLmRlZmF1bHRWYWx1ZSkpfX1jbGFzcyBWZCBleHRlbmRzIGZ7Y29uc3RydWN0b3IodCxlKXtzdXBlcih0KSx0aGlzLmRlZmF1bHRWYWx1ZT1lLHRoaXMuaXNFbXB0eT0hMH1fbmV4dCh0KXt0aGlzLmlzRW1wdHk9ITEsdGhpcy5kZXN0aW5hdGlvbi5uZXh0KHQpfV9jb21wbGV0ZSgpe3RoaXMuaXNFbXB0eSYmdGhpcy5kZXN0aW5hdGlvbi5uZXh0KHRoaXMuZGVmYXVsdFZhbHVlKSx0aGlzLmRlc3RpbmF0aW9uLmNvbXBsZXRlKCl9fWZ1bmN0aW9uIEJkKHQpe3JldHVybiBlPT4wPT09dD96YygpOmUubGlmdChuZXcgTGQodCkpfWNsYXNzIExke2NvbnN0cnVjdG9yKHQpe2lmKHRoaXMudG90YWw9dCx0aGlzLnRvdGFsPDApdGhyb3cgbmV3IGtkfWNhbGwodCxlKXtyZXR1cm4gZS5zdWJzY3JpYmUobmV3IFVkKHQsdGhpcy50b3RhbCkpfX1jbGFzcyBVZCBleHRlbmRzIGZ7Y29uc3RydWN0b3IodCxlKXtzdXBlcih0KSx0aGlzLnRvdGFsPWUsdGhpcy5jb3VudD0wfV9uZXh0KHQpe2NvbnN0IGU9dGhpcy50b3RhbCxuPSsrdGhpcy5jb3VudDtuPD1lJiYodGhpcy5kZXN0aW5hdGlvbi5uZXh0KHQpLG49PT1lJiYodGhpcy5kZXN0aW5hdGlvbi5jb21wbGV0ZSgpLHRoaXMudW5zdWJzY3JpYmUoKSkpfX1mdW5jdGlvbiBIZCguLi50KXtyZXR1cm4gRWQoKShxYyguLi50KSl9Y2xhc3MgJGR7Y29uc3RydWN0b3IodCxlLG49ITEpe3RoaXMuYWNjdW11bGF0b3I9dCx0aGlzLnNlZWQ9ZSx0aGlzLmhhc1NlZWQ9bn1jYWxsKHQsZSl7cmV0dXJuIGUuc3Vic2NyaWJlKG5ldyB6ZCh0LHRoaXMuYWNjdW11bGF0b3IsdGhpcy5zZWVkLHRoaXMuaGFzU2VlZCkpfX1jbGFzcyB6ZCBleHRlbmRzIGZ7Y29uc3RydWN0b3IodCxlLG4scil7c3VwZXIodCksdGhpcy5hY2N1bXVsYXRvcj1lLHRoaXMuX3NlZWQ9bix0aGlzLmhhc1NlZWQ9cix0aGlzLmluZGV4PTB9Z2V0IHNlZWQoKXtyZXR1cm4gdGhpcy5fc2VlZH1zZXQgc2VlZCh0KXt0aGlzLmhhc1NlZWQ9ITAsdGhpcy5fc2VlZD10fV9uZXh0KHQpe2lmKHRoaXMuaGFzU2VlZClyZXR1cm4gdGhpcy5fdHJ5TmV4dCh0KTt0aGlzLnNlZWQ9dCx0aGlzLmRlc3RpbmF0aW9uLm5leHQodCl9X3RyeU5leHQodCl7Y29uc3QgZT10aGlzLmluZGV4Kys7bGV0IG47dHJ5e249dGhpcy5hY2N1bXVsYXRvcih0aGlzLnNlZWQsdCxlKX1jYXRjaChyKXt0aGlzLmRlc3RpbmF0aW9uLmVycm9yKHIpfXRoaXMuc2VlZD1uLHRoaXMuZGVzdGluYXRpb24ubmV4dChuKX19ZnVuY3Rpb24gcWQodCl7cmV0dXJuIGZ1bmN0aW9uKGUpe2NvbnN0IG49bmV3IFdkKHQpLHI9ZS5saWZ0KG4pO3JldHVybiBuLmNhdWdodD1yfX1jbGFzcyBXZHtjb25zdHJ1Y3Rvcih0KXt0aGlzLnNlbGVjdG9yPXR9Y2FsbCh0LGUpe3JldHVybiBlLnN1YnNjcmliZShuZXcgWmQodCx0aGlzLnNlbGVjdG9yLHRoaXMuY2F1Z2h0KSl9fWNsYXNzIFpkIGV4dGVuZHMgVntjb25zdHJ1Y3Rvcih0LGUsbil7c3VwZXIodCksdGhpcy5zZWxlY3Rvcj1lLHRoaXMuY2F1Z2h0PW59ZXJyb3IodCl7aWYoIXRoaXMuaXNTdG9wcGVkKXtsZXQgbjt0cnl7bj10aGlzLnNlbGVjdG9yKHQsdGhpcy5jYXVnaHQpfWNhdGNoKGUpe3JldHVybiB2b2lkIHN1cGVyLmVycm9yKGUpfXRoaXMuX3Vuc3Vic2NyaWJlQW5kUmVjeWNsZSgpO2NvbnN0IHI9bmV3IE4odGhpcyk7dGhpcy5hZGQocik7Y29uc3Qgcz1CKG4scik7cyE9PXImJnRoaXMuYWRkKHMpfX19ZnVuY3Rpb24gR2QodCxlKXtyZXR1cm4gTCh0LGUsMSl9ZnVuY3Rpb24gS2QodCxlKXtjb25zdCBuPWFyZ3VtZW50cy5sZW5ndGg+PTI7cmV0dXJuIHI9PnIucGlwZSh0P0FkKChlLG4pPT50KGUsbixyKSk6eSxCZCgxKSxuP2pkKGUpOlBkKCgpPT5uZXcgQ2QpKX1mdW5jdGlvbiBRZCgpe31mdW5jdGlvbiBZZCh0LGUsbil7cmV0dXJuIGZ1bmN0aW9uKHIpe3JldHVybiByLmxpZnQobmV3IEpkKHQsZSxuKSl9fWNsYXNzIEpke2NvbnN0cnVjdG9yKHQsZSxuKXt0aGlzLm5leHRPck9ic2VydmVyPXQsdGhpcy5lcnJvcj1lLHRoaXMuY29tcGxldGU9bn1jYWxsKHQsZSl7cmV0dXJuIGUuc3Vic2NyaWJlKG5ldyBYZCh0LHRoaXMubmV4dE9yT2JzZXJ2ZXIsdGhpcy5lcnJvcix0aGlzLmNvbXBsZXRlKSl9fWNsYXNzIFhkIGV4dGVuZHMgZntjb25zdHJ1Y3Rvcih0LGUsbixzKXtzdXBlcih0KSx0aGlzLl90YXBOZXh0PVFkLHRoaXMuX3RhcEVycm9yPVFkLHRoaXMuX3RhcENvbXBsZXRlPVFkLHRoaXMuX3RhcEVycm9yPW58fFFkLHRoaXMuX3RhcENvbXBsZXRlPXN8fFFkLHIoZSk/KHRoaXMuX2NvbnRleHQ9dGhpcyx0aGlzLl90YXBOZXh0PWUpOmUmJih0aGlzLl9jb250ZXh0PWUsdGhpcy5fdGFwTmV4dD1lLm5leHR8fFFkLHRoaXMuX3RhcEVycm9yPWUuZXJyb3J8fFFkLHRoaXMuX3RhcENvbXBsZXRlPWUuY29tcGxldGV8fFFkKX1fbmV4dCh0KXt0cnl7dGhpcy5fdGFwTmV4dC5jYWxsKHRoaXMuX2NvbnRleHQsdCl9Y2F0Y2goZSl7cmV0dXJuIHZvaWQgdGhpcy5kZXN0aW5hdGlvbi5lcnJvcihlKX10aGlzLmRlc3RpbmF0aW9uLm5leHQodCl9X2Vycm9yKHQpe3RyeXt0aGlzLl90YXBFcnJvci5jYWxsKHRoaXMuX2NvbnRleHQsdCl9Y2F0Y2godCl7cmV0dXJuIHZvaWQgdGhpcy5kZXN0aW5hdGlvbi5lcnJvcih0KX10aGlzLmRlc3RpbmF0aW9uLmVycm9yKHQpfV9jb21wbGV0ZSgpe3RyeXt0aGlzLl90YXBDb21wbGV0ZS5jYWxsKHRoaXMuX2NvbnRleHQpfWNhdGNoKHQpe3JldHVybiB2b2lkIHRoaXMuZGVzdGluYXRpb24uZXJyb3IodCl9cmV0dXJuIHRoaXMuZGVzdGluYXRpb24uY29tcGxldGUoKX19Y2xhc3MgdHB7Y29uc3RydWN0b3IodCl7dGhpcy5jYWxsYmFjaz10fWNhbGwodCxlKXtyZXR1cm4gZS5zdWJzY3JpYmUobmV3IGVwKHQsdGhpcy5jYWxsYmFjaykpfX1jbGFzcyBlcCBleHRlbmRzIGZ7Y29uc3RydWN0b3IodCxlKXtzdXBlcih0KSx0aGlzLmFkZChuZXcgaChlKSl9fWNsYXNzIG5we2NvbnN0cnVjdG9yKHQsZSl7dGhpcy5pZD10LHRoaXMudXJsPWV9fWNsYXNzIHJwIGV4dGVuZHMgbnB7Y29uc3RydWN0b3IodCxlLG49ImltcGVyYXRpdmUiLHI9bnVsbCl7c3VwZXIodCxlKSx0aGlzLm5hdmlnYXRpb25UcmlnZ2VyPW4sdGhpcy5yZXN0b3JlZFN0YXRlPXJ9dG9TdHJpbmcoKXtyZXR1cm5gTmF2aWdhdGlvblN0YXJ0KGlkOiAke3RoaXMuaWR9LCB1cmw6ICcke3RoaXMudXJsfScpYH19Y2xhc3Mgc3AgZXh0ZW5kcyBucHtjb25zdHJ1Y3Rvcih0LGUsbil7c3VwZXIodCxlKSx0aGlzLnVybEFmdGVyUmVkaXJlY3RzPW59dG9TdHJpbmcoKXtyZXR1cm5gTmF2aWdhdGlvbkVuZChpZDogJHt0aGlzLmlkfSwgdXJsOiAnJHt0aGlzLnVybH0nLCB1cmxBZnRlclJlZGlyZWN0czogJyR7dGhpcy51cmxBZnRlclJlZGlyZWN0c30nKWB9fWNsYXNzIGlwIGV4dGVuZHMgbnB7Y29uc3RydWN0b3IodCxlLG4pe3N1cGVyKHQsZSksdGhpcy5yZWFzb249bn10b1N0cmluZygpe3JldHVybmBOYXZpZ2F0aW9uQ2FuY2VsKGlkOiAke3RoaXMuaWR9LCB1cmw6ICcke3RoaXMudXJsfScpYH19Y2xhc3Mgb3AgZXh0ZW5kcyBucHtjb25zdHJ1Y3Rvcih0LGUsbil7c3VwZXIodCxlKSx0aGlzLmVycm9yPW59dG9TdHJpbmcoKXtyZXR1cm5gTmF2aWdhdGlvbkVycm9yKGlkOiAke3RoaXMuaWR9LCB1cmw6ICcke3RoaXMudXJsfScsIGVycm9yOiAke3RoaXMuZXJyb3J9KWB9fWNsYXNzIGFwIGV4dGVuZHMgbnB7Y29uc3RydWN0b3IodCxlLG4scil7c3VwZXIodCxlKSx0aGlzLnVybEFmdGVyUmVkaXJlY3RzPW4sdGhpcy5zdGF0ZT1yfXRvU3RyaW5nKCl7cmV0dXJuYFJvdXRlc1JlY29nbml6ZWQoaWQ6ICR7dGhpcy5pZH0sIHVybDogJyR7dGhpcy51cmx9JywgdXJsQWZ0ZXJSZWRpcmVjdHM6ICcke3RoaXMudXJsQWZ0ZXJSZWRpcmVjdHN9Jywgc3RhdGU6ICR7dGhpcy5zdGF0ZX0pYH19Y2xhc3MgbHAgZXh0ZW5kcyBucHtjb25zdHJ1Y3Rvcih0LGUsbixyKXtzdXBlcih0LGUpLHRoaXMudXJsQWZ0ZXJSZWRpcmVjdHM9bix0aGlzLnN0YXRlPXJ9dG9TdHJpbmcoKXtyZXR1cm5gR3VhcmRzQ2hlY2tTdGFydChpZDogJHt0aGlzLmlkfSwgdXJsOiAnJHt0aGlzLnVybH0nLCB1cmxBZnRlclJlZGlyZWN0czogJyR7dGhpcy51cmxBZnRlclJlZGlyZWN0c30nLCBzdGF0ZTogJHt0aGlzLnN0YXRlfSlgfX1jbGFzcyB1cCBleHRlbmRzIG5we2NvbnN0cnVjdG9yKHQsZSxuLHIscyl7c3VwZXIodCxlKSx0aGlzLnVybEFmdGVyUmVkaXJlY3RzPW4sdGhpcy5zdGF0ZT1yLHRoaXMuc2hvdWxkQWN0aXZhdGU9c310b1N0cmluZygpe3JldHVybmBHdWFyZHNDaGVja0VuZChpZDogJHt0aGlzLmlkfSwgdXJsOiAnJHt0aGlzLnVybH0nLCB1cmxBZnRlclJlZGlyZWN0czogJyR7dGhpcy51cmxBZnRlclJlZGlyZWN0c30nLCBzdGF0ZTogJHt0aGlzLnN0YXRlfSwgc2hvdWxkQWN0aXZhdGU6ICR7dGhpcy5zaG91bGRBY3RpdmF0ZX0pYH19Y2xhc3MgY3AgZXh0ZW5kcyBucHtjb25zdHJ1Y3Rvcih0LGUsbixyKXtzdXBlcih0LGUpLHRoaXMudXJsQWZ0ZXJSZWRpcmVjdHM9bix0aGlzLnN0YXRlPXJ9dG9TdHJpbmcoKXtyZXR1cm5gUmVzb2x2ZVN0YXJ0KGlkOiAke3RoaXMuaWR9LCB1cmw6ICcke3RoaXMudXJsfScsIHVybEFmdGVyUmVkaXJlY3RzOiAnJHt0aGlzLnVybEFmdGVyUmVkaXJlY3RzfScsIHN0YXRlOiAke3RoaXMuc3RhdGV9KWB9fWNsYXNzIGhwIGV4dGVuZHMgbnB7Y29uc3RydWN0b3IodCxlLG4scil7c3VwZXIodCxlKSx0aGlzLnVybEFmdGVyUmVkaXJlY3RzPW4sdGhpcy5zdGF0ZT1yfXRvU3RyaW5nKCl7cmV0dXJuYFJlc29sdmVFbmQoaWQ6ICR7dGhpcy5pZH0sIHVybDogJyR7dGhpcy51cmx9JywgdXJsQWZ0ZXJSZWRpcmVjdHM6ICcke3RoaXMudXJsQWZ0ZXJSZWRpcmVjdHN9Jywgc3RhdGU6ICR7dGhpcy5zdGF0ZX0pYH19Y2xhc3MgZHB7Y29uc3RydWN0b3IodCl7dGhpcy5yb3V0ZT10fXRvU3RyaW5nKCl7cmV0dXJuYFJvdXRlQ29uZmlnTG9hZFN0YXJ0KHBhdGg6ICR7dGhpcy5yb3V0ZS5wYXRofSlgfX1jbGFzcyBwcHtjb25zdHJ1Y3Rvcih0KXt0aGlzLnJvdXRlPXR9dG9TdHJpbmcoKXtyZXR1cm5gUm91dGVDb25maWdMb2FkRW5kKHBhdGg6ICR7dGhpcy5yb3V0ZS5wYXRofSlgfX1jbGFzcyBmcHtjb25zdHJ1Y3Rvcih0KXt0aGlzLnNuYXBzaG90PXR9dG9TdHJpbmcoKXtyZXR1cm5gQ2hpbGRBY3RpdmF0aW9uU3RhcnQocGF0aDogJyR7dGhpcy5zbmFwc2hvdC5yb3V0ZUNvbmZpZyYmdGhpcy5zbmFwc2hvdC5yb3V0ZUNvbmZpZy5wYXRofHwiIn0nKWB9fWNsYXNzIGdwe2NvbnN0cnVjdG9yKHQpe3RoaXMuc25hcHNob3Q9dH10b1N0cmluZygpe3JldHVybmBDaGlsZEFjdGl2YXRpb25FbmQocGF0aDogJyR7dGhpcy5zbmFwc2hvdC5yb3V0ZUNvbmZpZyYmdGhpcy5zbmFwc2hvdC5yb3V0ZUNvbmZpZy5wYXRofHwiIn0nKWB9fWNsYXNzIG1we2NvbnN0cnVjdG9yKHQpe3RoaXMuc25hcHNob3Q9dH10b1N0cmluZygpe3JldHVybmBBY3RpdmF0aW9uU3RhcnQocGF0aDogJyR7dGhpcy5zbmFwc2hvdC5yb3V0ZUNvbmZpZyYmdGhpcy5zbmFwc2hvdC5yb3V0ZUNvbmZpZy5wYXRofHwiIn0nKWB9fWNsYXNzIHlwe2NvbnN0cnVjdG9yKHQpe3RoaXMuc25hcHNob3Q9dH10b1N0cmluZygpe3JldHVybmBBY3RpdmF0aW9uRW5kKHBhdGg6ICcke3RoaXMuc25hcHNob3Qucm91dGVDb25maWcmJnRoaXMuc25hcHNob3Qucm91dGVDb25maWcucGF0aHx8IiJ9JylgfX1jbGFzcyB2cHtjb25zdHJ1Y3Rvcih0LGUsbil7dGhpcy5yb3V0ZXJFdmVudD10LHRoaXMucG9zaXRpb249ZSx0aGlzLmFuY2hvcj1ufXRvU3RyaW5nKCl7cmV0dXJuYFNjcm9sbChhbmNob3I6ICcke3RoaXMuYW5jaG9yfScsIHBvc2l0aW9uOiAnJHt0aGlzLnBvc2l0aW9uP2Ake3RoaXMucG9zaXRpb25bMF19LCAke3RoaXMucG9zaXRpb25bMV19YDpudWxsfScpYH19Y29uc3QgYnA9InByaW1hcnkiO2NsYXNzIHdwe2NvbnN0cnVjdG9yKHQpe3RoaXMucGFyYW1zPXR8fHt9fWhhcyh0KXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMucGFyYW1zLHQpfWdldCh0KXtpZih0aGlzLmhhcyh0KSl7Y29uc3QgZT10aGlzLnBhcmFtc1t0XTtyZXR1cm4gQXJyYXkuaXNBcnJheShlKT9lWzBdOmV9cmV0dXJuIG51bGx9Z2V0QWxsKHQpe2lmKHRoaXMuaGFzKHQpKXtjb25zdCBlPXRoaXMucGFyYW1zW3RdO3JldHVybiBBcnJheS5pc0FycmF5KGUpP2U6W2VdfXJldHVybltdfWdldCBrZXlzKCl7cmV0dXJuIE9iamVjdC5rZXlzKHRoaXMucGFyYW1zKX19ZnVuY3Rpb24gX3AodCl7cmV0dXJuIG5ldyB3cCh0KX1mdW5jdGlvbiBDcCh0KXtjb25zdCBlPUVycm9yKCJOYXZpZ2F0aW9uQ2FuY2VsaW5nRXJyb3I6ICIrdCk7cmV0dXJuIGUubmdOYXZpZ2F0aW9uQ2FuY2VsaW5nRXJyb3I9ITAsZX1mdW5jdGlvbiBEcCh0LGUsbil7Y29uc3Qgcj1uLnBhdGguc3BsaXQoIi8iKTtpZihyLmxlbmd0aD50Lmxlbmd0aClyZXR1cm4gbnVsbDtpZigiZnVsbCI9PT1uLnBhdGhNYXRjaCYmKGUuaGFzQ2hpbGRyZW4oKXx8ci5sZW5ndGg8dC5sZW5ndGgpKXJldHVybiBudWxsO2NvbnN0IHM9e307Zm9yKGxldCBpPTA7aTxyLmxlbmd0aDtpKyspe2NvbnN0IGU9cltpXSxuPXRbaV07aWYoZS5zdGFydHNXaXRoKCI6Iikpc1tlLnN1YnN0cmluZygxKV09bjtlbHNlIGlmKGUhPT1uLnBhdGgpcmV0dXJuIG51bGx9cmV0dXJue2NvbnN1bWVkOnQuc2xpY2UoMCxyLmxlbmd0aCkscG9zUGFyYW1zOnN9fWZ1bmN0aW9uIEVwKHQsZSl7Y29uc3Qgbj1PYmplY3Qua2V5cyh0KSxyPU9iamVjdC5rZXlzKGUpO2lmKCFufHwhcnx8bi5sZW5ndGghPXIubGVuZ3RoKXJldHVybiExO2xldCBzO2ZvcihsZXQgaT0wO2k8bi5sZW5ndGg7aSsrKWlmKHM9bltpXSwhQXAodFtzXSxlW3NdKSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBBcCh0LGUpe2lmKEFycmF5LmlzQXJyYXkodCkmJkFycmF5LmlzQXJyYXkoZSkpe2lmKHQubGVuZ3RoIT09ZS5sZW5ndGgpcmV0dXJuITE7Y29uc3Qgbj1bLi4udF0uc29ydCgpLHI9Wy4uLmVdLnNvcnQoKTtyZXR1cm4gbi5ldmVyeSgodCxlKT0+cltlXT09PXQpfXJldHVybiB0PT09ZX1mdW5jdGlvbiBTcCh0KXtyZXR1cm4gQXJyYXkucHJvdG90eXBlLmNvbmNhdC5hcHBseShbXSx0KX1mdW5jdGlvbiB4cCh0KXtyZXR1cm4gdC5sZW5ndGg+MD90W3QubGVuZ3RoLTFdOm51bGx9ZnVuY3Rpb24ga3AodCxlKXtmb3IoY29uc3QgbiBpbiB0KXQuaGFzT3duUHJvcGVydHkobikmJmUodFtuXSxuKX1mdW5jdGlvbiBUcCh0KXtyZXR1cm4gSGkodCk/dDpVaSh0KT9qKFByb21pc2UucmVzb2x2ZSh0KSk6cWModCl9ZnVuY3Rpb24gRnAodCxlLG4pe3JldHVybiBuP2Z1bmN0aW9uKHQsZSl7cmV0dXJuIEVwKHQsZSl9KHQucXVlcnlQYXJhbXMsZS5xdWVyeVBhcmFtcykmJmZ1bmN0aW9uIHQoZSxuKXtpZighUnAoZS5zZWdtZW50cyxuLnNlZ21lbnRzKSlyZXR1cm4hMTtpZihlLm51bWJlck9mQ2hpbGRyZW4hPT1uLm51bWJlck9mQ2hpbGRyZW4pcmV0dXJuITE7Zm9yKGNvbnN0IHIgaW4gbi5jaGlsZHJlbil7aWYoIWUuY2hpbGRyZW5bcl0pcmV0dXJuITE7aWYoIXQoZS5jaGlsZHJlbltyXSxuLmNoaWxkcmVuW3JdKSlyZXR1cm4hMX1yZXR1cm4hMH0odC5yb290LGUucm9vdCk6ZnVuY3Rpb24odCxlKXtyZXR1cm4gT2JqZWN0LmtleXMoZSkubGVuZ3RoPD1PYmplY3Qua2V5cyh0KS5sZW5ndGgmJk9iamVjdC5rZXlzKGUpLmV2ZXJ5KG49PkFwKHRbbl0sZVtuXSkpfSh0LnF1ZXJ5UGFyYW1zLGUucXVlcnlQYXJhbXMpJiZmdW5jdGlvbiB0KGUsbil7cmV0dXJuIGZ1bmN0aW9uIGUobixyLHMpe2lmKG4uc2VnbWVudHMubGVuZ3RoPnMubGVuZ3RoKXJldHVybiEhUnAobi5zZWdtZW50cy5zbGljZSgwLHMubGVuZ3RoKSxzKSYmIXIuaGFzQ2hpbGRyZW4oKTtpZihuLnNlZ21lbnRzLmxlbmd0aD09PXMubGVuZ3RoKXtpZighUnAobi5zZWdtZW50cyxzKSlyZXR1cm4hMTtmb3IoY29uc3QgZSBpbiByLmNoaWxkcmVuKXtpZighbi5jaGlsZHJlbltlXSlyZXR1cm4hMTtpZighdChuLmNoaWxkcmVuW2VdLHIuY2hpbGRyZW5bZV0pKXJldHVybiExfXJldHVybiEwfXtjb25zdCB0PXMuc2xpY2UoMCxuLnNlZ21lbnRzLmxlbmd0aCksaT1zLnNsaWNlKG4uc2VnbWVudHMubGVuZ3RoKTtyZXR1cm4hIVJwKG4uc2VnbWVudHMsdCkmJiEhbi5jaGlsZHJlbi5wcmltYXJ5JiZlKG4uY2hpbGRyZW4ucHJpbWFyeSxyLGkpfX0oZSxuLG4uc2VnbWVudHMpfSh0LnJvb3QsZS5yb290KX1jbGFzcyBPcHtjb25zdHJ1Y3Rvcih0LGUsbil7dGhpcy5yb290PXQsdGhpcy5xdWVyeVBhcmFtcz1lLHRoaXMuZnJhZ21lbnQ9bn1nZXQgcXVlcnlQYXJhbU1hcCgpe3JldHVybiB0aGlzLl9xdWVyeVBhcmFtTWFwfHwodGhpcy5fcXVlcnlQYXJhbU1hcD1fcCh0aGlzLnF1ZXJ5UGFyYW1zKSksdGhpcy5fcXVlcnlQYXJhbU1hcH10b1N0cmluZygpe3JldHVybiBWcC5zZXJpYWxpemUodGhpcyl9fWNsYXNzIFBwe2NvbnN0cnVjdG9yKHQsZSl7dGhpcy5zZWdtZW50cz10LHRoaXMuY2hpbGRyZW49ZSx0aGlzLnBhcmVudD1udWxsLGtwKGUsKHQsZSk9PnQucGFyZW50PXRoaXMpfWhhc0NoaWxkcmVuKCl7cmV0dXJuIHRoaXMubnVtYmVyT2ZDaGlsZHJlbj4wfWdldCBudW1iZXJPZkNoaWxkcmVuKCl7cmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuY2hpbGRyZW4pLmxlbmd0aH10b1N0cmluZygpe3JldHVybiBCcCh0aGlzKX19Y2xhc3MgSXB7Y29uc3RydWN0b3IodCxlKXt0aGlzLnBhdGg9dCx0aGlzLnBhcmFtZXRlcnM9ZX1nZXQgcGFyYW1ldGVyTWFwKCl7cmV0dXJuIHRoaXMuX3BhcmFtZXRlck1hcHx8KHRoaXMuX3BhcmFtZXRlck1hcD1fcCh0aGlzLnBhcmFtZXRlcnMpKSx0aGlzLl9wYXJhbWV0ZXJNYXB9dG9TdHJpbmcoKXtyZXR1cm4gcXAodGhpcyl9fWZ1bmN0aW9uIFJwKHQsZSl7cmV0dXJuIHQubGVuZ3RoPT09ZS5sZW5ndGgmJnQuZXZlcnkoKHQsbik9PnQucGF0aD09PWVbbl0ucGF0aCl9ZnVuY3Rpb24gTXAodCxlKXtsZXQgbj1bXTtyZXR1cm4ga3AodC5jaGlsZHJlbiwodCxyKT0+e3I9PT1icCYmKG49bi5jb25jYXQoZSh0LHIpKSl9KSxrcCh0LmNoaWxkcmVuLCh0LHIpPT57ciE9PWJwJiYobj1uLmNvbmNhdChlKHQscikpKX0pLG59Y2xhc3MganB7fWNsYXNzIE5we3BhcnNlKHQpe2NvbnN0IGU9bmV3IFFwKHQpO3JldHVybiBuZXcgT3AoZS5wYXJzZVJvb3RTZWdtZW50KCksZS5wYXJzZVF1ZXJ5UGFyYW1zKCksZS5wYXJzZUZyYWdtZW50KCkpfXNlcmlhbGl6ZSh0KXtyZXR1cm5gJHsiLyIrZnVuY3Rpb24gdChlLG4pe2lmKCFlLmhhc0NoaWxkcmVuKCkpcmV0dXJuIEJwKGUpO2lmKG4pe2NvbnN0IG49ZS5jaGlsZHJlbi5wcmltYXJ5P3QoZS5jaGlsZHJlbi5wcmltYXJ5LCExKToiIixyPVtdO3JldHVybiBrcChlLmNoaWxkcmVuLChlLG4pPT57biE9PWJwJiZyLnB1c2goYCR7bn06JHt0KGUsITEpfWApfSksci5sZW5ndGg+MD9gJHtufSgke3Iuam9pbigiLy8iKX0pYDpufXtjb25zdCBuPU1wKGUsKG4scik9PnI9PT1icD9bdChlLmNoaWxkcmVuLnByaW1hcnksITEpXTpbYCR7cn06JHt0KG4sITEpfWBdKTtyZXR1cm4gMT09PU9iamVjdC5rZXlzKGUuY2hpbGRyZW4pLmxlbmd0aCYmbnVsbCE9ZS5jaGlsZHJlbi5wcmltYXJ5P2Ake0JwKGUpfS8ke25bMF19YDpgJHtCcChlKX0vKCR7bi5qb2luKCIvLyIpfSlgfX0odC5yb290LCEwKX0ke2Z1bmN0aW9uKHQpe2NvbnN0IGU9T2JqZWN0LmtleXModCkubWFwKGU9Pntjb25zdCBuPXRbZV07cmV0dXJuIEFycmF5LmlzQXJyYXkobik/bi5tYXAodD0+YCR7VXAoZSl9PSR7VXAodCl9YCkuam9pbigiJiIpOmAke1VwKGUpfT0ke1VwKG4pfWB9KTtyZXR1cm4gZS5sZW5ndGg/Ij8iK2Uuam9pbigiJiIpOiIifSh0LnF1ZXJ5UGFyYW1zKX0keyJzdHJpbmciPT10eXBlb2YgdC5mcmFnbWVudD8iIyIrZW5jb2RlVVJJKHQuZnJhZ21lbnQpOiIifWB9fWNvbnN0IFZwPW5ldyBOcDtmdW5jdGlvbiBCcCh0KXtyZXR1cm4gdC5zZWdtZW50cy5tYXAodD0+cXAodCkpLmpvaW4oIi8iKX1mdW5jdGlvbiBMcCh0KXtyZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHQpLnJlcGxhY2UoLyU0MC9nLCJAIikucmVwbGFjZSgvJTNBL2dpLCI6IikucmVwbGFjZSgvJTI0L2csIiQiKS5yZXBsYWNlKC8lMkMvZ2ksIiwiKX1mdW5jdGlvbiBVcCh0KXtyZXR1cm4gTHAodCkucmVwbGFjZSgvJTNCL2dpLCI7Iil9ZnVuY3Rpb24gSHAodCl7cmV0dXJuIExwKHQpLnJlcGxhY2UoL1woL2csIiUyOCIpLnJlcGxhY2UoL1wpL2csIiUyOSIpLnJlcGxhY2UoLyUyNi9naSwiJiIpfWZ1bmN0aW9uICRwKHQpe3JldHVybiBkZWNvZGVVUklDb21wb25lbnQodCl9ZnVuY3Rpb24genAodCl7cmV0dXJuICRwKHQucmVwbGFjZSgvXCsvZywiJTIwIikpfWZ1bmN0aW9uIHFwKHQpe3JldHVybmAke0hwKHQucGF0aCl9JHtlPXQucGFyYW1ldGVycyxPYmplY3Qua2V5cyhlKS5tYXAodD0+YDske0hwKHQpfT0ke0hwKGVbdF0pfWApLmpvaW4oIiIpfWA7dmFyIGV9Y29uc3QgV3A9L15bXlwvKCk/Oz0jXSsvO2Z1bmN0aW9uIFpwKHQpe2NvbnN0IGU9dC5tYXRjaChXcCk7cmV0dXJuIGU/ZVswXToiIn1jb25zdCBHcD0vXltePT8mI10rLyxLcD0vXltePyYjXSsvO2NsYXNzIFFwe2NvbnN0cnVjdG9yKHQpe3RoaXMudXJsPXQsdGhpcy5yZW1haW5pbmc9dH1wYXJzZVJvb3RTZWdtZW50KCl7cmV0dXJuIHRoaXMuY29uc3VtZU9wdGlvbmFsKCIvIiksIiI9PT10aGlzLnJlbWFpbmluZ3x8dGhpcy5wZWVrU3RhcnRzV2l0aCgiPyIpfHx0aGlzLnBlZWtTdGFydHNXaXRoKCIjIik/bmV3IFBwKFtdLHt9KTpuZXcgUHAoW10sdGhpcy5wYXJzZUNoaWxkcmVuKCkpfXBhcnNlUXVlcnlQYXJhbXMoKXtjb25zdCB0PXt9O2lmKHRoaXMuY29uc3VtZU9wdGlvbmFsKCI/IikpZG97dGhpcy5wYXJzZVF1ZXJ5UGFyYW0odCl9d2hpbGUodGhpcy5jb25zdW1lT3B0aW9uYWwoIiYiKSk7cmV0dXJuIHR9cGFyc2VGcmFnbWVudCgpe3JldHVybiB0aGlzLmNvbnN1bWVPcHRpb25hbCgiIyIpP2RlY29kZVVSSUNvbXBvbmVudCh0aGlzLnJlbWFpbmluZyk6bnVsbH1wYXJzZUNoaWxkcmVuKCl7aWYoIiI9PT10aGlzLnJlbWFpbmluZylyZXR1cm57fTt0aGlzLmNvbnN1bWVPcHRpb25hbCgiLyIpO2NvbnN0IHQ9W107Zm9yKHRoaXMucGVla1N0YXJ0c1dpdGgoIigiKXx8dC5wdXNoKHRoaXMucGFyc2VTZWdtZW50KCkpO3RoaXMucGVla1N0YXJ0c1dpdGgoIi8iKSYmIXRoaXMucGVla1N0YXJ0c1dpdGgoIi8vIikmJiF0aGlzLnBlZWtTdGFydHNXaXRoKCIvKCIpOyl0aGlzLmNhcHR1cmUoIi8iKSx0LnB1c2godGhpcy5wYXJzZVNlZ21lbnQoKSk7bGV0IGU9e307dGhpcy5wZWVrU3RhcnRzV2l0aCgiLygiKSYmKHRoaXMuY2FwdHVyZSgiLyIpLGU9dGhpcy5wYXJzZVBhcmVucyghMCkpO2xldCBuPXt9O3JldHVybiB0aGlzLnBlZWtTdGFydHNXaXRoKCIoIikmJihuPXRoaXMucGFyc2VQYXJlbnMoITEpKSwodC5sZW5ndGg+MHx8T2JqZWN0LmtleXMoZSkubGVuZ3RoPjApJiYobi5wcmltYXJ5PW5ldyBQcCh0LGUpKSxufXBhcnNlU2VnbWVudCgpe2NvbnN0IHQ9WnAodGhpcy5yZW1haW5pbmcpO2lmKCIiPT09dCYmdGhpcy5wZWVrU3RhcnRzV2l0aCgiOyIpKXRocm93IG5ldyBFcnJvcihgRW1wdHkgcGF0aCB1cmwgc2VnbWVudCBjYW5ub3QgaGF2ZSBwYXJhbWV0ZXJzOiAnJHt0aGlzLnJlbWFpbmluZ30nLmApO3JldHVybiB0aGlzLmNhcHR1cmUodCksbmV3IElwKCRwKHQpLHRoaXMucGFyc2VNYXRyaXhQYXJhbXMoKSl9cGFyc2VNYXRyaXhQYXJhbXMoKXtjb25zdCB0PXt9O2Zvcig7dGhpcy5jb25zdW1lT3B0aW9uYWwoIjsiKTspdGhpcy5wYXJzZVBhcmFtKHQpO3JldHVybiB0fXBhcnNlUGFyYW0odCl7Y29uc3QgZT1acCh0aGlzLnJlbWFpbmluZyk7aWYoIWUpcmV0dXJuO3RoaXMuY2FwdHVyZShlKTtsZXQgbj0iIjtpZih0aGlzLmNvbnN1bWVPcHRpb25hbCgiPSIpKXtjb25zdCB0PVpwKHRoaXMucmVtYWluaW5nKTt0JiYobj10LHRoaXMuY2FwdHVyZShuKSl9dFskcChlKV09JHAobil9cGFyc2VRdWVyeVBhcmFtKHQpe2NvbnN0IGU9ZnVuY3Rpb24odCl7Y29uc3QgZT10Lm1hdGNoKEdwKTtyZXR1cm4gZT9lWzBdOiIifSh0aGlzLnJlbWFpbmluZyk7aWYoIWUpcmV0dXJuO3RoaXMuY2FwdHVyZShlKTtsZXQgbj0iIjtpZih0aGlzLmNvbnN1bWVPcHRpb25hbCgiPSIpKXtjb25zdCB0PWZ1bmN0aW9uKHQpe2NvbnN0IGU9dC5tYXRjaChLcCk7cmV0dXJuIGU/ZVswXToiIn0odGhpcy5yZW1haW5pbmcpO3QmJihuPXQsdGhpcy5jYXB0dXJlKG4pKX1jb25zdCByPXpwKGUpLHM9enAobik7aWYodC5oYXNPd25Qcm9wZXJ0eShyKSl7bGV0IGU9dFtyXTtBcnJheS5pc0FycmF5KGUpfHwoZT1bZV0sdFtyXT1lKSxlLnB1c2gocyl9ZWxzZSB0W3JdPXN9cGFyc2VQYXJlbnModCl7Y29uc3QgZT17fTtmb3IodGhpcy5jYXB0dXJlKCIoIik7IXRoaXMuY29uc3VtZU9wdGlvbmFsKCIpIikmJnRoaXMucmVtYWluaW5nLmxlbmd0aD4wOyl7Y29uc3Qgbj1acCh0aGlzLnJlbWFpbmluZykscj10aGlzLnJlbWFpbmluZ1tuLmxlbmd0aF07aWYoIi8iIT09ciYmIikiIT09ciYmIjsiIT09cil0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBwYXJzZSB1cmwgJyR7dGhpcy51cmx9J2ApO2xldCBzPXZvaWQgMDtuLmluZGV4T2YoIjoiKT4tMT8ocz1uLnN1YnN0cigwLG4uaW5kZXhPZigiOiIpKSx0aGlzLmNhcHR1cmUocyksdGhpcy5jYXB0dXJlKCI6IikpOnQmJihzPWJwKTtjb25zdCBpPXRoaXMucGFyc2VDaGlsZHJlbigpO2Vbc109MT09PU9iamVjdC5rZXlzKGkpLmxlbmd0aD9pLnByaW1hcnk6bmV3IFBwKFtdLGkpLHRoaXMuY29uc3VtZU9wdGlvbmFsKCIvLyIpfXJldHVybiBlfXBlZWtTdGFydHNXaXRoKHQpe3JldHVybiB0aGlzLnJlbWFpbmluZy5zdGFydHNXaXRoKHQpfWNvbnN1bWVPcHRpb25hbCh0KXtyZXR1cm4hIXRoaXMucGVla1N0YXJ0c1dpdGgodCkmJih0aGlzLnJlbWFpbmluZz10aGlzLnJlbWFpbmluZy5zdWJzdHJpbmcodC5sZW5ndGgpLCEwKX1jYXB0dXJlKHQpe2lmKCF0aGlzLmNvbnN1bWVPcHRpb25hbCh0KSl0aHJvdyBuZXcgRXJyb3IoYEV4cGVjdGVkICIke3R9Ii5gKX19Y2xhc3MgWXB7Y29uc3RydWN0b3IodCl7dGhpcy5fcm9vdD10fWdldCByb290KCl7cmV0dXJuIHRoaXMuX3Jvb3QudmFsdWV9cGFyZW50KHQpe2NvbnN0IGU9dGhpcy5wYXRoRnJvbVJvb3QodCk7cmV0dXJuIGUubGVuZ3RoPjE/ZVtlLmxlbmd0aC0yXTpudWxsfWNoaWxkcmVuKHQpe2NvbnN0IGU9SnAodCx0aGlzLl9yb290KTtyZXR1cm4gZT9lLmNoaWxkcmVuLm1hcCh0PT50LnZhbHVlKTpbXX1maXJzdENoaWxkKHQpe2NvbnN0IGU9SnAodCx0aGlzLl9yb290KTtyZXR1cm4gZSYmZS5jaGlsZHJlbi5sZW5ndGg+MD9lLmNoaWxkcmVuWzBdLnZhbHVlOm51bGx9c2libGluZ3ModCl7Y29uc3QgZT1YcCh0LHRoaXMuX3Jvb3QpO3JldHVybiBlLmxlbmd0aDwyP1tdOmVbZS5sZW5ndGgtMl0uY2hpbGRyZW4ubWFwKHQ9PnQudmFsdWUpLmZpbHRlcihlPT5lIT09dCl9cGF0aEZyb21Sb290KHQpe3JldHVybiBYcCh0LHRoaXMuX3Jvb3QpLm1hcCh0PT50LnZhbHVlKX19ZnVuY3Rpb24gSnAodCxlKXtpZih0PT09ZS52YWx1ZSlyZXR1cm4gZTtmb3IoY29uc3QgbiBvZiBlLmNoaWxkcmVuKXtjb25zdCBlPUpwKHQsbik7aWYoZSlyZXR1cm4gZX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBYcCh0LGUpe2lmKHQ9PT1lLnZhbHVlKXJldHVybltlXTtmb3IoY29uc3QgbiBvZiBlLmNoaWxkcmVuKXtjb25zdCByPVhwKHQsbik7aWYoci5sZW5ndGgpcmV0dXJuIHIudW5zaGlmdChlKSxyfXJldHVybltdfWNsYXNzIHRme2NvbnN0cnVjdG9yKHQsZSl7dGhpcy52YWx1ZT10LHRoaXMuY2hpbGRyZW49ZX10b1N0cmluZygpe3JldHVybmBUcmVlTm9kZSgke3RoaXMudmFsdWV9KWB9fWZ1bmN0aW9uIGVmKHQpe2NvbnN0IGU9e307cmV0dXJuIHQmJnQuY2hpbGRyZW4uZm9yRWFjaCh0PT5lW3QudmFsdWUub3V0bGV0XT10KSxlfWNsYXNzIG5mIGV4dGVuZHMgWXB7Y29uc3RydWN0b3IodCxlKXtzdXBlcih0KSx0aGlzLnNuYXBzaG90PWUsdWYodGhpcyx0KX10b1N0cmluZygpe3JldHVybiB0aGlzLnNuYXBzaG90LnRvU3RyaW5nKCl9fWZ1bmN0aW9uIHJmKHQsZSl7Y29uc3Qgbj1mdW5jdGlvbih0LGUpe2NvbnN0IG49bmV3IGFmKFtdLHt9LHt9LCIiLHt9LGJwLGUsbnVsbCx0LnJvb3QsLTEse30pO3JldHVybiBuZXcgbGYoIiIsbmV3IHRmKG4sW10pKX0odCxlKSxyPW5ldyBnZChbbmV3IElwKCIiLHt9KV0pLHM9bmV3IGdkKHt9KSxpPW5ldyBnZCh7fSksbz1uZXcgZ2Qoe30pLGE9bmV3IGdkKCIiKSxsPW5ldyBzZihyLHMsbyxhLGksYnAsZSxuLnJvb3QpO3JldHVybiBsLnNuYXBzaG90PW4ucm9vdCxuZXcgbmYobmV3IHRmKGwsW10pLG4pfWNsYXNzIHNme2NvbnN0cnVjdG9yKHQsZSxuLHIscyxpLG8sYSl7dGhpcy51cmw9dCx0aGlzLnBhcmFtcz1lLHRoaXMucXVlcnlQYXJhbXM9bix0aGlzLmZyYWdtZW50PXIsdGhpcy5kYXRhPXMsdGhpcy5vdXRsZXQ9aSx0aGlzLmNvbXBvbmVudD1vLHRoaXMuX2Z1dHVyZVNuYXBzaG90PWF9Z2V0IHJvdXRlQ29uZmlnKCl7cmV0dXJuIHRoaXMuX2Z1dHVyZVNuYXBzaG90LnJvdXRlQ29uZmlnfWdldCByb290KCl7cmV0dXJuIHRoaXMuX3JvdXRlclN0YXRlLnJvb3R9Z2V0IHBhcmVudCgpe3JldHVybiB0aGlzLl9yb3V0ZXJTdGF0ZS5wYXJlbnQodGhpcyl9Z2V0IGZpcnN0Q2hpbGQoKXtyZXR1cm4gdGhpcy5fcm91dGVyU3RhdGUuZmlyc3RDaGlsZCh0aGlzKX1nZXQgY2hpbGRyZW4oKXtyZXR1cm4gdGhpcy5fcm91dGVyU3RhdGUuY2hpbGRyZW4odGhpcyl9Z2V0IHBhdGhGcm9tUm9vdCgpe3JldHVybiB0aGlzLl9yb3V0ZXJTdGF0ZS5wYXRoRnJvbVJvb3QodGhpcyl9Z2V0IHBhcmFtTWFwKCl7cmV0dXJuIHRoaXMuX3BhcmFtTWFwfHwodGhpcy5fcGFyYW1NYXA9dGhpcy5wYXJhbXMucGlwZShTKHQ9Pl9wKHQpKSkpLHRoaXMuX3BhcmFtTWFwfWdldCBxdWVyeVBhcmFtTWFwKCl7cmV0dXJuIHRoaXMuX3F1ZXJ5UGFyYW1NYXB8fCh0aGlzLl9xdWVyeVBhcmFtTWFwPXRoaXMucXVlcnlQYXJhbXMucGlwZShTKHQ9Pl9wKHQpKSkpLHRoaXMuX3F1ZXJ5UGFyYW1NYXB9dG9TdHJpbmcoKXtyZXR1cm4gdGhpcy5zbmFwc2hvdD90aGlzLnNuYXBzaG90LnRvU3RyaW5nKCk6YEZ1dHVyZSgke3RoaXMuX2Z1dHVyZVNuYXBzaG90fSlgfX1mdW5jdGlvbiBvZih0LGU9ImVtcHR5T25seSIpe2NvbnN0IG49dC5wYXRoRnJvbVJvb3Q7bGV0IHI9MDtpZigiYWx3YXlzIiE9PWUpZm9yKHI9bi5sZW5ndGgtMTtyPj0xOyl7Y29uc3QgdD1uW3JdLGU9bltyLTFdO2lmKHQucm91dGVDb25maWcmJiIiPT09dC5yb3V0ZUNvbmZpZy5wYXRoKXItLTtlbHNle2lmKGUuY29tcG9uZW50KWJyZWFrO3ItLX19cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiB0LnJlZHVjZSgodCxlKT0+KHtwYXJhbXM6T2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LHQucGFyYW1zKSxlLnBhcmFtcyksZGF0YTpPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sdC5kYXRhKSxlLmRhdGEpLHJlc29sdmU6T2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LHQucmVzb2x2ZSksZS5fcmVzb2x2ZWREYXRhKX0pLHtwYXJhbXM6e30sZGF0YTp7fSxyZXNvbHZlOnt9fSl9KG4uc2xpY2UocikpfWNsYXNzIGFme2NvbnN0cnVjdG9yKHQsZSxuLHIscyxpLG8sYSxsLHUsYyl7dGhpcy51cmw9dCx0aGlzLnBhcmFtcz1lLHRoaXMucXVlcnlQYXJhbXM9bix0aGlzLmZyYWdtZW50PXIsdGhpcy5kYXRhPXMsdGhpcy5vdXRsZXQ9aSx0aGlzLmNvbXBvbmVudD1vLHRoaXMucm91dGVDb25maWc9YSx0aGlzLl91cmxTZWdtZW50PWwsdGhpcy5fbGFzdFBhdGhJbmRleD11LHRoaXMuX3Jlc29sdmU9Y31nZXQgcm9vdCgpe3JldHVybiB0aGlzLl9yb3V0ZXJTdGF0ZS5yb290fWdldCBwYXJlbnQoKXtyZXR1cm4gdGhpcy5fcm91dGVyU3RhdGUucGFyZW50KHRoaXMpfWdldCBmaXJzdENoaWxkKCl7cmV0dXJuIHRoaXMuX3JvdXRlclN0YXRlLmZpcnN0Q2hpbGQodGhpcyl9Z2V0IGNoaWxkcmVuKCl7cmV0dXJuIHRoaXMuX3JvdXRlclN0YXRlLmNoaWxkcmVuKHRoaXMpfWdldCBwYXRoRnJvbVJvb3QoKXtyZXR1cm4gdGhpcy5fcm91dGVyU3RhdGUucGF0aEZyb21Sb290KHRoaXMpfWdldCBwYXJhbU1hcCgpe3JldHVybiB0aGlzLl9wYXJhbU1hcHx8KHRoaXMuX3BhcmFtTWFwPV9wKHRoaXMucGFyYW1zKSksdGhpcy5fcGFyYW1NYXB9Z2V0IHF1ZXJ5UGFyYW1NYXAoKXtyZXR1cm4gdGhpcy5fcXVlcnlQYXJhbU1hcHx8KHRoaXMuX3F1ZXJ5UGFyYW1NYXA9X3AodGhpcy5xdWVyeVBhcmFtcykpLHRoaXMuX3F1ZXJ5UGFyYW1NYXB9dG9TdHJpbmcoKXtyZXR1cm5gUm91dGUodXJsOicke3RoaXMudXJsLm1hcCh0PT50LnRvU3RyaW5nKCkpLmpvaW4oIi8iKX0nLCBwYXRoOicke3RoaXMucm91dGVDb25maWc/dGhpcy5yb3V0ZUNvbmZpZy5wYXRoOiIifScpYH19Y2xhc3MgbGYgZXh0ZW5kcyBZcHtjb25zdHJ1Y3Rvcih0LGUpe3N1cGVyKGUpLHRoaXMudXJsPXQsdWYodGhpcyxlKX10b1N0cmluZygpe3JldHVybiBjZih0aGlzLl9yb290KX19ZnVuY3Rpb24gdWYodCxlKXtlLnZhbHVlLl9yb3V0ZXJTdGF0ZT10LGUuY2hpbGRyZW4uZm9yRWFjaChlPT51Zih0LGUpKX1mdW5jdGlvbiBjZih0KXtjb25zdCBlPXQuY2hpbGRyZW4ubGVuZ3RoPjA/YCB7ICR7dC5jaGlsZHJlbi5tYXAoY2YpLmpvaW4oIiwgIil9IH0gYDoiIjtyZXR1cm5gJHt0LnZhbHVlfSR7ZX1gfWZ1bmN0aW9uIGhmKHQpe2lmKHQuc25hcHNob3Qpe2NvbnN0IGU9dC5zbmFwc2hvdCxuPXQuX2Z1dHVyZVNuYXBzaG90O3Quc25hcHNob3Q9bixFcChlLnF1ZXJ5UGFyYW1zLG4ucXVlcnlQYXJhbXMpfHx0LnF1ZXJ5UGFyYW1zLm5leHQobi5xdWVyeVBhcmFtcyksZS5mcmFnbWVudCE9PW4uZnJhZ21lbnQmJnQuZnJhZ21lbnQubmV4dChuLmZyYWdtZW50KSxFcChlLnBhcmFtcyxuLnBhcmFtcyl8fHQucGFyYW1zLm5leHQobi5wYXJhbXMpLGZ1bmN0aW9uKHQsZSl7aWYodC5sZW5ndGghPT1lLmxlbmd0aClyZXR1cm4hMTtmb3IobGV0IG49MDtuPHQubGVuZ3RoOysrbilpZighRXAodFtuXSxlW25dKSlyZXR1cm4hMTtyZXR1cm4hMH0oZS51cmwsbi51cmwpfHx0LnVybC5uZXh0KG4udXJsKSxFcChlLmRhdGEsbi5kYXRhKXx8dC5kYXRhLm5leHQobi5kYXRhKX1lbHNlIHQuc25hcHNob3Q9dC5fZnV0dXJlU25hcHNob3QsdC5kYXRhLm5leHQodC5fZnV0dXJlU25hcHNob3QuZGF0YSl9ZnVuY3Rpb24gZGYodCxlKXt2YXIgbixyO3JldHVybiBFcCh0LnBhcmFtcyxlLnBhcmFtcykmJlJwKG49dC51cmwscj1lLnVybCkmJm4uZXZlcnkoKHQsZSk9PkVwKHQucGFyYW1ldGVycyxyW2VdLnBhcmFtZXRlcnMpKSYmISghdC5wYXJlbnQhPSFlLnBhcmVudCkmJighdC5wYXJlbnR8fGRmKHQucGFyZW50LGUucGFyZW50KSl9ZnVuY3Rpb24gcGYodCl7cmV0dXJuIm9iamVjdCI9PXR5cGVvZiB0JiZudWxsIT10JiYhdC5vdXRsZXRzJiYhdC5zZWdtZW50UGF0aH1mdW5jdGlvbiBmZih0LGUsbixyLHMpe2xldCBpPXt9O3JldHVybiByJiZrcChyLCh0LGUpPT57aVtlXT1BcnJheS5pc0FycmF5KHQpP3QubWFwKHQ9PiIiK3QpOiIiK3R9KSxuZXcgT3Aobi5yb290PT09dD9lOmZ1bmN0aW9uIHQoZSxuLHIpe2NvbnN0IHM9e307cmV0dXJuIGtwKGUuY2hpbGRyZW4sKGUsaSk9PntzW2ldPWU9PT1uP3I6dChlLG4scil9KSxuZXcgUHAoZS5zZWdtZW50cyxzKX0obi5yb290LHQsZSksaSxzKX1jbGFzcyBnZntjb25zdHJ1Y3Rvcih0LGUsbil7aWYodGhpcy5pc0Fic29sdXRlPXQsdGhpcy5udW1iZXJPZkRvdWJsZURvdHM9ZSx0aGlzLmNvbW1hbmRzPW4sdCYmbi5sZW5ndGg+MCYmcGYoblswXSkpdGhyb3cgbmV3IEVycm9yKCJSb290IHNlZ21lbnQgY2Fubm90IGhhdmUgbWF0cml4IHBhcmFtZXRlcnMiKTtjb25zdCByPW4uZmluZCh0PT4ib2JqZWN0Ij09dHlwZW9mIHQmJm51bGwhPXQmJnQub3V0bGV0cyk7aWYociYmciE9PXhwKG4pKXRocm93IG5ldyBFcnJvcigie291dGxldHM6e319IGhhcyB0byBiZSB0aGUgbGFzdCBjb21tYW5kIil9dG9Sb290KCl7cmV0dXJuIHRoaXMuaXNBYnNvbHV0ZSYmMT09PXRoaXMuY29tbWFuZHMubGVuZ3RoJiYiLyI9PXRoaXMuY29tbWFuZHNbMF19fWNsYXNzIG1me2NvbnN0cnVjdG9yKHQsZSxuKXt0aGlzLnNlZ21lbnRHcm91cD10LHRoaXMucHJvY2Vzc0NoaWxkcmVuPWUsdGhpcy5pbmRleD1ufX1mdW5jdGlvbiB5Zih0KXtyZXR1cm4ib2JqZWN0Ij09dHlwZW9mIHQmJm51bGwhPXQmJnQub3V0bGV0cz90Lm91dGxldHMucHJpbWFyeToiIit0fWZ1bmN0aW9uIHZmKHQsZSxuKXtpZih0fHwodD1uZXcgUHAoW10se30pKSwwPT09dC5zZWdtZW50cy5sZW5ndGgmJnQuaGFzQ2hpbGRyZW4oKSlyZXR1cm4gYmYodCxlLG4pO2NvbnN0IHI9ZnVuY3Rpb24odCxlLG4pe2xldCByPTAscz1lO2NvbnN0IGk9e21hdGNoOiExLHBhdGhJbmRleDowLGNvbW1hbmRJbmRleDowfTtmb3IoO3M8dC5zZWdtZW50cy5sZW5ndGg7KXtpZihyPj1uLmxlbmd0aClyZXR1cm4gaTtjb25zdCBlPXQuc2VnbWVudHNbc10sbz15ZihuW3JdKSxhPXI8bi5sZW5ndGgtMT9uW3IrMV06bnVsbDtpZihzPjAmJnZvaWQgMD09PW8pYnJlYWs7aWYobyYmYSYmIm9iamVjdCI9PXR5cGVvZiBhJiZ2b2lkIDA9PT1hLm91dGxldHMpe2lmKCFEZihvLGEsZSkpcmV0dXJuIGk7cis9Mn1lbHNle2lmKCFEZihvLHt9LGUpKXJldHVybiBpO3IrK31zKyt9cmV0dXJue21hdGNoOiEwLHBhdGhJbmRleDpzLGNvbW1hbmRJbmRleDpyfX0odCxlLG4pLHM9bi5zbGljZShyLmNvbW1hbmRJbmRleCk7aWYoci5tYXRjaCYmci5wYXRoSW5kZXg8dC5zZWdtZW50cy5sZW5ndGgpe2NvbnN0IGU9bmV3IFBwKHQuc2VnbWVudHMuc2xpY2UoMCxyLnBhdGhJbmRleCkse30pO3JldHVybiBlLmNoaWxkcmVuLnByaW1hcnk9bmV3IFBwKHQuc2VnbWVudHMuc2xpY2Uoci5wYXRoSW5kZXgpLHQuY2hpbGRyZW4pLGJmKGUsMCxzKX1yZXR1cm4gci5tYXRjaCYmMD09PXMubGVuZ3RoP25ldyBQcCh0LnNlZ21lbnRzLHt9KTpyLm1hdGNoJiYhdC5oYXNDaGlsZHJlbigpP3dmKHQsZSxuKTpyLm1hdGNoP2JmKHQsMCxzKTp3Zih0LGUsbil9ZnVuY3Rpb24gYmYodCxlLG4pe2lmKDA9PT1uLmxlbmd0aClyZXR1cm4gbmV3IFBwKHQuc2VnbWVudHMse30pO3tjb25zdCByPWZ1bmN0aW9uKHQpe3JldHVybiJvYmplY3QiPT10eXBlb2YgdFswXSYmbnVsbCE9PXRbMF0mJnRbMF0ub3V0bGV0cz90WzBdLm91dGxldHM6e1ticF06dH19KG4pLHM9e307cmV0dXJuIGtwKHIsKG4scik9PntudWxsIT09biYmKHNbcl09dmYodC5jaGlsZHJlbltyXSxlLG4pKX0pLGtwKHQuY2hpbGRyZW4sKHQsZSk9Pnt2b2lkIDA9PT1yW2VdJiYoc1tlXT10KX0pLG5ldyBQcCh0LnNlZ21lbnRzLHMpfX1mdW5jdGlvbiB3Zih0LGUsbil7Y29uc3Qgcj10LnNlZ21lbnRzLnNsaWNlKDAsZSk7bGV0IHM9MDtmb3IoO3M8bi5sZW5ndGg7KXtpZigib2JqZWN0Ij09dHlwZW9mIG5bc10mJm51bGwhPT1uW3NdJiZ2b2lkIDAhPT1uW3NdLm91dGxldHMpe2NvbnN0IHQ9X2YobltzXS5vdXRsZXRzKTtyZXR1cm4gbmV3IFBwKHIsdCl9aWYoMD09PXMmJnBmKG5bMF0pKXtyLnB1c2gobmV3IElwKHQuc2VnbWVudHNbZV0ucGF0aCxuWzBdKSkscysrO2NvbnRpbnVlfWNvbnN0IGk9eWYobltzXSksbz1zPG4ubGVuZ3RoLTE/bltzKzFdOm51bGw7aSYmbyYmcGYobyk/KHIucHVzaChuZXcgSXAoaSxDZihvKSkpLHMrPTIpOihyLnB1c2gobmV3IElwKGkse30pKSxzKyspfXJldHVybiBuZXcgUHAocix7fSl9ZnVuY3Rpb24gX2YodCl7Y29uc3QgZT17fTtyZXR1cm4ga3AodCwodCxuKT0+e251bGwhPT10JiYoZVtuXT13ZihuZXcgUHAoW10se30pLDAsdCkpfSksZX1mdW5jdGlvbiBDZih0KXtjb25zdCBlPXt9O3JldHVybiBrcCh0LCh0LG4pPT5lW25dPSIiK3QpLGV9ZnVuY3Rpb24gRGYodCxlLG4pe3JldHVybiB0PT1uLnBhdGgmJkVwKGUsbi5wYXJhbWV0ZXJzKX1jbGFzcyBFZntjb25zdHJ1Y3Rvcih0LGUsbixyKXt0aGlzLnJvdXRlUmV1c2VTdHJhdGVneT10LHRoaXMuZnV0dXJlU3RhdGU9ZSx0aGlzLmN1cnJTdGF0ZT1uLHRoaXMuZm9yd2FyZEV2ZW50PXJ9YWN0aXZhdGUodCl7Y29uc3QgZT10aGlzLmZ1dHVyZVN0YXRlLl9yb290LG49dGhpcy5jdXJyU3RhdGU/dGhpcy5jdXJyU3RhdGUuX3Jvb3Q6bnVsbDt0aGlzLmRlYWN0aXZhdGVDaGlsZFJvdXRlcyhlLG4sdCksaGYodGhpcy5mdXR1cmVTdGF0ZS5yb290KSx0aGlzLmFjdGl2YXRlQ2hpbGRSb3V0ZXMoZSxuLHQpfWRlYWN0aXZhdGVDaGlsZFJvdXRlcyh0LGUsbil7Y29uc3Qgcj1lZihlKTt0LmNoaWxkcmVuLmZvckVhY2godD0+e2NvbnN0IGU9dC52YWx1ZS5vdXRsZXQ7dGhpcy5kZWFjdGl2YXRlUm91dGVzKHQscltlXSxuKSxkZWxldGUgcltlXX0pLGtwKHIsKHQsZSk9Pnt0aGlzLmRlYWN0aXZhdGVSb3V0ZUFuZEl0c0NoaWxkcmVuKHQsbil9KX1kZWFjdGl2YXRlUm91dGVzKHQsZSxuKXtjb25zdCByPXQudmFsdWUscz1lP2UudmFsdWU6bnVsbDtpZihyPT09cylpZihyLmNvbXBvbmVudCl7Y29uc3Qgcz1uLmdldENvbnRleHQoci5vdXRsZXQpO3MmJnRoaXMuZGVhY3RpdmF0ZUNoaWxkUm91dGVzKHQsZSxzLmNoaWxkcmVuKX1lbHNlIHRoaXMuZGVhY3RpdmF0ZUNoaWxkUm91dGVzKHQsZSxuKTtlbHNlIHMmJnRoaXMuZGVhY3RpdmF0ZVJvdXRlQW5kSXRzQ2hpbGRyZW4oZSxuKX1kZWFjdGl2YXRlUm91dGVBbmRJdHNDaGlsZHJlbih0LGUpe3RoaXMucm91dGVSZXVzZVN0cmF0ZWd5LnNob3VsZERldGFjaCh0LnZhbHVlLnNuYXBzaG90KT90aGlzLmRldGFjaEFuZFN0b3JlUm91dGVTdWJ0cmVlKHQsZSk6dGhpcy5kZWFjdGl2YXRlUm91dGVBbmRPdXRsZXQodCxlKX1kZXRhY2hBbmRTdG9yZVJvdXRlU3VidHJlZSh0LGUpe2NvbnN0IG49ZS5nZXRDb250ZXh0KHQudmFsdWUub3V0bGV0KTtpZihuJiZuLm91dGxldCl7Y29uc3QgZT1uLm91dGxldC5kZXRhY2goKSxyPW4uY2hpbGRyZW4ub25PdXRsZXREZWFjdGl2YXRlZCgpO3RoaXMucm91dGVSZXVzZVN0cmF0ZWd5LnN0b3JlKHQudmFsdWUuc25hcHNob3Qse2NvbXBvbmVudFJlZjplLHJvdXRlOnQsY29udGV4dHM6cn0pfX1kZWFjdGl2YXRlUm91dGVBbmRPdXRsZXQodCxlKXtjb25zdCBuPWUuZ2V0Q29udGV4dCh0LnZhbHVlLm91dGxldCk7aWYobil7Y29uc3Qgcj1lZih0KSxzPXQudmFsdWUuY29tcG9uZW50P24uY2hpbGRyZW46ZTtrcChyLCh0LGUpPT50aGlzLmRlYWN0aXZhdGVSb3V0ZUFuZEl0c0NoaWxkcmVuKHQscykpLG4ub3V0bGV0JiYobi5vdXRsZXQuZGVhY3RpdmF0ZSgpLG4uY2hpbGRyZW4ub25PdXRsZXREZWFjdGl2YXRlZCgpKX19YWN0aXZhdGVDaGlsZFJvdXRlcyh0LGUsbil7Y29uc3Qgcj1lZihlKTt0LmNoaWxkcmVuLmZvckVhY2godD0+e3RoaXMuYWN0aXZhdGVSb3V0ZXModCxyW3QudmFsdWUub3V0bGV0XSxuKSx0aGlzLmZvcndhcmRFdmVudChuZXcgeXAodC52YWx1ZS5zbmFwc2hvdCkpfSksdC5jaGlsZHJlbi5sZW5ndGgmJnRoaXMuZm9yd2FyZEV2ZW50KG5ldyBncCh0LnZhbHVlLnNuYXBzaG90KSl9YWN0aXZhdGVSb3V0ZXModCxlLG4pe2NvbnN0IHI9dC52YWx1ZSxzPWU/ZS52YWx1ZTpudWxsO2lmKGhmKHIpLHI9PT1zKWlmKHIuY29tcG9uZW50KXtjb25zdCBzPW4uZ2V0T3JDcmVhdGVDb250ZXh0KHIub3V0bGV0KTt0aGlzLmFjdGl2YXRlQ2hpbGRSb3V0ZXModCxlLHMuY2hpbGRyZW4pfWVsc2UgdGhpcy5hY3RpdmF0ZUNoaWxkUm91dGVzKHQsZSxuKTtlbHNlIGlmKHIuY29tcG9uZW50KXtjb25zdCBlPW4uZ2V0T3JDcmVhdGVDb250ZXh0KHIub3V0bGV0KTtpZih0aGlzLnJvdXRlUmV1c2VTdHJhdGVneS5zaG91bGRBdHRhY2goci5zbmFwc2hvdCkpe2NvbnN0IHQ9dGhpcy5yb3V0ZVJldXNlU3RyYXRlZ3kucmV0cmlldmUoci5zbmFwc2hvdCk7dGhpcy5yb3V0ZVJldXNlU3RyYXRlZ3kuc3RvcmUoci5zbmFwc2hvdCxudWxsKSxlLmNoaWxkcmVuLm9uT3V0bGV0UmVBdHRhY2hlZCh0LmNvbnRleHRzKSxlLmF0dGFjaFJlZj10LmNvbXBvbmVudFJlZixlLnJvdXRlPXQucm91dGUudmFsdWUsZS5vdXRsZXQmJmUub3V0bGV0LmF0dGFjaCh0LmNvbXBvbmVudFJlZix0LnJvdXRlLnZhbHVlKSxBZih0LnJvdXRlKX1lbHNle2NvbnN0IG49ZnVuY3Rpb24odCl7Zm9yKGxldCBlPXQucGFyZW50O2U7ZT1lLnBhcmVudCl7Y29uc3QgdD1lLnJvdXRlQ29uZmlnO2lmKHQmJnQuX2xvYWRlZENvbmZpZylyZXR1cm4gdC5fbG9hZGVkQ29uZmlnO2lmKHQmJnQuY29tcG9uZW50KXJldHVybiBudWxsfXJldHVybiBudWxsfShyLnNuYXBzaG90KSxzPW4/bi5tb2R1bGUuY29tcG9uZW50RmFjdG9yeVJlc29sdmVyOm51bGw7ZS5hdHRhY2hSZWY9bnVsbCxlLnJvdXRlPXIsZS5yZXNvbHZlcj1zLGUub3V0bGV0JiZlLm91dGxldC5hY3RpdmF0ZVdpdGgocixzKSx0aGlzLmFjdGl2YXRlQ2hpbGRSb3V0ZXModCxudWxsLGUuY2hpbGRyZW4pfX1lbHNlIHRoaXMuYWN0aXZhdGVDaGlsZFJvdXRlcyh0LG51bGwsbil9fWZ1bmN0aW9uIEFmKHQpe2hmKHQudmFsdWUpLHQuY2hpbGRyZW4uZm9yRWFjaChBZil9Y2xhc3MgU2Z7Y29uc3RydWN0b3IodCxlKXt0aGlzLnJvdXRlcz10LHRoaXMubW9kdWxlPWV9fWZ1bmN0aW9uIHhmKHQpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiB0fWZ1bmN0aW9uIGtmKHQpe3JldHVybiB0IGluc3RhbmNlb2YgT3B9Y29uc3QgVGY9U3ltYm9sKCJJTklUSUFMX1ZBTFVFIik7ZnVuY3Rpb24gRmYoKXtyZXR1cm4gWGModD0+ZnVuY3Rpb24oLi4udCl7bGV0IGU9dm9pZCAwLG49dm9pZCAwO3JldHVybiBBKHRbdC5sZW5ndGgtMV0pJiYobj10LnBvcCgpKSwiZnVuY3Rpb24iPT10eXBlb2YgdFt0Lmxlbmd0aC0xXSYmKGU9dC5wb3AoKSksMT09PXQubGVuZ3RoJiZsKHRbMF0pJiYodD10WzBdKSx6KHQsbikubGlmdChuZXcgd2QoZSkpfSguLi50Lm1hcCh0PT50LnBpcGUoQmQoMSksZnVuY3Rpb24oLi4udCl7Y29uc3QgZT10W3QubGVuZ3RoLTFdO3JldHVybiBBKGUpPyh0LnBvcCgpLG49PkhkKHQsbixlKSk6ZT0+SGQodCxlKX0oVGYpKSkpLnBpcGUoZnVuY3Rpb24odCxlKXtsZXQgbj0hMTtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD49MiYmKG49ITApLGZ1bmN0aW9uKHIpe3JldHVybiByLmxpZnQobmV3ICRkKHQsZSxuKSl9fSgodCxlKT0+e2xldCBuPSExO3JldHVybiBlLnJlZHVjZSgodCxyLHMpPT57aWYodCE9PVRmKXJldHVybiB0O2lmKHI9PT1UZiYmKG49ITApLCFuKXtpZighMT09PXIpcmV0dXJuIHI7aWYocz09PWUubGVuZ3RoLTF8fGtmKHIpKXJldHVybiByfXJldHVybiB0fSx0KX0sVGYpLEFkKHQ9PnQhPT1UZiksUyh0PT5rZih0KT90OiEwPT09dCksQmQoMSkpKX1jbGFzcyBPZntjb25zdHJ1Y3Rvcih0KXt0aGlzLnNlZ21lbnRHcm91cD10fHxudWxsfX1jbGFzcyBQZntjb25zdHJ1Y3Rvcih0KXt0aGlzLnVybFRyZWU9dH19ZnVuY3Rpb24gSWYodCl7cmV0dXJuIG5ldyB2KGU9PmUuZXJyb3IobmV3IE9mKHQpKSl9ZnVuY3Rpb24gUmYodCl7cmV0dXJuIG5ldyB2KGU9PmUuZXJyb3IobmV3IFBmKHQpKSl9ZnVuY3Rpb24gTWYodCl7cmV0dXJuIG5ldyB2KGU9PmUuZXJyb3IobmV3IEVycm9yKGBPbmx5IGFic29sdXRlIHJlZGlyZWN0cyBjYW4gaGF2ZSBuYW1lZCBvdXRsZXRzLiByZWRpcmVjdFRvOiAnJHt0fSdgKSkpfWNsYXNzIGpme2NvbnN0cnVjdG9yKHQsZSxuLHIscyl7dGhpcy5jb25maWdMb2FkZXI9ZSx0aGlzLnVybFNlcmlhbGl6ZXI9bix0aGlzLnVybFRyZWU9cix0aGlzLmNvbmZpZz1zLHRoaXMuYWxsb3dSZWRpcmVjdHM9ITAsdGhpcy5uZ01vZHVsZT10LmdldChKdCl9YXBwbHkoKXtyZXR1cm4gdGhpcy5leHBhbmRTZWdtZW50R3JvdXAodGhpcy5uZ01vZHVsZSx0aGlzLmNvbmZpZyx0aGlzLnVybFRyZWUucm9vdCxicCkucGlwZShTKHQ9PnRoaXMuY3JlYXRlVXJsVHJlZSh0LHRoaXMudXJsVHJlZS5xdWVyeVBhcmFtcyx0aGlzLnVybFRyZWUuZnJhZ21lbnQpKSkucGlwZShxZCh0PT57aWYodCBpbnN0YW5jZW9mIFBmKXJldHVybiB0aGlzLmFsbG93UmVkaXJlY3RzPSExLHRoaXMubWF0Y2godC51cmxUcmVlKTtpZih0IGluc3RhbmNlb2YgT2YpdGhyb3cgdGhpcy5ub01hdGNoRXJyb3IodCk7dGhyb3cgdH0pKX1tYXRjaCh0KXtyZXR1cm4gdGhpcy5leHBhbmRTZWdtZW50R3JvdXAodGhpcy5uZ01vZHVsZSx0aGlzLmNvbmZpZyx0LnJvb3QsYnApLnBpcGUoUyhlPT50aGlzLmNyZWF0ZVVybFRyZWUoZSx0LnF1ZXJ5UGFyYW1zLHQuZnJhZ21lbnQpKSkucGlwZShxZCh0PT57aWYodCBpbnN0YW5jZW9mIE9mKXRocm93IHRoaXMubm9NYXRjaEVycm9yKHQpO3Rocm93IHR9KSl9bm9NYXRjaEVycm9yKHQpe3JldHVybiBuZXcgRXJyb3IoYENhbm5vdCBtYXRjaCBhbnkgcm91dGVzLiBVUkwgU2VnbWVudDogJyR7dC5zZWdtZW50R3JvdXB9J2ApfWNyZWF0ZVVybFRyZWUodCxlLG4pe2NvbnN0IHI9dC5zZWdtZW50cy5sZW5ndGg+MD9uZXcgUHAoW10se1ticF06dH0pOnQ7cmV0dXJuIG5ldyBPcChyLGUsbil9ZXhwYW5kU2VnbWVudEdyb3VwKHQsZSxuLHIpe3JldHVybiAwPT09bi5zZWdtZW50cy5sZW5ndGgmJm4uaGFzQ2hpbGRyZW4oKT90aGlzLmV4cGFuZENoaWxkcmVuKHQsZSxuKS5waXBlKFModD0+bmV3IFBwKFtdLHQpKSk6dGhpcy5leHBhbmRTZWdtZW50KHQsbixlLG4uc2VnbWVudHMsciwhMCl9ZXhwYW5kQ2hpbGRyZW4odCxlLG4pe3JldHVybiBmdW5jdGlvbih0LGUpe2lmKDA9PT1PYmplY3Qua2V5cyh0KS5sZW5ndGgpcmV0dXJuIHFjKHt9KTtjb25zdCBuPVtdLHI9W10scz17fTtyZXR1cm4ga3AodCwodCxpKT0+e2NvbnN0IG89ZShpLHQpLnBpcGUoUyh0PT5zW2ldPXQpKTtpPT09YnA/bi5wdXNoKG8pOnIucHVzaChvKX0pLHFjLmFwcGx5KG51bGwsbi5jb25jYXQocikpLnBpcGUoRWQoKSxmdW5jdGlvbih0LGUpe2NvbnN0IG49YXJndW1lbnRzLmxlbmd0aD49MjtyZXR1cm4gcj0+ci5waXBlKHQ/QWQoKGUsbik9PnQoZSxuLHIpKTp5LFRkKDEpLG4/amQoZSk6UGQoKCk9Pm5ldyBDZCkpfSgpLFMoKCk9PnMpKX0obi5jaGlsZHJlbiwobixyKT0+dGhpcy5leHBhbmRTZWdtZW50R3JvdXAodCxlLHIsbikpfWV4cGFuZFNlZ21lbnQodCxlLG4scixzLGkpe3JldHVybiBxYyguLi5uKS5waXBlKEdkKG89PnRoaXMuZXhwYW5kU2VnbWVudEFnYWluc3RSb3V0ZSh0LGUsbixvLHIscyxpKS5waXBlKHFkKHQ9PntpZih0IGluc3RhbmNlb2YgT2YpcmV0dXJuIHFjKG51bGwpO3Rocm93IHR9KSkpLEtkKHQ9PiEhdCkscWQoKHQsbik9PntpZih0IGluc3RhbmNlb2YgQ2R8fCJFbXB0eUVycm9yIj09PXQubmFtZSl7aWYodGhpcy5ub0xlZnRvdmVyc0luVXJsKGUscixzKSlyZXR1cm4gcWMobmV3IFBwKFtdLHt9KSk7dGhyb3cgbmV3IE9mKGUpfXRocm93IHR9KSl9bm9MZWZ0b3ZlcnNJblVybCh0LGUsbil7cmV0dXJuIDA9PT1lLmxlbmd0aCYmIXQuY2hpbGRyZW5bbl19ZXhwYW5kU2VnbWVudEFnYWluc3RSb3V0ZSh0LGUsbixyLHMsaSxvKXtyZXR1cm4gTGYocikhPT1pP0lmKGUpOnZvaWQgMD09PXIucmVkaXJlY3RUbz90aGlzLm1hdGNoU2VnbWVudEFnYWluc3RSb3V0ZSh0LGUscixzKTpvJiZ0aGlzLmFsbG93UmVkaXJlY3RzP3RoaXMuZXhwYW5kU2VnbWVudEFnYWluc3RSb3V0ZVVzaW5nUmVkaXJlY3QodCxlLG4scixzLGkpOklmKGUpfWV4cGFuZFNlZ21lbnRBZ2FpbnN0Um91dGVVc2luZ1JlZGlyZWN0KHQsZSxuLHIscyxpKXtyZXR1cm4iKioiPT09ci5wYXRoP3RoaXMuZXhwYW5kV2lsZENhcmRXaXRoUGFyYW1zQWdhaW5zdFJvdXRlVXNpbmdSZWRpcmVjdCh0LG4scixpKTp0aGlzLmV4cGFuZFJlZ3VsYXJTZWdtZW50QWdhaW5zdFJvdXRlVXNpbmdSZWRpcmVjdCh0LGUsbixyLHMsaSl9ZXhwYW5kV2lsZENhcmRXaXRoUGFyYW1zQWdhaW5zdFJvdXRlVXNpbmdSZWRpcmVjdCh0LGUsbixyKXtjb25zdCBzPXRoaXMuYXBwbHlSZWRpcmVjdENvbW1hbmRzKFtdLG4ucmVkaXJlY3RUbyx7fSk7cmV0dXJuIG4ucmVkaXJlY3RUby5zdGFydHNXaXRoKCIvIik/UmYocyk6dGhpcy5saW5lcmFsaXplU2VnbWVudHMobixzKS5waXBlKEwobj0+e2NvbnN0IHM9bmV3IFBwKG4se30pO3JldHVybiB0aGlzLmV4cGFuZFNlZ21lbnQodCxzLGUsbixyLCExKX0pKX1leHBhbmRSZWd1bGFyU2VnbWVudEFnYWluc3RSb3V0ZVVzaW5nUmVkaXJlY3QodCxlLG4scixzLGkpe2NvbnN0e21hdGNoZWQ6byxjb25zdW1lZFNlZ21lbnRzOmEsbGFzdENoaWxkOmwscG9zaXRpb25hbFBhcmFtU2VnbWVudHM6dX09TmYoZSxyLHMpO2lmKCFvKXJldHVybiBJZihlKTtjb25zdCBjPXRoaXMuYXBwbHlSZWRpcmVjdENvbW1hbmRzKGEsci5yZWRpcmVjdFRvLHUpO3JldHVybiByLnJlZGlyZWN0VG8uc3RhcnRzV2l0aCgiLyIpP1JmKGMpOnRoaXMubGluZXJhbGl6ZVNlZ21lbnRzKHIsYykucGlwZShMKHI9PnRoaXMuZXhwYW5kU2VnbWVudCh0LGUsbixyLmNvbmNhdChzLnNsaWNlKGwpKSxpLCExKSkpfW1hdGNoU2VnbWVudEFnYWluc3RSb3V0ZSh0LGUsbixyKXtpZigiKioiPT09bi5wYXRoKXJldHVybiBuLmxvYWRDaGlsZHJlbj90aGlzLmNvbmZpZ0xvYWRlci5sb2FkKHQuaW5qZWN0b3IsbikucGlwZShTKHQ9PihuLl9sb2FkZWRDb25maWc9dCxuZXcgUHAocix7fSkpKSk6cWMobmV3IFBwKHIse30pKTtjb25zdHttYXRjaGVkOnMsY29uc3VtZWRTZWdtZW50czppLGxhc3RDaGlsZDpvfT1OZihlLG4scik7aWYoIXMpcmV0dXJuIElmKGUpO2NvbnN0IGE9ci5zbGljZShvKTtyZXR1cm4gdGhpcy5nZXRDaGlsZENvbmZpZyh0LG4scikucGlwZShMKHQ9Pntjb25zdCBuPXQubW9kdWxlLHI9dC5yb3V0ZXMse3NlZ21lbnRHcm91cDpzLHNsaWNlZFNlZ21lbnRzOm99PWZ1bmN0aW9uKHQsZSxuLHIpe3JldHVybiBuLmxlbmd0aD4wJiZmdW5jdGlvbih0LGUsbil7cmV0dXJuIG4uc29tZShuPT5CZih0LGUsbikmJkxmKG4pIT09YnApfSh0LG4scik/e3NlZ21lbnRHcm91cDpWZihuZXcgUHAoZSxmdW5jdGlvbih0LGUpe2NvbnN0IG49e307bi5wcmltYXJ5PWU7Zm9yKGNvbnN0IHIgb2YgdCkiIj09PXIucGF0aCYmTGYocikhPT1icCYmKG5bTGYocildPW5ldyBQcChbXSx7fSkpO3JldHVybiBufShyLG5ldyBQcChuLHQuY2hpbGRyZW4pKSkpLHNsaWNlZFNlZ21lbnRzOltdfTowPT09bi5sZW5ndGgmJmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gbi5zb21lKG49PkJmKHQsZSxuKSl9KHQsbixyKT97c2VnbWVudEdyb3VwOlZmKG5ldyBQcCh0LnNlZ21lbnRzLGZ1bmN0aW9uKHQsZSxuLHIpe2NvbnN0IHM9e307Zm9yKGNvbnN0IGkgb2YgbilCZih0LGUsaSkmJiFyW0xmKGkpXSYmKHNbTGYoaSldPW5ldyBQcChbXSx7fSkpO3JldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30scikscyl9KHQsbixyLHQuY2hpbGRyZW4pKSksc2xpY2VkU2VnbWVudHM6bn06e3NlZ21lbnRHcm91cDp0LHNsaWNlZFNlZ21lbnRzOm59fShlLGksYSxyKTtyZXR1cm4gMD09PW8ubGVuZ3RoJiZzLmhhc0NoaWxkcmVuKCk/dGhpcy5leHBhbmRDaGlsZHJlbihuLHIscykucGlwZShTKHQ9Pm5ldyBQcChpLHQpKSk6MD09PXIubGVuZ3RoJiYwPT09by5sZW5ndGg/cWMobmV3IFBwKGkse30pKTp0aGlzLmV4cGFuZFNlZ21lbnQobixzLHIsbyxicCwhMCkucGlwZShTKHQ9Pm5ldyBQcChpLmNvbmNhdCh0LnNlZ21lbnRzKSx0LmNoaWxkcmVuKSkpfSkpfWdldENoaWxkQ29uZmlnKHQsZSxuKXtyZXR1cm4gZS5jaGlsZHJlbj9xYyhuZXcgU2YoZS5jaGlsZHJlbix0KSk6ZS5sb2FkQ2hpbGRyZW4/dm9pZCAwIT09ZS5fbG9hZGVkQ29uZmlnP3FjKGUuX2xvYWRlZENvbmZpZyk6dGhpcy5ydW5DYW5Mb2FkR3VhcmRzKHQuaW5qZWN0b3IsZSxuKS5waXBlKEwobj0+bj90aGlzLmNvbmZpZ0xvYWRlci5sb2FkKHQuaW5qZWN0b3IsZSkucGlwZShTKHQ9PihlLl9sb2FkZWRDb25maWc9dCx0KSkpOmZ1bmN0aW9uKHQpe3JldHVybiBuZXcgdihlPT5lLmVycm9yKENwKGBDYW5ub3QgbG9hZCBjaGlsZHJlbiBiZWNhdXNlIHRoZSBndWFyZCBvZiB0aGUgcm91dGUgInBhdGg6ICcke3QucGF0aH0nIiByZXR1cm5lZCBmYWxzZWApKSl9KGUpKSk6cWMobmV3IFNmKFtdLHQpKX1ydW5DYW5Mb2FkR3VhcmRzKHQsZSxuKXtjb25zdCByPWUuY2FuTG9hZDtyZXR1cm4gciYmMCE9PXIubGVuZ3RoP3FjKHIubWFwKHI9Pntjb25zdCBzPXQuZ2V0KHIpO2xldCBpO2lmKGZ1bmN0aW9uKHQpe3JldHVybiB0JiZ4Zih0LmNhbkxvYWQpfShzKSlpPXMuY2FuTG9hZChlLG4pO2Vsc2V7aWYoIXhmKHMpKXRocm93IG5ldyBFcnJvcigiSW52YWxpZCBDYW5Mb2FkIGd1YXJkIik7aT1zKGUsbil9cmV0dXJuIFRwKGkpfSkpLnBpcGUoRmYoKSxZZCh0PT57aWYoIWtmKHQpKXJldHVybjtjb25zdCBlPUNwKGBSZWRpcmVjdGluZyB0byAiJHt0aGlzLnVybFNlcmlhbGl6ZXIuc2VyaWFsaXplKHQpfSJgKTt0aHJvdyBlLnVybD10LGV9KSxTKHQ9PiEwPT09dCkpOnFjKCEwKX1saW5lcmFsaXplU2VnbWVudHModCxlKXtsZXQgbj1bXSxyPWUucm9vdDtmb3IoOzspe2lmKG49bi5jb25jYXQoci5zZWdtZW50cyksMD09PXIubnVtYmVyT2ZDaGlsZHJlbilyZXR1cm4gcWMobik7aWYoci5udW1iZXJPZkNoaWxkcmVuPjF8fCFyLmNoaWxkcmVuLnByaW1hcnkpcmV0dXJuIE1mKHQucmVkaXJlY3RUbyk7cj1yLmNoaWxkcmVuLnByaW1hcnl9fWFwcGx5UmVkaXJlY3RDb21tYW5kcyh0LGUsbil7cmV0dXJuIHRoaXMuYXBwbHlSZWRpcmVjdENyZWF0cmVVcmxUcmVlKGUsdGhpcy51cmxTZXJpYWxpemVyLnBhcnNlKGUpLHQsbil9YXBwbHlSZWRpcmVjdENyZWF0cmVVcmxUcmVlKHQsZSxuLHIpe2NvbnN0IHM9dGhpcy5jcmVhdGVTZWdtZW50R3JvdXAodCxlLnJvb3QsbixyKTtyZXR1cm4gbmV3IE9wKHMsdGhpcy5jcmVhdGVRdWVyeVBhcmFtcyhlLnF1ZXJ5UGFyYW1zLHRoaXMudXJsVHJlZS5xdWVyeVBhcmFtcyksZS5mcmFnbWVudCl9Y3JlYXRlUXVlcnlQYXJhbXModCxlKXtjb25zdCBuPXt9O3JldHVybiBrcCh0LCh0LHIpPT57aWYoInN0cmluZyI9PXR5cGVvZiB0JiZ0LnN0YXJ0c1dpdGgoIjoiKSl7Y29uc3Qgcz10LnN1YnN0cmluZygxKTtuW3JdPWVbc119ZWxzZSBuW3JdPXR9KSxufWNyZWF0ZVNlZ21lbnRHcm91cCh0LGUsbixyKXtjb25zdCBzPXRoaXMuY3JlYXRlU2VnbWVudHModCxlLnNlZ21lbnRzLG4scik7bGV0IGk9e307cmV0dXJuIGtwKGUuY2hpbGRyZW4sKGUscyk9PntpW3NdPXRoaXMuY3JlYXRlU2VnbWVudEdyb3VwKHQsZSxuLHIpfSksbmV3IFBwKHMsaSl9Y3JlYXRlU2VnbWVudHModCxlLG4scil7cmV0dXJuIGUubWFwKGU9PmUucGF0aC5zdGFydHNXaXRoKCI6Iik/dGhpcy5maW5kUG9zUGFyYW0odCxlLHIpOnRoaXMuZmluZE9yUmV0dXJuKGUsbikpfWZpbmRQb3NQYXJhbSh0LGUsbil7Y29uc3Qgcj1uW2UucGF0aC5zdWJzdHJpbmcoMSldO2lmKCFyKXRocm93IG5ldyBFcnJvcihgQ2Fubm90IHJlZGlyZWN0IHRvICcke3R9Jy4gQ2Fubm90IGZpbmQgJyR7ZS5wYXRofScuYCk7cmV0dXJuIHJ9ZmluZE9yUmV0dXJuKHQsZSl7bGV0IG49MDtmb3IoY29uc3QgciBvZiBlKXtpZihyLnBhdGg9PT10LnBhdGgpcmV0dXJuIGUuc3BsaWNlKG4pLHI7bisrfXJldHVybiB0fX1mdW5jdGlvbiBOZih0LGUsbil7aWYoIiI9PT1lLnBhdGgpcmV0dXJuImZ1bGwiPT09ZS5wYXRoTWF0Y2gmJih0Lmhhc0NoaWxkcmVuKCl8fG4ubGVuZ3RoPjApP3ttYXRjaGVkOiExLGNvbnN1bWVkU2VnbWVudHM6W10sbGFzdENoaWxkOjAscG9zaXRpb25hbFBhcmFtU2VnbWVudHM6e319OnttYXRjaGVkOiEwLGNvbnN1bWVkU2VnbWVudHM6W10sbGFzdENoaWxkOjAscG9zaXRpb25hbFBhcmFtU2VnbWVudHM6e319O2NvbnN0IHI9KGUubWF0Y2hlcnx8RHApKG4sdCxlKTtyZXR1cm4gcj97bWF0Y2hlZDohMCxjb25zdW1lZFNlZ21lbnRzOnIuY29uc3VtZWQsbGFzdENoaWxkOnIuY29uc3VtZWQubGVuZ3RoLHBvc2l0aW9uYWxQYXJhbVNlZ21lbnRzOnIucG9zUGFyYW1zfTp7bWF0Y2hlZDohMSxjb25zdW1lZFNlZ21lbnRzOltdLGxhc3RDaGlsZDowLHBvc2l0aW9uYWxQYXJhbVNlZ21lbnRzOnt9fX1mdW5jdGlvbiBWZih0KXtpZigxPT09dC5udW1iZXJPZkNoaWxkcmVuJiZ0LmNoaWxkcmVuLnByaW1hcnkpe2NvbnN0IGU9dC5jaGlsZHJlbi5wcmltYXJ5O3JldHVybiBuZXcgUHAodC5zZWdtZW50cy5jb25jYXQoZS5zZWdtZW50cyksZS5jaGlsZHJlbil9cmV0dXJuIHR9ZnVuY3Rpb24gQmYodCxlLG4pe3JldHVybighKHQuaGFzQ2hpbGRyZW4oKXx8ZS5sZW5ndGg+MCl8fCJmdWxsIiE9PW4ucGF0aE1hdGNoKSYmIiI9PT1uLnBhdGgmJnZvaWQgMCE9PW4ucmVkaXJlY3RUb31mdW5jdGlvbiBMZih0KXtyZXR1cm4gdC5vdXRsZXR8fGJwfWNsYXNzIFVme2NvbnN0cnVjdG9yKHQpe3RoaXMucGF0aD10LHRoaXMucm91dGU9dGhpcy5wYXRoW3RoaXMucGF0aC5sZW5ndGgtMV19fWNsYXNzIEhme2NvbnN0cnVjdG9yKHQsZSl7dGhpcy5jb21wb25lbnQ9dCx0aGlzLnJvdXRlPWV9fWZ1bmN0aW9uICRmKHQsZSxuKXtjb25zdCByPXQuX3Jvb3Q7cmV0dXJuIGZ1bmN0aW9uIHQoZSxuLHIscyxpPXtjYW5EZWFjdGl2YXRlQ2hlY2tzOltdLGNhbkFjdGl2YXRlQ2hlY2tzOltdfSl7Y29uc3Qgbz1lZihuKTtyZXR1cm4gZS5jaGlsZHJlbi5mb3JFYWNoKGU9PnshZnVuY3Rpb24oZSxuLHIscyxpPXtjYW5EZWFjdGl2YXRlQ2hlY2tzOltdLGNhbkFjdGl2YXRlQ2hlY2tzOltdfSl7Y29uc3Qgbz1lLnZhbHVlLGE9bj9uLnZhbHVlOm51bGwsbD1yP3IuZ2V0Q29udGV4dChlLnZhbHVlLm91dGxldCk6bnVsbDtpZihhJiZvLnJvdXRlQ29uZmlnPT09YS5yb3V0ZUNvbmZpZyl7Y29uc3QgdT1mdW5jdGlvbih0LGUsbil7aWYoImZ1bmN0aW9uIj09dHlwZW9mIG4pcmV0dXJuIG4odCxlKTtzd2l0Y2gobil7Y2FzZSJwYXRoUGFyYW1zQ2hhbmdlIjpyZXR1cm4hUnAodC51cmwsZS51cmwpO2Nhc2UicGF0aFBhcmFtc09yUXVlcnlQYXJhbXNDaGFuZ2UiOnJldHVybiFScCh0LnVybCxlLnVybCl8fCFFcCh0LnF1ZXJ5UGFyYW1zLGUucXVlcnlQYXJhbXMpO2Nhc2UiYWx3YXlzIjpyZXR1cm4hMDtjYXNlInBhcmFtc09yUXVlcnlQYXJhbXNDaGFuZ2UiOnJldHVybiFkZih0LGUpfHwhRXAodC5xdWVyeVBhcmFtcyxlLnF1ZXJ5UGFyYW1zKTtjYXNlInBhcmFtc0NoYW5nZSI6ZGVmYXVsdDpyZXR1cm4hZGYodCxlKX19KGEsbyxvLnJvdXRlQ29uZmlnLnJ1bkd1YXJkc0FuZFJlc29sdmVycyk7dT9pLmNhbkFjdGl2YXRlQ2hlY2tzLnB1c2gobmV3IFVmKHMpKTooby5kYXRhPWEuZGF0YSxvLl9yZXNvbHZlZERhdGE9YS5fcmVzb2x2ZWREYXRhKSx0KGUsbixvLmNvbXBvbmVudD9sP2wuY2hpbGRyZW46bnVsbDpyLHMsaSksdSYmbCYmbC5vdXRsZXQmJmwub3V0bGV0LmlzQWN0aXZhdGVkJiZpLmNhbkRlYWN0aXZhdGVDaGVja3MucHVzaChuZXcgSGYobC5vdXRsZXQuY29tcG9uZW50LGEpKX1lbHNlIGEmJnFmKG4sbCxpKSxpLmNhbkFjdGl2YXRlQ2hlY2tzLnB1c2gobmV3IFVmKHMpKSx0KGUsbnVsbCxvLmNvbXBvbmVudD9sP2wuY2hpbGRyZW46bnVsbDpyLHMsaSl9KGUsb1tlLnZhbHVlLm91dGxldF0scixzLmNvbmNhdChbZS52YWx1ZV0pLGkpLGRlbGV0ZSBvW2UudmFsdWUub3V0bGV0XX0pLGtwKG8sKHQsZSk9PnFmKHQsci5nZXRDb250ZXh0KGUpLGkpKSxpfShyLGU/ZS5fcm9vdDpudWxsLG4sW3IudmFsdWVdKX1mdW5jdGlvbiB6Zih0LGUsbil7Y29uc3Qgcj1mdW5jdGlvbih0KXtpZighdClyZXR1cm4gbnVsbDtmb3IobGV0IGU9dC5wYXJlbnQ7ZTtlPWUucGFyZW50KXtjb25zdCB0PWUucm91dGVDb25maWc7aWYodCYmdC5fbG9hZGVkQ29uZmlnKXJldHVybiB0Ll9sb2FkZWRDb25maWd9cmV0dXJuIG51bGx9KGUpO3JldHVybihyP3IubW9kdWxlLmluamVjdG9yOm4pLmdldCh0KX1mdW5jdGlvbiBxZih0LGUsbil7Y29uc3Qgcj1lZih0KSxzPXQudmFsdWU7a3AociwodCxyKT0+e3FmKHQscy5jb21wb25lbnQ/ZT9lLmNoaWxkcmVuLmdldENvbnRleHQocik6bnVsbDplLG4pfSksbi5jYW5EZWFjdGl2YXRlQ2hlY2tzLnB1c2gobmV3IEhmKHMuY29tcG9uZW50JiZlJiZlLm91dGxldCYmZS5vdXRsZXQuaXNBY3RpdmF0ZWQ/ZS5vdXRsZXQuY29tcG9uZW50Om51bGwscykpfWZ1bmN0aW9uIFdmKHQsZSl7cmV0dXJuIG51bGwhPT10JiZlJiZlKG5ldyBtcCh0KSkscWMoITApfWZ1bmN0aW9uIFpmKHQsZSl7cmV0dXJuIG51bGwhPT10JiZlJiZlKG5ldyBmcCh0KSkscWMoITApfWZ1bmN0aW9uIEdmKHQsZSxuKXtjb25zdCByPWUucm91dGVDb25maWc/ZS5yb3V0ZUNvbmZpZy5jYW5BY3RpdmF0ZTpudWxsO3JldHVybiByJiYwIT09ci5sZW5ndGg/cWMoci5tYXAocj0+RGQoKCk9Pntjb25zdCBzPXpmKHIsZSxuKTtsZXQgaTtpZihmdW5jdGlvbih0KXtyZXR1cm4gdCYmeGYodC5jYW5BY3RpdmF0ZSl9KHMpKWk9VHAocy5jYW5BY3RpdmF0ZShlLHQpKTtlbHNle2lmKCF4ZihzKSl0aHJvdyBuZXcgRXJyb3IoIkludmFsaWQgQ2FuQWN0aXZhdGUgZ3VhcmQiKTtpPVRwKHMoZSx0KSl9cmV0dXJuIGkucGlwZShLZCgpKX0pKSkucGlwZShGZigpKTpxYyghMCl9ZnVuY3Rpb24gS2YodCxlLG4pe2NvbnN0IHI9ZVtlLmxlbmd0aC0xXSxzPWUuc2xpY2UoMCxlLmxlbmd0aC0xKS5yZXZlcnNlKCkubWFwKHQ9PmZ1bmN0aW9uKHQpe2NvbnN0IGU9dC5yb3V0ZUNvbmZpZz90LnJvdXRlQ29uZmlnLmNhbkFjdGl2YXRlQ2hpbGQ6bnVsbDtyZXR1cm4gZSYmMCE9PWUubGVuZ3RoP3tub2RlOnQsZ3VhcmRzOmV9Om51bGx9KHQpKS5maWx0ZXIodD0+bnVsbCE9PXQpLm1hcChlPT5EZCgoKT0+cWMoZS5ndWFyZHMubWFwKHM9Pntjb25zdCBpPXpmKHMsZS5ub2RlLG4pO2xldCBvO2lmKGZ1bmN0aW9uKHQpe3JldHVybiB0JiZ4Zih0LmNhbkFjdGl2YXRlQ2hpbGQpfShpKSlvPVRwKGkuY2FuQWN0aXZhdGVDaGlsZChyLHQpKTtlbHNle2lmKCF4ZihpKSl0aHJvdyBuZXcgRXJyb3IoIkludmFsaWQgQ2FuQWN0aXZhdGVDaGlsZCBndWFyZCIpO289VHAoaShyLHQpKX1yZXR1cm4gby5waXBlKEtkKCkpfSkpLnBpcGUoRmYoKSkpKTtyZXR1cm4gcWMocykucGlwZShGZigpKX1jbGFzcyBRZnt9Y2xhc3MgWWZ7Y29uc3RydWN0b3IodCxlLG4scixzLGkpe3RoaXMucm9vdENvbXBvbmVudFR5cGU9dCx0aGlzLmNvbmZpZz1lLHRoaXMudXJsVHJlZT1uLHRoaXMudXJsPXIsdGhpcy5wYXJhbXNJbmhlcml0YW5jZVN0cmF0ZWd5PXMsdGhpcy5yZWxhdGl2ZUxpbmtSZXNvbHV0aW9uPWl9cmVjb2duaXplKCl7dHJ5e2NvbnN0IHQ9dGcodGhpcy51cmxUcmVlLnJvb3QsW10sW10sdGhpcy5jb25maWcsdGhpcy5yZWxhdGl2ZUxpbmtSZXNvbHV0aW9uKS5zZWdtZW50R3JvdXAsZT10aGlzLnByb2Nlc3NTZWdtZW50R3JvdXAodGhpcy5jb25maWcsdCxicCksbj1uZXcgYWYoW10sT2JqZWN0LmZyZWV6ZSh7fSksT2JqZWN0LmZyZWV6ZShPYmplY3QuYXNzaWduKHt9LHRoaXMudXJsVHJlZS5xdWVyeVBhcmFtcykpLHRoaXMudXJsVHJlZS5mcmFnbWVudCx7fSxicCx0aGlzLnJvb3RDb21wb25lbnRUeXBlLG51bGwsdGhpcy51cmxUcmVlLnJvb3QsLTEse30pLHI9bmV3IHRmKG4sZSkscz1uZXcgbGYodGhpcy51cmwscik7cmV0dXJuIHRoaXMuaW5oZXJpdFBhcmFtc0FuZERhdGEocy5fcm9vdCkscWMocyl9Y2F0Y2godCl7cmV0dXJuIG5ldyB2KGU9PmUuZXJyb3IodCkpfX1pbmhlcml0UGFyYW1zQW5kRGF0YSh0KXtjb25zdCBlPXQudmFsdWUsbj1vZihlLHRoaXMucGFyYW1zSW5oZXJpdGFuY2VTdHJhdGVneSk7ZS5wYXJhbXM9T2JqZWN0LmZyZWV6ZShuLnBhcmFtcyksZS5kYXRhPU9iamVjdC5mcmVlemUobi5kYXRhKSx0LmNoaWxkcmVuLmZvckVhY2godD0+dGhpcy5pbmhlcml0UGFyYW1zQW5kRGF0YSh0KSl9cHJvY2Vzc1NlZ21lbnRHcm91cCh0LGUsbil7cmV0dXJuIDA9PT1lLnNlZ21lbnRzLmxlbmd0aCYmZS5oYXNDaGlsZHJlbigpP3RoaXMucHJvY2Vzc0NoaWxkcmVuKHQsZSk6dGhpcy5wcm9jZXNzU2VnbWVudCh0LGUsZS5zZWdtZW50cyxuKX1wcm9jZXNzQ2hpbGRyZW4odCxlKXtjb25zdCBuPU1wKGUsKGUsbik9PnRoaXMucHJvY2Vzc1NlZ21lbnRHcm91cCh0LGUsbikpO3JldHVybiBmdW5jdGlvbih0KXtjb25zdCBlPXt9O3QuZm9yRWFjaCh0PT57Y29uc3Qgbj1lW3QudmFsdWUub3V0bGV0XTtpZihuKXtjb25zdCBlPW4udXJsLm1hcCh0PT50LnRvU3RyaW5nKCkpLmpvaW4oIi8iKSxyPXQudmFsdWUudXJsLm1hcCh0PT50LnRvU3RyaW5nKCkpLmpvaW4oIi8iKTt0aHJvdyBuZXcgRXJyb3IoYFR3byBzZWdtZW50cyBjYW5ub3QgaGF2ZSB0aGUgc2FtZSBvdXRsZXQgbmFtZTogJyR7ZX0nIGFuZCAnJHtyfScuYCl9ZVt0LnZhbHVlLm91dGxldF09dC52YWx1ZX0pfShuKSxuLnNvcnQoKHQsZSk9PnQudmFsdWUub3V0bGV0PT09YnA/LTE6ZS52YWx1ZS5vdXRsZXQ9PT1icD8xOnQudmFsdWUub3V0bGV0LmxvY2FsZUNvbXBhcmUoZS52YWx1ZS5vdXRsZXQpKSxufXByb2Nlc3NTZWdtZW50KHQsZSxuLHIpe2Zvcihjb25zdCBpIG9mIHQpdHJ5e3JldHVybiB0aGlzLnByb2Nlc3NTZWdtZW50QWdhaW5zdFJvdXRlKGksZSxuLHIpfWNhdGNoKHMpe2lmKCEocyBpbnN0YW5jZW9mIFFmKSl0aHJvdyBzfWlmKHRoaXMubm9MZWZ0b3ZlcnNJblVybChlLG4scikpcmV0dXJuW107dGhyb3cgbmV3IFFmfW5vTGVmdG92ZXJzSW5VcmwodCxlLG4pe3JldHVybiAwPT09ZS5sZW5ndGgmJiF0LmNoaWxkcmVuW25dfXByb2Nlc3NTZWdtZW50QWdhaW5zdFJvdXRlKHQsZSxuLHIpe2lmKHQucmVkaXJlY3RUbyl0aHJvdyBuZXcgUWY7aWYoKHQub3V0bGV0fHxicCkhPT1yKXRocm93IG5ldyBRZjtsZXQgcyxpPVtdLG89W107aWYoIioqIj09PXQucGF0aCl7Y29uc3QgaT1uLmxlbmd0aD4wP3hwKG4pLnBhcmFtZXRlcnM6e307cz1uZXcgYWYobixpLE9iamVjdC5mcmVlemUoT2JqZWN0LmFzc2lnbih7fSx0aGlzLnVybFRyZWUucXVlcnlQYXJhbXMpKSx0aGlzLnVybFRyZWUuZnJhZ21lbnQscmcodCkscix0LmNvbXBvbmVudCx0LEpmKGUpLFhmKGUpK24ubGVuZ3RoLHNnKHQpKX1lbHNle2NvbnN0IGE9ZnVuY3Rpb24odCxlLG4pe2lmKCIiPT09ZS5wYXRoKXtpZigiZnVsbCI9PT1lLnBhdGhNYXRjaCYmKHQuaGFzQ2hpbGRyZW4oKXx8bi5sZW5ndGg+MCkpdGhyb3cgbmV3IFFmO3JldHVybntjb25zdW1lZFNlZ21lbnRzOltdLGxhc3RDaGlsZDowLHBhcmFtZXRlcnM6e319fWNvbnN0IHI9KGUubWF0Y2hlcnx8RHApKG4sdCxlKTtpZighcil0aHJvdyBuZXcgUWY7Y29uc3Qgcz17fTtrcChyLnBvc1BhcmFtcywodCxlKT0+e3NbZV09dC5wYXRofSk7Y29uc3QgaT1yLmNvbnN1bWVkLmxlbmd0aD4wP09iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSxzKSxyLmNvbnN1bWVkW3IuY29uc3VtZWQubGVuZ3RoLTFdLnBhcmFtZXRlcnMpOnM7cmV0dXJue2NvbnN1bWVkU2VnbWVudHM6ci5jb25zdW1lZCxsYXN0Q2hpbGQ6ci5jb25zdW1lZC5sZW5ndGgscGFyYW1ldGVyczppfX0oZSx0LG4pO2k9YS5jb25zdW1lZFNlZ21lbnRzLG89bi5zbGljZShhLmxhc3RDaGlsZCkscz1uZXcgYWYoaSxhLnBhcmFtZXRlcnMsT2JqZWN0LmZyZWV6ZShPYmplY3QuYXNzaWduKHt9LHRoaXMudXJsVHJlZS5xdWVyeVBhcmFtcykpLHRoaXMudXJsVHJlZS5mcmFnbWVudCxyZyh0KSxyLHQuY29tcG9uZW50LHQsSmYoZSksWGYoZSkraS5sZW5ndGgsc2codCkpfWNvbnN0IGE9ZnVuY3Rpb24odCl7cmV0dXJuIHQuY2hpbGRyZW4/dC5jaGlsZHJlbjp0LmxvYWRDaGlsZHJlbj90Ll9sb2FkZWRDb25maWcucm91dGVzOltdfSh0KSx7c2VnbWVudEdyb3VwOmwsc2xpY2VkU2VnbWVudHM6dX09dGcoZSxpLG8sYSx0aGlzLnJlbGF0aXZlTGlua1Jlc29sdXRpb24pO2lmKDA9PT11Lmxlbmd0aCYmbC5oYXNDaGlsZHJlbigpKXtjb25zdCB0PXRoaXMucHJvY2Vzc0NoaWxkcmVuKGEsbCk7cmV0dXJuW25ldyB0ZihzLHQpXX1pZigwPT09YS5sZW5ndGgmJjA9PT11Lmxlbmd0aClyZXR1cm5bbmV3IHRmKHMsW10pXTtjb25zdCBjPXRoaXMucHJvY2Vzc1NlZ21lbnQoYSxsLHUsYnApO3JldHVybltuZXcgdGYocyxjKV19fWZ1bmN0aW9uIEpmKHQpe2xldCBlPXQ7Zm9yKDtlLl9zb3VyY2VTZWdtZW50OyllPWUuX3NvdXJjZVNlZ21lbnQ7cmV0dXJuIGV9ZnVuY3Rpb24gWGYodCl7bGV0IGU9dCxuPWUuX3NlZ21lbnRJbmRleFNoaWZ0P2UuX3NlZ21lbnRJbmRleFNoaWZ0OjA7Zm9yKDtlLl9zb3VyY2VTZWdtZW50OyllPWUuX3NvdXJjZVNlZ21lbnQsbis9ZS5fc2VnbWVudEluZGV4U2hpZnQ/ZS5fc2VnbWVudEluZGV4U2hpZnQ6MDtyZXR1cm4gbi0xfWZ1bmN0aW9uIHRnKHQsZSxuLHIscyl7aWYobi5sZW5ndGg+MCYmZnVuY3Rpb24odCxlLG4pe3JldHVybiBuLnNvbWUobj0+ZWcodCxlLG4pJiZuZyhuKSE9PWJwKX0odCxuLHIpKXtjb25zdCBzPW5ldyBQcChlLGZ1bmN0aW9uKHQsZSxuLHIpe2NvbnN0IHM9e307cy5wcmltYXJ5PXIsci5fc291cmNlU2VnbWVudD10LHIuX3NlZ21lbnRJbmRleFNoaWZ0PWUubGVuZ3RoO2Zvcihjb25zdCBpIG9mIG4paWYoIiI9PT1pLnBhdGgmJm5nKGkpIT09YnApe2NvbnN0IG49bmV3IFBwKFtdLHt9KTtuLl9zb3VyY2VTZWdtZW50PXQsbi5fc2VnbWVudEluZGV4U2hpZnQ9ZS5sZW5ndGgsc1tuZyhpKV09bn1yZXR1cm4gc30odCxlLHIsbmV3IFBwKG4sdC5jaGlsZHJlbikpKTtyZXR1cm4gcy5fc291cmNlU2VnbWVudD10LHMuX3NlZ21lbnRJbmRleFNoaWZ0PWUubGVuZ3RoLHtzZWdtZW50R3JvdXA6cyxzbGljZWRTZWdtZW50czpbXX19aWYoMD09PW4ubGVuZ3RoJiZmdW5jdGlvbih0LGUsbil7cmV0dXJuIG4uc29tZShuPT5lZyh0LGUsbikpfSh0LG4scikpe2NvbnN0IGk9bmV3IFBwKHQuc2VnbWVudHMsZnVuY3Rpb24odCxlLG4scixzLGkpe2NvbnN0IG89e307Zm9yKGNvbnN0IGEgb2YgcilpZihlZyh0LG4sYSkmJiFzW25nKGEpXSl7Y29uc3Qgbj1uZXcgUHAoW10se30pO24uX3NvdXJjZVNlZ21lbnQ9dCxuLl9zZWdtZW50SW5kZXhTaGlmdD0ibGVnYWN5Ij09PWk/dC5zZWdtZW50cy5sZW5ndGg6ZS5sZW5ndGgsb1tuZyhhKV09bn1yZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LHMpLG8pfSh0LGUsbixyLHQuY2hpbGRyZW4scykpO3JldHVybiBpLl9zb3VyY2VTZWdtZW50PXQsaS5fc2VnbWVudEluZGV4U2hpZnQ9ZS5sZW5ndGgse3NlZ21lbnRHcm91cDppLHNsaWNlZFNlZ21lbnRzOm59fWNvbnN0IGk9bmV3IFBwKHQuc2VnbWVudHMsdC5jaGlsZHJlbik7cmV0dXJuIGkuX3NvdXJjZVNlZ21lbnQ9dCxpLl9zZWdtZW50SW5kZXhTaGlmdD1lLmxlbmd0aCx7c2VnbWVudEdyb3VwOmksc2xpY2VkU2VnbWVudHM6bn19ZnVuY3Rpb24gZWcodCxlLG4pe3JldHVybighKHQuaGFzQ2hpbGRyZW4oKXx8ZS5sZW5ndGg+MCl8fCJmdWxsIiE9PW4ucGF0aE1hdGNoKSYmIiI9PT1uLnBhdGgmJnZvaWQgMD09PW4ucmVkaXJlY3RUb31mdW5jdGlvbiBuZyh0KXtyZXR1cm4gdC5vdXRsZXR8fGJwfWZ1bmN0aW9uIHJnKHQpe3JldHVybiB0LmRhdGF8fHt9fWZ1bmN0aW9uIHNnKHQpe3JldHVybiB0LnJlc29sdmV8fHt9fWZ1bmN0aW9uIGlnKHQpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gZS5waXBlKFhjKGU9Pntjb25zdCBuPXQoZSk7cmV0dXJuIG4/aihuKS5waXBlKFMoKCk9PmUpKTpqKFtlXSl9KSl9fWNsYXNzIG9nIGV4dGVuZHMgY2xhc3N7c2hvdWxkRGV0YWNoKHQpe3JldHVybiExfXN0b3JlKHQsZSl7fXNob3VsZEF0dGFjaCh0KXtyZXR1cm4hMX1yZXRyaWV2ZSh0KXtyZXR1cm4gbnVsbH1zaG91bGRSZXVzZVJvdXRlKHQsZSl7cmV0dXJuIHQucm91dGVDb25maWc9PT1lLnJvdXRlQ29uZmlnfX17fWxldCBhZz0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0sdC5cdTAyNzVjbXA9ZGUoe3R5cGU6dCxzZWxlY3RvcnM6W1sibmctY29tcG9uZW50Il1dLGRlY2xzOjEsdmFyczowLHRlbXBsYXRlOmZ1bmN0aW9uKHQsZSl7MSZ0JiZCaSgwLCJyb3V0ZXItb3V0bGV0Iil9LGRpcmVjdGl2ZXM6ZnVuY3Rpb24oKXtyZXR1cm5bX2ddfSxlbmNhcHN1bGF0aW9uOjJ9KSx0fSkoKTtmdW5jdGlvbiBsZyh0LGU9IiIpe2ZvcihsZXQgbj0wO248dC5sZW5ndGg7bisrKXtjb25zdCByPXRbbl07dWcocixjZyhlLHIpKX19ZnVuY3Rpb24gdWcodCxlKXtpZighdCl0aHJvdyBuZXcgRXJyb3IoYFxuICAgICAgSW52YWxpZCBjb25maWd1cmF0aW9uIG9mIHJvdXRlICcke2V9JzogRW5jb3VudGVyZWQgdW5kZWZpbmVkIHJvdXRlLlxuICAgICAgVGhlIHJlYXNvbiBtaWdodCBiZSBhbiBleHRyYSBjb21tYS5cblxuICAgICAgRXhhbXBsZTpcbiAgICAgIGNvbnN0IHJvdXRlczogUm91dGVzID0gW1xuICAgICAgICB7IHBhdGg6ICcnLCByZWRpcmVjdFRvOiAnL2Rhc2hib2FyZCcsIHBhdGhNYXRjaDogJ2Z1bGwnIH0sXG4gICAgICAgIHsgcGF0aDogJ2Rhc2hib2FyZCcsICBjb21wb25lbnQ6IERhc2hib2FyZENvbXBvbmVudCB9LCwgPDwgdHdvIGNvbW1hc1xuICAgICAgICB7IHBhdGg6ICdkZXRhaWwvOmlkJywgY29tcG9uZW50OiBIZXJvRGV0YWlsQ29tcG9uZW50IH1cbiAgICAgIF07XG4gICAgYCk7aWYoQXJyYXkuaXNBcnJheSh0KSl0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgY29uZmlndXJhdGlvbiBvZiByb3V0ZSAnJHtlfSc6IEFycmF5IGNhbm5vdCBiZSBzcGVjaWZpZWRgKTtpZighdC5jb21wb25lbnQmJiF0LmNoaWxkcmVuJiYhdC5sb2FkQ2hpbGRyZW4mJnQub3V0bGV0JiZ0Lm91dGxldCE9PWJwKXRocm93IG5ldyBFcnJvcihgSW52YWxpZCBjb25maWd1cmF0aW9uIG9mIHJvdXRlICcke2V9JzogYSBjb21wb25lbnRsZXNzIHJvdXRlIHdpdGhvdXQgY2hpbGRyZW4gb3IgbG9hZENoaWxkcmVuIGNhbm5vdCBoYXZlIGEgbmFtZWQgb3V0bGV0IHNldGApO2lmKHQucmVkaXJlY3RUbyYmdC5jaGlsZHJlbil0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgY29uZmlndXJhdGlvbiBvZiByb3V0ZSAnJHtlfSc6IHJlZGlyZWN0VG8gYW5kIGNoaWxkcmVuIGNhbm5vdCBiZSB1c2VkIHRvZ2V0aGVyYCk7aWYodC5yZWRpcmVjdFRvJiZ0LmxvYWRDaGlsZHJlbil0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgY29uZmlndXJhdGlvbiBvZiByb3V0ZSAnJHtlfSc6IHJlZGlyZWN0VG8gYW5kIGxvYWRDaGlsZHJlbiBjYW5ub3QgYmUgdXNlZCB0b2dldGhlcmApO2lmKHQuY2hpbGRyZW4mJnQubG9hZENoaWxkcmVuKXRocm93IG5ldyBFcnJvcihgSW52YWxpZCBjb25maWd1cmF0aW9uIG9mIHJvdXRlICcke2V9JzogY2hpbGRyZW4gYW5kIGxvYWRDaGlsZHJlbiBjYW5ub3QgYmUgdXNlZCB0b2dldGhlcmApO2lmKHQucmVkaXJlY3RUbyYmdC5jb21wb25lbnQpdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIGNvbmZpZ3VyYXRpb24gb2Ygcm91dGUgJyR7ZX0nOiByZWRpcmVjdFRvIGFuZCBjb21wb25lbnQgY2Fubm90IGJlIHVzZWQgdG9nZXRoZXJgKTtpZih0LnBhdGgmJnQubWF0Y2hlcil0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgY29uZmlndXJhdGlvbiBvZiByb3V0ZSAnJHtlfSc6IHBhdGggYW5kIG1hdGNoZXIgY2Fubm90IGJlIHVzZWQgdG9nZXRoZXJgKTtpZih2b2lkIDA9PT10LnJlZGlyZWN0VG8mJiF0LmNvbXBvbmVudCYmIXQuY2hpbGRyZW4mJiF0LmxvYWRDaGlsZHJlbil0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgY29uZmlndXJhdGlvbiBvZiByb3V0ZSAnJHtlfScuIE9uZSBvZiB0aGUgZm9sbG93aW5nIG11c3QgYmUgcHJvdmlkZWQ6IGNvbXBvbmVudCwgcmVkaXJlY3RUbywgY2hpbGRyZW4gb3IgbG9hZENoaWxkcmVuYCk7aWYodm9pZCAwPT09dC5wYXRoJiZ2b2lkIDA9PT10Lm1hdGNoZXIpdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIGNvbmZpZ3VyYXRpb24gb2Ygcm91dGUgJyR7ZX0nOiByb3V0ZXMgbXVzdCBoYXZlIGVpdGhlciBhIHBhdGggb3IgYSBtYXRjaGVyIHNwZWNpZmllZGApO2lmKCJzdHJpbmciPT10eXBlb2YgdC5wYXRoJiYiLyI9PT10LnBhdGguY2hhckF0KDApKXRocm93IG5ldyBFcnJvcihgSW52YWxpZCBjb25maWd1cmF0aW9uIG9mIHJvdXRlICcke2V9JzogcGF0aCBjYW5ub3Qgc3RhcnQgd2l0aCBhIHNsYXNoYCk7aWYoIiI9PT10LnBhdGgmJnZvaWQgMCE9PXQucmVkaXJlY3RUbyYmdm9pZCAwPT09dC5wYXRoTWF0Y2gpdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIGNvbmZpZ3VyYXRpb24gb2Ygcm91dGUgJ3twYXRoOiAiJHtlfSIsIHJlZGlyZWN0VG86ICIke3QucmVkaXJlY3RUb30ifSc6IHBsZWFzZSBwcm92aWRlICdwYXRoTWF0Y2gnLiBUaGUgZGVmYXVsdCB2YWx1ZSBvZiAncGF0aE1hdGNoJyBpcyAncHJlZml4JywgYnV0IG9mdGVuIHRoZSBpbnRlbnQgaXMgdG8gdXNlICdmdWxsJy5gKTtpZih2b2lkIDAhPT10LnBhdGhNYXRjaCYmImZ1bGwiIT09dC5wYXRoTWF0Y2gmJiJwcmVmaXgiIT09dC5wYXRoTWF0Y2gpdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIGNvbmZpZ3VyYXRpb24gb2Ygcm91dGUgJyR7ZX0nOiBwYXRoTWF0Y2ggY2FuIG9ubHkgYmUgc2V0IHRvICdwcmVmaXgnIG9yICdmdWxsJ2ApO3QuY2hpbGRyZW4mJmxnKHQuY2hpbGRyZW4sZSl9ZnVuY3Rpb24gY2codCxlKXtyZXR1cm4gZT90fHxlLnBhdGg/dCYmIWUucGF0aD90KyIvIjohdCYmZS5wYXRoP2UucGF0aDpgJHt0fS8ke2UucGF0aH1gOiIiOnR9ZnVuY3Rpb24gaGcodCl7Y29uc3QgZT10LmNoaWxkcmVuJiZ0LmNoaWxkcmVuLm1hcChoZyksbj1lP09iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSx0KSx7Y2hpbGRyZW46ZX0pOk9iamVjdC5hc3NpZ24oe30sdCk7cmV0dXJuIW4uY29tcG9uZW50JiYoZXx8bi5sb2FkQ2hpbGRyZW4pJiZuLm91dGxldCYmbi5vdXRsZXQhPT1icCYmKG4uY29tcG9uZW50PWFnKSxufWNvbnN0IGRnPW5ldyBOdCgiUk9VVEVTIik7Y2xhc3MgcGd7Y29uc3RydWN0b3IodCxlLG4scil7dGhpcy5sb2FkZXI9dCx0aGlzLmNvbXBpbGVyPWUsdGhpcy5vbkxvYWRTdGFydExpc3RlbmVyPW4sdGhpcy5vbkxvYWRFbmRMaXN0ZW5lcj1yfWxvYWQodCxlKXtyZXR1cm4gdGhpcy5vbkxvYWRTdGFydExpc3RlbmVyJiZ0aGlzLm9uTG9hZFN0YXJ0TGlzdGVuZXIoZSksdGhpcy5sb2FkTW9kdWxlRmFjdG9yeShlLmxvYWRDaGlsZHJlbikucGlwZShTKG49Pnt0aGlzLm9uTG9hZEVuZExpc3RlbmVyJiZ0aGlzLm9uTG9hZEVuZExpc3RlbmVyKGUpO2NvbnN0IHI9bi5jcmVhdGUodCk7cmV0dXJuIG5ldyBTZihTcChyLmluamVjdG9yLmdldChkZykpLm1hcChoZykscil9KSl9bG9hZE1vZHVsZUZhY3RvcnkodCl7cmV0dXJuInN0cmluZyI9PXR5cGVvZiB0P2oodGhpcy5sb2FkZXIubG9hZCh0KSk6VHAodCgpKS5waXBlKEwodD0+dCBpbnN0YW5jZW9mIFh0P3FjKHQpOmoodGhpcy5jb21waWxlci5jb21waWxlTW9kdWxlQXN5bmModCkpKSl9fWNsYXNzIGZne2NvbnN0cnVjdG9yKCl7dGhpcy5vdXRsZXQ9bnVsbCx0aGlzLnJvdXRlPW51bGwsdGhpcy5yZXNvbHZlcj1udWxsLHRoaXMuY2hpbGRyZW49bmV3IGdnLHRoaXMuYXR0YWNoUmVmPW51bGx9fWNsYXNzIGdne2NvbnN0cnVjdG9yKCl7dGhpcy5jb250ZXh0cz1uZXcgTWFwfW9uQ2hpbGRPdXRsZXRDcmVhdGVkKHQsZSl7Y29uc3Qgbj10aGlzLmdldE9yQ3JlYXRlQ29udGV4dCh0KTtuLm91dGxldD1lLHRoaXMuY29udGV4dHMuc2V0KHQsbil9b25DaGlsZE91dGxldERlc3Ryb3llZCh0KXtjb25zdCBlPXRoaXMuZ2V0Q29udGV4dCh0KTtlJiYoZS5vdXRsZXQ9bnVsbCl9b25PdXRsZXREZWFjdGl2YXRlZCgpe2NvbnN0IHQ9dGhpcy5jb250ZXh0cztyZXR1cm4gdGhpcy5jb250ZXh0cz1uZXcgTWFwLHR9b25PdXRsZXRSZUF0dGFjaGVkKHQpe3RoaXMuY29udGV4dHM9dH1nZXRPckNyZWF0ZUNvbnRleHQodCl7bGV0IGU9dGhpcy5nZXRDb250ZXh0KHQpO3JldHVybiBlfHwoZT1uZXcgZmcsdGhpcy5jb250ZXh0cy5zZXQodCxlKSksZX1nZXRDb250ZXh0KHQpe3JldHVybiB0aGlzLmNvbnRleHRzLmdldCh0KXx8bnVsbH19Y2xhc3MgbWd7c2hvdWxkUHJvY2Vzc1VybCh0KXtyZXR1cm4hMH1leHRyYWN0KHQpe3JldHVybiB0fW1lcmdlKHQsZSl7cmV0dXJuIHR9fWZ1bmN0aW9uIHlnKHQpe3Rocm93IHR9ZnVuY3Rpb24gdmcodCxlLG4pe3JldHVybiBlLnBhcnNlKCIvIil9ZnVuY3Rpb24gYmcodCxlKXtyZXR1cm4gcWMobnVsbCl9bGV0IHdnPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IodCxlLG4scixzLGksbyxhKXt0aGlzLnJvb3RDb21wb25lbnRUeXBlPXQsdGhpcy51cmxTZXJpYWxpemVyPWUsdGhpcy5yb290Q29udGV4dHM9bix0aGlzLmxvY2F0aW9uPXIsdGhpcy5jb25maWc9YSx0aGlzLmxhc3RTdWNjZXNzZnVsTmF2aWdhdGlvbj1udWxsLHRoaXMuY3VycmVudE5hdmlnYXRpb249bnVsbCx0aGlzLmxhc3RMb2NhdGlvbkNoYW5nZUluZm89bnVsbCx0aGlzLm5hdmlnYXRpb25JZD0wLHRoaXMuaXNOZ1pvbmVFbmFibGVkPSExLHRoaXMuZXZlbnRzPW5ldyBELHRoaXMuZXJyb3JIYW5kbGVyPXlnLHRoaXMubWFsZm9ybWVkVXJpRXJyb3JIYW5kbGVyPXZnLHRoaXMubmF2aWdhdGVkPSExLHRoaXMubGFzdFN1Y2Nlc3NmdWxJZD0tMSx0aGlzLmhvb2tzPXtiZWZvcmVQcmVhY3RpdmF0aW9uOmJnLGFmdGVyUHJlYWN0aXZhdGlvbjpiZ30sdGhpcy51cmxIYW5kbGluZ1N0cmF0ZWd5PW5ldyBtZyx0aGlzLnJvdXRlUmV1c2VTdHJhdGVneT1uZXcgb2csdGhpcy5vblNhbWVVcmxOYXZpZ2F0aW9uPSJpZ25vcmUiLHRoaXMucGFyYW1zSW5oZXJpdGFuY2VTdHJhdGVneT0iZW1wdHlPbmx5Iix0aGlzLnVybFVwZGF0ZVN0cmF0ZWd5PSJkZWZlcnJlZCIsdGhpcy5yZWxhdGl2ZUxpbmtSZXNvbHV0aW9uPSJsZWdhY3kiLHRoaXMubmdNb2R1bGU9cy5nZXQoSnQpLHRoaXMuY29uc29sZT1zLmdldChLYSk7Y29uc3QgbD1zLmdldChsbCk7dGhpcy5pc05nWm9uZUVuYWJsZWQ9bCBpbnN0YW5jZW9mIGxsLHRoaXMucmVzZXRDb25maWcoYSksdGhpcy5jdXJyZW50VXJsVHJlZT1uZXcgT3AobmV3IFBwKFtdLHt9KSx7fSxudWxsKSx0aGlzLnJhd1VybFRyZWU9dGhpcy5jdXJyZW50VXJsVHJlZSx0aGlzLmJyb3dzZXJVcmxUcmVlPXRoaXMuY3VycmVudFVybFRyZWUsdGhpcy5jb25maWdMb2FkZXI9bmV3IHBnKGksbyx0PT50aGlzLnRyaWdnZXJFdmVudChuZXcgZHAodCkpLHQ9PnRoaXMudHJpZ2dlckV2ZW50KG5ldyBwcCh0KSkpLHRoaXMucm91dGVyU3RhdGU9cmYodGhpcy5jdXJyZW50VXJsVHJlZSx0aGlzLnJvb3RDb21wb25lbnRUeXBlKSx0aGlzLnRyYW5zaXRpb25zPW5ldyBnZCh7aWQ6MCxjdXJyZW50VXJsVHJlZTp0aGlzLmN1cnJlbnRVcmxUcmVlLGN1cnJlbnRSYXdVcmw6dGhpcy5jdXJyZW50VXJsVHJlZSxleHRyYWN0ZWRVcmw6dGhpcy51cmxIYW5kbGluZ1N0cmF0ZWd5LmV4dHJhY3QodGhpcy5jdXJyZW50VXJsVHJlZSksdXJsQWZ0ZXJSZWRpcmVjdHM6dGhpcy51cmxIYW5kbGluZ1N0cmF0ZWd5LmV4dHJhY3QodGhpcy5jdXJyZW50VXJsVHJlZSkscmF3VXJsOnRoaXMuY3VycmVudFVybFRyZWUsZXh0cmFzOnt9LHJlc29sdmU6bnVsbCxyZWplY3Q6bnVsbCxwcm9taXNlOlByb21pc2UucmVzb2x2ZSghMCksc291cmNlOiJpbXBlcmF0aXZlIixyZXN0b3JlZFN0YXRlOm51bGwsY3VycmVudFNuYXBzaG90OnRoaXMucm91dGVyU3RhdGUuc25hcHNob3QsdGFyZ2V0U25hcHNob3Q6bnVsbCxjdXJyZW50Um91dGVyU3RhdGU6dGhpcy5yb3V0ZXJTdGF0ZSx0YXJnZXRSb3V0ZXJTdGF0ZTpudWxsLGd1YXJkczp7Y2FuQWN0aXZhdGVDaGVja3M6W10sY2FuRGVhY3RpdmF0ZUNoZWNrczpbXX0sZ3VhcmRzUmVzdWx0Om51bGx9KSx0aGlzLm5hdmlnYXRpb25zPXRoaXMuc2V0dXBOYXZpZ2F0aW9ucyh0aGlzLnRyYW5zaXRpb25zKSx0aGlzLnByb2Nlc3NOYXZpZ2F0aW9ucygpfXNldHVwTmF2aWdhdGlvbnModCl7Y29uc3QgZT10aGlzLmV2ZW50cztyZXR1cm4gdC5waXBlKEFkKHQ9PjAhPT10LmlkKSxTKHQ9Pk9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSx0KSx7ZXh0cmFjdGVkVXJsOnRoaXMudXJsSGFuZGxpbmdTdHJhdGVneS5leHRyYWN0KHQucmF3VXJsKX0pKSxYYyh0PT57bGV0IG49ITEscj0hMTtyZXR1cm4gcWModCkucGlwZShZZCh0PT57dGhpcy5jdXJyZW50TmF2aWdhdGlvbj17aWQ6dC5pZCxpbml0aWFsVXJsOnQuY3VycmVudFJhd1VybCxleHRyYWN0ZWRVcmw6dC5leHRyYWN0ZWRVcmwsdHJpZ2dlcjp0LnNvdXJjZSxleHRyYXM6dC5leHRyYXMscHJldmlvdXNOYXZpZ2F0aW9uOnRoaXMubGFzdFN1Y2Nlc3NmdWxOYXZpZ2F0aW9uP09iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSx0aGlzLmxhc3RTdWNjZXNzZnVsTmF2aWdhdGlvbikse3ByZXZpb3VzTmF2aWdhdGlvbjpudWxsfSk6bnVsbH19KSxYYyh0PT57Y29uc3Qgbj0hdGhpcy5uYXZpZ2F0ZWR8fHQuZXh0cmFjdGVkVXJsLnRvU3RyaW5nKCkhPT10aGlzLmJyb3dzZXJVcmxUcmVlLnRvU3RyaW5nKCk7aWYoKCJyZWxvYWQiPT09dGhpcy5vblNhbWVVcmxOYXZpZ2F0aW9ufHxuKSYmdGhpcy51cmxIYW5kbGluZ1N0cmF0ZWd5LnNob3VsZFByb2Nlc3NVcmwodC5yYXdVcmwpKXJldHVybiBxYyh0KS5waXBlKFhjKHQ9Pntjb25zdCBuPXRoaXMudHJhbnNpdGlvbnMuZ2V0VmFsdWUoKTtyZXR1cm4gZS5uZXh0KG5ldyBycCh0LmlkLHRoaXMuc2VyaWFsaXplVXJsKHQuZXh0cmFjdGVkVXJsKSx0LnNvdXJjZSx0LnJlc3RvcmVkU3RhdGUpKSxuIT09dGhpcy50cmFuc2l0aW9ucy5nZXRWYWx1ZSgpPyRjOlt0XX0pLFhjKHQ9PlByb21pc2UucmVzb2x2ZSh0KSksKHI9dGhpcy5uZ01vZHVsZS5pbmplY3RvcixzPXRoaXMuY29uZmlnTG9hZGVyLGk9dGhpcy51cmxTZXJpYWxpemVyLG89dGhpcy5jb25maWcsZnVuY3Rpb24odCl7cmV0dXJuIHQucGlwZShYYyh0PT5mdW5jdGlvbih0LGUsbixyLHMpe3JldHVybiBuZXcgamYodCxlLG4scixzKS5hcHBseSgpfShyLHMsaSx0LmV4dHJhY3RlZFVybCxvKS5waXBlKFMoZT0+T2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LHQpLHt1cmxBZnRlclJlZGlyZWN0czplfSkpKSkpfSksWWQodD0+e3RoaXMuY3VycmVudE5hdmlnYXRpb249T2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LHRoaXMuY3VycmVudE5hdmlnYXRpb24pLHtmaW5hbFVybDp0LnVybEFmdGVyUmVkaXJlY3RzfSl9KSxmdW5jdGlvbih0LGUsbixyLHMpe3JldHVybiBmdW5jdGlvbihpKXtyZXR1cm4gaS5waXBlKEwoaT0+ZnVuY3Rpb24odCxlLG4scixzPSJlbXB0eU9ubHkiLGk9ImxlZ2FjeSIpe3JldHVybiBuZXcgWWYodCxlLG4scixzLGkpLnJlY29nbml6ZSgpfSh0LGUsaS51cmxBZnRlclJlZGlyZWN0cyxuKGkudXJsQWZ0ZXJSZWRpcmVjdHMpLHIscykucGlwZShTKHQ9Pk9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSxpKSx7dGFyZ2V0U25hcHNob3Q6dH0pKSkpKX19KHRoaXMucm9vdENvbXBvbmVudFR5cGUsdGhpcy5jb25maWcsdD0+dGhpcy5zZXJpYWxpemVVcmwodCksdGhpcy5wYXJhbXNJbmhlcml0YW5jZVN0cmF0ZWd5LHRoaXMucmVsYXRpdmVMaW5rUmVzb2x1dGlvbiksWWQodD0+eyJlYWdlciI9PT10aGlzLnVybFVwZGF0ZVN0cmF0ZWd5JiYodC5leHRyYXMuc2tpcExvY2F0aW9uQ2hhbmdlfHx0aGlzLnNldEJyb3dzZXJVcmwodC51cmxBZnRlclJlZGlyZWN0cywhIXQuZXh0cmFzLnJlcGxhY2VVcmwsdC5pZCx0LmV4dHJhcy5zdGF0ZSksdGhpcy5icm93c2VyVXJsVHJlZT10LnVybEFmdGVyUmVkaXJlY3RzKX0pLFlkKHQ9Pntjb25zdCBuPW5ldyBhcCh0LmlkLHRoaXMuc2VyaWFsaXplVXJsKHQuZXh0cmFjdGVkVXJsKSx0aGlzLnNlcmlhbGl6ZVVybCh0LnVybEFmdGVyUmVkaXJlY3RzKSx0LnRhcmdldFNuYXBzaG90KTtlLm5leHQobil9KSk7dmFyIHIscyxpLG87aWYobiYmdGhpcy5yYXdVcmxUcmVlJiZ0aGlzLnVybEhhbmRsaW5nU3RyYXRlZ3kuc2hvdWxkUHJvY2Vzc1VybCh0aGlzLnJhd1VybFRyZWUpKXtjb25zdHtpZDpuLGV4dHJhY3RlZFVybDpyLHNvdXJjZTpzLHJlc3RvcmVkU3RhdGU6aSxleHRyYXM6b309dCxhPW5ldyBycChuLHRoaXMuc2VyaWFsaXplVXJsKHIpLHMsaSk7ZS5uZXh0KGEpO2NvbnN0IGw9cmYocix0aGlzLnJvb3RDb21wb25lbnRUeXBlKS5zbmFwc2hvdDtyZXR1cm4gcWMoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LHQpLHt0YXJnZXRTbmFwc2hvdDpsLHVybEFmdGVyUmVkaXJlY3RzOnIsZXh0cmFzOk9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSxvKSx7c2tpcExvY2F0aW9uQ2hhbmdlOiExLHJlcGxhY2VVcmw6ITF9KX0pKX1yZXR1cm4gdGhpcy5yYXdVcmxUcmVlPXQucmF3VXJsLHRoaXMuYnJvd3NlclVybFRyZWU9dC51cmxBZnRlclJlZGlyZWN0cyx0LnJlc29sdmUobnVsbCksJGN9KSxpZyh0PT57Y29uc3R7dGFyZ2V0U25hcHNob3Q6ZSxpZDpuLGV4dHJhY3RlZFVybDpyLHJhd1VybDpzLGV4dHJhczp7c2tpcExvY2F0aW9uQ2hhbmdlOmkscmVwbGFjZVVybDpvfX09dDtyZXR1cm4gdGhpcy5ob29rcy5iZWZvcmVQcmVhY3RpdmF0aW9uKGUse25hdmlnYXRpb25JZDpuLGFwcGxpZWRVcmxUcmVlOnIscmF3VXJsVHJlZTpzLHNraXBMb2NhdGlvbkNoYW5nZTohIWkscmVwbGFjZVVybDohIW99KX0pLFlkKHQ9Pntjb25zdCBlPW5ldyBscCh0LmlkLHRoaXMuc2VyaWFsaXplVXJsKHQuZXh0cmFjdGVkVXJsKSx0aGlzLnNlcmlhbGl6ZVVybCh0LnVybEFmdGVyUmVkaXJlY3RzKSx0LnRhcmdldFNuYXBzaG90KTt0aGlzLnRyaWdnZXJFdmVudChlKX0pLFModD0+T2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LHQpLHtndWFyZHM6JGYodC50YXJnZXRTbmFwc2hvdCx0LmN1cnJlbnRTbmFwc2hvdCx0aGlzLnJvb3RDb250ZXh0cyl9KSksZnVuY3Rpb24odCxlKXtyZXR1cm4gZnVuY3Rpb24obil7cmV0dXJuIG4ucGlwZShMKG49Pntjb25zdHt0YXJnZXRTbmFwc2hvdDpyLGN1cnJlbnRTbmFwc2hvdDpzLGd1YXJkczp7Y2FuQWN0aXZhdGVDaGVja3M6aSxjYW5EZWFjdGl2YXRlQ2hlY2tzOm99fT1uO3JldHVybiAwPT09by5sZW5ndGgmJjA9PT1pLmxlbmd0aD9xYyhPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sbikse2d1YXJkc1Jlc3VsdDohMH0pKTpmdW5jdGlvbih0LGUsbixyKXtyZXR1cm4gaih0KS5waXBlKEwodD0+ZnVuY3Rpb24odCxlLG4scixzKXtjb25zdCBpPWUmJmUucm91dGVDb25maWc/ZS5yb3V0ZUNvbmZpZy5jYW5EZWFjdGl2YXRlOm51bGw7cmV0dXJuIGkmJjAhPT1pLmxlbmd0aD9xYyhpLm1hcChpPT57Y29uc3Qgbz16ZihpLGUscyk7bGV0IGE7aWYoZnVuY3Rpb24odCl7cmV0dXJuIHQmJnhmKHQuY2FuRGVhY3RpdmF0ZSl9KG8pKWE9VHAoby5jYW5EZWFjdGl2YXRlKHQsZSxuLHIpKTtlbHNle2lmKCF4ZihvKSl0aHJvdyBuZXcgRXJyb3IoIkludmFsaWQgQ2FuRGVhY3RpdmF0ZSBndWFyZCIpO2E9VHAobyh0LGUsbixyKSl9cmV0dXJuIGEucGlwZShLZCgpKX0pKS5waXBlKEZmKCkpOnFjKCEwKX0odC5jb21wb25lbnQsdC5yb3V0ZSxuLGUscikpLEtkKHQ9PiEwIT09dCwhMCkpfShvLHIscyx0KS5waXBlKEwobj0+biYmImJvb2xlYW4iPT10eXBlb2Ygbj9mdW5jdGlvbih0LGUsbixyKXtyZXR1cm4gaihlKS5waXBlKEdkKGU9PmooW1pmKGUucm91dGUucGFyZW50LHIpLFdmKGUucm91dGUsciksS2YodCxlLnBhdGgsbiksR2YodCxlLnJvdXRlLG4pXSkucGlwZShFZCgpLEtkKHQ9PiEwIT09dCwhMCkpKSxLZCh0PT4hMCE9PXQsITApKX0ocixpLHQsZSk6cWMobikpLFModD0+T2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LG4pLHtndWFyZHNSZXN1bHQ6dH0pKSl9KSl9fSh0aGlzLm5nTW9kdWxlLmluamVjdG9yLHQ9PnRoaXMudHJpZ2dlckV2ZW50KHQpKSxZZCh0PT57aWYoa2YodC5ndWFyZHNSZXN1bHQpKXtjb25zdCBlPUNwKGBSZWRpcmVjdGluZyB0byAiJHt0aGlzLnNlcmlhbGl6ZVVybCh0Lmd1YXJkc1Jlc3VsdCl9ImApO3Rocm93IGUudXJsPXQuZ3VhcmRzUmVzdWx0LGV9fSksWWQodD0+e2NvbnN0IGU9bmV3IHVwKHQuaWQsdGhpcy5zZXJpYWxpemVVcmwodC5leHRyYWN0ZWRVcmwpLHRoaXMuc2VyaWFsaXplVXJsKHQudXJsQWZ0ZXJSZWRpcmVjdHMpLHQudGFyZ2V0U25hcHNob3QsISF0Lmd1YXJkc1Jlc3VsdCk7dGhpcy50cmlnZ2VyRXZlbnQoZSl9KSxBZCh0PT57aWYoIXQuZ3VhcmRzUmVzdWx0KXt0aGlzLnJlc2V0VXJsVG9DdXJyZW50VXJsVHJlZSgpO2NvbnN0IG49bmV3IGlwKHQuaWQsdGhpcy5zZXJpYWxpemVVcmwodC5leHRyYWN0ZWRVcmwpLCIiKTtyZXR1cm4gZS5uZXh0KG4pLHQucmVzb2x2ZSghMSksITF9cmV0dXJuITB9KSxpZyh0PT57aWYodC5ndWFyZHMuY2FuQWN0aXZhdGVDaGVja3MubGVuZ3RoKXJldHVybiBxYyh0KS5waXBlKFlkKHQ9Pntjb25zdCBlPW5ldyBjcCh0LmlkLHRoaXMuc2VyaWFsaXplVXJsKHQuZXh0cmFjdGVkVXJsKSx0aGlzLnNlcmlhbGl6ZVVybCh0LnVybEFmdGVyUmVkaXJlY3RzKSx0LnRhcmdldFNuYXBzaG90KTt0aGlzLnRyaWdnZXJFdmVudChlKX0pLFhjKHQ9PntsZXQgbj0hMTtyZXR1cm4gcWModCkucGlwZSgocj10aGlzLnBhcmFtc0luaGVyaXRhbmNlU3RyYXRlZ3kscz10aGlzLm5nTW9kdWxlLmluamVjdG9yLGZ1bmN0aW9uKHQpe3JldHVybiB0LnBpcGUoTCh0PT57Y29uc3R7dGFyZ2V0U25hcHNob3Q6ZSxndWFyZHM6e2NhbkFjdGl2YXRlQ2hlY2tzOm59fT10O2lmKCFuLmxlbmd0aClyZXR1cm4gcWModCk7bGV0IGk9MDtyZXR1cm4gaihuKS5waXBlKEdkKHQ9PmZ1bmN0aW9uKHQsZSxuLHIpe3JldHVybiBmdW5jdGlvbih0LGUsbixyKXtjb25zdCBzPU9iamVjdC5rZXlzKHQpO2lmKDA9PT1zLmxlbmd0aClyZXR1cm4gcWMoe30pO2NvbnN0IGk9e307cmV0dXJuIGoocykucGlwZShMKHM9PmZ1bmN0aW9uKHQsZSxuLHIpe2NvbnN0IHM9emYodCxlLHIpO3JldHVybiBUcChzLnJlc29sdmU/cy5yZXNvbHZlKGUsbik6cyhlLG4pKX0odFtzXSxlLG4scikucGlwZShZZCh0PT57aVtzXT10fSkpKSxUZCgxKSxMKCgpPT5PYmplY3Qua2V5cyhpKS5sZW5ndGg9PT1zLmxlbmd0aD9xYyhpKTokYykpfSh0Ll9yZXNvbHZlLHQsZSxyKS5waXBlKFMoZT0+KHQuX3Jlc29sdmVkRGF0YT1lLHQuZGF0YT1PYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sdC5kYXRhKSxvZih0LG4pLnJlc29sdmUpLG51bGwpKSl9KHQucm91dGUsZSxyLHMpKSxZZCgoKT0+aSsrKSxUZCgxKSxMKGU9Pmk9PT1uLmxlbmd0aD9xYyh0KTokYykpfSkpfSksWWQoe25leHQ6KCk9Pm49ITAsY29tcGxldGU6KCk9PntpZighbil7Y29uc3Qgbj1uZXcgaXAodC5pZCx0aGlzLnNlcmlhbGl6ZVVybCh0LmV4dHJhY3RlZFVybCksIkF0IGxlYXN0IG9uZSByb3V0ZSByZXNvbHZlciBkaWRuJ3QgZW1pdCBhbnkgdmFsdWUuIik7ZS5uZXh0KG4pLHQucmVzb2x2ZSghMSl9fX0pKTt2YXIgcixzfSksWWQodD0+e2NvbnN0IGU9bmV3IGhwKHQuaWQsdGhpcy5zZXJpYWxpemVVcmwodC5leHRyYWN0ZWRVcmwpLHRoaXMuc2VyaWFsaXplVXJsKHQudXJsQWZ0ZXJSZWRpcmVjdHMpLHQudGFyZ2V0U25hcHNob3QpO3RoaXMudHJpZ2dlckV2ZW50KGUpfSkpfSksaWcodD0+e2NvbnN0e3RhcmdldFNuYXBzaG90OmUsaWQ6bixleHRyYWN0ZWRVcmw6cixyYXdVcmw6cyxleHRyYXM6e3NraXBMb2NhdGlvbkNoYW5nZTppLHJlcGxhY2VVcmw6b319PXQ7cmV0dXJuIHRoaXMuaG9va3MuYWZ0ZXJQcmVhY3RpdmF0aW9uKGUse25hdmlnYXRpb25JZDpuLGFwcGxpZWRVcmxUcmVlOnIscmF3VXJsVHJlZTpzLHNraXBMb2NhdGlvbkNoYW5nZTohIWkscmVwbGFjZVVybDohIW99KX0pLFModD0+e2NvbnN0IGU9ZnVuY3Rpb24odCxlLG4pe2NvbnN0IHI9ZnVuY3Rpb24gdChlLG4scil7aWYociYmZS5zaG91bGRSZXVzZVJvdXRlKG4udmFsdWUsci52YWx1ZS5zbmFwc2hvdCkpe2NvbnN0IHM9ci52YWx1ZTtzLl9mdXR1cmVTbmFwc2hvdD1uLnZhbHVlO2NvbnN0IGk9ZnVuY3Rpb24oZSxuLHIpe3JldHVybiBuLmNoaWxkcmVuLm1hcChuPT57Zm9yKGNvbnN0IHMgb2Ygci5jaGlsZHJlbilpZihlLnNob3VsZFJldXNlUm91dGUocy52YWx1ZS5zbmFwc2hvdCxuLnZhbHVlKSlyZXR1cm4gdChlLG4scyk7cmV0dXJuIHQoZSxuKX0pfShlLG4scik7cmV0dXJuIG5ldyB0ZihzLGkpfXtjb25zdCByPWUucmV0cmlldmUobi52YWx1ZSk7aWYocil7Y29uc3QgdD1yLnJvdXRlO3JldHVybiBmdW5jdGlvbiB0KGUsbil7aWYoZS52YWx1ZS5yb3V0ZUNvbmZpZyE9PW4udmFsdWUucm91dGVDb25maWcpdGhyb3cgbmV3IEVycm9yKCJDYW5ub3QgcmVhdHRhY2ggQWN0aXZhdGVkUm91dGVTbmFwc2hvdCBjcmVhdGVkIGZyb20gYSBkaWZmZXJlbnQgcm91dGUiKTtpZihlLmNoaWxkcmVuLmxlbmd0aCE9PW4uY2hpbGRyZW4ubGVuZ3RoKXRocm93IG5ldyBFcnJvcigiQ2Fubm90IHJlYXR0YWNoIEFjdGl2YXRlZFJvdXRlU25hcHNob3Qgd2l0aCBhIGRpZmZlcmVudCBudW1iZXIgb2YgY2hpbGRyZW4iKTtuLnZhbHVlLl9mdXR1cmVTbmFwc2hvdD1lLnZhbHVlO2ZvcihsZXQgcj0wO3I8ZS5jaGlsZHJlbi5sZW5ndGg7KytyKXQoZS5jaGlsZHJlbltyXSxuLmNoaWxkcmVuW3JdKX0obix0KSx0fXtjb25zdCByPW5ldyBzZihuZXcgZ2QoKHM9bi52YWx1ZSkudXJsKSxuZXcgZ2Qocy5wYXJhbXMpLG5ldyBnZChzLnF1ZXJ5UGFyYW1zKSxuZXcgZ2Qocy5mcmFnbWVudCksbmV3IGdkKHMuZGF0YSkscy5vdXRsZXQscy5jb21wb25lbnQscyksaT1uLmNoaWxkcmVuLm1hcChuPT50KGUsbikpO3JldHVybiBuZXcgdGYocixpKX19dmFyIHN9KHQsZS5fcm9vdCxuP24uX3Jvb3Q6dm9pZCAwKTtyZXR1cm4gbmV3IG5mKHIsZSl9KHRoaXMucm91dGVSZXVzZVN0cmF0ZWd5LHQudGFyZ2V0U25hcHNob3QsdC5jdXJyZW50Um91dGVyU3RhdGUpO3JldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sdCkse3RhcmdldFJvdXRlclN0YXRlOmV9KX0pLFlkKHQ9Pnt0aGlzLmN1cnJlbnRVcmxUcmVlPXQudXJsQWZ0ZXJSZWRpcmVjdHMsdGhpcy5yYXdVcmxUcmVlPXRoaXMudXJsSGFuZGxpbmdTdHJhdGVneS5tZXJnZSh0aGlzLmN1cnJlbnRVcmxUcmVlLHQucmF3VXJsKSx0aGlzLnJvdXRlclN0YXRlPXQudGFyZ2V0Um91dGVyU3RhdGUsImRlZmVycmVkIj09PXRoaXMudXJsVXBkYXRlU3RyYXRlZ3kmJih0LmV4dHJhcy5za2lwTG9jYXRpb25DaGFuZ2V8fHRoaXMuc2V0QnJvd3NlclVybCh0aGlzLnJhd1VybFRyZWUsISF0LmV4dHJhcy5yZXBsYWNlVXJsLHQuaWQsdC5leHRyYXMuc3RhdGUpLHRoaXMuYnJvd3NlclVybFRyZWU9dC51cmxBZnRlclJlZGlyZWN0cyl9KSwoaT10aGlzLnJvb3RDb250ZXh0cyxvPXRoaXMucm91dGVSZXVzZVN0cmF0ZWd5LGE9dD0+dGhpcy50cmlnZ2VyRXZlbnQodCksUyh0PT4obmV3IEVmKG8sdC50YXJnZXRSb3V0ZXJTdGF0ZSx0LmN1cnJlbnRSb3V0ZXJTdGF0ZSxhKS5hY3RpdmF0ZShpKSx0KSkpLFlkKHtuZXh0KCl7bj0hMH0sY29tcGxldGUoKXtuPSEwfX0pLChzPSgpPT57aWYoIW4mJiFyKXt0aGlzLnJlc2V0VXJsVG9DdXJyZW50VXJsVHJlZSgpO2NvbnN0IG49bmV3IGlwKHQuaWQsdGhpcy5zZXJpYWxpemVVcmwodC5leHRyYWN0ZWRVcmwpLGBOYXZpZ2F0aW9uIElEICR7dC5pZH0gaXMgbm90IGVxdWFsIHRvIHRoZSBjdXJyZW50IG5hdmlnYXRpb24gaWQgJHt0aGlzLm5hdmlnYXRpb25JZH1gKTtlLm5leHQobiksdC5yZXNvbHZlKCExKX10aGlzLmN1cnJlbnROYXZpZ2F0aW9uPW51bGx9LHQ9PnQubGlmdChuZXcgdHAocykpKSxxZChuPT57aWYocj0hMCwocz1uKSYmcy5uZ05hdmlnYXRpb25DYW5jZWxpbmdFcnJvcil7Y29uc3Qgcj1rZihuLnVybCk7cnx8KHRoaXMubmF2aWdhdGVkPSEwLHRoaXMucmVzZXRTdGF0ZUFuZFVybCh0LmN1cnJlbnRSb3V0ZXJTdGF0ZSx0LmN1cnJlbnRVcmxUcmVlLHQucmF3VXJsKSk7Y29uc3Qgcz1uZXcgaXAodC5pZCx0aGlzLnNlcmlhbGl6ZVVybCh0LmV4dHJhY3RlZFVybCksbi5tZXNzYWdlKTtlLm5leHQocykscj9zZXRUaW1lb3V0KCgpPT57Y29uc3QgZT10aGlzLnVybEhhbmRsaW5nU3RyYXRlZ3kubWVyZ2Uobi51cmwsdGhpcy5yYXdVcmxUcmVlKTtyZXR1cm4gdGhpcy5zY2hlZHVsZU5hdmlnYXRpb24oZSwiaW1wZXJhdGl2ZSIsbnVsbCx7c2tpcExvY2F0aW9uQ2hhbmdlOnQuZXh0cmFzLnNraXBMb2NhdGlvbkNoYW5nZSxyZXBsYWNlVXJsOiJlYWdlciI9PT10aGlzLnVybFVwZGF0ZVN0cmF0ZWd5fSx7cmVzb2x2ZTp0LnJlc29sdmUscmVqZWN0OnQucmVqZWN0LHByb21pc2U6dC5wcm9taXNlfSl9LDApOnQucmVzb2x2ZSghMSl9ZWxzZXt0aGlzLnJlc2V0U3RhdGVBbmRVcmwodC5jdXJyZW50Um91dGVyU3RhdGUsdC5jdXJyZW50VXJsVHJlZSx0LnJhd1VybCk7Y29uc3Qgcj1uZXcgb3AodC5pZCx0aGlzLnNlcmlhbGl6ZVVybCh0LmV4dHJhY3RlZFVybCksbik7ZS5uZXh0KHIpO3RyeXt0LnJlc29sdmUodGhpcy5lcnJvckhhbmRsZXIobikpfWNhdGNoKGkpe3QucmVqZWN0KGkpfX12YXIgcztyZXR1cm4gJGN9KSk7dmFyIHMsaSxvLGF9KSl9cmVzZXRSb290Q29tcG9uZW50VHlwZSh0KXt0aGlzLnJvb3RDb21wb25lbnRUeXBlPXQsdGhpcy5yb3V0ZXJTdGF0ZS5yb290LmNvbXBvbmVudD10aGlzLnJvb3RDb21wb25lbnRUeXBlfWdldFRyYW5zaXRpb24oKXtjb25zdCB0PXRoaXMudHJhbnNpdGlvbnMudmFsdWU7cmV0dXJuIHQudXJsQWZ0ZXJSZWRpcmVjdHM9dGhpcy5icm93c2VyVXJsVHJlZSx0fXNldFRyYW5zaXRpb24odCl7dGhpcy50cmFuc2l0aW9ucy5uZXh0KE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSx0aGlzLmdldFRyYW5zaXRpb24oKSksdCkpfWluaXRpYWxOYXZpZ2F0aW9uKCl7dGhpcy5zZXRVcExvY2F0aW9uQ2hhbmdlTGlzdGVuZXIoKSwwPT09dGhpcy5uYXZpZ2F0aW9uSWQmJnRoaXMubmF2aWdhdGVCeVVybCh0aGlzLmxvY2F0aW9uLnBhdGgoITApLHtyZXBsYWNlVXJsOiEwfSl9c2V0VXBMb2NhdGlvbkNoYW5nZUxpc3RlbmVyKCl7dGhpcy5sb2NhdGlvblN1YnNjcmlwdGlvbnx8KHRoaXMubG9jYXRpb25TdWJzY3JpcHRpb249dGhpcy5sb2NhdGlvbi5zdWJzY3JpYmUodD0+e2NvbnN0IGU9dGhpcy5leHRyYWN0TG9jYXRpb25DaGFuZ2VJbmZvRnJvbUV2ZW50KHQpO3RoaXMuc2hvdWxkU2NoZWR1bGVOYXZpZ2F0aW9uKHRoaXMubGFzdExvY2F0aW9uQ2hhbmdlSW5mbyxlKSYmc2V0VGltZW91dCgoKT0+e2NvbnN0e3NvdXJjZTp0LHN0YXRlOm4sdXJsVHJlZTpyfT1lLHM9e3JlcGxhY2VVcmw6ITB9O2lmKG4pe2NvbnN0IHQ9T2JqZWN0LmFzc2lnbih7fSxuKTtkZWxldGUgdC5uYXZpZ2F0aW9uSWQsMCE9PU9iamVjdC5rZXlzKHQpLmxlbmd0aCYmKHMuc3RhdGU9dCl9dGhpcy5zY2hlZHVsZU5hdmlnYXRpb24ocix0LG4scyl9LDApLHRoaXMubGFzdExvY2F0aW9uQ2hhbmdlSW5mbz1lfSkpfWV4dHJhY3RMb2NhdGlvbkNoYW5nZUluZm9Gcm9tRXZlbnQodCl7dmFyIGU7cmV0dXJue3NvdXJjZToicG9wc3RhdGUiPT09dC50eXBlPyJwb3BzdGF0ZSI6Imhhc2hjaGFuZ2UiLHVybFRyZWU6dGhpcy5wYXJzZVVybCh0LnVybCksc3RhdGU6KG51bGw9PT0oZT10LnN0YXRlKXx8dm9pZCAwPT09ZT92b2lkIDA6ZS5uYXZpZ2F0aW9uSWQpP3Quc3RhdGU6bnVsbCx0cmFuc2l0aW9uSWQ6dGhpcy5nZXRUcmFuc2l0aW9uKCkuaWR9fXNob3VsZFNjaGVkdWxlTmF2aWdhdGlvbih0LGUpe2lmKCF0KXJldHVybiEwO2NvbnN0IG49ZS51cmxUcmVlLnRvU3RyaW5nKCk9PT10LnVybFRyZWUudG9TdHJpbmcoKTtyZXR1cm4hKGUudHJhbnNpdGlvbklkPT09dC50cmFuc2l0aW9uSWQmJm4mJigiaGFzaGNoYW5nZSI9PT1lLnNvdXJjZSYmInBvcHN0YXRlIj09PXQuc291cmNlfHwicG9wc3RhdGUiPT09ZS5zb3VyY2UmJiJoYXNoY2hhbmdlIj09PXQuc291cmNlKSl9Z2V0IHVybCgpe3JldHVybiB0aGlzLnNlcmlhbGl6ZVVybCh0aGlzLmN1cnJlbnRVcmxUcmVlKX1nZXRDdXJyZW50TmF2aWdhdGlvbigpe3JldHVybiB0aGlzLmN1cnJlbnROYXZpZ2F0aW9ufXRyaWdnZXJFdmVudCh0KXt0aGlzLmV2ZW50cy5uZXh0KHQpfXJlc2V0Q29uZmlnKHQpe2xnKHQpLHRoaXMuY29uZmlnPXQubWFwKGhnKSx0aGlzLm5hdmlnYXRlZD0hMSx0aGlzLmxhc3RTdWNjZXNzZnVsSWQ9LTF9bmdPbkRlc3Ryb3koKXt0aGlzLmRpc3Bvc2UoKX1kaXNwb3NlKCl7dGhpcy5sb2NhdGlvblN1YnNjcmlwdGlvbiYmKHRoaXMubG9jYXRpb25TdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKSx0aGlzLmxvY2F0aW9uU3Vic2NyaXB0aW9uPXZvaWQgMCl9Y3JlYXRlVXJsVHJlZSh0LGU9e30pe2NvbnN0e3JlbGF0aXZlVG86bixxdWVyeVBhcmFtczpyLGZyYWdtZW50OnMscHJlc2VydmVRdWVyeVBhcmFtczppLHF1ZXJ5UGFyYW1zSGFuZGxpbmc6byxwcmVzZXJ2ZUZyYWdtZW50OmF9PWU7eXIoKSYmaSYmY29uc29sZSYmY29uc29sZS53YXJuJiZjb25zb2xlLndhcm4oInByZXNlcnZlUXVlcnlQYXJhbXMgaXMgZGVwcmVjYXRlZCwgdXNlIHF1ZXJ5UGFyYW1zSGFuZGxpbmcgaW5zdGVhZC4iKTtjb25zdCBsPW58fHRoaXMucm91dGVyU3RhdGUucm9vdCx1PWE/dGhpcy5jdXJyZW50VXJsVHJlZS5mcmFnbWVudDpzO2xldCBjPW51bGw7aWYobylzd2l0Y2gobyl7Y2FzZSJtZXJnZSI6Yz1PYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sdGhpcy5jdXJyZW50VXJsVHJlZS5xdWVyeVBhcmFtcykscik7YnJlYWs7Y2FzZSJwcmVzZXJ2ZSI6Yz10aGlzLmN1cnJlbnRVcmxUcmVlLnF1ZXJ5UGFyYW1zO2JyZWFrO2RlZmF1bHQ6Yz1yfHxudWxsfWVsc2UgYz1pP3RoaXMuY3VycmVudFVybFRyZWUucXVlcnlQYXJhbXM6cnx8bnVsbDtyZXR1cm4gbnVsbCE9PWMmJihjPXRoaXMucmVtb3ZlRW1wdHlQcm9wcyhjKSksZnVuY3Rpb24odCxlLG4scixzKXtpZigwPT09bi5sZW5ndGgpcmV0dXJuIGZmKGUucm9vdCxlLnJvb3QsZSxyLHMpO2NvbnN0IGk9ZnVuY3Rpb24odCl7aWYoInN0cmluZyI9PXR5cGVvZiB0WzBdJiYxPT09dC5sZW5ndGgmJiIvIj09PXRbMF0pcmV0dXJuIG5ldyBnZighMCwwLHQpO2xldCBlPTAsbj0hMTtjb25zdCByPXQucmVkdWNlKCh0LHIscyk9PntpZigib2JqZWN0Ij09dHlwZW9mIHImJm51bGwhPXIpe2lmKHIub3V0bGV0cyl7Y29uc3QgZT17fTtyZXR1cm4ga3Aoci5vdXRsZXRzLCh0LG4pPT57ZVtuXT0ic3RyaW5nIj09dHlwZW9mIHQ/dC5zcGxpdCgiLyIpOnR9KSxbLi4udCx7b3V0bGV0czplfV19aWYoci5zZWdtZW50UGF0aClyZXR1cm5bLi4udCxyLnNlZ21lbnRQYXRoXX1yZXR1cm4ic3RyaW5nIiE9dHlwZW9mIHI/Wy4uLnQscl06MD09PXM/KHIuc3BsaXQoIi8iKS5mb3JFYWNoKChyLHMpPT57MD09cyYmIi4iPT09cnx8KDA9PXMmJiIiPT09cj9uPSEwOiIuLiI9PT1yP2UrKzoiIiE9ciYmdC5wdXNoKHIpKX0pLHQpOlsuLi50LHJdfSxbXSk7cmV0dXJuIG5ldyBnZihuLGUscil9KG4pO2lmKGkudG9Sb290KCkpcmV0dXJuIGZmKGUucm9vdCxuZXcgUHAoW10se30pLGUscixzKTtjb25zdCBvPWZ1bmN0aW9uKHQsZSxuKXtpZih0LmlzQWJzb2x1dGUpcmV0dXJuIG5ldyBtZihlLnJvb3QsITAsMCk7aWYoLTE9PT1uLnNuYXBzaG90Ll9sYXN0UGF0aEluZGV4KXtjb25zdCB0PW4uc25hcHNob3QuX3VybFNlZ21lbnQ7cmV0dXJuIG5ldyBtZih0LHQ9PT1lLnJvb3QsMCl9Y29uc3Qgcj1wZih0LmNvbW1hbmRzWzBdKT8wOjE7cmV0dXJuIGZ1bmN0aW9uKHQsZSxuKXtsZXQgcj10LHM9ZSxpPW47Zm9yKDtpPnM7KXtpZihpLT1zLHI9ci5wYXJlbnQsIXIpdGhyb3cgbmV3IEVycm9yKCJJbnZhbGlkIG51bWJlciBvZiAnLi4vJyIpO3M9ci5zZWdtZW50cy5sZW5ndGh9cmV0dXJuIG5ldyBtZihyLCExLHMtaSl9KG4uc25hcHNob3QuX3VybFNlZ21lbnQsbi5zbmFwc2hvdC5fbGFzdFBhdGhJbmRleCtyLHQubnVtYmVyT2ZEb3VibGVEb3RzKX0oaSxlLHQpLGE9by5wcm9jZXNzQ2hpbGRyZW4/YmYoby5zZWdtZW50R3JvdXAsby5pbmRleCxpLmNvbW1hbmRzKTp2ZihvLnNlZ21lbnRHcm91cCxvLmluZGV4LGkuY29tbWFuZHMpO3JldHVybiBmZihvLnNlZ21lbnRHcm91cCxhLGUscixzKX0obCx0aGlzLmN1cnJlbnRVcmxUcmVlLHQsYyx1KX1uYXZpZ2F0ZUJ5VXJsKHQsZT17c2tpcExvY2F0aW9uQ2hhbmdlOiExfSl7eXIoKSYmdGhpcy5pc05nWm9uZUVuYWJsZWQmJiFsbC5pc0luQW5ndWxhclpvbmUoKSYmdGhpcy5jb25zb2xlLndhcm4oIk5hdmlnYXRpb24gdHJpZ2dlcmVkIG91dHNpZGUgQW5ndWxhciB6b25lLCBkaWQgeW91IGZvcmdldCB0byBjYWxsICduZ1pvbmUucnVuKCknPyIpO2NvbnN0IG49a2YodCk/dDp0aGlzLnBhcnNlVXJsKHQpLHI9dGhpcy51cmxIYW5kbGluZ1N0cmF0ZWd5Lm1lcmdlKG4sdGhpcy5yYXdVcmxUcmVlKTtyZXR1cm4gdGhpcy5zY2hlZHVsZU5hdmlnYXRpb24ociwiaW1wZXJhdGl2ZSIsbnVsbCxlKX1uYXZpZ2F0ZSh0LGU9e3NraXBMb2NhdGlvbkNoYW5nZTohMX0pe3JldHVybiBmdW5jdGlvbih0KXtmb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKyl7Y29uc3Qgbj10W2VdO2lmKG51bGw9PW4pdGhyb3cgbmV3IEVycm9yKGBUaGUgcmVxdWVzdGVkIHBhdGggY29udGFpbnMgJHtufSBzZWdtZW50IGF0IGluZGV4ICR7ZX1gKX19KHQpLHRoaXMubmF2aWdhdGVCeVVybCh0aGlzLmNyZWF0ZVVybFRyZWUodCxlKSxlKX1zZXJpYWxpemVVcmwodCl7cmV0dXJuIHRoaXMudXJsU2VyaWFsaXplci5zZXJpYWxpemUodCl9cGFyc2VVcmwodCl7bGV0IGU7dHJ5e2U9dGhpcy51cmxTZXJpYWxpemVyLnBhcnNlKHQpfWNhdGNoKG4pe2U9dGhpcy5tYWxmb3JtZWRVcmlFcnJvckhhbmRsZXIobix0aGlzLnVybFNlcmlhbGl6ZXIsdCl9cmV0dXJuIGV9aXNBY3RpdmUodCxlKXtpZihrZih0KSlyZXR1cm4gRnAodGhpcy5jdXJyZW50VXJsVHJlZSx0LGUpO2NvbnN0IG49dGhpcy5wYXJzZVVybCh0KTtyZXR1cm4gRnAodGhpcy5jdXJyZW50VXJsVHJlZSxuLGUpfXJlbW92ZUVtcHR5UHJvcHModCl7cmV0dXJuIE9iamVjdC5rZXlzKHQpLnJlZHVjZSgoZSxuKT0+e2NvbnN0IHI9dFtuXTtyZXR1cm4gbnVsbCE9ciYmKGVbbl09ciksZX0se30pfXByb2Nlc3NOYXZpZ2F0aW9ucygpe3RoaXMubmF2aWdhdGlvbnMuc3Vic2NyaWJlKHQ9Pnt0aGlzLm5hdmlnYXRlZD0hMCx0aGlzLmxhc3RTdWNjZXNzZnVsSWQ9dC5pZCx0aGlzLmV2ZW50cy5uZXh0KG5ldyBzcCh0LmlkLHRoaXMuc2VyaWFsaXplVXJsKHQuZXh0cmFjdGVkVXJsKSx0aGlzLnNlcmlhbGl6ZVVybCh0aGlzLmN1cnJlbnRVcmxUcmVlKSkpLHRoaXMubGFzdFN1Y2Nlc3NmdWxOYXZpZ2F0aW9uPXRoaXMuY3VycmVudE5hdmlnYXRpb24sdGhpcy5jdXJyZW50TmF2aWdhdGlvbj1udWxsLHQucmVzb2x2ZSghMCl9LHQ9Pnt0aGlzLmNvbnNvbGUud2FybigiVW5oYW5kbGVkIE5hdmlnYXRpb24gRXJyb3I6ICIpfSl9c2NoZWR1bGVOYXZpZ2F0aW9uKHQsZSxuLHIscyl7Y29uc3QgaT10aGlzLmdldFRyYW5zaXRpb24oKSxvPSJpbXBlcmF0aXZlIiE9PWUmJiJpbXBlcmF0aXZlIj09PShudWxsPT1pP3ZvaWQgMDppLnNvdXJjZSksYT0odGhpcy5sYXN0U3VjY2Vzc2Z1bElkPT09aS5pZHx8dGhpcy5jdXJyZW50TmF2aWdhdGlvbj9pLnJhd1VybDppLnVybEFmdGVyUmVkaXJlY3RzKS50b1N0cmluZygpPT09dC50b1N0cmluZygpO2lmKG8mJmEpcmV0dXJuIFByb21pc2UucmVzb2x2ZSghMCk7bGV0IGwsdSxjO3M/KGw9cy5yZXNvbHZlLHU9cy5yZWplY3QsYz1zLnByb21pc2UpOmM9bmV3IFByb21pc2UoKHQsZSk9PntsPXQsdT1lfSk7Y29uc3QgaD0rK3RoaXMubmF2aWdhdGlvbklkO3JldHVybiB0aGlzLnNldFRyYW5zaXRpb24oe2lkOmgsc291cmNlOmUscmVzdG9yZWRTdGF0ZTpuLGN1cnJlbnRVcmxUcmVlOnRoaXMuY3VycmVudFVybFRyZWUsY3VycmVudFJhd1VybDp0aGlzLnJhd1VybFRyZWUscmF3VXJsOnQsZXh0cmFzOnIscmVzb2x2ZTpsLHJlamVjdDp1LHByb21pc2U6YyxjdXJyZW50U25hcHNob3Q6dGhpcy5yb3V0ZXJTdGF0ZS5zbmFwc2hvdCxjdXJyZW50Um91dGVyU3RhdGU6dGhpcy5yb3V0ZXJTdGF0ZX0pLGMuY2F0Y2godD0+UHJvbWlzZS5yZWplY3QodCkpfXNldEJyb3dzZXJVcmwodCxlLG4scil7Y29uc3Qgcz10aGlzLnVybFNlcmlhbGl6ZXIuc2VyaWFsaXplKHQpO3I9cnx8e30sdGhpcy5sb2NhdGlvbi5pc0N1cnJlbnRQYXRoRXF1YWxUbyhzKXx8ZT90aGlzLmxvY2F0aW9uLnJlcGxhY2VTdGF0ZShzLCIiLE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSxyKSx7bmF2aWdhdGlvbklkOm59KSk6dGhpcy5sb2NhdGlvbi5nbyhzLCIiLE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSxyKSx7bmF2aWdhdGlvbklkOm59KSl9cmVzZXRTdGF0ZUFuZFVybCh0LGUsbil7dGhpcy5yb3V0ZXJTdGF0ZT10LHRoaXMuY3VycmVudFVybFRyZWU9ZSx0aGlzLnJhd1VybFRyZWU9dGhpcy51cmxIYW5kbGluZ1N0cmF0ZWd5Lm1lcmdlKHRoaXMuY3VycmVudFVybFRyZWUsbiksdGhpcy5yZXNldFVybFRvQ3VycmVudFVybFRyZWUoKX1yZXNldFVybFRvQ3VycmVudFVybFRyZWUoKXt0aGlzLmxvY2F0aW9uLnJlcGxhY2VTdGF0ZSh0aGlzLnVybFNlcmlhbGl6ZXIuc2VyaWFsaXplKHRoaXMucmF3VXJsVHJlZSksIiIse25hdmlnYXRpb25JZDp0aGlzLmxhc3RTdWNjZXNzZnVsSWR9KX19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCkoR3QobmkpLEd0KGpwKSxHdChnZyksR3QodHUpLEd0KHlpKSxHdChUbCksR3QoaWwpLEd0KHZvaWQgMCkpfSx0Llx1MDI3NXByb3Y9dXQoe3Rva2VuOnQsZmFjdG9yeTp0Llx1MDI3NWZhY30pLHR9KSgpLF9nPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IodCxlLG4scixzKXt0aGlzLnBhcmVudENvbnRleHRzPXQsdGhpcy5sb2NhdGlvbj1lLHRoaXMucmVzb2x2ZXI9bix0aGlzLmNoYW5nZURldGVjdG9yPXMsdGhpcy5hY3RpdmF0ZWQ9bnVsbCx0aGlzLl9hY3RpdmF0ZWRSb3V0ZT1udWxsLHRoaXMuYWN0aXZhdGVFdmVudHM9bmV3IENhLHRoaXMuZGVhY3RpdmF0ZUV2ZW50cz1uZXcgQ2EsdGhpcy5uYW1lPXJ8fGJwLHQub25DaGlsZE91dGxldENyZWF0ZWQodGhpcy5uYW1lLHRoaXMpfW5nT25EZXN0cm95KCl7dGhpcy5wYXJlbnRDb250ZXh0cy5vbkNoaWxkT3V0bGV0RGVzdHJveWVkKHRoaXMubmFtZSl9bmdPbkluaXQoKXtpZighdGhpcy5hY3RpdmF0ZWQpe2NvbnN0IHQ9dGhpcy5wYXJlbnRDb250ZXh0cy5nZXRDb250ZXh0KHRoaXMubmFtZSk7dCYmdC5yb3V0ZSYmKHQuYXR0YWNoUmVmP3RoaXMuYXR0YWNoKHQuYXR0YWNoUmVmLHQucm91dGUpOnRoaXMuYWN0aXZhdGVXaXRoKHQucm91dGUsdC5yZXNvbHZlcnx8bnVsbCkpfX1nZXQgaXNBY3RpdmF0ZWQoKXtyZXR1cm4hIXRoaXMuYWN0aXZhdGVkfWdldCBjb21wb25lbnQoKXtpZighdGhpcy5hY3RpdmF0ZWQpdGhyb3cgbmV3IEVycm9yKCJPdXRsZXQgaXMgbm90IGFjdGl2YXRlZCIpO3JldHVybiB0aGlzLmFjdGl2YXRlZC5pbnN0YW5jZX1nZXQgYWN0aXZhdGVkUm91dGUoKXtpZighdGhpcy5hY3RpdmF0ZWQpdGhyb3cgbmV3IEVycm9yKCJPdXRsZXQgaXMgbm90IGFjdGl2YXRlZCIpO3JldHVybiB0aGlzLl9hY3RpdmF0ZWRSb3V0ZX1nZXQgYWN0aXZhdGVkUm91dGVEYXRhKCl7cmV0dXJuIHRoaXMuX2FjdGl2YXRlZFJvdXRlP3RoaXMuX2FjdGl2YXRlZFJvdXRlLnNuYXBzaG90LmRhdGE6e319ZGV0YWNoKCl7aWYoIXRoaXMuYWN0aXZhdGVkKXRocm93IG5ldyBFcnJvcigiT3V0bGV0IGlzIG5vdCBhY3RpdmF0ZWQiKTt0aGlzLmxvY2F0aW9uLmRldGFjaCgpO2NvbnN0IHQ9dGhpcy5hY3RpdmF0ZWQ7cmV0dXJuIHRoaXMuYWN0aXZhdGVkPW51bGwsdGhpcy5fYWN0aXZhdGVkUm91dGU9bnVsbCx0fWF0dGFjaCh0LGUpe3RoaXMuYWN0aXZhdGVkPXQsdGhpcy5fYWN0aXZhdGVkUm91dGU9ZSx0aGlzLmxvY2F0aW9uLmluc2VydCh0Lmhvc3RWaWV3KX1kZWFjdGl2YXRlKCl7aWYodGhpcy5hY3RpdmF0ZWQpe2NvbnN0IHQ9dGhpcy5jb21wb25lbnQ7dGhpcy5hY3RpdmF0ZWQuZGVzdHJveSgpLHRoaXMuYWN0aXZhdGVkPW51bGwsdGhpcy5fYWN0aXZhdGVkUm91dGU9bnVsbCx0aGlzLmRlYWN0aXZhdGVFdmVudHMuZW1pdCh0KX19YWN0aXZhdGVXaXRoKHQsZSl7aWYodGhpcy5pc0FjdGl2YXRlZCl0aHJvdyBuZXcgRXJyb3IoIkNhbm5vdCBhY3RpdmF0ZSBhbiBhbHJlYWR5IGFjdGl2YXRlZCBvdXRsZXQiKTt0aGlzLl9hY3RpdmF0ZWRSb3V0ZT10O2NvbnN0IG49KGU9ZXx8dGhpcy5yZXNvbHZlcikucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkodC5fZnV0dXJlU25hcHNob3Qucm91dGVDb25maWcuY29tcG9uZW50KSxyPXRoaXMucGFyZW50Q29udGV4dHMuZ2V0T3JDcmVhdGVDb250ZXh0KHRoaXMubmFtZSkuY2hpbGRyZW4scz1uZXcgQ2codCxyLHRoaXMubG9jYXRpb24uaW5qZWN0b3IpO3RoaXMuYWN0aXZhdGVkPXRoaXMubG9jYXRpb24uY3JlYXRlQ29tcG9uZW50KG4sdGhpcy5sb2NhdGlvbi5sZW5ndGgscyksdGhpcy5jaGFuZ2VEZXRlY3Rvci5tYXJrRm9yQ2hlY2soKSx0aGlzLmFjdGl2YXRlRXZlbnRzLmVtaXQodGhpcy5hY3RpdmF0ZWQuaW5zdGFuY2UpfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KShSaShnZyksUmkobmEpLFJpKFRvKSwoIm5hbWUiLGZ1bmN0aW9uKHQsZSl7Y29uc3Qgbj10LmF0dHJzO2lmKG4pe2NvbnN0IHQ9bi5sZW5ndGg7bGV0IHI9MDtmb3IoO3I8dDspe2NvbnN0IHM9bltyXTtpZihNbihzKSlicmVhaztpZigwPT09cylyKz0yO2Vsc2UgaWYoIm51bWJlciI9PXR5cGVvZiBzKWZvcihyKys7cjx0JiYic3RyaW5nIj09dHlwZW9mIG5bcl07KXIrKztlbHNle2lmKHM9PT1lKXJldHVybiBuW3IrMV07cis9Mn19fXJldHVybiBudWxsfShybigpLCJuYW1lIikpLFJpKHRpKSl9LHQuXHUwMjc1ZGlyPXZlKHt0eXBlOnQsc2VsZWN0b3JzOltbInJvdXRlci1vdXRsZXQiXV0sb3V0cHV0czp7YWN0aXZhdGVFdmVudHM6ImFjdGl2YXRlIixkZWFjdGl2YXRlRXZlbnRzOiJkZWFjdGl2YXRlIn0sZXhwb3J0QXM6WyJvdXRsZXQiXX0pLHR9KSgpO2NsYXNzIENne2NvbnN0cnVjdG9yKHQsZSxuKXt0aGlzLnJvdXRlPXQsdGhpcy5jaGlsZENvbnRleHRzPWUsdGhpcy5wYXJlbnQ9bn1nZXQodCxlKXtyZXR1cm4gdD09PXNmP3RoaXMucm91dGU6dD09PWdnP3RoaXMuY2hpbGRDb250ZXh0czp0aGlzLnBhcmVudC5nZXQodCxlKX19Y2xhc3MgRGd7fWNsYXNzIEVne3ByZWxvYWQodCxlKXtyZXR1cm4gcWMobnVsbCl9fWxldCBBZz0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKHQsZSxuLHIscyl7dGhpcy5yb3V0ZXI9dCx0aGlzLmluamVjdG9yPXIsdGhpcy5wcmVsb2FkaW5nU3RyYXRlZ3k9cyx0aGlzLmxvYWRlcj1uZXcgcGcoZSxuLGU9PnQudHJpZ2dlckV2ZW50KG5ldyBkcChlKSksZT0+dC50cmlnZ2VyRXZlbnQobmV3IHBwKGUpKSl9c2V0VXBQcmVsb2FkaW5nKCl7dGhpcy5zdWJzY3JpcHRpb249dGhpcy5yb3V0ZXIuZXZlbnRzLnBpcGUoQWQodD0+dCBpbnN0YW5jZW9mIHNwKSxHZCgoKT0+dGhpcy5wcmVsb2FkKCkpKS5zdWJzY3JpYmUoKCk9Pnt9KX1wcmVsb2FkKCl7Y29uc3QgdD10aGlzLmluamVjdG9yLmdldChKdCk7cmV0dXJuIHRoaXMucHJvY2Vzc1JvdXRlcyh0LHRoaXMucm91dGVyLmNvbmZpZyl9bmdPbkRlc3Ryb3koKXt0aGlzLnN1YnNjcmlwdGlvbiYmdGhpcy5zdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKX1wcm9jZXNzUm91dGVzKHQsZSl7Y29uc3Qgbj1bXTtmb3IoY29uc3QgciBvZiBlKWlmKHIubG9hZENoaWxkcmVuJiYhci5jYW5Mb2FkJiZyLl9sb2FkZWRDb25maWcpe2NvbnN0IHQ9ci5fbG9hZGVkQ29uZmlnO24ucHVzaCh0aGlzLnByb2Nlc3NSb3V0ZXModC5tb2R1bGUsdC5yb3V0ZXMpKX1lbHNlIHIubG9hZENoaWxkcmVuJiYhci5jYW5Mb2FkP24ucHVzaCh0aGlzLnByZWxvYWRDb25maWcodCxyKSk6ci5jaGlsZHJlbiYmbi5wdXNoKHRoaXMucHJvY2Vzc1JvdXRlcyh0LHIuY2hpbGRyZW4pKTtyZXR1cm4gaihuKS5waXBlKCQoKSxTKHQ9Pnt9KSl9cHJlbG9hZENvbmZpZyh0LGUpe3JldHVybiB0aGlzLnByZWxvYWRpbmdTdHJhdGVneS5wcmVsb2FkKGUsKCk9PnRoaXMubG9hZGVyLmxvYWQodC5pbmplY3RvcixlKS5waXBlKEwodD0+KGUuX2xvYWRlZENvbmZpZz10LHRoaXMucHJvY2Vzc1JvdXRlcyh0Lm1vZHVsZSx0LnJvdXRlcykpKSkpfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KShHdCh3ZyksR3QoVGwpLEd0KGlsKSxHdCh5aSksR3QoRGcpKX0sdC5cdTAyNzVwcm92PXV0KHt0b2tlbjp0LGZhY3Rvcnk6dC5cdTAyNzVmYWN9KSx0fSkoKSxTZz0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKHQsZSxuPXt9KXt0aGlzLnJvdXRlcj10LHRoaXMudmlld3BvcnRTY3JvbGxlcj1lLHRoaXMub3B0aW9ucz1uLHRoaXMubGFzdElkPTAsdGhpcy5sYXN0U291cmNlPSJpbXBlcmF0aXZlIix0aGlzLnJlc3RvcmVkSWQ9MCx0aGlzLnN0b3JlPXt9LG4uc2Nyb2xsUG9zaXRpb25SZXN0b3JhdGlvbj1uLnNjcm9sbFBvc2l0aW9uUmVzdG9yYXRpb258fCJkaXNhYmxlZCIsbi5hbmNob3JTY3JvbGxpbmc9bi5hbmNob3JTY3JvbGxpbmd8fCJkaXNhYmxlZCJ9aW5pdCgpeyJkaXNhYmxlZCIhPT10aGlzLm9wdGlvbnMuc2Nyb2xsUG9zaXRpb25SZXN0b3JhdGlvbiYmdGhpcy52aWV3cG9ydFNjcm9sbGVyLnNldEhpc3RvcnlTY3JvbGxSZXN0b3JhdGlvbigibWFudWFsIiksdGhpcy5yb3V0ZXJFdmVudHNTdWJzY3JpcHRpb249dGhpcy5jcmVhdGVTY3JvbGxFdmVudHMoKSx0aGlzLnNjcm9sbEV2ZW50c1N1YnNjcmlwdGlvbj10aGlzLmNvbnN1bWVTY3JvbGxFdmVudHMoKX1jcmVhdGVTY3JvbGxFdmVudHMoKXtyZXR1cm4gdGhpcy5yb3V0ZXIuZXZlbnRzLnN1YnNjcmliZSh0PT57dCBpbnN0YW5jZW9mIHJwPyh0aGlzLnN0b3JlW3RoaXMubGFzdElkXT10aGlzLnZpZXdwb3J0U2Nyb2xsZXIuZ2V0U2Nyb2xsUG9zaXRpb24oKSx0aGlzLmxhc3RTb3VyY2U9dC5uYXZpZ2F0aW9uVHJpZ2dlcix0aGlzLnJlc3RvcmVkSWQ9dC5yZXN0b3JlZFN0YXRlP3QucmVzdG9yZWRTdGF0ZS5uYXZpZ2F0aW9uSWQ6MCk6dCBpbnN0YW5jZW9mIHNwJiYodGhpcy5sYXN0SWQ9dC5pZCx0aGlzLnNjaGVkdWxlU2Nyb2xsRXZlbnQodCx0aGlzLnJvdXRlci5wYXJzZVVybCh0LnVybEFmdGVyUmVkaXJlY3RzKS5mcmFnbWVudCkpfSl9Y29uc3VtZVNjcm9sbEV2ZW50cygpe3JldHVybiB0aGlzLnJvdXRlci5ldmVudHMuc3Vic2NyaWJlKHQ9Pnt0IGluc3RhbmNlb2YgdnAmJih0LnBvc2l0aW9uPyJ0b3AiPT09dGhpcy5vcHRpb25zLnNjcm9sbFBvc2l0aW9uUmVzdG9yYXRpb24/dGhpcy52aWV3cG9ydFNjcm9sbGVyLnNjcm9sbFRvUG9zaXRpb24oWzAsMF0pOiJlbmFibGVkIj09PXRoaXMub3B0aW9ucy5zY3JvbGxQb3NpdGlvblJlc3RvcmF0aW9uJiZ0aGlzLnZpZXdwb3J0U2Nyb2xsZXIuc2Nyb2xsVG9Qb3NpdGlvbih0LnBvc2l0aW9uKTp0LmFuY2hvciYmImVuYWJsZWQiPT09dGhpcy5vcHRpb25zLmFuY2hvclNjcm9sbGluZz90aGlzLnZpZXdwb3J0U2Nyb2xsZXIuc2Nyb2xsVG9BbmNob3IodC5hbmNob3IpOiJkaXNhYmxlZCIhPT10aGlzLm9wdGlvbnMuc2Nyb2xsUG9zaXRpb25SZXN0b3JhdGlvbiYmdGhpcy52aWV3cG9ydFNjcm9sbGVyLnNjcm9sbFRvUG9zaXRpb24oWzAsMF0pKX0pfXNjaGVkdWxlU2Nyb2xsRXZlbnQodCxlKXt0aGlzLnJvdXRlci50cmlnZ2VyRXZlbnQobmV3IHZwKHQsInBvcHN0YXRlIj09PXRoaXMubGFzdFNvdXJjZT90aGlzLnN0b3JlW3RoaXMucmVzdG9yZWRJZF06bnVsbCxlKSl9bmdPbkRlc3Ryb3koKXt0aGlzLnJvdXRlckV2ZW50c1N1YnNjcmlwdGlvbiYmdGhpcy5yb3V0ZXJFdmVudHNTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKSx0aGlzLnNjcm9sbEV2ZW50c1N1YnNjcmlwdGlvbiYmdGhpcy5zY3JvbGxFdmVudHNTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKX19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCkoR3Qod2cpLEd0KGljKSxHdCh2b2lkIDApKX0sdC5cdTAyNzVwcm92PXV0KHt0b2tlbjp0LGZhY3Rvcnk6dC5cdTAyNzVmYWN9KSx0fSkoKTtjb25zdCB4Zz1uZXcgTnQoIlJPVVRFUl9DT05GSUdVUkFUSU9OIiksa2c9bmV3IE50KCJST1VURVJfRk9SUk9PVF9HVUFSRCIpLFRnPVt0dSx7cHJvdmlkZTpqcCx1c2VDbGFzczpOcH0se3Byb3ZpZGU6d2csdXNlRmFjdG9yeTpmdW5jdGlvbih0LGUsbixyLHMsaSxvLGE9e30sbCx1KXtjb25zdCBjPW5ldyB3ZyhudWxsLHQsZSxuLHIscyxpLFNwKG8pKTtpZihsJiYoYy51cmxIYW5kbGluZ1N0cmF0ZWd5PWwpLHUmJihjLnJvdXRlUmV1c2VTdHJhdGVneT11KSxhLmVycm9ySGFuZGxlciYmKGMuZXJyb3JIYW5kbGVyPWEuZXJyb3JIYW5kbGVyKSxhLm1hbGZvcm1lZFVyaUVycm9ySGFuZGxlciYmKGMubWFsZm9ybWVkVXJpRXJyb3JIYW5kbGVyPWEubWFsZm9ybWVkVXJpRXJyb3JIYW5kbGVyKSxhLmVuYWJsZVRyYWNpbmcpe2NvbnN0IHQ9VmwoKTtjLmV2ZW50cy5zdWJzY3JpYmUoZT0+e3QubG9nR3JvdXAoIlJvdXRlciBFdmVudDogIitlLmNvbnN0cnVjdG9yLm5hbWUpLHQubG9nKGUudG9TdHJpbmcoKSksdC5sb2coZSksdC5sb2dHcm91cEVuZCgpfSl9cmV0dXJuIGEub25TYW1lVXJsTmF2aWdhdGlvbiYmKGMub25TYW1lVXJsTmF2aWdhdGlvbj1hLm9uU2FtZVVybE5hdmlnYXRpb24pLGEucGFyYW1zSW5oZXJpdGFuY2VTdHJhdGVneSYmKGMucGFyYW1zSW5oZXJpdGFuY2VTdHJhdGVneT1hLnBhcmFtc0luaGVyaXRhbmNlU3RyYXRlZ3kpLGEudXJsVXBkYXRlU3RyYXRlZ3kmJihjLnVybFVwZGF0ZVN0cmF0ZWd5PWEudXJsVXBkYXRlU3RyYXRlZ3kpLGEucmVsYXRpdmVMaW5rUmVzb2x1dGlvbiYmKGMucmVsYXRpdmVMaW5rUmVzb2x1dGlvbj1hLnJlbGF0aXZlTGlua1Jlc29sdXRpb24pLGN9LGRlcHM6W2pwLGdnLHR1LHlpLFRsLGlsLGRnLHhnLFtjbGFzc3t9LG5ldyBydF0sW2NsYXNze30sbmV3IHJ0XV19LGdnLHtwcm92aWRlOnNmLHVzZUZhY3Rvcnk6ZnVuY3Rpb24odCl7cmV0dXJuIHQucm91dGVyU3RhdGUucm9vdH0sZGVwczpbd2ddfSx7cHJvdmlkZTpUbCx1c2VDbGFzczpQbH0sQWcsRWcsY2xhc3N7cHJlbG9hZCh0LGUpe3JldHVybiBlKCkucGlwZShxZCgoKT0+cWMobnVsbCkpKX19LHtwcm92aWRlOnhnLHVzZVZhbHVlOntlbmFibGVUcmFjaW5nOiExfX1dO2Z1bmN0aW9uIEZnKCl7cmV0dXJuIG5ldyBDbCgiUm91dGVyIix3Zyl9bGV0IE9nPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IodCxlKXt9c3RhdGljIGZvclJvb3QoZSxuKXtyZXR1cm57bmdNb2R1bGU6dCxwcm92aWRlcnM6W1RnLE1nKGUpLHtwcm92aWRlOmtnLHVzZUZhY3Rvcnk6UmcsZGVwczpbW3dnLG5ldyBydCxuZXcgaXRdXX0se3Byb3ZpZGU6eGcsdXNlVmFsdWU6bnx8e319LHtwcm92aWRlOktsLHVzZUZhY3Rvcnk6SWcsZGVwczpbTGwsW25ldyBudChZbCksbmV3IHJ0XSx4Z119LHtwcm92aWRlOlNnLHVzZUZhY3Rvcnk6UGcsZGVwczpbd2csaWMseGddfSx7cHJvdmlkZTpEZyx1c2VFeGlzdGluZzpuJiZuLnByZWxvYWRpbmdTdHJhdGVneT9uLnByZWxvYWRpbmdTdHJhdGVneTpFZ30se3Byb3ZpZGU6Q2wsbXVsdGk6ITAsdXNlRmFjdG9yeTpGZ30sW2pnLHtwcm92aWRlOlVhLG11bHRpOiEwLHVzZUZhY3Rvcnk6TmcsZGVwczpbamddfSx7cHJvdmlkZTpCZyx1c2VGYWN0b3J5OlZnLGRlcHM6W2pnXX0se3Byb3ZpZGU6R2EsbXVsdGk6ITAsdXNlRXhpc3Rpbmc6Qmd9XV19fXN0YXRpYyBmb3JDaGlsZChlKXtyZXR1cm57bmdNb2R1bGU6dCxwcm92aWRlcnM6W01nKGUpXX19fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KShHdChrZyw4KSxHdCh3Zyw4KSl9fSksdH0pKCk7ZnVuY3Rpb24gUGcodCxlLG4pe3JldHVybiBuLnNjcm9sbE9mZnNldCYmZS5zZXRPZmZzZXQobi5zY3JvbGxPZmZzZXQpLG5ldyBTZyh0LGUsbil9ZnVuY3Rpb24gSWcodCxlLG49e30pe3JldHVybiBuLnVzZUhhc2g/bmV3IFhsKHQsZSk6bmV3IEpsKHQsZSl9ZnVuY3Rpb24gUmcodCl7aWYodCl0aHJvdyBuZXcgRXJyb3IoIlJvdXRlck1vZHVsZS5mb3JSb290KCkgY2FsbGVkIHR3aWNlLiBMYXp5IGxvYWRlZCBtb2R1bGVzIHNob3VsZCB1c2UgUm91dGVyTW9kdWxlLmZvckNoaWxkKCkgaW5zdGVhZC4iKTtyZXR1cm4iZ3VhcmRlZCJ9ZnVuY3Rpb24gTWcodCl7cmV0dXJuW3twcm92aWRlOnZpLG11bHRpOiEwLHVzZVZhbHVlOnR9LHtwcm92aWRlOmRnLG11bHRpOiEwLHVzZVZhbHVlOnR9XX1sZXQgamc9KCgpPT57Y2xhc3MgdHtjb25zdHJ1Y3Rvcih0KXt0aGlzLmluamVjdG9yPXQsdGhpcy5pbml0TmF2aWdhdGlvbj0hMSx0aGlzLnJlc3VsdE9mUHJlYWN0aXZhdGlvbkRvbmU9bmV3IER9YXBwSW5pdGlhbGl6ZXIoKXtyZXR1cm4gdGhpcy5pbmplY3Rvci5nZXQoSGwsUHJvbWlzZS5yZXNvbHZlKG51bGwpKS50aGVuKCgpPT57bGV0IHQ9bnVsbDtjb25zdCBlPW5ldyBQcm9taXNlKGU9PnQ9ZSksbj10aGlzLmluamVjdG9yLmdldCh3Zykscj10aGlzLmluamVjdG9yLmdldCh4Zyk7aWYodGhpcy5pc0xlZ2FjeURpc2FibGVkKHIpfHx0aGlzLmlzTGVnYWN5RW5hYmxlZChyKSl0KCEwKTtlbHNlIGlmKCJkaXNhYmxlZCI9PT1yLmluaXRpYWxOYXZpZ2F0aW9uKW4uc2V0VXBMb2NhdGlvbkNoYW5nZUxpc3RlbmVyKCksdCghMCk7ZWxzZXtpZigiZW5hYmxlZCIhPT1yLmluaXRpYWxOYXZpZ2F0aW9uKXRocm93IG5ldyBFcnJvcihgSW52YWxpZCBpbml0aWFsTmF2aWdhdGlvbiBvcHRpb25zOiAnJHtyLmluaXRpYWxOYXZpZ2F0aW9ufSdgKTtuLmhvb2tzLmFmdGVyUHJlYWN0aXZhdGlvbj0oKT0+dGhpcy5pbml0TmF2aWdhdGlvbj9xYyhudWxsKToodGhpcy5pbml0TmF2aWdhdGlvbj0hMCx0KCEwKSx0aGlzLnJlc3VsdE9mUHJlYWN0aXZhdGlvbkRvbmUpLG4uaW5pdGlhbE5hdmlnYXRpb24oKX1yZXR1cm4gZX0pfWJvb3RzdHJhcExpc3RlbmVyKHQpe2NvbnN0IGU9dGhpcy5pbmplY3Rvci5nZXQoeGcpLG49dGhpcy5pbmplY3Rvci5nZXQoQWcpLHI9dGhpcy5pbmplY3Rvci5nZXQoU2cpLHM9dGhpcy5pbmplY3Rvci5nZXQod2cpLGk9dGhpcy5pbmplY3Rvci5nZXQoeGwpO3Q9PT1pLmNvbXBvbmVudHNbMF0mJih0aGlzLmlzTGVnYWN5RW5hYmxlZChlKT9zLmluaXRpYWxOYXZpZ2F0aW9uKCk6dGhpcy5pc0xlZ2FjeURpc2FibGVkKGUpJiZzLnNldFVwTG9jYXRpb25DaGFuZ2VMaXN0ZW5lcigpLG4uc2V0VXBQcmVsb2FkaW5nKCksci5pbml0KCkscy5yZXNldFJvb3RDb21wb25lbnRUeXBlKGkuY29tcG9uZW50VHlwZXNbMF0pLHRoaXMucmVzdWx0T2ZQcmVhY3RpdmF0aW9uRG9uZS5uZXh0KG51bGwpLHRoaXMucmVzdWx0T2ZQcmVhY3RpdmF0aW9uRG9uZS5jb21wbGV0ZSgpKX1pc0xlZ2FjeUVuYWJsZWQodCl7cmV0dXJuImxlZ2FjeV9lbmFibGVkIj09PXQuaW5pdGlhbE5hdmlnYXRpb258fCEwPT09dC5pbml0aWFsTmF2aWdhdGlvbnx8dm9pZCAwPT09dC5pbml0aWFsTmF2aWdhdGlvbn1pc0xlZ2FjeURpc2FibGVkKHQpe3JldHVybiJsZWdhY3lfZGlzYWJsZWQiPT09dC5pbml0aWFsTmF2aWdhdGlvbnx8ITE9PT10LmluaXRpYWxOYXZpZ2F0aW9ufX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KShHdCh5aSkpfSx0Llx1MDI3NXByb3Y9dXQoe3Rva2VuOnQsZmFjdG9yeTp0Llx1MDI3NWZhY30pLHR9KSgpO2Z1bmN0aW9uIE5nKHQpe3JldHVybiB0LmFwcEluaXRpYWxpemVyLmJpbmQodCl9ZnVuY3Rpb24gVmcodCl7cmV0dXJuIHQuYm9vdHN0cmFwTGlzdGVuZXIuYmluZCh0KX1jb25zdCBCZz1uZXcgTnQoIlJvdXRlciBJbml0aWFsaXplciIpO2NsYXNzIExne31jbGFzcyBVZ3t9Y2xhc3MgSGd7Y29uc3RydWN0b3IodCl7dGhpcy5ub3JtYWxpemVkTmFtZXM9bmV3IE1hcCx0aGlzLmxhenlVcGRhdGU9bnVsbCx0P3RoaXMubGF6eUluaXQ9InN0cmluZyI9PXR5cGVvZiB0PygpPT57dGhpcy5oZWFkZXJzPW5ldyBNYXAsdC5zcGxpdCgiXG4iKS5mb3JFYWNoKHQ9Pntjb25zdCBlPXQuaW5kZXhPZigiOiIpO2lmKGU+MCl7Y29uc3Qgbj10LnNsaWNlKDAsZSkscj1uLnRvTG93ZXJDYXNlKCkscz10LnNsaWNlKGUrMSkudHJpbSgpO3RoaXMubWF5YmVTZXROb3JtYWxpemVkTmFtZShuLHIpLHRoaXMuaGVhZGVycy5oYXMocik/dGhpcy5oZWFkZXJzLmdldChyKS5wdXNoKHMpOnRoaXMuaGVhZGVycy5zZXQocixbc10pfX0pfTooKT0+e3RoaXMuaGVhZGVycz1uZXcgTWFwLE9iamVjdC5rZXlzKHQpLmZvckVhY2goZT0+e2xldCBuPXRbZV07Y29uc3Qgcj1lLnRvTG93ZXJDYXNlKCk7InN0cmluZyI9PXR5cGVvZiBuJiYobj1bbl0pLG4ubGVuZ3RoPjAmJih0aGlzLmhlYWRlcnMuc2V0KHIsbiksdGhpcy5tYXliZVNldE5vcm1hbGl6ZWROYW1lKGUscikpfSl9OnRoaXMuaGVhZGVycz1uZXcgTWFwfWhhcyh0KXtyZXR1cm4gdGhpcy5pbml0KCksdGhpcy5oZWFkZXJzLmhhcyh0LnRvTG93ZXJDYXNlKCkpfWdldCh0KXt0aGlzLmluaXQoKTtjb25zdCBlPXRoaXMuaGVhZGVycy5nZXQodC50b0xvd2VyQ2FzZSgpKTtyZXR1cm4gZSYmZS5sZW5ndGg+MD9lWzBdOm51bGx9a2V5cygpe3JldHVybiB0aGlzLmluaXQoKSxBcnJheS5mcm9tKHRoaXMubm9ybWFsaXplZE5hbWVzLnZhbHVlcygpKX1nZXRBbGwodCl7cmV0dXJuIHRoaXMuaW5pdCgpLHRoaXMuaGVhZGVycy5nZXQodC50b0xvd2VyQ2FzZSgpKXx8bnVsbH1hcHBlbmQodCxlKXtyZXR1cm4gdGhpcy5jbG9uZSh7bmFtZTp0LHZhbHVlOmUsb3A6ImEifSl9c2V0KHQsZSl7cmV0dXJuIHRoaXMuY2xvbmUoe25hbWU6dCx2YWx1ZTplLG9wOiJzIn0pfWRlbGV0ZSh0LGUpe3JldHVybiB0aGlzLmNsb25lKHtuYW1lOnQsdmFsdWU6ZSxvcDoiZCJ9KX1tYXliZVNldE5vcm1hbGl6ZWROYW1lKHQsZSl7dGhpcy5ub3JtYWxpemVkTmFtZXMuaGFzKGUpfHx0aGlzLm5vcm1hbGl6ZWROYW1lcy5zZXQoZSx0KX1pbml0KCl7dGhpcy5sYXp5SW5pdCYmKHRoaXMubGF6eUluaXQgaW5zdGFuY2VvZiBIZz90aGlzLmNvcHlGcm9tKHRoaXMubGF6eUluaXQpOnRoaXMubGF6eUluaXQoKSx0aGlzLmxhenlJbml0PW51bGwsdGhpcy5sYXp5VXBkYXRlJiYodGhpcy5sYXp5VXBkYXRlLmZvckVhY2godD0+dGhpcy5hcHBseVVwZGF0ZSh0KSksdGhpcy5sYXp5VXBkYXRlPW51bGwpKX1jb3B5RnJvbSh0KXt0LmluaXQoKSxBcnJheS5mcm9tKHQuaGVhZGVycy5rZXlzKCkpLmZvckVhY2goZT0+e3RoaXMuaGVhZGVycy5zZXQoZSx0LmhlYWRlcnMuZ2V0KGUpKSx0aGlzLm5vcm1hbGl6ZWROYW1lcy5zZXQoZSx0Lm5vcm1hbGl6ZWROYW1lcy5nZXQoZSkpfSl9Y2xvbmUodCl7Y29uc3QgZT1uZXcgSGc7cmV0dXJuIGUubGF6eUluaXQ9dGhpcy5sYXp5SW5pdCYmdGhpcy5sYXp5SW5pdCBpbnN0YW5jZW9mIEhnP3RoaXMubGF6eUluaXQ6dGhpcyxlLmxhenlVcGRhdGU9KHRoaXMubGF6eVVwZGF0ZXx8W10pLmNvbmNhdChbdF0pLGV9YXBwbHlVcGRhdGUodCl7Y29uc3QgZT10Lm5hbWUudG9Mb3dlckNhc2UoKTtzd2l0Y2godC5vcCl7Y2FzZSJhIjpjYXNlInMiOmxldCBuPXQudmFsdWU7aWYoInN0cmluZyI9PXR5cGVvZiBuJiYobj1bbl0pLDA9PT1uLmxlbmd0aClyZXR1cm47dGhpcy5tYXliZVNldE5vcm1hbGl6ZWROYW1lKHQubmFtZSxlKTtjb25zdCByPSgiYSI9PT10Lm9wP3RoaXMuaGVhZGVycy5nZXQoZSk6dm9pZCAwKXx8W107ci5wdXNoKC4uLm4pLHRoaXMuaGVhZGVycy5zZXQoZSxyKTticmVhaztjYXNlImQiOmNvbnN0IHM9dC52YWx1ZTtpZihzKXtsZXQgdD10aGlzLmhlYWRlcnMuZ2V0KGUpO2lmKCF0KXJldHVybjt0PXQuZmlsdGVyKHQ9Pi0xPT09cy5pbmRleE9mKHQpKSwwPT09dC5sZW5ndGg/KHRoaXMuaGVhZGVycy5kZWxldGUoZSksdGhpcy5ub3JtYWxpemVkTmFtZXMuZGVsZXRlKGUpKTp0aGlzLmhlYWRlcnMuc2V0KGUsdCl9ZWxzZSB0aGlzLmhlYWRlcnMuZGVsZXRlKGUpLHRoaXMubm9ybWFsaXplZE5hbWVzLmRlbGV0ZShlKX19Zm9yRWFjaCh0KXt0aGlzLmluaXQoKSxBcnJheS5mcm9tKHRoaXMubm9ybWFsaXplZE5hbWVzLmtleXMoKSkuZm9yRWFjaChlPT50KHRoaXMubm9ybWFsaXplZE5hbWVzLmdldChlKSx0aGlzLmhlYWRlcnMuZ2V0KGUpKSl9fWNsYXNzICRne2VuY29kZUtleSh0KXtyZXR1cm4gemcodCl9ZW5jb2RlVmFsdWUodCl7cmV0dXJuIHpnKHQpfWRlY29kZUtleSh0KXtyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHQpfWRlY29kZVZhbHVlKHQpe3JldHVybiBkZWNvZGVVUklDb21wb25lbnQodCl9fWZ1bmN0aW9uIHpnKHQpe3JldHVybiBlbmNvZGVVUklDb21wb25lbnQodCkucmVwbGFjZSgvJTQwL2dpLCJAIikucmVwbGFjZSgvJTNBL2dpLCI6IikucmVwbGFjZSgvJTI0L2dpLCIkIikucmVwbGFjZSgvJTJDL2dpLCIsIikucmVwbGFjZSgvJTNCL2dpLCI7IikucmVwbGFjZSgvJTJCL2dpLCIrIikucmVwbGFjZSgvJTNEL2dpLCI9IikucmVwbGFjZSgvJTNGL2dpLCI/IikucmVwbGFjZSgvJTJGL2dpLCIvIil9Y2xhc3MgcWd7Y29uc3RydWN0b3IodD17fSl7aWYodGhpcy51cGRhdGVzPW51bGwsdGhpcy5jbG9uZUZyb209bnVsbCx0aGlzLmVuY29kZXI9dC5lbmNvZGVyfHxuZXcgJGcsdC5mcm9tU3RyaW5nKXtpZih0LmZyb21PYmplY3QpdGhyb3cgbmV3IEVycm9yKCJDYW5ub3Qgc3BlY2lmeSBib3RoIGZyb21TdHJpbmcgYW5kIGZyb21PYmplY3QuIik7dGhpcy5tYXA9ZnVuY3Rpb24odCxlKXtjb25zdCBuPW5ldyBNYXA7cmV0dXJuIHQubGVuZ3RoPjAmJnQuc3BsaXQoIiYiKS5mb3JFYWNoKHQ9Pntjb25zdCByPXQuaW5kZXhPZigiPSIpLFtzLGldPS0xPT1yP1tlLmRlY29kZUtleSh0KSwiIl06W2UuZGVjb2RlS2V5KHQuc2xpY2UoMCxyKSksZS5kZWNvZGVWYWx1ZSh0LnNsaWNlKHIrMSkpXSxvPW4uZ2V0KHMpfHxbXTtvLnB1c2goaSksbi5zZXQocyxvKX0pLG59KHQuZnJvbVN0cmluZyx0aGlzLmVuY29kZXIpfWVsc2UgdC5mcm9tT2JqZWN0Pyh0aGlzLm1hcD1uZXcgTWFwLE9iamVjdC5rZXlzKHQuZnJvbU9iamVjdCkuZm9yRWFjaChlPT57Y29uc3Qgbj10LmZyb21PYmplY3RbZV07dGhpcy5tYXAuc2V0KGUsQXJyYXkuaXNBcnJheShuKT9uOltuXSl9KSk6dGhpcy5tYXA9bnVsbH1oYXModCl7cmV0dXJuIHRoaXMuaW5pdCgpLHRoaXMubWFwLmhhcyh0KX1nZXQodCl7dGhpcy5pbml0KCk7Y29uc3QgZT10aGlzLm1hcC5nZXQodCk7cmV0dXJuIGU/ZVswXTpudWxsfWdldEFsbCh0KXtyZXR1cm4gdGhpcy5pbml0KCksdGhpcy5tYXAuZ2V0KHQpfHxudWxsfWtleXMoKXtyZXR1cm4gdGhpcy5pbml0KCksQXJyYXkuZnJvbSh0aGlzLm1hcC5rZXlzKCkpfWFwcGVuZCh0LGUpe3JldHVybiB0aGlzLmNsb25lKHtwYXJhbTp0LHZhbHVlOmUsb3A6ImEifSl9c2V0KHQsZSl7cmV0dXJuIHRoaXMuY2xvbmUoe3BhcmFtOnQsdmFsdWU6ZSxvcDoicyJ9KX1kZWxldGUodCxlKXtyZXR1cm4gdGhpcy5jbG9uZSh7cGFyYW06dCx2YWx1ZTplLG9wOiJkIn0pfXRvU3RyaW5nKCl7cmV0dXJuIHRoaXMuaW5pdCgpLHRoaXMua2V5cygpLm1hcCh0PT57Y29uc3QgZT10aGlzLmVuY29kZXIuZW5jb2RlS2V5KHQpO3JldHVybiB0aGlzLm1hcC5nZXQodCkubWFwKHQ9PmUrIj0iK3RoaXMuZW5jb2Rlci5lbmNvZGVWYWx1ZSh0KSkuam9pbigiJiIpfSkuZmlsdGVyKHQ9PiIiIT09dCkuam9pbigiJiIpfWNsb25lKHQpe2NvbnN0IGU9bmV3IHFnKHtlbmNvZGVyOnRoaXMuZW5jb2Rlcn0pO3JldHVybiBlLmNsb25lRnJvbT10aGlzLmNsb25lRnJvbXx8dGhpcyxlLnVwZGF0ZXM9KHRoaXMudXBkYXRlc3x8W10pLmNvbmNhdChbdF0pLGV9aW5pdCgpe251bGw9PT10aGlzLm1hcCYmKHRoaXMubWFwPW5ldyBNYXApLG51bGwhPT10aGlzLmNsb25lRnJvbSYmKHRoaXMuY2xvbmVGcm9tLmluaXQoKSx0aGlzLmNsb25lRnJvbS5rZXlzKCkuZm9yRWFjaCh0PT50aGlzLm1hcC5zZXQodCx0aGlzLmNsb25lRnJvbS5tYXAuZ2V0KHQpKSksdGhpcy51cGRhdGVzLmZvckVhY2godD0+e3N3aXRjaCh0Lm9wKXtjYXNlImEiOmNhc2UicyI6Y29uc3QgZT0oImEiPT09dC5vcD90aGlzLm1hcC5nZXQodC5wYXJhbSk6dm9pZCAwKXx8W107ZS5wdXNoKHQudmFsdWUpLHRoaXMubWFwLnNldCh0LnBhcmFtLGUpO2JyZWFrO2Nhc2UiZCI6aWYodm9pZCAwPT09dC52YWx1ZSl7dGhpcy5tYXAuZGVsZXRlKHQucGFyYW0pO2JyZWFrfXtsZXQgZT10aGlzLm1hcC5nZXQodC5wYXJhbSl8fFtdO2NvbnN0IG49ZS5pbmRleE9mKHQudmFsdWUpOy0xIT09biYmZS5zcGxpY2UobiwxKSxlLmxlbmd0aD4wP3RoaXMubWFwLnNldCh0LnBhcmFtLGUpOnRoaXMubWFwLmRlbGV0ZSh0LnBhcmFtKX19fSksdGhpcy5jbG9uZUZyb209dGhpcy51cGRhdGVzPW51bGwpfX1mdW5jdGlvbiBXZyh0KXtyZXR1cm4idW5kZWZpbmVkIiE9dHlwZW9mIEFycmF5QnVmZmVyJiZ0IGluc3RhbmNlb2YgQXJyYXlCdWZmZXJ9ZnVuY3Rpb24gWmcodCl7cmV0dXJuInVuZGVmaW5lZCIhPXR5cGVvZiBCbG9iJiZ0IGluc3RhbmNlb2YgQmxvYn1mdW5jdGlvbiBHZyh0KXtyZXR1cm4idW5kZWZpbmVkIiE9dHlwZW9mIEZvcm1EYXRhJiZ0IGluc3RhbmNlb2YgRm9ybURhdGF9Y2xhc3MgS2d7Y29uc3RydWN0b3IodCxlLG4scil7bGV0IHM7aWYodGhpcy51cmw9ZSx0aGlzLmJvZHk9bnVsbCx0aGlzLnJlcG9ydFByb2dyZXNzPSExLHRoaXMud2l0aENyZWRlbnRpYWxzPSExLHRoaXMucmVzcG9uc2VUeXBlPSJqc29uIix0aGlzLm1ldGhvZD10LnRvVXBwZXJDYXNlKCksZnVuY3Rpb24odCl7c3dpdGNoKHQpe2Nhc2UiREVMRVRFIjpjYXNlIkdFVCI6Y2FzZSJIRUFEIjpjYXNlIk9QVElPTlMiOmNhc2UiSlNPTlAiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fSh0aGlzLm1ldGhvZCl8fHI/KHRoaXMuYm9keT12b2lkIDAhPT1uP246bnVsbCxzPXIpOnM9bixzJiYodGhpcy5yZXBvcnRQcm9ncmVzcz0hIXMucmVwb3J0UHJvZ3Jlc3MsdGhpcy53aXRoQ3JlZGVudGlhbHM9ISFzLndpdGhDcmVkZW50aWFscyxzLnJlc3BvbnNlVHlwZSYmKHRoaXMucmVzcG9uc2VUeXBlPXMucmVzcG9uc2VUeXBlKSxzLmhlYWRlcnMmJih0aGlzLmhlYWRlcnM9cy5oZWFkZXJzKSxzLnBhcmFtcyYmKHRoaXMucGFyYW1zPXMucGFyYW1zKSksdGhpcy5oZWFkZXJzfHwodGhpcy5oZWFkZXJzPW5ldyBIZyksdGhpcy5wYXJhbXMpe2NvbnN0IHQ9dGhpcy5wYXJhbXMudG9TdHJpbmcoKTtpZigwPT09dC5sZW5ndGgpdGhpcy51cmxXaXRoUGFyYW1zPWU7ZWxzZXtjb25zdCBuPWUuaW5kZXhPZigiPyIpO3RoaXMudXJsV2l0aFBhcmFtcz1lKygtMT09PW4/Ij8iOm48ZS5sZW5ndGgtMT8iJiI6IiIpK3R9fWVsc2UgdGhpcy5wYXJhbXM9bmV3IHFnLHRoaXMudXJsV2l0aFBhcmFtcz1lfXNlcmlhbGl6ZUJvZHkoKXtyZXR1cm4gbnVsbD09PXRoaXMuYm9keT9udWxsOldnKHRoaXMuYm9keSl8fFpnKHRoaXMuYm9keSl8fEdnKHRoaXMuYm9keSl8fCJzdHJpbmciPT10eXBlb2YgdGhpcy5ib2R5P3RoaXMuYm9keTp0aGlzLmJvZHkgaW5zdGFuY2VvZiBxZz90aGlzLmJvZHkudG9TdHJpbmcoKToib2JqZWN0Ij09dHlwZW9mIHRoaXMuYm9keXx8ImJvb2xlYW4iPT10eXBlb2YgdGhpcy5ib2R5fHxBcnJheS5pc0FycmF5KHRoaXMuYm9keSk/SlNPTi5zdHJpbmdpZnkodGhpcy5ib2R5KTp0aGlzLmJvZHkudG9TdHJpbmcoKX1kZXRlY3RDb250ZW50VHlwZUhlYWRlcigpe3JldHVybiBudWxsPT09dGhpcy5ib2R5fHxHZyh0aGlzLmJvZHkpP251bGw6WmcodGhpcy5ib2R5KT90aGlzLmJvZHkudHlwZXx8bnVsbDpXZyh0aGlzLmJvZHkpP251bGw6InN0cmluZyI9PXR5cGVvZiB0aGlzLmJvZHk/InRleHQvcGxhaW4iOnRoaXMuYm9keSBpbnN0YW5jZW9mIHFnPyJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7Y2hhcnNldD1VVEYtOCI6Im9iamVjdCI9PXR5cGVvZiB0aGlzLmJvZHl8fCJudW1iZXIiPT10eXBlb2YgdGhpcy5ib2R5fHxBcnJheS5pc0FycmF5KHRoaXMuYm9keSk/ImFwcGxpY2F0aW9uL2pzb24iOm51bGx9Y2xvbmUodD17fSl7Y29uc3QgZT10Lm1ldGhvZHx8dGhpcy5tZXRob2Qsbj10LnVybHx8dGhpcy51cmwscj10LnJlc3BvbnNlVHlwZXx8dGhpcy5yZXNwb25zZVR5cGUscz12b2lkIDAhPT10LmJvZHk/dC5ib2R5OnRoaXMuYm9keSxpPXZvaWQgMCE9PXQud2l0aENyZWRlbnRpYWxzP3Qud2l0aENyZWRlbnRpYWxzOnRoaXMud2l0aENyZWRlbnRpYWxzLG89dm9pZCAwIT09dC5yZXBvcnRQcm9ncmVzcz90LnJlcG9ydFByb2dyZXNzOnRoaXMucmVwb3J0UHJvZ3Jlc3M7bGV0IGE9dC5oZWFkZXJzfHx0aGlzLmhlYWRlcnMsbD10LnBhcmFtc3x8dGhpcy5wYXJhbXM7cmV0dXJuIHZvaWQgMCE9PXQuc2V0SGVhZGVycyYmKGE9T2JqZWN0LmtleXModC5zZXRIZWFkZXJzKS5yZWR1Y2UoKGUsbik9PmUuc2V0KG4sdC5zZXRIZWFkZXJzW25dKSxhKSksdC5zZXRQYXJhbXMmJihsPU9iamVjdC5rZXlzKHQuc2V0UGFyYW1zKS5yZWR1Y2UoKGUsbik9PmUuc2V0KG4sdC5zZXRQYXJhbXNbbl0pLGwpKSxuZXcgS2coZSxuLHMse3BhcmFtczpsLGhlYWRlcnM6YSxyZXBvcnRQcm9ncmVzczpvLHJlc3BvbnNlVHlwZTpyLHdpdGhDcmVkZW50aWFsczppfSl9fXZhciBRZz1mdW5jdGlvbih0KXtyZXR1cm4gdFt0LlNlbnQ9MF09IlNlbnQiLHRbdC5VcGxvYWRQcm9ncmVzcz0xXT0iVXBsb2FkUHJvZ3Jlc3MiLHRbdC5SZXNwb25zZUhlYWRlcj0yXT0iUmVzcG9uc2VIZWFkZXIiLHRbdC5Eb3dubG9hZFByb2dyZXNzPTNdPSJEb3dubG9hZFByb2dyZXNzIix0W3QuUmVzcG9uc2U9NF09IlJlc3BvbnNlIix0W3QuVXNlcj01XT0iVXNlciIsdH0oe30pO2NsYXNzIFlne2NvbnN0cnVjdG9yKHQsZT0yMDAsbj0iT0siKXt0aGlzLmhlYWRlcnM9dC5oZWFkZXJzfHxuZXcgSGcsdGhpcy5zdGF0dXM9dm9pZCAwIT09dC5zdGF0dXM/dC5zdGF0dXM6ZSx0aGlzLnN0YXR1c1RleHQ9dC5zdGF0dXNUZXh0fHxuLHRoaXMudXJsPXQudXJsfHxudWxsLHRoaXMub2s9dGhpcy5zdGF0dXM+PTIwMCYmdGhpcy5zdGF0dXM8MzAwfX1jbGFzcyBKZyBleHRlbmRzIFlne2NvbnN0cnVjdG9yKHQ9e30pe3N1cGVyKHQpLHRoaXMudHlwZT1RZy5SZXNwb25zZUhlYWRlcn1jbG9uZSh0PXt9KXtyZXR1cm4gbmV3IEpnKHtoZWFkZXJzOnQuaGVhZGVyc3x8dGhpcy5oZWFkZXJzLHN0YXR1czp2b2lkIDAhPT10LnN0YXR1cz90LnN0YXR1czp0aGlzLnN0YXR1cyxzdGF0dXNUZXh0OnQuc3RhdHVzVGV4dHx8dGhpcy5zdGF0dXNUZXh0LHVybDp0LnVybHx8dGhpcy51cmx8fHZvaWQgMH0pfX1jbGFzcyBYZyBleHRlbmRzIFlne2NvbnN0cnVjdG9yKHQ9e30pe3N1cGVyKHQpLHRoaXMudHlwZT1RZy5SZXNwb25zZSx0aGlzLmJvZHk9dm9pZCAwIT09dC5ib2R5P3QuYm9keTpudWxsfWNsb25lKHQ9e30pe3JldHVybiBuZXcgWGcoe2JvZHk6dm9pZCAwIT09dC5ib2R5P3QuYm9keTp0aGlzLmJvZHksaGVhZGVyczp0LmhlYWRlcnN8fHRoaXMuaGVhZGVycyxzdGF0dXM6dm9pZCAwIT09dC5zdGF0dXM/dC5zdGF0dXM6dGhpcy5zdGF0dXMsc3RhdHVzVGV4dDp0LnN0YXR1c1RleHR8fHRoaXMuc3RhdHVzVGV4dCx1cmw6dC51cmx8fHRoaXMudXJsfHx2b2lkIDB9KX19Y2xhc3MgdG0gZXh0ZW5kcyBZZ3tjb25zdHJ1Y3Rvcih0KXtzdXBlcih0LDAsIlVua25vd24gRXJyb3IiKSx0aGlzLm5hbWU9Ikh0dHBFcnJvclJlc3BvbnNlIix0aGlzLm9rPSExLHRoaXMubWVzc2FnZT10aGlzLnN0YXR1cz49MjAwJiZ0aGlzLnN0YXR1czwzMDA/Ikh0dHAgZmFpbHVyZSBkdXJpbmcgcGFyc2luZyBmb3IgIisodC51cmx8fCIodW5rbm93biB1cmwpIik6YEh0dHAgZmFpbHVyZSByZXNwb25zZSBmb3IgJHt0LnVybHx8Iih1bmtub3duIHVybCkifTogJHt0LnN0YXR1c30gJHt0LnN0YXR1c1RleHR9YCx0aGlzLmVycm9yPXQuZXJyb3J8fG51bGx9fWZ1bmN0aW9uIGVtKHQsZSl7cmV0dXJue2JvZHk6ZSxoZWFkZXJzOnQuaGVhZGVycyxvYnNlcnZlOnQub2JzZXJ2ZSxwYXJhbXM6dC5wYXJhbXMscmVwb3J0UHJvZ3Jlc3M6dC5yZXBvcnRQcm9ncmVzcyxyZXNwb25zZVR5cGU6dC5yZXNwb25zZVR5cGUsd2l0aENyZWRlbnRpYWxzOnQud2l0aENyZWRlbnRpYWxzfX1sZXQgbm09KCgpPT57Y2xhc3MgdHtjb25zdHJ1Y3Rvcih0KXt0aGlzLmhhbmRsZXI9dH1yZXF1ZXN0KHQsZSxuPXt9KXtsZXQgcjtpZih0IGluc3RhbmNlb2YgS2cpcj10O2Vsc2V7bGV0IHM9dm9pZCAwO3M9bi5oZWFkZXJzIGluc3RhbmNlb2YgSGc/bi5oZWFkZXJzOm5ldyBIZyhuLmhlYWRlcnMpO2xldCBpPXZvaWQgMDtuLnBhcmFtcyYmKGk9bi5wYXJhbXMgaW5zdGFuY2VvZiBxZz9uLnBhcmFtczpuZXcgcWcoe2Zyb21PYmplY3Q6bi5wYXJhbXN9KSkscj1uZXcgS2codCxlLHZvaWQgMCE9PW4uYm9keT9uLmJvZHk6bnVsbCx7aGVhZGVyczpzLHBhcmFtczppLHJlcG9ydFByb2dyZXNzOm4ucmVwb3J0UHJvZ3Jlc3MscmVzcG9uc2VUeXBlOm4ucmVzcG9uc2VUeXBlfHwianNvbiIsd2l0aENyZWRlbnRpYWxzOm4ud2l0aENyZWRlbnRpYWxzfSl9Y29uc3Qgcz1xYyhyKS5waXBlKEdkKHQ9PnRoaXMuaGFuZGxlci5oYW5kbGUodCkpKTtpZih0IGluc3RhbmNlb2YgS2d8fCJldmVudHMiPT09bi5vYnNlcnZlKXJldHVybiBzO2NvbnN0IGk9cy5waXBlKEFkKHQ9PnQgaW5zdGFuY2VvZiBYZykpO3N3aXRjaChuLm9ic2VydmV8fCJib2R5Iil7Y2FzZSJib2R5Ijpzd2l0Y2goci5yZXNwb25zZVR5cGUpe2Nhc2UiYXJyYXlidWZmZXIiOnJldHVybiBpLnBpcGUoUyh0PT57aWYobnVsbCE9PXQuYm9keSYmISh0LmJvZHkgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikpdGhyb3cgbmV3IEVycm9yKCJSZXNwb25zZSBpcyBub3QgYW4gQXJyYXlCdWZmZXIuIik7cmV0dXJuIHQuYm9keX0pKTtjYXNlImJsb2IiOnJldHVybiBpLnBpcGUoUyh0PT57aWYobnVsbCE9PXQuYm9keSYmISh0LmJvZHkgaW5zdGFuY2VvZiBCbG9iKSl0aHJvdyBuZXcgRXJyb3IoIlJlc3BvbnNlIGlzIG5vdCBhIEJsb2IuIik7cmV0dXJuIHQuYm9keX0pKTtjYXNlInRleHQiOnJldHVybiBpLnBpcGUoUyh0PT57aWYobnVsbCE9PXQuYm9keSYmInN0cmluZyIhPXR5cGVvZiB0LmJvZHkpdGhyb3cgbmV3IEVycm9yKCJSZXNwb25zZSBpcyBub3QgYSBzdHJpbmcuIik7cmV0dXJuIHQuYm9keX0pKTtjYXNlImpzb24iOmRlZmF1bHQ6cmV0dXJuIGkucGlwZShTKHQ9PnQuYm9keSkpfWNhc2UicmVzcG9uc2UiOnJldHVybiBpO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKGBVbnJlYWNoYWJsZTogdW5oYW5kbGVkIG9ic2VydmUgdHlwZSAke24ub2JzZXJ2ZX19YCl9fWRlbGV0ZSh0LGU9e30pe3JldHVybiB0aGlzLnJlcXVlc3QoIkRFTEVURSIsdCxlKX1nZXQodCxlPXt9KXtyZXR1cm4gdGhpcy5yZXF1ZXN0KCJHRVQiLHQsZSl9aGVhZCh0LGU9e30pe3JldHVybiB0aGlzLnJlcXVlc3QoIkhFQUQiLHQsZSl9anNvbnAodCxlKXtyZXR1cm4gdGhpcy5yZXF1ZXN0KCJKU09OUCIsdCx7cGFyYW1zOihuZXcgcWcpLmFwcGVuZChlLCJKU09OUF9DQUxMQkFDSyIpLG9ic2VydmU6ImJvZHkiLHJlc3BvbnNlVHlwZToianNvbiJ9KX1vcHRpb25zKHQsZT17fSl7cmV0dXJuIHRoaXMucmVxdWVzdCgiT1BUSU9OUyIsdCxlKX1wYXRjaCh0LGUsbj17fSl7cmV0dXJuIHRoaXMucmVxdWVzdCgiUEFUQ0giLHQsZW0obixlKSl9cG9zdCh0LGUsbj17fSl7cmV0dXJuIHRoaXMucmVxdWVzdCgiUE9TVCIsdCxlbShuLGUpKX1wdXQodCxlLG49e30pe3JldHVybiB0aGlzLnJlcXVlc3QoIlBVVCIsdCxlbShuLGUpKX19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCkoR3QoTGcpKX0sdC5cdTAyNzVwcm92PXV0KHt0b2tlbjp0LGZhY3Rvcnk6dC5cdTAyNzVmYWN9KSx0fSkoKTtjbGFzcyBybXtjb25zdHJ1Y3Rvcih0LGUpe3RoaXMubmV4dD10LHRoaXMuaW50ZXJjZXB0b3I9ZX1oYW5kbGUodCl7cmV0dXJuIHRoaXMuaW50ZXJjZXB0b3IuaW50ZXJjZXB0KHQsdGhpcy5uZXh0KX19Y29uc3Qgc209bmV3IE50KCJIVFRQX0lOVEVSQ0VQVE9SUyIpO2xldCBpbT0oKCk9PntjbGFzcyB0e2ludGVyY2VwdCh0LGUpe3JldHVybiBlLmhhbmRsZSh0KX19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LHQuXHUwMjc1cHJvdj11dCh7dG9rZW46dCxmYWN0b3J5OnQuXHUwMjc1ZmFjfSksdH0pKCk7Y29uc3Qgb209L15cKVxdXH0nLD9cbi87Y2xhc3MgYW17fWxldCBsbT0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKCl7fWJ1aWxkKCl7cmV0dXJuIG5ldyBYTUxIdHRwUmVxdWVzdH19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LHQuXHUwMjc1cHJvdj11dCh7dG9rZW46dCxmYWN0b3J5OnQuXHUwMjc1ZmFjfSksdH0pKCksdW09KCgpPT57Y2xhc3MgdHtjb25zdHJ1Y3Rvcih0KXt0aGlzLnhockZhY3Rvcnk9dH1oYW5kbGUodCl7aWYoIkpTT05QIj09PXQubWV0aG9kKXRocm93IG5ldyBFcnJvcigiQXR0ZW1wdGVkIHRvIGNvbnN0cnVjdCBKc29ucCByZXF1ZXN0IHdpdGhvdXQgSHR0cENsaWVudEpzb25wTW9kdWxlIGluc3RhbGxlZC4iKTtyZXR1cm4gbmV3IHYoZT0+e2NvbnN0IG49dGhpcy54aHJGYWN0b3J5LmJ1aWxkKCk7aWYobi5vcGVuKHQubWV0aG9kLHQudXJsV2l0aFBhcmFtcyksdC53aXRoQ3JlZGVudGlhbHMmJihuLndpdGhDcmVkZW50aWFscz0hMCksdC5oZWFkZXJzLmZvckVhY2goKHQsZSk9Pm4uc2V0UmVxdWVzdEhlYWRlcih0LGUuam9pbigiLCIpKSksdC5oZWFkZXJzLmhhcygiQWNjZXB0Iil8fG4uc2V0UmVxdWVzdEhlYWRlcigiQWNjZXB0IiwiYXBwbGljYXRpb24vanNvbiwgdGV4dC9wbGFpbiwgKi8qIiksIXQuaGVhZGVycy5oYXMoIkNvbnRlbnQtVHlwZSIpKXtjb25zdCBlPXQuZGV0ZWN0Q29udGVudFR5cGVIZWFkZXIoKTtudWxsIT09ZSYmbi5zZXRSZXF1ZXN0SGVhZGVyKCJDb250ZW50LVR5cGUiLGUpfWlmKHQucmVzcG9uc2VUeXBlKXtjb25zdCBlPXQucmVzcG9uc2VUeXBlLnRvTG93ZXJDYXNlKCk7bi5yZXNwb25zZVR5cGU9Impzb24iIT09ZT9lOiJ0ZXh0In1jb25zdCByPXQuc2VyaWFsaXplQm9keSgpO2xldCBzPW51bGw7Y29uc3QgaT0oKT0+e2lmKG51bGwhPT1zKXJldHVybiBzO2NvbnN0IGU9MTIyMz09PW4uc3RhdHVzPzIwNDpuLnN0YXR1cyxyPW4uc3RhdHVzVGV4dHx8Ik9LIixpPW5ldyBIZyhuLmdldEFsbFJlc3BvbnNlSGVhZGVycygpKSxvPWZ1bmN0aW9uKHQpe3JldHVybiJyZXNwb25zZVVSTCJpbiB0JiZ0LnJlc3BvbnNlVVJMP3QucmVzcG9uc2VVUkw6L15YLVJlcXVlc3QtVVJMOi9tLnRlc3QodC5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKSk/dC5nZXRSZXNwb25zZUhlYWRlcigiWC1SZXF1ZXN0LVVSTCIpOm51bGx9KG4pfHx0LnVybDtyZXR1cm4gcz1uZXcgSmcoe2hlYWRlcnM6aSxzdGF0dXM6ZSxzdGF0dXNUZXh0OnIsdXJsOm99KSxzfSxvPSgpPT57bGV0e2hlYWRlcnM6cixzdGF0dXM6cyxzdGF0dXNUZXh0Om8sdXJsOmF9PWkoKSxsPW51bGw7MjA0IT09cyYmKGw9dm9pZCAwPT09bi5yZXNwb25zZT9uLnJlc3BvbnNlVGV4dDpuLnJlc3BvbnNlKSwwPT09cyYmKHM9bD8yMDA6MCk7bGV0IHU9cz49MjAwJiZzPDMwMDtpZigianNvbiI9PT10LnJlc3BvbnNlVHlwZSYmInN0cmluZyI9PXR5cGVvZiBsKXtjb25zdCB0PWw7bD1sLnJlcGxhY2Uob20sIiIpO3RyeXtsPSIiIT09bD9KU09OLnBhcnNlKGwpOm51bGx9Y2F0Y2goYyl7bD10LHUmJih1PSExLGw9e2Vycm9yOmMsdGV4dDpsfSl9fXU/KGUubmV4dChuZXcgWGcoe2JvZHk6bCxoZWFkZXJzOnIsc3RhdHVzOnMsc3RhdHVzVGV4dDpvLHVybDphfHx2b2lkIDB9KSksZS5jb21wbGV0ZSgpKTplLmVycm9yKG5ldyB0bSh7ZXJyb3I6bCxoZWFkZXJzOnIsc3RhdHVzOnMsc3RhdHVzVGV4dDpvLHVybDphfHx2b2lkIDB9KSl9LGE9dD0+e2NvbnN0e3VybDpyfT1pKCkscz1uZXcgdG0oe2Vycm9yOnQsc3RhdHVzOm4uc3RhdHVzfHwwLHN0YXR1c1RleHQ6bi5zdGF0dXNUZXh0fHwiVW5rbm93biBFcnJvciIsdXJsOnJ8fHZvaWQgMH0pO2UuZXJyb3Iocyl9O2xldCBsPSExO2NvbnN0IHU9cj0+e2x8fChlLm5leHQoaSgpKSxsPSEwKTtsZXQgcz17dHlwZTpRZy5Eb3dubG9hZFByb2dyZXNzLGxvYWRlZDpyLmxvYWRlZH07ci5sZW5ndGhDb21wdXRhYmxlJiYocy50b3RhbD1yLnRvdGFsKSwidGV4dCI9PT10LnJlc3BvbnNlVHlwZSYmbi5yZXNwb25zZVRleHQmJihzLnBhcnRpYWxUZXh0PW4ucmVzcG9uc2VUZXh0KSxlLm5leHQocyl9LGM9dD0+e2xldCBuPXt0eXBlOlFnLlVwbG9hZFByb2dyZXNzLGxvYWRlZDp0LmxvYWRlZH07dC5sZW5ndGhDb21wdXRhYmxlJiYobi50b3RhbD10LnRvdGFsKSxlLm5leHQobil9O3JldHVybiBuLmFkZEV2ZW50TGlzdGVuZXIoImxvYWQiLG8pLG4uYWRkRXZlbnRMaXN0ZW5lcigiZXJyb3IiLGEpLHQucmVwb3J0UHJvZ3Jlc3MmJihuLmFkZEV2ZW50TGlzdGVuZXIoInByb2dyZXNzIix1KSxudWxsIT09ciYmbi51cGxvYWQmJm4udXBsb2FkLmFkZEV2ZW50TGlzdGVuZXIoInByb2dyZXNzIixjKSksbi5zZW5kKHIpLGUubmV4dCh7dHlwZTpRZy5TZW50fSksKCk9PntuLnJlbW92ZUV2ZW50TGlzdGVuZXIoImVycm9yIixhKSxuLnJlbW92ZUV2ZW50TGlzdGVuZXIoImxvYWQiLG8pLHQucmVwb3J0UHJvZ3Jlc3MmJihuLnJlbW92ZUV2ZW50TGlzdGVuZXIoInByb2dyZXNzIix1KSxudWxsIT09ciYmbi51cGxvYWQmJm4udXBsb2FkLnJlbW92ZUV2ZW50TGlzdGVuZXIoInByb2dyZXNzIixjKSksbi5yZWFkeVN0YXRlIT09bi5ET05FJiZuLmFib3J0KCl9fSl9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKEd0KGFtKSl9LHQuXHUwMjc1cHJvdj11dCh7dG9rZW46dCxmYWN0b3J5OnQuXHUwMjc1ZmFjfSksdH0pKCk7Y29uc3QgY209bmV3IE50KCJYU1JGX0NPT0tJRV9OQU1FIiksaG09bmV3IE50KCJYU1JGX0hFQURFUl9OQU1FIik7Y2xhc3MgZG17fWxldCBwbT0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKHQsZSxuKXt0aGlzLmRvYz10LHRoaXMucGxhdGZvcm09ZSx0aGlzLmNvb2tpZU5hbWU9bix0aGlzLmxhc3RDb29raWVTdHJpbmc9IiIsdGhpcy5sYXN0VG9rZW49bnVsbCx0aGlzLnBhcnNlQ291bnQ9MH1nZXRUb2tlbigpe2lmKCJzZXJ2ZXIiPT09dGhpcy5wbGF0Zm9ybSlyZXR1cm4gbnVsbDtjb25zdCB0PXRoaXMuZG9jLmNvb2tpZXx8IiI7cmV0dXJuIHQhPT10aGlzLmxhc3RDb29raWVTdHJpbmcmJih0aGlzLnBhcnNlQ291bnQrKyx0aGlzLmxhc3RUb2tlbj1VdSh0LHRoaXMuY29va2llTmFtZSksdGhpcy5sYXN0Q29va2llU3RyaW5nPXQpLHRoaXMubGFzdFRva2VufX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KShHdChCbCksR3QoWmEpLEd0KGNtKSl9LHQuXHUwMjc1cHJvdj11dCh7dG9rZW46dCxmYWN0b3J5OnQuXHUwMjc1ZmFjfSksdH0pKCksZm09KCgpPT57Y2xhc3MgdHtjb25zdHJ1Y3Rvcih0LGUpe3RoaXMudG9rZW5TZXJ2aWNlPXQsdGhpcy5oZWFkZXJOYW1lPWV9aW50ZXJjZXB0KHQsZSl7Y29uc3Qgbj10LnVybC50b0xvd2VyQ2FzZSgpO2lmKCJHRVQiPT09dC5tZXRob2R8fCJIRUFEIj09PXQubWV0aG9kfHxuLnN0YXJ0c1dpdGgoImh0dHA6Ly8iKXx8bi5zdGFydHNXaXRoKCJodHRwczovLyIpKXJldHVybiBlLmhhbmRsZSh0KTtjb25zdCByPXRoaXMudG9rZW5TZXJ2aWNlLmdldFRva2VuKCk7cmV0dXJuIG51bGw9PT1yfHx0LmhlYWRlcnMuaGFzKHRoaXMuaGVhZGVyTmFtZSl8fCh0PXQuY2xvbmUoe2hlYWRlcnM6dC5oZWFkZXJzLnNldCh0aGlzLmhlYWRlck5hbWUscil9KSksZS5oYW5kbGUodCl9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKEd0KGRtKSxHdChobSkpfSx0Llx1MDI3NXByb3Y9dXQoe3Rva2VuOnQsZmFjdG9yeTp0Llx1MDI3NWZhY30pLHR9KSgpLGdtPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IodCxlKXt0aGlzLmJhY2tlbmQ9dCx0aGlzLmluamVjdG9yPWUsdGhpcy5jaGFpbj1udWxsfWhhbmRsZSh0KXtpZihudWxsPT09dGhpcy5jaGFpbil7Y29uc3QgdD10aGlzLmluamVjdG9yLmdldChzbSxbXSk7dGhpcy5jaGFpbj10LnJlZHVjZVJpZ2h0KCh0LGUpPT5uZXcgcm0odCxlKSx0aGlzLmJhY2tlbmQpfXJldHVybiB0aGlzLmNoYWluLmhhbmRsZSh0KX19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCkoR3QoVWcpLEd0KHlpKSl9LHQuXHUwMjc1cHJvdj11dCh7dG9rZW46dCxmYWN0b3J5OnQuXHUwMjc1ZmFjfSksdH0pKCksbW09KCgpPT57Y2xhc3MgdHtzdGF0aWMgZGlzYWJsZSgpe3JldHVybntuZ01vZHVsZTp0LHByb3ZpZGVyczpbe3Byb3ZpZGU6Zm0sdXNlQ2xhc3M6aW19XX19c3RhdGljIHdpdGhPcHRpb25zKGU9e30pe3JldHVybntuZ01vZHVsZTp0LHByb3ZpZGVyczpbZS5jb29raWVOYW1lP3twcm92aWRlOmNtLHVzZVZhbHVlOmUuY29va2llTmFtZX06W10sZS5oZWFkZXJOYW1lP3twcm92aWRlOmhtLHVzZVZhbHVlOmUuaGVhZGVyTmFtZX06W11dfX19cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxwcm92aWRlcnM6W2ZtLHtwcm92aWRlOnNtLHVzZUV4aXN0aW5nOmZtLG11bHRpOiEwfSx7cHJvdmlkZTpkbSx1c2VDbGFzczpwbX0se3Byb3ZpZGU6Y20sdXNlVmFsdWU6IlhTUkYtVE9LRU4ifSx7cHJvdmlkZTpobSx1c2VWYWx1ZToiWC1YU1JGLVRPS0VOIn1dfSksdH0pKCkseW09KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxwcm92aWRlcnM6W25tLHtwcm92aWRlOkxnLHVzZUNsYXNzOmdtfSx1bSx7cHJvdmlkZTpVZyx1c2VFeGlzdGluZzp1bX0sbG0se3Byb3ZpZGU6YW0sdXNlRXhpc3Rpbmc6bG19XSxpbXBvcnRzOltbbW0ud2l0aE9wdGlvbnMoe2Nvb2tpZU5hbWU6IlhTUkYtVE9LRU4iLGhlYWRlck5hbWU6IlgtWFNSRi1UT0tFTiJ9KV1dfSksdH0pKCk7ZnVuY3Rpb24gdm0odCxlLG4scil7dmFyIHMsaT1hcmd1bWVudHMubGVuZ3RoLG89aTwzP2U6bnVsbD09PXI/cj1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsbik6cjtpZigib2JqZWN0Ij09dHlwZW9mIFJlZmxlY3QmJiJmdW5jdGlvbiI9PXR5cGVvZiBSZWZsZWN0LmRlY29yYXRlKW89UmVmbGVjdC5kZWNvcmF0ZSh0LGUsbixyKTtlbHNlIGZvcih2YXIgYT10Lmxlbmd0aC0xO2E+PTA7YS0tKShzPXRbYV0pJiYobz0oaTwzP3Mobyk6aT4zP3MoZSxuLG8pOnMoZSxuKSl8fG8pO3JldHVybiBpPjMmJm8mJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLG4sbyksb31mdW5jdGlvbiBibSh0LGUpe2lmKCJvYmplY3QiPT10eXBlb2YgUmVmbGVjdCYmImZ1bmN0aW9uIj09dHlwZW9mIFJlZmxlY3QubWV0YWRhdGEpcmV0dXJuIFJlZmxlY3QubWV0YWRhdGEodCxlKX1mdW5jdGlvbiB3bSh0LGUpezEmdCYmS2koMCl9Y29uc3QgX209WyIqIl07ZnVuY3Rpb24gQ20odCxlKXt2YXIgbixyOzEmdCYmKGZ1bmN0aW9uKHQsZSxuKXtjb25zdCByPXRuKCkscz1lbigpLGk9dCtEZSxvPXMuZmlyc3RDcmVhdGVQYXNzP2Z1bmN0aW9uKHQsZSxuLHIscyl7Y29uc3QgaT1lLmNvbnN0cyxvPUtlKGksciksYT1acihlLHQsMywibmctY29udGFpbmVyIixvKTtyZXR1cm4gbnVsbCE9PW8mJmJpKGEsbywhMCksaXMoZSxuLGEsS2UoaSxzKSksbnVsbCE9PWUucXVlcmllcyYmZS5xdWVyaWVzLmVsZW1lbnRTdGFydChlLGEpLGF9KHQscyxyLGUsbik6cy5kYXRhW2ldO3NuKG8sITApO2NvbnN0IGE9cltpXT1yWzExXS5jcmVhdGVDb21tZW50KCIiKTtMcyhzLHIsYSxvKSx2cihhLHIpLFRlKG8pJiYoWHIocyxyLG8pLEpyKHMsbyxyKSksbnVsbCE9biYmdHMocixvKX0oMCxuLHIpLGZ1bmN0aW9uKCl7bGV0IHQ9cm4oKTtjb25zdCBlPWVuKCk7b24oKT9hbigpOih0PXQucGFyZW50LHNuKHQsITEpKSxlLmZpcnN0Q3JlYXRlUGFzcyYmKFNuKGUsdCkseGUodCkmJmUucXVlcmllcy5lbGVtZW50RW5kKHQpKX0oKSl9ZnVuY3Rpb24gRG0odCxlKXtpZigxJnQpe2NvbnN0IHQ9TGkoKTtOaSgwLCJzZWN0aW9uIiwyKSxOaSgxLCJwby1hY2NvcmRpb24taXRlbS1oZWFkZXIiLDMpLCRpKCJwLXRvZ2dsZSIsKGZ1bmN0aW9uKG4pe25uKHQpO2NvbnN0IHI9ZS4kaW1wbGljaXQ7cmV0dXJuIFdpKCkuaGVhZGVyVG9nZ2xlKG4scil9KSksVmkoKSxOaSgyLCJwby1hY2NvcmRpb24taXRlbS1ib2R5Iiw0KSxJaSgzLENtLDEsMCwibmctY29udGFpbmVyIiw1KSxWaSgpLFZpKCl9aWYoMiZ0KXtjb25zdCB0PWUuJGltcGxpY2l0O3JvKCJwby1hY2NvcmRpb24taXRlbS1hY3RpdmUiLHQuZXhwYW5kZWQpLGpyKDEpLE1pKCJwLWV4cGFuZGVkIix0LmV4cGFuZGVkKSgicC1sYWJlbCIsdC5sYWJlbCksanIoMSksTWkoInAtZXhwYW5kZWQiLHQuZXhwYW5kZWQpLGpyKDEpLE1pKCJuZ1RlbXBsYXRlT3V0bGV0Iix0LnRlbXBsYXRlUmVmKX19ZnVuY3Rpb24gRW0odCxlKXsxJnQmJihOaSgwLCJkaXYiLDEpLE5pKDEsImRpdiIsMiksS2koMiksVmkoKSxWaSgpKSwyJnQmJk1pKCJAdG9nZ2xlQm9keSIsdm9pZCAwKX1mdW5jdGlvbiBBbSh0LGUpe2lmKDEmdCYmKE5pKDAsInNwYW4iLDIpLGdvKDEpLFZpKCkpLDImdCl7Y29uc3QgdD1XaSgpO2pyKDEpLG1vKHQudGV4dCl9fWNvbnN0IFNtPVsiYnV0dG9uIl07ZnVuY3Rpb24geG0odCxlKXsxJnQmJihOaSgwLCJkaXYiLDUpLEJpKDEsInBvLWxvYWRpbmctaWNvbiIsNiksVmkoKSl9ZnVuY3Rpb24ga20odCxlKXsxJnQmJkJpKDAsInNwYW4iLDcpLDImdCYmdm8oInBvLWljb24gIixXaSgpLmljb24sIiIpfWZ1bmN0aW9uIFRtKHQsZSl7aWYoMSZ0JiYoTmkoMCwic3BhbiIsOCksZ28oMSksVmkoKSksMiZ0KXtjb25zdCB0PVdpKCk7anIoMSksbW8odC5sYWJlbCl9fWZ1bmN0aW9uIEZtKHQsZSl7aWYoMSZ0JiYoTmkoMCwic3BhbiIsMiksQmkoMSwic3BhbiIsMyksZ28oMiksVmkoKSksMiZ0KXtjb25zdCB0PVdpKCk7anIoMikseW8oIiAiLHQuZXJyb3JQYXR0ZXJuLCIgIil9fWZ1bmN0aW9uIE9tKHQsZSl7aWYoMSZ0JiYoTmkoMCwic3BhbiIsNSksZ28oMSksVmkoKSksMiZ0KXtjb25zdCB0PVdpKCk7anIoMSksbW8odC5nZXRPcHRpb25hbFRleHQoKSl9fWZ1bmN0aW9uIFBtKHQsZSl7aWYoMSZ0JiYoTmkoMCwiZGl2Iiw2KSxnbygxKSxWaSgpKSwyJnQpe2NvbnN0IHQ9V2koKTtqcigxKSxtbyh0LmhlbHApfX1jb25zdCBJbT1bIm1vZGFsQ29udGVudCJdO2Z1bmN0aW9uIFJtKHQsZSl7aWYoMSZ0KXtjb25zdCB0PUxpKCk7TmkoMCwiYSIsMTQpLCRpKCJjbGljayIsKGZ1bmN0aW9uKCl7cmV0dXJuIG5uKHQpLFdpKDIpLmNsb3NlKCEwKX0pKSxCaSgxLCJzcGFuIiwxNSksVmkoKX19ZnVuY3Rpb24gTW0odCxlKXtpZigxJnQpe2NvbnN0IHQ9TGkoKTtOaSgwLCJwby1idXR0b24iLDE2KSwkaSgicC1jbGljayIsKGZ1bmN0aW9uKCl7cmV0dXJuIG5uKHQpLFdpKDIpLnNlY29uZGFyeUFjdGlvbi5hY3Rpb24oKX0pKSxWaSgpfWlmKDImdCl7Y29uc3QgdD1XaSgyKTtNaSgicC1kaXNhYmxlZCIsdC5zZWNvbmRhcnlBY3Rpb24uZGlzYWJsZWQpKCJwLWxhYmVsIix0LnNlY29uZGFyeUFjdGlvbi5sYWJlbCkoInAtbG9hZGluZyIsdC5zZWNvbmRhcnlBY3Rpb24ubG9hZGluZykoInAtdHlwZSIsdC5nZXRTZWNvbmRhcnlBY3Rpb25CdXR0b25UeXBlKCkpfX1mdW5jdGlvbiBqbSh0LGUpe2lmKDEmdCl7Y29uc3QgdD1MaSgpO05pKDAsImRpdiIsMSksJGkoImtleWRvd24uZXNjIiwoZnVuY3Rpb24oZSl7cmV0dXJuIG5uKHQpLFdpKCkuY2xvc2VNb2RhbE9uRXNjYXBlS2V5KGUpfSkpLE5pKDEsImRpdiIsMiksTmkoMiwiZGl2IiwzKSwkaSgibW91c2Vkb3duIiwoZnVuY3Rpb24oZSl7cmV0dXJuIG5uKHQpLFdpKCkub25DbGlja091dChlKX0pKSxOaSgzLCJkaXYiLDQpLE5pKDQsImRpdiIsNSw2KSxOaSg2LCJkaXYiLDcpLE5pKDcsImRpdiIsOCksZ28oOCksVmkoKSxJaSg5LFJtLDIsMCwiYSIsOSksVmkoKSxOaSgxMCwiZGl2IiwxMCksS2koMTEpLFZpKCksTmkoMTIsImRpdiIsMTEpLElpKDEzLE1tLDEsNCwicG8tYnV0dG9uIiwxMiksTmkoMTQsInBvLWJ1dHRvbiIsMTMpLCRpKCJwLWNsaWNrIiwoZnVuY3Rpb24oKXtyZXR1cm4gbm4odCksV2koKS5wcmltYXJ5QWN0aW9uLmFjdGlvbigpfSkpLFZpKCksVmkoKSxWaSgpLFZpKCksVmkoKSxWaSgpLFZpKCl9aWYoMiZ0KXtjb25zdCB0PVdpKCk7anIoNCksdm8oInBvLW1vZGFsLWNvbnRlbnQgcG8tbW9kYWwtIix0LnNpemUsIiIpLGpyKDQpLHlvKCIgIix0LnRpdGxlLCIgIiksanIoMSksTWkoIm5nSWYiLCF0LmhpZGVDbG9zZSksanIoNCksTWkoIm5nSWYiLHQuc2Vjb25kYXJ5QWN0aW9uKSxqcigxKSxNaSgicC1kaXNhYmxlZCIsdC5wcmltYXJ5QWN0aW9uLmRpc2FibGVkKSgicC1sYWJlbCIsdC5wcmltYXJ5QWN0aW9uLmxhYmVsKSgicC1sb2FkaW5nIix0LnByaW1hcnlBY3Rpb24ubG9hZGluZykoInAtdHlwZSIsdC5nZXRQcmltYXJ5QWN0aW9uQnV0dG9uVHlwZSgpKX19Y29uc3QgTm09WyJ0b2FzdGVyIl07ZnVuY3Rpb24gVm0odCxlKXtpZigxJnQpe2NvbnN0IHQ9TGkoKTtOaSgwLCJkaXYiLDYpLCRpKCJjbGljayIsKGZ1bmN0aW9uKCl7cmV0dXJuIG5uKHQpLFdpKDIpLnBvVG9hc3RlckFjdGlvbigpfSkpLGdvKDEpLFZpKCl9aWYoMiZ0KXtjb25zdCB0PVdpKDIpO2pyKDEpLHlvKCIgIix0LmFjdGlvbkxhYmVsLCIgIil9fWZ1bmN0aW9uIEJtKHQsZSl7aWYoMSZ0KXtjb25zdCB0PUxpKCk7TmkoMCwiZGl2IiwxLDIpLCRpKCJjbGljayIsKGZ1bmN0aW9uKCl7cmV0dXJuIG5uKHQpLFdpKCkuY2xvc2UoKX0pKSxOaSgyLCJkaXYiLDMpLEJpKDMsInNwYW4iKSxWaSgpLE5pKDQsImRpdiIsNCksZ28oNSksVmkoKSxJaSg2LFZtLDIsMSwiZGl2Iiw1KSxWaSgpfWlmKDImdCl7Y29uc3QgdD1XaSgpOyJwby10b2FzdGVyICIsbj10LmdldFRvYXN0ZXJUeXBlKCksIiAiLHI9dC5nZXRUb2FzdGVyUG9zaXRpb24oKSwiIHBvLWNsaWNrYWJsZSIsaW8oc2Usc28sZnVuY3Rpb24odCxlLG4scixzLGkpe2NvbnN0IG89ZnVuY3Rpb24odCxlLG4scil7Y29uc3Qgcz1GaSh0LGUsbik7cmV0dXJuIEZpKHQsZSsxLHIpfHxzfSh0LEplLmxGcmFtZS5iaW5kaW5nSW5kZXgsbixzKTtyZXR1cm4gaG4oMiksbz9lK0huKG4pK3IrSG4ocykraTpPcn0odG4oKSwicG8tdG9hc3RlciAiLG4sIiAiLHIsIiBwby1jbGlja2FibGUiKSwhMCksanIoMyksdm8oInBvLWljb24gIix0LmdldEljb24oKSwiIiksanIoMiksbW8odC5tZXNzYWdlKSxqcigxKSxNaSgibmdJZiIsdm9pZCAwIT09dC5hY3Rpb24pfXZhciBuLHJ9ZnVuY3Rpb24gTG0odCxlKXtpZigxJnQpe2NvbnN0IHQ9TGkoKTtOaSgwLCJzcGFuIiwxKSwkaSgiY2xpY2siLChmdW5jdGlvbigpe3JldHVybiBubih0KSxXaSgpLmNsZWFyKCl9KSksVmkoKX19Y29uc3QgVW09WyJpbnAiXTtmdW5jdGlvbiBIbSh0LGUpe2lmKDEmdCYmKE5pKDAsImRpdiIsOCksQmkoMSwic3BhbiIpLFZpKCkpLDImdCl7Y29uc3QgdD1XaSgpO2pyKDEpLHZvKCJwby1pY29uIHBvLWZpZWxkLWljb24gIix0Lmljb24sIiIpLHJvKCJwby1maWVsZC1pY29uLWRpc2FibGVkIix0LmRpc2FibGVkKX19ZnVuY3Rpb24gJG0odCxlKXtpZigxJnQmJihOaSgwLCJkaXYiLDYpLE5pKDEsInNwYW4iLDcpLGdvKDIpLFZpKCksVmkoKSksMiZ0KXtjb25zdCB0PVdpKCk7anIoMiksbW8odC50YWdPcmllbnRhdGlvbj90LmxhYmVsKyI6Ijp0LmxhYmVsKX19ZnVuY3Rpb24gem0odCxlKXtpZigxJnQmJkJpKDAsInNwYW4iLDgpLDImdCl7Y29uc3QgdD1XaSgpO01pKCJuZ0NsYXNzIiwhdC50eXBlJiZ0Lmljb25UeXBlU3RyaW5nP3QuaWNvbjp0Lmljb25Gcm9tVHlwZSl9fWZ1bmN0aW9uIHFtKHQsZSl7aWYoMSZ0JiYoTmkoMCwiZGl2Iiw2KSxCaSgxLCJwby10YWciLDcpLFZpKCkpLDImdCl7Y29uc3QgdD1XaSgpLiRpbXBsaWNpdCxlPVdpKCk7anIoMSksTWkoInAtY29sb3IiLGUudHlwZUNvbG9yKHQudHlwZSkpKCJwLXZhbHVlIixlLnR5cGVWYWx1ZSh0LnR5cGUpKX19ZnVuY3Rpb24gV20odCxlKXtpZigxJnQmJihOaSgwLCJwby1hY2NvcmRpb24taXRlbSIsNCksSWkoMSxxbSwyLDIsImRpdiIsNSksTmkoMiwiZGl2IiwxKSxOaSgzLCJwIiksZ28oNCksVmkoKSxWaSgpLFZpKCkpLDImdCl7Y29uc3QgdD1lLiRpbXBsaWNpdDtNaSgicC1sYWJlbCIsV2koKS5mb3JtYXREZXRhaWxJdGVtVGl0bGUodCkpLGpyKDEpLE1pKCJuZ0lmIix0LnR5cGUpLGpyKDMpLG1vKHQuZGV0YWlsZWRNZXNzYWdlKX19bGV0IFptPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IoKXt0aGlzLnN1YmplY3RDaGlsZD1uZXcgRH1yZWNlaXZlRnJvbUNoaWxkQWNjb3JkaW9uQ2xpY2tlZCgpe3JldHVybiB0aGlzLnN1YmplY3RDaGlsZC5hc09ic2VydmFibGUoKX1zZW5kVG9QYXJlbnRBY2NvcmRpb25JdGVtQ2xpY2tlZCh0KXt0aGlzLnN1YmplY3RDaGlsZC5uZXh0KHQpfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0sdC5cdTAyNzVwcm92PXV0KHt0b2tlbjp0LGZhY3Rvcnk6dC5cdTAyNzVmYWN9KSx0fSkoKSxHbT0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKHQpe3RoaXMuYWNjb3JkaW9uU2VydmljZT10fWNvbGxhcHNlKCl7dGhpcy5leHBhbmRlZD0hMSx0aGlzLmFjY29yZGlvblNlcnZpY2Uuc2VuZFRvUGFyZW50QWNjb3JkaW9uSXRlbUNsaWNrZWQodGhpcyl9ZXhwYW5kKCl7dGhpcy5leHBhbmRlZD0hMCx0aGlzLmFjY29yZGlvblNlcnZpY2Uuc2VuZFRvUGFyZW50QWNjb3JkaW9uSXRlbUNsaWNrZWQodGhpcyl9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKFJpKFptKSl9LHQuXHUwMjc1Y21wPWRlKHt0eXBlOnQsc2VsZWN0b3JzOltbInBvLWFjY29yZGlvbi1pdGVtIl1dLHZpZXdRdWVyeTpmdW5jdGlvbih0LGUpe3ZhciBuOzEmdCYmUmEodGEsITApLDImdCYmSWEobj1OYSgpKSYmKGUudGVtcGxhdGVSZWY9bi5maXJzdCl9LGlucHV0czp7bGFiZWw6WyJwLWxhYmVsIiwibGFiZWwiXX0sbmdDb250ZW50U2VsZWN0b3JzOl9tLGRlY2xzOjEsdmFyczowLHRlbXBsYXRlOmZ1bmN0aW9uKHQsZSl7MSZ0JiYoR2koKSxJaSgwLHdtLDEsMCwibmctdGVtcGxhdGUiKSl9LGVuY2Fwc3VsYXRpb246Mn0pLHR9KSgpLEttPSgoKT0+e2NsYXNzIHQgZXh0ZW5kcyBjbGFzc3t9e2NvbnN0cnVjdG9yKHQpe3N1cGVyKCksdGhpcy5hY2NvcmRpb25TZXJ2aWNlPXQsdGhpcy5yZWNlaXZlRnJvbUNoaWxkQWNjb3JkaW9uU3Vic2NyaXB0aW9uKCl9bmdPbkRlc3Ryb3koKXt0aGlzLmFjY29yZGlvblNlcnZpY2VTdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKX1oZWFkZXJUb2dnbGUodCxlKXtlLmV4cGFuZGVkPXQsdGhpcy50b2dnbGUoZSl9cmVjZWl2ZUZyb21DaGlsZEFjY29yZGlvblN1YnNjcmlwdGlvbigpe3RoaXMuYWNjb3JkaW9uU2VydmljZVN1YnNjcmlwdGlvbj10aGlzLmFjY29yZGlvblNlcnZpY2UucmVjZWl2ZUZyb21DaGlsZEFjY29yZGlvbkNsaWNrZWQoKS5zdWJzY3JpYmUodD0+dGhpcy50b2dnbGUodCkpfXRvZ2dsZSh0KXt0LmV4cGFuZGVkPyh0aGlzLmV4cGFuZGVkQWN0aXZlQWNjb3JkaW9uSXRlbSYmdGhpcy5leHBhbmRlZEFjdGl2ZUFjY29yZGlvbkl0ZW0uY29sbGFwc2UoKSx0aGlzLmV4cGFuZGVkQWN0aXZlQWNjb3JkaW9uSXRlbT10KTp0aGlzLmV4cGFuZGVkQWN0aXZlQWNjb3JkaW9uSXRlbT1udWxsfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KShSaShabSkpfSx0Llx1MDI3NWNtcD1kZSh7dHlwZTp0LHNlbGVjdG9yczpbWyJwby1hY2NvcmRpb24iXV0sY29udGVudFF1ZXJpZXM6ZnVuY3Rpb24odCxlLG4pe3ZhciByLHMsaSxvLGE7MSZ0JiYocz1uLGk9R20sbz0hMSxmdW5jdGlvbih0LGUsbixyLHMsaSxvLGEpe3QuZmlyc3RDcmVhdGVQYXNzJiYoQmEodCxuZXcgeGEobixyLCExLHMpLG8uaW5kZXgpLGZ1bmN0aW9uKHQsZSl7Y29uc3Qgbj10LmNvbnRlbnRRdWVyaWVzfHwodC5jb250ZW50UXVlcmllcz1bXSk7ZSE9PSh0LmNvbnRlbnRRdWVyaWVzLmxlbmd0aD9uW24ubGVuZ3RoLTFdOi0xKSYmbi5wdXNoKHQucXVlcmllcy5sZW5ndGgtMSxlKX0odCxhKSksVmEodCxlKX0oZW4oKSx0bigpLGksbyxhLDAscm4oKSxzKSksMiZ0JiZJYShyPU5hKCkpJiYoZS5wb0FjY29yZGlvbkl0ZW1zPXIpfSxmZWF0dXJlczpbU28oW1ptXSksX2ldLGRlY2xzOjIsdmFyczoxLGNvbnN0czpbWzEsInBvLWFjY29yZGlvbiIsInBvLWNvbnRhaW5lciIsInBvLWNvbnRhaW5lci1uby1wYWRkaW5nIl0sWyJjbGFzcyIsInBvLWFjY29yZGlvbi1pdGVtIiwzLCJwby1hY2NvcmRpb24taXRlbS1hY3RpdmUiLDQsIm5nRm9yIiwibmdGb3JPZiJdLFsxLCJwby1hY2NvcmRpb24taXRlbSJdLFszLCJwLWV4cGFuZGVkIiwicC1sYWJlbCIsInAtdG9nZ2xlIl0sWzMsInAtZXhwYW5kZWQiXSxbNCwibmdUZW1wbGF0ZU91dGxldCJdXSx0ZW1wbGF0ZTpmdW5jdGlvbih0LGUpezEmdCYmKE5pKDAsImRpdiIsMCksSWkoMSxEbSw0LDYsInNlY3Rpb24iLDEpLFZpKCkpLDImdCYmKGpyKDEpLE1pKCJuZ0Zvck9mIixlLnBvQWNjb3JkaW9uSXRlbXMpKX0sZGlyZWN0aXZlczpmdW5jdGlvbigpe3JldHVyblt6dSxZbSxRbSxLdV19LGVuY2Fwc3VsYXRpb246Mn0pLHR9KSgpLFFtPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IoKXt0aGlzLmV4cGFuZGVkPSExfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0sdC5cdTAyNzVjbXA9ZGUoe3R5cGU6dCxzZWxlY3RvcnM6W1sicG8tYWNjb3JkaW9uLWl0ZW0tYm9keSJdXSxpbnB1dHM6e2V4cGFuZGVkOlsicC1leHBhbmRlZCIsImV4cGFuZGVkIl19LG5nQ29udGVudFNlbGVjdG9yczpfbSxkZWNsczoxLHZhcnM6MSxjb25zdHM6W1siY2xhc3MiLCJwby1hY2NvcmRpb24taXRlbS1ib2R5Iiw0LCJuZ0lmIl0sWzEsInBvLWFjY29yZGlvbi1pdGVtLWJvZHkiXSxbMSwicG8tYWNjb3JkaW9uLWl0ZW0tYm9keS1jb250ZW50Il1dLHRlbXBsYXRlOmZ1bmN0aW9uKHQsZSl7MSZ0JiYoR2koKSxJaSgwLEVtLDMsMSwiZGl2IiwwKSksMiZ0JiZNaSgibmdJZiIsZS5leHBhbmRlZCl9LGRpcmVjdGl2ZXM6W1d1XSxlbmNhcHN1bGF0aW9uOjIsZGF0YTp7YW5pbWF0aW9uOltoZCgidG9nZ2xlQm9keSIsW2ZkKCIqID0+IHZvaWQiLFtwZCh7aGVpZ2h0OiIqIn0pLGRkKDIwMCxwZCh7aGVpZ2h0OjB9KSldKSxmZCgidm9pZCA9PiAqIixbcGQoe2hlaWdodDoiMCJ9KSxkZCgyMDAscGQoe2hlaWdodDoiKiJ9KSldKV0pXX19KSx0fSkoKSxZbT0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKCl7dGhpcy5leHBhbmRlZD0hMSx0aGlzLnRvZ2dsZT1uZXcgQ2F9b25DbGljaygpe3RoaXMuZXhwYW5kZWQ9IXRoaXMuZXhwYW5kZWQsdGhpcy50b2dnbGUuZW1pdCh0aGlzLmV4cGFuZGVkKX19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LHQuXHUwMjc1Y21wPWRlKHt0eXBlOnQsc2VsZWN0b3JzOltbInBvLWFjY29yZGlvbi1pdGVtLWhlYWRlciJdXSxpbnB1dHM6e2V4cGFuZGVkOlsicC1leHBhbmRlZCIsImV4cGFuZGVkIl0sbGFiZWw6WyJwLWxhYmVsIiwibGFiZWwiXX0sb3V0cHV0czp7dG9nZ2xlOiJwLXRvZ2dsZSJ9LGRlY2xzOjYsdmFyczoxLGNvbnN0czpbWzEsInBvLWFjY29yZGlvbi1pdGVtLWhlYWRlciJdLFsxLCJwby1hY2NvcmRpb24taXRlbS1oZWFkZXItYnV0dG9uIiwicG8tY2xpY2thYmxlIiwzLCJjbGljayJdLFsxLCJwby10ZXh0LWVsbGlwc2lzIiwicG8tYWNjb3JkaW9uLWl0ZW0taGVhZGVyLXRpdGxlIl0sWzEsInBvLWljb24iLCJwby1hY2NvcmRpb24taXRlbS1oZWFkZXItaWNvbiIsInBvLWljb24tYXJyb3ctZG93biJdLFsiaWNvbiIsIiJdXSx0ZW1wbGF0ZTpmdW5jdGlvbih0LGUpezEmdCYmKE5pKDAsImhlYWRlciIsMCksTmkoMSwiYnV0dG9uIiwxKSwkaSgiY2xpY2siLChmdW5jdGlvbigpe3JldHVybiBlLm9uQ2xpY2soKX0pKSxOaSgyLCJkaXYiLDIpLGdvKDMpLFZpKCksQmkoNCwic3BhbiIsMyw0KSxWaSgpLFZpKCkpLDImdCYmKGpyKDMpLG1vKGUubGFiZWwpKX0sZW5jYXBzdWxhdGlvbjoyLGNoYW5nZURldGVjdGlvbjowfSksdH0pKCksSm09KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxpbXBvcnRzOltbc2NdXX0pLHR9KSgpLFhtPSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0saW1wb3J0czpbW3NjXV19KSx0fSkoKTtjb25zdCB0eT1be2Rlc2NyaXB0aW9uOiJFbmdsaXNoIixsYW5ndWFnZToiZW4ifSx7ZGVzY3JpcHRpb246IkVzcGFceGYxb2wiLGxhbmd1YWdlOiJlcyJ9LHtkZXNjcmlwdGlvbjoiUG9ydHVndVx4ZWFzIixsYW5ndWFnZToicHQifSx7ZGVzY3JpcHRpb246IlBcdTA0NDNcdTA0NDFcdTA0NDFcdTA0M2FcdTA0MzhcdTA0MzkiLGxhbmd1YWdlOiJydSJ9XS5tYXAodD0+dC5sYW5ndWFnZSksZXk9InB0IixueT1be3NlcGFyYXRvcjoiLiIsbGFuZ3VhZ2U6ImVuIn0se3NlcGFyYXRvcjoiLCIsbGFuZ3VhZ2U6ImVzIn0se3NlcGFyYXRvcjoiLCIsbGFuZ3VhZ2U6InB0In0se3NlcGFyYXRvcjoiLCIsbGFuZ3VhZ2U6InJ1In1dLHJ5PVt7c2VwYXJhdG9yOiIsIixsYW5ndWFnZToiZW4ifSx7c2VwYXJhdG9yOiIuIixsYW5ndWFnZToiZXMifSx7c2VwYXJhdG9yOiIuIixsYW5ndWFnZToicHQifSx7c2VwYXJhdG9yOiIgIixsYW5ndWFnZToicnUifV07ZnVuY3Rpb24gc3koKXtjb25zdCB0PW5hdmlnYXRvci5sYW5ndWFnZXx8bmF2aWdhdG9yLnVzZXJMYW5ndWFnZSxlPWl5KHQpO3JldHVybiB0eS5pbmNsdWRlcyhlKT90OmV5fWZ1bmN0aW9uIGl5KHQpe3JldHVybih0fHxleSkudG9Mb3dlckNhc2UoKS5zdWJzdHJpbmcoMCwyKX1mdW5jdGlvbiBveSh0KXtyZXR1cm4gbmV3IFJlZ0V4cCgiXlthLXpdezJ9KC1bYS16XXsyfSk/JCIsImkiKS50ZXN0KHQpfWZ1bmN0aW9uIGF5KHQpe3JldHVybiJzdHJpbmciPT10eXBlb2YgdD8idHJ1ZSI9PT0odD10LnRvTG93ZXJDYXNlKCkudHJpbSgpKXx8Im9uIj09PXR8fCIiPT09dDoibnVtYmVyIj09dHlwZW9mIHQ/MT09PXQ6ISF0fWNvbnN0IGx5PSJQT19ERUZBVUxUX0xBTkdVQUdFIix1eT0iUE9fVVNFUl9MT0NBTEUiO2xldCBjeT0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKCl7fXNldCBsYW5ndWFnZURlZmF1bHQodCl7dCYmb3kodCkmJmxvY2FsU3RvcmFnZS5zZXRJdGVtKGx5LHQpfWdldCBsYW5ndWFnZURlZmF1bHQoKXtyZXR1cm4gbG9jYWxTdG9yYWdlLmdldEl0ZW0obHkpfWdldExhbmd1YWdlKCl7Y29uc3QgdD1sb2NhbFN0b3JhZ2UuZ2V0SXRlbSh1eSl8fHRoaXMubGFuZ3VhZ2VEZWZhdWx0fHxzeSgpO3JldHVybiB0JiZ0LnRvTG93ZXJDYXNlKCl9Z2V0TGFuZ3VhZ2VEZWZhdWx0KCl7cmV0dXJuIHRoaXMubGFuZ3VhZ2VEZWZhdWx0fWdldFNob3J0TGFuZ3VhZ2UoKXtjb25zdCB0PWl5KHRoaXMuZ2V0TGFuZ3VhZ2UoKSk7cmV0dXJuIHR5LmluY2x1ZGVzKHQpP3Q6ZXl9c2V0TGFuZ3VhZ2UodCl7b3kodCkmJmxvY2FsU3RvcmFnZS5zZXRJdGVtKHV5LHQudG9Mb3dlckNhc2UoKSl9c2V0TGFuZ3VhZ2VEZWZhdWx0KHQpe3RoaXMubGFuZ3VhZ2VEZWZhdWx0PXR9Z2V0TnVtYmVyU2VwYXJhdG9ycyh0KXt2YXIgZSxuLHIsczt0PXR8fHRoaXMuZ2V0U2hvcnRMYW5ndWFnZSgpO2NvbnN0IGk9bnVsbCE9PShlPW55LmZpbmQoZT0+ZS5sYW5ndWFnZT09PXQpKSYmdm9pZCAwIT09ZT9lOnt9LG89bnVsbCE9PShuPXJ5LmZpbmQoZT0+ZS5sYW5ndWFnZT09PXQpKSYmdm9pZCAwIT09bj9uOnt9O3JldHVybntkZWNpbWFsU2VwYXJhdG9yOm51bGwhPT0ocj1pLnNlcGFyYXRvcikmJnZvaWQgMCE9PXI/cjoiLCIsdGhvdXNhbmRTZXBhcmF0b3I6bnVsbCE9PShzPW8uc2VwYXJhdG9yKSYmdm9pZCAwIT09cz9zOiIuIn19fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSx0Llx1MDI3NXByb3Y9dXQoe2ZhY3Rvcnk6ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHR9LHRva2VuOnQscHJvdmlkZWRJbjoicm9vdCJ9KSx0fSkoKSxoeT0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVtb2Q9bWUoe3R5cGU6dH0pLHQuXHUwMjc1aW5qPWN0KHtmYWN0b3J5OmZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LGltcG9ydHM6W1tzYyxPZ11dfSksdH0pKCk7Y29uc3QgZHk9e2VuOntsb2FkaW5nOiJMb2FkaW5nIn0sZXM6e2xvYWRpbmc6IkNhcmdhbmRvIn0scHQ6e2xvYWRpbmc6IkNhcnJlZ2FuZG8ifSxydTp7bG9hZGluZzoiXHUwNDNmXHUwNDNlXHUwNDMzXHUwNDQwXHUwNDQzXHUwNDM3XHUwNDNhXHUwNDMwIn19O2xldCBweT0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKHQpe3RoaXMubGFuZ3VhZ2VTZXJ2aWNlPXQsdGhpcy5fc2NyZWVuTG9jaz0hMSx0aGlzLnRleHQ9dGhpcy5nZXRUZXh0RGVmYXVsdCgpfXNldCBzY3JlZW5Mb2NrKHQpe3RoaXMuX3NjcmVlbkxvY2s9YXkodCl9Z2V0IHNjcmVlbkxvY2soKXtyZXR1cm4gdGhpcy5fc2NyZWVuTG9ja31zZXQgdGV4dCh0KXt0aGlzLl90ZXh0PXR8fHRoaXMuZ2V0VGV4dERlZmF1bHQoKX1nZXQgdGV4dCgpe3JldHVybiB0aGlzLl90ZXh0fWdldFRleHREZWZhdWx0KCl7Y29uc3QgdD10aGlzLmxhbmd1YWdlU2VydmljZS5nZXRTaG9ydExhbmd1YWdlKCk7cmV0dXJuIGR5W3RdLmxvYWRpbmd9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKFJpKGN5KSl9LHQuXHUwMjc1ZGlyPXZlKHt0eXBlOnQsaW5wdXRzOnt0ZXh0OlsicC10ZXh0IiwidGV4dCJdLHNjcmVlbkxvY2s6WyJwLXNjcmVlbi1sb2NrIiwic2NyZWVuTG9jayJdfX0pLHR9KSgpLGZ5PSgoKT0+e2NsYXNzIHQgZXh0ZW5kcyBweXtjb25zdHJ1Y3Rvcih0LGUpe3N1cGVyKGUpLHRoaXMuY2hhbmdlRGV0ZWN0b3I9dH19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCkoUmkodGkpLFJpKGN5KSl9LHQuXHUwMjc1Y21wPWRlKHt0eXBlOnQsc2VsZWN0b3JzOltbInBvLWxvYWRpbmctb3ZlcmxheSJdXSxmZWF0dXJlczpbX2ldLGRlY2xzOjIsdmFyczo1LGNvbnN0czpbWzEsInBvLWxvYWRpbmctb3ZlcmxheS1jb250ZW50IiwzLCJwLXRleHQiXV0sdGVtcGxhdGU6ZnVuY3Rpb24odCxlKXsxJnQmJihOaSgwLCJkaXYiKSxCaSgxLCJwby1sb2FkaW5nIiwwKSxWaSgpKSwyJnQmJihybygicG8tb3ZlcmxheS1hYnNvbHV0ZSIsIWUuc2NyZWVuTG9jaykoInBvLW92ZXJsYXktZml4ZWQiLGUuc2NyZWVuTG9jayksanIoMSksTWkoInAtdGV4dCIsZS50ZXh0KSl9LGRpcmVjdGl2ZXM6ZnVuY3Rpb24oKXtyZXR1cm5beXldfSxlbmNhcHN1bGF0aW9uOjJ9KSx0fSkoKSxneT0oKCk9PntjbGFzcyB0e3NldCBuZXV0cmFsQ29sb3IodCl7dGhpcy5fbmV1dHJhbENvbG9yPWF5KHQpfWdldCBuZXV0cmFsQ29sb3IoKXtyZXR1cm4gdGhpcy5fbmV1dHJhbENvbG9yfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0sdC5cdTAyNzVjbXA9ZGUoe3R5cGU6dCxzZWxlY3RvcnM6W1sicG8tbG9hZGluZy1pY29uIl1dLGlucHV0czp7bmV1dHJhbENvbG9yOlsicC1uZXV0cmFsLWNvbG9yIiwibmV1dHJhbENvbG9yIl19LGRlY2xzOjksdmFyczoyLGNvbnN0czpbWzEsInBvLWxvYWRpbmctaWNvbiJdLFsxLCJwby1sb2FkaW5nLWljb24tYmFyIiwicG8tbG9hZGluZy1pY29uLWJhci0xIl0sWzEsInBvLWxvYWRpbmctaWNvbi1iYXIiLCJwby1sb2FkaW5nLWljb24tYmFyLTIiXSxbMSwicG8tbG9hZGluZy1pY29uLWJhciIsInBvLWxvYWRpbmctaWNvbi1iYXItMyJdLFsxLCJwby1sb2FkaW5nLWljb24tYmFyIiwicG8tbG9hZGluZy1pY29uLWJhci00Il0sWzEsInBvLWxvYWRpbmctaWNvbi1iYXIiLCJwby1sb2FkaW5nLWljb24tYmFyLTUiXSxbMSwicG8tbG9hZGluZy1pY29uLWJhciIsInBvLWxvYWRpbmctaWNvbi1iYXItNiJdLFsxLCJwby1sb2FkaW5nLWljb24tYmFyIiwicG8tbG9hZGluZy1pY29uLWJhci03Il0sWzEsInBvLWxvYWRpbmctaWNvbi1iYXIiLCJwby1sb2FkaW5nLWljb24tYmFyLTgiXV0sdGVtcGxhdGU6ZnVuY3Rpb24odCxlKXsxJnQmJihOaSgwLCJkaXYiLDApLEJpKDEsInNwYW4iLDEpLEJpKDIsInNwYW4iLDIpLEJpKDMsInNwYW4iLDMpLEJpKDQsInNwYW4iLDQpLEJpKDUsInNwYW4iLDUpLEJpKDYsInNwYW4iLDYpLEJpKDcsInNwYW4iLDcpLEJpKDgsInNwYW4iLDgpLFZpKCkpLDImdCYmcm8oInBvLWxvYWRpbmctaWNvbi1uZXV0cmFsLWNvbG9yIixlLm5ldXRyYWxDb2xvcil9LGVuY2Fwc3VsYXRpb246Mn0pLHR9KSgpLG15PSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IoKXt0aGlzLnRleHQ9IkNhcnJlZ2FuZG8ifX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0sdC5cdTAyNzVkaXI9dmUoe3R5cGU6dCxpbnB1dHM6e3RleHQ6WyJwLXRleHQiLCJ0ZXh0Il19fSksdH0pKCkseXk9KCgpPT57Y2xhc3MgdCBleHRlbmRzIG15e31yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIHRiKGV8fHQpfSx0Llx1MDI3NWNtcD1kZSh7dHlwZTp0LHNlbGVjdG9yczpbWyJwby1sb2FkaW5nIl1dLGZlYXR1cmVzOltfaV0sZGVjbHM6Myx2YXJzOjEsY29uc3RzOltbMSwicG8tbG9hZGluZyJdLFsiY2xhc3MiLCJwby1sb2FkaW5nLWxhYmVsIHBvLXRleHQtZWxsaXBzaXMiLDQsIm5nSWYiXSxbMSwicG8tbG9hZGluZy1sYWJlbCIsInBvLXRleHQtZWxsaXBzaXMiXV0sdGVtcGxhdGU6ZnVuY3Rpb24odCxlKXsxJnQmJihOaSgwLCJkaXYiLDApLEJpKDEsInBvLWxvYWRpbmctaWNvbiIpLElpKDIsQW0sMiwxLCJzcGFuIiwxKSxWaSgpKSwyJnQmJihqcigyKSxNaSgibmdJZiIsZS50ZXh0KSl9LGRpcmVjdGl2ZXM6W2d5LFd1XSxlbmNhcHN1bGF0aW9uOjJ9KSx0fSkoKSx2eT0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVtb2Q9bWUoe3R5cGU6dH0pLHQuXHUwMjc1aW5qPWN0KHtmYWN0b3J5OmZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LHByb3ZpZGVyczpbY3ldfSksdH0pKCksYnk9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxpbXBvcnRzOltbc2MsdnldXX0pLHR9KSgpO2Z1bmN0aW9uIHd5KHQsZSxuKXtyZXR1cm4gZnVuY3Rpb24ocil7dCYmdC5zZXQmJnQuc2V0LmJpbmQodGhpcykoZShyKSksdGhpc1tuXT1lKHIpfX1mdW5jdGlvbiBfeSh0LGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0JiZ0LmdldD90LmdldC5iaW5kKHRoaXMpKCk6dGhpc1tlXX19ZnVuY3Rpb24gQ3koKXtyZXR1cm4gZnVuY3Rpb24odCxlLG4pe3JldHVybiBmdW5jdGlvbih0LGUsbil7Y29uc3R7dGFyZ2V0OnIscHJvcGVydHk6cyxvcmlnaW5hbERlc2NyaXB0b3I6aX09dCxvPWZ1bmN0aW9uKHQsZSxuKXtjb25zdCByPSIkJF9fIitlO3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxyKSYmY29uc29sZS53YXJuKGBUaGUgcHJvcCAiJHtyfSIgaXMgYWxyZWFkeSBleGlzdCwgaXQgd2lsbCBiZSBvdmVycmlkZWQgYnkgSW5wdXRCb29sZWFuIGRlY29yYXRvci5gKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxyLHtjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KSxyfShyLHMpO3JldHVybntnZXQ6X3koaSxvKSxzZXQ6d3koaSxuLG8pfX0oe3RhcmdldDp0LHByb3BlcnR5OmUsb3JpZ2luYWxEZXNjcmlwdG9yOm59LDAsYXkpfX1jb25zdCBEeT1bImRlZmF1bHQiLCJwcmltYXJ5IiwiZGFuZ2VyIiwibGluayJdO2xldCBFeT0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKCl7dGhpcy5fZGlzYWJsZWQ9ITEsdGhpcy5fbG9hZGluZz0hMSx0aGlzLl9zbWFsbD0hMSx0aGlzLl90eXBlPSJkZWZhdWx0Iix0aGlzLmF1dG9Gb2N1cz0hMSx0aGlzLmNsaWNrPW5ldyBDYX1zZXQgbG9hZGluZyh0KXt0aGlzLl9sb2FkaW5nPWF5KHQpfWdldCBsb2FkaW5nKCl7cmV0dXJuIHRoaXMuX2xvYWRpbmd9c2V0IHNtYWxsKHQpe3RoaXMuX3NtYWxsPSIiPT09dHx8YXkodCl9Z2V0IHNtYWxsKCl7cmV0dXJuIHRoaXMuX3NtYWxsfXNldCB0eXBlKHQpe3RoaXMuX3R5cGU9RHkuaW5jbHVkZXModCk/dDoiZGVmYXVsdCJ9Z2V0IHR5cGUoKXtyZXR1cm4gdGhpcy5fdHlwZX1zZXQgZGlzYWJsZWQodCl7dGhpcy5fZGlzYWJsZWQ9IiI9PT10fHxheSh0KX1nZXQgZGlzYWJsZWQoKXtyZXR1cm4gdGhpcy5fZGlzYWJsZWR9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSx0Llx1MDI3NWRpcj12ZSh7dHlwZTp0LGlucHV0czp7YXV0b0ZvY3VzOlsicC1hdXRvLWZvY3VzIiwiYXV0b0ZvY3VzIl0sbG9hZGluZzpbInAtbG9hZGluZyIsImxvYWRpbmciXSxzbWFsbDpbInAtc21hbGwiLCJzbWFsbCJdLHR5cGU6WyJwLXR5cGUiLCJ0eXBlIl0sZGlzYWJsZWQ6WyJwLWRpc2FibGVkIiwiZGlzYWJsZWQiXSxsYWJlbDpbInAtbGFiZWwiLCJsYWJlbCJdLGljb246WyJwLWljb24iLCJpY29uIl19LG91dHB1dHM6e2NsaWNrOiJwLWNsaWNrIn19KSx2bShbQ3koKSxibSgiZGVzaWduOnR5cGUiLEJvb2xlYW4pXSx0LnByb3RvdHlwZSwiYXV0b0ZvY3VzIix2b2lkIDApLHR9KSgpLEF5PSgoKT0+e2NsYXNzIHQgZXh0ZW5kcyBFeXtuZ0FmdGVyVmlld0luaXQoKXt0aGlzLmF1dG9Gb2N1cyYmdGhpcy5mb2N1cygpfWZvY3VzKCl7dGhpcy5kaXNhYmxlZHx8dGhpcy5idXR0b25FbGVtZW50Lm5hdGl2ZUVsZW1lbnQuZm9jdXMoKX1vbkNsaWNrKCl7dGhpcy5jbGljay5lbWl0KG51bGwpfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIGViKGV8fHQpfSx0Llx1MDI3NWNtcD1kZSh7dHlwZTp0LHNlbGVjdG9yczpbWyJwby1idXR0b24iXV0sdmlld1F1ZXJ5OmZ1bmN0aW9uKHQsZSl7dmFyIG47MSZ0JiZSYShTbSwhMCksMiZ0JiZJYShuPU5hKCkpJiYoZS5idXR0b25FbGVtZW50PW4uZmlyc3QpfSxmZWF0dXJlczpbX2ldLGRlY2xzOjUsdmFyczoxNCxjb25zdHM6W1sidHlwZSIsImJ1dHRvbiIsMSwicG8tYnV0dG9uIiwicG8tdGV4dC1lbGxpcHNpcyIsMywiZGlzYWJsZWQiLCJjbGljayJdLFsiYnV0dG9uIiwiIl0sWyJjbGFzcyIsInBvLWJ1dHRvbi1sb2FkaW5nLWljb24iLDQsIm5nSWYiXSxbImFyaWEtaGlkZGVuIiwidHJ1ZSIsMywiY2xhc3MiLDQsIm5nSWYiXSxbImNsYXNzIiwicG8tYnV0dG9uLWxhYmVsIiw0LCJuZ0lmIl0sWzEsInBvLWJ1dHRvbi1sb2FkaW5nLWljb24iXSxbInAtbmV1dHJhbC1jb2xvciIsIiJdLFsiYXJpYS1oaWRkZW4iLCJ0cnVlIl0sWzEsInBvLWJ1dHRvbi1sYWJlbCJdXSx0ZW1wbGF0ZTpmdW5jdGlvbih0LGUpezEmdCYmKE5pKDAsImJ1dHRvbiIsMCwxKSwkaSgiY2xpY2siLChmdW5jdGlvbigpe3JldHVybiBlLm9uQ2xpY2soKX0pKSxJaSgyLHhtLDIsMCwiZGl2IiwyKSxJaSgzLGttLDEsMywic3BhbiIsMyksSWkoNCxUbSwyLDEsInNwYW4iLDQpLFZpKCkpLDImdCYmKHJvKCJwby1idXR0b24tZGFuZ2VyIiwiZGFuZ2VyIj09PWUudHlwZSkoInBvLWJ1dHRvbi1saW5rIiwibGluayI9PT1lLnR5cGUpKCJwby1idXR0b24tcHJpbWFyeSIsInByaW1hcnkiPT09ZS50eXBlKSgicG8tYnV0dG9uLXNtIixlLnNtYWxsKSgicG8tY2xpY2thYmxlIiwibGluayI9PT1lLnR5cGUpLE1pKCJkaXNhYmxlZCIsZS5kaXNhYmxlZHx8ZS5sb2FkaW5nKSxqcigyKSxNaSgibmdJZiIsZS5sb2FkaW5nKSxqcigxKSxNaSgibmdJZiIsZS5pY29uKSxqcigxKSxNaSgibmdJZiIsZS5sYWJlbCkpfSxkaXJlY3RpdmVzOltXdSxneV0sZW5jYXBzdWxhdGlvbjoyLGNoYW5nZURldGVjdGlvbjowfSksdH0pKCksU3k9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxpbXBvcnRzOltbc2MsYnldXX0pLHR9KSgpO2NvbnN0IHh5PVsiYm90dG9tIiwiYm90dG9tLWxlZnQiLCJib3R0b20tcmlnaHQiLCJsZWZ0IiwibGVmdC10b3AiLCJsZWZ0LWJvdHRvbSIsInRvcCIsInRvcC1yaWdodCIsInRvcC1sZWZ0IiwicmlnaHQiLCJyaWdodC1ib3R0b20iLCJyaWdodC10b3AiXTtsZXQga3k9KCgpPT57Y2xhc3MgdHtjb25zdHJ1Y3Rvcigpe3RoaXMuZGlmZmVyZW5jZURpYWdvbmFsVG9XaWR0aEFycm93PTMsdGhpcy5pc1NldEVsZW1lbnRXaWR0aD0hMSx0aGlzLm9mZnNldEFycm93PTEyfWFkanVzdFBvc2l0aW9uKHQpe2NvbnN0IGU9dHx8ImJvdHRvbSI7dGhpcy5lbGVtZW50UG9zaXRpb24oZSksdGhpcy5jdXN0b21Qb3NpdGlvbnMmJnRoaXMuY3VzdG9tUG9zaXRpb25zLmxlbmd0aD90aGlzLmFkanVzdEN1c3RvbVBvc2l0aW9uKGUpOnRoaXMuYWRqdXN0RGVmYXVsdFBvc2l0aW9uKGUpfWdldEFycm93RGlyZWN0aW9uKCl7cmV0dXJuIHRoaXMuYXJyb3dEaXJlY3Rpb259c2V0RWxlbWVudHModCxlLG4scixzPSExLGk9ITEpe3RoaXMuZWxlbWVudD10IGluc3RhbmNlb2YgRm8/dC5uYXRpdmVFbGVtZW50OnQsdGhpcy50YXJnZXRFbGVtZW50PW4gaW5zdGFuY2VvZiBGbz9uLm5hdGl2ZUVsZW1lbnQ6bix0aGlzLmVsZW1lbnRPZmZzZXQ9ZSx0aGlzLmN1c3RvbVBvc2l0aW9ucz1yLHRoaXMuaXNTZXRFbGVtZW50V2lkdGg9cyx0aGlzLmlzQ29ybmVyQWxpZ25lZD1pfWFkanVzdEN1c3RvbVBvc2l0aW9uKHQpe2NvbnN0IGU9dGhpcy5jdXN0b21Qb3NpdGlvbnMubGVuZ3RoO2xldCBuPTA7Zm9yKDtuKys8ZTspdGhpcy5vdmVyZmxvd0FsbFNpZGVzKHQpJiYodD10aGlzLm5leHRQb3NpdGlvbih0LHRoaXMuY3VzdG9tUG9zaXRpb25zKSx0aGlzLmVsZW1lbnRQb3NpdGlvbih0KSl9YWRqdXN0RGVmYXVsdFBvc2l0aW9uKHQpe2NvbnN0IGU9dGhpcy5nZXRNYWluUG9zaXRpb25zKCksbj1lLmxlbmd0aDtsZXQgcj0wO2Zvcig7cisrPG47KXtjb25zdCBuPXRoaXMuZ2V0TWFpblBvc2l0aW9uKHQpO2lmKHRoaXMuZWxlbWVudFBvc2l0aW9uKHQpLCF0aGlzLm92ZXJmbG93TWFpbihuKSlyZXR1cm4gdGhpcy5vdmVyZmxvd0FsbFNpZGVzKHQpP3ZvaWQgdGhpcy52ZXJpZnlTdWJQb3NpdGlvbnModCk6dm9pZCAwO3Q9dGhpcy5uZXh0UG9zaXRpb24obixlKX19ZWxlbWVudFBvc2l0aW9uKHQpe3RoaXMuaXNDb3JuZXJBbGlnbmVkP3RoaXMuc2V0QWxpZ25lZEVsZW1lbnRQb3NpdGlvbih0KTp0aGlzLnNldEVsZW1lbnRQb3NpdGlvbih0KX1nZXRNYWluUG9zaXRpb24odCl7cmV0dXJuIHQuaW5kZXhPZigiLSIpPi0xP3Quc3Vic3RyaW5nKDAsdC5pbmRleE9mKCItIikpOnR9Z2V0TWFpblBvc2l0aW9ucygpe3JldHVybiB0aGlzLmN1c3RvbVBvc2l0aW9ucyYmdGhpcy5jdXN0b21Qb3NpdGlvbnMubGVuZ3RoP3RoaXMuZ2V0TWFpblBvc2l0aW9uc0J5Q3VzdG9tUG9zaXRpb25zKHRoaXMuY3VzdG9tUG9zaXRpb25zKTpbInRvcCIsInJpZ2h0IiwiYm90dG9tIiwibGVmdCJdfWdldE1haW5Qb3NpdGlvbnNCeUN1c3RvbVBvc2l0aW9ucyh0KXtjb25zdCBlPVtdLG49dC5sZW5ndGg7Zm9yKGxldCByPTA7cjxuO3IrKyl7Y29uc3Qgbj10aGlzLmdldE1haW5Qb3NpdGlvbih0W3JdKTtlLmluY2x1ZGVzKG4pfHxlLnB1c2gobil9cmV0dXJuIGV9Z2V0T3ZlcmZsb3dzKCl7Y29uc3QgdD10aGlzLmdldFNpemVzQW5kUG9zaXRpb25zKCk7cmV0dXJue3JpZ2h0OnQuZWxlbWVudC5yaWdodD50LndpbmRvdy5pbm5lcldpZHRoLHRvcDp0LmVsZW1lbnQudG9wPD0wLGxlZnQ6dC5lbGVtZW50LmxlZnQ8PTAsYm90dG9tOnQuZWxlbWVudC5ib3R0b20+dC53aW5kb3cuaW5uZXJIZWlnaHR9fWdldFNpemVzQW5kUG9zaXRpb25zKCl7cmV0dXJue3dpbmRvdzp7c2Nyb2xsWTp3aW5kb3cuc2Nyb2xsWSxzY3JvbGxYOndpbmRvdy5zY3JvbGxYLGlubmVyV2lkdGg6d2luZG93LmlubmVyV2lkdGgsaW5uZXJIZWlnaHQ6d2luZG93LmlubmVySGVpZ2h0fSxlbGVtZW50OnRoaXMuZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSx0YXJnZXQ6dGhpcy50YXJnZXRFbGVtZW50P3RoaXMudGFyZ2V0RWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTp7dG9wOjAsYm90dG9tOjAscmlnaHQ6MCxsZWZ0OjB9fX1uZXh0UG9zaXRpb24odCxlPVtdKXtjb25zdCBuPWUuaW5kZXhPZih0KSxyPW4rMTtyZXR1cm4gbj4tMSYmcjxlLmxlbmd0aD9lW3JdOmVbMF19b3ZlcmZsb3dBbGxTaWRlcyh0KXtjb25zdCBlPXRoaXMuZ2V0T3ZlcmZsb3dzKCk7c3dpdGNoKHQpe2Nhc2UidG9wIjpyZXR1cm4gZS50b3B8fGUucmlnaHR8fGUubGVmdDtjYXNlInRvcC1yaWdodCI6cmV0dXJuIGUudG9wfHxlLnJpZ2h0O2Nhc2UidG9wLWxlZnQiOnJldHVybiBlLnRvcHx8ZS5sZWZ0O2Nhc2UicmlnaHQiOnJldHVybiBlLnJpZ2h0fHxlLnRvcHx8ZS5ib3R0b207Y2FzZSJyaWdodC10b3AiOnJldHVybiBlLnJpZ2h0fHxlLnRvcDtjYXNlInJpZ2h0LWJvdHRvbSI6cmV0dXJuIGUucmlnaHR8fGUuYm90dG9tO2Nhc2UiYm90dG9tIjpyZXR1cm4gZS5ib3R0b218fGUucmlnaHR8fGUubGVmdDtjYXNlImJvdHRvbS1yaWdodCI6cmV0dXJuIGUuYm90dG9tfHxlLnJpZ2h0O2Nhc2UiYm90dG9tLWxlZnQiOnJldHVybiBlLmJvdHRvbXx8ZS5sZWZ0O2Nhc2UibGVmdCI6cmV0dXJuIGUubGVmdHx8ZS50b3B8fGUuYm90dG9tO2Nhc2UibGVmdC10b3AiOnJldHVybiBlLmxlZnR8fGUudG9wO2Nhc2UibGVmdC1ib3R0b20iOnJldHVybiBlLmxlZnR8fGUuYm90dG9tfX1vdmVyZmxvd01haW4odCl7Y29uc3QgZT10aGlzLmdldE92ZXJmbG93cygpO3N3aXRjaCh0KXtjYXNlInRvcCI6cmV0dXJuIGUudG9wO2Nhc2UicmlnaHQiOnJldHVybiBlLnJpZ2h0O2Nhc2UiYm90dG9tIjpyZXR1cm4gZS5ib3R0b207Y2FzZSJsZWZ0IjpyZXR1cm4gZS5sZWZ0fX1zZXRBbGlnbmVkQXJyb3dEaXJlY3Rpb24odCl7c3dpdGNoKHQpe2Nhc2UidG9wLWxlZnQiOnJldHVybiJib3R0b20tbGVmdCI7Y2FzZSJ0b3AtcmlnaHQiOnJldHVybiJib3R0b20tcmlnaHQiO2Nhc2UiYm90dG9tLXJpZ2h0IjpyZXR1cm4idG9wLXJpZ2h0IjtjYXNlImJvdHRvbS1sZWZ0IjpyZXR1cm4idG9wLWxlZnQifX1zZXRBbGlnbmVkQm90dG9tUG9zaXRpb25zKHQsZSl7dGhpcy5lbGVtZW50LnN0eWxlLnRvcD1lLnRhcmdldC5ib3R0b20rdGhpcy5lbGVtZW50T2Zmc2V0KyJweCIsdGhpcy5lbGVtZW50LnN0eWxlLmxlZnQ9ZS50YXJnZXQubGVmdC10KyJweCJ9c2V0QWxpZ25lZEVsZW1lbnRQb3NpdGlvbih0KXt0aGlzLnNldEVsZW1lbnRXaWR0aCgpO2NvbnN0IGU9dGhpcy5nZXRTaXplc0FuZFBvc2l0aW9ucygpO3N3aXRjaCh0KXtjYXNlImJvdHRvbS1sZWZ0Ijp0aGlzLnNldEFsaWduZWRCb3R0b21Qb3NpdGlvbnMoMCxlKTticmVhaztjYXNlImJvdHRvbS1yaWdodCI6dGhpcy5zZXRBbGlnbmVkQm90dG9tUG9zaXRpb25zKGUuZWxlbWVudC53aWR0aC1lLnRhcmdldC53aWR0aCxlKTticmVhaztjYXNlInRvcC1sZWZ0Ijp0aGlzLnNldEFsaWduZWRUb3BQb3NpdGlvbnMoMCxlKTticmVhaztjYXNlInRvcC1yaWdodCI6dGhpcy5zZXRBbGlnbmVkVG9wUG9zaXRpb25zKGUuZWxlbWVudC53aWR0aC1lLnRhcmdldC53aWR0aCxlKX10aGlzLmFycm93RGlyZWN0aW9uPXRoaXMuc2V0QWxpZ25lZEFycm93RGlyZWN0aW9uKHQpfXNldEFsaWduZWRUb3BQb3NpdGlvbnModCxlKXt0aGlzLmVsZW1lbnQuc3R5bGUudG9wPWUudGFyZ2V0LnRvcC1lLmVsZW1lbnQuaGVpZ2h0LXRoaXMuZWxlbWVudE9mZnNldCsicHgiLHRoaXMuZWxlbWVudC5zdHlsZS5sZWZ0PWUudGFyZ2V0LmxlZnQtdCsicHgifXNldEFycm93RGlyZWN0aW9uKHQpe3N3aXRjaCh0KXtjYXNlInRvcCI6cmV0dXJuImJvdHRvbSI7Y2FzZSJ0b3AtbGVmdCI6cmV0dXJuImJvdHRvbS1yaWdodCI7Y2FzZSJ0b3AtcmlnaHQiOnJldHVybiJib3R0b20tbGVmdCI7Y2FzZSJyaWdodCI6cmV0dXJuImxlZnQiO2Nhc2UicmlnaHQtdG9wIjpyZXR1cm4ibGVmdC1ib3R0b20iO2Nhc2UicmlnaHQtYm90dG9tIjpyZXR1cm4ibGVmdC10b3AiO2Nhc2UiYm90dG9tIjpyZXR1cm4idG9wIjtjYXNlImJvdHRvbS1yaWdodCI6cmV0dXJuInRvcC1sZWZ0IjtjYXNlImJvdHRvbS1sZWZ0IjpyZXR1cm4idG9wLXJpZ2h0IjtjYXNlImxlZnQiOnJldHVybiJyaWdodCI7Y2FzZSJsZWZ0LWJvdHRvbSI6cmV0dXJuInJpZ2h0LXRvcCI7Y2FzZSJsZWZ0LXRvcCI6cmV0dXJuInJpZ2h0LWJvdHRvbSJ9fXNldEJvdHRvbVBvc2l0aW9ucyh0LGUpe3RoaXMuZWxlbWVudC5zdHlsZS50b3A9ZS50YXJnZXQuYm90dG9tK3RoaXMuZWxlbWVudE9mZnNldCsicHgiLHRoaXMuZWxlbWVudC5zdHlsZS5sZWZ0PWUudGFyZ2V0LmxlZnQrZS50YXJnZXQud2lkdGgvMi10KyJweCJ9c2V0RWxlbWVudFBvc2l0aW9uKHQpe3RoaXMuc2V0RWxlbWVudFdpZHRoKCk7Y29uc3QgZT10aGlzLmdldFNpemVzQW5kUG9zaXRpb25zKCk7c3dpdGNoKHQpe2Nhc2UidG9wIjp0aGlzLnNldFRvcFBvc2l0aW9ucyhlLmVsZW1lbnQud2lkdGgvMixlKTticmVhaztjYXNlInRvcC1sZWZ0Ijp0aGlzLnNldFRvcFBvc2l0aW9ucyhlLmVsZW1lbnQud2lkdGgtdGhpcy5vZmZzZXRBcnJvdy10aGlzLmRpZmZlcmVuY2VEaWFnb25hbFRvV2lkdGhBcnJvdyxlKTticmVhaztjYXNlInRvcC1yaWdodCI6dGhpcy5zZXRUb3BQb3NpdGlvbnModGhpcy5vZmZzZXRBcnJvdyt0aGlzLmRpZmZlcmVuY2VEaWFnb25hbFRvV2lkdGhBcnJvdyxlKTticmVhaztjYXNlInJpZ2h0Ijp0aGlzLnNldFJpZ2h0UG9zaXRpb25zKGUuZWxlbWVudC5oZWlnaHQvMixlKTticmVhaztjYXNlInJpZ2h0LXRvcCI6dGhpcy5zZXRSaWdodFBvc2l0aW9ucyhlLmVsZW1lbnQuaGVpZ2h0LXRoaXMub2Zmc2V0QXJyb3ctdGhpcy5kaWZmZXJlbmNlRGlhZ29uYWxUb1dpZHRoQXJyb3csZSk7YnJlYWs7Y2FzZSJyaWdodC1ib3R0b20iOnRoaXMuc2V0UmlnaHRQb3NpdGlvbnModGhpcy5vZmZzZXRBcnJvdyxlKTticmVhaztjYXNlImJvdHRvbSI6dGhpcy5zZXRCb3R0b21Qb3NpdGlvbnMoZS5lbGVtZW50LndpZHRoLzIsZSk7YnJlYWs7Y2FzZSJib3R0b20tcmlnaHQiOnRoaXMuc2V0Qm90dG9tUG9zaXRpb25zKHRoaXMub2Zmc2V0QXJyb3crdGhpcy5kaWZmZXJlbmNlRGlhZ29uYWxUb1dpZHRoQXJyb3csZSk7YnJlYWs7Y2FzZSJib3R0b20tbGVmdCI6dGhpcy5zZXRCb3R0b21Qb3NpdGlvbnMoZS5lbGVtZW50LndpZHRoLXRoaXMub2Zmc2V0QXJyb3ctdGhpcy5kaWZmZXJlbmNlRGlhZ29uYWxUb1dpZHRoQXJyb3csZSk7YnJlYWs7Y2FzZSJsZWZ0Ijp0aGlzLnNldExlZnRQb3NpdGlvbnMoZS5lbGVtZW50LmhlaWdodC8yLGUpO2JyZWFrO2Nhc2UibGVmdC1ib3R0b20iOnRoaXMuc2V0TGVmdFBvc2l0aW9ucyh0aGlzLm9mZnNldEFycm93LGUpO2JyZWFrO2Nhc2UibGVmdC10b3AiOnRoaXMuc2V0TGVmdFBvc2l0aW9ucyhlLmVsZW1lbnQuaGVpZ2h0LXRoaXMub2Zmc2V0QXJyb3csZSl9dGhpcy5hcnJvd0RpcmVjdGlvbj10aGlzLnNldEFycm93RGlyZWN0aW9uKHQpfXNldEVsZW1lbnRXaWR0aCgpe3RoaXMuaXNTZXRFbGVtZW50V2lkdGgmJnRoaXMudGFyZ2V0RWxlbWVudCYmKHRoaXMuZWxlbWVudC5zdHlsZS53aWR0aD10aGlzLnRhcmdldEVsZW1lbnQuY2xpZW50V2lkdGgrInB4Iil9c2V0TGVmdFBvc2l0aW9ucyh0LGUpe3RoaXMuZWxlbWVudC5zdHlsZS50b3A9ZS50YXJnZXQudG9wLXQrZS50YXJnZXQuaGVpZ2h0LzIrInB4Iix0aGlzLmVsZW1lbnQuc3R5bGUubGVmdD1lLnRhcmdldC5sZWZ0LWUuZWxlbWVudC53aWR0aC10aGlzLmVsZW1lbnRPZmZzZXQrInB4In1zZXRSaWdodFBvc2l0aW9ucyh0LGUpe3RoaXMuZWxlbWVudC5zdHlsZS50b3A9ZS50YXJnZXQudG9wLXQrZS50YXJnZXQuaGVpZ2h0LzIrInB4Iix0aGlzLmVsZW1lbnQuc3R5bGUubGVmdD1lLnRhcmdldC5yaWdodCt0aGlzLmVsZW1lbnRPZmZzZXQrInB4In1zZXRUb3BQb3NpdGlvbnModCxlKXt0aGlzLmVsZW1lbnQuc3R5bGUudG9wPWUudGFyZ2V0LnRvcC1lLmVsZW1lbnQuaGVpZ2h0LXRoaXMuZWxlbWVudE9mZnNldCsicHgiLHRoaXMuZWxlbWVudC5zdHlsZS5sZWZ0PWUudGFyZ2V0LmxlZnQrZS50YXJnZXQud2lkdGgvMi10KyJweCJ9dmVyaWZ5U3ViUG9zaXRpb25zKHQpe3QuaW5kZXhPZigiLSIpPi0xJiYodD10LnN1YnN0cmluZygwLHQuaW5kZXhPZigiLSIpKSx0aGlzLmVsZW1lbnRQb3NpdGlvbih0KSk7bGV0IGU9MDtmb3IoO2UrKzwzOyl7aWYoIXRoaXMub3ZlcmZsb3dBbGxTaWRlcyh0KSlyZXR1cm4gbnVsbDt0PXRoaXMubmV4dFBvc2l0aW9uKHQseHkpLHRoaXMuZWxlbWVudFBvc2l0aW9uKHQpfX19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LHQuXHUwMjc1cHJvdj11dCh7dG9rZW46dCxmYWN0b3J5OnQuXHUwMjc1ZmFjfSksdH0pKCksVHk9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxpbXBvcnRzOltbc2NdXX0pLHR9KSgpLEZ5PSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0saW1wb3J0czpbW3NjLFN5LFR5XV19KSx0fSkoKSxPeT0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKCl7dGhpcy5sYW5ndWFnZT0icHQiLHRoaXMubW9udGhzPVt7cHQ6IkphbmVpcm8iLGVuOiJKYW51YXJ5IixlczoiRW5lcm8ifSx7cHQ6IkZldmVyZWlybyIsZW46IkZlYnJ1YXJ5IixlczoiRmVicmVybyJ9LHtwdDoiTWFyXHhlN28iLGVuOiJNYXJjaCIsZXM6Ik1hcnpvIn0se3B0OiJBYnJpbCIsZW46IkFwcmlsIixlczoiQWJyaWwifSx7cHQ6Ik1haW8iLGVuOiJNYXkiLGVzOiJNYXlvIn0se3B0OiJKdW5obyIsZW46Ikp1bmUiLGVzOiJKdW5pbyJ9LHtwdDoiSnVsaG8iLGVuOiJKdWx5IixlczoiSnVsaW8ifSx7cHQ6IkFnb3N0byIsZW46IkF1Z3VzdCIsZXM6IkFnb3N0byJ9LHtwdDoiU2V0ZW1icm8iLGVuOiJTZXB0ZW1iZXIiLGVzOiJTZXRpZW1icmUifSx7cHQ6Ik91dHVicm8iLGVuOiJPY3RvYmVyIixlczoiT2N0dWJyZSJ9LHtwdDoiTm92ZW1icm8iLGVuOiJOb3ZlbWJlciIsZXM6Ik5vdmllbWJyZSJ9LHtwdDoiRGV6ZW1icm8iLGVuOiJEZWNlbWJlciIsZXM6IkRpY2llbWJyZSJ9XSx0aGlzLnNob3J0V2Vla0RheXM9W3twdDoiRG9tIixlbjoiU3VuIixlczoiRG9tIn0se3B0OiJTZWciLGVuOiJNb24iLGVzOiJMdW4ifSx7cHQ6IlRlciIsZW46IlR1ZSIsZXM6Ik1hciJ9LHtwdDoiUXVhIixlbjoiV2VkIixlczoiTWlceGU5In0se3B0OiJRdWkiLGVuOiJUaHUiLGVzOiJKdWUifSx7cHQ6IlNleCIsZW46IkZyaSIsZXM6IlZpZSJ9LHtwdDoiU1x4ZTFiIixlbjoiU2F0IixlczoiU1x4ZTFiIn1dLHRoaXMubW9udGhMYWJlbD17cHQ6Ik1ceGVhcyIsZW46Ik1vbnRoIixlczoiTWVzIn0sdGhpcy55ZWFyTGFiZWw9e3B0OiJBbm8iLGVuOiJZZWFyIixlczoiQVx4ZjFvIn19Z2V0TW9udGgodCl7cmV0dXJuIHRoaXMubW9udGhzW3RdW3RoaXMubGFuZ3VhZ2VdfWdldE1vbnRoTGFiZWwoKXtyZXR1cm4gdGhpcy5tb250aExhYmVsW3RoaXMubGFuZ3VhZ2VdfWdldE1vbnRoc0FycmF5KCl7Y29uc3QgdD1BcnJheSgpO2ZvcihsZXQgZT0wO2U8dGhpcy5tb250aHMubGVuZ3RoO2UrKyl0LnB1c2godGhpcy5tb250aHNbZV1bdGhpcy5sYW5ndWFnZV0pO3JldHVybiB0fWdldFdlZWtEYXlzKHQpe3JldHVybiB0aGlzLnNob3J0V2Vla0RheXNbdF1bdGhpcy5sYW5ndWFnZV19Z2V0V2Vla0RheXNBcnJheSgpe2NvbnN0IHQ9QXJyYXkoKTtmb3IobGV0IGU9MDtlPHRoaXMuc2hvcnRXZWVrRGF5cy5sZW5ndGg7ZSsrKXQucHVzaCh0aGlzLnNob3J0V2Vla0RheXNbZV1bdGhpcy5sYW5ndWFnZV0pO3JldHVybiB0fWdldFllYXJMYWJlbCgpe3JldHVybiB0aGlzLnllYXJMYWJlbFt0aGlzLmxhbmd1YWdlXX1zZXRMYW5ndWFnZSh0KXt0JiZ0Lmxlbmd0aD49MiYmKHQ9dC50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsMiksdGhpcy5sYW5ndWFnZT0icHQiPT09dHx8ImVuIj09PXR8fCJlcyI9PT10P3Q6InB0Iil9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSx0Llx1MDI3NXByb3Y9dXQoe3Rva2VuOnQsZmFjdG9yeTp0Llx1MDI3NWZhY30pLHR9KSgpLFB5PSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IoKXt0aGlzLmRhdGVSZWdleD1uZXcgUmVnRXhwKCJeKD86WzAtOV0pXFxkezF9KD86WzAtOV0pXFxkezF9LSg/OjBbMS05XXwxWzAtMl0pLSg/OjBbMS05XXxbMTJdXFxkfDNbMDFdKSQiKSx0aGlzLmlzb1JlZ2V4PW5ldyBSZWdFeHAoIl4oPzpbMC05XSlcXGR7MX0oPzpbMC05XSlcXGR7MX0tKD86MFsxLTldfDFbMC0yXSktKD86MFsxLTldfFsxMl1cXGR8M1swMV0pVCg/OlswMV1cXGR8MlswLTNdKTpbMC01XVxcZDpbMC01XVxcZCg/Olp8LTBbMS05XXwtMVxcZHwtMlswLTNdfC0wMDo/KD86MFsxLTldfFswLTVdXFxkKXxcXCtbMDFdXFxkfFxcKzJbMC0zXSkoPzp8Oj9bMC01XVxcZCkkIil9Y29udmVydElzb1RvRGF0ZSh0LGUsbil7aWYodCl7Y29uc3R7eWVhcjpyLG1vbnRoOnMsZGF5Oml9PXRoaXMuZ2V0RGF0ZUZyb21Jc28odCk7aWYoZSl7Y29uc3QgdD1uZXcgRGF0ZShyLHMtMSxpLDAsMCwwKTtyZXR1cm4gdGhpcy5zZXRZZWFyRnJvbTBUbzEwMCh0LHIpLHR9aWYobil7Y29uc3QgdD1uZXcgRGF0ZShyLHMtMSxpLDIzLDU5LDU5KTtyZXR1cm4gdGhpcy5zZXRZZWFyRnJvbTBUbzEwMCh0LHIpLHR9e2NvbnN0IGU9RGF0ZS5wYXJzZSh0KSxuPTZlNCoobmV3IERhdGUpLmdldFRpbWV6b25lT2Zmc2V0KCk7cmV0dXJuIG5ldyBEYXRlKGUrbil9fX1jb252ZXJ0RGF0ZVRvSVNPKHQpe2lmKHQpe2NvbnN0IGU9dC5nZXRGdWxsWWVhcigpLG49dC5nZXRNb250aCgpKzEscj10LmdldERhdGUoKTwxMD8iMCIrdC5nZXREYXRlKCk6dC5nZXREYXRlKCkscz1uPDEwPyIwIituOm47cmV0dXJuIHRoaXMuZm9ybWF0WWVhcihlKSsiLSIrcysiLSIrcn1yZXR1cm4gbnVsbH1mb3JtYXRZZWFyKHQpe3JldHVybiB0Pjk5OT90LnRvU3RyaW5nKCk6dD45OSYmdDwxZTM/IjAiK3Q6dD45JiZ0PDEwMD8iMDAiK3Q6dD49MCYmdDwxMD8iMDAwIit0OnZvaWQgMH1nZXREYXRlRnJvbUlzbyh0KXtjb25zdCBlPXBhcnNlSW50KHQuc3Vic3RyaW5nKDgsMTApLDEwKSxuPXBhcnNlSW50KHQuc3Vic3RyaW5nKDUsNyksMTApO3JldHVybnt5ZWFyOnBhcnNlSW50KHQuc3Vic3RyaW5nKDAsNCksMTApLG1vbnRoOm4sZGF5OmV9fWdldERhdGVGb3JEYXRlUmFuZ2UodCxlKXtjb25zdCBuPWU/WzAsMCwwXTpbMjMsNTksNTldO2lmKHQgaW5zdGFuY2VvZiBEYXRlKXtjb25zdHt5ZWFyOmUsbW9udGg6cixkYXk6c309dGhpcy5zcGxpdERhdGUodCksaT1uZXcgRGF0ZShlLHIscywuLi5uKTtyZXR1cm4gdGhpcy5zZXRZZWFyRnJvbTBUbzEwMChpLGUpLGl9aWYodGhpcy5pc1ZhbGlkSXNvKHQpKXJldHVybiB0aGlzLmNvbnZlcnRJc29Ub0RhdGUodCxlLCFlKX1pc0RhdGVSYW5nZVZhbGlkKHQ9IiIsZT0iIil7Y29uc3Qgbj10LnNwbGl0KCItIikubWFwKHQ9PnBhcnNlSW50KHQsMTApKSxyPWUuc3BsaXQoIi0iKS5tYXAodD0+cGFyc2VJbnQodCwxMCkpO2ZvcihsZXQgcz0wO3M8PW4ubGVuZ3RoO3MrKyl7aWYobltzXT5yW3NdKXJldHVybiEwO2lmKG5bc108cltzXSlyZXR1cm4hMX1yZXR1cm4hMH1pc1ZhbGlkSXNvKHQpe3JldHVybiB0aGlzLmRhdGVSZWdleC50ZXN0KHQpfHx0aGlzLmlzb1JlZ2V4LnRlc3QodCl9c2V0WWVhckZyb20wVG8xMDAodCxlKXtlPj0wJiZlPDEwMCYmdC5zZXRGdWxsWWVhcihlKX1zcGxpdERhdGUodCl7cmV0dXJue3llYXI6dC5nZXRGdWxsWWVhcigpLG1vbnRoOnQuZ2V0TW9udGgoKSxkYXk6dC5nZXREYXRlKCl9fXZhbGlkYXRlRGF0ZVJhbmdlKHQsZSxuKXtyZXR1cm4gZSYmbj90Pj1lJiZ0PD1uOmUmJiFuP3Q+PWU6ISghZSYmbil8fHQ8PW59dmFsaWRhdGVEYXRlKHQpe2NvbnN0IGU9dCBpbnN0YW5jZW9mIERhdGU/dGhpcy5jb252ZXJ0RGF0ZVRvSVNPKHQpOnQ7cmV0dXJuIHRoaXMuaXNWYWxpZElzbyhlKT9lOnZvaWQgMH19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LHQuXHUwMjc1cHJvdj11dCh7dG9rZW46dCxmYWN0b3J5OnQuXHUwMjc1ZmFjfSksdH0pKCksSXk9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxwcm92aWRlcnM6W1B5XX0pLHR9KSgpLFJ5PSgoKT0+e2NsYXNzIHR7bW9udGhEYXRlcyh0LGUsbj1udWxsLHI9bnVsbCl7aWYoIm51bWJlciIhPXR5cGVvZiBlfHxlPDB8fGU+MTEpdGhyb3cgRXJyb3IoIm1vbnRoIG11c3QgYmUgYSBudW1iZXIgKEphbiBpcyAwKSIpO2NvbnN0IHM9W107bGV0IGk9W10sbz0wLGE9bmV3IERhdGUodCxlLDEpO3Q+PTAmJnQ8MTAwJiZhLnNldEZ1bGxZZWFyKHQpLGE9dGhpcy53ZWVrU3RhcnREYXRlKGEpO2Rve2ZvcihvPTA7bzw3O28rKylpLnB1c2gobj9uKGEpOmEpLGE9bmV3IERhdGUoYS5nZXRUaW1lKCkpLGEuc2V0RGF0ZShhLmdldERhdGUoKSsxKTtzLnB1c2gocj9yKGkpOmkpLGk9W119d2hpbGUoYS5nZXRNb250aCgpPD1lJiZhLmdldEZ1bGxZZWFyKCk9PT10KTtyZXR1cm4gc31tb250aERheXModCxlKXtyZXR1cm4gdGhpcy5tb250aERhdGVzKHQsZSwoZnVuY3Rpb24odCl7cmV0dXJuIHQuZ2V0TW9udGgoKT09PWU/dDowfSkpfXdlZWtTdGFydERhdGUodCl7Y29uc3QgZT1uZXcgRGF0ZSh0LmdldFRpbWUoKSk7Zm9yKDswIT09ZS5nZXREYXkoKTspZS5zZXREYXRlKGUuZ2V0RGF0ZSgpLTEpO3JldHVybiBlfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0sdC5cdTAyNzVwcm92PXV0KHt0b2tlbjp0LGZhY3Rvcnk6dC5cdTAyNzVmYWN9KSx0fSkoKSxNeT0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVtb2Q9bWUoe3R5cGU6dH0pLHQuXHUwMjc1aW5qPWN0KHtmYWN0b3J5OmZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LHByb3ZpZGVyczpbT3ksUnldLGltcG9ydHM6W1tzY11dfSksdH0pKCk7TWF0aCxNYXRoLE1hdGg7bGV0IGp5PSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0saW1wb3J0czpbW3NjLFR5XV19KSx0fSkoKSxOeT0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVtb2Q9bWUoe3R5cGU6dH0pLHQuXHUwMjc1aW5qPWN0KHtmYWN0b3J5OmZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LGltcG9ydHM6W1tzY11dfSksdH0pKCksVnk9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxpbXBvcnRzOltbc2NdXX0pLHR9KSgpLEJ5PSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0saW1wb3J0czpbW3NjLFZ5XV19KSx0fSkoKSxMeT0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVtb2Q9bWUoe3R5cGU6dH0pLHQuXHUwMjc1aW5qPWN0KHtmYWN0b3J5OmZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LGltcG9ydHM6W1tzY11dfSksdH0pKCksVXk9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxwcm92aWRlcnM6W10saW1wb3J0czpbW3NjXV19KSx0fSkoKSxIeT0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVtb2Q9bWUoe3R5cGU6dH0pLHQuXHUwMjc1aW5qPWN0KHtmYWN0b3J5OmZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LGltcG9ydHM6W1tzYyxVeV1dfSksdH0pKCksJHk9KCgpPT57Y2xhc3MgdHtjb25zdHJ1Y3Rvcigpe3RoaXMuZXJyb3JQYXR0ZXJuPSIifX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0sdC5cdTAyNzVjbXA9ZGUoe3R5cGU6dCxzZWxlY3RvcnM6W1sicG8tZmllbGQtY29udGFpbmVyLWJvdHRvbSJdXSxpbnB1dHM6e2Vycm9yUGF0dGVybjpbInAtZXJyb3ItcGF0dGVybiIsImVycm9yUGF0dGVybiJdfSxkZWNsczoyLHZhcnM6MSxjb25zdHM6W1sxLCJwby1maWVsZC1jb250YWluZXItYm90dG9tIl0sWyJjbGFzcyIsInBvLWZpZWxkLWNvbnRhaW5lci1ib3R0b20tdGV4dC1lcnJvciIsNCwibmdJZiJdLFsxLCJwby1maWVsZC1jb250YWluZXItYm90dG9tLXRleHQtZXJyb3IiXSxbMSwicG8taWNvbiIsInBvLWljb24td2FybmluZyIsInBvLWZpZWxkLWNvbnRhaW5lci1pY29uLWVycm9yIl1dLHRlbXBsYXRlOmZ1bmN0aW9uKHQsZSl7MSZ0JiYoTmkoMCwiZGl2IiwwKSxJaSgxLEZtLDMsMSwic3BhbiIsMSksVmkoKSksMiZ0JiYoanIoMSksTWkoIm5nSWYiLGUuZXJyb3JQYXR0ZXJuKSl9LGRpcmVjdGl2ZXM6W1d1XSxlbmNhcHN1bGF0aW9uOjIsY2hhbmdlRGV0ZWN0aW9uOjB9KSx0fSkoKSx6eT0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKCl7dGhpcy5fb3B0aW9uYWw9ITF9c2V0IG9wdGlvbmFsKHQpe3RoaXMuX29wdGlvbmFsPWF5KHQpfWdldCBvcHRpb25hbCgpe3JldHVybiB0aGlzLl9vcHRpb25hbH1nZXRPcHRpb25hbFRleHQoKXtyZXR1cm57cHQ6IihPcGNpb25hbCkiLGVuOiIoT3B0aW9uYWwpIixlczoiKE9wY2lvbmFsKSJ9W2l5KHN5KCkpXX19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LHQuXHUwMjc1Y21wPWRlKHt0eXBlOnQsc2VsZWN0b3JzOltbInBvLWZpZWxkLWNvbnRhaW5lciJdXSxpbnB1dHM6e29wdGlvbmFsOlsicC1vcHRpb25hbCIsIm9wdGlvbmFsIl0sbGFiZWw6WyJwLWxhYmVsIiwibGFiZWwiXSxoZWxwOlsicC1oZWxwIiwiaGVscCJdfSxuZ0NvbnRlbnRTZWxlY3RvcnM6X20sZGVjbHM6Nyx2YXJzOjMsY29uc3RzOltbMSwicG8tZmllbGQtY29udGFpbmVyIl0sWzEsInBvLWZpZWxkLWNvbnRhaW5lci10aXRsZSJdLFsxLCJwby1maWVsZC10aXRsZSJdLFsiY2xhc3MiLCJwby1maWVsZC1vcHRpb25hbCIsNCwibmdJZiJdLFsiY2xhc3MiLCJwby1maWVsZC1oZWxwIiw0LCJuZ0lmIl0sWzEsInBvLWZpZWxkLW9wdGlvbmFsIl0sWzEsInBvLWZpZWxkLWhlbHAiXV0sdGVtcGxhdGU6ZnVuY3Rpb24odCxlKXsxJnQmJihHaSgpLE5pKDAsImRpdiIsMCksTmkoMSwiZGl2IiwxKSxOaSgyLCJzcGFuIiwyKSxnbygzKSxWaSgpLElpKDQsT20sMiwxLCJzcGFuIiwzKSxWaSgpLElpKDUsUG0sMiwxLCJkaXYiLDQpLEtpKDYpLFZpKCkpLDImdCYmKGpyKDMpLG1vKGUubGFiZWwpLGpyKDEpLE1pKCJuZ0lmIixlLm9wdGlvbmFsJiYoZS5sYWJlbHx8ZS5oZWxwKSksanIoMSksTWkoIm5nSWYiLGUuaGVscCkpfSxkaXJlY3RpdmVzOltXdV0sZW5jYXBzdWxhdGlvbjoyLGNoYW5nZURldGVjdGlvbjowfSksdH0pKCkscXk9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxpbXBvcnRzOltbc2NdXX0pLHR9KSgpLFd5PSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0saW1wb3J0czpbW3NjLGNkLHF5XV19KSx0fSkoKSxaeT0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKCl7dGhpcy5faGlkZUNsb3NlPSExLHRoaXMuX3NpemU9Im1kIix0aGlzLmNsaWNrT3V0PSExLHRoaXMuaXNIaWRkZW49ITAsdGhpcy5vblhDbG9zZWQ9bmV3IENhfXNldCBzaXplKHQpe3RoaXMuX3NpemU9WyJzbSIsIm1kIiwibGciLCJ4bCIsImF1dG8iXS5pbmRleE9mKHQpPi0xP3Q6Im1kIn1nZXQgc2l6ZSgpe3JldHVybiB0aGlzLl9zaXplfXNldCBzZXRDbGlja091dCh0KXt0aGlzLmNsaWNrT3V0PSIiIT09dCYmYXkodCl9c2V0IGhpZGVDbG9zZSh0KXt0aGlzLl9oaWRlQ2xvc2U9YXkodCl9Z2V0IGhpZGVDbG9zZSgpe3JldHVybiB0aGlzLl9oaWRlQ2xvc2V9Y2xvc2UodD0hMSl7dGhpcy5pc0hpZGRlbj0hMCx0JiZ0aGlzLm9uWENsb3NlZC5lbWl0KHQpfW9wZW4oKXt0aGlzLnZhbGlkUHJpbWFyeUFjdGlvbigpLHRoaXMuaXNIaWRkZW49ITF9dmFsaWRQcmltYXJ5QWN0aW9uKCl7dGhpcy5wcmltYXJ5QWN0aW9ufHwodGhpcy5wcmltYXJ5QWN0aW9uPXthY3Rpb246KCk9PnRoaXMuY2xvc2UoKSxsYWJlbDoiT2sifSksdGhpcy5wcmltYXJ5QWN0aW9uLmFjdGlvbnx8KHRoaXMucHJpbWFyeUFjdGlvbi5hY3Rpb249KCk9PnRoaXMuY2xvc2UoKSksdGhpcy5wcmltYXJ5QWN0aW9uLmxhYmVsfHwodGhpcy5wcmltYXJ5QWN0aW9uLmxhYmVsPSJPayIpfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0sdC5cdTAyNzVkaXI9dmUoe3R5cGU6dCxpbnB1dHM6e3NpemU6WyJwLXNpemUiLCJzaXplIl0sc2V0Q2xpY2tPdXQ6WyJwLWNsaWNrLW91dCIsInNldENsaWNrT3V0Il0saGlkZUNsb3NlOlsicC1oaWRlLWNsb3NlIiwiaGlkZUNsb3NlIl0scHJpbWFyeUFjdGlvbjpbInAtcHJpbWFyeS1hY3Rpb24iLCJwcmltYXJ5QWN0aW9uIl0sdGl0bGU6WyJwLXRpdGxlIiwidGl0bGUiXSxzZWNvbmRhcnlBY3Rpb246WyJwLXNlY29uZGFyeS1hY3Rpb24iLCJzZWNvbmRhcnlBY3Rpb24iXX19KSx0fSkoKSxHeT0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0sdC5cdTAyNzVwcm92PXV0KHtmYWN0b3J5OmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyB0fSx0b2tlbjp0LHByb3ZpZGVkSW46InJvb3QifSksdH0pKCksS3k9KCgpPT57Y2xhc3MgdCBleHRlbmRzIFp5e2NvbnN0cnVjdG9yKHQpe3N1cGVyKCksdGhpcy5wb01vZGFsU2VydmljZT10LHRoaXMuZm9jdXNhYmxlRWxlbWVudHM9ImlucHV0LCBzZWxlY3QsIHRleHRhcmVhLCBidXR0b246bm90KFtkaXNhYmxlZF0pLCBhIix0aGlzLmlkPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe3JldHVybiBNYXRoLmZsb29yKDY1NTM2KigxK01hdGgucmFuZG9tKCkpKS50b1N0cmluZygxNikuc3Vic3RyaW5nKDEpfXJldHVybiB0KCkrdCgpKyItIit0KCkrIi0iK3QoKSsiLSIrdCgpKyItIit0KCkrdCgpK3QoKX0oKX1jbG9zZSh0PSExKXt0aGlzLnBvTW9kYWxTZXJ2aWNlLm1vZGFsQWN0aXZlPXZvaWQgMCxzdXBlci5jbG9zZSh0KSx0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXJzKCksdGhpcy5zb3VyY2VFbGVtZW50JiZ0aGlzLnNvdXJjZUVsZW1lbnQuZm9jdXMoKX1jbG9zZU1vZGFsT25Fc2NhcGVLZXkodCl7dGhpcy5oaWRlQ2xvc2V8fCh0LnByZXZlbnREZWZhdWx0KCksdC5zdG9wUHJvcGFnYXRpb24oKSx0aGlzLmNsb3NlKCkpfWdldFByaW1hcnlBY3Rpb25CdXR0b25UeXBlKCl7cmV0dXJuIHRoaXMucHJpbWFyeUFjdGlvbi5kYW5nZXI/ImRhbmdlciI6InByaW1hcnkifWdldFNlY29uZGFyeUFjdGlvbkJ1dHRvblR5cGUoKXtyZXR1cm4gdGhpcy5zZWNvbmRhcnlBY3Rpb24mJnRoaXMuc2Vjb25kYXJ5QWN0aW9uLmRhbmdlciYmIXRoaXMucHJpbWFyeUFjdGlvbi5kYW5nZXI/ImRhbmdlciI6ImRlZmF1bHQifW9uQ2xpY2tPdXQodCl7dGhpcy5jbGlja091dCYmIXRoaXMubW9kYWxDb250ZW50Lm5hdGl2ZUVsZW1lbnQuY29udGFpbnModC50YXJnZXQpJiZ0aGlzLmNsb3NlKCl9b3Blbigpe3RoaXMuc291cmNlRWxlbWVudD1kb2N1bWVudC5hY3RpdmVFbGVtZW50LHN1cGVyLm9wZW4oKSx0aGlzLmhhbmRsZUZvY3VzKCl9aGFuZGxlRm9jdXMoKXt0aGlzLnBvTW9kYWxTZXJ2aWNlLm1vZGFsQWN0aXZlPXRoaXMuaWQsc2V0VGltZW91dCgoKT0+e3RoaXMubW9kYWxDb250ZW50JiYodGhpcy5pbml0Rm9jdXMoKSxkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJmb2N1cyIsdGhpcy5mb2N1c0Z1bmN0aW9uLCEwKSl9KX1pbml0Rm9jdXMoKXt0aGlzLmZvY3VzRnVuY3Rpb249dD0+e3RoaXMucG9Nb2RhbFNlcnZpY2UubW9kYWxBY3RpdmU9dGhpcy5wb01vZGFsU2VydmljZS5tb2RhbEFjdGl2ZXx8dGhpcy5pZCx0aGlzLm1vZGFsQ29udGVudC5uYXRpdmVFbGVtZW50LmNvbnRhaW5zKHQudGFyZ2V0KXx8dGhpcy5wb01vZGFsU2VydmljZS5tb2RhbEFjdGl2ZSE9PXRoaXMuaWR8fCh0LnN0b3BQcm9wYWdhdGlvbigpLHRoaXMuZmlyc3RFbGVtZW50LmZvY3VzKCkpfSx0aGlzLnNldEZpcnN0RWxlbWVudCgpLHRoaXMuaGlkZUNsb3NlP3RoaXMuZmlyc3RFbGVtZW50LmZvY3VzKCk6KHRoaXMubW9kYWxDb250ZW50Lm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLmZvY3VzYWJsZUVsZW1lbnRzKVsxXXx8dGhpcy5tb2RhbENvbnRlbnQubmF0aXZlRWxlbWVudCkuZm9jdXMoKX1yZW1vdmVFdmVudExpc3RlbmVycygpe2RvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoImZvY3VzIix0aGlzLmZvY3VzRnVuY3Rpb24sITApfXNldEZpcnN0RWxlbWVudCgpe3RoaXMuZmlyc3RFbGVtZW50PXRoaXMubW9kYWxDb250ZW50Lm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLmZvY3VzYWJsZUVsZW1lbnRzKXx8dGhpcy5tb2RhbENvbnRlbnQubmF0aXZlRWxlbWVudH19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCkoUmkoR3kpKX0sdC5cdTAyNzVjbXA9ZGUoe3R5cGU6dCxzZWxlY3RvcnM6W1sicG8tbW9kYWwiXV0sdmlld1F1ZXJ5OmZ1bmN0aW9uKHQsZSl7dmFyIG47MSZ0JiZNYShJbSwhMCxGbyksMiZ0JiZJYShuPU5hKCkpJiYoZS5tb2RhbENvbnRlbnQ9bi5maXJzdCl9LGZlYXR1cmVzOltfaV0sbmdDb250ZW50U2VsZWN0b3JzOl9tLGRlY2xzOjEsdmFyczoxLGNvbnN0czpbWyJjbGFzcyIsInBvLW1vZGFsIiwidGFiaW5kZXgiLCIwIiwzLCJrZXlkb3duLmVzYyIsNCwibmdJZiJdLFsidGFiaW5kZXgiLCIwIiwxLCJwby1tb2RhbCIsMywia2V5ZG93bi5lc2MiXSxbMSwicG8tbW9kYWwtb3ZlcmxheSJdLFsxLCJwby1tb2RhbC1jb250YWluZXIiLCJwby1wYi0yIiwicG8tcHQtMiIsMywibW91c2Vkb3duIl0sWzEsInBvLW1vZGFsLXZlcnRpY2FsLWFsaWduIl0sWyJ0YWJpbmRleCIsIi0xIl0sWyJtb2RhbENvbnRlbnQiLCIiXSxbMSwicG8tbW9kYWwtaGVhZGVyIl0sWzEsInBvLW1vZGFsLXRpdGxlIiwicG8tdGV4dC1lbGxpcHNpcyJdLFsiY2xhc3MiLCJwby1tb2RhbC1oZWFkZXItY2xvc2UtYnV0dG9uIiwidGFiaW5kZXgiLCIwIiwzLCJjbGljayIsNCwibmdJZiJdLFsxLCJwby1tb2RhbC1ib2R5Il0sWzEsInBvLW1vZGFsLWZvb3RlciJdLFszLCJwLWRpc2FibGVkIiwicC1sYWJlbCIsInAtbG9hZGluZyIsInAtdHlwZSIsInAtY2xpY2siLDQsIm5nSWYiXSxbMSwicG8tYnV0dG9uLW1vZGFsLWZpcnN0LWFjdGlvbiIsMywicC1kaXNhYmxlZCIsInAtbGFiZWwiLCJwLWxvYWRpbmciLCJwLXR5cGUiLCJwLWNsaWNrIl0sWyJ0YWJpbmRleCIsIjAiLDEsInBvLW1vZGFsLWhlYWRlci1jbG9zZS1idXR0b24iLDMsImNsaWNrIl0sWzEsInBvLWljb24iLCJwby1pY29uLWNsb3NlIl0sWzMsInAtZGlzYWJsZWQiLCJwLWxhYmVsIiwicC1sb2FkaW5nIiwicC10eXBlIiwicC1jbGljayJdXSx0ZW1wbGF0ZTpmdW5jdGlvbih0LGUpezEmdCYmKEdpKCksSWkoMCxqbSwxNSwxMCwiZGl2IiwwKSksMiZ0JiZNaSgibmdJZiIsIWUuaXNIaWRkZW4pfSxkaXJlY3RpdmVzOltXdSxBeV0sZW5jYXBzdWxhdGlvbjoyfSksdH0pKCksUXk9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxpbXBvcnRzOltbc2MsU3ldXX0pLHR9KSgpLFl5PSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0saW1wb3J0czpbW3NjXV19KSx0fSkoKTt2YXIgSnk9ZnVuY3Rpb24odCl7cmV0dXJuIHQuQ29sb3IwMT0iY29sb3ItMDEiLHQuQ29sb3IwMj0iY29sb3ItMDIiLHQuQ29sb3IwMz0iY29sb3ItMDMiLHQuQ29sb3IwND0iY29sb3ItMDQiLHQuQ29sb3IwNT0iY29sb3ItMDUiLHQuQ29sb3IwNj0iY29sb3ItMDYiLHQuQ29sb3IwNz0iY29sb3ItMDciLHQuQ29sb3IwOD0iY29sb3ItMDgiLHQuQ29sb3IwOT0iY29sb3ItMDkiLHQuQ29sb3IxMD0iY29sb3ItMTAiLHQuQ29sb3IxMT0iY29sb3ItMTEiLHQuQ29sb3IxMj0iY29sb3ItMTIiLHR9KHt9KTtsZXQgWHk9KCgpPT57Y2xhc3MgdHtnZXRDb2xvcih0KXtyZXR1cm4gT2JqZWN0LnZhbHVlcyhKeSkuaW5jbHVkZXModC5jb2xvcik/dC5jb2xvcjp0aGlzLmdldENvbG9yRnJvbVR5cGUodC50eXBlfHx0LmNvbG9yKX1nZXRDb2xvckZyb21UeXBlKHQpe3N3aXRjaCh0KXtjYXNlImRhbmdlciI6cmV0dXJuIEp5LkNvbG9yMDc7Y2FzZSJzdWNjZXNzIjpyZXR1cm4gSnkuQ29sb3IxMTtjYXNlIndhcm5pbmciOnJldHVybiBKeS5Db2xvcjA4O2RlZmF1bHQ6cmV0dXJuIEp5LkNvbG9yMDF9fX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0sdC5cdTAyNzVwcm92PXV0KHt0b2tlbjp0LGZhY3Rvcnk6dC5cdTAyNzVmYWN9KSx0fSkoKSx0dj0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVtb2Q9bWUoe3R5cGU6dH0pLHQuXHUwMjc1aW5qPWN0KHtmYWN0b3J5OmZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LHByb3ZpZGVyczpbWHldfSksdH0pKCksZXY9KCgpPT57Y2xhc3MgdHtjb25zdHJ1Y3Rvcih0LGUsbil7dGhpcy5jb21wb25lbnRSZXNvbHZlcj10LHRoaXMuYXBwbGljYXRpb25SZWY9ZSx0aGlzLmluamVjdG9yPW59Y3JlYXRlQ29tcG9uZW50SW5BcHBsaWNhdGlvbih0KXtjb25zdCBlPXRoaXMuY29tcG9uZW50UmVzb2x2ZXIucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkodCkuY3JlYXRlKHRoaXMuaW5qZWN0b3IpO3JldHVybiB0aGlzLmFwcGxpY2F0aW9uUmVmLmF0dGFjaFZpZXcoZS5ob3N0VmlldyksZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChlLmhvc3RWaWV3LnJvb3ROb2Rlc1swXSksZX1kZXN0cm95Q29tcG9uZW50SW5BcHBsaWNhdGlvbih0KXt0aGlzLmFwcGxpY2F0aW9uUmVmLmRldGFjaFZpZXcodC5ob3N0VmlldyksdC5kZXN0cm95KCl9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKEd0KFRvKSxHdCh4bCksR3QoeWkpKX0sdC5cdTAyNzVwcm92PXV0KHtmYWN0b3J5OmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyB0KEd0KFRvKSxHdCh4bCksR3QoVnQpKX0sdG9rZW46dCxwcm92aWRlZEluOiJyb290In0pLHR9KSgpLG52PSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0scHJvdmlkZXJzOltldl0saW1wb3J0czpbW11dfSksdH0pKCkscnY9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxwcm92aWRlcnM6W2t5XX0pLHR9KSgpO3ZhciBzdj1mdW5jdGlvbih0KXtyZXR1cm4gdFt0LkFsZXJ0PTBdPSJBbGVydCIsdFt0LkNvbmZpcm09MV09IkNvbmZpcm0iLHR9KHt9KTtjb25zdCBpdj17ZW46e29rOiJPayJ9LGVzOntvazoiT2sifSxwdDp7b2s6Ik9rIn0scnU6e29rOiJcdTA0MWVcdTA0M2EifX0sb3Y9e2VuOntjYW5jZWw6IkNhbmNlbCIsY29uZmlybToiQ29uZmlybSJ9LGVzOntjYW5jZWw6IkNhbmNlbGFyIixjb25maXJtOiJDb25maXJtYXIifSxwdDp7Y2FuY2VsOiJDYW5jZWxhciIsY29uZmlybToiQ29uZmlybWFyIn0scnU6e2NhbmNlbDoiXHUwNDNlXHUwNDQyXHUwNDNjXHUwNDM1XHUwNDNkXHUwNDM4XHUwNDQyXHUwNDRjIixjb25maXJtOiJcdTA0M2ZcdTA0M2VcdTA0MzRcdTA0NDJcdTA0MzJcdTA0MzVcdTA0NDBcdTA0MzRcdTA0MzhcdTA0NDJcdTA0NGMifX07bGV0IGF2PSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IodCl7dGhpcy5wcmltYXJ5QWN0aW9uPXtsYWJlbDoib2siLGFjdGlvbjooKT0+e319LHRoaXMubGFuZ3VhZ2U9dC5nZXRTaG9ydExhbmd1YWdlKCl9bmdPbkRlc3Ryb3koKXt0aGlzLmNsb3NlU3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCl9bmdPbkluaXQoKXt0aGlzLmNsb3NlU3Vic2NyaXB0aW9uPXRoaXMucG9Nb2RhbC5vblhDbG9zZWQuc3Vic2NyaWJlKHQ9PnRoaXMuY2xvc2UoITApKX1jbG9zZSh0PSExKXt0JiZ0aGlzLmNsb3NlQWN0aW9uJiZ0aGlzLmNsb3NlQWN0aW9uKCksdGhpcy5wb01vZGFsLmNsb3NlKCksdGhpcy5kZXN0cm95KCl9ZGVzdHJveSgpe3RoaXMuY29tcG9uZW50UmVmJiZ0aGlzLmNvbXBvbmVudFJlZi5kZXN0cm95KCl9Y29uZmlnRGlhbG9nKHQsZSxuLHIscyl7dGhpcy5wcmltYXJ5QWN0aW9uPXtsYWJlbDp0LGFjdGlvbjooKT0+e2UmJmUoKSx0aGlzLmNsb3NlKCl9fSxuJiYodGhpcy5zZWNvbmRhcnlBY3Rpb249e2xhYmVsOm4sYWN0aW9uOigpPT57ciYmcigpLHRoaXMuY2xvc2UoKX19KSx0aGlzLmNsb3NlQWN0aW9uPXN9b3Blbih0LGUsbil7c3dpdGNoKHRoaXMudGl0bGU9dC50aXRsZSx0aGlzLm1lc3NhZ2U9dC5tZXNzYWdlLHRoaXMuY29tcG9uZW50UmVmPW4sdGhpcy5zZXREaWFsb2dMaXRlcmFscyh0LGUpLGUpe2Nhc2Ugc3YuQ29uZmlybTp0aGlzLmNvbmZpZ0RpYWxvZyh0aGlzLmxpdGVyYWxzQ29uZmlybS5jb25maXJtLHQuY29uZmlybSx0aGlzLmxpdGVyYWxzQ29uZmlybS5jYW5jZWwsdC5jYW5jZWwsdC5jbG9zZSk7YnJlYWs7Y2FzZSBzdi5BbGVydDp0aGlzLmNvbmZpZ0RpYWxvZyh0aGlzLmxpdGVyYWxzQWxlcnQub2ssdC5vayl9dGhpcy5wb01vZGFsLm9wZW4oKX1zZXREaWFsb2dMaXRlcmFscyh0LGUpe2NvbnN0IG49aXYscj1vdixzPXQubGl0ZXJhbHM7ZT09PXN2LkFsZXJ0P3RoaXMubGl0ZXJhbHNBbGVydD1PYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSxuLnB0KSxuW3RoaXMubGFuZ3VhZ2VdKSxzKTp0aGlzLmxpdGVyYWxzQ29uZmlybT1PYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSxyLnB0KSxyW3RoaXMubGFuZ3VhZ2VdKSxzKX19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCkoUmkoY3kpKX0sdC5cdTAyNzVjbXA9ZGUoe3R5cGU6dCxzZWxlY3RvcnM6W1sibmctY29tcG9uZW50Il1dLHZpZXdRdWVyeTpmdW5jdGlvbih0LGUpe3ZhciBuOzEmdCYmUmEoS3ksITApLDImdCYmSWEobj1OYSgpKSYmKGUucG9Nb2RhbD1uLmZpcnN0KX0sZGVjbHM6Mix2YXJzOjQsY29uc3RzOltbMywicC10aXRsZSIsInAtcHJpbWFyeS1hY3Rpb24iLCJwLXNlY29uZGFyeS1hY3Rpb24iXV0sdGVtcGxhdGU6ZnVuY3Rpb24odCxlKXsxJnQmJihOaSgwLCJwby1tb2RhbCIsMCksZ28oMSksVmkoKSksMiZ0JiYoTWkoInAtdGl0bGUiLGUudGl0bGUpKCJwLXByaW1hcnktYWN0aW9uIixlLnByaW1hcnlBY3Rpb24pKCJwLXNlY29uZGFyeS1hY3Rpb24iLGUuc2Vjb25kYXJ5QWN0aW9uKSxqcigxKSx5bygiICIsZS5tZXNzYWdlLCJcbiIpKX0sZGlyZWN0aXZlczpbS3ldLGVuY2Fwc3VsYXRpb246Mn0pLHR9KSgpLGx2PSgoKT0+e2NsYXNzIHQgZXh0ZW5kcyBjbGFzc3tjb25maXJtKHQpe3RoaXMub3BlbkRpYWxvZyhzdi5Db25maXJtLHQpfWFsZXJ0KHQpe3RoaXMub3BlbkRpYWxvZyhzdi5BbGVydCx0KX19e2NvbnN0cnVjdG9yKHQpe3N1cGVyKCksdGhpcy5wb0NvbXBvbmVudEluamVjdG9yPXR9b3BlbkRpYWxvZyh0LGUpe2NvbnN0IG49dGhpcy5wb0NvbXBvbmVudEluamVjdG9yLmNyZWF0ZUNvbXBvbmVudEluQXBwbGljYXRpb24oYXYpO24uY2hhbmdlRGV0ZWN0b3JSZWYuZGV0ZWN0Q2hhbmdlcygpLG4uaW5zdGFuY2Uub3BlbihlLHQsbil9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKEd0KGV2KSl9LHQuXHUwMjc1cHJvdj11dCh7dG9rZW46dCxmYWN0b3J5OnQuXHUwMjc1ZmFjfSksdH0pKCksdXY9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxwcm92aWRlcnM6W2x2XSxpbXBvcnRzOltbUXldXX0pLHR9KSgpO3ZhciBjdj1mdW5jdGlvbih0KXtyZXR1cm4gdFt0LkJvdHRvbT0wXT0iQm90dG9tIix0W3QuVG9wPTFdPSJUb3AiLHR9KHt9KSxodj1mdW5jdGlvbih0KXtyZXR1cm4gdFt0LkVycm9yPTBdPSJFcnJvciIsdFt0LkluZm9ybWF0aW9uPTFdPSJJbmZvcm1hdGlvbiIsdFt0LlN1Y2Nlc3M9Ml09IlN1Y2Nlc3MiLHRbdC5XYXJuaW5nPTNdPSJXYXJuaW5nIix0fSh7fSk7Y29uc3QgZHY9e2VuOntjbG9zZVRvYXN0ZXI6IkNsb3NlIn0sZXM6e2Nsb3NlVG9hc3RlcjoiQ2VyY2EifSxwdDp7Y2xvc2VUb2FzdGVyOiJGZWNoYXIifSxydTp7Y2xvc2VUb2FzdGVyOiJcdTA0MzFcdTA0M2JcdTA0MzhcdTA0MzdcdTA0M2FcdTA0M2UifX07bGV0IHB2PSgoKT0+e2NsYXNzIHQgZXh0ZW5kcyBjbGFzc3tjb25zdHJ1Y3Rvcigpe3RoaXMub3JpZW50YXRpb249Y3YuQm90dG9tfX17Y29uc3RydWN0b3IodCxlLG4pe3N1cGVyKCksdGhpcy5jaGFuZ2VEZXRlY3Rvcj1lLHRoaXMuZWxlbWVudGVSZWY9bix0aGlzLmxpdGVyYWxzPU9iamVjdC5hc3NpZ24oe30sZHYucHQpLHRoaXMubWFyZ2luPTIwLHRoaXMub2JzZXJ2YWJsZU9uQ2xvc2U9bmV3IEQsdGhpcy5zaG93VG9hc3Rlcj0hMCx0aGlzLnRvYXN0ZXJQb3NpdGlvbj0icG8tdG9hc3Rlci1ib3R0b20iLHRoaXMubGl0ZXJhbHM9T2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LHRoaXMubGl0ZXJhbHMpLGR2W3QuZ2V0U2hvcnRMYW5ndWFnZSgpXSl9Y2hhbmdlUG9zaXRpb24odCl7dGhpcy5lbGVtZW50ZVJlZi5uYXRpdmVFbGVtZW50LnN0eWxlLmRpc3BsYXk9InRhYmxlIix0aGlzLm1hcmdpbj02KzQ0KnQrNip0LHRoaXMub3JpZW50YXRpb249PT1jdi5Ub3A/dGhpcy50b2FzdGVyLm5hdGl2ZUVsZW1lbnQuc3R5bGUudG9wPXRoaXMubWFyZ2luKyJweCI6dGhpcy50b2FzdGVyLm5hdGl2ZUVsZW1lbnQuc3R5bGUuYm90dG9tPXRoaXMubWFyZ2luKyJweCJ9Y2xvc2UoKXt0aGlzLnNob3dUb2FzdGVyPSExLHRoaXMub2JzZXJ2YWJsZU9uQ2xvc2UubmV4dCghMCl9Y29uZmlnVG9hc3Rlcih0KXtzd2l0Y2godGhpcy50eXBlPXQudHlwZSx0aGlzLm1lc3NhZ2U9dC5tZXNzYWdlLHRoaXMub3JpZW50YXRpb249dC5vcmllbnRhdGlvbix0aGlzLnBvc2l0aW9uPXQucG9zaXRpb24sdGhpcy5hY3Rpb249dC5hY3Rpb24sdGhpcy5hY3Rpb25MYWJlbD10LmFjdGlvbkxhYmVsP3QuYWN0aW9uTGFiZWw6dGhpcy5saXRlcmFscy5jbG9zZVRvYXN0ZXIsdGhpcy5jb21wb25lbnRSZWY9dC5jb21wb25lbnRSZWYsdGhpcy5vcmllbnRhdGlvbj09PWN2LlRvcCYmKHRoaXMudG9hc3RlclBvc2l0aW9uPSJwby10b2FzdGVyLXRvcCIpLHRoaXMuY2hhbmdlUG9zaXRpb24odGhpcy5wb3NpdGlvbiksdGhpcy50eXBlKXtjYXNlIGh2LkVycm9yOnRoaXMudG9hc3RlclR5cGU9InBvLXRvYXN0ZXItZXJyb3IiLHRoaXMuaWNvbj0icG8taWNvbi1jbG9zZSI7YnJlYWs7Y2FzZSBodi5JbmZvcm1hdGlvbjp0aGlzLnRvYXN0ZXJUeXBlPSJwby10b2FzdGVyLWluZm8iLHRoaXMuaWNvbj0icG8taWNvbi1pbmZvIjticmVhaztjYXNlIGh2LlN1Y2Nlc3M6dGhpcy50b2FzdGVyVHlwZT0icG8tdG9hc3Rlci1zdWNjZXNzIix0aGlzLmljb249InBvLWljb24tb2siO2JyZWFrO2Nhc2UgaHYuV2FybmluZzp0aGlzLnRvYXN0ZXJUeXBlPSJwby10b2FzdGVyLXdhcm5pbmciLHRoaXMuaWNvbj0icG8taWNvbi13YXJuaW5nIn10aGlzLmNoYW5nZURldGVjdG9yLmRldGVjdENoYW5nZXMoKX1nZXRTaG93VG9hc3Rlcigpe3JldHVybiB0aGlzLnNob3dUb2FzdGVyfWdldEljb24oKXtyZXR1cm4gdGhpcy5pY29ufWdldFRvYXN0ZXJQb3NpdGlvbigpe3JldHVybiB0aGlzLnRvYXN0ZXJQb3NpdGlvbn1nZXRUb2FzdGVyVHlwZSgpe3JldHVybiB0aGlzLnRvYXN0ZXJUeXBlfXBvVG9hc3RlckFjdGlvbigpe3RoaXMuYWN0aW9uKHRoaXMpfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KShSaShjeSksUmkodGkpLFJpKEZvKSl9LHQuXHUwMjc1Y21wPWRlKHt0eXBlOnQsc2VsZWN0b3JzOltbInBvLXRvYXN0ZXIiXV0sdmlld1F1ZXJ5OmZ1bmN0aW9uKHQsZSl7dmFyIG47MSZ0JiZNYShObSwhMCksMiZ0JiZJYShuPU5hKCkpJiYoZS50b2FzdGVyPW4uZmlyc3QpfSxmZWF0dXJlczpbX2ldLGRlY2xzOjEsdmFyczoxLGNvbnN0czpbWzMsImNsYXNzIiwiY2xpY2siLDQsIm5nSWYiXSxbMywiY2xpY2siXSxbInRvYXN0ZXIiLCIiXSxbMSwicG8tdG9hc3Rlci1pY29uIl0sWzEsInBvLXRvYXN0ZXItbWVzc2FnZSJdLFsiY2xhc3MiLCJwby10b2FzdGVyLWFjdGlvbiIsMywiY2xpY2siLDQsIm5nSWYiXSxbMSwicG8tdG9hc3Rlci1hY3Rpb24iLDMsImNsaWNrIl1dLHRlbXBsYXRlOmZ1bmN0aW9uKHQsZSl7MSZ0JiZJaSgwLEJtLDcsOSwiZGl2IiwwKSwyJnQmJk1pKCJuZ0lmIixlLmdldFNob3dUb2FzdGVyKCkpfSxkaXJlY3RpdmVzOltXdV0sZW5jYXBzdWxhdGlvbjoyfSksdH0pKCksZnY9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxwcm92aWRlcnM6W10saW1wb3J0czpbW3NjXV19KSx0fSkoKSxndj0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVtb2Q9bWUoe3R5cGU6dH0pLHQuXHUwMjc1aW5qPWN0KHtmYWN0b3J5OmZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LHByb3ZpZGVyczpbXSxpbXBvcnRzOltbdHYsbnYscnYsSXksdXYsdnksZnZdLHR2LG52LHJ2LEl5LHV2LGZ2XX0pLHR9KSgpLG12PSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0saW1wb3J0czpbW3NjXV19KSx0fSkoKSx5dj0oKCk9PntjbGFzcyB0e3RyYW5zZm9ybSh0LGUpe2lmKCJzdHJpbmciPT10eXBlb2YgdCYmL14oKFswLTFdWzAtOV0pfCgyWzAtM10pKTpbMC01XVswLTldOlswLTVdWzAtOV1bXC5dPyhbMC05XXsxLDZ9KT8kL2cudGVzdCh0KSl7Y29uc3Qgbj1lP2UubGFzdEluZGV4T2YoImYiKS1lLmluZGV4T2YoImYiKSsxOjAscj10aGlzLmFkZERvdE1pbGlzZWNvbmRzKHQuc3Vic3RyaW5nKDksOStuKSxuKSxzPXRoaXMuZ2V0Rm9ybWF0TWlsaXNlY29uZHMobik7cmV0dXJuIHRoaXMuZm9ybWF0VmFsdWUodCxlLHMscil9cmV0dXJuIG51bGx9YWRkRG90TWlsaXNlY29uZHModCxlKXtyZXR1cm4gdCYmZSYmKHQ9Ii4iK3QpLHR9Zm9ybWF0VmFsdWUodCxlLG4scil7aWYodCYmZSl7Y29uc3Qgcz10LnN1YnN0cmluZygwLDIpLGk9dC5zdWJzdHJpbmcoMyw1KSxvPXQuc3Vic3RyaW5nKDYsOCk7cmV0dXJuKGU9KGU9KGU9ZS5yZXBsYWNlKCJISCIscykpLnJlcGxhY2UoIm1tIixpKSkucmVwbGFjZSgic3MiLG8pKS5yZXBsYWNlKCIuIituLHIpfXJldHVybiB0fWdldEZvcm1hdE1pbGlzZWNvbmRzKHQpe2xldCBlPSIiO2ZvcihsZXQgbj0wO248dDtuKyspZSs9ImYiO3JldHVybiBlfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0sdC5cdTAyNzVwaXBlPWJlKHtuYW1lOiJwb190aW1lIix0eXBlOnQscHVyZTohMH0pLHR9KSgpLHZ2PSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0scHJvdmlkZXJzOltdLGltcG9ydHM6W1tdXX0pLHR9KSgpLGJ2PSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0scHJvdmlkZXJzOlt0Y10saW1wb3J0czpbW3NjLGNkLE9nLFN5LFd5LE55LGJ5LFF5LG12LFV5LHZ2LFR5XV19KSx0fSkoKSx3dj0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKCl7dGhpcy5kZWZhdWx0VmFsdWU9IiIsdGhpcy5jaGFuZ2VFdmVudD1uZXcgQ2F9Y2xlYXIoKXt0aGlzLnNldElucHV0VmFsdWUodGhpcy5kZWZhdWx0VmFsdWUpLHRoaXMuY2hhbmdlRXZlbnQuZW1pdCh0aGlzLmRlZmF1bHRWYWx1ZSl9c2hvd0ljb24oKXtyZXR1cm4gdGhpcy5kZWZhdWx0VmFsdWUhPT10aGlzLmdldElucHV0VmFsdWUoKSYmdGhpcy5oYXNDbGVhbkF0dHIoKSYmIXRoaXMuaXNEaXNhYmxlZCgpJiYhdGhpcy5pc1JlYWRvbmx5KCl9aGFzQ2xlYW5BdHRyKCl7cmV0dXJuIHRoaXMucGFyZW50Q29tcG9uZW50LmNsZWFufWlzRGlzYWJsZWQoKXtyZXR1cm4gdGhpcy5wYXJlbnRDb21wb25lbnQuZGlzYWJsZWR9aXNSZWFkb25seSgpe3JldHVybiB0aGlzLnBhcmVudENvbXBvbmVudC5yZWFkb25seX19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LHQuXHUwMjc1ZGlyPXZlKHt0eXBlOnQsaW5wdXRzOntkZWZhdWx0VmFsdWU6WyJwLWRlZmF1bHQtdmFsdWUiLCJkZWZhdWx0VmFsdWUiXSxpbnB1dFJlZjpbInAtZWxlbWVudC1yZWYiLCJpbnB1dFJlZiJdfSxvdXRwdXRzOntjaGFuZ2VFdmVudDoicC1jaGFuZ2UtZXZlbnQifX0pLHR9KSgpLF92PSgoKT0+e2NsYXNzIHQgZXh0ZW5kcyB3dntjb25zdHJ1Y3Rvcih0KXtzdXBlcigpLHRoaXMudmlld1JlZj10LHRoaXMucGFyZW50Q29tcG9uZW50PWZ1bmN0aW9uKHQpe3JldHVybiB0Ll9ob3N0Vmlldz90Ll9ob3N0Vmlld1s4XTp0Ll92aWV3LmNvbXBvbmVudH0odGhpcy52aWV3UmVmKX1zZXRJbnB1dFZhbHVlKHQpe3RoaXMuaW5wdXRSZWYmJnRoaXMuaW5wdXRSZWYubmF0aXZlRWxlbWVudCYmKHRoaXMuaW5wdXRSZWYubmF0aXZlRWxlbWVudC52YWx1ZT10KX1nZXRJbnB1dFZhbHVlKCl7aWYodGhpcy5pbnB1dFJlZiYmdGhpcy5pbnB1dFJlZi5uYXRpdmVFbGVtZW50KXJldHVybiB0aGlzLmlucHV0UmVmLm5hdGl2ZUVsZW1lbnQudmFsdWV9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKFJpKG5hKSl9LHQuXHUwMjc1Y21wPWRlKHt0eXBlOnQsc2VsZWN0b3JzOltbInBvLWNsZWFuIl1dLGZlYXR1cmVzOltfaV0sZGVjbHM6MSx2YXJzOjEsY29uc3RzOltbImNsYXNzIiwicG8taWNvbiBwby1maWVsZC1pY29uIHBvLWljb24tY2xvc2UiLDMsImNsaWNrIiw0LCJuZ0lmIl0sWzEsInBvLWljb24iLCJwby1maWVsZC1pY29uIiwicG8taWNvbi1jbG9zZSIsMywiY2xpY2siXV0sdGVtcGxhdGU6ZnVuY3Rpb24odCxlKXsxJnQmJklpKDAsTG0sMSwwLCJzcGFuIiwwKSwyJnQmJk1pKCJuZ0lmIixlLnNob3dJY29uKCkpfSxkaXJlY3RpdmVzOltXdV0sZW5jYXBzdWxhdGlvbjoyfSksdH0pKCk7Y2xhc3MgQ3Z7Y29uc3RydWN0b3IodCxlKXt0aGlzLm1hc2s9IiIsdGhpcy5mb3JtYXRNb2RlbD0hMSx0aGlzLmluaXRpYWxQb3NpdGlvbj0wLHRoaXMuZmluYWxQb3NpdGlvbj0wLHRoaXMucGF0dGVybj0iIix0aGlzLm1hc2s9dCx0aGlzLmZvcm1hdE1vZGVsPWUsdGhpcy5wYXR0ZXJuPXRoaXMuZ2V0UmVnZXhGcm9tTWFzayh0KX1nZXQgZ2V0UGF0dGVybigpe3JldHVybiB0aGlzLnBhdHRlcm59Z2V0IGdldFZhbHVlVG9JbnB1dCgpe3JldHVybiB0aGlzLnZhbHVlVG9JbnB1dH1zZXQgc2V0VmFsdWVUb0lucHV0KHQpe3RoaXMudmFsdWVUb0lucHV0PXR9Z2V0IGdldFZhbHVlVG9Nb2RlbCgpe3JldHVybiB0aGlzLnZhbHVlVG9Nb2RlbH1zZXQgc2V0VmFsdWVUb01vZGVsKHQpe3RoaXMudmFsdWVUb01vZGVsPXR9a2V5dXAodCl7aWYodGhpcy5tYXNrKXtjb25zdCBlPXQudGFyZ2V0LnZhbHVlO3N3aXRjaCgxNyE9PXQua2V5Q29kZSYmOTEhPT10LmtleUNvZGV8fCh0LnRhcmdldC52YWx1ZT10aGlzLmNvbnRyb2xGb3JtYXR0aW5nKGUpLHRoaXMucmVzZXRQb3NpdGlvbnModCkpLHQucHJldmVudERlZmF1bHQoKSx0LmtleUNvZGUpe2Nhc2UgMzc6dGhpcy5pbml0aWFsUG9zaXRpb24+MCYmdGhpcy5pbml0aWFsUG9zaXRpb24tLSx0aGlzLnNldFBvc2l0aW9uTm90U2hpZnRLZXkodCksdGhpcy5zZXRTZWxlY3Rpb25SYW5nZSh0KTticmVhaztjYXNlIDM5OnRoaXMuaW5pdGlhbFBvc2l0aW9uPGUudG9TdHJpbmcoKS5sZW5ndGgmJnRoaXMuaW5pdGlhbFBvc2l0aW9uKyssdGhpcy5zZXRQb3NpdGlvbk5vdFNoaWZ0S2V5KHQpLHRoaXMuc2V0U2VsZWN0aW9uUmFuZ2UodCk7YnJlYWs7Y2FzZSAzNTp0aGlzLmZpbmFsUG9zaXRpb249ZS50b1N0cmluZygpLmxlbmd0aCx0LnNoaWZ0S2V5fHwodGhpcy5pbml0aWFsUG9zaXRpb249dGhpcy5maW5hbFBvc2l0aW9uKSx0aGlzLnNldFBvc2l0aW9ucyh0KTticmVhaztjYXNlIDM2OnQuc2hpZnRLZXk/KHRoaXMuZmluYWxQb3NpdGlvbj10aGlzLmluaXRpYWxQb3NpdGlvbix0aGlzLmluaXRpYWxQb3NpdGlvbj0wLHRoaXMuc2V0UG9zaXRpb25zKHQpKToodGhpcy5pbml0aWFsUG9zaXRpb249MCx0aGlzLmZpbmFsUG9zaXRpb249MCx0aGlzLnNldFBvc2l0aW9ucyh0KSl9fX1zZXRQb3NpdGlvbk5vdFNoaWZ0S2V5KHQpe3Quc2hpZnRLZXl8fCh0aGlzLmZpbmFsUG9zaXRpb249dGhpcy5pbml0aWFsUG9zaXRpb24pfXNldFNlbGVjdGlvblJhbmdlKHQpe3RoaXMuaW5pdGlhbFBvc2l0aW9uPnRoaXMuZmluYWxQb3NpdGlvbj90LnRhcmdldC5zZXRTZWxlY3Rpb25SYW5nZSh0aGlzLmZpbmFsUG9zaXRpb24sdGhpcy5pbml0aWFsUG9zaXRpb24pOnQudGFyZ2V0LnNldFNlbGVjdGlvblJhbmdlKHRoaXMuaW5pdGlhbFBvc2l0aW9uLHRoaXMuZmluYWxQb3NpdGlvbil9a2V5ZG93bih0KXtpZih0aGlzLm1hc2spe2xldCBlPXQudGFyZ2V0LnZhbHVlO2lmKDk9PT10LmtleUNvZGUpcmV0dXJuO2lmKHQuY3RybEtleXx8dC5tZXRhS2V5fHx0LnByZXZlbnREZWZhdWx0KCksdC5jdHJsS2V5fHx0Lm1ldGFLZXkmJjg2IT09dC5rZXlDb2RlfHx0LmtleUNvZGU+PTM3JiZ0LmtleUNvZGU8PTQwfHwxNj09PXQua2V5Q29kZXx8OT09PXQua2V5Q29kZSlyZXR1cm47aWYodGhpcy5pc0tleVZhbGlkKHQua2V5Q29kZSkpc3dpdGNoKG51bGw9PT10aGlzLmZpbmFsUG9zaXRpb24mJih0aGlzLmZpbmFsUG9zaXRpb249dGhpcy5pbml0aWFsUG9zaXRpb24pLHRoaXMucmV2ZXJ0UG9zaXRpb25zKHRoaXMuaW5pdGlhbFBvc2l0aW9uLHRoaXMuZmluYWxQb3NpdGlvbiksdC5rZXlDb2RlKXtjYXNlIDg6dGhpcy5nZXRQb3NpdGlvbih0KSx0aGlzLmluaXRpYWxQb3NpdGlvbjwwJiYodGhpcy5pbml0aWFsUG9zaXRpb249MCx0aGlzLnNldFBvc2l0aW9ucyh0KSksdGhpcy5pbml0aWFsUG9zaXRpb249PT10aGlzLmZpbmFsUG9zaXRpb24/KHRoaXMuY2hlY2tNYXNrQmVmb3JlKHQsLTEpLDAhPT10aGlzLmluaXRpYWxQb3NpdGlvbiYmKGU9ZS5zbGljZSgwLHRoaXMuaW5pdGlhbFBvc2l0aW9uLTEpK2Uuc2xpY2UodGhpcy5maW5hbFBvc2l0aW9uKSxlPXRoaXMuY29udHJvbEZvcm1hdHRpbmcoZSksdC50YXJnZXQudmFsdWU9ZSx0aGlzLmNoYW5nZVBvc2l0aW9uKHQsLTEpLHRoaXMuY2hlY2tNYXNrQmVmb3JlKHQsLTEpLHRoaXMuc2V0UG9zaXRpb25zKHQpLHRoaXMucmVzZXRQb3NpdGlvbnModCkpKTp0aGlzLmNsZWFyUmFuZ2VTZWxlY3Rpb24oZSx0LCEwKSx0aGlzLnNldFBvc2l0aW9ucyh0KTticmVhaztjYXNlIDQ2OnRoaXMuZ2V0UG9zaXRpb24odCksdGhpcy5pbml0aWFsUG9zaXRpb249PT10aGlzLmZpbmFsUG9zaXRpb24/KHRoaXMuY2hlY2tNYXNrQWZ0ZXIodCwxKSxlPWUuc2xpY2UoMCx0aGlzLmluaXRpYWxQb3NpdGlvbikrZS5zbGljZSh0aGlzLmZpbmFsUG9zaXRpb24rMSksZT10aGlzLmNvbnRyb2xGb3JtYXR0aW5nKGUpLHQudGFyZ2V0LnZhbHVlPWUsdGhpcy5zZXRQb3NpdGlvbnModCksdGhpcy5yZXNldFBvc2l0aW9ucyh0KSk6dGhpcy5jbGVhclJhbmdlU2VsZWN0aW9uKGUsdCwhMSksdGhpcy5zZXRQb3NpdGlvbnModCk7YnJlYWs7ZGVmYXVsdDplPWUuc2xpY2UoMCx0aGlzLmluaXRpYWxQb3NpdGlvbikrdC5rZXkrZS5zbGljZSh0aGlzLmZpbmFsUG9zaXRpb24pLGU9dGhpcy5jb250cm9sRm9ybWF0dGluZyhlKSx0LnRhcmdldC52YWx1ZT1lLHRoaXMuY2hhbmdlUG9zaXRpb24odCwxKSx0aGlzLmNoZWNrTWFza0JlZm9yZSh0LDEpLHRoaXMuc2V0UG9zaXRpb25zKHQpLHRoaXMucmVzZXRQb3NpdGlvbnModCksdGhpcy5zZXRQb3NpdGlvbnModCl9fX1jbGVhclJhbmdlU2VsZWN0aW9uKHQsZSxuKXt0PXQuc2xpY2UoMCx0aGlzLmluaXRpYWxQb3NpdGlvbikrdC5zbGljZSh0aGlzLmZpbmFsUG9zaXRpb24pLHQ9dGhpcy5jb250cm9sRm9ybWF0dGluZyh0KSxlLnRhcmdldC52YWx1ZT10LG4mJnRoaXMuY2hlY2tNYXNrQmVmb3JlKGUsLTEpLHRoaXMuc2V0UG9zaXRpb25zKGUpLHRoaXMucmVzZXRQb3NpdGlvbnMoZSl9Y2xpY2sodCl7dGhpcy5pbml0aWFsUG9zaXRpb249dC50YXJnZXQuc2VsZWN0aW9uU3RhcnQsdGhpcy5maW5hbFBvc2l0aW9uPXQudGFyZ2V0LnNlbGVjdGlvbkVuZH1ibHVyKHQpe2lmKHRoaXMubWFzayl7bGV0IGU9dC50YXJnZXQudmFsdWU7ZT10aGlzLmNvbnRyb2xGb3JtYXR0aW5nKGUpLHQudGFyZ2V0LnZhbHVlPWV9fXJldmVydFBvc2l0aW9ucyh0LGUpe2lmKHQ+ZSl7bGV0IG47bj10LHRoaXMuaW5pdGlhbFBvc2l0aW9uPWUsdGhpcy5maW5hbFBvc2l0aW9uPW59fXJlc2V0UG9zaXRpb25zKHQpe3RoaXMuaW5pdGlhbFBvc2l0aW9uPXQudGFyZ2V0LnNlbGVjdGlvblN0YXJ0LHRoaXMuZmluYWxQb3NpdGlvbj10aGlzLmluaXRpYWxQb3NpdGlvbn1zZXRQb3NpdGlvbnModCl7dC50YXJnZXQuc2V0U2VsZWN0aW9uUmFuZ2UodGhpcy5pbml0aWFsUG9zaXRpb24sdGhpcy5maW5hbFBvc2l0aW9uKX1jaGFuZ2VQb3NpdGlvbih0LGUpe3RoaXMuaW5pdGlhbFBvc2l0aW9uPXRoaXMuaW5pdGlhbFBvc2l0aW9uK2UsdGhpcy5maW5hbFBvc2l0aW9uPXRoaXMuZmluYWxQb3NpdGlvbitlLHRoaXMuc2V0UG9zaXRpb25zKHQpfWdldFBvc2l0aW9uKHQpe3RoaXMuaW5pdGlhbFBvc2l0aW9uPXQudGFyZ2V0LnNlbGVjdGlvblN0YXJ0LHRoaXMuZmluYWxQb3NpdGlvbj10LnRhcmdldC5zZWxlY3Rpb25FbmQsdGhpcy5zZXRQb3NpdGlvbnModCl9Y29udHJvbEZvcm1hdHRpbmcodCl7aWYoIXQpcmV0dXJuIHRoaXMudmFsdWVUb0lucHV0PSIiLHRoaXMudmFsdWVUb01vZGVsPSIiLCIiO2xldCBlLG49dGhpcy5tYXNrO2NvbnN0IHI9W107bGV0IHM9MDtmb3IoO3RoaXMuaGFzT3B0aW9uYWxOdW1iZXIobik7KXIucHVzaChuKSxuPXRoaXMucmVwbGFjZU9wdGlvbmFsTnVtYmVyKG4pO2ZvcihyLnB1c2gobiksci5yZXZlcnNlKCksdGhpcy5mb3JtYXR0aW5nRW5kcz0hMTshdGhpcy5mb3JtYXR0aW5nRW5kcyYmKHRoaXMuZm9ybWF0dGluZ0VuZHM9ITAscltzXSk7KWU9dGhpcy5mb3JtYXRWYWx1ZSh0LHJbc10pLHMrKztyZXR1cm4gZX1mb3JtYXRWYWx1ZSh0LGUpe2NvbnN0IG49KGU9ZS5yZXBsYWNlKC9cPy9nLCIiKSkucmVwbGFjZSh0aGlzLmxpc3RWYWxpZEtleXMoKSwiXyIpO2xldCByPTAscz0iIjt0PXRoaXMucmVtb3ZlRm9ybWF0dGluZ1ZhbHVlKHQpO2ZvcihsZXQgaT0wO2k8dC5sZW5ndGg7aSsrKXtjb25zdCBvPXRbaV07aWYoIW5bcl0pe3RoaXMuZm9ybWF0dGluZ0VuZHM9ITE7YnJlYWt9Zm9yKDt0aGlzLmlzRml4ZWRDaGFyYWN0ZXJHdWlkZShuW3JdKSYmbltyXTspcys9bltyXSxyKys7aWYoIXRoaXMuaXNLZXlWYWxpZE1hc2sobyxlW3JdKSlicmVhaztzKz1vLHIrK31yZXR1cm4gdGhpcy5mb3JtYXRNb2RlbD8odGhpcy52YWx1ZVRvSW5wdXQ9cyx0aGlzLnZhbHVlVG9Nb2RlbD1zKToodGhpcy52YWx1ZVRvSW5wdXQ9cyx0aGlzLnZhbHVlVG9Nb2RlbD10aGlzLnJlbW92ZUZvcm1hdHRpbmdWYWx1ZShzKSksc31jaGVja01hc2tCZWZvcmUodCxlKXt0aGlzLmlzRml4ZWRDaGFyYWN0ZXJHdWlkZSh0LnRhcmdldC52YWx1ZS50b1N0cmluZygpLmNoYXJBdCh0aGlzLmluaXRpYWxQb3NpdGlvbi0xKSkmJih0aGlzLmNoYW5nZVBvc2l0aW9uKHQsZSksdGhpcy5jaGVja01hc2tCZWZvcmUodCxlKSl9Y2hlY2tNYXNrQWZ0ZXIodCxlKXt0aGlzLmlzRml4ZWRDaGFyYWN0ZXJHdWlkZSh0LnRhcmdldC52YWx1ZS50b1N0cmluZygpLmNoYXJBdCh0aGlzLmluaXRpYWxQb3NpdGlvbikpJiYodGhpcy5jaGFuZ2VQb3NpdGlvbih0LGUpLHRoaXMuY2hlY2tNYXNrQWZ0ZXIodCxlKSl9cmVwbGFjZU9wdGlvbmFsTnVtYmVyKHQpe2xldCBlPTk7Zm9yKDtlPj0wOyl7aWYodC5pbmRleE9mKGUrIj8iKT4tMSlyZXR1cm4gdC5yZXBsYWNlKGUrIj8iLCIiKTtlLS19cmV0dXJuIHR9aXNGaXhlZENoYXJhY3Rlckd1aWRlKHQpe3JldHVybiB0aGlzLnRlc3RSZWdleCh0LHRoaXMuZ2V0Rml4ZWRDaGFyYWN0ZXJHdWlkZSgpKX1nZXRGaXhlZENoYXJhY3Rlckd1aWRlKCl7cmV0dXJuL1tcXFwvKCkgKy0uXDpdL2d9bGlzdFZhbGlkS2V5cygpe3JldHVybi9bYS16QS1aMC05XS9nfWlzS2V5VmFsaWQodCl7cmV0dXJuIHRoaXMuaXNLZXlDb2RlVmFsaWQodCl9aXNLZXlDb2RlVmFsaWQodCl7cmV0dXJuIHQ+PTQ4JiZ0PD01N3x8dD49NjUmJnQ8PTkwfHx0Pj05NiYmdDw9MTA1fHw4PT09dHx8OT09PXR8fDQ2PT09dH1pc0tleVZhbGlkTWFzayh0LGUpe3JldHVybiB0aGlzLnRlc3RSZWdleCh0LHRoaXMucmVwbGFjZU1hc2soZSkpfXRlc3RSZWdleCh0LGUpe3JldHVybiBlLnRlc3QodCl9cmVtb3ZlRm9ybWF0dGluZ1ZhbHVlKHQpe3JldHVybiB0LnJlcGxhY2UodGhpcy5nZXRGaXhlZENoYXJhY3Rlckd1aWRlKCksIiIpfWhhc09wdGlvbmFsTnVtYmVyKHQpe3JldHVybiB0Lm1hdGNoKC9cZFw/L2cpfXJlcGxhY2VNYXNrKHQpe2xldCBlPS8uLztzd2l0Y2godCl7Y2FzZSIwIjplPS9bMF0vO2JyZWFrO2Nhc2UiMSI6ZT0vWzAtMV0vO2JyZWFrO2Nhc2UiMiI6ZT0vWzAtMl0vO2JyZWFrO2Nhc2UiMyI6ZT0vWzAtM10vO2JyZWFrO2Nhc2UiNCI6ZT0vWzAtNF0vO2JyZWFrO2Nhc2UiNSI6ZT0vWzAtNV0vO2JyZWFrO2Nhc2UiNiI6ZT0vWzAtNl0vO2JyZWFrO2Nhc2UiNyI6ZT0vWzAtN10vO2JyZWFrO2Nhc2UiOCI6ZT0vWzAtOF0vO2JyZWFrO2Nhc2UiOSI6ZT0vWzAtOV0vO2JyZWFrO2Nhc2UiICI6ZT0vXHMvO2JyZWFrO2Nhc2UiQCI6ZT0vW2EtekEtWl0vO2JyZWFrO2Nhc2UidyI6ZT0vW2EtekEtWjAtOV0vfXJldHVybiBlfWdldFJlZ2V4RnJvbU1hc2sodCl7aWYodCl7bGV0IGU7cmV0dXJuIHRoaXMuZm9ybWF0TW9kZWw/KGU9dC5yZXBsYWNlKC9cXC9nLCJcXFxcIiksZT1lLnJlcGxhY2UoL1wrL2csIlxcKyIpLGU9ZS5yZXBsYWNlKC9cLi9nLCJcXC4iKSxlPWUucmVwbGFjZSgvLS9nLCItIiksZT1lLnJlcGxhY2UoL1woL2csIlxcKCIpLGU9ZS5yZXBsYWNlKC9cKS9nLCJcXCkiKSxlPWUucmVwbGFjZSgvXC8vZywiXFwvIiksZT1lLnJlcGxhY2UoL1xzL2csIlxccyIpLGU9ZS5yZXBsYWNlKC86L2csIlxcOiIpLGU9ZS5yZXBsYWNlKC9cQCg/IVxzKS9nLCJcXHciKSxlPWUucmVwbGFjZSgvXGQvZywiXFx3IikpOihlPXQucmVwbGFjZSgvXFwvZywiIiksZT1lLnJlcGxhY2UoL1wrL2csIiIpLGU9ZS5yZXBsYWNlKC9cLi9nLCIiKSxlPWUucmVwbGFjZSgvLS9nLCIiKSxlPWUucmVwbGFjZSgvXCgvZywiIiksZT1lLnJlcGxhY2UoL1wpL2csIiIpLGU9ZS5yZXBsYWNlKC9cLy9nLCIiKSxlPWUucmVwbGFjZSgvXHMvZywiIiksZT1lLnJlcGxhY2UoLzovZywiIiksZT1lLnJlcGxhY2UoL1xAL2csIlxcdyIpLGU9ZS5yZXBsYWNlKC9cZC9nLCJcXHciKSksZX1yZXR1cm4gbnVsbH19bGV0IER2PSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IoKXt0aGlzLl9ub0F1dG9jb21wbGV0ZT0hMSx0aGlzLl9wbGFjZWhvbGRlcj0iIix0aGlzLnBhc3NlZFdyaXRlVmFsdWU9ITEsdGhpcy5hdXRvRm9jdXM9ITEsdGhpcy5kaXNhYmxlZD0hMSx0aGlzLnJlYWRvbmx5PSExLHRoaXMucmVxdWlyZWQ9ITEsdGhpcy5jbGVhbj0hMSx0aGlzLmVycm9yUGF0dGVybj0iIix0aGlzLm1hc2s9IiIsdGhpcy5tYXNrRm9ybWF0TW9kZWw9ITEsdGhpcy5ibHVyPW5ldyBDYSx0aGlzLmVudGVyPW5ldyBDYSx0aGlzLmNoYW5nZT1uZXcgQ2EsdGhpcy5jaGFuZ2VNb2RlbD1uZXcgQ2EsdGhpcy5vbkNoYW5nZVByb3BhZ2F0ZT1udWxsLHRoaXMub25Ub3VjaGVkPW51bGx9c2V0IG5vQXV0b2NvbXBsZXRlKHQpe3RoaXMuX25vQXV0b2NvbXBsZXRlPWF5KHQpfWdldCBub0F1dG9jb21wbGV0ZSgpe3JldHVybiB0aGlzLl9ub0F1dG9jb21wbGV0ZX1zZXQgcGxhY2Vob2xkZXIodCl7dGhpcy5fcGxhY2Vob2xkZXI9dHx8IiJ9Z2V0IHBsYWNlaG9sZGVyKCl7cmV0dXJuIHRoaXMuX3BsYWNlaG9sZGVyfXNldCBzZXREaXNhYmxlZCh0KXt0aGlzLmRpc2FibGVkPSIiPT09dHx8YXkodCksdGhpcy52YWxpZGF0ZU1vZGVsKCl9c2V0IHNldFJlYWRvbmx5KHQpe3RoaXMucmVhZG9ubHk9IiI9PT10fHxheSh0KX1zZXQgc2V0UmVxdWlyZWQodCl7dGhpcy5yZXF1aXJlZD0iIj09PXR8fGF5KHQpLHRoaXMudmFsaWRhdGVNb2RlbCgpfXNldCBzZXRDbGVhbih0KXt0aGlzLmNsZWFuPSIiPT09dHx8YXkodCl9c2V0IHNldFBhdHRlcm4odCl7dGhpcy5wYXR0ZXJuPXQsdGhpcy52YWxpZGF0ZU1vZGVsKCl9c2V0IG1heGxlbmd0aCh0KXtpc05hTihwYXJzZUludCh0LDEwKSk/dHx8KHRoaXMuX21heGxlbmd0aD12b2lkIDAsdGhpcy52YWxpZGF0ZU1vZGVsKCkpOih0aGlzLl9tYXhsZW5ndGg9cGFyc2VJbnQodCwxMCksdGhpcy52YWxpZGF0ZU1vZGVsKCkpfWdldCBtYXhsZW5ndGgoKXtyZXR1cm4gdGhpcy5fbWF4bGVuZ3RofXNldCBtaW5sZW5ndGgodCl7aXNOYU4ocGFyc2VJbnQodCwxMCkpP3R8fCh0aGlzLl9taW5sZW5ndGg9dm9pZCAwLHRoaXMudmFsaWRhdGVNb2RlbCgpKToodGhpcy5fbWlubGVuZ3RoPXBhcnNlSW50KHQsMTApLHRoaXMudmFsaWRhdGVNb2RlbCgpKX1nZXQgbWlubGVuZ3RoKCl7cmV0dXJuIHRoaXMuX21pbmxlbmd0aH1zZXQgc2V0TWFzayh0KXt0aGlzLm1hc2s9dCx0aGlzLm9iak1hc2s9bmV3IEN2KHRoaXMubWFzayx0aGlzLm1hc2tGb3JtYXRNb2RlbCksdGhpcy52YWxpZGF0ZU1vZGVsKCl9c2V0IHNldE1hc2tGb3JtYXRNb2RlbCh0KXt0aGlzLm1hc2tGb3JtYXRNb2RlbD0iIj09PXR8fGF5KHQpLHRoaXMub2JqTWFzayBpbnN0YW5jZW9mIEN2JiYodGhpcy5vYmpNYXNrLmZvcm1hdE1vZGVsPXRoaXMubWFza0Zvcm1hdE1vZGVsLHRoaXMudmFsaWRhdGVNb2RlbCgpKX1jYWxsT25DaGFuZ2UodCl7dGhpcy51cGRhdGVNb2RlbCh0KSx0aGlzLmNvbnRyb2xDaGFuZ2VNb2RlbEVtaXR0ZXIodCl9Y2FsbFVwZGF0ZU1vZGVsV2l0aFRpbWVvdXQodCl7c2V0VGltZW91dCgoKT0+dGhpcy51cGRhdGVNb2RlbCh0KSl9Y29udHJvbENoYW5nZU1vZGVsRW1pdHRlcih0KXt0aGlzLm1vZGVsTGFzdFVwZGF0ZSE9PXQmJih0aGlzLmNoYW5nZU1vZGVsLmVtaXQodCksdGhpcy5tb2RlbExhc3RVcGRhdGU9dCl9cmVnaXN0ZXJPbkNoYW5nZSh0KXt0aGlzLm9uQ2hhbmdlUHJvcGFnYXRlPXR9cmVnaXN0ZXJPblRvdWNoZWQodCl7dGhpcy5vblRvdWNoZWQ9dH1yZWdpc3Rlck9uVmFsaWRhdG9yQ2hhbmdlKHQpe3RoaXMudmFsaWRhdG9yQ2hhbmdlPXR9dXBkYXRlTW9kZWwodCl7dGhpcy5vbkNoYW5nZVByb3BhZ2F0ZSYmdGhpcy5vbkNoYW5nZVByb3BhZ2F0ZSh0KX12YWxpZGF0ZSh0KXtyZXR1cm4gZT10aGlzLnJlcXVpcmVkLG49dGhpcy5kaXNhYmxlZCxyPXRoaXMuZ2V0U2NyZWVuVmFsdWUoKSwhZXx8bnx8InN0cmluZyI9PXR5cGVvZiByJiZyfHwib2JqZWN0Ij09dHlwZW9mIHImJnImJnIubGVuZ3RofHwibnVtYmVyIj09dHlwZW9mIHImJihyfHwwPT09cil8fCJib29sZWFuIj09dHlwZW9mIHImJnI/ZnVuY3Rpb24odCxlKXtjb25zdCBuPXR8fDA9PT10LHI9KGV8fDA9PT1lKSYmZS50b1N0cmluZygpO3JldHVybiBuJiZyJiZyLmxlbmd0aD5OdW1iZXIodCl9KHRoaXMubWF4bGVuZ3RoLHRoaXMuZ2V0U2NyZWVuVmFsdWUoKSk/e21heGxlbmd0aDp7dmFsaWQ6ITF9fTpmdW5jdGlvbih0LGUpe2NvbnN0IG49dHx8MD09PXQscj0oZXx8MD09PWUpJiZlLnRvU3RyaW5nKCk7cmV0dXJuIG4mJnImJnIubGVuZ3RoPE51bWJlcih0KX0odGhpcy5taW5sZW5ndGgsdGhpcy5nZXRTY3JlZW5WYWx1ZSgpKT97bWlubGVuZ3RoOnt2YWxpZDohMX19OmZ1bmN0aW9uKHQsZSl7bGV0IG47dHJ5e249bmV3IFJlZ0V4cCh0KX1jYXRjaChyKXtyZXR1cm4hMH1yZXR1cm4gdCYmZSYmIW4udGVzdChlKX0odGhpcy5wYXR0ZXJuLHQudmFsdWUpPyh0aGlzLnZhbGlkYXRlUGF0dGVybk9uV3JpdGVWYWx1ZSh0LnZhbHVlKSx7cGF0dGVybjp7dmFsaWQ6ITF9fSk6dGhpcy5leHRyYVZhbGlkYXRpb24odCk6e3JlcXVpcmVkOnt2YWxpZDohMX19O3ZhciBlLG4scn13cml0ZVZhbHVlKHQpe3RoaXMud3JpdGVWYWx1ZU1vZGVsKHQpfXZhbGlkYXRlTW9kZWwoKXt0aGlzLnZhbGlkYXRvckNoYW5nZSYmdGhpcy52YWxpZGF0b3JDaGFuZ2UoKX12YWxpZGF0ZVBhdHRlcm5PbldyaXRlVmFsdWUodCl7dCYmdGhpcy5wYXNzZWRXcml0ZVZhbHVlJiYoc2V0VGltZW91dCgoKT0+e3RoaXMudXBkYXRlTW9kZWwodCl9KSx0aGlzLnBhc3NlZFdyaXRlVmFsdWU9ITEpfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0sdC5cdTAyNzVkaXI9dmUoe3R5cGU6dCxpbnB1dHM6e2F1dG9Gb2N1czpbInAtYXV0by1mb2N1cyIsImF1dG9Gb2N1cyJdLGVycm9yUGF0dGVybjpbInAtZXJyb3ItcGF0dGVybiIsImVycm9yUGF0dGVybiJdLG5vQXV0b2NvbXBsZXRlOlsicC1uby1hdXRvY29tcGxldGUiLCJub0F1dG9jb21wbGV0ZSJdLHBsYWNlaG9sZGVyOlsicC1wbGFjZWhvbGRlciIsInBsYWNlaG9sZGVyIl0sc2V0RGlzYWJsZWQ6WyJwLWRpc2FibGVkIiwic2V0RGlzYWJsZWQiXSxzZXRSZWFkb25seTpbInAtcmVhZG9ubHkiLCJzZXRSZWFkb25seSJdLHNldFJlcXVpcmVkOlsicC1yZXF1aXJlZCIsInNldFJlcXVpcmVkIl0sc2V0Q2xlYW46WyJwLWNsZWFuIiwic2V0Q2xlYW4iXSxzZXRQYXR0ZXJuOlsicC1wYXR0ZXJuIiwic2V0UGF0dGVybiJdLG1heGxlbmd0aDpbInAtbWF4bGVuZ3RoIiwibWF4bGVuZ3RoIl0sbWlubGVuZ3RoOlsicC1taW5sZW5ndGgiLCJtaW5sZW5ndGgiXSxzZXRNYXNrOlsicC1tYXNrIiwic2V0TWFzayJdLHNldE1hc2tGb3JtYXRNb2RlbDpbInAtbWFzay1mb3JtYXQtbW9kZWwiLCJzZXRNYXNrRm9ybWF0TW9kZWwiXSxpY29uOlsicC1pY29uIiwiaWNvbiJdLGxhYmVsOlsicC1sYWJlbCIsImxhYmVsIl0saGVscDpbInAtaGVscCIsImhlbHAiXSxuYW1lOiJuYW1lIixvcHRpb25hbDpbInAtb3B0aW9uYWwiLCJvcHRpb25hbCJdfSxvdXRwdXRzOntibHVyOiJwLWJsdXIiLGVudGVyOiJwLWVudGVyIixjaGFuZ2U6InAtY2hhbmdlIixjaGFuZ2VNb2RlbDoicC1jaGFuZ2UtbW9kZWwifX0pLHZtKFtDeSgpLGJtKCJkZXNpZ246dHlwZSIsQm9vbGVhbildLHQucHJvdG90eXBlLCJhdXRvRm9jdXMiLHZvaWQgMCksdH0pKCksRXY9KCgpPT57Y2xhc3MgdCBleHRlbmRzIER2e2NvbnN0cnVjdG9yKHQpe3N1cGVyKCksdGhpcy50eXBlPSJ0ZXh0Iix0aGlzLmVsPXR9Z2V0IGF1dG9jb21wbGV0ZSgpe3JldHVybiB0aGlzLm5vQXV0b2NvbXBsZXRlPyJvZmYiOiJvbiJ9bmdBZnRlclZpZXdJbml0KCl7dGhpcy5hZnRlclZpZXdJbml0KCl9YWZ0ZXJWaWV3SW5pdCgpe3RoaXMudmVyaWZ5QXV0b0ZvY3VzKCksInBhc3N3b3JkIiE9PXRoaXMudHlwZSYmdGhpcy5zZXRQYWRkaW5nSW5wdXQoKX1mb2N1cygpe3RoaXMuZGlzYWJsZWR8fHRoaXMuaW5wdXRFbC5uYXRpdmVFbGVtZW50LmZvY3VzKCl9c2V0UGFkZGluZ0lucHV0KCl7c2V0VGltZW91dCgoKT0+e2xldCB0PXRoaXMuZWwubmF0aXZlRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCIucG8tZmllbGQtaWNvbi1jb250YWluZXI6bm90KC5wby1maWVsZC1pY29uLWNvbnRhaW5lci1sZWZ0KSA+IC5wby1pY29uIikubGVuZ3RoO3RoaXMuY2xlYW4mJnQrKyx0JiYodGhpcy5pbnB1dEVsLm5hdGl2ZUVsZW1lbnQuc3R5bGUucGFkZGluZ1JpZ2h0PTM2KnQrInB4Iil9KX12ZXJpZnlBdXRvRm9jdXMoKXt0aGlzLmF1dG9Gb2N1cyYmdGhpcy5mb2N1cygpfW9uS2V5ZG93bih0KXt0aGlzLm1hc2smJiF0aGlzLnJlYWRvbmx5JiYyMjkhPT10LnRhcmdldC5rZXlDb2RlJiYodGhpcy5ldmVudE9uQmx1cih0KSx0aGlzLm9iak1hc2sua2V5ZG93bih0KSl9b25LZXl1cCh0KXt0aGlzLm1hc2smJiF0aGlzLnJlYWRvbmx5JiYoMjI5IT09dC50YXJnZXQua2V5Q29kZSYmKHRoaXMuZXZlbnRPbkJsdXIodCksdGhpcy5vYmpNYXNrLmtleXVwKHQpKSx0aGlzLmNhbGxPbkNoYW5nZSh0aGlzLm9iak1hc2sudmFsdWVUb01vZGVsKSl9ZXZlbnRPbklucHV0KHQpe2xldCBlPSIiO3RoaXMubWFzaz8odGhpcy5vYmpNYXNrLmJsdXIodCksdGhpcy5pbnB1dEVsLm5hdGl2ZUVsZW1lbnQudmFsdWU9dGhpcy5vYmpNYXNrLnZhbHVlVG9JbnB1dCxlPXRoaXMub2JqTWFzay52YWx1ZVRvTW9kZWwpOihlPXRoaXMudmFsaWRNYXhMZW5ndGgodGhpcy5tYXhsZW5ndGgsdC50YXJnZXQudmFsdWUpLHRoaXMuaW5wdXRFbC5uYXRpdmVFbGVtZW50LnZhbHVlPWUpLHRoaXMuY2FsbE9uQ2hhbmdlKGUpfXZhbGlkTWF4TGVuZ3RoKHQsZSl7cmV0dXJuKHR8fDA9PT10KSYmZS5sZW5ndGg+dD9lLnRvU3RyaW5nKCkuc3Vic3RyaW5nKDAsdCk6ZX1ldmVudE9uRm9jdXModCl7dGhpcy52YWx1ZUJlZm9yZUNoYW5nZT10aGlzLmlucHV0RWwubmF0aXZlRWxlbWVudC52YWx1ZSx0aGlzLmVudGVyLmVtaXQoKX1ldmVudE9uQmx1cih0KXt0aGlzLm1hc2smJnRoaXMub2JqTWFzay5ibHVyKHQpLCJibHVyIj09PXQudHlwZSYmKHRoaXMuYmx1ci5lbWl0KCksdGhpcy5jb250cm9sQ2hhbmdlRW1pdHRlcigpKX1jb250cm9sQ2hhbmdlRW1pdHRlcigpe2NvbnN0IHQ9dGhpcy5pbnB1dEVsLm5hdGl2ZUVsZW1lbnQudmFsdWU7dCE9PXRoaXMudmFsdWVCZWZvcmVDaGFuZ2UmJihjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0Q2hhbmdlKSx0aGlzLnRpbWVvdXRDaGFuZ2U9c2V0VGltZW91dCgoKT0+e3RoaXMuY2hhbmdlLmVtaXQodCl9LDIwMCkpfWV2ZW50T25DbGljayh0KXt0aGlzLm1hc2smJnRoaXMub2JqTWFzay5jbGljayh0KX1oYXNJbnZhbGlkQ2xhc3MoKXtyZXR1cm4gdGhpcy5lbC5uYXRpdmVFbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygibmctaW52YWxpZCIpJiZ0aGlzLmVsLm5hdGl2ZUVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCJuZy1kaXJ0eSIpJiYiIiE9PXRoaXMuaW5wdXRFbC5uYXRpdmVFbGVtZW50LnZhbHVlfWdldEVycm9yUGF0dGVybigpe3JldHVybiIiIT09dGhpcy5lcnJvclBhdHRlcm4mJnRoaXMuaGFzSW52YWxpZENsYXNzKCk/dGhpcy5lcnJvclBhdHRlcm46IiJ9dmFsaWRhdGVDbGFzc2VzRm9yUGF0dGVybigpe2NvbnN0IHQ9dGhpcy5nZXRTY3JlZW5WYWx1ZSgpLGU9dGhpcy5lbC5uYXRpdmVFbGVtZW50O3QmJiF0aGlzLnZlcmlmeVBhdHRlcm4odGhpcy5wYXR0ZXJuLHQpPyhlLmNsYXNzTGlzdC5hZGQoIm5nLWludmFsaWQiKSxlLmNsYXNzTGlzdC5hZGQoIm5nLWRpcnR5IikpOmUuY2xhc3NMaXN0LnJlbW92ZSgibmctaW52YWxpZCIpfXZlcmlmeVBhdHRlcm4odCxlKXtyZXR1cm4gbmV3IFJlZ0V4cCh0KS50ZXN0KGUpfWNsZWFyKHQpe3RoaXMuY2FsbE9uQ2hhbmdlKHQpLHRoaXMuY29udHJvbENoYW5nZUVtaXR0ZXIoKX13cml0ZVZhbHVlTW9kZWwodCl7dGhpcy5wYXNzZWRXcml0ZVZhbHVlPSEwLHRoaXMuaW5wdXRFbCYmKHQ/dGhpcy5tYXNrPyh0aGlzLmlucHV0RWwubmF0aXZlRWxlbWVudC52YWx1ZT10aGlzLm9iak1hc2suY29udHJvbEZvcm1hdHRpbmcoU3RyaW5nKHQpKSx0aGlzLm9iak1hc2suZm9ybWF0TW9kZWwmJnRoaXMuY2FsbFVwZGF0ZU1vZGVsV2l0aFRpbWVvdXQodGhpcy5vYmpNYXNrLnZhbHVlVG9Nb2RlbCkpOnRoaXMuaW5wdXRFbC5uYXRpdmVFbGVtZW50LnZhbHVlPXQ6dGhpcy5pbnB1dEVsLm5hdGl2ZUVsZW1lbnQudmFsdWU9IiIpLHQmJnRoaXMuY2hhbmdlTW9kZWwuZW1pdCh0KX1nZXRTY3JlZW5WYWx1ZSgpe2NvbnN0IHQ9dGhpcy5pbnB1dEVsJiZ0aGlzLmlucHV0RWwubmF0aXZlRWxlbWVudC52YWx1ZXx8dm9pZCAwO2lmKCJudW1iZXIiPT09dGhpcy50eXBlKXtjb25zdCBlPXBhcnNlRmxvYXQodCk7cmV0dXJuIGV8fDA9PT1lP2U6bnVsbH1yZXR1cm4gdH19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCkoUmkoRm8pKX0sdC5cdTAyNzVkaXI9dmUoe3R5cGU6dCx2aWV3UXVlcnk6ZnVuY3Rpb24odCxlKXt2YXIgbjsxJnQmJlJhKFVtLCEwLEZvKSwyJnQmJklhKG49TmEoKSkmJihlLmlucHV0RWw9bi5maXJzdCl9LGhvc3RCaW5kaW5nczpmdW5jdGlvbih0LGUpezEmdCYmJGkoImtleWRvd24iLChmdW5jdGlvbih0KXtyZXR1cm4gZS5vbktleWRvd24odCl9KSkoImtleXVwIiwoZnVuY3Rpb24odCl7cmV0dXJuIGUub25LZXl1cCh0KX0pKX0sZmVhdHVyZXM6W19pXX0pLHR9KSgpO2NsYXNzIEF2e2NvbnN0cnVjdG9yKHQpe3RoaXMuaHR0cD10fWV4ZWN1dGUodCxlKXtyZXR1cm4ic3RyaW5nIj09dHlwZW9mIHQ/dGhpcy5wb3N0KHQsZSk6cWModChlKSl9cG9zdCh0LGUpe3JldHVybiB0aGlzLmh0dHAucG9zdCh0LGUpfXNldEZvcm1EZWZhdWx0SWZFbXB0eSh0KXtyZXR1cm4gdHx8e3ZhbHVlOnt9LGZpZWxkczpbXSxmb2N1czp2b2lkIDB9fX1sZXQgU3Y9KCgpPT57Y2xhc3MgdCBleHRlbmRzIEF2e2NvbnN0cnVjdG9yKHQpe3N1cGVyKHQpfWNyZWF0ZUFuZFVwZGF0ZUZpZWxkc0Zvcm0odD1bXSxlPVtdKXtyZXR1cm5bLi4udF0ucmVkdWNlKCh0LG4pPT57Y29uc3Qgcj10LmZpbmRJbmRleCh0PT50LnByb3BlcnR5PT09bi5wcm9wZXJ0eSk7cmV0dXJuIHI+PTA/dFtyXT1PYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sZVtyXSksbik6dC5wdXNoKG4pLHR9LFsuLi5lXSl9ZXhlY3V0ZUxvYWQodCxlKXtyZXR1cm4gdGhpcy5leGVjdXRlKHQsZSkucGlwZShTKHQ9PnRoaXMuc2V0Rm9ybURlZmF1bHRJZkVtcHR5KHQpKSl9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKEd0KG5tKSl9LHQuXHUwMjc1cHJvdj11dCh7dG9rZW46dCxmYWN0b3J5OnQuXHUwMjc1ZmFjfSksdH0pKCkseHY9KCgpPT57Y2xhc3MgdCBleHRlbmRzIEF2e2NvbnN0cnVjdG9yKHQpe3N1cGVyKHQpfXNlbmRGaWVsZENoYW5nZSh0LGUpe3JldHVybiB0aGlzLmV4ZWN1dGUodC52YWxpZGF0ZSx7cHJvcGVydHk6dC5wcm9wZXJ0eSx2YWx1ZTplfSkucGlwZShTKHQ9PnRoaXMuc2V0RmllbGREZWZhdWx0SWZFbXB0eSh0KSkpfXNlbmRGb3JtQ2hhbmdlKHQsZSxuKXtyZXR1cm4gdGhpcy5leGVjdXRlKHQse3Byb3BlcnR5OmUucHJvcGVydHksdmFsdWU6bn0pLnBpcGUoUyh0PT50aGlzLnNldEZvcm1EZWZhdWx0SWZFbXB0eSh0KSkpfXVwZGF0ZUZpZWxkc0Zvcm0odD1bXSxlPVtdKXtyZXR1cm5bLi4udF0ucmVkdWNlKCh0LG4pPT57Y29uc3Qgcj10LmZpbmRJbmRleCh0PT50LnByb3BlcnR5PT09bi5wcm9wZXJ0eSk7cmV0dXJuIHI+PTAmJih0W3JdPU9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSxlW3JdKSxuKSksdH0sWy4uLmVdKX1zZXRGaWVsZERlZmF1bHRJZkVtcHR5KHQpe3JldHVybiB0fHx7ZmllbGQ6e319fX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KShHdChubSkpfSx0Llx1MDI3NXByb3Y9dXQoe3Rva2VuOnQsZmFjdG9yeTp0Llx1MDI3NWZhY30pLHR9KSgpLGt2PSgoKT0+e2NsYXNzIHQgZXh0ZW5kcyBjbGFzc3tjb25zdHJ1Y3Rvcigpe3RoaXMuc3RhY2tUb3A9W10sdGhpcy5zdGFja0JvdHRvbT1bXSx0aGlzLmRlZmF1bHREdXJhdGlvbj0xZTR9c3VjY2Vzcyh0KXt0aGlzLmNyZWF0ZVRvYXN0ZXIodGhpcy5idWlsZFRvYXN0ZXIodCxodi5TdWNjZXNzKSl9d2FybmluZyh0KXt0aGlzLmNyZWF0ZVRvYXN0ZXIodGhpcy5idWlsZFRvYXN0ZXIodCxodi5XYXJuaW5nKSl9ZXJyb3IodCl7dGhpcy5jcmVhdGVUb2FzdGVyKHRoaXMuYnVpbGRUb2FzdGVyKHQsaHYuRXJyb3IpKX1pbmZvcm1hdGlvbih0KXt0aGlzLmNyZWF0ZVRvYXN0ZXIodGhpcy5idWlsZFRvYXN0ZXIodCxodi5JbmZvcm1hdGlvbikpfXNldERlZmF1bHREdXJhdGlvbih0KXt0aGlzLmRlZmF1bHREdXJhdGlvbj10fWJ1aWxkVG9hc3Rlcih0LGUpe2xldCBuLHI9MDt2b2lkIDA9PT10Lm9yaWVudGF0aW9ufHx0Lm9yaWVudGF0aW9uPT09Y3YuQm90dG9tPyhyPXRoaXMuc3RhY2tCb3R0b20ubGVuZ3RoLG49Y3YuQm90dG9tKToocj10aGlzLnN0YWNrVG9wLmxlbmd0aCxuPWN2LlRvcCk7Y29uc3Qgcz17Y29tcG9uZW50UmVmOnZvaWQgMCxtZXNzYWdlOnQubWVzc2FnZXx8dCx0eXBlOmUsb3JpZW50YXRpb246bixhY3Rpb246dC5hY3Rpb24sYWN0aW9uTGFiZWw6dC5hY3Rpb25MYWJlbCxwb3NpdGlvbjpyLGR1cmF0aW9uOnQuZHVyYXRpb258fHRoaXMuZGVmYXVsdER1cmF0aW9ufTtyZXR1cm4gdC5hY3Rpb24mJihzLmFjdGlvbj1lPT57dC5hY3Rpb24oKSx0aGlzLmRlc3Ryb3lUb2FzdGVyKGUuY29tcG9uZW50UmVmKX0pLHN9fXtjb25zdHJ1Y3Rvcih0KXtzdXBlcigpLHRoaXMucG9Db21wb25lbnRJbmplY3Rvcj10fWNyZWF0ZVRvYXN0ZXIodCl7Y29uc3QgZT10aGlzLnBvQ29tcG9uZW50SW5qZWN0b3IuY3JlYXRlQ29tcG9uZW50SW5BcHBsaWNhdGlvbihwdik7dC5jb21wb25lbnRSZWY9ZSxlLmNoYW5nZURldGVjdG9yUmVmLmRldGVjdENoYW5nZXMoKSxlLmluc3RhbmNlLmNvbmZpZ1RvYXN0ZXIodCksdC5vcmllbnRhdGlvbj09PWN2LlRvcD90aGlzLnN0YWNrVG9wLnB1c2goZSk6dGhpcy5zdGFja0JvdHRvbS5wdXNoKGUpLHRoaXMub2JzZXJ2YWJsZU9uQ2xvc2UoZSksdm9pZCAwPT09dC5hY3Rpb24mJnNldFRpbWVvdXQoKCk9Pnt0aGlzLmRlc3Ryb3lUb2FzdGVyKGUpfSx0LmR1cmF0aW9uKX1kZXN0cm95VG9hc3Rlcih0KXtsZXQgZTtlPXQuaW5zdGFuY2Uub3JpZW50YXRpb249PT1jdi5Ub3A/dGhpcy5zdGFja1RvcDp0aGlzLnN0YWNrQm90dG9tO2NvbnN0IG49ZS5pbmRleE9mKHQpO2Uuc3BsaWNlKG4sMSksdGhpcy5wb0NvbXBvbmVudEluamVjdG9yLmRlc3Ryb3lDb21wb25lbnRJbkFwcGxpY2F0aW9uKHQpO2ZvcihsZXQgcj0wO3I8ZS5sZW5ndGg7cisrKWVbcl0uaW5zdGFuY2UuY2hhbmdlUG9zaXRpb24ocil9b2JzZXJ2YWJsZU9uQ2xvc2UodCl7dC5pbnN0YW5jZS5vYnNlcnZhYmxlT25DbG9zZS5zdWJzY3JpYmUoKCk9Pnt0aGlzLmRlc3Ryb3lUb2FzdGVyKHQpfSl9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKEd0KGV2KSl9LHQuXHUwMjc1cHJvdj11dCh7ZmFjdG9yeTpmdW5jdGlvbigpe3JldHVybiBuZXcgdChHdChldikpfSx0b2tlbjp0LHByb3ZpZGVkSW46InJvb3QifSksdH0pKCksVHY9KCgpPT57Y2xhc3MgdCBleHRlbmRzIEV2e2NvbnN0cnVjdG9yKHQpe3N1cGVyKHQpLHRoaXMudHlwZT0ibnVtYmVyIix0aGlzLmludmFsaWRJbnB1dFZhbHVlT25CbHVyPSExfWV2ZW50T25JbnB1dCh0KXtpZighdGhpcy5tYXNrKXtsZXQgZT10LnRhcmdldC52YWx1ZTtjb25zdCBuPXRoaXMudmFsaWRNYXhMZW5ndGgodGhpcy5tYXhsZW5ndGgsZSk7dGhpcy5pbnZhbGlkSW5wdXRWYWx1ZU9uQmx1cj0hMSxlIT09biYmKGU9bix0aGlzLmlucHV0RWwubmF0aXZlRWxlbWVudC52YWx1ZT1lKSx0aGlzLmNhbGxPbkNoYW5nZSh0aGlzLmZvcm1hdE51bWJlcihlKSl9fW9uQmx1cih0KXtjb25zdCBlPXQudGFyZ2V0O3RoaXMuaW52YWxpZElucHV0VmFsdWVPbkJsdXI9IiI9PT1lLnZhbHVlJiYhZS52YWxpZGl0eS52YWxpZCx0aGlzLmludmFsaWRJbnB1dFZhbHVlT25CbHVyJiZ0aGlzLmNhbGxPbkNoYW5nZSgiVmFsb3IgSW52XHhlMWxpZG8iKSx0aGlzLmV2ZW50T25CbHVyKHQpfW9uS2V5RG93bih0KXt0aGlzLmlzS2V5QWxsb3dlZCh0KXx8KHQuc3RvcFByb3BhZ2F0aW9uKCksdC5wcmV2ZW50RGVmYXVsdCgpKX12YWxpZE1heExlbmd0aCh0LGUpe2lmKHQmJmUubGVuZ3RoPnQpe2NvbnN0IG49ZS50b1N0cmluZygpLnN1YnN0cmluZygwLHQpO3JldHVybiBuJiZ0aGlzLmlzRW5kV2l0aERvdChuKT9uLnRvU3RyaW5nKCkuc3Vic3RyaW5nKDAsdC0xKTpufXJldHVybiBlfXdyaXRlVmFsdWVNb2RlbCh0KXt0aGlzLmlucHV0RWwmJih0fHwwPT09dD90aGlzLm1hc2s/KHRoaXMuaW5wdXRFbC5uYXRpdmVFbGVtZW50LnZhbHVlPXRoaXMub2JqTWFzay5jb250cm9sRm9ybWF0dGluZyhTdHJpbmcodCkpLHRoaXMub2JqTWFzay5mb3JtYXRNb2RlbCYmdGhpcy5vbkNoYW5nZVByb3BhZ2F0ZSh0aGlzLm9iak1hc2sudmFsdWVUb01vZGVsKSk6dGhpcy5pbnB1dEVsLm5hdGl2ZUVsZW1lbnQudmFsdWU9dDp0aGlzLmlucHV0RWwubmF0aXZlRWxlbWVudC52YWx1ZT0iIiksdGhpcy5jaGFuZ2VNb2RlbC5lbWl0KHQpfWlzRW5kV2l0aERvdCh0KXtyZXR1cm4gdCYmdC5sYXN0SW5kZXhPZigiLiIpPT09dC5sZW5ndGgtMX1mb3JtYXROdW1iZXIodCl7cmV0dXJuIHQ/TnVtYmVyKHQpOm51bGx9aXNLZXlBbGxvd2VkKHQpe3JldHVybiB0aGlzLmlzU2hvcnRjdXQodCl8fHRoaXMuaXNDb250cm9sS2V5cyh0KXx8IXRoaXMuaXNJbnZhbGlkS2V5KHQua2V5KX1pc0ludmFsaWRLZXkodCl7cmV0dXJuIG5ldyBSZWdFeHAoL1thLXpBLVo6Oz1fXHhiNGBefiInPyFAIyQlXHhhOCYqKCk+PHt9XHhlN1x4YzdcW1xdL1xcfF0rLykudGVzdCh0KX1pc1Nob3J0Y3V0KHQpe2NvbnN0IGU9dC5rZXlDb2RlLG49dC5jdHJsS2V5fHx0Lm1ldGFLZXk7cmV0dXJuIG4mJjY3PT09ZXx8biYmODY9PT1lfHxuJiY2NT09PWV8fG4mJjg4PT09ZX1pc0NvbnRyb2xLZXlzKHQpe3JldHVybi0xIT09WyJCYWNrc3BhY2UiLCJBcnJvd0xlZnQiLCJBcnJvd1JpZ2h0IiwiQXJyb3dVcCIsIkFycm93RG93biIsIkxlZnQiLCJSaWdodCIsIlVwIiwiRG93biIsIlRhYiIsIkRlbGV0ZSJdLmluZGV4T2YodC5rZXkpfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KShSaShGbykpfSx0Llx1MDI3NWRpcj12ZSh7dHlwZTp0LGZlYXR1cmVzOltfaV19KSx0fSkoKSxGdj0oKCk9PntjbGFzcyB0IGV4dGVuZHMgVHZ7Y29uc3RydWN0b3IodCl7c3VwZXIodCksdGhpcy5zdGVwPSIxIn1zZXQgc2V0TWluKHQpe2NvbnN0IGU9cGFyc2VJbnQodCwxMCk7dGhpcy5taW49aXNOYU4oZSk/dm9pZCAwOmUsdGhpcy52YWxpZGF0ZU1vZGVsKCl9c2V0IHNldE1heCh0KXtjb25zdCBlPXBhcnNlSW50KHQsMTApO3RoaXMubWF4PWlzTmFOKGUpP3ZvaWQgMDplLHRoaXMudmFsaWRhdGVNb2RlbCgpfWV4dHJhVmFsaWRhdGlvbih0KXtyZXR1cm4gdGhpcy5lcnJvclBhdHRlcm49IlZhbG9yIEludlx4ZTFsaWRvIiE9PXRoaXMuZXJyb3JQYXR0ZXJuP3RoaXMuZXJyb3JQYXR0ZXJuOiIiLGU9dGhpcy5taW4sKChuPXQudmFsdWUpfHwwPT09bikmJihlfHwwPT09ZSkmJm48ZT97bWluOnt2YWxpZDohMX19OmZ1bmN0aW9uKHQsZSl7cmV0dXJuKGV8fDA9PT1lKSYmKHR8fDA9PT10KSYmZT50fSh0aGlzLm1heCx0LnZhbHVlKT97bWF4Ont2YWxpZDohMX19OnRoaXMuaW52YWxpZElucHV0VmFsdWVPbkJsdXI/KHRoaXMuZXJyb3JQYXR0ZXJuPXRoaXMuZXJyb3JQYXR0ZXJufHwiVmFsb3IgSW52XHhlMWxpZG8iLHtudW1iZXI6e3ZhbGlkOiExfX0pOm51bGw7dmFyIGUsbn1nZXRFcnJvclBhdHRlcm5NZXNzYWdlKCl7cmV0dXJuIiIhPT10aGlzLmVycm9yUGF0dGVybiYmdGhpcy5jb250YWluc0ludmFsaWRDbGFzcygpP3RoaXMuZXJyb3JQYXR0ZXJuOiIifWNvbnRhaW5zSW52YWxpZENsYXNzKCl7cmV0dXJuIHRoaXMuZWwubmF0aXZlRWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoIm5nLWludmFsaWQiKSYmdGhpcy5lbC5uYXRpdmVFbGVtZW50LmNsYXNzTGlzdC5jb250YWlucygibmctZGlydHkiKSYmIiIhPT10aGlzLmlucHV0RWwubmF0aXZlRWxlbWVudC52YWx1ZXx8dGhpcy5pbnZhbGlkSW5wdXRWYWx1ZU9uQmx1cn19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCkoUmkoRm8pKX0sdC5cdTAyNzVjbXA9ZGUoe3R5cGU6dCxzZWxlY3RvcnM6W1sicG8tbnVtYmVyIl1dLGlucHV0czp7c3RlcDpbInAtc3RlcCIsInN0ZXAiXSxzZXRNaW46WyJwLW1pbiIsInNldE1pbiJdLHNldE1heDpbInAtbWF4Iiwic2V0TWF4Il19LGZlYXR1cmVzOltTbyhbe3Byb3ZpZGU6Y2gsdXNlRXhpc3Rpbmc6Q3QoKCk9PnQpLG11bHRpOiEwfSx7cHJvdmlkZTpEaCx1c2VFeGlzdGluZzpDdCgoKT0+dCksbXVsdGk6ITB9XSksX2ldLGRlY2xzOjgsdmFyczoyMSxjb25zdHM6W1szLCJwLWhlbHAiLCJwLWxhYmVsIiwicC1vcHRpb25hbCJdLFsxLCJwby1maWVsZC1jb250YWluZXItY29udGVudCJdLFsiY2xhc3MiLCJwby1maWVsZC1pY29uLWNvbnRhaW5lci1sZWZ0Iiw0LCJuZ0lmIl0sWyJ0eXBlIiwibnVtYmVyIiwxLCJwby1pbnB1dCIsMywiYXV0b2NvbXBsZXRlIiwiZGlzYWJsZWQiLCJwbGFjZWhvbGRlciIsInJlYWRvbmx5IiwicmVxdWlyZWQiLCJ0YWJpbmRleCIsImJsdXIiLCJmb2N1cyIsImlucHV0Iiwia2V5ZG93biJdLFsiaW5wIiwiIl0sWzEsInBvLWZpZWxkLWljb24tY29udGFpbmVyLXJpZ2h0Il0sWzMsInAtZGVmYXVsdC12YWx1ZSIsInAtZWxlbWVudC1yZWYiLCJwLWNoYW5nZS1ldmVudCJdLFszLCJwLWVycm9yLXBhdHRlcm4iXSxbMSwicG8tZmllbGQtaWNvbi1jb250YWluZXItbGVmdCJdXSx0ZW1wbGF0ZTpmdW5jdGlvbih0LGUpezEmdCYmKE5pKDAsInBvLWZpZWxkLWNvbnRhaW5lciIsMCksTmkoMSwiZGl2IiwxKSxJaSgyLEhtLDIsNSwiZGl2IiwyKSxOaSgzLCJpbnB1dCIsMyw0KSwkaSgiYmx1ciIsKGZ1bmN0aW9uKHQpe3JldHVybiBlLm9uQmx1cih0KX0pKSgiZm9jdXMiLChmdW5jdGlvbih0KXtyZXR1cm4gZS5ldmVudE9uRm9jdXModCl9KSkoImlucHV0IiwoZnVuY3Rpb24odCl7cmV0dXJuIGUuZXZlbnRPbklucHV0KHQpfSkpKCJrZXlkb3duIiwoZnVuY3Rpb24odCl7cmV0dXJuIGUub25LZXlEb3duKHQpfSkpLFZpKCksTmkoNSwiZGl2Iiw1KSxOaSg2LCJwby1jbGVhbiIsNiksJGkoInAtY2hhbmdlLWV2ZW50IiwoZnVuY3Rpb24odCl7cmV0dXJuIGUuY2xlYXIodCl9KSksVmkoKSxWaSgpLFZpKCksQmkoNywicG8tZmllbGQtY29udGFpbmVyLWJvdHRvbSIsNyksVmkoKSksMiZ0JiYoTWkoInAtaGVscCIsZS5oZWxwKSgicC1sYWJlbCIsZS5sYWJlbCkoInAtb3B0aW9uYWwiLCFlLnJlcXVpcmVkJiZlLm9wdGlvbmFsKSxqcigyKSxNaSgibmdJZiIsZS5pY29uKSxqcigxKSxybygicG8taW5wdXQtaWNvbi1sZWZ0IixlLmljb24pKCJwby1pbnB1dC1pY29uLXJpZ2h0IixlLmNsZWFuKSxNaSgiYXV0b2NvbXBsZXRlIixlLmF1dG9jb21wbGV0ZSkoImRpc2FibGVkIixlLmRpc2FibGVkKSgicGxhY2Vob2xkZXIiLGUucGxhY2Vob2xkZXIpKCJyZWFkb25seSIsZS5yZWFkb25seSkoInJlcXVpcmVkIixlLnJlcXVpcmVkKSgidGFiaW5kZXgiLGUuZGlzYWJsZWQ/LTE6MCksT2koIm1heCIsZS5tYXgpKCJtaW4iLGUubWluKSgibmFtZSIsZS5uYW1lKSgic3RlcCIsZS5zdGVwKSxqcigzKSxNaSgicC1kZWZhdWx0LXZhbHVlIixudWxsKSgicC1lbGVtZW50LXJlZiIsZS5pbnB1dEVsKSxqcigxKSxNaSgicC1lcnJvci1wYXR0ZXJuIixlLmdldEVycm9yUGF0dGVybk1lc3NhZ2UoKSkpfSxkaXJlY3RpdmVzOlt6eSxXdSxfdiwkeV0sZW5jYXBzdWxhdGlvbjoyfSksdH0pKCksT3Y9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxwcm92aWRlcnM6W10saW1wb3J0czpbW3NjLGNkLHltLEZ5LFN5LFd5LE55LEJ5LFZ5LHF5LGJ5LFF5LFl5LGd2LGJ2LFR5XSxXeV19KSx0fSkoKSxQdj0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVtb2Q9bWUoe3R5cGU6dH0pLHQuXHUwMjc1aW5qPWN0KHtmYWN0b3J5OmZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LHByb3ZpZGVyczpbXSxpbXBvcnRzOltbc2MsT2ddXX0pLHR9KSgpO3ZhciBJdj1mdW5jdGlvbih0KXtyZXR1cm4gdC5Ib3Jpem9udGFsPSJob3Jpem9udGFsIix0LlZlcnRpY2FsPSJ2ZXJ0aWNhbCIsdH0oe30pLFJ2PWZ1bmN0aW9uKHQpe3JldHVybiB0LkRhbmdlcj0iZGFuZ2VyIix0LkluZm89ImluZm8iLHQuU3VjY2Vzcz0ic3VjY2VzcyIsdC5XYXJuaW5nPSJ3YXJuaW5nIix0fSh7fSk7Y29uc3QgTXY9T2JqZWN0LnZhbHVlcyhKeSksanY9SXYuVmVydGljYWw7bGV0IE52PSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IoKXt0aGlzLl9vcmllbnRhdGlvbj1qdix0aGlzLnBvVGFnT3JpZW50YXRpb249SXYsdGhpcy5jbGljaz1uZXcgQ2F9c2V0IGNvbG9yKHQpe3RoaXMuX2NvbG9yPU12LmluY2x1ZGVzKHQpP3Q6dm9pZCAwfWdldCBjb2xvcigpe3JldHVybiB0aGlzLl9jb2xvcn1zZXQgaWNvbih0KXt0aGlzLl9pY29uPXRoaXMudHlwZT9heSh0KTp0fWdldCBpY29uKCl7cmV0dXJuIHRoaXMuX2ljb259c2V0IGludmVyc2UodCl7dGhpcy5faW52ZXJzZT1heSh0KX1nZXQgaW52ZXJzZSgpe3JldHVybiB0aGlzLl9pbnZlcnNlfXNldCBvcmllbnRhdGlvbih0KXt0aGlzLl9vcmllbnRhdGlvbj1PYmplY3QudmFsdWVzKEl2KS5pbmNsdWRlcyh0KT90Omp2fWdldCBvcmllbnRhdGlvbigpe3JldHVybiB0aGlzLl9vcmllbnRhdGlvbn1zZXQgdHlwZSh0KXt0aGlzLl90eXBlPU9iamVjdC52YWx1ZXMoUnYpLmluY2x1ZGVzKHQpP3Q6dm9pZCAwfWdldCB0eXBlKCl7cmV0dXJuIHRoaXMuX3R5cGV9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSx0Llx1MDI3NWRpcj12ZSh7dHlwZTp0LGlucHV0czp7Y29sb3I6WyJwLWNvbG9yIiwiY29sb3IiXSxpY29uOlsicC1pY29uIiwiaWNvbiJdLGludmVyc2U6WyJwLWludmVyc2UiLCJpbnZlcnNlIl0sb3JpZW50YXRpb246WyJwLW9yaWVudGF0aW9uIiwib3JpZW50YXRpb24iXSx0eXBlOlsicC10eXBlIiwidHlwZSJdLGxhYmVsOlsicC1sYWJlbCIsImxhYmVsIl0sdmFsdWU6WyJwLXZhbHVlIiwidmFsdWUiXX0sb3V0cHV0czp7Y2xpY2s6InAtY2xpY2sifX0pLHR9KSgpO3ZhciBWdj1mdW5jdGlvbih0KXtyZXR1cm4gdC5EYW5nZXI9InBvLWljb24tY2xvc2UiLHQuSW5mbz0icG8taWNvbi1pbmZvIix0LlN1Y2Nlc3M9InBvLWljb24tb2siLHQuV2FybmluZz0icG8taWNvbi13YXJuaW5nIix0fSh7fSk7Y29uc3QgQnY9InBvLXRhZy0iK1J2LkluZm87bGV0IEx2PSgoKT0+e2NsYXNzIHQgZXh0ZW5kcyBOdntuZ09uSW5pdCgpe3RoaXMuaXNDbGlja2FibGU9dGhpcy5jbGljay5vYnNlcnZlcnMubGVuZ3RoPjB9Z2V0IGljb25Gcm9tVHlwZSgpe3N3aXRjaCh0aGlzLnR5cGUpe2Nhc2UgUnYuRGFuZ2VyOnJldHVybiBWdi5EYW5nZXI7Y2FzZSBSdi5JbmZvOnJldHVybiBWdi5JbmZvO2Nhc2UgUnYuU3VjY2VzczpyZXR1cm4gVnYuU3VjY2VzcztjYXNlIFJ2Lldhcm5pbmc6cmV0dXJuIFZ2Lldhcm5pbmd9fWdldCBpY29uVHlwZVN0cmluZygpe3JldHVybiJzdHJpbmciPT10eXBlb2YgdGhpcy5pY29ufWdldCB0YWdDb2xvcigpe3JldHVybiB0aGlzLnR5cGU/dGhpcy5pbnZlcnNlP2Bwby10YWctJHt0aGlzLnR5cGV9LWludmVyc2VgOiJwby10YWctIit0aGlzLnR5cGU6dGhpcy5jb2xvcj90aGlzLmludmVyc2U/InBvLXRleHQtIit0aGlzLmNvbG9yOiJwby0iK3RoaXMuY29sb3I6dGhpcy5pbnZlcnNlP0J2KyItaW52ZXJzZSI6QnZ9Z2V0IHRhZ09yaWVudGF0aW9uKCl7cmV0dXJuIHRoaXMub3JpZW50YXRpb249PT10aGlzLnBvVGFnT3JpZW50YXRpb24uSG9yaXpvbnRhbH1vbkNsaWNrKCl7dGhpcy5jbGljay5lbWl0KHt2YWx1ZTp0aGlzLnZhbHVlLHR5cGU6dGhpcy50eXBlfSl9b25LZXlQcmVzc2VkKHQpe3QucHJldmVudERlZmF1bHQoKSx0LnN0b3BQcm9wYWdhdGlvbigpLHRoaXMub25DbGljaygpfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5iKGV8fHQpfSx0Llx1MDI3NWNtcD1kZSh7dHlwZTp0LHNlbGVjdG9yczpbWyJwby10YWciXV0sZmVhdHVyZXM6W19pXSxkZWNsczo3LHZhcnM6MTAsY29uc3RzOltbMSwicG8tdGFnLWNvbnRhaW5lciJdLFsiY2xhc3MiLCJwby10YWctdGl0bGUgcG8tdGV4dC1ub3dyYXAiLDQsIm5nSWYiXSxbMSwicG8tdGFnLXN1Yi1jb250YWluZXIiXSxbInRhYmluZGV4IiwiMCIsMSwicG8tdGFnIiwzLCJuZ0NsYXNzIiwiY2xpY2siLCJrZXlkb3duLmVudGVyIiwia2V5ZG93bi5zcGFjZSIsImtleXVwLnNwYWNlIl0sWyJjbGFzcyIsInBvLWljb24iLDMsIm5nQ2xhc3MiLDQsIm5nSWYiXSxbMSwicG8tdGFnLXZhbHVlIl0sWzEsInBvLXRhZy10aXRsZSIsInBvLXRleHQtbm93cmFwIl0sWzEsInBvLXRhZy1sYWJlbCJdLFsxLCJwby1pY29uIiwzLCJuZ0NsYXNzIl1dLHRlbXBsYXRlOmZ1bmN0aW9uKHQsZSl7MSZ0JiYoTmkoMCwiZGl2IiwwKSxJaSgxLCRtLDMsMSwiZGl2IiwxKSxOaSgyLCJkaXYiLDIpLE5pKDMsImRpdiIsMyksJGkoImNsaWNrIiwoZnVuY3Rpb24oKXtyZXR1cm4gZS5vbkNsaWNrKCl9KSkoImtleWRvd24uZW50ZXIiLChmdW5jdGlvbih0KXtyZXR1cm4gZS5vbktleVByZXNzZWQodCl9KSkoImtleWRvd24uc3BhY2UiLChmdW5jdGlvbih0KXtyZXR1cm4gdC5wcmV2ZW50RGVmYXVsdCgpfSkpKCJrZXl1cC5zcGFjZSIsKGZ1bmN0aW9uKHQpe3JldHVybiBlLm9uS2V5UHJlc3NlZCh0KX0pKSxJaSg0LHptLDEsMSwic3BhbiIsNCksTmkoNSwic3BhbiIsNSksZ28oNiksVmkoKSxWaSgpLFZpKCksVmkoKSksMiZ0JiYocm8oInBvLXRhZy1jb250YWluZXItaG9yaXpvbnRhbCIsZS50YWdPcmllbnRhdGlvbiksanIoMSksTWkoIm5nSWYiLGUubGFiZWwpLGpyKDIpLHJvKCJwby1jbGlja2FibGUiLGUuaXNDbGlja2FibGUpKCJwby10YWctaW52ZXJzZSIsZS5pbnZlcnNlKSxNaSgibmdDbGFzcyIsZS50YWdDb2xvciksanIoMSksTWkoIm5nSWYiLGUuaWNvbiksanIoMiksbW8oZS52YWx1ZSkpfSxkaXJlY3RpdmVzOltXdSxIdV0sZW5jYXBzdWxhdGlvbjoyLGNoYW5nZURldGVjdGlvbjowfSksdH0pKCksVXY9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxwcm92aWRlcnM6W10saW1wb3J0czpbW3NjXV19KSx0fSkoKSxIdj0oKCk9PntjbGFzcyB0e2NvbnN0cnVjdG9yKHQpe3RoaXMuaHR0cD10fW9uTG9hZCh0LGUpe3JldHVybiB0aGlzLmh0dHAucG9zdCh0LGUpLnRvUHJvbWlzZSgpfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KShHdChubSkpfSx0Llx1MDI3NXByb3Y9dXQoe3Rva2VuOnQsZmFjdG9yeTp0Llx1MDI3NWZhY30pLHR9KSgpLCR2PSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0scHJvdmlkZXJzOltlYyxYdSx0Yyx5dixKdSxTdix4dixIdl0saW1wb3J0czpbW3NjLGNkLEx5LFB2LE92LFV2LHZ2XV19KSx0fSkoKSx6dj0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVtb2Q9bWUoe3R5cGU6dH0pLHQuXHUwMjc1aW5qPWN0KHtmYWN0b3J5OmZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LGltcG9ydHM6W1tzYyxjZCxPdl1dfSksdH0pKCkscXY9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxwcm92aWRlcnM6W10saW1wb3J0czpbW3NjLE9nLFN5LFV5XV19KSx0fSkoKSxXdj0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVtb2Q9bWUoe3R5cGU6dH0pLHQuXHUwMjc1aW5qPWN0KHtmYWN0b3J5OmZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LGltcG9ydHM6W1tzY11dfSksdH0pKCksWnY9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxpbXBvcnRzOltbc2MsT2csV3YsT3YsYnldXX0pLHR9KSgpLEd2PSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IoKXt0aGlzLnN1YmplY3RDaGlsZD1uZXcgRCx0aGlzLnN1YmplY3RQYXJlbnQ9bmV3IER9cmVjZWl2ZUZyb21DaGlsZE1lbnVDbGlja2VkKCl7cmV0dXJuIHRoaXMuc3ViamVjdENoaWxkLmFzT2JzZXJ2YWJsZSgpfXJlY2VpdmVGcm9tUGFyZW50TWVudUNsaWNrZWQoKXtyZXR1cm4gdGhpcy5zdWJqZWN0UGFyZW50LmFzT2JzZXJ2YWJsZSgpfXNlbmRUb1BhcmVudE1lbnVDbGlja2VkKHQpe3RoaXMuc3ViamVjdENoaWxkLm5leHQodCl9c2VuZFRvQ2hpbGRNZW51Q2xpY2tlZCh0KXt0aGlzLnN1YmplY3RQYXJlbnQubmV4dCh0KX19cmV0dXJuIHQuXHUwMjc1ZmFjPWZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LHQuXHUwMjc1cHJvdj11dCh7dG9rZW46dCxmYWN0b3J5OnQuXHUwMjc1ZmFjfSksdH0pKCksS3Y9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxwcm92aWRlcnM6W0d2XSxpbXBvcnRzOltbc2MsT2csT3YsVHldXX0pLHR9KSgpLFF2PSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0saW1wb3J0czpbW3NjLFV5LFR5XV19KSx0fSkoKSxZdj0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVtb2Q9bWUoe3R5cGU6dH0pLHQuXHUwMjc1aW5qPWN0KHtmYWN0b3J5OmZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LGltcG9ydHM6W1tzYyxPZ11dfSksdH0pKCksSnY9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxpbXBvcnRzOltbc2MsT2ddXX0pLHR9KSgpLFh2PSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0saW1wb3J0czpbW3NjLFF2LFl2LEp2LFp2XV19KSx0fSkoKTtjb25zdCB0Yj11cih5eSksZWI9dXIoQXkpLG5iPXVyKEx2KTtsZXQgcmI9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxpbXBvcnRzOltbc2MsY2QsT2csaHksU3ksQnksSHksT3YsdnksUXldXX0pLHR9KSgpLHNiPSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0scHJvdmlkZXJzOltdLGltcG9ydHM6W1tzYyxPZyxOeV1dfSksdH0pKCksaWI9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxpbXBvcnRzOltbc2NdXX0pLHR9KSgpLG9iPSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0saW1wb3J0czpbW3NjLG12XV19KSx0fSkoKSxhYj0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVtb2Q9bWUoe3R5cGU6dH0pLHQuXHUwMjc1aW5qPWN0KHtmYWN0b3J5OmZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LHByb3ZpZGVyczpbXSxpbXBvcnRzOltbc2MsWG0sVXldXX0pLHR9KSgpLGxiPSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0saW1wb3J0czpbW3NjLGNkLE55LE92XV19KSx0fSkoKSx1Yj0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVtb2Q9bWUoe3R5cGU6dH0pLHQuXHUwMjc1aW5qPWN0KHtmYWN0b3J5OmZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LGltcG9ydHM6W1tzYyxOeV1dfSksdH0pKCksY2I9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxwcm92aWRlcnM6W10saW1wb3J0czpbW0ptLFhtLGh5LFN5LEZ5LE15LGp5LE55LEJ5LFZ5LEx5LEh5LCR2LE92LHp2LFB2LHF2LGJ5LFp2LEt2LFF5LFh2LHJiLG12LFV5LFl5LHNiLGliLGJ2LG9iLFV2LGFiLGxiLHViXSxKbSxYbSxoeSxTeSxGeSxNeSxqeSxOeSxCeSxWeSxMeSxIeSwkdixPdix6dixQdixxdixieSxadixLdixReSxYdixyYixtdixVeSxZeSxzYixpYixidixvYixVdixhYixsYix1Yl19KSx0fSkoKSxoYj0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVtb2Q9bWUoe3R5cGU6dH0pLHQuXHUwMjc1aW5qPWN0KHtmYWN0b3J5OmZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LHByb3ZpZGVyczpbXSxpbXBvcnRzOltbVHldLFR5XX0pLHR9KSgpLGRiPSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0scHJvdmlkZXJzOltdLGltcG9ydHM6W1tdXX0pLHR9KSgpO2NvbnN0IHBiPXtlbjp7Y2xvc2VCdXR0b246IkNsb3NlIixkZXRhaWxzOiJEZXRhaWxzIixkZXRhaWw6IkRldGFpbCIsZXJyb3I6IkVycm9yIix3YXJuaW5nOiJXYXJuaW5nIixpbmZvOiJJbmZvcm1hdGlvbiIsc3VjY2VzczoiU3VjY2VzcyJ9LGVzOntjbG9zZUJ1dHRvbjoiQ2VycmFyIixkZXRhaWxzOiJEZXRhbGxlcyIsZGV0YWlsOiJEZXRhbGxlIixlcnJvcjoiRXJyb3IiLHdhcm5pbmc6IkFkdmVydGVuY2lhIixpbmZvOiJJbmZvcm1hY2lvbiIsc3VjY2VzczoiXHhjOXhpdG8ifSxwdDp7Y2xvc2VCdXR0b246IkZlY2hhciIsZGV0YWlsczoiRGV0YWxoZXMiLGRldGFpbDoiRGV0YWxoZSIsZXJyb3I6IkVycm8iLHdhcm5pbmc6IkF2aXNvIixpbmZvOiJJbmZvcm1hXHhlN1x4ZTNvIixzdWNjZXNzOiJTdWNlc3NvIn0scnU6e2Nsb3NlQnV0dG9uOiJcdTA0MTdcdTA0MzBcdTA0M2FcdTA0NDBcdTA0NGJcdTA0MzJcdTA0MzBcdTA0NDJcdTA0NGMiLGRldGFpbHM6Ilx1MDQxNFx1MDQzNVx1MDQ0Mlx1MDQzMFx1MDQzYlx1MDQzOCIsZGV0YWlsOiJcdTA0MTRcdTA0MzVcdTA0NDJcdTA0MzBcdTA0M2JcdTA0NGMiLGVycm9yOiJcdTA0MWVcdTA0NDhcdTA0MzhcdTA0MzFcdTA0M2FcdTA0MzAiLHdhcm5pbmc6Ilx1MDQxZlx1MDQ0MFx1MDQzNVx1MDQzNFx1MDQ0M1x1MDQzZlx1MDQ0MFx1MDQzNVx1MDQzNlx1MDQzNFx1MDQzNVx1MDQzZFx1MDQzOFx1MDQzNSIsaW5mbzoiXHUwNDE4XHUwNDNkXHUwNDQ0XHUwNDNlXHUwNDQwXHUwNDNjXHUwNDMwXHUwNDQ2XHUwNDM4XHUwNDRmIixzdWNjZXNzOiJZXHUwNDQxXHUwNDNmXHUwNDM1XHUwNDQ1In19LGZiPXtzdWNjZXNzOiJjb2xvci0xMSIsZXJyb3I6ImNvbG9yLTA3Iix3YXJuaW5nOiJjb2xvci0wOCIsaW5mbzoiIn07bGV0IGdiPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IodCl7dGhpcy5sYW5ndWFnZVNlcnZpY2U9dCx0aGlzLmNsb3NlZD1uZXcgQ2EsdGhpcy5kZXRhaWxzPVtdLHRoaXMubGFuZ3VhZ2U9dGhpcy5sYW5ndWFnZVNlcnZpY2UuZ2V0U2hvcnRMYW5ndWFnZSgpLHRoaXMubGl0ZXJhbHM9cGJbdGhpcy5sYW5ndWFnZV0sdGhpcy5wcmltYXJ5QWN0aW9uPXthY3Rpb246KCk9PnRoaXMuY2xvc2UoKSxsYWJlbDp0aGlzLmxpdGVyYWxzLmNsb3NlQnV0dG9ufX1zZXQgZGV0YWlsKHQpe3QmJnQubGVuZ3RoJiYodGhpcy5kZXRhaWxzPXRoaXMuZmlsdGVyQnlWYWxpZERldGFpbHModCkpLHRoaXMudGl0bGU9dGhpcy5mb3JtYXRUaXRsZSh0aGlzLmRldGFpbHMpfWNsb3NlKCl7dGhpcy5tb2RhbC5jbG9zZSgpLHRoaXMuY2xvc2VkLmVtaXQoKX1mb3JtYXREZXRhaWxJdGVtVGl0bGUodCl7cmV0dXJuIHQuY29kZT9gJHt0LmNvZGV9IC0gJHt0Lm1lc3NhZ2V9YDp0Lm1lc3NhZ2V9b3Blbigpe3RoaXMubW9kYWwub3BlbigpfXR5cGVDb2xvcih0KXtyZXR1cm4gZmJbdF19dHlwZVZhbHVlKHQpe3JldHVybiBwYlt0aGlzLmxhbmd1YWdlXVt0XXx8dH1hZGRWYWxpZERldGFpbCh0LGUpe3JldHVybiBlLm1lc3NhZ2U/dC5jb25jYXQodGhpcy5nZXRWYWxpZERldGFpbFByb3BlcnRpZXMoZSkpOnR9Z2V0VmFsaWREZXRhaWxQcm9wZXJ0aWVzKHtjb2RlOnQsbWVzc2FnZTplLGRldGFpbGVkTWVzc2FnZTpuLHR5cGU6cn0pe3JldHVybntjb2RlOnQsbWVzc2FnZTplLGRldGFpbGVkTWVzc2FnZTpuLHR5cGU6cn19ZmlsdGVyQnlWYWxpZERldGFpbHModCl7cmV0dXJuIHQucmVkdWNlKCh0LGUpPT50aGlzLmFkZFZhbGlkRGV0YWlsKHQsZSksW10pfWZvcm1hdFRpdGxlKHQpe3JldHVybiB0Lmxlbmd0aD4xP2Ake3RoaXMubGl0ZXJhbHMuZGV0YWlsc30gKCR7dC5sZW5ndGh9KWA6dGhpcy5saXRlcmFscy5kZXRhaWx9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKFJpKGN5KSl9LHQuXHUwMjc1Y21wPWRlKHt0eXBlOnQsc2VsZWN0b3JzOltbInBvLWh0dHAtaW50ZXJjZXB0b3ItZGV0YWlsIl1dLHZpZXdRdWVyeTpmdW5jdGlvbih0LGUpe3ZhciBuOzEmdCYmUmEoS3ksITApLDImdCYmSWEobj1OYSgpKSYmKGUubW9kYWw9bi5maXJzdCl9LGRlY2xzOjQsdmFyczozLGNvbnN0czpbWyJwLWhpZGUtY2xvc2UiLCIiLCJwLXNpemUiLCJsZyIsMywicC1wcmltYXJ5LWFjdGlvbiIsInAtdGl0bGUiXSxbMSwicG8tcm93Il0sWzEsInBvLW1kLTEyIiwicG8tbXQtMSIsInBvLW1iLTEiXSxbMywicC1sYWJlbCIsNCwibmdGb3IiLCJuZ0Zvck9mIl0sWzMsInAtbGFiZWwiXSxbImNsYXNzIiwicG8tcm93IHBvLW1iLTEiLDQsIm5nSWYiXSxbMSwicG8tcm93IiwicG8tbWItMSJdLFszLCJwLWNvbG9yIiwicC12YWx1ZSJdXSx0ZW1wbGF0ZTpmdW5jdGlvbih0LGUpezEmdCYmKE5pKDAsInBvLW1vZGFsIiwwKSxOaSgxLCJkaXYiLDEpLE5pKDIsInBvLWFjY29yZGlvbiIsMiksSWkoMyxXbSw1LDMsInBvLWFjY29yZGlvbi1pdGVtIiwzKSxWaSgpLFZpKCksVmkoKSksMiZ0JiYoTWkoInAtcHJpbWFyeS1hY3Rpb24iLGUucHJpbWFyeUFjdGlvbikoInAtdGl0bGUiLGUudGl0bGUpLGpyKDMpLE1pKCJuZ0Zvck9mIixlLmRldGFpbHMpKX0sZGlyZWN0aXZlczpbS3ksS20senUsR20sV3UsTHZdLGVuY2Fwc3VsYXRpb246Mn0pLHR9KSgpO2NvbnN0IG1iPXtwdDp7aGVscDoiQWp1ZGEiLGRldGFpbHM6IkRldGFsaGVzIixzZXJ2ZXJOb3RSZXNwb25zZToiU2Vydmlkb3Igblx4ZTNvIGVzdFx4ZTEgcmVzcG9uZGVuZG8ifSxlbjp7aGVscDoiSGVscCIsZGV0YWlsczoiRGV0YWlscyIsc2VydmVyTm90UmVzcG9uc2U6IlNlcnZlciBpcyBub3QgcmVzcG9uZGluZyJ9LGVzOntoZWxwOiJBeXVkYSIsZGV0YWlsczoiRGV0YWxsZXMiLHNlcnZlck5vdFJlc3BvbnNlOiJFbCBzZXJ2aWRvciBubyBlc3RceGUxIHJlc3BvbmRpZW5kbyJ9LHJ1OntoZWxwOiJcdTA0MWZcdTA0M2VcdTA0M2NcdTA0M2VcdTA0MzNcdTA0MzhcdTA0NDJcdTA0MzUiLGRldGFpbHM6Ilx1MDQxNFx1MDQzNVx1MDQ0Mlx1MDQzMFx1MDQzYlx1MDQzOCIsc2VydmVyTm90UmVzcG9uc2U6Ilx1MDQyMVx1MDQzNVx1MDQ0MFx1MDQzMlx1MDQzNVx1MDQ0MCBcdTA0M2RcdTA0MzUgXHUwNDNlXHUwNDQyXHUwNDMyXHUwNDM1XHUwNDQ3XHUwNDMwXHUwNDM1XHUwNDQyIn19LHliPSJYLVBPLU5vLUVycm9yIix2Yj0iWC1QTy1Oby1NZXNzYWdlIjtsZXQgYmI9KCgpPT57Y2xhc3MgdCBleHRlbmRzIGNsYXNze2NvbnN0cnVjdG9yKHQsZSxuKXt0aGlzLmNvbXBvbmVudEluamVjdG9yPXQsdGhpcy5ub3RpZmljYXRpb249ZSx0aGlzLmxhbmd1YWdlU2VydmljZT1uLHRoaXMubm90aWZpY2F0aW9uVHlwZXM9WyJzdWNjZXNzIiwid2FybmluZyIsImVycm9yIiwiaW5mb3JtYXRpb24iXSx0aGlzLmxpdGVyYWxzPW1iW3RoaXMubGFuZ3VhZ2VTZXJ2aWNlLmdldFNob3J0TGFuZ3VhZ2UoKV0sdGhpcy5odHRwSW50ZXJjZXB0b3JEZXRhaWxDb21wb25lbnQ9dm9pZCAwfWludGVyY2VwdCh0LGUpe2NvbnN0IG49dC5jbG9uZSgpO3JldHVybiB0PXQmJnRoaXMuaGFzUGFyYW1ldGVycyh0KT90aGlzLmNsb25lUmVxdWVzdFdpdGhvdXRQYXJhbWV0ZXJzKHQpOnQsZS5oYW5kbGUodCkucGlwZShZZCh0PT57dCBpbnN0YW5jZW9mIFhnJiZ0aGlzLnByb2Nlc3NSZXNwb25zZSh0LG4pfSx0PT57dGhpcy5wcm9jZXNzRXJyb3JSZXNwb25zZSh0LG4pfSkpfXByb2Nlc3NSZXNwb25zZSh0LGUpe2lmKCF0aGlzLmhhc05vTWVzc2FnZVBhcmFtKGUpJiZ0LmJvZHkmJnQuYm9keS5fbWVzc2FnZXMpe2NvbnN0IGU9dC5ib2R5Ll9tZXNzYWdlcztlIGluc3RhbmNlb2YgQXJyYXk/ZS5mb3JFYWNoKHQ9Pnt0aGlzLnNob3dOb3RpZmljYXRpb24odCl9KTp0aGlzLnNob3dOb3RpZmljYXRpb24oZSl9fXByb2Nlc3NFcnJvclJlc3BvbnNlKHQsZSl7Y29uc3Qgbj0wIT09dC5zdGF0dXM/dC5lcnJvcjp7Y29kZTowLG1lc3NhZ2U6dGhpcy5saXRlcmFscy5zZXJ2ZXJOb3RSZXNwb25zZSxkZXRhaWxlZE1lc3NhZ2U6dC5tZXNzYWdlfSxyPXRoaXMuaGFzTm9FcnJvclBhcmFtKGUpLHM9dGhpcy5oYXNOb01lc3NhZ2VQYXJhbShlKTtuJiZuLm1lc3NhZ2UmJiFyJiYhcyYmdGhpcy5zaG93Tm90aWZpY2F0aW9uKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSxuKSx7dHlwZToiZXJyb3IifSkpfWNsb25lUmVxdWVzdFdpdGhvdXRQYXJhbWV0ZXJzKHQpe2NvbnN0IGU9dC5oZWFkZXJzLmRlbGV0ZSh5YikuZGVsZXRlKHZiKTtyZXR1cm4gdC5jbG9uZSh7aGVhZGVyczplfSl9Y3JlYXRlTW9kYWwodCl7Y29uc3QgZT10LmRldGFpbHM/W3QsLi4udC5kZXRhaWxzXTpbdF07dGhpcy5odHRwSW50ZXJjZXB0b3JEZXRhaWxDb21wb25lbnQ9dGhpcy5jb21wb25lbnRJbmplY3Rvci5jcmVhdGVDb21wb25lbnRJbkFwcGxpY2F0aW9uKGdiKSx0aGlzLmh0dHBJbnRlcmNlcHRvckRldGFpbENvbXBvbmVudC5pbnN0YW5jZS5kZXRhaWw9ZSx0aGlzLmh0dHBJbnRlcmNlcHRvckRldGFpbENvbXBvbmVudC5pbnN0YW5jZS5jbG9zZWQuc3Vic2NyaWJlKCgpPT50aGlzLmRlc3Ryb3lNb2RhbCgpKSx0aGlzLmh0dHBJbnRlcmNlcHRvckRldGFpbENvbXBvbmVudC5pbnN0YW5jZS5vcGVuKCl9ZGVzdHJveU1vZGFsKCl7dGhpcy5odHRwSW50ZXJjZXB0b3JEZXRhaWxDb21wb25lbnQmJih0aGlzLmNvbXBvbmVudEluamVjdG9yLmRlc3Ryb3lDb21wb25lbnRJbkFwcGxpY2F0aW9uKHRoaXMuaHR0cEludGVyY2VwdG9yRGV0YWlsQ29tcG9uZW50KSx0aGlzLmh0dHBJbnRlcmNlcHRvckRldGFpbENvbXBvbmVudD12b2lkIDApfWhhc01lc3NhZ2UodCl7cmV0dXJuIHQmJnQubWVzc2FnZX1oYXNOb0Vycm9yUGFyYW0odCl7Y29uc3QgZT10JiZ0LmhlYWRlcnMuZ2V0KHliKTtyZXR1cm4gZSYmInRydWUiPT09ZS50b1N0cmluZygpLnRvTG9jYWxlTG93ZXJDYXNlKCl9aGFzTm9NZXNzYWdlUGFyYW0odCl7Y29uc3QgZT10JiZ0LmhlYWRlcnMuZ2V0KHZiKTtyZXR1cm4gZSYmInRydWUiPT09ZS50b1N0cmluZygpLnRvTG9jYWxlTG93ZXJDYXNlKCl9aGFzUGFyYW1ldGVycyh0KXtyZXR1cm4gdC5oZWFkZXJzLmhhcyh5Yil8fHQuaGVhZGVycy5oYXModmIpfXNob3dOb3RpZmljYXRpb24odCl7aWYoIXRoaXMuaGFzTWVzc2FnZSh0KSlyZXR1cm47Y29uc3QgZT10aGlzLm5vdGlmaWNhdGlvblR5cGVzLmluY2x1ZGVzKHQudHlwZSk/dC50eXBlOiJpbmZvcm1hdGlvbiIsbj10aGlzLmdlbmVyYXRlTm90aWZpY2F0aW9uQWN0aW9uKHQpO3RoaXMubm90aWZpY2F0aW9uW2VdKHttZXNzYWdlOnQubWVzc2FnZSxhY3Rpb25MYWJlbDpuLmxhYmVsLGFjdGlvbjpuLmFjdGlvbn0pfWdlbmVyYXRlRGV0YWlsTW9kYWwodCl7cmV0dXJuKCk9Pnt0aGlzLmh0dHBJbnRlcmNlcHRvckRldGFpbENvbXBvbmVudHx8dGhpcy5jcmVhdGVNb2RhbCh0KX19Z2VuZXJhdGVOb3RpZmljYXRpb25BY3Rpb24odCl7bGV0IGUsbjtyZXR1cm4hdC5oZWxwVXJsfHx0LmRldGFpbGVkTWVzc2FnZXx8dC5kZXRhaWxzPyh0LmRldGFpbGVkTWVzc2FnZXx8dC5kZXRhaWxzKSYmKG49dGhpcy5saXRlcmFscy5kZXRhaWxzLGU9dGhpcy5nZW5lcmF0ZURldGFpbE1vZGFsKHQpKToobj10aGlzLmxpdGVyYWxzLmhlbHAsZT10aGlzLmdlbmVyYXRlVXJsSGVscEZ1bmN0aW9uKHQuaGVscFVybCkpLHtsYWJlbDpuLGFjdGlvbjplfX1nZW5lcmF0ZVVybEhlbHBGdW5jdGlvbih0KXtyZXR1cm4oKT0+e3dpbmRvdy5vcGVuKHQsIl9ibGFuayIpfX19e2NvbnN0cnVjdG9yKHQsZSxuKXtzdXBlcihlLHQsbil9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKEd0KGt2KSxHdChldiksR3QoY3kpKX0sdC5cdTAyNzVwcm92PXV0KHt0b2tlbjp0LGZhY3Rvcnk6dC5cdTAyNzVmYWN9KSx0fSkoKSx3Yj0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVtb2Q9bWUoe3R5cGU6dH0pLHQuXHUwMjc1aW5qPWN0KHtmYWN0b3J5OmZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LHByb3ZpZGVyczpbYmIsa3Yse3Byb3ZpZGU6c20sdXNlQ2xhc3M6YmIsbXVsdGk6ITB9XSxpbXBvcnRzOltbc2MsSm0sUXksZnYsVXZdXX0pLHR9KSgpLF9iPSgoKT0+e2NsYXNzIHR7Y29uc3RydWN0b3IoKXt0aGlzLmNvbnRyb2xIdHRwUmVxdWVzdD1uZXcgRH1nZXRDb250cm9sSHR0cFJlcXVlc3QoKXtyZXR1cm4gdGhpcy5jb250cm9sSHR0cFJlcXVlc3QuYXNPYnNlcnZhYmxlKCl9c2VuZCh0PTApe3RoaXMuY29udHJvbEh0dHBSZXF1ZXN0Lm5leHQodCl9fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSx0Llx1MDI3NXByb3Y9dXQoe3Rva2VuOnQsZmFjdG9yeTp0Llx1MDI3NWZhY30pLHR9KSgpO2NvbnN0IENiPSJYLVBPLU5vLUNvdW50LVBlbmRpbmctUmVxdWVzdHMiLERiPSJYLVBPLVNjcmVlbi1Mb2NrIjtsZXQgRWI9KCgpPT57Y2xhc3MgdHtjb25zdHJ1Y3Rvcih0LGUpe3RoaXMuY29udHJvbEh0dHBSZXF1ZXN0PXQsdGhpcy5wb0NvbXBvbmVudEluamVjdG9yPWUsdGhpcy5sb2FkaW5nT3ZlcmxheUNvbXBvbmVudD12b2lkIDAsdGhpcy5wZW5kaW5nUmVxdWVzdHM9MCx0aGlzLm92ZXJsYXlSZXF1ZXN0cz0wfWludGVyY2VwdCh0LGUpe2NvbnN0IG49dC5jbG9uZSgpO3JldHVybiB0PXRoaXMucmVxdWVzdENsb25lV2l0aG91dEhlYWRlclBhcmFtKFtDYixEYl0sdCksdGhpcy5zZXRDb3VudFBlbmRpbmdSZXF1ZXN0cyghMCxuKSx0aGlzLnNldENvdW50T3ZlcmxheVJlcXVlc3RzKCEwLG4pLGUuaGFuZGxlKHQpLnBpcGUoWWQodD0+e3QgaW5zdGFuY2VvZiBYZyYmKHRoaXMuc2V0Q291bnRQZW5kaW5nUmVxdWVzdHMoITEsbiksdGhpcy5zZXRDb3VudE92ZXJsYXlSZXF1ZXN0cyghMSxuKSl9KSxxZCh0PT4odGhpcy5zZXRDb3VudFBlbmRpbmdSZXF1ZXN0cyghMSxuKSx0aGlzLnNldENvdW50T3ZlcmxheVJlcXVlc3RzKCExLG4pLFdjKHQpKSkpfWdldENvdW50UGVuZGluZ1JlcXVlc3RzKCl7cmV0dXJuIHRoaXMuY29udHJvbEh0dHBSZXF1ZXN0LmdldENvbnRyb2xIdHRwUmVxdWVzdCgpfWJ1aWxkTG9hZGluZygpe3RoaXMubG9hZGluZ092ZXJsYXlDb21wb25lbnR8fCh0aGlzLmxvYWRpbmdPdmVybGF5Q29tcG9uZW50PXRoaXMucG9Db21wb25lbnRJbmplY3Rvci5jcmVhdGVDb21wb25lbnRJbkFwcGxpY2F0aW9uKGZ5KSx0aGlzLmxvYWRpbmdPdmVybGF5Q29tcG9uZW50Lmluc3RhbmNlLnNjcmVlbkxvY2s9ITAsdGhpcy5sb2FkaW5nT3ZlcmxheUNvbXBvbmVudC5pbnN0YW5jZS5jaGFuZ2VEZXRlY3Rvci5kZXRlY3RDaGFuZ2VzKCkpfWRlc3Ryb3lMb2FkaW5nKCl7dGhpcy5sb2FkaW5nT3ZlcmxheUNvbXBvbmVudCYmKHRoaXMucG9Db21wb25lbnRJbmplY3Rvci5kZXN0cm95Q29tcG9uZW50SW5BcHBsaWNhdGlvbih0aGlzLmxvYWRpbmdPdmVybGF5Q29tcG9uZW50KSx0aGlzLmxvYWRpbmdPdmVybGF5Q29tcG9uZW50PXZvaWQgMCl9cmVxdWVzdENsb25lV2l0aG91dEhlYWRlclBhcmFtKHQsZSl7bGV0IG49ITE7cmV0dXJuIHQuZm9yRWFjaCh0PT57ZS5oZWFkZXJzLmhhcyh0KSYmKGUuaGVhZGVycy5kZWxldGUodCksbj0hMCl9KSxuP2UuY2xvbmUoe2hlYWRlcnM6ZS5oZWFkZXJzfSk6ZX1zZXRDb3VudFBlbmRpbmdSZXF1ZXN0cyh0LGUpe2NvbnN0IG49ZS5oZWFkZXJzLmhhcyhDYikscj1lLmhlYWRlcnMuZ2V0KENiKTtuJiYidHJ1ZSI9PT1yLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKXx8KHRoaXMucGVuZGluZ1JlcXVlc3RzKz10PzE6LTEsdGhpcy5jb250cm9sSHR0cFJlcXVlc3Quc2VuZCh0aGlzLnBlbmRpbmdSZXF1ZXN0cykpfXNldENvdW50T3ZlcmxheVJlcXVlc3RzKHQsZSl7aWYoZS5oZWFkZXJzLmhhcyhEYikpe2lmKCJmYWxzZSI9PT1lLmhlYWRlcnMuZ2V0KERiKS50b1N0cmluZygpLnRvTG93ZXJDYXNlKCkpcmV0dXJuO3RoaXMub3ZlcmxheVJlcXVlc3RzKz10PzE6LTEsdGhpcy5vdmVybGF5UmVxdWVzdHM+MD90aGlzLmJ1aWxkTG9hZGluZygpOnRoaXMuZGVzdHJveUxvYWRpbmcoKX19fXJldHVybiB0Llx1MDI3NWZhYz1mdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpKEd0KF9iKSxHdChldikpfSx0Llx1MDI3NXByb3Y9dXQoe2ZhY3Rvcnk6ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHQoR3QoX2IpLEd0KGV2KSl9LHRva2VuOnQscHJvdmlkZWRJbjoicm9vdCJ9KSx0fSkoKSxBYj0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVtb2Q9bWUoe3R5cGU6dH0pLHQuXHUwMjc1aW5qPWN0KHtmYWN0b3J5OmZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LHByb3ZpZGVyczpbX2IsRWIsZXYse3Byb3ZpZGU6c20sdXNlQ2xhc3M6RWIsbXVsdGk6ITB9XSxpbXBvcnRzOltbYnldXX0pLHR9KSgpLFNiPSgoKT0+e2NsYXNzIHR7fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0scHJvdmlkZXJzOltdLGltcG9ydHM6W1t3YixBYl0sd2IsQWJdfSksdH0pKCkseGI9KCgpPT57Y2xhc3MgdHt9cmV0dXJuIHQuXHUwMjc1bW9kPW1lKHt0eXBlOnR9KSx0Llx1MDI3NWluaj1jdCh7ZmFjdG9yeTpmdW5jdGlvbihlKXtyZXR1cm4gbmV3KGV8fHQpfSxwcm92aWRlcnM6W10saW1wb3J0czpbW3Z2XSx2dl19KSx0fSkoKSxrYj0oKCk9PntjbGFzcyB0e31yZXR1cm4gdC5cdTAyNzVtb2Q9bWUoe3R5cGU6dH0pLHQuXHUwMjc1aW5qPWN0KHtmYWN0b3J5OmZ1bmN0aW9uKGUpe3JldHVybiBuZXcoZXx8dCl9LHByb3ZpZGVyczpba3ZdLGltcG9ydHM6W1tjYixoYixkYixTYix4Yixndl0sY2IsaGIsU2IsZGIseGIsZ3ZdfSksdH0pKCksVGI9KCgpPT57Y2xhc3MgdHtjb25zdHJ1Y3Rvcigpe31uZ09uSW5pdCgpe31jYWxjdWxhKHQpe3N3aXRjaCh0KXtjYXNlInNvbWEiOnRoaXMucmVzdWx0YWRvPXRoaXMubnVtYmVyT25lK3RoaXMubnVtYmVyVHdvO2JyZWFrO2Nhc2Uic3VidHJhXHhlN1x4ZTNvIjp0aGlzLnJlc3VsdGFkbz10aGlzLm51bWJlck9uZS10aGlzLm51bWJlclR3bzticmVhaztjYXNlIm11bHRpcGxpY2FceGU3XHhlM28iOnRoaXMucmVzdWx0YWRvPXRoaXMubnVtYmVyT25lKnRoaXMubnVtYmVyVHdvO2JyZWFrO2Nhc2UiZGl2aXNceGUzbyI6MD09PXRoaXMubnVtYmVyVHdvPyhjb25zb2xlLmVycm9yKCJOXHhlM28gXHhlOSBwb3NzXHhlZHZlbCBkaXZpZGlyIHBvciB6ZXJvIiksdGhpcy5yZXN1bHRhZG89MCk6dGhpcy5yZXN1bHRhZG89dGhpcy5udW1iZXJPbmUvdGhpcy5udW1iZXJUd287YnJlYWs7ZGVmYXVsdDpjb25zb2xlLmVycm9yKCJEZXZlIGluZm9ybWFyIHF1YWwgb3BlcmFkb3IiKX1jb25zb2xlLmxvZygwPT09dGhpcy5udW1iZXJUd28mJiJkaXZpc1x4ZTNvIj09PXQ/Ik5ceGUzbyBceGU5IHBvc3NceGVkdmVsIGRpdmlkaXIgcG9yIHplcm8iOmBBICR7dH0gZW50cmUgJHt0aGlzLm51bWJlck9uZX0gZSAke3RoaXMubnVtYmVyVHdvfSBceGU5IGlndWFsIGEgJHt0aGlzLnJlc3VsdGFkb31gKSx0aGlzLm1hbmRhVmFsb3IoKX1tYW5kYVZhbG9yKCl7ZG9jdW1lbnQuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoImVtaXRWYWx1ZSIse2RldGFpbDpbe3ZhbHVlOnRoaXMucmVzdWx0YWRvLG5hbWU6InJlc3VsdCIsYWN0aW9uOigpPT57Y29uc3QgdD1kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicmVzdWx0YWRvIik7Y29uc29sZS5sb2coe2VsZW1lbnQ6dH0pfX1dfSkpfX1yZXR1cm4gdC5cdTAyNzVmYWM9ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KX0sdC5cdTAyNzVjbXA9ZGUoe3R5cGU6dCxzZWxlY3RvcnM6W1sibmctY29tcG9uZW50Il1dLGRlY2xzOjgsdmFyczoyLGNvbnN0czpbWyJuYW1lIiwibnVtYmVyT25lIiwicC1sYWJlbCIsIlByaW1laXJvIE5ceGZhbWVybyIsInAtcGxhY2Vob2xkZXIiLCJQcmltZWlybyBOXHhmYW1lcm8iLDMsIm5nTW9kZWwiLCJuZ01vZGVsQ2hhbmdlIl0sWyJuYW1lIiwibnVtYmVyVHdvIiwicC1sYWJlbCIsIlNlZ3VuZG8gTlx4ZmFtZXJvIiwicC1wbGFjZWhvbGRlciIsIlNlZ3VuZG8gTlx4ZmFtZXJvIiwzLCJuZ01vZGVsIiwibmdNb2RlbENoYW5nZSJdLFsicC1sYWJlbCIsIlNvbWEiLDMsInAtY2xpY2siXSxbInAtbGFiZWwiLCJTdWJ0cmFpIiwzLCJwLWNsaWNrIl0sWyJwLWxhYmVsIiwiTXVsdGlwbGljYSIsMywicC1jbGljayJdLFsicC1sYWJlbCIsIkRpdmlkZSIsMywicC1jbGljayJdXSx0ZW1wbGF0ZTpmdW5jdGlvbih0LGUpezEmdCYmKE5pKDAsImgzIiksZ28oMSwiQ2FsY3VsYXRvciIpLFZpKCksTmkoMiwicG8tbnVtYmVyIiwwKSwkaSgibmdNb2RlbENoYW5nZSIsKGZ1bmN0aW9uKHQpe3JldHVybiBlLm51bWJlck9uZT10fSkpLFZpKCksTmkoMywicG8tbnVtYmVyIiwxKSwkaSgibmdNb2RlbENoYW5nZSIsKGZ1bmN0aW9uKHQpe3JldHVybiBlLm51bWJlclR3bz10fSkpLFZpKCksTmkoNCwicG8tYnV0dG9uIiwyKSwkaSgicC1jbGljayIsKGZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsY3VsYSgic29tYSIpfSkpLFZpKCksTmkoNSwicG8tYnV0dG9uIiwzKSwkaSgicC1jbGljayIsKGZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsY3VsYSgic3VidHJhXHhlN1x4ZTNvIil9KSksVmkoKSxOaSg2LCJwby1idXR0b24iLDQpLCRpKCJwLWNsaWNrIiwoZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxjdWxhKCJtdWx0aXBsaWNhXHhlN1x4ZTNvIil9KSksVmkoKSxOaSg3LCJwby1idXR0b24iLDUpLCRpKCJwLWNsaWNrIiwoZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxjdWxhKCJkaXZpc1x4ZTNvIil9KSksVmkoKSksMiZ0JiYoanIoMiksTWkoIm5nTW9kZWwiLGUubnVtYmVyT25lKSxqcigxKSxNaSgibmdNb2RlbCIsZS5udW1iZXJUd28pKX0sZGlyZWN0aXZlczpbRnYsd2gsbGQsQXldLHN0eWxlczpbIiJdfSksdH0pKCksRmI9KCgpPT57Y2xhc3MgdHtjb25zdHJ1Y3Rvcih0KXtjb25zdCBlPWZ1bmN0aW9uKHQsZSl7Y29uc3Qgbj1mdW5jdGlvbih0LGUpe3JldHVybiBlLmdldChUbykucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkodCkuaW5wdXRzfSh0LGUuaW5qZWN0b3IpLHI9ZS5zdHJhdGVneUZhY3Rvcnl8fG5ldyBpaCh0LGUuaW5qZWN0b3IpLHM9ZnVuY3Rpb24odCl7Y29uc3QgZT17fTtyZXR1cm4gdC5mb3JFYWNoKCh7cHJvcE5hbWU6dCx0ZW1wbGF0ZU5hbWU6bn0pPT57dmFyIHI7ZVsocj1uLHIucmVwbGFjZSgvW0EtWl0vZyx0PT4iLSIrdC50b0xvd2VyQ2FzZSgpKSldPXR9KSxlfShuKTtjbGFzcyBpIGV4dGVuZHMgYWh7Y29uc3RydWN0b3IodCl7c3VwZXIoKSx0aGlzLmluamVjdG9yPXR9Z2V0IG5nRWxlbWVudFN0cmF0ZWd5KCl7aWYoIXRoaXMuX25nRWxlbWVudFN0cmF0ZWd5KXtjb25zdCB0PXRoaXMuX25nRWxlbWVudFN0cmF0ZWd5PXIuY3JlYXRlKHRoaXMuaW5qZWN0b3J8fGUuaW5qZWN0b3IpLHM9bi5maWx0ZXIoKHtwcm9wTmFtZTp0fSk9PnRoaXMuaGFzT3duUHJvcGVydHkodCkpLm1hcCgoe3Byb3BOYW1lOnR9KT0+W3QsdGhpc1t0XV0pO3RoaXMgaW5zdGFuY2VvZiBpP3MuZm9yRWFjaCgoW3RdKT0+ZGVsZXRlIHRoaXNbdF0pOmxoKG4sdGhpcykscy5mb3JFYWNoKChbZSxuXSk9PnQuc2V0SW5wdXRWYWx1ZShlLG4pKX1yZXR1cm4gdGhpcy5fbmdFbGVtZW50U3RyYXRlZ3l9YXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKHQsZSxuLHIpe3RoaXMubmdFbGVtZW50U3RyYXRlZ3kuc2V0SW5wdXRWYWx1ZShzW3RdLG4pfWNvbm5lY3RlZENhbGxiYWNrKCl7bGV0IHQ9ITE7dGhpcy5uZ0VsZW1lbnRTdHJhdGVneS5ldmVudHMmJih0aGlzLnN1YnNjcmliZVRvRXZlbnRzKCksdD0hMCksdGhpcy5uZ0VsZW1lbnRTdHJhdGVneS5jb25uZWN0KHRoaXMpLHR8fHRoaXMuc3Vic2NyaWJlVG9FdmVudHMoKX1kaXNjb25uZWN0ZWRDYWxsYmFjaygpe3RoaXMuX25nRWxlbWVudFN0cmF0ZWd5JiZ0aGlzLl9uZ0VsZW1lbnRTdHJhdGVneS5kaXNjb25uZWN0KCksdGhpcy5uZ0VsZW1lbnRFdmVudHNTdWJzY3JpcHRpb24mJih0aGlzLm5nRWxlbWVudEV2ZW50c1N1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpLHRoaXMubmdFbGVtZW50RXZlbnRzU3Vic2NyaXB0aW9uPW51bGwpfXN1YnNjcmliZVRvRXZlbnRzKCl7dGhpcy5uZ0VsZW1lbnRFdmVudHNTdWJzY3JpcHRpb249dGhpcy5uZ0VsZW1lbnRTdHJhdGVneS5ldmVudHMuc3Vic2NyaWJlKHQ9Pntjb25zdCBlPWZ1bmN0aW9uKHQsZSxuKXtpZigiZnVuY3Rpb24iIT10eXBlb2YgQ3VzdG9tRXZlbnQpe2NvbnN0IHI9dC5jcmVhdGVFdmVudCgiQ3VzdG9tRXZlbnQiKTtyZXR1cm4gci5pbml0Q3VzdG9tRXZlbnQoZSwhMSwhMSxuKSxyfXJldHVybiBuZXcgQ3VzdG9tRXZlbnQoZSx7YnViYmxlczohMSxjYW5jZWxhYmxlOiExLGRldGFpbDpufSl9KHRoaXMub3duZXJEb2N1bWVudCx0Lm5hbWUsdC52YWx1ZSk7dGhpcy5kaXNwYXRjaEV2ZW50KGUpfSl9fXJldHVybiBpLm9ic2VydmVkQXR0cmlidXRlcz1PYmplY3Qua2V5cyhzKSxPYmplY3QuZGVmaW5lUHJvcGVydHkoaS5wcm90b3R5cGUsIm5nRWxlbWVudFN0cmF0ZWd5Iix7ZW51bWVyYWJsZTohMH0pLGxoKG4saS5wcm90b3R5cGUpLGl9KFRiLHtpbmplY3Rvcjp0fSk7Y3VzdG9tRWxlbWVudHMuZGVmaW5lKCJwb2RzLWNhbGN1bGF0b3IiLGUpfW5nRG9Cb290c3RyYXAoKXt9fXJldHVybiB0Llx1MDI3NW1vZD1tZSh7dHlwZTp0fSksdC5cdTAyNzVpbmo9Y3Qoe2ZhY3Rvcnk6ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyhlfHx0KShHdCh5aSkpfSxwcm92aWRlcnM6W10saW1wb3J0czpbW01jLGNkLGtiXV19KSx0fSkoKTsoZnVuY3Rpb24oKXtpZihtcil0aHJvdyBuZXcgRXJyb3IoIkNhbm5vdCBlbmFibGUgcHJvZCBtb2RlIGFmdGVyIHBsYXRmb3JtIHNldHVwLiIpO2dyPSExfSkoKSxJYygpLmJvb3RzdHJhcE1vZHVsZShGYikuY2F0Y2godD0+Y29uc29sZS5lcnJvcih0KSl9LHpuOFA6ZnVuY3Rpb24odCxlKXtmdW5jdGlvbiBuKHQpe3JldHVybiBQcm9taXNlLnJlc29sdmUoKS50aGVuKChmdW5jdGlvbigpe3ZhciBlPW5ldyBFcnJvcigiQ2Fubm90IGZpbmQgbW9kdWxlICciK3QrIiciKTt0aHJvdyBlLmNvZGU9Ik1PRFVMRV9OT1RfRk9VTkQiLGV9KSl9bi5rZXlzPWZ1bmN0aW9uKCl7cmV0dXJuW119LG4ucmVzb2x2ZT1uLHQuZXhwb3J0cz1uLG4uaWQ9InpuOFAifX0sW1swLDBdXV0pOw==';