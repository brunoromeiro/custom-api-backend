export const pocChart = '(()=>{"use strict";var e,r={},n={};function t(e){var o=n[e];if(void 0!==o)return o.exports;var a=n[e]={exports:{}};return r[e](a,a.exports,t),a.exports}t.m=r,e=[],t.O=(r,n,o,a)=>{if(!n){var l=1/0;for(u=0;u<e.length;u++){for(var[n,o,a]=e[u],s=!0,p=0;p<n.length;p++)(!1&a||l>=a)&&Object.keys(t.O).every(e=>t.O[e](n[p]))?n.splice(p--,1):(s=!1,a<l&&(l=a));s&&(e.splice(u--,1),r=o())}return r}a=a||0;for(var u=e.length;u>0&&e[u-1][2]>a;u--)e[u]=e[u-1];e[u]=[n,o,a]},t.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return t.d(r,{a:r}),r},t.d=(e,r)=>{for(var n in r)t.o(r,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:r[n]})},t.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),(()=>{var e={666:0};t.O.j=r=>0===e[r];var r=(r,n)=>{var o,a,[l,s,p]=n,u=0;for(o in s)t.o(s,o)&&(t.m[o]=s[o]);if(p)var f=p(t);for(r&&r(n);u<l.length;u++)t.o(e,a=l[u])&&e[a]&&e[a][0](),e[l[u]]=0;return t.O(f)},n=self.webpackChunkng_elements_example=self.webpackChunkng_elements_example||[];n.forEach(r.bind(null,0)),n.push=r.bind(null,n.push.bind(n))})()})();(self.webpackChunkng_elements_example=self.webpackChunkng_elements_example||[]).push([[429],{167:()=>{"use strict";!function(e){const t=e.performance;function n(e){t&&t.mark&&t.mark(e)}function o(e,n){t&&t.measure&&t.measure(e,n)}n("Zone");const r=e.__Zone_symbol_prefix||"__zone_symbol__";function s(e){return r+e}const a=!0===e[s("forceDuplicateZoneCheck")];if(e.Zone){if(a||"function"!=typeof e.Zone.__symbol__)throw new Error("Zone already loaded.");return e.Zone}class i{constructor(e,t){this._parent=e,this._name=t?t.name||"unnamed":"<root>",this._properties=t&&t.properties||{},this._zoneDelegate=new l(this,this._parent&&this._parent._zoneDelegate,t)}static assertZonePatched(){if(e.Promise!==O.ZoneAwarePromise)throw new Error("Zone.js has detected that ZoneAwarePromise `(window|global).Promise` has been overwritten.\nMost likely cause is that a Promise polyfill has been loaded after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. If you must load one, do so before loading zone.js.)")}static get root(){let e=i.current;for(;e.parent;)e=e.parent;return e}static get current(){return z.zone}static get currentTask(){return j}static __load_patch(t,r,s=!1){if(O.hasOwnProperty(t)){if(!s&&a)throw Error("Already loaded patch: "+t)}else if(!e["__Zone_disable_"+t]){const s="Zone:"+t;n(s),O[t]=r(e,i,C),o(s,s)}}get parent(){return this._parent}get name(){return this._name}get(e){const t=this.getZoneWith(e);if(t)return t._properties[e]}getZoneWith(e){let t=this;for(;t;){if(t._properties.hasOwnProperty(e))return t;t=t._parent}return null}fork(e){if(!e)throw new Error("ZoneSpec required!");return this._zoneDelegate.fork(this,e)}wrap(e,t){if("function"!=typeof e)throw new Error("Expecting function got: "+e);const n=this._zoneDelegate.intercept(this,e,t),o=this;return function(){return o.runGuarded(n,this,arguments,t)}}run(e,t,n,o){z={parent:z,zone:this};try{return this._zoneDelegate.invoke(this,e,t,n,o)}finally{z=z.parent}}runGuarded(e,t=null,n,o){z={parent:z,zone:this};try{try{return this._zoneDelegate.invoke(this,e,t,n,o)}catch(r){if(this._zoneDelegate.handleError(this,r))throw r}}finally{z=z.parent}}runTask(e,t,n){if(e.zone!=this)throw new Error("A task can only be run in the zone of creation! (Creation: "+(e.zone||y).name+"; Execution: "+this.name+")");if(e.state===v&&(e.type===P||e.type===D))return;const o=e.state!=E;o&&e._transitionTo(E,b),e.runCount++;const r=j;j=e,z={parent:z,zone:this};try{e.type==D&&e.data&&!e.data.isPeriodic&&(e.cancelFn=void 0);try{return this._zoneDelegate.invokeTask(this,e,t,n)}catch(s){if(this._zoneDelegate.handleError(this,s))throw s}}finally{e.state!==v&&e.state!==Z&&(e.type==P||e.data&&e.data.isPeriodic?o&&e._transitionTo(b,E):(e.runCount=0,this._updateTaskCount(e,-1),o&&e._transitionTo(v,E,v))),z=z.parent,j=r}}scheduleTask(e){if(e.zone&&e.zone!==this){let t=this;for(;t;){if(t===e.zone)throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${e.zone.name}`);t=t.parent}}e._transitionTo(T,v);const t=[];e._zoneDelegates=t,e._zone=this;try{e=this._zoneDelegate.scheduleTask(this,e)}catch(n){throw e._transitionTo(Z,T,v),this._zoneDelegate.handleError(this,n),n}return e._zoneDelegates===t&&this._updateTaskCount(e,1),e.state==T&&e._transitionTo(b,T),e}scheduleMicroTask(e,t,n,o){return this.scheduleTask(new u(S,e,t,n,o,void 0))}scheduleMacroTask(e,t,n,o,r){return this.scheduleTask(new u(D,e,t,n,o,r))}scheduleEventTask(e,t,n,o,r){return this.scheduleTask(new u(P,e,t,n,o,r))}cancelTask(e){if(e.zone!=this)throw new Error("A task can only be cancelled in the zone of creation! (Creation: "+(e.zone||y).name+"; Execution: "+this.name+")");e._transitionTo(w,b,E);try{this._zoneDelegate.cancelTask(this,e)}catch(t){throw e._transitionTo(Z,w),this._zoneDelegate.handleError(this,t),t}return this._updateTaskCount(e,-1),e._transitionTo(v,w),e.runCount=0,e}_updateTaskCount(e,t){const n=e._zoneDelegates;-1==t&&(e._zoneDelegates=null);for(let o=0;o<n.length;o++)n[o]._updateTaskCount(e.type,t)}}i.__symbol__=s;const c={name:"",onHasTask:(e,t,n,o)=>e.hasTask(n,o),onScheduleTask:(e,t,n,o)=>e.scheduleTask(n,o),onInvokeTask:(e,t,n,o,r,s)=>e.invokeTask(n,o,r,s),onCancelTask:(e,t,n,o)=>e.cancelTask(n,o)};class l{constructor(e,t,n){this._taskCounts={microTask:0,macroTask:0,eventTask:0},this.zone=e,this._parentDelegate=t,this._forkZS=n&&(n&&n.onFork?n:t._forkZS),this._forkDlgt=n&&(n.onFork?t:t._forkDlgt),this._forkCurrZone=n&&(n.onFork?this.zone:t._forkCurrZone),this._interceptZS=n&&(n.onIntercept?n:t._interceptZS),this._interceptDlgt=n&&(n.onIntercept?t:t._interceptDlgt),this._interceptCurrZone=n&&(n.onIntercept?this.zone:t._interceptCurrZone),this._invokeZS=n&&(n.onInvoke?n:t._invokeZS),this._invokeDlgt=n&&(n.onInvoke?t:t._invokeDlgt),this._invokeCurrZone=n&&(n.onInvoke?this.zone:t._invokeCurrZone),this._handleErrorZS=n&&(n.onHandleError?n:t._handleErrorZS),this._handleErrorDlgt=n&&(n.onHandleError?t:t._handleErrorDlgt),this._handleErrorCurrZone=n&&(n.onHandleError?this.zone:t._handleErrorCurrZone),this._scheduleTaskZS=n&&(n.onScheduleTask?n:t._scheduleTaskZS),this._scheduleTaskDlgt=n&&(n.onScheduleTask?t:t._scheduleTaskDlgt),this._scheduleTaskCurrZone=n&&(n.onScheduleTask?this.zone:t._scheduleTaskCurrZone),this._invokeTaskZS=n&&(n.onInvokeTask?n:t._invokeTaskZS),this._invokeTaskDlgt=n&&(n.onInvokeTask?t:t._invokeTaskDlgt),this._invokeTaskCurrZone=n&&(n.onInvokeTask?this.zone:t._invokeTaskCurrZone),this._cancelTaskZS=n&&(n.onCancelTask?n:t._cancelTaskZS),this._cancelTaskDlgt=n&&(n.onCancelTask?t:t._cancelTaskDlgt),this._cancelTaskCurrZone=n&&(n.onCancelTask?this.zone:t._cancelTaskCurrZone),this._hasTaskZS=null,this._hasTaskDlgt=null,this._hasTaskDlgtOwner=null,this._hasTaskCurrZone=null;const o=n&&n.onHasTask;(o||t&&t._hasTaskZS)&&(this._hasTaskZS=o?n:c,this._hasTaskDlgt=t,this._hasTaskDlgtOwner=this,this._hasTaskCurrZone=e,n.onScheduleTask||(this._scheduleTaskZS=c,this._scheduleTaskDlgt=t,this._scheduleTaskCurrZone=this.zone),n.onInvokeTask||(this._invokeTaskZS=c,this._invokeTaskDlgt=t,this._invokeTaskCurrZone=this.zone),n.onCancelTask||(this._cancelTaskZS=c,this._cancelTaskDlgt=t,this._cancelTaskCurrZone=this.zone))}fork(e,t){return this._forkZS?this._forkZS.onFork(this._forkDlgt,this.zone,e,t):new i(e,t)}intercept(e,t,n){return this._interceptZS?this._interceptZS.onIntercept(this._interceptDlgt,this._interceptCurrZone,e,t,n):t}invoke(e,t,n,o,r){return this._invokeZS?this._invokeZS.onInvoke(this._invokeDlgt,this._invokeCurrZone,e,t,n,o,r):t.apply(n,o)}handleError(e,t){return!this._handleErrorZS||this._handleErrorZS.onHandleError(this._handleErrorDlgt,this._handleErrorCurrZone,e,t)}scheduleTask(e,t){let n=t;if(this._scheduleTaskZS)this._hasTaskZS&&n._zoneDelegates.push(this._hasTaskDlgtOwner),n=this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt,this._scheduleTaskCurrZone,e,t),n||(n=t);else if(t.scheduleFn)t.scheduleFn(t);else{if(t.type!=S)throw new Error("Task is missing scheduleFn.");k(t)}return n}invokeTask(e,t,n,o){return this._invokeTaskZS?this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt,this._invokeTaskCurrZone,e,t,n,o):t.callback.apply(n,o)}cancelTask(e,t){let n;if(this._cancelTaskZS)n=this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt,this._cancelTaskCurrZone,e,t);else{if(!t.cancelFn)throw Error("Task is not cancelable");n=t.cancelFn(t)}return n}hasTask(e,t){try{this._hasTaskZS&&this._hasTaskZS.onHasTask(this._hasTaskDlgt,this._hasTaskCurrZone,e,t)}catch(n){this.handleError(e,n)}}_updateTaskCount(e,t){const n=this._taskCounts,o=n[e],r=n[e]=o+t;if(r<0)throw new Error("More tasks executed then were scheduled.");0!=o&&0!=r||this.hasTask(this.zone,{microTask:n.microTask>0,macroTask:n.macroTask>0,eventTask:n.eventTask>0,change:e})}}class u{constructor(t,n,o,r,s,a){if(this._zone=null,this.runCount=0,this._zoneDelegates=null,this._state="notScheduled",this.type=t,this.source=n,this.data=r,this.scheduleFn=s,this.cancelFn=a,!o)throw new Error("callback is not defined");this.callback=o;const i=this;this.invoke=t===P&&r&&r.useG?u.invokeTask:function(){return u.invokeTask.call(e,i,this,arguments)}}static invokeTask(e,t,n){e||(e=this),I++;try{return e.runCount++,e.zone.runTask(e,t,n)}finally{1==I&&m(),I--}}get zone(){return this._zone}get state(){return this._state}cancelScheduleRequest(){this._transitionTo(v,T)}_transitionTo(e,t,n){if(this._state!==t&&this._state!==n)throw new Error(`${this.type} '${this.source}': can not transition to '${e}', expecting state '${t}'${n?" or '"+n+"'":""}, was '${this._state}'.`);this._state=e,e==v&&(this._zoneDelegates=null)}toString(){return this.data&&void 0!==this.data.handleId?this.data.handleId.toString():Object.prototype.toString.call(this)}toJSON(){return{type:this.type,state:this.state,source:this.source,zone:this.zone.name,runCount:this.runCount}}}const h=s("setTimeout"),p=s("Promise"),f=s("then");let d,g=[],_=!1;function k(t){if(0===I&&0===g.length)if(d||e[p]&&(d=e[p].resolve(0)),d){let e=d[f];e||(e=d.then),e.call(d,m)}else e[h](m,0);t&&g.push(t)}function m(){if(!_){for(_=!0;g.length;){const t=g;g=[];for(let n=0;n<t.length;n++){const o=t[n];try{o.zone.runTask(o,null,null)}catch(e){C.onUnhandledError(e)}}}C.microtaskDrainDone(),_=!1}}const y={name:"NO ZONE"},v="notScheduled",T="scheduling",b="scheduled",E="running",w="canceling",Z="unknown",S="microTask",D="macroTask",P="eventTask",O={},C={symbol:s,currentZoneFrame:()=>z,onUnhandledError:R,microtaskDrainDone:R,scheduleMicroTask:k,showUncaughtError:()=>!i[s("ignoreConsoleErrorUncaughtError")],patchEventTarget:()=>[],patchOnProperties:R,patchMethod:()=>R,bindArguments:()=>[],patchThen:()=>R,patchMacroTask:()=>R,patchEventPrototype:()=>R,isIEOrEdge:()=>!1,getGlobalObjects:()=>{},ObjectDefineProperty:()=>R,ObjectGetOwnPropertyDescriptor:()=>{},ObjectCreate:()=>{},ArraySlice:()=>[],patchClass:()=>R,wrapWithCurrentZone:()=>R,filterProperties:()=>[],attachOriginToPatched:()=>R,_redefineProperty:()=>R,patchCallbacks:()=>R};let z={parent:null,zone:new i(null,null)},j=null,I=0;function R(){}o("Zone","Zone"),e.Zone=i}("undefined"!=typeof window&&window||"undefined"!=typeof self&&self||global);const e=Object.getOwnPropertyDescriptor,t=Object.defineProperty,n=Object.getPrototypeOf,o=Object.create,r=Array.prototype.slice,s="addEventListener",a="removeEventListener",i=Zone.__symbol__(s),c=Zone.__symbol__(a),l="true",u="false",h=Zone.__symbol__("");function p(e,t){return Zone.current.wrap(e,t)}function f(e,t,n,o,r){return Zone.current.scheduleMacroTask(e,t,n,o,r)}const d=Zone.__symbol__,g="undefined"!=typeof window,_=g?window:void 0,k=g&&_||"object"==typeof self&&self||global,m=[null];function y(e,t){for(let n=e.length-1;n>=0;n--)"function"==typeof e[n]&&(e[n]=p(e[n],t+"_"+n));return e}function v(e){return!e||!1!==e.writable&&!("function"==typeof e.get&&void 0===e.set)}const T="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope,b=!("nw"in k)&&void 0!==k.process&&"[object process]"==={}.toString.call(k.process),E=!b&&!T&&!(!g||!_.HTMLElement),w=void 0!==k.process&&"[object process]"==={}.toString.call(k.process)&&!T&&!(!g||!_.HTMLElement),Z={},S=function(e){if(!(e=e||k.event))return;let t=Z[e.type];t||(t=Z[e.type]=d("ON_PROPERTY"+e.type));const n=this||e.target||k,o=n[t];let r;if(E&&n===_&&"error"===e.type){const t=e;r=o&&o.call(this,t.message,t.filename,t.lineno,t.colno,t.error),!0===r&&e.preventDefault()}else r=o&&o.apply(this,arguments),null==r||r||e.preventDefault();return r};function D(n,o,r){let s=e(n,o);if(!s&&r&&e(r,o)&&(s={enumerable:!0,configurable:!0}),!s||!s.configurable)return;const a=d("on"+o+"patched");if(n.hasOwnProperty(a)&&n[a])return;delete s.writable,delete s.value;const i=s.get,c=s.set,l=o.substr(2);let u=Z[l];u||(u=Z[l]=d("ON_PROPERTY"+l)),s.set=function(e){let t=this;t||n!==k||(t=k),t&&(t[u]&&t.removeEventListener(l,S),c&&c.apply(t,m),"function"==typeof e?(t[u]=e,t.addEventListener(l,S,!1)):t[u]=null)},s.get=function(){let e=this;if(e||n!==k||(e=k),!e)return null;const t=e[u];if(t)return t;if(i){let t=i&&i.call(this);if(t)return s.set.call(this,t),"function"==typeof e.removeAttribute&&e.removeAttribute(o),t}return null},t(n,o,s),n[a]=!0}function P(e,t,n){if(t)for(let o=0;o<t.length;o++)D(e,"on"+t[o],n);else{const t=[];for(const n in e)"on"==n.substr(0,2)&&t.push(n);for(let o=0;o<t.length;o++)D(e,t[o],n)}}const O=d("originalInstance");function C(e){const n=k[e];if(!n)return;k[d(e)]=n,k[e]=function(){const t=y(arguments,e);switch(t.length){case 0:this[O]=new n;break;case 1:this[O]=new n(t[0]);break;case 2:this[O]=new n(t[0],t[1]);break;case 3:this[O]=new n(t[0],t[1],t[2]);break;case 4:this[O]=new n(t[0],t[1],t[2],t[3]);break;default:throw new Error("Arg list too long.")}},I(k[e],n);const o=new n(function(){});let r;for(r in o)"XMLHttpRequest"===e&&"responseBlob"===r||function(n){"function"==typeof o[n]?k[e].prototype[n]=function(){return this[O][n].apply(this[O],arguments)}:t(k[e].prototype,n,{set:function(t){"function"==typeof t?(this[O][n]=p(t,e+"."+n),I(this[O][n],t)):this[O][n]=t},get:function(){return this[O][n]}})}(r);for(r in n)"prototype"!==r&&n.hasOwnProperty(r)&&(k[e][r]=n[r])}function z(t,o,r){let s=t;for(;s&&!s.hasOwnProperty(o);)s=n(s);!s&&t[o]&&(s=t);const a=d(o);let i=null;if(s&&(!(i=s[a])||!s.hasOwnProperty(a))&&(i=s[a]=s[o],v(s&&e(s,o)))){const e=r(i,a,o);s[o]=function(){return e(this,arguments)},I(s[o],i)}return i}function j(e,t,n){let o=null;function r(e){const t=e.data;return t.args[t.cbIdx]=function(){e.invoke.apply(this,arguments)},o.apply(t.target,t.args),e}o=z(e,t,e=>function(t,o){const s=n(t,o);return s.cbIdx>=0&&"function"==typeof o[s.cbIdx]?f(s.name,o[s.cbIdx],s,r):e.apply(t,o)})}function I(e,t){e[d("OriginalDelegate")]=t}let R=!1,M=!1;function x(){try{const e=_.navigator.userAgent;if(-1!==e.indexOf("MSIE ")||-1!==e.indexOf("Trident/"))return!0}catch(e){}return!1}function N(){if(R)return M;R=!0;try{const e=_.navigator.userAgent;-1===e.indexOf("MSIE ")&&-1===e.indexOf("Trident/")&&-1===e.indexOf("Edge/")||(M=!0)}catch(e){}return M}Zone.__load_patch("ZoneAwarePromise",(e,t,n)=>{const o=Object.getOwnPropertyDescriptor,r=Object.defineProperty,s=n.symbol,a=[],i=!0===e[s("DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION")],c=s("Promise"),l=s("then");n.onUnhandledError=e=>{if(n.showUncaughtError()){const t=e&&e.rejection;t?console.error("Unhandled Promise rejection:",t instanceof Error?t.message:t,"; Zone:",e.zone.name,"; Task:",e.task&&e.task.source,"; Value:",t,t instanceof Error?t.stack:void 0):console.error(e)}},n.microtaskDrainDone=()=>{for(;a.length;){const t=a.shift();try{t.zone.runGuarded(()=>{if(t.throwOriginal)throw t.rejection;throw t})}catch(e){h(e)}}};const u=s("unhandledPromiseRejectionHandler");function h(e){n.onUnhandledError(e);try{const n=t[u];"function"==typeof n&&n.call(this,e)}catch(o){}}function p(e){return e&&e.then}function f(e){return e}function d(e){return C.reject(e)}const g=s("state"),_=s("value"),k=s("finally"),m=s("parentPromiseValue"),y=s("parentPromiseState"),v=null,T=!0,b=!1;function E(e,t){return n=>{try{Z(e,t,n)}catch(o){Z(e,!1,o)}}}const w=s("currentTaskTrace");function Z(e,o,s){const c=function(){let e=!1;return function(t){return function(){e||(e=!0,t.apply(null,arguments))}}}();if(e===s)throw new TypeError("Promise resolved with itself");if(e[g]===v){let h=null;try{"object"!=typeof s&&"function"!=typeof s||(h=s&&s.then)}catch(u){return c(()=>{Z(e,!1,u)})(),e}if(o!==b&&s instanceof C&&s.hasOwnProperty(g)&&s.hasOwnProperty(_)&&s[g]!==v)D(s),Z(e,s[g],s[_]);else if(o!==b&&"function"==typeof h)try{h.call(s,c(E(e,o)),c(E(e,!1)))}catch(u){c(()=>{Z(e,!1,u)})()}else{e[g]=o;const c=e[_];if(e[_]=s,e[k]===k&&o===T&&(e[g]=e[y],e[_]=e[m]),o===b&&s instanceof Error){const e=t.currentTask&&t.currentTask.data&&t.currentTask.data.__creationTrace__;e&&r(s,w,{configurable:!0,enumerable:!1,writable:!0,value:e})}for(let t=0;t<c.length;)P(e,c[t++],c[t++],c[t++],c[t++]);if(0==c.length&&o==b){e[g]=0;let o=s;try{throw new Error("Uncaught (in promise): "+((l=s)&&l.toString===Object.prototype.toString?(l.constructor&&l.constructor.name||"")+": "+JSON.stringify(l):l?l.toString():Object.prototype.toString.call(l))+(s&&s.stack?"\n"+s.stack:""))}catch(u){o=u}i&&(o.throwOriginal=!0),o.rejection=s,o.promise=e,o.zone=t.current,o.task=t.currentTask,a.push(o),n.scheduleMicroTask()}}}var l;return e}const S=s("rejectionHandledHandler");function D(e){if(0===e[g]){try{const n=t[S];n&&"function"==typeof n&&n.call(this,{rejection:e[_],promise:e})}catch(n){}e[g]=b;for(let t=0;t<a.length;t++)e===a[t].promise&&a.splice(t,1)}}function P(e,t,n,o,r){D(e);const s=e[g],a=s?"function"==typeof o?o:f:"function"==typeof r?r:d;t.scheduleMicroTask("Promise.then",()=>{try{const o=e[_],r=!!n&&k===n[k];r&&(n[m]=o,n[y]=s);const i=t.run(a,void 0,r&&a!==d&&a!==f?[]:[o]);Z(n,!0,i)}catch(o){Z(n,!1,o)}},n)}const O=function(){};class C{static toString(){return"function ZoneAwarePromise() { [native code] }"}static resolve(e){return Z(new this(null),T,e)}static reject(e){return Z(new this(null),b,e)}static race(e){let t,n,o=new this((e,o)=>{t=e,n=o});function r(e){t(e)}function s(e){n(e)}for(let a of e)p(a)||(a=this.resolve(a)),a.then(r,s);return o}static all(e){return C.allWithCallback(e)}static allSettled(e){return(this&&this.prototype instanceof C?this:C).allWithCallback(e,{thenCallback:e=>({status:"fulfilled",value:e}),errorCallback:e=>({status:"rejected",reason:e})})}static allWithCallback(e,t){let n,o,r=new this((e,t)=>{n=e,o=t}),s=2,a=0;const i=[];for(let l of e){p(l)||(l=this.resolve(l));const e=a;try{l.then(o=>{i[e]=t?t.thenCallback(o):o,s--,0===s&&n(i)},r=>{t?(i[e]=t.errorCallback(r),s--,0===s&&n(i)):o(r)})}catch(c){o(c)}s++,a++}return s-=2,0===s&&n(i),r}constructor(e){const t=this;if(!(t instanceof C))throw new Error("Must be an instanceof Promise.");t[g]=v,t[_]=[];try{e&&e(E(t,T),E(t,b))}catch(n){Z(t,!1,n)}}get[Symbol.toStringTag](){return"Promise"}get[Symbol.species](){return C}then(e,n){let o=this.constructor[Symbol.species];o&&"function"==typeof o||(o=this.constructor||C);const r=new o(O),s=t.current;return this[g]==v?this[_].push(s,r,e,n):P(this,s,r,e,n),r}catch(e){return this.then(null,e)}finally(e){let n=this.constructor[Symbol.species];n&&"function"==typeof n||(n=C);const o=new n(O);o[k]=k;const r=t.current;return this[g]==v?this[_].push(r,o,e,e):P(this,r,o,e,e),o}}C.resolve=C.resolve,C.reject=C.reject,C.race=C.race,C.all=C.all;const j=e[c]=e.Promise;e.Promise=C;const I=s("thenPatched");function R(e){const t=e.prototype,n=o(t,"then");if(n&&(!1===n.writable||!n.configurable))return;const r=t.then;t[l]=r,e.prototype.then=function(e,t){return new C((e,t)=>{r.call(this,e,t)}).then(e,t)},e[I]=!0}return n.patchThen=R,j&&(R(j),z(e,"fetch",e=>{return t=e,function(e,n){let o=t.apply(e,n);if(o instanceof C)return o;let r=o.constructor;return r[I]||R(r),o};var t})),Promise[t.__symbol__("uncaughtPromiseErrors")]=a,C}),Zone.__load_patch("toString",e=>{const t=Function.prototype.toString,n=d("OriginalDelegate"),o=d("Promise"),r=d("Error"),s=function(){if("function"==typeof this){const s=this[n];if(s)return"function"==typeof s?t.call(s):Object.prototype.toString.call(s);if(this===Promise){const n=e[o];if(n)return t.call(n)}if(this===Error){const n=e[r];if(n)return t.call(n)}}return t.call(this)};s[n]=t,Function.prototype.toString=s;const a=Object.prototype.toString;Object.prototype.toString=function(){return"function"==typeof Promise&&this instanceof Promise?"[object Promise]":a.call(this)}});let L=!1;if("undefined"!=typeof window)try{const e=Object.defineProperty({},"passive",{get:function(){L=!0}});window.addEventListener("test",e,e),window.removeEventListener("test",e,e)}catch(he){L=!1}const A={useG:!0},H={},F={},q=new RegExp("^"+h+"(\\w+)(true|false)$"),G=d("propagationStopped");function B(e,t){const n=(t?t(e):e)+u,o=(t?t(e):e)+l,r=h+n,s=h+o;H[e]={},H[e].false=r,H[e].true=s}function W(e,t,o){const r=o&&o.add||s,i=o&&o.rm||a,c=o&&o.listeners||"eventListeners",p=o&&o.rmAll||"removeAllListeners",f=d(r),g="."+r+":",_=function(e,t,n){if(e.isRemoved)return;const o=e.callback;"object"==typeof o&&o.handleEvent&&(e.callback=e=>o.handleEvent(e),e.originalDelegate=o),e.invoke(e,t,[n]);const r=e.options;r&&"object"==typeof r&&r.once&&t[i].call(t,n.type,e.originalDelegate?e.originalDelegate:e.callback,r)},k=function(t){if(!(t=t||e.event))return;const n=this||t.target||e,o=n[H[t.type].false];if(o)if(1===o.length)_(o[0],n,t);else{const e=o.slice();for(let o=0;o<e.length&&(!t||!0!==t[G]);o++)_(e[o],n,t)}},m=function(t){if(!(t=t||e.event))return;const n=this||t.target||e,o=n[H[t.type].true];if(o)if(1===o.length)_(o[0],n,t);else{const e=o.slice();for(let o=0;o<e.length&&(!t||!0!==t[G]);o++)_(e[o],n,t)}};function y(t,o){if(!t)return!1;let s=!0;o&&void 0!==o.useG&&(s=o.useG);const a=o&&o.vh;let _=!0;o&&void 0!==o.chkDup&&(_=o.chkDup);let y=!1;o&&void 0!==o.rt&&(y=o.rt);let v=t;for(;v&&!v.hasOwnProperty(r);)v=n(v);if(!v&&t[r]&&(v=t),!v)return!1;if(v[f])return!1;const T=o&&o.eventNameToString,E={},w=v[f]=v[r],Z=v[d(i)]=v[i],S=v[d(c)]=v[c],D=v[d(p)]=v[p];let P;function O(e,t){return!L&&"object"==typeof e&&e?!!e.capture:L&&t?"boolean"==typeof e?{capture:e,passive:!0}:e?"object"==typeof e&&!1!==e.passive?Object.assign(Object.assign({},e),{passive:!0}):e:{passive:!0}:e}o&&o.prepend&&(P=v[d(o.prepend)]=v[o.prepend]);const C=s?function(e){if(!E.isExisting)return w.call(E.target,E.eventName,E.capture?m:k,E.options)}:function(e){return w.call(E.target,E.eventName,e.invoke,E.options)},z=s?function(e){if(!e.isRemoved){const t=H[e.eventName];let n;t&&(n=t[e.capture?l:u]);const o=n&&e.target[n];if(o)for(let r=0;r<o.length;r++)if(o[r]===e){o.splice(r,1),e.isRemoved=!0,0===o.length&&(e.allRemoved=!0,e.target[n]=null);break}}if(e.allRemoved)return Z.call(e.target,e.eventName,e.capture?m:k,e.options)}:function(e){return Z.call(e.target,e.eventName,e.invoke,e.options)},j=o&&o.diff?o.diff:function(e,t){const n=typeof t;return"function"===n&&e.callback===t||"object"===n&&e.originalDelegate===t},R=Zone[d("UNPATCHED_EVENTS")],M=e[d("PASSIVE_EVENTS")],x=function(t,n,r,i,c=!1,h=!1){return function(){const p=this||e;let f=arguments[0];o&&o.transferEventName&&(f=o.transferEventName(f));let d=arguments[1];if(!d)return t.apply(this,arguments);if(b&&"uncaughtException"===f)return t.apply(this,arguments);let g=!1;if("function"!=typeof d){if(!d.handleEvent)return t.apply(this,arguments);g=!0}if(a&&!a(t,d,p,arguments))return;const k=L&&!!M&&-1!==M.indexOf(f),m=O(arguments[2],k);if(R)for(let e=0;e<R.length;e++)if(f===R[e])return k?t.call(p,f,d,m):t.apply(this,arguments);const y=!!m&&("boolean"==typeof m||m.capture),v=!(!m||"object"!=typeof m)&&m.once,w=Zone.current;let Z=H[f];Z||(B(f,T),Z=H[f]);const S=Z[y?l:u];let D,P=p[S],C=!1;if(P){if(C=!0,_)for(let e=0;e<P.length;e++)if(j(P[e],d))return}else P=p[S]=[];const z=p.constructor.name,I=F[z];I&&(D=I[f]),D||(D=z+n+(T?T(f):f)),E.options=m,v&&(E.options.once=!1),E.target=p,E.capture=y,E.eventName=f,E.isExisting=C;const x=s?A:void 0;x&&(x.taskData=E);const N=w.scheduleEventTask(D,d,x,r,i);return E.target=null,x&&(x.taskData=null),v&&(m.once=!0),(L||"boolean"!=typeof N.options)&&(N.options=m),N.target=p,N.capture=y,N.eventName=f,g&&(N.originalDelegate=d),h?P.unshift(N):P.push(N),c?p:void 0}};return v[r]=x(w,g,C,z,y),P&&(v.prependListener=x(P,".prependListener:",function(e){return P.call(E.target,E.eventName,e.invoke,E.options)},z,y,!0)),v[i]=function(){const t=this||e;let n=arguments[0];o&&o.transferEventName&&(n=o.transferEventName(n));const r=arguments[2],s=!!r&&("boolean"==typeof r||r.capture),i=arguments[1];if(!i)return Z.apply(this,arguments);if(a&&!a(Z,i,t,arguments))return;const c=H[n];let p;c&&(p=c[s?l:u]);const f=p&&t[p];if(f)for(let e=0;e<f.length;e++){const o=f[e];if(j(o,i))return f.splice(e,1),o.isRemoved=!0,0===f.length&&(o.allRemoved=!0,t[p]=null,"string"==typeof n)&&(t[h+"ON_PROPERTY"+n]=null),o.zone.cancelTask(o),y?t:void 0}return Z.apply(this,arguments)},v[c]=function(){const t=this||e;let n=arguments[0];o&&o.transferEventName&&(n=o.transferEventName(n));const r=[],s=U(t,T?T(n):n);for(let e=0;e<s.length;e++){const t=s[e];r.push(t.originalDelegate?t.originalDelegate:t.callback)}return r},v[p]=function(){const t=this||e;let n=arguments[0];if(n){o&&o.transferEventName&&(n=o.transferEventName(n));const e=H[n];if(e){const o=t[e.false],r=t[e.true];if(o){const e=o.slice();for(let t=0;t<e.length;t++){const o=e[t];this[i].call(this,n,o.originalDelegate?o.originalDelegate:o.callback,o.options)}}if(r){const e=r.slice();for(let t=0;t<e.length;t++){const o=e[t];this[i].call(this,n,o.originalDelegate?o.originalDelegate:o.callback,o.options)}}}}else{const e=Object.keys(t);for(let t=0;t<e.length;t++){const n=q.exec(e[t]);let o=n&&n[1];o&&"removeListener"!==o&&this[p].call(this,o)}this[p].call(this,"removeListener")}if(y)return this},I(v[r],w),I(v[i],Z),D&&I(v[p],D),S&&I(v[c],S),!0}let v=[];for(let n=0;n<t.length;n++)v[n]=y(t[n],o);return v}function U(e,t){if(!t){const n=[];for(let o in e){const r=q.exec(o);let s=r&&r[1];if(s&&(!t||s===t)){const t=e[o];if(t)for(let e=0;e<t.length;e++)n.push(t[e])}}return n}let n=H[t];n||(B(t),n=H[t]);const o=e[n.false],r=e[n.true];return o?r?o.concat(r):o.slice():r?r.slice():[]}function V(e,t){const n=e.Event;n&&n.prototype&&t.patchMethod(n.prototype,"stopImmediatePropagation",e=>function(t,n){t[G]=!0,e&&e.apply(t,n)})}function $(e,t,n,o,r){const s=Zone.__symbol__(o);if(t[s])return;const a=t[s]=t[o];t[o]=function(s,i,c){return i&&i.prototype&&r.forEach(function(t){const r=`${n}.${o}::`+t,s=i.prototype;if(s.hasOwnProperty(t)){const n=e.ObjectGetOwnPropertyDescriptor(s,t);n&&n.value?(n.value=e.wrapWithCurrentZone(n.value,r),e._redefineProperty(i.prototype,t,n)):s[t]&&(s[t]=e.wrapWithCurrentZone(s[t],r))}else s[t]&&(s[t]=e.wrapWithCurrentZone(s[t],r))}),a.call(t,s,i,c)},e.attachOriginToPatched(t[o],a)}const X=["absolutedeviceorientation","afterinput","afterprint","appinstalled","beforeinstallprompt","beforeprint","beforeunload","devicelight","devicemotion","deviceorientation","deviceorientationabsolute","deviceproximity","hashchange","languagechange","message","mozbeforepaint","offline","online","paint","pageshow","pagehide","popstate","rejectionhandled","storage","unhandledrejection","unload","userproximity","vrdisplayconnected","vrdisplaydisconnected","vrdisplaypresentchange"],Y=["encrypted","waitingforkey","msneedkey","mozinterruptbegin","mozinterruptend"],J=["load"],K=["blur","error","focus","load","resize","scroll","messageerror"],Q=["bounce","finish","start"],ee=["loadstart","progress","abort","error","load","progress","timeout","loadend","readystatechange"],te=["upgradeneeded","complete","abort","success","error","blocked","versionchange","close"],ne=["close","error","open","message"],oe=["error","message"],re=["abort","animationcancel","animationend","animationiteration","auxclick","beforeinput","blur","cancel","canplay","canplaythrough","change","compositionstart","compositionupdate","compositionend","cuechange","click","close","contextmenu","curechange","dblclick","drag","dragend","dragenter","dragexit","dragleave","dragover","drop","durationchange","emptied","ended","error","focus","focusin","focusout","gotpointercapture","input","invalid","keydown","keypress","keyup","load","loadstart","loadeddata","loadedmetadata","lostpointercapture","mousedown","mouseenter","mouseleave","mousemove","mouseout","mouseover","mouseup","mousewheel","orientationchange","pause","play","playing","pointercancel","pointerdown","pointerenter","pointerleave","pointerlockchange","mozpointerlockchange","webkitpointerlockerchange","pointerlockerror","mozpointerlockerror","webkitpointerlockerror","pointermove","pointout","pointerover","pointerup","progress","ratechange","reset","resize","scroll","seeked","seeking","select","selectionchange","selectstart","show","sort","stalled","submit","suspend","timeupdate","volumechange","touchcancel","touchmove","touchstart","touchend","transitioncancel","transitionend","waiting","wheel"].concat(["webglcontextrestored","webglcontextlost","webglcontextcreationerror"],["autocomplete","autocompleteerror"],["toggle"],["afterscriptexecute","beforescriptexecute","DOMContentLoaded","freeze","fullscreenchange","mozfullscreenchange","webkitfullscreenchange","msfullscreenchange","fullscreenerror","mozfullscreenerror","webkitfullscreenerror","msfullscreenerror","readystatechange","visibilitychange","resume"],X,["beforecopy","beforecut","beforepaste","copy","cut","paste","dragstart","loadend","animationstart","search","transitionrun","transitionstart","webkitanimationend","webkitanimationiteration","webkitanimationstart","webkittransitionend"],["activate","afterupdate","ariarequest","beforeactivate","beforedeactivate","beforeeditfocus","beforeupdate","cellchange","controlselect","dataavailable","datasetchanged","datasetcomplete","errorupdate","filterchange","layoutcomplete","losecapture","move","moveend","movestart","propertychange","resizeend","resizestart","rowenter","rowexit","rowsdelete","rowsinserted","command","compassneedscalibration","deactivate","help","mscontentzoom","msmanipulationstatechanged","msgesturechange","msgesturedoubletap","msgestureend","msgesturehold","msgesturestart","msgesturetap","msgotpointercapture","msinertiastart","mslostpointercapture","mspointercancel","mspointerdown","mspointerenter","mspointerhover","mspointerleave","mspointermove","mspointerout","mspointerover","mspointerup","pointerout","mssitemodejumplistitemremoved","msthumbnailclick","stop","storagecommit"]);function se(e,t,n){if(!n||0===n.length)return t;const o=n.filter(t=>t.target===e);if(!o||0===o.length)return t;const r=o[0].ignoreProperties;return t.filter(e=>-1===r.indexOf(e))}function ae(e,t,n,o){e&&P(e,se(e,t,n),o)}function ie(e,t){if(b&&!w)return;if(Zone[e.symbol("patchEvents")])return;const o="undefined"!=typeof WebSocket,r=t.__Zone_ignore_on_properties;if(E){const e=window,t=x()?[{target:e,ignoreProperties:["error"]}]:[];ae(e,re.concat(["messageerror"]),r?r.concat(t):r,n(e)),ae(Document.prototype,re,r),void 0!==e.SVGElement&&ae(e.SVGElement.prototype,re,r),ae(Element.prototype,re,r),ae(HTMLElement.prototype,re,r),ae(HTMLMediaElement.prototype,Y,r),ae(HTMLFrameSetElement.prototype,X.concat(K),r),ae(HTMLBodyElement.prototype,X.concat(K),r),ae(HTMLFrameElement.prototype,J,r),ae(HTMLIFrameElement.prototype,J,r);const o=e.HTMLMarqueeElement;o&&ae(o.prototype,Q,r);const s=e.Worker;s&&ae(s.prototype,oe,r)}const s=t.XMLHttpRequest;s&&ae(s.prototype,ee,r);const a=t.XMLHttpRequestEventTarget;a&&ae(a&&a.prototype,ee,r),"undefined"!=typeof IDBIndex&&(ae(IDBIndex.prototype,te,r),ae(IDBRequest.prototype,te,r),ae(IDBOpenDBRequest.prototype,te,r),ae(IDBDatabase.prototype,te,r),ae(IDBTransaction.prototype,te,r),ae(IDBCursor.prototype,te,r)),o&&ae(WebSocket.prototype,ne,r)}Zone.__load_patch("util",(n,i,c)=>{c.patchOnProperties=P,c.patchMethod=z,c.bindArguments=y,c.patchMacroTask=j;const f=i.__symbol__("BLACK_LISTED_EVENTS"),d=i.__symbol__("UNPATCHED_EVENTS");n[d]&&(n[f]=n[d]),n[f]&&(i[f]=i[d]=n[f]),c.patchEventPrototype=V,c.patchEventTarget=W,c.isIEOrEdge=N,c.ObjectDefineProperty=t,c.ObjectGetOwnPropertyDescriptor=e,c.ObjectCreate=o,c.ArraySlice=r,c.patchClass=C,c.wrapWithCurrentZone=p,c.filterProperties=se,c.attachOriginToPatched=I,c._redefineProperty=Object.defineProperty,c.patchCallbacks=$,c.getGlobalObjects=()=>({globalSources:F,zoneSymbolEventNames:H,eventNames:re,isBrowser:E,isMix:w,isNode:b,TRUE_STR:l,FALSE_STR:u,ZONE_SYMBOL_PREFIX:h,ADD_EVENT_LISTENER_STR:s,REMOVE_EVENT_LISTENER_STR:a})});const ce=d("zoneTask");function le(e,t,n,o){let r=null,s=null;n+=o;const a={};function i(t){const n=t.data;return n.args[0]=function(){return t.invoke.apply(this,arguments)},n.handleId=r.apply(e,n.args),t}function c(t){return s.call(e,t.data.handleId)}r=z(e,t+=o,n=>function(r,s){if("function"==typeof s[0]){const e={isPeriodic:"Interval"===o,delay:"Timeout"===o||"Interval"===o?s[1]||0:void 0,args:s},n=s[0];s[0]=function(){try{return n.apply(this,arguments)}finally{e.isPeriodic||("number"==typeof e.handleId?delete a[e.handleId]:e.handleId&&(e.handleId[ce]=null))}};const r=f(t,s[0],e,i,c);if(!r)return r;const l=r.data.handleId;return"number"==typeof l?a[l]=r:l&&(l[ce]=r),l&&l.ref&&l.unref&&"function"==typeof l.ref&&"function"==typeof l.unref&&(r.ref=l.ref.bind(l),r.unref=l.unref.bind(l)),"number"==typeof l||l?l:r}return n.apply(e,s)}),s=z(e,n,t=>function(n,o){const r=o[0];let s;"number"==typeof r?s=a[r]:(s=r&&r[ce],s||(s=r)),s&&"string"==typeof s.type?"notScheduled"!==s.state&&(s.cancelFn&&s.data.isPeriodic||0===s.runCount)&&("number"==typeof r?delete a[r]:r&&(r[ce]=null),s.zone.cancelTask(s)):t.apply(e,o)})}function ue(e,t){if(Zone[t.symbol("patchEventTarget")])return;const{eventNames:n,zoneSymbolEventNames:o,TRUE_STR:r,FALSE_STR:s,ZONE_SYMBOL_PREFIX:a}=t.getGlobalObjects();for(let c=0;c<n.length;c++){const e=n[c],t=a+(e+s),i=a+(e+r);o[e]={},o[e][s]=t,o[e][r]=i}const i=e.EventTarget;return i&&i.prototype?(t.patchEventTarget(e,[i&&i.prototype]),!0):void 0}Zone.__load_patch("legacy",e=>{const t=e[Zone.__symbol__("legacyPatch")];t&&t()}),Zone.__load_patch("queueMicrotask",(e,t,n)=>{n.patchMethod(e,"queueMicrotask",e=>function(e,n){t.current.scheduleMicroTask("queueMicrotask",n[0])})}),Zone.__load_patch("timers",e=>{const t="set",n="clear";le(e,t,n,"Timeout"),le(e,t,n,"Interval"),le(e,t,n,"Immediate")}),Zone.__load_patch("requestAnimationFrame",e=>{le(e,"request","cancel","AnimationFrame"),le(e,"mozRequest","mozCancel","AnimationFrame"),le(e,"webkitRequest","webkitCancel","AnimationFrame")}),Zone.__load_patch("blocking",(e,t)=>{const n=["alert","prompt","confirm"];for(let o=0;o<n.length;o++)z(e,n[o],(n,o,r)=>function(o,s){return t.current.run(n,e,s,r)})}),Zone.__load_patch("EventTarget",(e,t,n)=>{!function(e,t){t.patchEventPrototype(e,t)}(e,n),ue(e,n);const o=e.XMLHttpRequestEventTarget;o&&o.prototype&&n.patchEventTarget(e,[o.prototype])}),Zone.__load_patch("MutationObserver",(e,t,n)=>{C("MutationObserver"),C("WebKitMutationObserver")}),Zone.__load_patch("IntersectionObserver",(e,t,n)=>{C("IntersectionObserver")}),Zone.__load_patch("FileReader",(e,t,n)=>{C("FileReader")}),Zone.__load_patch("on_property",(e,t,n)=>{ie(n,e)}),Zone.__load_patch("customElements",(e,t,n)=>{!function(e,t){const{isBrowser:n,isMix:o}=t.getGlobalObjects();(n||o)&&e.customElements&&"customElements"in e&&t.patchCallbacks(t,e.customElements,"customElements","define",["connectedCallback","disconnectedCallback","adoptedCallback","attributeChangedCallback"])}(e,n)}),Zone.__load_patch("XHR",(e,t)=>{!function(e){const u=e.XMLHttpRequest;if(!u)return;const h=u.prototype;let p=h[i],g=h[c];if(!p){const t=e.XMLHttpRequestEventTarget;if(t){const e=t.prototype;p=e[i],g=e[c]}}const _="readystatechange",k="scheduled";function m(e){const o=e.data,a=o.target;a[s]=!1,a[l]=!1;const u=a[r];p||(p=a[i],g=a[c]),u&&g.call(a,_,u);const h=a[r]=()=>{if(a.readyState===a.DONE)if(!o.aborted&&a[s]&&e.state===k){const n=a[t.__symbol__("loadfalse")];if(0!==a.status&&n&&n.length>0){const r=e.invoke;e.invoke=function(){const n=a[t.__symbol__("loadfalse")];for(let t=0;t<n.length;t++)n[t]===e&&n.splice(t,1);o.aborted||e.state!==k||r.call(e)},n.push(e)}else e.invoke()}else o.aborted||!1!==a[s]||(a[l]=!0)};return p.call(a,_,h),a[n]||(a[n]=e),w.apply(a,o.args),a[s]=!0,e}function y(){}function v(e){const t=e.data;return t.aborted=!0,Z.apply(t.target,t.args)}const T=z(h,"open",()=>function(e,t){return e[o]=0==t[2],e[a]=t[1],T.apply(e,t)}),b=d("fetchTaskAborting"),E=d("fetchTaskScheduling"),w=z(h,"send",()=>function(e,n){if(!0===t.current[E])return w.apply(e,n);if(e[o])return w.apply(e,n);{const t={target:e,url:e[a],isPeriodic:!1,args:n,aborted:!1},o=f("XMLHttpRequest.send",y,t,m,v);e&&!0===e[l]&&!t.aborted&&o.state===k&&o.invoke()}}),Z=z(h,"abort",()=>function(e,o){const r=e[n];if(r&&"string"==typeof r.type){if(null==r.cancelFn||r.data&&r.data.aborted)return;r.zone.cancelTask(r)}else if(!0===t.current[b])return Z.apply(e,o)})}(e);const n=d("xhrTask"),o=d("xhrSync"),r=d("xhrListener"),s=d("xhrScheduled"),a=d("xhrURL"),l=d("xhrErrorBeforeScheduled")}),Zone.__load_patch("geolocation",t=>{t.navigator&&t.navigator.geolocation&&function(t,n){const o=t.constructor.name;for(let r=0;r<n.length;r++){const s=n[r],a=t[s];if(a){if(!v(e(t,s)))continue;t[s]=(e=>{const t=function(){return e.apply(this,y(arguments,o+"."+s))};return I(t,e),t})(a)}}}(t.navigator.geolocation,["getCurrentPosition","watchPosition"])}),Zone.__load_patch("PromiseRejectionEvent",(e,t)=>{function n(t){return function(n){U(e,t).forEach(o=>{const r=e.PromiseRejectionEvent;if(r){const e=new r(t,{promise:n.promise,reason:n.rejection});o.invoke(e)}})}}e.PromiseRejectionEvent&&(t[d("unhandledPromiseRejectionHandler")]=n("unhandledrejection"),t[d("rejectionHandledHandler")]=n("rejectionhandled"))})},448:(e,t,n)=>{"use strict";n(167)}},e=>{"use strict";e(e.s=448)}]);(self.webpackChunkng_elements_example=self.webpackChunkng_elements_example||[]).push([[179],{120:(t,e,n)=>{"use strict";function r(t){return"function"==typeof t}let s=!1;const i={Promise:void 0,set useDeprecatedSynchronousErrorHandling(t){if(t){const t=new Error;console.warn("DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n"+t.stack)}else s&&console.log("RxJS: Back to a better error behavior. Thank you. <3");s=t},get useDeprecatedSynchronousErrorHandling(){return s}};function o(t){setTimeout(()=>{throw t},0)}const a={closed:!0,next(t){},error(t){if(i.useDeprecatedSynchronousErrorHandling)throw t;o(t)},complete(){}},c=(()=>Array.isArray||(t=>t&&"number"==typeof t.length))();function l(t){return null!==t&&"object"==typeof t}const u=(()=>{function t(t){return Error.call(this),this.message=t?`${t.length} errors occurred during unsubscription:\n${t.map((t,e)=>`${e+1}) ${t.toString()}`).join("\n  ")}`:"",this.name="UnsubscriptionError",this.errors=t,this}return t.prototype=Object.create(Error.prototype),t})();let h=(()=>{class t{constructor(t){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,t&&(this._ctorUnsubscribe=!0,this._unsubscribe=t)}unsubscribe(){let e;if(this.closed)return;let{_parentOrParents:n,_ctorUnsubscribe:s,_unsubscribe:i,_subscriptions:o}=this;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,n instanceof t)n.remove(this);else if(null!==n)for(let t=0;t<n.length;++t)n[t].remove(this);if(r(i)){s&&(this._unsubscribe=void 0);try{i.call(this)}catch(a){e=a instanceof u?d(a.errors):[a]}}if(c(o)){let t=-1,n=o.length;for(;++t<n;){const n=o[t];if(l(n))try{n.unsubscribe()}catch(a){e=e||[],a instanceof u?e=e.concat(d(a.errors)):e.push(a)}}}if(e)throw new u(e)}add(e){let n=e;if(!e)return t.EMPTY;switch(typeof e){case"function":n=new t(e);case"object":if(n===this||n.closed||"function"!=typeof n.unsubscribe)return n;if(this.closed)return n.unsubscribe(),n;if(!(n instanceof t)){const e=n;n=new t,n._subscriptions=[e]}break;default:throw new Error("unrecognized teardown "+e+" added to Subscription.")}let{_parentOrParents:r}=n;if(null===r)n._parentOrParents=this;else if(r instanceof t){if(r===this)return n;n._parentOrParents=[r,this]}else{if(-1!==r.indexOf(this))return n;r.push(this)}const s=this._subscriptions;return null===s?this._subscriptions=[n]:s.push(n),n}remove(t){const e=this._subscriptions;if(e){const n=e.indexOf(t);-1!==n&&e.splice(n,1)}}}return t.EMPTY=function(t){return t.closed=!0,t}(new t),t})();function d(t){return t.reduce((t,e)=>t.concat(e instanceof u?e.errors:e),[])}const p=(()=>"function"==typeof Symbol?Symbol("rxSubscriber"):"@@rxSubscriber_"+Math.random())();class f extends h{constructor(t,e,n){switch(super(),this.syncErrorValue=null,this.syncErrorThrown=!1,this.syncErrorThrowable=!1,this.isStopped=!1,arguments.length){case 0:this.destination=a;break;case 1:if(!t){this.destination=a;break}if("object"==typeof t){t instanceof f?(this.syncErrorThrowable=t.syncErrorThrowable,this.destination=t,t.add(this)):(this.syncErrorThrowable=!0,this.destination=new g(this,t));break}default:this.syncErrorThrowable=!0,this.destination=new g(this,t,e,n)}}[p](){return this}static create(t,e,n){const r=new f(t,e,n);return r.syncErrorThrowable=!1,r}next(t){this.isStopped||this._next(t)}error(t){this.isStopped||(this.isStopped=!0,this._error(t))}complete(){this.isStopped||(this.isStopped=!0,this._complete())}unsubscribe(){this.closed||(this.isStopped=!0,super.unsubscribe())}_next(t){this.destination.next(t)}_error(t){this.destination.error(t),this.unsubscribe()}_complete(){this.destination.complete(),this.unsubscribe()}_unsubscribeAndRecycle(){const{_parentOrParents:t}=this;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=t,this}}class g extends f{constructor(t,e,n,s){let i;super(),this._parentSubscriber=t;let o=this;r(e)?i=e:e&&(i=e.next,n=e.error,s=e.complete,e!==a&&(o=Object.create(e),r(o.unsubscribe)&&this.add(o.unsubscribe.bind(o)),o.unsubscribe=this.unsubscribe.bind(this))),this._context=o,this._next=i,this._error=n,this._complete=s}next(t){if(!this.isStopped&&this._next){const{_parentSubscriber:e}=this;i.useDeprecatedSynchronousErrorHandling&&e.syncErrorThrowable?this.__tryOrSetError(e,this._next,t)&&this.unsubscribe():this.__tryOrUnsub(this._next,t)}}error(t){if(!this.isStopped){const{_parentSubscriber:e}=this,{useDeprecatedSynchronousErrorHandling:n}=i;if(this._error)n&&e.syncErrorThrowable?(this.__tryOrSetError(e,this._error,t),this.unsubscribe()):(this.__tryOrUnsub(this._error,t),this.unsubscribe());else if(e.syncErrorThrowable)n?(e.syncErrorValue=t,e.syncErrorThrown=!0):o(t),this.unsubscribe();else{if(this.unsubscribe(),n)throw t;o(t)}}}complete(){if(!this.isStopped){const{_parentSubscriber:t}=this;if(this._complete){const e=()=>this._complete.call(this._context);i.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?(this.__tryOrSetError(t,e),this.unsubscribe()):(this.__tryOrUnsub(e),this.unsubscribe())}else this.unsubscribe()}}__tryOrUnsub(t,e){try{t.call(this._context,e)}catch(n){if(this.unsubscribe(),i.useDeprecatedSynchronousErrorHandling)throw n;o(n)}}__tryOrSetError(t,e,n){if(!i.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{e.call(this._context,n)}catch(r){return i.useDeprecatedSynchronousErrorHandling?(t.syncErrorValue=r,t.syncErrorThrown=!0,!0):(o(r),!0)}return!1}_unsubscribe(){const{_parentSubscriber:t}=this;this._context=null,this._parentSubscriber=null,t.unsubscribe()}}const m=(()=>"function"==typeof Symbol&&Symbol.observable||"@@observable")();function y(t){return t}let v=(()=>{class t{constructor(t){this._isScalar=!1,t&&(this._subscribe=t)}lift(e){const n=new t;return n.source=this,n.operator=e,n}subscribe(t,e,n){const{operator:r}=this,s=function(t,e,n){if(t){if(t instanceof f)return t;if(t[p])return t[p]()}return t||e||n?new f(t,e,n):new f(a)}(t,e,n);if(s.add(r?r.call(s,this.source):this.source||i.useDeprecatedSynchronousErrorHandling&&!s.syncErrorThrowable?this._subscribe(s):this._trySubscribe(s)),i.useDeprecatedSynchronousErrorHandling&&s.syncErrorThrowable&&(s.syncErrorThrowable=!1,s.syncErrorThrown))throw s.syncErrorValue;return s}_trySubscribe(t){try{return this._subscribe(t)}catch(e){i.useDeprecatedSynchronousErrorHandling&&(t.syncErrorThrown=!0,t.syncErrorValue=e),function(t){for(;t;){const{closed:e,destination:n,isStopped:r}=t;if(e||r)return!1;t=n&&n instanceof f?n:null}return!0}(t)?t.error(e):console.warn(e)}}forEach(t,e){return new(e=b(e))((e,n)=>{let r;r=this.subscribe(e=>{try{t(e)}catch(s){n(s),r&&r.unsubscribe()}},n,e)})}_subscribe(t){const{source:e}=this;return e&&e.subscribe(t)}[m](){return this}pipe(...t){return 0===t.length?this:(0===(e=t).length?y:1===e.length?e[0]:function(t){return e.reduce((t,e)=>e(t),t)})(this);var e}toPromise(t){return new(t=b(t))((t,e)=>{let n;this.subscribe(t=>n=t,t=>e(t),()=>t(n))})}}return t.create=e=>new t(e),t})();function b(t){if(t||(t=i.Promise||Promise),!t)throw new Error("no Promise impl found");return t}const C=(()=>{function t(){return Error.call(this),this.message="object unsubscribed",this.name="ObjectUnsubscribedError",this}return t.prototype=Object.create(Error.prototype),t})();class w extends h{constructor(t,e){super(),this.subject=t,this.subscriber=e,this.closed=!1}unsubscribe(){if(this.closed)return;this.closed=!0;const t=this.subject,e=t.observers;if(this.subject=null,!e||0===e.length||t.isStopped||t.closed)return;const n=e.indexOf(this.subscriber);-1!==n&&e.splice(n,1)}}class _ extends f{constructor(t){super(t),this.destination=t}}let D=(()=>{class t extends v{constructor(){super(),this.observers=[],this.closed=!1,this.isStopped=!1,this.hasError=!1,this.thrownError=null}[p](){return new _(this)}lift(t){const e=new E(this,this);return e.operator=t,e}next(t){if(this.closed)throw new C;if(!this.isStopped){const{observers:e}=this,n=e.length,r=e.slice();for(let s=0;s<n;s++)r[s].next(t)}}error(t){if(this.closed)throw new C;this.hasError=!0,this.thrownError=t,this.isStopped=!0;const{observers:e}=this,n=e.length,r=e.slice();for(let s=0;s<n;s++)r[s].error(t);this.observers.length=0}complete(){if(this.closed)throw new C;this.isStopped=!0;const{observers:t}=this,e=t.length,n=t.slice();for(let r=0;r<e;r++)n[r].complete();this.observers.length=0}unsubscribe(){this.isStopped=!0,this.closed=!0,this.observers=null}_trySubscribe(t){if(this.closed)throw new C;return super._trySubscribe(t)}_subscribe(t){if(this.closed)throw new C;return this.hasError?(t.error(this.thrownError),h.EMPTY):this.isStopped?(t.complete(),h.EMPTY):(this.observers.push(t),new w(this,t))}asObservable(){const t=new v;return t.source=this,t}}return t.create=(t,e)=>new E(t,e),t})();class E extends D{constructor(t,e){super(),this.destination=t,this.source=e}next(t){const{destination:e}=this;e&&e.next&&e.next(t)}error(t){const{destination:e}=this;e&&e.error&&this.destination.error(t)}complete(){const{destination:t}=this;t&&t.complete&&this.destination.complete()}_subscribe(t){const{source:e}=this;return e?this.source.subscribe(t):h.EMPTY}}function S(t){return t&&"function"==typeof t.schedule}function x(t,e){return function(n){if("function"!=typeof t)throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");return n.lift(new A(t,e))}}class A{constructor(t,e){this.project=t,this.thisArg=e}call(t,e){return e.subscribe(new T(t,this.project,this.thisArg))}}class T extends f{constructor(t,e,n){super(t),this.project=e,this.count=0,this.thisArg=n||this}_next(t){let e;try{e=this.project.call(this.thisArg,t,this.count++)}catch(n){return void this.destination.error(n)}this.destination.next(e)}}const k=t=>e=>{for(let n=0,r=t.length;n<r&&!e.closed;n++)e.next(t[n]);e.complete()};function F(){return"function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator"}const I=F(),O=t=>t&&"number"==typeof t.length&&"function"!=typeof t;function P(t){return!!t&&"function"!=typeof t.subscribe&&"function"==typeof t.then}const R=t=>{if(t&&"function"==typeof t[m])return n=t,t=>{const e=n[m]();if("function"!=typeof e.subscribe)throw new TypeError("Provided object does not correctly implement Symbol.observable");return e.subscribe(t)};if(O(t))return k(t);if(P(t))return(t=>e=>(t.then(t=>{e.closed||(e.next(t),e.complete())},t=>e.error(t)).then(null,o),e))(t);if(t&&"function"==typeof t[I])return e=t,t=>{const n=e[I]();for(;;){let e;try{e=n.next()}catch(r){return t.error(r),t}if(e.done){t.complete();break}if(t.next(e.value),t.closed)break}return"function"==typeof n.return&&t.add(()=>{n.return&&n.return()}),t};{const e=l(t)?"an invalid object":`'${t}'`;throw new TypeError(`You provided ${e} where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.`)}var e,n};function L(t,e){return new v(n=>{const r=new h;let s=0;return r.add(e.schedule(function(){s!==t.length?(n.next(t[s++]),n.closed||r.add(this.schedule())):n.complete()})),r})}function B(t,e){return e?function(t,e){if(null!=t){if(function(t){return t&&"function"==typeof t[m]}(t))return function(t,e){return new v(n=>{const r=new h;return r.add(e.schedule(()=>{const s=t[m]();r.add(s.subscribe({next(t){r.add(e.schedule(()=>n.next(t)))},error(t){r.add(e.schedule(()=>n.error(t)))},complete(){r.add(e.schedule(()=>n.complete()))}}))})),r})}(t,e);if(P(t))return function(t,e){return new v(n=>{const r=new h;return r.add(e.schedule(()=>t.then(t=>{r.add(e.schedule(()=>{n.next(t),r.add(e.schedule(()=>n.complete()))}))},t=>{r.add(e.schedule(()=>n.error(t)))}))),r})}(t,e);if(O(t))return L(t,e);if(function(t){return t&&"function"==typeof t[I]}(t)||"string"==typeof t)return function(t,e){if(!t)throw new Error("Iterable cannot be null");return new v(n=>{const r=new h;let s;return r.add(()=>{s&&"function"==typeof s.return&&s.return()}),r.add(e.schedule(()=>{s=t[I](),r.add(e.schedule(function(){if(n.closed)return;let t,e;try{const n=s.next();t=n.value,e=n.done}catch(r){return void n.error(r)}e?n.complete():(n.next(t),this.schedule())}))})),r})}(t,e)}throw new TypeError((null!==t&&typeof t||t)+" is not observable")}(t,e):t instanceof v?t:new v(R(t))}class j extends f{constructor(t){super(),this.parent=t}_next(t){this.parent.notifyNext(t)}_error(t){this.parent.notifyError(t),this.unsubscribe()}_complete(){this.parent.notifyComplete(),this.unsubscribe()}}class M extends f{notifyNext(t){this.destination.next(t)}notifyError(t){this.destination.error(t)}notifyComplete(){this.destination.complete()}}function N(t,e){if(e.closed)return;if(t instanceof v)return t.subscribe(e);let n;try{n=R(t)(e)}catch(r){e.error(r)}return n}function H(t,e,n=Number.POSITIVE_INFINITY){return"function"==typeof e?r=>r.pipe(H((n,r)=>B(t(n,r)).pipe(x((t,s)=>e(n,t,r,s))),n)):("number"==typeof e&&(n=e),e=>e.lift(new V(t,n)))}class V{constructor(t,e=Number.POSITIVE_INFINITY){this.project=t,this.concurrent=e}call(t,e){return e.subscribe(new z(t,this.project,this.concurrent))}}class z extends M{constructor(t,e,n=Number.POSITIVE_INFINITY){super(t),this.project=e,this.concurrent=n,this.hasCompleted=!1,this.buffer=[],this.active=0,this.index=0}_next(t){this.active<this.concurrent?this._tryNext(t):this.buffer.push(t)}_tryNext(t){let e;const n=this.index++;try{e=this.project(t,n)}catch(r){return void this.destination.error(r)}this.active++,this._innerSub(e)}_innerSub(t){const e=new j(this),n=this.destination;n.add(e);const r=N(t,e);r!==e&&n.add(r)}_complete(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&this.destination.complete(),this.unsubscribe()}notifyNext(t){this.destination.next(t)}notifyComplete(){const t=this.buffer;this.active--,t.length>0?this._next(t.shift()):0===this.active&&this.hasCompleted&&this.destination.complete()}}function $(t=Number.POSITIVE_INFINITY){return H(y,t)}function U(t,e){return e?L(t,e):new v(k(t))}function W(...t){let e=Number.POSITIVE_INFINITY,n=null,r=t[t.length-1];return S(r)?(n=t.pop(),t.length>1&&"number"==typeof t[t.length-1]&&(e=t.pop())):"number"==typeof r&&(e=t.pop()),null===n&&1===t.length&&t[0]instanceof v?t[0]:$(e)(U(t,n))}function G(){return function(t){return t.lift(new q(t))}}class q{constructor(t){this.connectable=t}call(t,e){const{connectable:n}=this;n._refCount++;const r=new X(t,n),s=e.subscribe(r);return r.closed||(r.connection=n.connect()),s}}class X extends f{constructor(t,e){super(t),this.connectable=e}_unsubscribe(){const{connectable:t}=this;if(!t)return void(this.connection=null);this.connectable=null;const e=t._refCount;if(e<=0)return void(this.connection=null);if(t._refCount=e-1,e>1)return void(this.connection=null);const{connection:n}=this,r=t._connection;this.connection=null,!r||n&&r!==n||r.unsubscribe()}}class Y extends v{constructor(t,e){super(),this.source=t,this.subjectFactory=e,this._refCount=0,this._isComplete=!1}_subscribe(t){return this.getSubject().subscribe(t)}getSubject(){const t=this._subject;return t&&!t.isStopped||(this._subject=this.subjectFactory()),this._subject}connect(){let t=this._connection;return t||(this._isComplete=!1,t=this._connection=new h,t.add(this.source.subscribe(new Q(this.getSubject(),this))),t.closed&&(this._connection=null,t=h.EMPTY)),t}refCount(){return G()(this)}}const Z=(()=>{const t=Y.prototype;return{operator:{value:null},_refCount:{value:0,writable:!0},_subject:{value:null,writable:!0},_connection:{value:null,writable:!0},_subscribe:{value:t._subscribe},_isComplete:{value:t._isComplete,writable:!0},getSubject:{value:t.getSubject},connect:{value:t.connect},refCount:{value:t.refCount}}})();class Q extends _{constructor(t,e){super(t),this.connectable=e}_error(t){this._unsubscribe(),super._error(t)}_complete(){this.connectable._isComplete=!0,this._unsubscribe(),super._complete()}_unsubscribe(){const t=this.connectable;if(t){this.connectable=null;const e=t._connection;t._refCount=0,t._subject=null,t._connection=null,e&&e.unsubscribe()}}}function K(){return new D}function J(t){for(let e in t)if(t[e]===J)return e;throw Error("Could not find renamed property on target object.")}function tt(t,e){for(const n in e)e.hasOwnProperty(n)&&!t.hasOwnProperty(n)&&(t[n]=e[n])}function et(t){if("string"==typeof t)return t;if(Array.isArray(t))return"["+t.map(et).join(", ")+"]";if(null==t)return""+t;if(t.overriddenName)return`${t.overriddenName}`;if(t.name)return`${t.name}`;const e=t.toString();if(null==e)return""+e;const n=e.indexOf("\n");return-1===n?e:e.substring(0,n)}function nt(t,e){return null==t||""===t?null===e?"":e:null==e||""===e?t:t+" "+e}const rt=J({__forward_ref__:J});function st(t){return t.__forward_ref__=st,t.toString=function(){return et(this())},t}function it(t){return ot(t)?t():t}function ot(t){return"function"==typeof t&&t.hasOwnProperty(rt)&&t.__forward_ref__===st}class at extends Error{constructor(t,e){super(function(t,e){return`${t?`NG0${t}: `:""}${e}`}(t,e)),this.code=t}}function ct(t){return"string"==typeof t?t:null==t?"":String(t)}function lt(t){return"function"==typeof t?t.name||t.toString():"object"==typeof t&&null!=t&&"function"==typeof t.type?t.type.name||t.type.toString():ct(t)}function ut(t,e){const n=e?` in ${e}`:"";throw new at("201",`No provider for ${lt(t)} found${n}`)}function ht(t){return{token:t.token,providedIn:t.providedIn||null,factory:t.factory,value:void 0}}function dt(t){return{providers:t.providers||[],imports:t.imports||[]}}function pt(t){return ft(t,mt)||ft(t,vt)}function ft(t,e){return t.hasOwnProperty(e)?t[e]:null}function gt(t){return t&&(t.hasOwnProperty(yt)||t.hasOwnProperty(bt))?t[yt]:null}const mt=J({"\u0275prov":J}),yt=J({"\u0275inj":J}),vt=J({ngInjectableDef:J}),bt=J({ngInjectorDef:J});var Ct=function(t){return t[t.Default=0]="Default",t[t.Host=1]="Host",t[t.Self=2]="Self",t[t.SkipSelf=4]="SkipSelf",t[t.Optional=8]="Optional",t}({});let wt;function _t(t){const e=wt;return wt=t,e}function Dt(t,e,n){const r=pt(t);return r&&"root"==r.providedIn?void 0===r.value?r.value=r.factory():r.value:n&Ct.Optional?null:void 0!==e?e:void ut(et(t),"Injector")}function Et(t){return{toString:t}.toString()}var St=function(t){return t[t.OnPush=0]="OnPush",t[t.Default=1]="Default",t}({}),xt=function(t){return t[t.Emulated=0]="Emulated",t[t.None=2]="None",t[t.ShadowDom=3]="ShadowDom",t}({});const At="undefined"!=typeof globalThis&&globalThis,Tt="undefined"!=typeof window&&window,kt="undefined"!=typeof self&&"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,Ft="undefined"!=typeof global&&global,It=At||Ft||Tt||kt,Ot={},Pt=[],Rt=J({"\u0275cmp":J}),Lt=J({"\u0275dir":J}),Bt=J({"\u0275pipe":J}),jt=J({"\u0275mod":J}),Mt=J({"\u0275loc":J}),Nt=J({"\u0275fac":J}),Ht=J({__NG_ELEMENT_ID__:J});let Vt=0;function zt(t){return Et(()=>{const e={},n={type:t.type,providersResolver:null,decls:t.decls,vars:t.vars,factory:null,template:t.template||null,consts:t.consts||null,ngContentSelectors:t.ngContentSelectors,hostBindings:t.hostBindings||null,hostVars:t.hostVars||0,hostAttrs:t.hostAttrs||null,contentQueries:t.contentQueries||null,declaredInputs:e,inputs:null,outputs:null,exportAs:t.exportAs||null,onPush:t.changeDetection===St.OnPush,directiveDefs:null,pipeDefs:null,selectors:t.selectors||Pt,viewQuery:t.viewQuery||null,features:t.features||null,data:t.data||{},encapsulation:t.encapsulation||xt.Emulated,id:"c",styles:t.styles||Pt,_:null,setInput:null,schemas:t.schemas||null,tView:null},r=t.directives,s=t.features,i=t.pipes;return n.id+=Vt++,n.inputs=qt(t.inputs,e),n.outputs=qt(t.outputs),s&&s.forEach(t=>t(n)),n.directiveDefs=r?()=>("function"==typeof r?r():r).map($t):null,n.pipeDefs=i?()=>("function"==typeof i?i():i).map(Ut):null,n})}function $t(t){return Zt(t)||function(t){return t[Lt]||null}(t)}function Ut(t){return function(t){return t[Bt]||null}(t)}const Wt={};function Gt(t){return Et(()=>{const e={type:t.type,bootstrap:t.bootstrap||Pt,declarations:t.declarations||Pt,imports:t.imports||Pt,exports:t.exports||Pt,transitiveCompileScopes:null,schemas:t.schemas||null,id:t.id||null};return null!=t.id&&(Wt[t.id]=t.type),e})}function qt(t,e){if(null==t)return Ot;const n={};for(const r in t)if(t.hasOwnProperty(r)){let s=t[r],i=s;Array.isArray(s)&&(i=s[1],s=s[0]),n[s]=r,e&&(e[s]=i)}return n}const Xt=zt;function Yt(t){return{type:t.type,name:t.name,factory:null,pure:!1!==t.pure,onDestroy:t.type.prototype.ngOnDestroy||null}}function Zt(t){return t[Rt]||null}function Qt(t,e){const n=t[jt]||null;if(!n&&!0===e)throw new Error(`Type ${et(t)} does not have '\u0275mod' property.`);return n}const Kt=20,Jt=10;function te(t){return Array.isArray(t)&&"object"==typeof t[1]}function ee(t){return Array.isArray(t)&&!0===t[1]}function ne(t){return 0!=(8&t.flags)}function re(t){return 2==(2&t.flags)}function se(t){return 1==(1&t.flags)}function ie(t){return null!==t.template}function oe(t,e){return t.hasOwnProperty(Nt)?t[Nt]:null}class ae{constructor(t,e,n){this.previousValue=t,this.currentValue=e,this.firstChange=n}isFirstChange(){return this.firstChange}}function ce(){return le}function le(t){return t.type.prototype.ngOnChanges&&(t.setInput=he),ue}function ue(){const t=de(this),e=null==t?void 0:t.current;if(e){const n=t.previous;if(n===Ot)t.previous=e;else for(let t in e)n[t]=e[t];t.current=null,this.ngOnChanges(e)}}function he(t,e,n,r){const s=de(t)||function(t,e){return t.__ngSimpleChanges__=e}(t,{previous:Ot,current:null}),i=s.current||(s.current={}),o=s.previous,a=this.declaredInputs[n],c=o[a];i[a]=new ae(c&&c.currentValue,e,o===Ot),t[r]=e}function de(t){return t.__ngSimpleChanges__||null}ce.ngInherit=!0;const pe="http://www.w3.org/2000/svg";let fe;function ge(){return void 0!==fe?fe:"undefined"!=typeof document?document:void 0}function me(t){return!!t.listen}const ye={createRenderer:(t,e)=>ge()};function ve(t){for(;Array.isArray(t);)t=t[0];return t}function be(t,e){return ve(e[t])}function Ce(t,e){return ve(e[t.index])}function we(t,e){return t.data[e]}function _e(t,e){return t[e]}function De(t,e){const n=e[t];return te(n)?n:n[0]}function Ee(t){return 4==(4&t[2])}function Se(t){return 128==(128&t[2])}function xe(t,e){return null==e?null:t[e]}function Ae(t){t[18]=0}function Te(t,e){t[5]+=e;let n=t,r=t[3];for(;null!==r&&(1===e&&1===n[5]||-1===e&&0===n[5]);)r[5]+=e,n=r,r=r[3]}const ke={lFrame:Ke(null),bindingsEnabled:!0,isInCheckNoChangesMode:!1};function Fe(){return ke.bindingsEnabled}function Ie(){return ke.lFrame.lView}function Oe(){return ke.lFrame.tView}function Pe(t){return ke.lFrame.contextLView=t,t[8]}function Re(){let t=Le();for(;null!==t&&64===t.type;)t=t.parent;return t}function Le(){return ke.lFrame.currentTNode}function Be(t,e){const n=ke.lFrame;n.currentTNode=t,n.isParent=e}function je(){return ke.lFrame.isParent}function Me(){ke.lFrame.isParent=!1}function Ne(){return ke.isInCheckNoChangesMode}function He(t){ke.isInCheckNoChangesMode=t}function Ve(){return ke.lFrame.bindingIndex}function ze(){return ke.lFrame.bindingIndex++}function $e(t){const e=ke.lFrame,n=e.bindingIndex;return e.bindingIndex=e.bindingIndex+t,n}function Ue(t,e){const n=ke.lFrame;n.bindingIndex=n.bindingRootIndex=t,We(e)}function We(t){ke.lFrame.currentDirectiveIndex=t}function Ge(){return ke.lFrame.currentQueryIndex}function qe(t){ke.lFrame.currentQueryIndex=t}function Xe(t){const e=t[1];return 2===e.type?e.declTNode:1===e.type?t[6]:null}function Ye(t,e,n){if(n&Ct.SkipSelf){let r=e,s=t;for(;r=r.parent,!(null!==r||n&Ct.Host||(r=Xe(s),null===r)||(s=s[15],10&r.type)););if(null===r)return!1;e=r,t=s}const r=ke.lFrame=Qe();return r.currentTNode=e,r.lView=t,!0}function Ze(t){const e=Qe(),n=t[1];ke.lFrame=e,e.currentTNode=n.firstChild,e.lView=t,e.tView=n,e.contextLView=t,e.bindingIndex=n.bindingStartIndex,e.inI18n=!1}function Qe(){const t=ke.lFrame,e=null===t?null:t.child;return null===e?Ke(t):e}function Ke(t){const e={currentTNode:null,isParent:!0,lView:null,tView:null,selectedIndex:-1,contextLView:null,elementDepthCount:0,currentNamespace:null,currentDirectiveIndex:-1,bindingRootIndex:-1,bindingIndex:-1,currentQueryIndex:0,parent:t,child:null,inI18n:!1};return null!==t&&(t.child=e),e}function Je(){const t=ke.lFrame;return ke.lFrame=t.parent,t.currentTNode=null,t.lView=null,t}const tn=Je;function en(){const t=Je();t.isParent=!0,t.tView=null,t.selectedIndex=-1,t.contextLView=null,t.elementDepthCount=0,t.currentDirectiveIndex=-1,t.currentNamespace=null,t.bindingRootIndex=-1,t.bindingIndex=-1,t.currentQueryIndex=0}function nn(){return ke.lFrame.selectedIndex}function rn(t){ke.lFrame.selectedIndex=t}function sn(){const t=ke.lFrame;return we(t.tView,t.selectedIndex)}function on(){ke.lFrame.currentNamespace=pe}function an(t,e){for(let n=e.directiveStart,r=e.directiveEnd;n<r;n++){const e=t.data[n].type.prototype,{ngAfterContentInit:r,ngAfterContentChecked:s,ngAfterViewInit:i,ngAfterViewChecked:o,ngOnDestroy:a}=e;r&&(t.contentHooks||(t.contentHooks=[])).push(-n,r),s&&((t.contentHooks||(t.contentHooks=[])).push(n,s),(t.contentCheckHooks||(t.contentCheckHooks=[])).push(n,s)),i&&(t.viewHooks||(t.viewHooks=[])).push(-n,i),o&&((t.viewHooks||(t.viewHooks=[])).push(n,o),(t.viewCheckHooks||(t.viewCheckHooks=[])).push(n,o)),null!=a&&(t.destroyHooks||(t.destroyHooks=[])).push(n,a)}}function cn(t,e,n){hn(t,e,3,n)}function ln(t,e,n,r){(3&t[2])===n&&hn(t,e,n,r)}function un(t,e){let n=t[2];(3&n)===e&&(n&=2047,n+=1,t[2]=n)}function hn(t,e,n,r){const s=null!=r?r:-1,i=e.length-1;let o=0;for(let a=void 0!==r?65535&t[18]:0;a<i;a++)if("number"==typeof e[a+1]){if(o=e[a],null!=r&&o>=r)break}else e[a]<0&&(t[18]+=65536),(o<s||-1==s)&&(dn(t,n,e,a),t[18]=(4294901760&t[18])+a+2),a++}function dn(t,e,n,r){const s=n[r]<0,i=n[r+1],o=t[s?-n[r]:n[r]];if(s){if(t[2]>>11<t[18]>>16&&(3&t[2])===e){t[2]+=2048;try{i.call(o)}finally{}}}else try{i.call(o)}finally{}}const pn=-1;class fn{constructor(t,e,n){this.factory=t,this.resolving=!1,this.canSeeViewProviders=e,this.injectImpl=n}}function gn(t,e,n){const r=me(t);let s=0;for(;s<n.length;){const i=n[s];if("number"==typeof i){if(0!==i)break;s++;const o=n[s++],a=n[s++],c=n[s++];r?t.setAttribute(e,a,c,o):e.setAttributeNS(o,a,c)}else{const o=i,a=n[++s];yn(o)?r&&t.setProperty(e,o,a):r?t.setAttribute(e,o,a):e.setAttribute(o,a),s++}}return s}function mn(t){return 3===t||4===t||6===t}function yn(t){return 64===t.charCodeAt(0)}function vn(t,e){if(null===e||0===e.length);else if(null===t||0===t.length)t=e.slice();else{let n=-1;for(let r=0;r<e.length;r++){const s=e[r];"number"==typeof s?n=s:0===n||bn(t,n,s,null,-1===n||2===n?e[++r]:null)}}return t}function bn(t,e,n,r,s){let i=0,o=t.length;if(-1===e)o=-1;else for(;i<t.length;){const n=t[i++];if("number"==typeof n){if(n===e){o=-1;break}if(n>e){o=i-1;break}}}for(;i<t.length;){const e=t[i];if("number"==typeof e)break;if(e===n){if(null===r)return void(null!==s&&(t[i+1]=s));if(r===t[i+1])return void(t[i+2]=s)}i++,null!==r&&i++,null!==s&&i++}-1!==o&&(t.splice(o,0,e),i=o+1),t.splice(i++,0,n),null!==r&&t.splice(i++,0,r),null!==s&&t.splice(i++,0,s)}function Cn(t){return t!==pn}function wn(t){return 32767&t}function _n(t,e){let n=t>>16,r=e;for(;n>0;)r=r[15],n--;return r}let Dn=!0;function En(t){const e=Dn;return Dn=t,e}let Sn=0;function xn(t,e){const n=Tn(t,e);if(-1!==n)return n;const r=e[1];r.firstCreatePass&&(t.injectorIndex=e.length,An(r.data,t),An(e,null),An(r.blueprint,null));const s=kn(t,e),i=t.injectorIndex;if(Cn(s)){const t=wn(s),n=_n(s,e),r=n[1].data;for(let s=0;s<8;s++)e[i+s]=n[t+s]|r[t+s]}return e[i+8]=s,i}function An(t,e){t.push(0,0,0,0,0,0,0,0,e)}function Tn(t,e){return-1===t.injectorIndex||t.parent&&t.parent.injectorIndex===t.injectorIndex||null===e[t.injectorIndex+8]?-1:t.injectorIndex}function kn(t,e){if(t.parent&&-1!==t.parent.injectorIndex)return t.parent.injectorIndex;let n=0,r=null,s=e;for(;null!==s;){const t=s[1],e=t.type;if(r=2===e?t.declTNode:1===e?s[6]:null,null===r)return pn;if(n++,s=s[15],-1!==r.injectorIndex)return r.injectorIndex|n<<16}return pn}function Fn(t,e,n){!function(t,e,n){let r;"string"==typeof n?r=n.charCodeAt(0)||0:n.hasOwnProperty(Ht)&&(r=n[Ht]),null==r&&(r=n[Ht]=Sn++);const s=255&r;e.data[t+(s>>5)]|=1<<s}(t,e,n)}function In(t,e,n){if(n&Ct.Optional)return t;ut(e,"NodeInjector")}function On(t,e,n,r){if(n&Ct.Optional&&void 0===r&&(r=null),0==(n&(Ct.Self|Ct.Host))){const s=t[9],i=_t(void 0);try{return s?s.get(e,r,n&Ct.Optional):Dt(e,r,n&Ct.Optional)}finally{_t(i)}}return In(r,e,n)}function Pn(t,e,n,r=Ct.Default,s){if(null!==t){const i=function(t){if("string"==typeof t)return t.charCodeAt(0)||0;const e=t.hasOwnProperty(Ht)?t[Ht]:void 0;return"number"==typeof e?e>=0?255&e:Ln:e}(n);if("function"==typeof i){if(!Ye(e,t,r))return r&Ct.Host?In(s,n,r):On(e,n,r,s);try{const t=i(r);if(null!=t||r&Ct.Optional)return t;ut(n)}finally{tn()}}else if("number"==typeof i){let s=null,o=Tn(t,e),a=pn,c=r&Ct.Host?e[16][6]:null;for((-1===o||r&Ct.SkipSelf)&&(a=-1===o?kn(t,e):e[o+8],a!==pn&&Hn(r,!1)?(s=e[1],o=wn(a),e=_n(a,e)):o=-1);-1!==o;){const t=e[1];if(Nn(i,o,t.data)){const t=Bn(o,e,n,s,r,c);if(t!==Rn)return t}a=e[o+8],a!==pn&&Hn(r,e[1].data[o+8]===c)&&Nn(i,o,e)?(s=t,o=wn(a),e=_n(a,e)):o=-1}}}return On(e,n,r,s)}const Rn={};function Ln(){return new Vn(Re(),Ie())}function Bn(t,e,n,r,s,i){const o=e[1],a=o.data[t+8],c=jn(a,o,n,null==r?re(a)&&Dn:r!=o&&0!=(3&a.type),s&Ct.Host&&i===a);return null!==c?Mn(e,o,c,a):Rn}function jn(t,e,n,r,s){const i=t.providerIndexes,o=e.data,a=1048575&i,c=t.directiveStart,l=i>>20,u=s?a+l:t.directiveEnd;for(let h=r?a:a+l;h<u;h++){const t=o[h];if(h<c&&n===t||h>=c&&t.type===n)return h}if(s){const t=o[c];if(t&&ie(t)&&t.type===n)return c}return null}function Mn(t,e,n,r){let s=t[n];const i=e.data;if(s instanceof fn){const o=s;o.resolving&&function(t,e){throw new at("200",`Circular dependency in DI detected for ${t}`)}(lt(i[n]));const a=En(o.canSeeViewProviders);o.resolving=!0;const c=o.injectImpl?_t(o.injectImpl):null;Ye(t,r,Ct.Default);try{s=t[n]=o.factory(void 0,i,t,r),e.firstCreatePass&&n>=r.directiveStart&&function(t,e,n){const{ngOnChanges:r,ngOnInit:s,ngDoCheck:i}=e.type.prototype;if(r){const r=le(e);(n.preOrderHooks||(n.preOrderHooks=[])).push(t,r),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(t,r)}s&&(n.preOrderHooks||(n.preOrderHooks=[])).push(0-t,s),i&&((n.preOrderHooks||(n.preOrderHooks=[])).push(t,i),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(t,i))}(n,i[n],e)}finally{null!==c&&_t(c),En(a),o.resolving=!1,tn()}}return s}function Nn(t,e,n){return!!(n[e+(t>>5)]&1<<t)}function Hn(t,e){return!(t&Ct.Self||t&Ct.Host&&e)}class Vn{constructor(t,e){this._tNode=t,this._lView=e}get(t,e){return Pn(this._tNode,this._lView,t,void 0,e)}}function zn(t){return Et(()=>{const e=t.prototype.constructor,n=e[Nt]||$n(e),r=Object.prototype;let s=Object.getPrototypeOf(t.prototype).constructor;for(;s&&s!==r;){const t=s[Nt]||$n(s);if(t&&t!==n)return t;s=Object.getPrototypeOf(s)}return t=>new t})}function $n(t){return ot(t)?()=>{const e=$n(it(t));return e&&e()}:oe(t)}const Un="__parameters__";function Wn(t,e,n){return Et(()=>{const r=function(t){return function(...e){if(t){const n=t(...e);for(const t in n)this[t]=n[t]}}}(e);function s(...t){if(this instanceof s)return r.apply(this,t),this;const e=new s(...t);return n.annotation=e,n;function n(t,n,r){const s=t.hasOwnProperty(Un)?t[Un]:Object.defineProperty(t,Un,{value:[]})[Un];for(;s.length<=r;)s.push(null);return(s[r]=s[r]||[]).push(e),t}}return n&&(s.prototype=Object.create(n.prototype)),s.prototype.ngMetadataName=t,s.annotationCls=s,s})}class Gn{constructor(t,e){this._desc=t,this.ngMetadataName="InjectionToken",this.\u0275prov=void 0,"number"==typeof e?this.__NG_ELEMENT_ID__=e:void 0!==e&&(this.\u0275prov=ht({token:this,providedIn:e.providedIn||"root",factory:e.factory}))}toString(){return`InjectionToken ${this._desc}`}}const qn=new Gn("AnalyzeForEntryComponents"),Xn=Function;function Yn(t,e){void 0===e&&(e=t);for(let n=0;n<t.length;n++){let r=t[n];Array.isArray(r)?(e===t&&(e=t.slice(0,n)),Yn(r,e)):e!==t&&e.push(r)}return e}function Zn(t,e){t.forEach(t=>Array.isArray(t)?Zn(t,e):e(t))}function Qn(t,e,n){e>=t.length?t.push(n):t.splice(e,0,n)}function Kn(t,e){return e>=t.length-1?t.pop():t.splice(e,1)[0]}function Jn(t,e){const n=[];for(let r=0;r<t;r++)n.push(e);return n}function tr(t,e,n){let r=nr(t,e);return r>=0?t[1|r]=n:(r=~r,function(t,e,n,r){let s=t.length;if(s==e)t.push(n,r);else if(1===s)t.push(r,t[0]),t[0]=n;else{for(s--,t.push(t[s-1],t[s]);s>e;)t[s]=t[s-2],s--;t[e]=n,t[e+1]=r}}(t,r,e,n)),r}function er(t,e){const n=nr(t,e);if(n>=0)return t[1|n]}function nr(t,e){return function(t,e,n){let r=0,s=t.length>>1;for(;s!==r;){const n=r+(s-r>>1),i=t[n<<1];if(e===i)return n<<1;i>e?s=n:r=n+1}return~(s<<1)}(t,e)}const rr={},sr=/\n/gm,ir="__source",or=J({provide:String,useValue:J});let ar;function cr(t){const e=ar;return ar=t,e}function lr(t,e=Ct.Default){if(void 0===ar)throw new Error("inject() must be called from an injection context");return null===ar?Dt(t,void 0,e):ar.get(t,e&Ct.Optional?null:void 0,e)}function ur(t,e=Ct.Default){return(wt||lr)(it(t),e)}function hr(t){const e=[];for(let n=0;n<t.length;n++){const r=it(t[n]);if(Array.isArray(r)){if(0===r.length)throw new Error("Arguments array must have arguments.");let t,n=Ct.Default;for(let e=0;e<r.length;e++){const s=r[e],i=s.__NG_DI_FLAG__;"number"==typeof i?-1===i?t=s.token:n|=i:t=s}e.push(ur(t,n))}else e.push(ur(r))}return e}function dr(t,e){return t.__NG_DI_FLAG__=e,t.prototype.__NG_DI_FLAG__=e,t}const pr=dr(Wn("Inject",t=>({token:t})),-1),fr=dr(Wn("Optional"),8),gr=dr(Wn("SkipSelf"),4);let mr,yr;function vr(t){var e;return(null===(e=function(){if(void 0===mr&&(mr=null,It.trustedTypes))try{mr=It.trustedTypes.createPolicy("angular",{createHTML:t=>t,createScript:t=>t,createScriptURL:t=>t})}catch(e){}return mr}())||void 0===e?void 0:e.createHTML(t))||t}function br(t){var e;return(null===(e=function(){if(void 0===yr&&(yr=null,It.trustedTypes))try{yr=It.trustedTypes.createPolicy("angular#unsafe-bypass",{createHTML:t=>t,createScript:t=>t,createScriptURL:t=>t})}catch(e){}return yr}())||void 0===e?void 0:e.createHTML(t))||t}class Cr{constructor(t){this.changingThisBreaksApplicationSecurity=t}toString(){return`SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`}}function wr(t){return t instanceof Cr?t.changingThisBreaksApplicationSecurity:t}class _r{constructor(t){this.inertDocumentHelper=t}getInertBodyElement(t){t="<body><remove></remove>"+t;try{const e=(new window.DOMParser).parseFromString(vr(t),"text/html").body;return null===e?this.inertDocumentHelper.getInertBodyElement(t):(e.removeChild(e.firstChild),e)}catch(e){return null}}}class Dr{constructor(t){if(this.defaultDoc=t,this.inertDocument=this.defaultDoc.implementation.createHTMLDocument("sanitization-inert"),null==this.inertDocument.body){const t=this.inertDocument.createElement("html");this.inertDocument.appendChild(t);const e=this.inertDocument.createElement("body");t.appendChild(e)}}getInertBodyElement(t){const e=this.inertDocument.createElement("template");if("content"in e)return e.innerHTML=vr(t),e;const n=this.inertDocument.createElement("body");return n.innerHTML=vr(t),this.defaultDoc.documentMode&&this.stripCustomNsAttrs(n),n}stripCustomNsAttrs(t){const e=t.attributes;for(let r=e.length-1;0<r;r--){const n=e.item(r).name;"xmlns:ns1"!==n&&0!==n.indexOf("ns1:")||t.removeAttribute(n)}let n=t.firstChild;for(;n;)n.nodeType===Node.ELEMENT_NODE&&this.stripCustomNsAttrs(n),n=n.nextSibling}}const Er=/^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,Sr=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;function xr(t){return(t=String(t)).match(Er)||t.match(Sr)?t:"unsafe:"+t}function Ar(t){const e={};for(const n of t.split(","))e[n]=!0;return e}function Tr(...t){const e={};for(const n of t)for(const t in n)n.hasOwnProperty(t)&&(e[t]=!0);return e}const kr=Ar("area,br,col,hr,img,wbr"),Fr=Ar("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),Ir=Ar("rp,rt"),Or=Tr(Ir,Fr),Pr=Tr(kr,Tr(Fr,Ar("address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul")),Tr(Ir,Ar("a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video")),Or),Rr=Ar("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),Lr=Ar("srcset"),Br=Tr(Rr,Lr,Ar("abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"),Ar("aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext")),jr=Ar("script,style,template");class Mr{constructor(){this.sanitizedSomething=!1,this.buf=[]}sanitizeChildren(t){let e=t.firstChild,n=!0;for(;e;)if(e.nodeType===Node.ELEMENT_NODE?n=this.startElement(e):e.nodeType===Node.TEXT_NODE?this.chars(e.nodeValue):this.sanitizedSomething=!0,n&&e.firstChild)e=e.firstChild;else for(;e;){e.nodeType===Node.ELEMENT_NODE&&this.endElement(e);let t=this.checkClobberedElement(e,e.nextSibling);if(t){e=t;break}e=this.checkClobberedElement(e,e.parentNode)}return this.buf.join("")}startElement(t){const e=t.nodeName.toLowerCase();if(!Pr.hasOwnProperty(e))return this.sanitizedSomething=!0,!jr.hasOwnProperty(e);this.buf.push("<"),this.buf.push(e);const n=t.attributes;for(let s=0;s<n.length;s++){const t=n.item(s),e=t.name,i=e.toLowerCase();if(!Br.hasOwnProperty(i)){this.sanitizedSomething=!0;continue}let o=t.value;Rr[i]&&(o=xr(o)),Lr[i]&&(r=o,o=(r=String(r)).split(",").map(t=>xr(t.trim())).join(", ")),this.buf.push(" ",e,'="',Vr(o),'"')}var r;return this.buf.push(">"),!0}endElement(t){const e=t.nodeName.toLowerCase();Pr.hasOwnProperty(e)&&!kr.hasOwnProperty(e)&&(this.buf.push("</"),this.buf.push(e),this.buf.push(">"))}chars(t){this.buf.push(Vr(t))}checkClobberedElement(t,e){if(e&&(t.compareDocumentPosition(e)&Node.DOCUMENT_POSITION_CONTAINED_BY)===Node.DOCUMENT_POSITION_CONTAINED_BY)throw new Error(`Failed to sanitize html because the element is clobbered: ${t.outerHTML}`);return e}}const Nr=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,Hr=/([^\#-~ |!])/g;function Vr(t){return t.replace(/&/g,"&amp;").replace(Nr,function(t){return"&#"+(1024*(t.charCodeAt(0)-55296)+(t.charCodeAt(1)-56320)+65536)+";"}).replace(Hr,function(t){return"&#"+t.charCodeAt(0)+";"}).replace(/</g,"&lt;").replace(/>/g,"&gt;")}let zr;function $r(t){return"content"in t&&function(t){return t.nodeType===Node.ELEMENT_NODE&&"TEMPLATE"===t.nodeName}(t)?t.content:null}var Ur=function(t){return t[t.NONE=0]="NONE",t[t.HTML=1]="HTML",t[t.STYLE=2]="STYLE",t[t.SCRIPT=3]="SCRIPT",t[t.URL=4]="URL",t[t.RESOURCE_URL=5]="RESOURCE_URL",t}({});function Wr(t){const e=function(){const t=Ie();return t&&t[12]}();return e?br(e.sanitize(Ur.HTML,t)||""):function(t,e){const n=function(t){return t instanceof Cr&&t.getTypeName()||null}(t);if(null!=n&&n!==e){if("ResourceURL"===n&&"URL"===e)return!0;throw new Error(`Required a safe ${e}, got a ${n} (see https://g.co/ng/security#xss)`)}return n===e}(t,"HTML")?br(wr(t)):function(t,e){let n=null;try{zr=zr||function(t){const e=new Dr(t);return function(){try{return!!(new window.DOMParser).parseFromString(vr(""),"text/html")}catch(t){return!1}}()?new _r(e):e}(t);let r=e?String(e):"";n=zr.getInertBodyElement(r);let s=5,i=r;do{if(0===s)throw new Error("Failed to sanitize html because the input is unstable");s--,r=i,i=n.innerHTML,n=zr.getInertBodyElement(r)}while(r!==i);return vr((new Mr).sanitizeChildren($r(n)||n))}finally{if(n){const t=$r(n)||n;for(;t.firstChild;)t.removeChild(t.firstChild)}}}(ge(),ct(t))}function Gr(t,e){t.__ngContext__=e}function qr(t){const e=function(t){return t.__ngContext__||null}(t);return e?Array.isArray(e)?e:e.lView:null}function Xr(t){return t.ngDebugContext}function Yr(t){return t.ngOriginalError}function Zr(t,...e){t.error(...e)}class Qr{constructor(){this._console=console}handleError(t){const e=this._findOriginalError(t),n=this._findContext(t),r=function(t){return t.ngErrorLogger||Zr}(t);r(this._console,"ERROR",t),e&&r(this._console,"ORIGINAL ERROR",e),n&&r(this._console,"ERROR CONTEXT",n)}_findContext(t){return t?Xr(t)?Xr(t):this._findContext(Yr(t)):null}_findOriginalError(t){let e=Yr(t);for(;e&&Yr(e);)e=Yr(e);return e}}const Kr=(()=>("undefined"!=typeof requestAnimationFrame&&requestAnimationFrame||setTimeout).bind(It))();function Jr(t){return t.ownerDocument.defaultView}function ts(t){return t instanceof Function?t():t}var es=function(t){return t[t.Important=1]="Important",t[t.DashCase=2]="DashCase",t}({});function ns(t,e){return(void 0)(t,e)}function rs(t){const e=t[3];return ee(e)?e[3]:e}function ss(t){return os(t[13])}function is(t){return os(t[4])}function os(t){for(;null!==t&&!ee(t);)t=t[4];return t}function as(t,e,n,r,s){if(null!=r){let i,o=!1;ee(r)?i=r:te(r)&&(o=!0,r=r[0]);const a=ve(r);0===t&&null!==n?null==s?gs(e,n,a):fs(e,n,a,s||null,!0):1===t&&null!==n?fs(e,n,a,s||null,!0):2===t?function(t,e,n){const r=ys(t,e);r&&function(t,e,n,r){me(t)?t.removeChild(e,n,r):e.removeChild(n)}(t,r,e,n)}(e,a,o):3===t&&e.destroyNode(a),null!=i&&function(t,e,n,r,s){const i=n[7];i!==ve(n)&&as(e,t,r,i,s);for(let o=Jt;o<n.length;o++){const s=n[o];Ss(s[1],s,t,e,r,i)}}(e,t,i,n,s)}}function cs(t,e,n){return me(t)?t.createElement(e,n):null===n?t.createElement(e):t.createElementNS(n,e)}function ls(t,e){const n=t[9],r=n.indexOf(e),s=e[3];1024&e[2]&&(e[2]&=-1025,Te(s,-1)),n.splice(r,1)}function us(t,e){if(t.length<=Jt)return;const n=Jt+e,r=t[n];if(r){const i=r[17];null!==i&&i!==t&&ls(i,r),e>0&&(t[n-1][4]=r[4]);const o=Kn(t,Jt+e);Ss(r[1],s=r,s[11],2,null,null),s[0]=null,s[6]=null;const a=o[19];null!==a&&a.detachView(o[1]),r[3]=null,r[4]=null,r[2]&=-129}var s;return r}function hs(t,e){if(!(256&e[2])){const n=e[11];me(n)&&n.destroyNode&&Ss(t,e,n,3,null,null),function(t){let e=t[13];if(!e)return ds(t[1],t);for(;e;){let n=null;if(te(e))n=e[13];else{const t=e[10];t&&(n=t)}if(!n){for(;e&&!e[4]&&e!==t;)te(e)&&ds(e[1],e),e=e[3];null===e&&(e=t),te(e)&&ds(e[1],e),n=e&&e[4]}e=n}}(e)}}function ds(t,e){if(!(256&e[2])){e[2]&=-129,e[2]|=256,function(t,e){let n;if(null!=t&&null!=(n=t.destroyHooks))for(let r=0;r<n.length;r+=2){const t=e[n[r]];if(!(t instanceof fn)){const e=n[r+1];if(Array.isArray(e))for(let n=0;n<e.length;n+=2){const r=t[e[n]],s=e[n+1];try{s.call(r)}finally{}}else try{e.call(t)}finally{}}}}(t,e),function(t,e){const n=t.cleanup,r=e[7];let s=-1;if(null!==n)for(let i=0;i<n.length-1;i+=2)if("string"==typeof n[i]){const t=n[i+1],o="function"==typeof t?t(e):ve(e[t]),a=r[s=n[i+2]],c=n[i+3];"boolean"==typeof c?o.removeEventListener(n[i],a,c):c>=0?r[s=c]():r[s=-c].unsubscribe(),i+=2}else{const t=r[s=n[i+1]];n[i].call(t)}if(null!==r){for(let t=s+1;t<r.length;t++)(0,r[t])();e[7]=null}}(t,e),1===e[1].type&&me(e[11])&&e[11].destroy();const n=e[17];if(null!==n&&ee(e[3])){n!==e[3]&&ls(n,e);const r=e[19];null!==r&&r.detachView(t)}}}function ps(t,e,n){return function(t,e,n){let r=e;for(;null!==r&&40&r.type;)r=(e=r).parent;if(null===r)return n[0];if(2&r.flags){const e=t.data[r.directiveStart].encapsulation;if(e===xt.None||e===xt.Emulated)return null}return Ce(r,n)}(t,e.parent,n)}function fs(t,e,n,r,s){me(t)?t.insertBefore(e,n,r,s):e.insertBefore(n,r,s)}function gs(t,e,n){me(t)?t.appendChild(e,n):e.appendChild(n)}function ms(t,e,n,r,s){null!==r?fs(t,e,n,r,s):gs(t,e,n)}function ys(t,e){return me(t)?t.parentNode(e):e.parentNode}function vs(t,e,n){return bs(t,e,n)}let bs=function(t,e,n){return 40&t.type?Ce(t,n):null};function Cs(t,e,n,r){const s=ps(t,r,e),i=e[11],o=vs(r.parent||e[6],r,e);if(null!=s)if(Array.isArray(n))for(let a=0;a<n.length;a++)ms(i,s,n[a],o,!1);else ms(i,s,n,o,!1)}function ws(t,e){if(null!==e){const n=e.type;if(3&n)return Ce(e,t);if(4&n)return Ds(-1,t[e.index]);if(8&n){const n=e.child;if(null!==n)return ws(t,n);{const n=t[e.index];return ee(n)?Ds(-1,n):ve(n)}}if(32&n)return ns(e,t)()||ve(t[e.index]);{const n=_s(t,e);return null!==n?Array.isArray(n)?n[0]:ws(rs(t[16]),n):ws(t,e.next)}}return null}function _s(t,e){return null!==e?t[16][6].projection[e.projection]:null}function Ds(t,e){const n=Jt+t+1;if(n<e.length){const t=e[n],r=t[1].firstChild;if(null!==r)return ws(t,r)}return e[7]}function Es(t,e,n,r,s,i,o){for(;null!=n;){const a=r[n.index],c=n.type;if(o&&0===e&&(a&&Gr(ve(a),r),n.flags|=4),64!=(64&n.flags))if(8&c)Es(t,e,n.child,r,s,i,!1),as(e,t,s,a,i);else if(32&c){const o=ns(n,r);let c;for(;c=o();)as(e,t,s,c,i);as(e,t,s,a,i)}else 16&c?xs(t,e,r,n,s,i):as(e,t,s,a,i);n=o?n.projectionNext:n.next}}function Ss(t,e,n,r,s,i){Es(n,r,t.firstChild,e,s,i,!1)}function xs(t,e,n,r,s,i){const o=n[16],a=o[6].projection[r.projection];if(Array.isArray(a))for(let c=0;c<a.length;c++)as(e,t,s,a[c],i);else Es(t,e,a,o[3],s,i,!0)}function As(t,e,n){me(t)?t.setAttribute(e,"style",n):e.style.cssText=n}function Ts(t,e,n){me(t)?""===n?t.removeAttribute(e,"class"):t.setAttribute(e,"class",n):e.className=n}function ks(t,e,n){let r=t.length;for(;;){const s=t.indexOf(e,n);if(-1===s)return s;if(0===s||t.charCodeAt(s-1)<=32){const n=e.length;if(s+n===r||t.charCodeAt(s+n)<=32)return s}n=s+1}}const Fs="ng-template";function Is(t,e,n){let r=0;for(;r<t.length;){let s=t[r++];if(n&&"class"===s){if(s=t[r],-1!==ks(s.toLowerCase(),e,0))return!0}else if(1===s){for(;r<t.length&&"string"==typeof(s=t[r++]);)if(s.toLowerCase()===e)return!0;return!1}}return!1}function Os(t){return 4===t.type&&t.value!==Fs}function Ps(t,e,n){return e===(4!==t.type||n?t.value:Fs)}function Rs(t,e,n){let r=4;const s=t.attrs||[],i=function(t){for(let e=0;e<t.length;e++)if(mn(t[e]))return e;return t.length}(s);let o=!1;for(let a=0;a<e.length;a++){const c=e[a];if("number"!=typeof c){if(!o)if(4&r){if(r=2|1&r,""!==c&&!Ps(t,c,n)||""===c&&1===e.length){if(Ls(r))return!1;o=!0}}else{const l=8&r?c:e[++a];if(8&r&&null!==t.attrs){if(!Is(t.attrs,l,n)){if(Ls(r))return!1;o=!0}continue}const u=Bs(8&r?"class":c,s,Os(t),n);if(-1===u){if(Ls(r))return!1;o=!0;continue}if(""!==l){let t;t=u>i?"":s[u+1].toLowerCase();const e=8&r?t:null;if(e&&-1!==ks(e,l,0)||2&r&&l!==t){if(Ls(r))return!1;o=!0}}}}else{if(!o&&!Ls(r)&&!Ls(c))return!1;if(o&&Ls(c))continue;o=!1,r=c|1&r}}return Ls(r)||o}function Ls(t){return 0==(1&t)}function Bs(t,e,n,r){if(null===e)return-1;let s=0;if(r||!n){let n=!1;for(;s<e.length;){const r=e[s];if(r===t)return s;if(3===r||6===r)n=!0;else{if(1===r||2===r){let t=e[++s];for(;"string"==typeof t;)t=e[++s];continue}if(4===r)break;if(0===r){s+=4;continue}}s+=n?1:2}return-1}return function(t,e){let n=t.indexOf(4);if(n>-1)for(n++;n<t.length;){const r=t[n];if("number"==typeof r)return-1;if(r===e)return n;n++}return-1}(e,t)}function js(t,e,n=!1){for(let r=0;r<e.length;r++)if(Rs(t,e[r],n))return!0;return!1}function Ms(t,e){t:for(let n=0;n<e.length;n++){const r=e[n];if(t.length===r.length){for(let e=0;e<t.length;e++)if(t[e]!==r[e])continue t;return!0}}return!1}function Ns(t,e){return t?":not("+e.trim()+")":e}function Hs(t){let e=t[0],n=1,r=2,s="",i=!1;for(;n<t.length;){let o=t[n];if("string"==typeof o)if(2&r){const e=t[++n];s+="["+o+(e.length>0?'="'+e+'"':"")+"]"}else 8&r?s+="."+o:4&r&&(s+=" "+o);else""===s||Ls(o)||(e+=Ns(i,s),s=""),r=o,i=i||!Ls(r);n++}return""!==s&&(e+=Ns(i,s)),e}const Vs={};function zs(t){$s(Oe(),Ie(),nn()+t,Ne())}function $s(t,e,n,r){if(!r)if(3==(3&e[2])){const r=t.preOrderCheckHooks;null!==r&&cn(e,r,n)}else{const r=t.preOrderHooks;null!==r&&ln(e,r,0,n)}rn(n)}function Us(t,e){return t<<17|e<<2}function Ws(t){return t>>17&32767}function Gs(t){return 2|t}function qs(t){return(131068&t)>>2}function Xs(t,e){return-131069&t|e<<2}function Ys(t){return 1|t}function Zs(t,e){const n=t.contentQueries;if(null!==n)for(let r=0;r<n.length;r+=2){const s=n[r],i=n[r+1];if(-1!==i){const n=t.data[i];qe(s),n.contentQueries(2,e[i],i)}}}function Qs(t,e,n,r,s,i,o,a,c,l){const u=e.blueprint.slice();return u[0]=s,u[2]=140|r,Ae(u),u[3]=u[15]=t,u[8]=n,u[10]=o||t&&t[10],u[11]=a||t&&t[11],u[12]=c||t&&t[12]||null,u[9]=l||t&&t[9]||null,u[6]=i,u[16]=2==e.type?t[16]:u,u}function Ks(t,e,n,r,s){let i=t.data[e];if(null===i)i=function(t,e,n,r,s){const i=Le(),o=je(),a=t.data[e]=function(t,e,n,r,s,i){return{type:n,index:r,insertBeforeIndex:null,injectorIndex:e?e.injectorIndex:-1,directiveStart:-1,directiveEnd:-1,directiveStylingLast:-1,propertyBindings:null,flags:0,providerIndexes:0,value:s,attrs:i,mergedAttrs:null,localNames:null,initialInputs:void 0,inputs:null,outputs:null,tViews:null,next:null,projectionNext:null,child:null,parent:e,projection:null,styles:null,stylesWithoutHost:null,residualStyles:void 0,classes:null,classesWithoutHost:null,residualClasses:void 0,classBindings:0,styleBindings:0}}(0,o?i:i&&i.parent,n,e,r,s);return null===t.firstChild&&(t.firstChild=a),null!==i&&(o?null==i.child&&null!==a.parent&&(i.child=a):null===i.next&&(i.next=a)),a}(t,e,n,r,s),ke.lFrame.inI18n&&(i.flags|=64);else if(64&i.type){i.type=n,i.value=r,i.attrs=s;const t=function(){const t=ke.lFrame,e=t.currentTNode;return t.isParent?e:e.parent}();i.injectorIndex=null===t?-1:t.injectorIndex}return Be(i,!0),i}function Js(t,e,n,r){if(0===n)return-1;const s=e.length;for(let i=0;i<n;i++)e.push(r),t.blueprint.push(r),t.data.push(null);return s}function ti(t,e,n){Ze(e);try{const r=t.viewQuery;null!==r&&ki(1,r,n);const s=t.template;null!==s&&ri(t,e,s,1,n),t.firstCreatePass&&(t.firstCreatePass=!1),t.staticContentQueries&&Zs(t,e),t.staticViewQueries&&ki(2,t.viewQuery,n);const i=t.components;null!==i&&function(t,e){for(let n=0;n<e.length;n++)Ei(t,e[n])}(e,i)}catch(r){throw t.firstCreatePass&&(t.incompleteFirstPass=!0),r}finally{e[2]&=-5,en()}}function ei(t,e,n,r){const s=e[2];if(256==(256&s))return;Ze(e);const i=Ne();try{Ae(e),ke.lFrame.bindingIndex=t.bindingStartIndex,null!==n&&ri(t,e,n,2,r);const o=3==(3&s);if(!i)if(o){const n=t.preOrderCheckHooks;null!==n&&cn(e,n,null)}else{const n=t.preOrderHooks;null!==n&&ln(e,n,0,null),un(e,0)}if(function(t){for(let e=ss(t);null!==e;e=is(e)){if(!e[2])continue;const t=e[9];for(let e=0;e<t.length;e++){const n=t[e],r=n[3];0==(1024&n[2])&&Te(r,1),n[2]|=1024}}}(e),function(t){for(let e=ss(t);null!==e;e=is(e))for(let t=Jt;t<e.length;t++){const n=e[t],r=n[1];Se(n)&&ei(r,n,r.template,n[8])}}(e),null!==t.contentQueries&&Zs(t,e),!i)if(o){const n=t.contentCheckHooks;null!==n&&cn(e,n)}else{const n=t.contentHooks;null!==n&&ln(e,n,1),un(e,1)}!function(t,e){const n=t.hostBindingOpCodes;if(null!==n)try{for(let t=0;t<n.length;t++){const r=n[t];if(r<0)rn(~r);else{const s=r,i=n[++t],o=n[++t];Ue(i,s),o(2,e[s])}}}finally{rn(-1)}}(t,e);const a=t.components;null!==a&&function(t,e){for(let n=0;n<e.length;n++)_i(t,e[n])}(e,a);const c=t.viewQuery;if(null!==c&&ki(2,c,r),!i)if(o){const n=t.viewCheckHooks;null!==n&&cn(e,n)}else{const n=t.viewHooks;null!==n&&ln(e,n,2),un(e,2)}!0===t.firstUpdatePass&&(t.firstUpdatePass=!1),i||(e[2]&=-73),1024&e[2]&&(e[2]&=-1025,Te(e[3],-1))}finally{en()}}function ni(t,e,n,r){const s=e[10],i=!Ne(),o=Ee(e);try{i&&!o&&s.begin&&s.begin(),o&&ti(t,e,r),ei(t,e,n,r)}finally{i&&!o&&s.end&&s.end()}}function ri(t,e,n,r,s){const i=nn(),o=2&r;try{rn(-1),o&&e.length>Kt&&$s(t,e,Kt,Ne()),n(r,s)}finally{rn(i)}}function si(t,e,n){if(ne(e)){const r=e.directiveEnd;for(let s=e.directiveStart;s<r;s++){const e=t.data[s];e.contentQueries&&e.contentQueries(1,n[s],s)}}}function ii(t,e,n){Fe()&&(function(t,e,n,r){const s=n.directiveStart,i=n.directiveEnd;t.firstCreatePass||xn(n,e),Gr(r,e);const o=n.initialInputs;for(let a=s;a<i;a++){const r=t.data[a],i=ie(r);i&&vi(e,n,r);const c=Mn(e,t,a,n);Gr(c,e),null!==o&&bi(0,a-s,c,r,0,o),i&&(De(n.index,e)[8]=c)}}(t,e,n,Ce(n,e)),128==(128&n.flags)&&function(t,e,n){const r=n.directiveStart,s=n.directiveEnd,i=n.index,o=ke.lFrame.currentDirectiveIndex;try{rn(i);for(let n=r;n<s;n++){const r=t.data[n],s=e[n];We(n),null===r.hostBindings&&0===r.hostVars&&null===r.hostAttrs||pi(r,s)}}finally{rn(-1),We(o)}}(t,e,n))}function oi(t,e,n=Ce){const r=e.localNames;if(null!==r){let s=e.index+1;for(let i=0;i<r.length;i+=2){const o=r[i+1],a=-1===o?n(e,t):t[o];t[s++]=a}}}function ai(t){const e=t.tView;return null===e||e.incompleteFirstPass?t.tView=ci(1,null,t.template,t.decls,t.vars,t.directiveDefs,t.pipeDefs,t.viewQuery,t.schemas,t.consts):e}function ci(t,e,n,r,s,i,o,a,c,l){const u=Kt+r,h=u+s,d=function(t,e){const n=[];for(let r=0;r<e;r++)n.push(r<t?null:Vs);return n}(u,h),p="function"==typeof l?l():l;return d[1]={type:t,blueprint:d,template:n,queries:null,viewQuery:a,declTNode:e,data:d.slice().fill(null,u),bindingStartIndex:u,expandoStartIndex:h,hostBindingOpCodes:null,firstCreatePass:!0,firstUpdatePass:!0,staticViewQueries:!1,staticContentQueries:!1,preOrderHooks:null,preOrderCheckHooks:null,contentHooks:null,contentCheckHooks:null,viewHooks:null,viewCheckHooks:null,destroyHooks:null,cleanup:null,contentQueries:null,components:null,directiveRegistry:"function"==typeof i?i():i,pipeRegistry:"function"==typeof o?o():o,firstChild:null,schemas:c,consts:p,incompleteFirstPass:!1}}function li(t,e,n,r){const s=Ii(e);null===n?s.push(r):(s.push(n),t.firstCreatePass&&Oi(t).push(r,s.length-1))}function ui(t,e,n){for(let r in t)if(t.hasOwnProperty(r)){const s=t[r];(n=null===n?{}:n).hasOwnProperty(r)?n[r].push(e,s):n[r]=[e,s]}return n}function hi(t,e,n,r){let s=!1;if(Fe()){const i=function(t,e,n){const r=t.directiveRegistry;let s=null;if(r)for(let i=0;i<r.length;i++){const o=r[i];js(n,o.selectors,!1)&&(s||(s=[]),Fn(xn(n,e),t,o.type),ie(o)?(fi(t,n),s.unshift(o)):s.push(o))}return s}(t,e,n),o=null===r?null:{"":-1};if(null!==i){s=!0,mi(n,t.data.length,i.length);for(let t=0;t<i.length;t++){const e=i[t];e.providersResolver&&e.providersResolver(e)}let r=!1,a=!1,c=Js(t,e,i.length,null);for(let s=0;s<i.length;s++){const l=i[s];n.mergedAttrs=vn(n.mergedAttrs,l.hostAttrs),yi(t,n,e,c,l),gi(c,l,o),null!==l.contentQueries&&(n.flags|=8),null===l.hostBindings&&null===l.hostAttrs&&0===l.hostVars||(n.flags|=128);const u=l.type.prototype;!r&&(u.ngOnChanges||u.ngOnInit||u.ngDoCheck)&&((t.preOrderHooks||(t.preOrderHooks=[])).push(n.index),r=!0),a||!u.ngOnChanges&&!u.ngDoCheck||((t.preOrderCheckHooks||(t.preOrderCheckHooks=[])).push(n.index),a=!0),c++}!function(t,e){const n=e.directiveEnd,r=t.data,s=e.attrs,i=[];let o=null,a=null;for(let c=e.directiveStart;c<n;c++){const t=r[c],n=t.inputs,l=null===s||Os(e)?null:Ci(n,s);i.push(l),o=ui(n,c,o),a=ui(t.outputs,c,a)}null!==o&&(o.hasOwnProperty("class")&&(e.flags|=16),o.hasOwnProperty("style")&&(e.flags|=32)),e.initialInputs=i,e.inputs=o,e.outputs=a}(t,n)}o&&function(t,e,n){if(e){const r=t.localNames=[];for(let t=0;t<e.length;t+=2){const s=n[e[t+1]];if(null==s)throw new at("301",`Export of name '${e[t+1]}' not found!`);r.push(e[t],s)}}}(n,r,o)}return n.mergedAttrs=vn(n.mergedAttrs,n.attrs),s}function di(t,e,n,r,s,i){const o=i.hostBindings;if(o){let n=t.hostBindingOpCodes;null===n&&(n=t.hostBindingOpCodes=[]);const i=~e.index;(function(t){let e=t.length;for(;e>0;){const n=t[--e];if("number"==typeof n&&n<0)return n}return 0})(n)!=i&&n.push(i),n.push(r,s,o)}}function pi(t,e){null!==t.hostBindings&&t.hostBindings(1,e)}function fi(t,e){e.flags|=2,(t.components||(t.components=[])).push(e.index)}function gi(t,e,n){if(n){if(e.exportAs)for(let r=0;r<e.exportAs.length;r++)n[e.exportAs[r]]=t;ie(e)&&(n[""]=t)}}function mi(t,e,n){t.flags|=1,t.directiveStart=e,t.directiveEnd=e+n,t.providerIndexes=e}function yi(t,e,n,r,s){t.data[r]=s;const i=s.factory||(s.factory=oe(s.type)),o=new fn(i,ie(s),null);t.blueprint[r]=o,n[r]=o,di(t,e,0,r,Js(t,n,s.hostVars,Vs),s)}function vi(t,e,n){const r=Ce(e,t),s=ai(n),i=t[10],o=Si(t,Qs(t,s,null,n.onPush?64:16,r,e,i,i.createRenderer(r,n),null,null));t[e.index]=o}function bi(t,e,n,r,s,i){const o=i[e];if(null!==o){const t=r.setInput;for(let e=0;e<o.length;){const s=o[e++],i=o[e++],a=o[e++];null!==t?r.setInput(n,a,s,i):n[i]=a}}}function Ci(t,e){let n=null,r=0;for(;r<e.length;){const s=e[r];if(0!==s)if(5!==s){if("number"==typeof s)break;t.hasOwnProperty(s)&&(null===n&&(n=[]),n.push(s,t[s],e[r+1])),r+=2}else r+=2;else r+=4}return n}function wi(t,e,n,r){return new Array(t,!0,!1,e,null,0,r,n,null,null)}function _i(t,e){const n=De(e,t);if(Se(n)){const t=n[1];80&n[2]?ei(t,n,t.template,n[8]):n[5]>0&&Di(n)}}function Di(t){for(let n=ss(t);null!==n;n=is(n))for(let t=Jt;t<n.length;t++){const e=n[t];if(1024&e[2]){const t=e[1];ei(t,e,t.template,e[8])}else e[5]>0&&Di(e)}const e=t[1].components;if(null!==e)for(let n=0;n<e.length;n++){const r=De(e[n],t);Se(r)&&r[5]>0&&Di(r)}}function Ei(t,e){const n=De(e,t),r=n[1];!function(t,e){for(let n=e.length;n<t.blueprint.length;n++)e.push(t.blueprint[n])}(r,n),ti(r,n,n[8])}function Si(t,e){return t[13]?t[14][4]=e:t[13]=e,t[14]=e,e}function xi(t){for(;t;){t[2]|=64;const e=rs(t);if(0!=(512&t[2])&&!e)return t;t=e}return null}function Ai(t,e,n){const r=e[10];r.begin&&r.begin();try{ei(t,e,t.template,n)}catch(s){throw Pi(e,s),s}finally{r.end&&r.end()}}function Ti(t){!function(t){for(let e=0;e<t.components.length;e++){const n=t.components[e],r=qr(n),s=r[1];ni(s,r,s.template,n)}}(t[8])}function ki(t,e,n){qe(0),e(t,n)}const Fi=(()=>Promise.resolve(null))();function Ii(t){return t[7]||(t[7]=[])}function Oi(t){return t.cleanup||(t.cleanup=[])}function Pi(t,e){const n=t[9],r=n?n.get(Qr,null):null;r&&r.handleError(e)}function Ri(t,e,n,r,s){for(let i=0;i<n.length;){const o=n[i++],a=n[i++],c=e[o],l=t.data[o];null!==l.setInput?l.setInput(c,s,r,a):c[a]=s}}function Li(t,e,n){let r=n?t.styles:null,s=n?t.classes:null,i=0;if(null!==e)for(let o=0;o<e.length;o++){const t=e[o];"number"==typeof t?i=t:1==i?s=nt(s,t):2==i&&(r=nt(r,t+": "+e[++o]+";"))}n?t.styles=r:t.stylesWithoutHost=r,n?t.classes=s:t.classesWithoutHost=s}const Bi=new Gn("INJECTOR",-1);class ji{get(t,e=rr){if(e===rr){const e=new Error(`NullInjectorError: No provider for ${et(t)}!`);throw e.name="NullInjectorError",e}return e}}const Mi=new Gn("Set Injector scope."),Ni={},Hi={};let Vi;function zi(){return void 0===Vi&&(Vi=new ji),Vi}function $i(t,e=null,n=null,r){return new Ui(t,n,e||zi(),r)}class Ui{constructor(t,e,n,r=null){this.parent=n,this.records=new Map,this.injectorDefTypes=new Set,this.onDestroy=new Set,this._destroyed=!1;const s=[];e&&Zn(e,n=>this.processProvider(n,t,e)),Zn([t],t=>this.processInjectorType(t,[],s)),this.records.set(Bi,qi(void 0,this));const i=this.records.get(Mi);this.scope=null!=i?i.value:null,this.source=r||("object"==typeof t?null:et(t))}get destroyed(){return this._destroyed}destroy(){this.assertNotDestroyed(),this._destroyed=!0;try{this.onDestroy.forEach(t=>t.ngOnDestroy())}finally{this.records.clear(),this.onDestroy.clear(),this.injectorDefTypes.clear()}}get(t,e=rr,n=Ct.Default){this.assertNotDestroyed();const r=cr(this);try{if(!(n&Ct.SkipSelf)){let e=this.records.get(t);if(void 0===e){const n=("function"==typeof(s=t)||"object"==typeof s&&s instanceof Gn)&&pt(t);e=n&&this.injectableDefInScope(n)?qi(Wi(t),Ni):null,this.records.set(t,e)}if(null!=e)return this.hydrate(t,e)}return(n&Ct.Self?zi():this.parent).get(t,e=n&Ct.Optional&&e===rr?null:e)}catch(i){if("NullInjectorError"===i.name){if((i.ngTempTokenPath=i.ngTempTokenPath||[]).unshift(et(t)),r)throw i;return function(t,e,n,r){const s=t.ngTempTokenPath;throw e[ir]&&s.unshift(e[ir]),t.message=function(t,e,n,r=null){t=t&&"\n"===t.charAt(0)&&"\u0275"==t.charAt(1)?t.substr(2):t;let s=et(e);if(Array.isArray(e))s=e.map(et).join(" -> ");else if("object"==typeof e){let t=[];for(let n in e)if(e.hasOwnProperty(n)){let r=e[n];t.push(n+":"+("string"==typeof r?JSON.stringify(r):et(r)))}s=`{${t.join(", ")}}`}return`${n}${r?"("+r+")":""}[${s}]: ${t.replace(sr,"\n  ")}`}("\n"+t.message,s,n,r),t.ngTokenPath=s,t.ngTempTokenPath=null,t}(i,t,"R3InjectorError",this.source)}throw i}finally{cr(r)}var s}_resolveInjectorDefTypes(){this.injectorDefTypes.forEach(t=>this.get(t))}toString(){const t=[];return this.records.forEach((e,n)=>t.push(et(n))),`R3Injector[${t.join(", ")}]`}assertNotDestroyed(){if(this._destroyed)throw new Error("Injector has already been destroyed.")}processInjectorType(t,e,n){if(!(t=it(t)))return!1;let r=gt(t);const s=null==r&&t.ngModule||void 0,i=void 0===s?t:s,o=-1!==n.indexOf(i);if(void 0!==s&&(r=gt(s)),null==r)return!1;if(null!=r.imports&&!o){let t;n.push(i);try{Zn(r.imports,r=>{this.processInjectorType(r,e,n)&&(void 0===t&&(t=[]),t.push(r))})}finally{}if(void 0!==t)for(let e=0;e<t.length;e++){const{ngModule:n,providers:r}=t[e];Zn(r,t=>this.processProvider(t,n,r||Pt))}}this.injectorDefTypes.add(i);const a=oe(i)||(()=>new i);this.records.set(i,qi(a,Ni));const c=r.providers;if(null!=c&&!o){const e=t;Zn(c,t=>this.processProvider(t,e,c))}return void 0!==s&&void 0!==t.providers}processProvider(t,e,n){let r=Yi(t=it(t))?t:it(t&&t.provide);const s=function(t,e,n){return Xi(t)?qi(void 0,t.useValue):qi(Gi(t),Ni)}(t);if(Yi(t)||!0!==t.multi)this.records.get(r);else{let e=this.records.get(r);e||(e=qi(void 0,Ni,!0),e.factory=()=>hr(e.multi),this.records.set(r,e)),r=t,e.multi.push(t)}this.records.set(r,s)}hydrate(t,e){var n;return e.value===Ni&&(e.value=Hi,e.value=e.factory()),"object"==typeof e.value&&e.value&&null!==(n=e.value)&&"object"==typeof n&&"function"==typeof n.ngOnDestroy&&this.onDestroy.add(e.value),e.value}injectableDefInScope(t){if(!t.providedIn)return!1;const e=it(t.providedIn);return"string"==typeof e?"any"===e||e===this.scope:this.injectorDefTypes.has(e)}}function Wi(t){const e=pt(t),n=null!==e?e.factory:oe(t);if(null!==n)return n;if(t instanceof Gn)throw new Error(`Token ${et(t)} is missing a \u0275prov definition.`);if(t instanceof Function)return function(t){const e=t.length;if(e>0){const n=Jn(e,"?");throw new Error(`Can't resolve all parameters for ${et(t)}: (${n.join(", ")}).`)}const n=function(t){const e=t&&(t[mt]||t[vt]);if(e){const n=function(t){if(t.hasOwnProperty("name"))return t.name;const e=(""+t).match(/^function\s*([^\s(]+)/);return null===e?"":e[1]}(t);return console.warn(`DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${n}" class.`),e}return null}(t);return null!==n?()=>n.factory(t):()=>new t}(t);throw new Error("unreachable")}function Gi(t,e,n){let r;if(Yi(t)){const e=it(t);return oe(e)||Wi(e)}if(Xi(t))r=()=>it(t.useValue);else if((s=t)&&s.useFactory)r=()=>t.useFactory(...hr(t.deps||[]));else if(function(t){return!(!t||!t.useExisting)}(t))r=()=>ur(it(t.useExisting));else{const e=it(t&&(t.useClass||t.provide));if(!function(t){return!!t.deps}(t))return oe(e)||Wi(e);r=()=>new e(...hr(t.deps))}var s;return r}function qi(t,e,n=!1){return{factory:t,value:e,multi:n?[]:void 0}}function Xi(t){return null!==t&&"object"==typeof t&&or in t}function Yi(t){return"function"==typeof t}const Zi=function(t,e,n){return function(t,e=null,n=null,r){const s=$i(t,e,n,r);return s._resolveInjectorDefTypes(),s}({name:n},e,t,n)};let Qi=(()=>{class t{static create(t,e){return Array.isArray(t)?Zi(t,e,""):Zi(t.providers,t.parent,t.name||"")}}return t.THROW_IF_NOT_FOUND=rr,t.NULL=new ji,t.\u0275prov=ht({token:t,providedIn:"any",factory:()=>ur(Bi)}),t.__NG_ELEMENT_ID__=-1,t})();function Ki(t,e){an(qr(t)[1],Re())}function Ji(t){let e=Object.getPrototypeOf(t.type.prototype).constructor,n=!0;const r=[t];for(;e;){let s;if(ie(t))s=e.\u0275cmp||e.\u0275dir;else{if(e.\u0275cmp)throw new Error("Directives cannot inherit Components");s=e.\u0275dir}if(s){if(n){r.push(s);const e=t;e.inputs=to(t.inputs),e.declaredInputs=to(t.declaredInputs),e.outputs=to(t.outputs);const n=s.hostBindings;n&&ro(t,n);const i=s.viewQuery,o=s.contentQueries;if(i&&eo(t,i),o&&no(t,o),tt(t.inputs,s.inputs),tt(t.declaredInputs,s.declaredInputs),tt(t.outputs,s.outputs),ie(s)&&s.data.animation){const e=t.data;e.animation=(e.animation||[]).concat(s.data.animation)}}const e=s.features;if(e)for(let r=0;r<e.length;r++){const s=e[r];s&&s.ngInherit&&s(t),s===Ji&&(n=!1)}}e=Object.getPrototypeOf(e)}!function(t){let e=0,n=null;for(let r=t.length-1;r>=0;r--){const s=t[r];s.hostVars=e+=s.hostVars,s.hostAttrs=vn(s.hostAttrs,n=vn(n,s.hostAttrs))}}(r)}function to(t){return t===Ot?{}:t===Pt?[]:t}function eo(t,e){const n=t.viewQuery;t.viewQuery=n?(t,r)=>{e(t,r),n(t,r)}:e}function no(t,e){const n=t.contentQueries;t.contentQueries=n?(t,r,s)=>{e(t,r,s),n(t,r,s)}:e}function ro(t,e){const n=t.hostBindings;t.hostBindings=n?(t,r)=>{e(t,r),n(t,r)}:e}let so=null;function io(){if(!so){const t=It.Symbol;if(t&&t.iterator)so=t.iterator;else{const t=Object.getOwnPropertyNames(Map.prototype);for(let e=0;e<t.length;++e){const n=t[e];"entries"!==n&&"size"!==n&&Map.prototype[n]===Map.prototype.entries&&(so=n)}}}return so}class oo{constructor(t){this.wrapped=t}static wrap(t){return new oo(t)}static unwrap(t){return oo.isWrapped(t)?t.wrapped:t}static isWrapped(t){return t instanceof oo}}function ao(t){return!!co(t)&&(Array.isArray(t)||!(t instanceof Map)&&io()in t)}function co(t){return null!==t&&("function"==typeof t||"object"==typeof t)}function lo(t,e,n){return!Object.is(t[e],n)&&(t[e]=n,!0)}function uo(t,e,n,r){const s=Ie();return lo(s,ze(),e)&&(Oe(),function(t,e,n,r,s,i){const o=Ce(t,e);!function(t,e,n,r,s,i,o){if(null==i)me(t)?t.removeAttribute(e,s,n):e.removeAttribute(s);else{const a=null==o?ct(i):o(i,r||"",s);me(t)?t.setAttribute(e,s,a,n):n?e.setAttributeNS(n,s,a):e.setAttribute(s,a)}}(e[11],o,i,t.value,n,r,s)}(sn(),s,t,e,n,r)),uo}function ho(t,e,n,r){return lo(t,ze(),n)?e+ct(n)+r:Vs}function po(t,e,n,r,s,i,o,a){const c=Ie(),l=Oe(),u=t+Kt,h=l.firstCreatePass?function(t,e,n,r,s,i,o,a,c){const l=e.consts,u=Ks(e,t,4,o||null,xe(l,a));hi(e,n,u,xe(l,c)),an(e,u);const h=u.tViews=ci(2,u,r,s,i,e.directiveRegistry,e.pipeRegistry,null,e.schemas,l);return null!==e.queries&&(e.queries.template(e,u),h.queries=e.queries.embeddedTView(u)),u}(u,l,c,e,n,r,s,i,o):l.data[u];Be(h,!1);const d=c[11].createComment("");Cs(l,c,d,h),Gr(d,c),Si(c,c[u]=wi(d,c,d,h)),se(h)&&ii(l,c,h),null!=o&&oi(c,h,a)}function fo(t){return _e(ke.lFrame.contextLView,Kt+t)}function go(t,e=Ct.Default){const n=Ie();return null===n?ur(t,e):Pn(Re(),n,it(t),e)}function mo(t,e,n){const r=Ie();return lo(r,ze(),e)&&function(t,e,n,r,s,i,o,a){const c=Ce(e,n);let l,u=e.inputs;var h;null!=u&&(l=u[r])?(Ri(t,n,l,r,s),re(e)&&function(t,e){const n=De(e,t);16&n[2]||(n[2]|=64)}(n,e.index)):3&e.type&&(r="class"===(h=r)?"className":"for"===h?"htmlFor":"formaction"===h?"formAction":"innerHtml"===h?"innerHTML":"readonly"===h?"readOnly":"tabindex"===h?"tabIndex":h,s=null!=o?o(s,e.value||"",r):s,me(i)?i.setProperty(c,r,s):yn(r)||(c.setProperty?c.setProperty(r,s):c[r]=s))}(Oe(),sn(),r,t,e,r[11],n),mo}function yo(t,e,n,r,s){const i=s?"class":"style";Ri(t,n,e.inputs[i],i,r)}function vo(t,e,n,r){const s=Ie(),i=Oe(),o=Kt+t,a=s[11],c=s[o]=cs(a,e,ke.lFrame.currentNamespace),l=i.firstCreatePass?function(t,e,n,r,s,i,o){const a=e.consts,c=Ks(e,t,2,s,xe(a,i));return hi(e,n,c,xe(a,o)),null!==c.attrs&&Li(c,c.attrs,!1),null!==c.mergedAttrs&&Li(c,c.mergedAttrs,!0),null!==e.queries&&e.queries.elementStart(e,c),c}(o,i,s,0,e,n,r):i.data[o];Be(l,!0);const u=l.mergedAttrs;null!==u&&gn(a,c,u);const h=l.classes;null!==h&&Ts(a,c,h);const d=l.styles;null!==d&&As(a,c,d),64!=(64&l.flags)&&Cs(i,s,c,l),0===ke.lFrame.elementDepthCount&&Gr(c,s),ke.lFrame.elementDepthCount++,se(l)&&(ii(i,s,l),si(i,l,s)),null!==r&&oi(s,l)}function bo(){let t=Re();je()?Me():(t=t.parent,Be(t,!1));const e=t;ke.lFrame.elementDepthCount--;const n=Oe();n.firstCreatePass&&(an(n,t),ne(t)&&n.queries.elementEnd(t)),null!=e.classesWithoutHost&&function(t){return 0!=(16&t.flags)}(e)&&yo(n,e,Ie(),e.classesWithoutHost,!0),null!=e.stylesWithoutHost&&function(t){return 0!=(32&t.flags)}(e)&&yo(n,e,Ie(),e.stylesWithoutHost,!1)}function Co(t,e,n,r){vo(t,e,n,r),bo()}function wo(t,e,n){(function(t,e,n){const r=Ie(),s=Oe(),i=t+Kt,o=s.firstCreatePass?function(t,e,n,r,s){const i=e.consts,o=xe(i,r),a=Ks(e,t,8,"ng-container",o);return null!==o&&Li(a,o,!0),hi(e,n,a,xe(i,s)),null!==e.queries&&e.queries.elementStart(e,a),a}(i,s,r,e,n):s.data[i];Be(o,!0);const a=r[i]=r[11].createComment("");Cs(s,r,a,o),Gr(a,r),se(o)&&(ii(s,r,o),si(s,o,r)),null!=n&&oi(r,o)})(t,e,n),function(){let t=Re();const e=Oe();je()?Me():(t=t.parent,Be(t,!1)),e.firstCreatePass&&(an(e,t),ne(t)&&e.queries.elementEnd(t))}()}function _o(){return Ie()}function Do(t){return!!t&&"function"==typeof t.then}function Eo(t){return!!t&&"function"==typeof t.subscribe}const So=Eo;function xo(t,e,n,r){const s=Ie(),i=Oe(),o=Re();return function(t,e,n,r,s,i,o,a){const c=se(r),l=t.firstCreatePass&&Oi(t),u=Ii(e);let h=!0;if(3&r.type||a){const d=Ce(r,e),p=a?a(d):d,f=u.length,g=a?t=>a(ve(t[r.index])):r.index;if(me(n)){let o=null;if(!a&&c&&(o=function(t,e,n,r){const s=t.cleanup;if(null!=s)for(let i=0;i<s.length-1;i+=2){const t=s[i];if(t===n&&s[i+1]===r){const t=e[7],n=s[i+2];return t.length>n?t[n]:null}"string"==typeof t&&(i+=2)}return null}(t,e,s,r.index)),null!==o)(o.__ngLastListenerFn__||o).__ngNextListenerFn__=i,o.__ngLastListenerFn__=i,h=!1;else{i=To(r,e,0,i,!1);const t=n.listen(p,s,i);u.push(i,t),l&&l.push(s,g,f,f+1)}}else i=To(r,e,0,i,!0),p.addEventListener(s,i,o),u.push(i),l&&l.push(s,g,f,o)}else i=To(r,e,0,i,!1);const d=r.outputs;let p;if(h&&null!==d&&(p=d[s])){const t=p.length;if(t)for(let n=0;n<t;n+=2){const t=e[p[n]][p[n+1]].subscribe(i),o=u.length;u.push(i,t),l&&l.push(s,r.index,o,-(o+1))}}}(i,s,s[11],o,t,e,!!n,r),xo}function Ao(t,e,n,r){try{return!1!==n(r)}catch(s){return Pi(t,s),!1}}function To(t,e,n,r,s){return function n(i){if(i===Function)return r;const o=2&t.flags?De(t.index,e):e;0==(32&e[2])&&xi(o);let a=Ao(e,0,r,i),c=n.__ngNextListenerFn__;for(;c;)a=Ao(e,0,c,i)&&a,c=c.__ngNextListenerFn__;return s&&!1===a&&(i.preventDefault(),i.returnValue=!1),a}}function ko(t=1){return function(t){return(ke.lFrame.contextLView=function(t,e){for(;t>0;)e=e[15],t--;return e}(t,ke.lFrame.contextLView))[8]}(t)}function Fo(t,e){let n=null;const r=function(t){const e=t.attrs;if(null!=e){const t=e.indexOf(5);if(0==(1&t))return e[t+1]}return null}(t);for(let s=0;s<e.length;s++){const i=e[s];if("*"!==i){if(null===r?js(t,i,!0):Ms(r,i))return s}else n=s}return n}function Io(t){const e=Ie()[16][6];if(!e.projection){const n=e.projection=Jn(t?t.length:1,null),r=n.slice();let s=e.child;for(;null!==s;){const e=t?Fo(s,t):0;null!==e&&(r[e]?r[e].projectionNext=s:n[e]=s,r[e]=s),s=s.next}}}function Oo(t,e=0,n){const r=Ie(),s=Oe(),i=Ks(s,Kt+t,16,null,n||null);null===i.projection&&(i.projection=e),Me(),64!=(64&i.flags)&&function(t,e,n){xs(e[11],0,e,n,ps(t,n,e),vs(n.parent||e[6],n,e))}(s,r,i)}function Po(t,e,n,r,s){const i=t[n+1],o=null===e;let a=r?Ws(i):qs(i),c=!1;for(;0!==a&&(!1===c||o);){const n=t[a+1];Ro(t[a],e)&&(c=!0,t[a+1]=r?Ys(n):Gs(n)),a=r?Ws(n):qs(n)}c&&(t[n+1]=r?Gs(i):Ys(i))}function Ro(t,e){return null===t||null==e||(Array.isArray(t)?t[1]:t)===e||!(!Array.isArray(t)||"string"!=typeof e)&&nr(t,e)>=0}const Lo={textEnd:0,key:0,keyEnd:0,value:0,valueEnd:0};function Bo(t){return t.substring(Lo.key,Lo.keyEnd)}function jo(t,e){const n=Lo.textEnd;return n===e?-1:(e=Lo.keyEnd=function(t,e,n){for(;e<n&&t.charCodeAt(e)>32;)e++;return e}(t,Lo.key=e,n),Mo(t,e,n))}function Mo(t,e,n){for(;e<n&&t.charCodeAt(e)<=32;)e++;return e}function No(t,e,n){return $o(t,e,n,!1),No}function Ho(t,e){return $o(t,e,null,!0),Ho}function Vo(t){Uo(tr,zo,t,!0)}function zo(t,e){for(let n=function(t){return function(t){Lo.key=0,Lo.keyEnd=0,Lo.value=0,Lo.valueEnd=0,Lo.textEnd=t.length}(t),jo(t,Mo(t,0,Lo.textEnd))}(e);n>=0;n=jo(e,n))tr(t,Bo(e),!0)}function $o(t,e,n,r){const s=Ie(),i=Oe(),o=$e(2);i.firstUpdatePass&&Go(i,t,o,r),e!==Vs&&lo(s,o,e)&&Yo(i,i.data[nn()],s,s[11],t,s[o+1]=function(t,e){return null==t||("string"==typeof e?t+=e:"object"==typeof t&&(t=et(wr(t)))),t}(e,n),r,o)}function Uo(t,e,n,r){const s=Oe(),i=$e(2);s.firstUpdatePass&&Go(s,null,i,r);const o=Ie();if(n!==Vs&&lo(o,i,n)){const a=s.data[nn()];if(Ko(a,r)&&!Wo(s,i)){let t=r?a.classesWithoutHost:a.stylesWithoutHost;null!==t&&(n=nt(t,n||"")),yo(s,a,o,n,r)}else!function(t,e,n,r,s,i,o,a){s===Vs&&(s=Pt);let c=0,l=0,u=0<s.length?s[0]:null,h=0<i.length?i[0]:null;for(;null!==u||null!==h;){const d=c<s.length?s[c+1]:void 0,p=l<i.length?i[l+1]:void 0;let f,g=null;u===h?(c+=2,l+=2,d!==p&&(g=h,f=p)):null===h||null!==u&&u<h?(c+=2,g=u):(l+=2,g=h,f=p),null!==g&&Yo(t,e,n,r,g,f,o,a),u=c<s.length?s[c]:null,h=l<i.length?i[l]:null}}(s,a,o,o[11],o[i+1],o[i+1]=function(t,e,n){if(null==n||""===n)return Pt;const r=[],s=wr(n);if(Array.isArray(s))for(let i=0;i<s.length;i++)t(r,s[i],!0);else if("object"==typeof s)for(const i in s)s.hasOwnProperty(i)&&t(r,i,s[i]);else"string"==typeof s&&e(r,s);return r}(t,e,n),r,i)}}function Wo(t,e){return e>=t.expandoStartIndex}function Go(t,e,n,r){const s=t.data;if(null===s[n+1]){const i=s[nn()],o=Wo(t,n);Ko(i,r)&&null===e&&!o&&(e=!1),e=function(t,e,n,r){const s=function(t){const e=ke.lFrame.currentDirectiveIndex;return-1===e?null:t[e]}(t);let i=r?e.residualClasses:e.residualStyles;if(null===s)0===(r?e.classBindings:e.styleBindings)&&(n=Xo(n=qo(null,t,e,n,r),e.attrs,r),i=null);else{const o=e.directiveStylingLast;if(-1===o||t[o]!==s)if(n=qo(s,t,e,n,r),null===i){let n=function(t,e,n){const r=n?e.classBindings:e.styleBindings;if(0!==qs(r))return t[Ws(r)]}(t,e,r);void 0!==n&&Array.isArray(n)&&(n=qo(null,t,e,n[1],r),n=Xo(n,e.attrs,r),function(t,e,n,r){t[Ws(n?e.classBindings:e.styleBindings)]=r}(t,e,r,n))}else i=function(t,e,n){let r;const s=e.directiveEnd;for(let i=1+e.directiveStylingLast;i<s;i++)r=Xo(r,t[i].hostAttrs,n);return Xo(r,e.attrs,n)}(t,e,r)}return void 0!==i&&(r?e.residualClasses=i:e.residualStyles=i),n}(s,i,e,r),function(t,e,n,r,s,i){let o=i?e.classBindings:e.styleBindings,a=Ws(o),c=qs(o);t[r]=n;let l,u=!1;if(Array.isArray(n)){const t=n;l=t[1],(null===l||nr(t,l)>0)&&(u=!0)}else l=n;if(s)if(0!==c){const e=Ws(t[a+1]);t[r+1]=Us(e,a),0!==e&&(t[e+1]=Xs(t[e+1],r)),t[a+1]=131071&t[a+1]|r<<17}else t[r+1]=Us(a,0),0!==a&&(t[a+1]=Xs(t[a+1],r)),a=r;else t[r+1]=Us(c,0),0===a?a=r:t[c+1]=Xs(t[c+1],r),c=r;u&&(t[r+1]=Gs(t[r+1])),Po(t,l,r,!0),Po(t,l,r,!1),function(t,e,n,r,s){const i=s?t.residualClasses:t.residualStyles;null!=i&&"string"==typeof e&&nr(i,e)>=0&&(n[r+1]=Ys(n[r+1]))}(e,l,t,r,i),o=Us(a,c),i?e.classBindings=o:e.styleBindings=o}(s,i,e,n,o,r)}}function qo(t,e,n,r,s){let i=null;const o=n.directiveEnd;let a=n.directiveStylingLast;for(-1===a?a=n.directiveStart:a++;a<o&&(i=e[a],r=Xo(r,i.hostAttrs,s),i!==t);)a++;return null!==t&&(n.directiveStylingLast=a),r}function Xo(t,e,n){const r=n?1:2;let s=-1;if(null!==e)for(let i=0;i<e.length;i++){const o=e[i];"number"==typeof o?s=o:s===r&&(Array.isArray(t)||(t=void 0===t?[]:["",t]),tr(t,o,!!n||e[++i]))}return void 0===t?null:t}function Yo(t,e,n,r,s,i,o,a){if(!(3&e.type))return;const c=t.data,l=c[a+1];Qo(1==(1&l)?Zo(c,e,n,s,qs(l),o):void 0)||(Qo(i)||2==(2&l)&&(i=Zo(c,null,n,s,a,o)),function(t,e,n,r,s){const i=me(t);if(e)s?i?t.addClass(n,r):n.classList.add(r):i?t.removeClass(n,r):n.classList.remove(r);else{let e=-1===r.indexOf("-")?void 0:es.DashCase;if(null==s)i?t.removeStyle(n,r,e):n.style.removeProperty(r);else{const o="string"==typeof s&&s.endsWith("!important");o&&(s=s.slice(0,-10),e|=es.Important),i?t.setStyle(n,r,s,e):n.style.setProperty(r,s,o?"important":"")}}}(r,o,be(nn(),n),s,i))}function Zo(t,e,n,r,s,i){const o=null===e;let a;for(;s>0;){const e=t[s],i=Array.isArray(e),c=i?e[1]:e,l=null===c;let u=n[s+1];u===Vs&&(u=l?Pt:void 0);let h=l?er(u,r):c===r?u:void 0;if(i&&!Qo(h)&&(h=er(e,r)),Qo(h)&&(a=h,o))return a;const d=t[s+1];s=o?Ws(d):qs(d)}if(null!==e){let t=i?e.residualClasses:e.residualStyles;null!=t&&(a=er(t,r))}return a}function Qo(t){return void 0!==t}function Ko(t,e){return 0!=(t.flags&(e?16:32))}function Jo(t,e=""){const n=Ie(),r=Oe(),s=t+Kt,i=r.firstCreatePass?Ks(r,s,1,e,null):r.data[s],o=n[s]=function(t,e){return me(t)?t.createText(e):t.createTextNode(e)}(n[11],e);Cs(r,n,o,i),Be(i,!1)}function ta(t){return ea("",t,""),ta}function ea(t,e,n){const r=Ie(),s=ho(r,t,e,n);return s!==Vs&&function(t,e,n){const r=be(e,t);!function(t,e,n){me(t)?t.setValue(e,n):e.textContent=n}(t[11],r,n)}(r,nn(),s),ea}function na(t,e,n){Uo(tr,zo,ho(Ie(),t,e,n),!0)}const ra=void 0;var sa=["en",[["a","p"],["AM","PM"],ra],[["AM","PM"],ra,ra],[["S","M","T","W","T","F","S"],["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],["Su","Mo","Tu","We","Th","Fr","Sa"]],ra,[["J","F","M","A","M","J","J","A","S","O","N","D"],["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],["January","February","March","April","May","June","July","August","September","October","November","December"]],ra,[["B","A"],["BC","AD"],["Before Christ","Anno Domini"]],0,[6,0],["M/d/yy","MMM d, y","MMMM d, y","EEEE, MMMM d, y"],["h:mm a","h:mm:ss a","h:mm:ss a z","h:mm:ss a zzzz"],["{1}, {0}",ra,"{1} 'at' {0}",ra],[".",",",";","%","+","-","E","\xd7","\u2030","\u221e","NaN",":"],["#,##0.###","#,##0%","\xa4#,##0.00","#E0"],"USD","$","US Dollar",{},"ltr",function(t){let e=Math.floor(Math.abs(t)),n=t.toString().replace(/^[^.]*\.?/,"").length;return 1===e&&0===n?1:5}];let ia={};function oa(t){const e=function(t){return t.toLowerCase().replace(/_/g,"-")}(t);let n=aa(e);if(n)return n;const r=e.split("-")[0];if(n=aa(r),n)return n;if("en"===r)return sa;throw new Error(`Missing locale data for the locale "${t}".`)}function aa(t){return t in ia||(ia[t]=It.ng&&It.ng.common&&It.ng.common.locales&&It.ng.common.locales[t]),ia[t]}var ca=function(t){return t[t.LocaleId=0]="LocaleId",t[t.DayPeriodsFormat=1]="DayPeriodsFormat",t[t.DayPeriodsStandalone=2]="DayPeriodsStandalone",t[t.DaysFormat=3]="DaysFormat",t[t.DaysStandalone=4]="DaysStandalone",t[t.MonthsFormat=5]="MonthsFormat",t[t.MonthsStandalone=6]="MonthsStandalone",t[t.Eras=7]="Eras",t[t.FirstDayOfWeek=8]="FirstDayOfWeek",t[t.WeekendRange=9]="WeekendRange",t[t.DateFormat=10]="DateFormat",t[t.TimeFormat=11]="TimeFormat",t[t.DateTimeFormat=12]="DateTimeFormat",t[t.NumberSymbols=13]="NumberSymbols",t[t.NumberFormats=14]="NumberFormats",t[t.CurrencyCode=15]="CurrencyCode",t[t.CurrencySymbol=16]="CurrencySymbol",t[t.CurrencyName=17]="CurrencyName",t[t.Currencies=18]="Currencies",t[t.Directionality=19]="Directionality",t[t.PluralCase=20]="PluralCase",t[t.ExtraData=21]="ExtraData",t}({});const la="en-US";let ua=la;function ha(t){var e,n;n="Expected localeId to be defined",null==(e=t)&&function(t,e,n,r){throw new Error(`ASSERTION ERROR: ${t} [Expected=> null != ${e} <=Actual]`)}(n,e),"string"==typeof t&&(ua=t.toLowerCase().replace(/_/g,"-"))}function da(t,e,n,r,s){if(t=it(t),Array.isArray(t))for(let i=0;i<t.length;i++)da(t[i],e,n,r,s);else{const i=Oe(),o=Ie();let a=Yi(t)?t:it(t.provide),c=Gi(t);const l=Re(),u=1048575&l.providerIndexes,h=l.directiveStart,d=l.providerIndexes>>20;if(Yi(t)||!t.multi){const r=new fn(c,s,go),p=ga(a,e,s?u:u+d,h);-1===p?(Fn(xn(l,o),i,a),pa(i,t,e.length),e.push(a),l.directiveStart++,l.directiveEnd++,s&&(l.providerIndexes+=1048576),n.push(r),o.push(r)):(n[p]=r,o[p]=r)}else{const p=ga(a,e,u+d,h),f=ga(a,e,u,u+d),g=p>=0&&n[p],m=f>=0&&n[f];if(s&&!m||!s&&!g){Fn(xn(l,o),i,a);const u=function(t,e,n,r,s){const i=new fn(t,n,go);return i.multi=[],i.index=e,i.componentProviders=0,fa(i,s,r&&!n),i}(s?ya:ma,n.length,s,r,c);!s&&m&&(n[f].providerFactory=u),pa(i,t,e.length,0),e.push(a),l.directiveStart++,l.directiveEnd++,s&&(l.providerIndexes+=1048576),n.push(u),o.push(u)}else pa(i,t,p>-1?p:f,fa(n[s?f:p],c,!s&&r));!s&&r&&m&&n[f].componentProviders++}}}function pa(t,e,n,r){const s=Yi(e);if(s||e.useClass){const i=(e.useClass||e).prototype.ngOnDestroy;if(i){const o=t.destroyHooks||(t.destroyHooks=[]);if(!s&&e.multi){const t=o.indexOf(n);-1===t?o.push(n,[r,i]):o[t+1].push(r,i)}else o.push(n,i)}}}function fa(t,e,n){return n&&t.componentProviders++,t.multi.push(e)-1}function ga(t,e,n,r){for(let s=n;s<r;s++)if(e[s]===t)return s;return-1}function ma(t,e,n,r){return va(this.multi,[])}function ya(t,e,n,r){const s=this.multi;let i;if(this.providerFactory){const t=this.providerFactory.componentProviders,e=Mn(n,n[1],this.providerFactory.index,r);i=e.slice(0,t),va(s,i);for(let n=t;n<e.length;n++)i.push(e[n])}else i=[],va(s,i);return i}function va(t,e){for(let n=0;n<t.length;n++)e.push((0,t[n])());return e}function ba(t,e=[]){return n=>{n.providersResolver=(n,r)=>function(t,e,n){const r=Oe();if(r.firstCreatePass){const s=ie(t);da(n,r.data,r.blueprint,s,!0),da(e,r.data,r.blueprint,s,!1)}}(n,r?r(t):t,e)}}class Ca{}class wa{resolveComponentFactory(t){throw function(t){const e=Error(`No component factory found for ${et(t)}. Did you add it to @NgModule.entryComponents?`);return e.ngComponent=t,e}(t)}}let _a=(()=>{class t{}return t.NULL=new wa,t})();function Da(...t){}function Ea(t,e){return new xa(Ce(t,e))}const Sa=function(){return Ea(Re(),Ie())};let xa=(()=>{class t{constructor(t){this.nativeElement=t}}return t.__NG_ELEMENT_ID__=Sa,t})();function Aa(t){return t instanceof xa?t.nativeElement:t}class Ta{}let ka=(()=>{class t{}return t.__NG_ELEMENT_ID__=()=>Fa(),t})();const Fa=function(){const t=Ie(),e=De(Re().index,t);return function(t){return t[11]}(te(e)?e:t)};let Ia=(()=>{class t{}return t.\u0275prov=ht({token:t,providedIn:"root",factory:()=>null}),t})();class Oa{constructor(t){this.full=t,this.major=t.split(".")[0],this.minor=t.split(".")[1],this.patch=t.split(".").slice(2).join(".")}}const Pa=new Oa("12.0.5");class Ra{constructor(){}supports(t){return ao(t)}create(t){return new Ba(t)}}const La=(t,e)=>e;class Ba{constructor(t){this.length=0,this._linkedRecords=null,this._unlinkedRecords=null,this._previousItHead=null,this._itHead=null,this._itTail=null,this._additionsHead=null,this._additionsTail=null,this._movesHead=null,this._movesTail=null,this._removalsHead=null,this._removalsTail=null,this._identityChangesHead=null,this._identityChangesTail=null,this._trackByFn=t||La}forEachItem(t){let e;for(e=this._itHead;null!==e;e=e._next)t(e)}forEachOperation(t){let e=this._itHead,n=this._removalsHead,r=0,s=null;for(;e||n;){const i=!n||e&&e.currentIndex<Ha(n,r,s)?e:n,o=Ha(i,r,s),a=i.currentIndex;if(i===n)r--,n=n._nextRemoved;else if(e=e._next,null==i.previousIndex)r++;else{s||(s=[]);const t=o-r,e=a-r;if(t!=e){for(let n=0;n<t;n++){const r=n<s.length?s[n]:s[n]=0,i=r+n;e<=i&&i<t&&(s[n]=r+1)}s[i.previousIndex]=e-t}}o!==a&&t(i,o,a)}}forEachPreviousItem(t){let e;for(e=this._previousItHead;null!==e;e=e._nextPrevious)t(e)}forEachAddedItem(t){let e;for(e=this._additionsHead;null!==e;e=e._nextAdded)t(e)}forEachMovedItem(t){let e;for(e=this._movesHead;null!==e;e=e._nextMoved)t(e)}forEachRemovedItem(t){let e;for(e=this._removalsHead;null!==e;e=e._nextRemoved)t(e)}forEachIdentityChange(t){let e;for(e=this._identityChangesHead;null!==e;e=e._nextIdentityChange)t(e)}diff(t){if(null==t&&(t=[]),!ao(t))throw new Error(`Error trying to diff '${et(t)}'. Only arrays and iterables are allowed`);return this.check(t)?this:null}onDestroy(){}check(t){this._reset();let e,n,r,s=this._itHead,i=!1;if(Array.isArray(t)){this.length=t.length;for(let e=0;e<this.length;e++)n=t[e],r=this._trackByFn(e,n),null!==s&&Object.is(s.trackById,r)?(i&&(s=this._verifyReinsertion(s,n,r,e)),Object.is(s.item,n)||this._addIdentityChange(s,n)):(s=this._mismatch(s,n,r,e),i=!0),s=s._next}else e=0,function(t,e){if(Array.isArray(t))for(let n=0;n<t.length;n++)e(t[n]);else{const n=t[io()]();let r;for(;!(r=n.next()).done;)e(r.value)}}(t,t=>{r=this._trackByFn(e,t),null!==s&&Object.is(s.trackById,r)?(i&&(s=this._verifyReinsertion(s,t,r,e)),Object.is(s.item,t)||this._addIdentityChange(s,t)):(s=this._mismatch(s,t,r,e),i=!0),s=s._next,e++}),this.length=e;return this._truncate(s),this.collection=t,this.isDirty}get isDirty(){return null!==this._additionsHead||null!==this._movesHead||null!==this._removalsHead||null!==this._identityChangesHead}_reset(){if(this.isDirty){let t;for(t=this._previousItHead=this._itHead;null!==t;t=t._next)t._nextPrevious=t._next;for(t=this._additionsHead;null!==t;t=t._nextAdded)t.previousIndex=t.currentIndex;for(this._additionsHead=this._additionsTail=null,t=this._movesHead;null!==t;t=t._nextMoved)t.previousIndex=t.currentIndex;this._movesHead=this._movesTail=null,this._removalsHead=this._removalsTail=null,this._identityChangesHead=this._identityChangesTail=null}}_mismatch(t,e,n,r){let s;return null===t?s=this._itTail:(s=t._prev,this._remove(t)),null!==(t=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null))?(Object.is(t.item,e)||this._addIdentityChange(t,e),this._reinsertAfter(t,s,r)):null!==(t=null===this._linkedRecords?null:this._linkedRecords.get(n,r))?(Object.is(t.item,e)||this._addIdentityChange(t,e),this._moveAfter(t,s,r)):t=this._addAfter(new ja(e,n),s,r),t}_verifyReinsertion(t,e,n,r){let s=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null);return null!==s?t=this._reinsertAfter(s,t._prev,r):t.currentIndex!=r&&(t.currentIndex=r,this._addToMoves(t,r)),t}_truncate(t){for(;null!==t;){const e=t._next;this._addToRemovals(this._unlink(t)),t=e}null!==this._unlinkedRecords&&this._unlinkedRecords.clear(),null!==this._additionsTail&&(this._additionsTail._nextAdded=null),null!==this._movesTail&&(this._movesTail._nextMoved=null),null!==this._itTail&&(this._itTail._next=null),null!==this._removalsTail&&(this._removalsTail._nextRemoved=null),null!==this._identityChangesTail&&(this._identityChangesTail._nextIdentityChange=null)}_reinsertAfter(t,e,n){null!==this._unlinkedRecords&&this._unlinkedRecords.remove(t);const r=t._prevRemoved,s=t._nextRemoved;return null===r?this._removalsHead=s:r._nextRemoved=s,null===s?this._removalsTail=r:s._prevRemoved=r,this._insertAfter(t,e,n),this._addToMoves(t,n),t}_moveAfter(t,e,n){return this._unlink(t),this._insertAfter(t,e,n),this._addToMoves(t,n),t}_addAfter(t,e,n){return this._insertAfter(t,e,n),this._additionsTail=null===this._additionsTail?this._additionsHead=t:this._additionsTail._nextAdded=t,t}_insertAfter(t,e,n){const r=null===e?this._itHead:e._next;return t._next=r,t._prev=e,null===r?this._itTail=t:r._prev=t,null===e?this._itHead=t:e._next=t,null===this._linkedRecords&&(this._linkedRecords=new Na),this._linkedRecords.put(t),t.currentIndex=n,t}_remove(t){return this._addToRemovals(this._unlink(t))}_unlink(t){null!==this._linkedRecords&&this._linkedRecords.remove(t);const e=t._prev,n=t._next;return null===e?this._itHead=n:e._next=n,null===n?this._itTail=e:n._prev=e,t}_addToMoves(t,e){return t.previousIndex===e||(this._movesTail=null===this._movesTail?this._movesHead=t:this._movesTail._nextMoved=t),t}_addToRemovals(t){return null===this._unlinkedRecords&&(this._unlinkedRecords=new Na),this._unlinkedRecords.put(t),t.currentIndex=null,t._nextRemoved=null,null===this._removalsTail?(this._removalsTail=this._removalsHead=t,t._prevRemoved=null):(t._prevRemoved=this._removalsTail,this._removalsTail=this._removalsTail._nextRemoved=t),t}_addIdentityChange(t,e){return t.item=e,this._identityChangesTail=null===this._identityChangesTail?this._identityChangesHead=t:this._identityChangesTail._nextIdentityChange=t,t}}class ja{constructor(t,e){this.item=t,this.trackById=e,this.currentIndex=null,this.previousIndex=null,this._nextPrevious=null,this._prev=null,this._next=null,this._prevDup=null,this._nextDup=null,this._prevRemoved=null,this._nextRemoved=null,this._nextAdded=null,this._nextMoved=null,this._nextIdentityChange=null}}class Ma{constructor(){this._head=null,this._tail=null}add(t){null===this._head?(this._head=this._tail=t,t._nextDup=null,t._prevDup=null):(this._tail._nextDup=t,t._prevDup=this._tail,t._nextDup=null,this._tail=t)}get(t,e){let n;for(n=this._head;null!==n;n=n._nextDup)if((null===e||e<=n.currentIndex)&&Object.is(n.trackById,t))return n;return null}remove(t){const e=t._prevDup,n=t._nextDup;return null===e?this._head=n:e._nextDup=n,null===n?this._tail=e:n._prevDup=e,null===this._head}}class Na{constructor(){this.map=new Map}put(t){const e=t.trackById;let n=this.map.get(e);n||(n=new Ma,this.map.set(e,n)),n.add(t)}get(t,e){const n=this.map.get(t);return n?n.get(t,e):null}remove(t){const e=t.trackById;return this.map.get(e).remove(t)&&this.map.delete(e),t}get isEmpty(){return 0===this.map.size}clear(){this.map.clear()}}function Ha(t,e,n){const r=t.previousIndex;if(null===r)return r;let s=0;return n&&r<n.length&&(s=n[r]),r+e+s}class Va{constructor(){}supports(t){return t instanceof Map||co(t)}create(){return new za}}class za{constructor(){this._records=new Map,this._mapHead=null,this._appendAfter=null,this._previousMapHead=null,this._changesHead=null,this._changesTail=null,this._additionsHead=null,this._additionsTail=null,this._removalsHead=null,this._removalsTail=null}get isDirty(){return null!==this._additionsHead||null!==this._changesHead||null!==this._removalsHead}forEachItem(t){let e;for(e=this._mapHead;null!==e;e=e._next)t(e)}forEachPreviousItem(t){let e;for(e=this._previousMapHead;null!==e;e=e._nextPrevious)t(e)}forEachChangedItem(t){let e;for(e=this._changesHead;null!==e;e=e._nextChanged)t(e)}forEachAddedItem(t){let e;for(e=this._additionsHead;null!==e;e=e._nextAdded)t(e)}forEachRemovedItem(t){let e;for(e=this._removalsHead;null!==e;e=e._nextRemoved)t(e)}diff(t){if(t){if(!(t instanceof Map||co(t)))throw new Error(`Error trying to diff '${et(t)}'. Only maps and objects are allowed`)}else t=new Map;return this.check(t)?this:null}onDestroy(){}check(t){this._reset();let e=this._mapHead;if(this._appendAfter=null,this._forEach(t,(t,n)=>{if(e&&e.key===n)this._maybeAddToChanges(e,t),this._appendAfter=e,e=e._next;else{const r=this._getOrCreateRecordForKey(n,t);e=this._insertBeforeOrAppend(e,r)}}),e){e._prev&&(e._prev._next=null),this._removalsHead=e;for(let t=e;null!==t;t=t._nextRemoved)t===this._mapHead&&(this._mapHead=null),this._records.delete(t.key),t._nextRemoved=t._next,t.previousValue=t.currentValue,t.currentValue=null,t._prev=null,t._next=null}return this._changesTail&&(this._changesTail._nextChanged=null),this._additionsTail&&(this._additionsTail._nextAdded=null),this.isDirty}_insertBeforeOrAppend(t,e){if(t){const n=t._prev;return e._next=t,e._prev=n,t._prev=e,n&&(n._next=e),t===this._mapHead&&(this._mapHead=e),this._appendAfter=t,t}return this._appendAfter?(this._appendAfter._next=e,e._prev=this._appendAfter):this._mapHead=e,this._appendAfter=e,null}_getOrCreateRecordForKey(t,e){if(this._records.has(t)){const n=this._records.get(t);this._maybeAddToChanges(n,e);const r=n._prev,s=n._next;return r&&(r._next=s),s&&(s._prev=r),n._next=null,n._prev=null,n}const n=new $a(t);return this._records.set(t,n),n.currentValue=e,this._addToAdditions(n),n}_reset(){if(this.isDirty){let t;for(this._previousMapHead=this._mapHead,t=this._previousMapHead;null!==t;t=t._next)t._nextPrevious=t._next;for(t=this._changesHead;null!==t;t=t._nextChanged)t.previousValue=t.currentValue;for(t=this._additionsHead;null!=t;t=t._nextAdded)t.previousValue=t.currentValue;this._changesHead=this._changesTail=null,this._additionsHead=this._additionsTail=null,this._removalsHead=null}}_maybeAddToChanges(t,e){Object.is(e,t.currentValue)||(t.previousValue=t.currentValue,t.currentValue=e,this._addToChanges(t))}_addToAdditions(t){null===this._additionsHead?this._additionsHead=this._additionsTail=t:(this._additionsTail._nextAdded=t,this._additionsTail=t)}_addToChanges(t){null===this._changesHead?this._changesHead=this._changesTail=t:(this._changesTail._nextChanged=t,this._changesTail=t)}_forEach(t,e){t instanceof Map?t.forEach(e):Object.keys(t).forEach(n=>e(t[n],n))}}class $a{constructor(t){this.key=t,this.previousValue=null,this.currentValue=null,this._nextPrevious=null,this._next=null,this._prev=null,this._nextAdded=null,this._nextRemoved=null,this._nextChanged=null}}function Ua(){return new Wa([new Ra])}let Wa=(()=>{class t{constructor(t){this.factories=t}static create(e,n){if(null!=n){const t=n.factories.slice();e=e.concat(t)}return new t(e)}static extend(e){return{provide:t,useFactory:n=>t.create(e,n||Ua()),deps:[[t,new gr,new fr]]}}find(t){const e=this.factories.find(e=>e.supports(t));if(null!=e)return e;throw new Error(`Cannot find a differ supporting object '${t}' of type '${n=t,n.name||typeof n}'`);var n}}return t.\u0275prov=ht({token:t,providedIn:"root",factory:Ua}),t})();function Ga(){return new qa([new Va])}let qa=(()=>{class t{constructor(t){this.factories=t}static create(e,n){if(n){const t=n.factories.slice();e=e.concat(t)}return new t(e)}static extend(e){return{provide:t,useFactory:n=>t.create(e,n||Ga()),deps:[[t,new gr,new fr]]}}find(t){const e=this.factories.find(e=>e.supports(t));if(e)return e;throw new Error(`Cannot find a differ supporting object '${t}'`)}}return t.\u0275prov=ht({token:t,providedIn:"root",factory:Ga}),t})();function Xa(t,e,n,r,s=!1){for(;null!==n;){const i=e[n.index];if(null!==i&&r.push(ve(i)),ee(i))for(let t=Jt;t<i.length;t++){const e=i[t],n=e[1].firstChild;null!==n&&Xa(e[1],e,n,r)}const o=n.type;if(8&o)Xa(t,e,n.child,r);else if(32&o){const t=ns(n,e);let s;for(;s=t();)r.push(s)}else if(16&o){const t=_s(e,n);if(Array.isArray(t))r.push(...t);else{const n=rs(e[16]);Xa(n[1],n,t,r,!0)}}n=s?n.projectionNext:n.next}return r}class Ya{constructor(t,e){this._lView=t,this._cdRefInjectingView=e,this._appRef=null,this._attachedToViewContainer=!1}get rootNodes(){const t=this._lView,e=t[1];return Xa(e,t,e.firstChild,[])}get context(){return this._lView[8]}set context(t){this._lView[8]=t}get destroyed(){return 256==(256&this._lView[2])}destroy(){if(this._appRef)this._appRef.detachView(this);else if(this._attachedToViewContainer){const t=this._lView[3];if(ee(t)){const e=t[8],n=e?e.indexOf(this):-1;n>-1&&(us(t,n),Kn(e,n))}this._attachedToViewContainer=!1}hs(this._lView[1],this._lView)}onDestroy(t){li(this._lView[1],this._lView,null,t)}markForCheck(){xi(this._cdRefInjectingView||this._lView)}detach(){this._lView[2]&=-129}reattach(){this._lView[2]|=128}detectChanges(){Ai(this._lView[1],this._lView,this.context)}checkNoChanges(){!function(t,e,n){He(!0);try{Ai(t,e,n)}finally{He(!1)}}(this._lView[1],this._lView,this.context)}attachToViewContainerRef(){if(this._appRef)throw new Error("This view is already attached directly to the ApplicationRef!");this._attachedToViewContainer=!0}detachFromAppRef(){var t;this._appRef=null,Ss(this._lView[1],t=this._lView,t[11],2,null,null)}attachToAppRef(t){if(this._attachedToViewContainer)throw new Error("This view is already attached to a ViewContainer!");this._appRef=t}}class Za extends Ya{constructor(t){super(t),this._view=t}detectChanges(){Ti(this._view)}checkNoChanges(){!function(t){He(!0);try{Ti(t)}finally{He(!1)}}(this._view)}get context(){return null}}const Qa=function(t){return function(t,e,n){if(re(t)&&!n){const n=De(t.index,e);return new Ya(n,n)}return 47&t.type?new Ya(e[16],e):null}(Re(),Ie(),16==(16&t))};let Ka=(()=>{class t{}return t.__NG_ELEMENT_ID__=Qa,t})();const Ja=[new Va],tc=new Wa([new Ra]),ec=new qa(Ja),nc=function(){return oc(Re(),Ie())};let rc=(()=>{class t{}return t.__NG_ELEMENT_ID__=nc,t})();const sc=rc,ic=class extends sc{constructor(t,e,n){super(),this._declarationLView=t,this._declarationTContainer=e,this.elementRef=n}createEmbeddedView(t){const e=this._declarationTContainer.tViews,n=Qs(this._declarationLView,e,t,16,null,e.declTNode,null,null,null,null);n[17]=this._declarationLView[this._declarationTContainer.index];const r=this._declarationLView[19];return null!==r&&(n[19]=r.createEmbeddedView(e)),ti(e,n,t),new Ya(n)}};function oc(t,e){return 4&t.type?new ic(e,t,Ea(t,e)):null}class ac{}class cc{}const lc=function(){return gc(Re(),Ie())};let uc=(()=>{class t{}return t.__NG_ELEMENT_ID__=lc,t})();const hc=uc,dc=class extends hc{constructor(t,e,n){super(),this._lContainer=t,this._hostTNode=e,this._hostLView=n}get element(){return Ea(this._hostTNode,this._hostLView)}get injector(){return new Vn(this._hostTNode,this._hostLView)}get parentInjector(){const t=kn(this._hostTNode,this._hostLView);if(Cn(t)){const e=_n(t,this._hostLView),n=wn(t);return new Vn(e[1].data[n+8],e)}return new Vn(null,this._hostLView)}clear(){for(;this.length>0;)this.remove(this.length-1)}get(t){const e=pc(this._lContainer);return null!==e&&e[t]||null}get length(){return this._lContainer.length-Jt}createEmbeddedView(t,e,n){const r=t.createEmbeddedView(e||{});return this.insert(r,n),r}createComponent(t,e,n,r,s){const i=n||this.parentInjector;if(!s&&null==t.ngModule&&i){const t=i.get(ac,null);t&&(s=t)}const o=t.create(i,r,void 0,s);return this.insert(o.hostView,e),o}insert(t,e){const n=t._lView,r=n[1];if(ee(n[3])){const e=this.indexOf(t);if(-1!==e)this.detach(e);else{const e=n[3],r=new dc(e,e[6],e[3]);r.detach(r.indexOf(t))}}const s=this._adjustIndex(e),i=this._lContainer;!function(t,e,n,r){const s=Jt+r,i=n.length;r>0&&(n[s-1][4]=e),r<i-Jt?(e[4]=n[s],Qn(n,Jt+r,e)):(n.push(e),e[4]=null),e[3]=n;const o=e[17];null!==o&&n!==o&&function(t,e){const n=t[9];e[16]!==e[3][3][16]&&(t[2]=!0),null===n?t[9]=[e]:n.push(e)}(o,e);const a=e[19];null!==a&&a.insertView(t),e[2]|=128}(r,n,i,s);const o=Ds(s,i),a=n[11],c=ys(a,i[7]);return null!==c&&function(t,e,n,r,s,i){r[0]=s,r[6]=e,Ss(t,r,n,1,s,i)}(r,i[6],a,n,c,o),t.attachToViewContainerRef(),Qn(fc(i),s,t),t}move(t,e){return this.insert(t,e)}indexOf(t){const e=pc(this._lContainer);return null!==e?e.indexOf(t):-1}remove(t){const e=this._adjustIndex(t,-1),n=us(this._lContainer,e);n&&(Kn(fc(this._lContainer),e),hs(n[1],n))}detach(t){const e=this._adjustIndex(t,-1),n=us(this._lContainer,e);return n&&null!=Kn(fc(this._lContainer),e)?new Ya(n):null}_adjustIndex(t,e=0){return null==t?this.length+e:t}};function pc(t){return t[8]}function fc(t){return t[8]||(t[8]=[])}function gc(t,e){let n;const r=e[t.index];if(ee(r))n=r;else{let s;if(8&t.type)s=ve(r);else{const n=e[11];s=n.createComment("");const r=Ce(t,e);fs(n,ys(n,r),s,function(t,e){return me(t)?t.nextSibling(e):e.nextSibling}(n,r),!1)}e[t.index]=n=wi(r,e,s,t),Si(e,n)}return new dc(n,t,e)}const mc={};class yc extends _a{constructor(t){super(),this.ngModule=t}resolveComponentFactory(t){const e=Zt(t);return new Cc(e,this.ngModule)}}function vc(t){const e=[];for(let n in t)t.hasOwnProperty(n)&&e.push({propName:t[n],templateName:n});return e}const bc=new Gn("SCHEDULER_TOKEN",{providedIn:"root",factory:()=>Kr});class Cc extends Ca{constructor(t,e){super(),this.componentDef=t,this.ngModule=e,this.componentType=t.type,this.selector=t.selectors.map(Hs).join(","),this.ngContentSelectors=t.ngContentSelectors?t.ngContentSelectors:[],this.isBoundToModule=!!e}get inputs(){return vc(this.componentDef.inputs)}get outputs(){return vc(this.componentDef.outputs)}create(t,e,n,r){const s=(r=r||this.ngModule)?function(t,e){return{get:(n,r,s)=>{const i=t.get(n,mc,s);return i!==mc||r===mc?i:e.get(n,r,s)}}}(t,r.injector):t,i=s.get(Ta,ye),o=s.get(Ia,null),a=i.createRenderer(null,this.componentDef),c=this.componentDef.selectors[0][0]||"div",l=n?function(t,e,n){if(me(t))return t.selectRootElement(e,n===xt.ShadowDom);let r="string"==typeof e?t.querySelector(e):e;return r.textContent="",r}(a,n,this.componentDef.encapsulation):cs(i.createRenderer(null,this.componentDef),c,function(t){const e=t.toLowerCase();return"svg"===e?pe:"math"===e?"http://www.w3.org/1998/MathML/":null}(c)),u=this.componentDef.onPush?576:528,h={components:[],scheduler:Kr,clean:Fi,playerHandler:null,flags:0},d=ci(0,null,null,1,0,null,null,null,null,null),p=Qs(null,d,h,u,null,null,i,a,o,s);let f,g;Ze(p);try{const t=function(t,e,n,r,s,i){const o=n[1];n[20]=t;const a=Ks(o,20,2,"#host",null),c=a.mergedAttrs=e.hostAttrs;null!==c&&(Li(a,c,!0),null!==t&&(gn(s,t,c),null!==a.classes&&Ts(s,t,a.classes),null!==a.styles&&As(s,t,a.styles)));const l=r.createRenderer(t,e),u=Qs(n,ai(e),null,e.onPush?64:16,n[20],a,r,l,null,null);return o.firstCreatePass&&(Fn(xn(a,n),o,e.type),fi(o,a),mi(a,n.length,1)),Si(n,u),n[20]=u}(l,this.componentDef,p,i,a);if(l)if(n)gn(a,l,["ng-version",Pa.full]);else{const{attrs:t,classes:e}=function(t){const e=[],n=[];let r=1,s=2;for(;r<t.length;){let i=t[r];if("string"==typeof i)2===s?""!==i&&e.push(i,t[++r]):8===s&&n.push(i);else{if(!Ls(s))break;s=i}r++}return{attrs:e,classes:n}}(this.componentDef.selectors[0]);t&&gn(a,l,t),e&&e.length>0&&Ts(a,l,e.join(" "))}if(g=we(d,Kt),void 0!==e){const t=g.projection=[];for(let n=0;n<this.ngContentSelectors.length;n++){const r=e[n];t.push(null!=r?Array.from(r):null)}}f=function(t,e,n,r,s){const i=n[1],o=function(t,e,n){const r=Re();t.firstCreatePass&&(n.providersResolver&&n.providersResolver(n),yi(t,r,e,Js(t,e,1,null),n));const s=Mn(e,t,r.directiveStart,r);Gr(s,e);const i=Ce(r,e);return i&&Gr(i,e),s}(i,n,e);if(r.components.push(o),t[8]=o,s&&s.forEach(t=>t(o,e)),e.contentQueries){const t=Re();e.contentQueries(1,o,t.directiveStart)}const a=Re();return!i.firstCreatePass||null===e.hostBindings&&null===e.hostAttrs||(rn(a.index),di(n[1],a,0,a.directiveStart,a.directiveEnd,e),pi(e,o)),o}(t,this.componentDef,p,h,[Ki]),ti(d,p,null)}finally{en()}return new wc(this.componentType,f,Ea(g,p),p,g)}}class wc extends class{}{constructor(t,e,n,r,s){super(),this.location=n,this._rootLView=r,this._tNode=s,this.instance=e,this.hostView=this.changeDetectorRef=new Za(r),this.componentType=t}get injector(){return new Vn(this._tNode,this._rootLView)}destroy(){this.hostView.destroy()}onDestroy(t){this.hostView.onDestroy(t)}}const _c=new Map;class Dc extends ac{constructor(t,e){super(),this._parent=e,this._bootstrapComponents=[],this.injector=this,this.destroyCbs=[],this.componentFactoryResolver=new yc(this);const n=Qt(t),r=t[Mt]||null;r&&ha(r),this._bootstrapComponents=ts(n.bootstrap),this._r3Injector=$i(t,e,[{provide:ac,useValue:this},{provide:_a,useValue:this.componentFactoryResolver}],et(t)),this._r3Injector._resolveInjectorDefTypes(),this.instance=this.get(t)}get(t,e=Qi.THROW_IF_NOT_FOUND,n=Ct.Default){return t===Qi||t===ac||t===Bi?this:this._r3Injector.get(t,e,n)}destroy(){const t=this._r3Injector;!t.destroyed&&t.destroy(),this.destroyCbs.forEach(t=>t()),this.destroyCbs=null}onDestroy(t){this.destroyCbs.push(t)}}class Ec extends cc{constructor(t){super(),this.moduleType=t,null!==Qt(t)&&function(t){const e=new Set;!function t(n){const r=Qt(n,!0),s=r.id;null!==s&&(function(t,e,n){if(e&&e!==n)throw new Error(`Duplicate module registered for ${t} - ${et(e)} vs ${et(e.name)}`)}(s,_c.get(s),n),_c.set(s,n));const i=ts(r.imports);for(const o of i)e.has(o)||(e.add(o),t(o))}(t)}(t)}create(t){return new Dc(this.moduleType,t)}}function Sc(t,e,n){const r=t+Kt,s=Ie(),i=_e(s,r);return function(t,e){return oo.isWrapped(e)&&(e=oo.unwrap(e),t[Ve()]=Vs),e}(s,function(t,e){return t[1].data[e].pure}(s,r)?function(t,e,n,r,s,i){const o=e+n;return lo(t,o,s)?function(t,e,n){return t[e]=n}(t,o+1,i?r.call(i,s):r(s)):function(t,e){const n=t[e];return n===Vs?void 0:n}(t,o+1)}(s,function(){const t=ke.lFrame;let e=t.bindingRootIndex;return-1===e&&(e=t.bindingRootIndex=t.tView.bindingStartIndex),e}(),e,i.transform,n,i):i.transform(n))}function xc(t){return e=>{setTimeout(t,void 0,e)}}const Ac=class extends D{constructor(t=!1){super(),this.__isAsync=t}emit(t){super.next(t)}subscribe(t,e,n){var r,s,i;let o=t,a=e||(()=>null),c=n;if(t&&"object"==typeof t){const e=t;o=null===(r=e.next)||void 0===r?void 0:r.bind(e),a=null===(s=e.error)||void 0===s?void 0:s.bind(e),c=null===(i=e.complete)||void 0===i?void 0:i.bind(e)}this.__isAsync&&(a=xc(a),o&&(o=xc(o)),c&&(c=xc(c)));const l=super.subscribe({next:o,error:a,complete:c});return t instanceof h&&t.add(l),l}};function Tc(){return this._results[io()]()}class kc{constructor(t=!1){this._emitDistinctChangesOnly=t,this.dirty=!0,this._results=[],this._changesDetected=!1,this._changes=null,this.length=0,this.first=void 0,this.last=void 0;const e=io(),n=kc.prototype;n[e]||(n[e]=Tc)}get changes(){return this._changes||(this._changes=new Ac)}get(t){return this._results[t]}map(t){return this._results.map(t)}filter(t){return this._results.filter(t)}find(t){return this._results.find(t)}reduce(t,e){return this._results.reduce(t,e)}forEach(t){this._results.forEach(t)}some(t){return this._results.some(t)}toArray(){return this._results.slice()}toString(){return this._results.toString()}reset(t,e){const n=this;n.dirty=!1;const r=Yn(t);(this._changesDetected=!function(t,e,n){if(t.length!==e.length)return!1;for(let r=0;r<t.length;r++){let s=t[r],i=e[r];if(n&&(s=n(s),i=n(i)),i!==s)return!1}return!0}(n._results,r,e))&&(n._results=r,n.length=r.length,n.last=r[this.length-1],n.first=r[0])}notifyOnChanges(){!this._changes||!this._changesDetected&&this._emitDistinctChangesOnly||this._changes.emit(this)}setDirty(){this.dirty=!0}destroy(){this.changes.complete(),this.changes.unsubscribe()}}class Fc{constructor(t){this.queryList=t,this.matches=null}clone(){return new Fc(this.queryList)}setDirty(){this.queryList.setDirty()}}class Ic{constructor(t=[]){this.queries=t}createEmbeddedView(t){const e=t.queries;if(null!==e){const n=null!==t.contentQueries?t.contentQueries[0]:e.length,r=[];for(let t=0;t<n;t++){const n=e.getByIndex(t);r.push(this.queries[n.indexInDeclarationView].clone())}return new Ic(r)}return null}insertView(t){this.dirtyQueriesWithMatches(t)}detachView(t){this.dirtyQueriesWithMatches(t)}dirtyQueriesWithMatches(t){for(let e=0;e<this.queries.length;e++)null!==Uc(t,e).matches&&this.queries[e].setDirty()}}class Oc{constructor(t,e,n=null){this.predicate=t,this.flags=e,this.read=n}}class Pc{constructor(t=[]){this.queries=t}elementStart(t,e){for(let n=0;n<this.queries.length;n++)this.queries[n].elementStart(t,e)}elementEnd(t){for(let e=0;e<this.queries.length;e++)this.queries[e].elementEnd(t)}embeddedTView(t){let e=null;for(let n=0;n<this.length;n++){const r=null!==e?e.length:0,s=this.getByIndex(n).embeddedTView(t,r);s&&(s.indexInDeclarationView=n,null!==e?e.push(s):e=[s])}return null!==e?new Pc(e):null}template(t,e){for(let n=0;n<this.queries.length;n++)this.queries[n].template(t,e)}getByIndex(t){return this.queries[t]}get length(){return this.queries.length}track(t){this.queries.push(t)}}class Rc{constructor(t,e=-1){this.metadata=t,this.matches=null,this.indexInDeclarationView=-1,this.crossesNgTemplate=!1,this._appliesToNextNode=!0,this._declarationNodeIndex=e}elementStart(t,e){this.isApplyingToNode(e)&&this.matchTNode(t,e)}elementEnd(t){this._declarationNodeIndex===t.index&&(this._appliesToNextNode=!1)}template(t,e){this.elementStart(t,e)}embeddedTView(t,e){return this.isApplyingToNode(t)?(this.crossesNgTemplate=!0,this.addMatch(-t.index,e),new Rc(this.metadata)):null}isApplyingToNode(t){if(this._appliesToNextNode&&1!=(1&this.metadata.flags)){const e=this._declarationNodeIndex;let n=t.parent;for(;null!==n&&8&n.type&&n.index!==e;)n=n.parent;return e===(null!==n?n.index:-1)}return this._appliesToNextNode}matchTNode(t,e){const n=this.metadata.predicate;if(Array.isArray(n))for(let r=0;r<n.length;r++){const s=n[r];this.matchTNodeWithReadOption(t,e,Lc(e,s)),this.matchTNodeWithReadOption(t,e,jn(e,t,s,!1,!1))}else n===rc?4&e.type&&this.matchTNodeWithReadOption(t,e,-1):this.matchTNodeWithReadOption(t,e,jn(e,t,n,!1,!1))}matchTNodeWithReadOption(t,e,n){if(null!==n){const r=this.metadata.read;if(null!==r)if(r===xa||r===uc||r===rc&&4&e.type)this.addMatch(e.index,-2);else{const n=jn(e,t,r,!1,!1);null!==n&&this.addMatch(e.index,n)}else this.addMatch(e.index,n)}}addMatch(t,e){null===this.matches?this.matches=[t,e]:this.matches.push(t,e)}}function Lc(t,e){const n=t.localNames;if(null!==n)for(let r=0;r<n.length;r+=2)if(n[r]===e)return n[r+1];return null}function Bc(t,e,n,r){return-1===n?function(t,e){return 11&t.type?Ea(t,e):4&t.type?oc(t,e):null}(e,t):-2===n?function(t,e,n){return n===xa?Ea(e,t):n===rc?oc(e,t):n===uc?gc(e,t):void 0}(t,e,r):Mn(t,t[1],n,e)}function jc(t,e,n,r){const s=e[19].queries[r];if(null===s.matches){const r=t.data,i=n.matches,o=[];for(let t=0;t<i.length;t+=2){const s=i[t];o.push(s<0?null:Bc(e,r[s],i[t+1],n.metadata.read))}s.matches=o}return s.matches}function Mc(t,e,n,r){const s=t.queries.getByIndex(n),i=s.matches;if(null!==i){const o=jc(t,e,s,n);for(let t=0;t<i.length;t+=2){const n=i[t];if(n>0)r.push(o[t/2]);else{const s=i[t+1],o=e[-n];for(let t=Jt;t<o.length;t++){const e=o[t];e[17]===e[3]&&Mc(e[1],e,s,r)}if(null!==o[9]){const t=o[9];for(let e=0;e<t.length;e++){const n=t[e];Mc(n[1],n,s,r)}}}}}return r}function Nc(t){const e=Ie(),n=Oe(),r=Ge();qe(r+1);const s=Uc(n,r);if(t.dirty&&Ee(e)===(2==(2&s.metadata.flags))){if(null===s.matches)t.reset([]);else{const i=s.crossesNgTemplate?Mc(n,e,r,[]):jc(n,e,s,r);t.reset(i,Aa),t.notifyOnChanges()}return!0}return!1}function Hc(t,e,n){const r=Oe();r.firstCreatePass&&($c(r,new Oc(t,e,n),-1),2==(2&e)&&(r.staticViewQueries=!0)),zc(r,Ie(),e)}function Vc(){return t=Ie(),e=Ge(),t[19].queries[e].queryList;var t,e}function zc(t,e,n){const r=new kc(4==(4&n));li(t,e,r,r.destroy),null===e[19]&&(e[19]=new Ic),e[19].queries.push(new Fc(r))}function $c(t,e,n){null===t.queries&&(t.queries=new Pc),t.queries.track(new Rc(e,n))}function Uc(t,e){return t.queries.getByIndex(e)}function Wc(t,e){return oc(t,e)}const Gc=new Gn("Application Initializer");let qc=(()=>{class t{constructor(t){this.appInits=t,this.resolve=Da,this.reject=Da,this.initialized=!1,this.done=!1,this.donePromise=new Promise((t,e)=>{this.resolve=t,this.reject=e})}runInitializers(){if(this.initialized)return;const t=[],e=()=>{this.done=!0,this.resolve()};if(this.appInits)for(let n=0;n<this.appInits.length;n++){const e=this.appInits[n]();if(Do(e))t.push(e);else if(So(e)){const n=new Promise((t,n)=>{e.subscribe({complete:t,error:n})});t.push(n)}}Promise.all(t).then(()=>{e()}).catch(t=>{this.reject(t)}),0===t.length&&e(),this.initialized=!0}}return t.\u0275fac=function(e){return new(e||t)(ur(Gc,8))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const Xc=new Gn("AppId"),Yc={provide:Xc,useFactory:function(){return`${Zc()}${Zc()}${Zc()}`},deps:[]};function Zc(){return String.fromCharCode(97+Math.floor(25*Math.random()))}const Qc=new Gn("Platform Initializer"),Kc=new Gn("Platform ID"),Jc=new Gn("appBootstrapListener");let tl=(()=>{class t{log(t){console.log(t)}warn(t){console.warn(t)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const el=new Gn("LocaleId"),nl=new Gn("DefaultCurrencyCode");class rl{constructor(t,e){this.ngModuleFactory=t,this.componentFactories=e}}const sl=function(t){return new Ec(t)},il=sl,ol=function(t){return Promise.resolve(sl(t))},al=function(t){const e=sl(t),n=ts(Qt(t).declarations).reduce((t,e)=>{const n=Zt(e);return n&&t.push(new Cc(n)),t},[]);return new rl(e,n)},cl=al,ll=function(t){return Promise.resolve(al(t))};let ul=(()=>{class t{constructor(){this.compileModuleSync=il,this.compileModuleAsync=ol,this.compileModuleAndAllComponentsSync=cl,this.compileModuleAndAllComponentsAsync=ll}clearCache(){}clearCacheFor(t){}getModuleId(t){}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const hl=(()=>Promise.resolve(0))();function dl(t){"undefined"==typeof Zone?hl.then(()=>{t&&t.apply(null,null)}):Zone.current.scheduleMicroTask("scheduleMicrotask",t)}class pl{constructor({enableLongStackTrace:t=!1,shouldCoalesceEventChangeDetection:e=!1,shouldCoalesceRunChangeDetection:n=!1}){if(this.hasPendingMacrotasks=!1,this.hasPendingMicrotasks=!1,this.isStable=!0,this.onUnstable=new Ac(!1),this.onMicrotaskEmpty=new Ac(!1),this.onStable=new Ac(!1),this.onError=new Ac(!1),"undefined"==typeof Zone)throw new Error("In this configuration Angular requires Zone.js");Zone.assertZonePatched();const r=this;r._nesting=0,r._outer=r._inner=Zone.current,Zone.TaskTrackingZoneSpec&&(r._inner=r._inner.fork(new Zone.TaskTrackingZoneSpec)),t&&Zone.longStackTraceZoneSpec&&(r._inner=r._inner.fork(Zone.longStackTraceZoneSpec)),r.shouldCoalesceEventChangeDetection=!n&&e,r.shouldCoalesceRunChangeDetection=n,r.lastRequestAnimationFrameId=-1,r.nativeRequestAnimationFrame=function(){let t=It.requestAnimationFrame,e=It.cancelAnimationFrame;if("undefined"!=typeof Zone&&t&&e){const n=t[Zone.__symbol__("OriginalDelegate")];n&&(t=n);const r=e[Zone.__symbol__("OriginalDelegate")];r&&(e=r)}return{nativeRequestAnimationFrame:t,nativeCancelAnimationFrame:e}}().nativeRequestAnimationFrame,function(t){const e=()=>{!function(t){t.isCheckStableRunning||-1!==t.lastRequestAnimationFrameId||(t.lastRequestAnimationFrameId=t.nativeRequestAnimationFrame.call(It,()=>{t.fakeTopEventTask||(t.fakeTopEventTask=Zone.root.scheduleEventTask("fakeTopEventTask",()=>{t.lastRequestAnimationFrameId=-1,ml(t),t.isCheckStableRunning=!0,gl(t),t.isCheckStableRunning=!1},void 0,()=>{},()=>{})),t.fakeTopEventTask.invoke()}),ml(t))}(t)};t._inner=t._inner.fork({name:"angular",properties:{isAngularZone:!0},onInvokeTask:(n,r,s,i,o,a)=>{try{return yl(t),n.invokeTask(s,i,o,a)}finally{(t.shouldCoalesceEventChangeDetection&&"eventTask"===i.type||t.shouldCoalesceRunChangeDetection)&&e(),vl(t)}},onInvoke:(n,r,s,i,o,a,c)=>{try{return yl(t),n.invoke(s,i,o,a,c)}finally{t.shouldCoalesceRunChangeDetection&&e(),vl(t)}},onHasTask:(e,n,r,s)=>{e.hasTask(r,s),n===r&&("microTask"==s.change?(t._hasPendingMicrotasks=s.microTask,ml(t),gl(t)):"macroTask"==s.change&&(t.hasPendingMacrotasks=s.macroTask))},onHandleError:(e,n,r,s)=>(e.handleError(r,s),t.runOutsideAngular(()=>t.onError.emit(s)),!1)})}(r)}static isInAngularZone(){return!0===Zone.current.get("isAngularZone")}static assertInAngularZone(){if(!pl.isInAngularZone())throw new Error("Expected to be in Angular Zone, but it is not!")}static assertNotInAngularZone(){if(pl.isInAngularZone())throw new Error("Expected to not be in Angular Zone, but it is!")}run(t,e,n){return this._inner.run(t,e,n)}runTask(t,e,n,r){const s=this._inner,i=s.scheduleEventTask("NgZoneEvent: "+r,t,fl,Da,Da);try{return s.runTask(i,e,n)}finally{s.cancelTask(i)}}runGuarded(t,e,n){return this._inner.runGuarded(t,e,n)}runOutsideAngular(t){return this._outer.run(t)}}const fl={};function gl(t){if(0==t._nesting&&!t.hasPendingMicrotasks&&!t.isStable)try{t._nesting++,t.onMicrotaskEmpty.emit(null)}finally{if(t._nesting--,!t.hasPendingMicrotasks)try{t.runOutsideAngular(()=>t.onStable.emit(null))}finally{t.isStable=!0}}}function ml(t){t.hasPendingMicrotasks=!!(t._hasPendingMicrotasks||(t.shouldCoalesceEventChangeDetection||t.shouldCoalesceRunChangeDetection)&&-1!==t.lastRequestAnimationFrameId)}function yl(t){t._nesting++,t.isStable&&(t.isStable=!1,t.onUnstable.emit(null))}function vl(t){t._nesting--,gl(t)}class bl{constructor(){this.hasPendingMicrotasks=!1,this.hasPendingMacrotasks=!1,this.isStable=!0,this.onUnstable=new Ac,this.onMicrotaskEmpty=new Ac,this.onStable=new Ac,this.onError=new Ac}run(t,e,n){return t.apply(e,n)}runGuarded(t,e,n){return t.apply(e,n)}runOutsideAngular(t){return t()}runTask(t,e,n,r){return t.apply(e,n)}}let Cl=(()=>{class t{constructor(t){this._ngZone=t,this._pendingCount=0,this._isZoneStable=!0,this._didWork=!1,this._callbacks=[],this.taskTrackingZone=null,this._watchAngularEvents(),t.run(()=>{this.taskTrackingZone="undefined"==typeof Zone?null:Zone.current.get("TaskTrackingZone")})}_watchAngularEvents(){this._ngZone.onUnstable.subscribe({next:()=>{this._didWork=!0,this._isZoneStable=!1}}),this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.subscribe({next:()=>{pl.assertNotInAngularZone(),dl(()=>{this._isZoneStable=!0,this._runCallbacksIfReady()})}})})}increasePendingRequestCount(){return this._pendingCount+=1,this._didWork=!0,this._pendingCount}decreasePendingRequestCount(){if(this._pendingCount-=1,this._pendingCount<0)throw new Error("pending async requests below zero");return this._runCallbacksIfReady(),this._pendingCount}isStable(){return this._isZoneStable&&0===this._pendingCount&&!this._ngZone.hasPendingMacrotasks}_runCallbacksIfReady(){if(this.isStable())dl(()=>{for(;0!==this._callbacks.length;){let t=this._callbacks.pop();clearTimeout(t.timeoutId),t.doneCb(this._didWork)}this._didWork=!1});else{let t=this.getPendingTasks();this._callbacks=this._callbacks.filter(e=>!e.updateCb||!e.updateCb(t)||(clearTimeout(e.timeoutId),!1)),this._didWork=!0}}getPendingTasks(){return this.taskTrackingZone?this.taskTrackingZone.macroTasks.map(t=>({source:t.source,creationLocation:t.creationLocation,data:t.data})):[]}addCallback(t,e,n){let r=-1;e&&e>0&&(r=setTimeout(()=>{this._callbacks=this._callbacks.filter(t=>t.timeoutId!==r),t(this._didWork,this.getPendingTasks())},e)),this._callbacks.push({doneCb:t,timeoutId:r,updateCb:n})}whenStable(t,e,n){if(n&&!this.taskTrackingZone)throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?');this.addCallback(t,e,n),this._runCallbacksIfReady()}getPendingRequestCount(){return this._pendingCount}findProviders(t,e,n){return[]}}return t.\u0275fac=function(e){return new(e||t)(ur(pl))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),wl=(()=>{class t{constructor(){this._applications=new Map,El.addToWindow(this)}registerApplication(t,e){this._applications.set(t,e)}unregisterApplication(t){this._applications.delete(t)}unregisterAllApplications(){this._applications.clear()}getTestability(t){return this._applications.get(t)||null}getAllTestabilities(){return Array.from(this._applications.values())}getAllRootElements(){return Array.from(this._applications.keys())}findTestabilityInTree(t,e=!0){return El.findTestabilityInTree(this,t,e)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();class _l{addToWindow(t){}findTestabilityInTree(t,e,n){return null}}let Dl,El=new _l,Sl=!0,xl=!1;const Al=new Gn("AllowMultipleToken");class Tl{constructor(t,e){this.name=t,this.token=e}}function kl(t,e,n=[]){const r=`Platform: ${e}`,s=new Gn(r);return(e=[])=>{let i=Fl();if(!i||i.injector.get(Al,!1))if(t)t(n.concat(e).concat({provide:s,useValue:!0}));else{const t=n.concat(e).concat({provide:s,useValue:!0},{provide:Mi,useValue:"platform"});!function(t){if(Dl&&!Dl.destroyed&&!Dl.injector.get(Al,!1))throw new Error("There can be only one platform. Destroy the previous one to create a new one.");Dl=t.get(Il);const e=t.get(Qc,null);e&&e.forEach(t=>t())}(Qi.create({providers:t,name:r}))}return function(t){const e=Fl();if(!e)throw new Error("No platform exists!");if(!e.injector.get(t,null))throw new Error("A platform with a different configuration has been created. Please destroy it first.");return e}(s)}}function Fl(){return Dl&&!Dl.destroyed?Dl:null}let Il=(()=>{class t{constructor(t){this._injector=t,this._modules=[],this._destroyListeners=[],this._destroyed=!1}bootstrapModuleFactory(t,e){const n=function(t,e){let n;return n="noop"===t?new bl:("zone.js"===t?void 0:t)||new pl({enableLongStackTrace:(xl=!0,Sl),shouldCoalesceEventChangeDetection:!!(null==e?void 0:e.ngZoneEventCoalescing),shouldCoalesceRunChangeDetection:!!(null==e?void 0:e.ngZoneRunCoalescing)}),n}(e?e.ngZone:void 0,{ngZoneEventCoalescing:e&&e.ngZoneEventCoalescing||!1,ngZoneRunCoalescing:e&&e.ngZoneRunCoalescing||!1}),r=[{provide:pl,useValue:n}];return n.run(()=>{const e=Qi.create({providers:r,parent:this.injector,name:t.moduleType.name}),s=t.create(e),i=s.injector.get(Qr,null);if(!i)throw new Error("No ErrorHandler. Is platform module (BrowserModule) included?");return n.runOutsideAngular(()=>{const t=n.onError.subscribe({next:t=>{i.handleError(t)}});s.onDestroy(()=>{Rl(this._modules,s),t.unsubscribe()})}),function(t,e,n){try{const r=n();return Do(r)?r.catch(n=>{throw e.runOutsideAngular(()=>t.handleError(n)),n}):r}catch(r){throw e.runOutsideAngular(()=>t.handleError(r)),r}}(i,n,()=>{const t=s.injector.get(qc);return t.runInitializers(),t.donePromise.then(()=>(ha(s.injector.get(el,la)||la),this._moduleDoBootstrap(s),s))})})}bootstrapModule(t,e=[]){const n=Ol({},e);return function(t,e,n){const r=new Ec(n);return Promise.resolve(r)}(0,0,t).then(t=>this.bootstrapModuleFactory(t,n))}_moduleDoBootstrap(t){const e=t.injector.get(Pl);if(t._bootstrapComponents.length>0)t._bootstrapComponents.forEach(t=>e.bootstrap(t));else{if(!t.instance.ngDoBootstrap)throw new Error(`The module ${et(t.instance.constructor)} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.`);t.instance.ngDoBootstrap(e)}this._modules.push(t)}onDestroy(t){this._destroyListeners.push(t)}get injector(){return this._injector}destroy(){if(this._destroyed)throw new Error("The platform has already been destroyed!");this._modules.slice().forEach(t=>t.destroy()),this._destroyListeners.forEach(t=>t()),this._destroyed=!0}get destroyed(){return this._destroyed}}return t.\u0275fac=function(e){return new(e||t)(ur(Qi))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function Ol(t,e){return Array.isArray(e)?e.reduce(Ol,t):Object.assign(Object.assign({},t),e)}let Pl=(()=>{class t{constructor(t,e,n,r,s){this._zone=t,this._injector=e,this._exceptionHandler=n,this._componentFactoryResolver=r,this._initStatus=s,this._bootstrapListeners=[],this._views=[],this._runningTick=!1,this._stable=!0,this.componentTypes=[],this.components=[],this._onMicrotaskEmptySubscription=this._zone.onMicrotaskEmpty.subscribe({next:()=>{this._zone.run(()=>{this.tick()})}});const i=new v(t=>{this._stable=this._zone.isStable&&!this._zone.hasPendingMacrotasks&&!this._zone.hasPendingMicrotasks,this._zone.runOutsideAngular(()=>{t.next(this._stable),t.complete()})}),o=new v(t=>{let e;this._zone.runOutsideAngular(()=>{e=this._zone.onStable.subscribe(()=>{pl.assertNotInAngularZone(),dl(()=>{this._stable||this._zone.hasPendingMacrotasks||this._zone.hasPendingMicrotasks||(this._stable=!0,t.next(!0))})})});const n=this._zone.onUnstable.subscribe(()=>{pl.assertInAngularZone(),this._stable&&(this._stable=!1,this._zone.runOutsideAngular(()=>{t.next(!1)}))});return()=>{e.unsubscribe(),n.unsubscribe()}});this.isStable=W(i,o.pipe(t=>{return G()((e=K,function(t){let n;n="function"==typeof e?e:function(){return e};const r=Object.create(t,Z);return r.source=t,r.subjectFactory=n,r})(t));var e}))}bootstrap(t,e){if(!this._initStatus.done)throw new Error("Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.");let n;n=t instanceof Ca?t:this._componentFactoryResolver.resolveComponentFactory(t),this.componentTypes.push(n.componentType);const r=n.isBoundToModule?void 0:this._injector.get(ac),s=n.create(Qi.NULL,[],e||n.selector,r),i=s.location.nativeElement,o=s.injector.get(Cl,null),a=o&&s.injector.get(wl);return o&&a&&a.registerApplication(i,o),s.onDestroy(()=>{this.detachView(s.hostView),Rl(this.components,s),a&&a.unregisterApplication(i)}),this._loadComponent(s),s}tick(){if(this._runningTick)throw new Error("ApplicationRef.tick is called recursively");try{this._runningTick=!0;for(let t of this._views)t.detectChanges()}catch(t){this._zone.runOutsideAngular(()=>this._exceptionHandler.handleError(t))}finally{this._runningTick=!1}}attachView(t){const e=t;this._views.push(e),e.attachToAppRef(this)}detachView(t){const e=t;Rl(this._views,e),e.detachFromAppRef()}_loadComponent(t){this.attachView(t.hostView),this.tick(),this.components.push(t),this._injector.get(Jc,[]).concat(this._bootstrapListeners).forEach(e=>e(t))}ngOnDestroy(){this._views.slice().forEach(t=>t.destroy()),this._onMicrotaskEmptySubscription.unsubscribe()}get viewCount(){return this._views.length}}return t.\u0275fac=function(e){return new(e||t)(ur(pl),ur(Qi),ur(Qr),ur(_a),ur(qc))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function Rl(t,e){const n=t.indexOf(e);n>-1&&t.splice(n,1)}class Ll{}class Bl{}const jl={factoryPathPrefix:"",factoryPathSuffix:".ngfactory"};let Ml=(()=>{class t{constructor(t,e){this._compiler=t,this._config=e||jl}load(t){return this.loadAndCompile(t)}loadAndCompile(t){let[e,r]=t.split("#");return void 0===r&&(r="default"),n(621)(e).then(t=>t[r]).then(t=>Nl(t,e,r)).then(t=>this._compiler.compileModuleAsync(t))}loadFactory(t){let[e,r]=t.split("#"),s="NgFactory";return void 0===r&&(r="default",s=""),n(621)(this._config.factoryPathPrefix+e+this._config.factoryPathSuffix).then(t=>t[r+s]).then(t=>Nl(t,e,r))}}return t.\u0275fac=function(e){return new(e||t)(ur(ul),ur(Bl,8))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function Nl(t,e,n){if(!t)throw new Error(`Cannot find '${n}' in '${e}'`);return t}const Hl=kl(null,"core",[{provide:Kc,useValue:"unknown"},{provide:Il,deps:[Qi]},{provide:wl,deps:[]},{provide:tl,deps:[]}]),Vl=[{provide:Pl,useClass:Pl,deps:[pl,Qi,Qr,_a,qc]},{provide:bc,deps:[pl],useFactory:function(t){let e=[];return t.onStable.subscribe(()=>{for(;e.length;)e.pop()()}),function(t){e.push(t)}}},{provide:qc,useClass:qc,deps:[[new fr,Gc]]},{provide:ul,useClass:ul,deps:[]},Yc,{provide:Wa,useFactory:function(){return tc},deps:[]},{provide:qa,useFactory:function(){return ec},deps:[]},{provide:el,useFactory:function(t){return ha(t=t||"undefined"!=typeof $localize&&$localize.locale||la),t},deps:[[new pr(el),new fr,new gr]]},{provide:nl,useValue:"USD"}];let zl=(()=>{class t{constructor(t){}}return t.\u0275fac=function(e){return new(e||t)(ur(Pl))},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:Vl}),t})(),$l=null;function Ul(){return $l}const Wl=new Gn("DocumentToken");let Gl=(()=>{class t{historyGo(t){throw new Error("Not implemented")}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:ql,token:t,providedIn:"platform"}),t})();function ql(){return ur(Yl)}const Xl=new Gn("Location Initialized");let Yl=(()=>{class t extends Gl{constructor(t){super(),this._doc=t,this._init()}_init(){this.location=window.location,this._history=window.history}getBaseHrefFromDOM(){return Ul().getBaseHref(this._doc)}onPopState(t){const e=Ul().getGlobalEventTarget(this._doc,"window");return e.addEventListener("popstate",t,!1),()=>e.removeEventListener("popstate",t)}onHashChange(t){const e=Ul().getGlobalEventTarget(this._doc,"window");return e.addEventListener("hashchange",t,!1),()=>e.removeEventListener("hashchange",t)}get href(){return this.location.href}get protocol(){return this.location.protocol}get hostname(){return this.location.hostname}get port(){return this.location.port}get pathname(){return this.location.pathname}get search(){return this.location.search}get hash(){return this.location.hash}set pathname(t){this.location.pathname=t}pushState(t,e,n){Zl()?this._history.pushState(t,e,n):this.location.hash=n}replaceState(t,e,n){Zl()?this._history.replaceState(t,e,n):this.location.hash=n}forward(){this._history.forward()}back(){this._history.back()}historyGo(t=0){this._history.go(t)}getState(){return this._history.state}}return t.\u0275fac=function(e){return new(e||t)(ur(Wl))},t.\u0275prov=ht({factory:Ql,token:t,providedIn:"platform"}),t})();function Zl(){return!!window.history.pushState}function Ql(){return new Yl(ur(Wl))}function Kl(t,e){if(0==t.length)return e;if(0==e.length)return t;let n=0;return t.endsWith("/")&&n++,e.startsWith("/")&&n++,2==n?t+e.substring(1):1==n?t+e:t+"/"+e}function Jl(t){const e=t.match(/#|\?|$/),n=e&&e.index||t.length;return t.slice(0,n-("/"===t[n-1]?1:0))+t.slice(n)}function tu(t){return t&&"?"!==t[0]?"?"+t:t}let eu=(()=>{class t{historyGo(t){throw new Error("Not implemented")}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:nu,token:t,providedIn:"root"}),t})();function nu(t){const e=ur(Wl).location;return new su(ur(Gl),e&&e.origin||"")}const ru=new Gn("appBaseHref");let su=(()=>{class t extends eu{constructor(t,e){if(super(),this._platformLocation=t,this._removeListenerFns=[],null==e&&(e=this._platformLocation.getBaseHrefFromDOM()),null==e)throw new Error("No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.");this._baseHref=e}ngOnDestroy(){for(;this._removeListenerFns.length;)this._removeListenerFns.pop()()}onPopState(t){this._removeListenerFns.push(this._platformLocation.onPopState(t),this._platformLocation.onHashChange(t))}getBaseHref(){return this._baseHref}prepareExternalUrl(t){return Kl(this._baseHref,t)}path(t=!1){const e=this._platformLocation.pathname+tu(this._platformLocation.search),n=this._platformLocation.hash;return n&&t?`${e}${n}`:e}pushState(t,e,n,r){const s=this.prepareExternalUrl(n+tu(r));this._platformLocation.pushState(t,e,s)}replaceState(t,e,n,r){const s=this.prepareExternalUrl(n+tu(r));this._platformLocation.replaceState(t,e,s)}forward(){this._platformLocation.forward()}back(){this._platformLocation.back()}historyGo(t=0){var e,n;null===(n=(e=this._platformLocation).historyGo)||void 0===n||n.call(e,t)}}return t.\u0275fac=function(e){return new(e||t)(ur(Gl),ur(ru,8))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),iu=(()=>{class t extends eu{constructor(t,e){super(),this._platformLocation=t,this._baseHref="",this._removeListenerFns=[],null!=e&&(this._baseHref=e)}ngOnDestroy(){for(;this._removeListenerFns.length;)this._removeListenerFns.pop()()}onPopState(t){this._removeListenerFns.push(this._platformLocation.onPopState(t),this._platformLocation.onHashChange(t))}getBaseHref(){return this._baseHref}path(t=!1){let e=this._platformLocation.hash;return null==e&&(e="#"),e.length>0?e.substring(1):e}prepareExternalUrl(t){const e=Kl(this._baseHref,t);return e.length>0?"#"+e:e}pushState(t,e,n,r){let s=this.prepareExternalUrl(n+tu(r));0==s.length&&(s=this._platformLocation.pathname),this._platformLocation.pushState(t,e,s)}replaceState(t,e,n,r){let s=this.prepareExternalUrl(n+tu(r));0==s.length&&(s=this._platformLocation.pathname),this._platformLocation.replaceState(t,e,s)}forward(){this._platformLocation.forward()}back(){this._platformLocation.back()}historyGo(t=0){var e,n;null===(n=(e=this._platformLocation).historyGo)||void 0===n||n.call(e,t)}}return t.\u0275fac=function(e){return new(e||t)(ur(Gl),ur(ru,8))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),ou=(()=>{class t{constructor(t,e){this._subject=new Ac,this._urlChangeListeners=[],this._platformStrategy=t;const n=this._platformStrategy.getBaseHref();this._platformLocation=e,this._baseHref=Jl(cu(n)),this._platformStrategy.onPopState(t=>{this._subject.emit({url:this.path(!0),pop:!0,state:t.state,type:t.type})})}path(t=!1){return this.normalize(this._platformStrategy.path(t))}getState(){return this._platformLocation.getState()}isCurrentPathEqualTo(t,e=""){return this.path()==this.normalize(t+tu(e))}normalize(e){return t.stripTrailingSlash(function(t,e){return t&&e.startsWith(t)?e.substring(t.length):e}(this._baseHref,cu(e)))}prepareExternalUrl(t){return t&&"/"!==t[0]&&(t="/"+t),this._platformStrategy.prepareExternalUrl(t)}go(t,e="",n=null){this._platformStrategy.pushState(n,"",t,e),this._notifyUrlChangeListeners(this.prepareExternalUrl(t+tu(e)),n)}replaceState(t,e="",n=null){this._platformStrategy.replaceState(n,"",t,e),this._notifyUrlChangeListeners(this.prepareExternalUrl(t+tu(e)),n)}forward(){this._platformStrategy.forward()}back(){this._platformStrategy.back()}historyGo(t=0){var e,n;null===(n=(e=this._platformStrategy).historyGo)||void 0===n||n.call(e,t)}onUrlChange(t){this._urlChangeListeners.push(t),this._urlChangeSubscription||(this._urlChangeSubscription=this.subscribe(t=>{this._notifyUrlChangeListeners(t.url,t.state)}))}_notifyUrlChangeListeners(t="",e){this._urlChangeListeners.forEach(n=>n(t,e))}subscribe(t,e,n){return this._subject.subscribe({next:t,error:e,complete:n})}}return t.\u0275fac=function(e){return new(e||t)(ur(eu),ur(Gl))},t.normalizeQueryParams=tu,t.joinWithSlash=Kl,t.stripTrailingSlash=Jl,t.\u0275prov=ht({factory:au,token:t,providedIn:"root"}),t})();function au(){return new ou(ur(eu),ur(Gl))}function cu(t){return t.replace(/\/index.html$/,"")}const lu={ADP:[void 0,void 0,0],AFN:[void 0,void 0,0],ALL:[void 0,void 0,0],AMD:[void 0,void 0,2],AOA:[void 0,"Kz"],ARS:[void 0,"$"],AUD:["A$","$"],BAM:[void 0,"KM"],BBD:[void 0,"$"],BDT:[void 0,"\u09f3"],BHD:[void 0,void 0,3],BIF:[void 0,void 0,0],BMD:[void 0,"$"],BND:[void 0,"$"],BOB:[void 0,"Bs"],BRL:["R$"],BSD:[void 0,"$"],BWP:[void 0,"P"],BYN:[void 0,"\u0440.",2],BYR:[void 0,void 0,0],BZD:[void 0,"$"],CAD:["CA$","$",2],CHF:[void 0,void 0,2],CLF:[void 0,void 0,4],CLP:[void 0,"$",0],CNY:["CN\xa5","\xa5"],COP:[void 0,"$",2],CRC:[void 0,"\u20a1",2],CUC:[void 0,"$"],CUP:[void 0,"$"],CZK:[void 0,"K\u010d",2],DJF:[void 0,void 0,0],DKK:[void 0,"kr",2],DOP:[void 0,"$"],EGP:[void 0,"E\xa3"],ESP:[void 0,"\u20a7",0],EUR:["\u20ac"],FJD:[void 0,"$"],FKP:[void 0,"\xa3"],GBP:["\xa3"],GEL:[void 0,"\u20be"],GIP:[void 0,"\xa3"],GNF:[void 0,"FG",0],GTQ:[void 0,"Q"],GYD:[void 0,"$",2],HKD:["HK$","$"],HNL:[void 0,"L"],HRK:[void 0,"kn"],HUF:[void 0,"Ft",2],IDR:[void 0,"Rp",2],ILS:["\u20aa"],INR:["\u20b9"],IQD:[void 0,void 0,0],IRR:[void 0,void 0,0],ISK:[void 0,"kr",0],ITL:[void 0,void 0,0],JMD:[void 0,"$"],JOD:[void 0,void 0,3],JPY:["\xa5",void 0,0],KHR:[void 0,"\u17db"],KMF:[void 0,"CF",0],KPW:[void 0,"\u20a9",0],KRW:["\u20a9",void 0,0],KWD:[void 0,void 0,3],KYD:[void 0,"$"],KZT:[void 0,"\u20b8"],LAK:[void 0,"\u20ad",0],LBP:[void 0,"L\xa3",0],LKR:[void 0,"Rs"],LRD:[void 0,"$"],LTL:[void 0,"Lt"],LUF:[void 0,void 0,0],LVL:[void 0,"Ls"],LYD:[void 0,void 0,3],MGA:[void 0,"Ar",0],MGF:[void 0,void 0,0],MMK:[void 0,"K",0],MNT:[void 0,"\u20ae",2],MRO:[void 0,void 0,0],MUR:[void 0,"Rs",2],MXN:["MX$","$"],MYR:[void 0,"RM"],NAD:[void 0,"$"],NGN:[void 0,"\u20a6"],NIO:[void 0,"C$"],NOK:[void 0,"kr",2],NPR:[void 0,"Rs"],NZD:["NZ$","$"],OMR:[void 0,void 0,3],PHP:[void 0,"\u20b1"],PKR:[void 0,"Rs",2],PLN:[void 0,"z\u0142"],PYG:[void 0,"\u20b2",0],RON:[void 0,"lei"],RSD:[void 0,void 0,0],RUB:[void 0,"\u20bd"],RUR:[void 0,"\u0440."],RWF:[void 0,"RF",0],SBD:[void 0,"$"],SEK:[void 0,"kr",2],SGD:[void 0,"$"],SHP:[void 0,"\xa3"],SLL:[void 0,void 0,0],SOS:[void 0,void 0,0],SRD:[void 0,"$"],SSP:[void 0,"\xa3"],STD:[void 0,void 0,0],STN:[void 0,"Db"],SYP:[void 0,"\xa3",0],THB:[void 0,"\u0e3f"],TMM:[void 0,void 0,0],TND:[void 0,void 0,3],TOP:[void 0,"T$"],TRL:[void 0,void 0,0],TRY:[void 0,"\u20ba"],TTD:[void 0,"$"],TWD:["NT$","$",2],TZS:[void 0,void 0,2],UAH:[void 0,"\u20b4"],UGX:[void 0,void 0,0],USD:["$"],UYI:[void 0,void 0,0],UYU:[void 0,"$"],UYW:[void 0,void 0,4],UZS:[void 0,void 0,2],VEF:[void 0,"Bs",2],VND:["\u20ab",void 0,0],VUV:[void 0,void 0,0],XAF:["FCFA",void 0,0],XCD:["EC$","$"],XOF:["CFA",void 0,0],XPF:["CFPF",void 0,0],XXX:["\xa4"],YER:[void 0,void 0,0],ZAR:[void 0,"R"],ZMK:[void 0,void 0,0],ZMW:[void 0,"ZK"],ZWD:[void 0,void 0,0]};var uu=function(t){return t[t.Decimal=0]="Decimal",t[t.Percent=1]="Percent",t[t.Currency=2]="Currency",t[t.Scientific=3]="Scientific",t}({}),hu=function(t){return t[t.Zero=0]="Zero",t[t.One=1]="One",t[t.Two=2]="Two",t[t.Few=3]="Few",t[t.Many=4]="Many",t[t.Other=5]="Other",t}({}),du=function(t){return t[t.Format=0]="Format",t[t.Standalone=1]="Standalone",t}({}),pu=function(t){return t[t.Narrow=0]="Narrow",t[t.Abbreviated=1]="Abbreviated",t[t.Wide=2]="Wide",t[t.Short=3]="Short",t}({}),fu=function(t){return t[t.Short=0]="Short",t[t.Medium=1]="Medium",t[t.Long=2]="Long",t[t.Full=3]="Full",t}({}),gu=function(t){return t[t.Decimal=0]="Decimal",t[t.Group=1]="Group",t[t.List=2]="List",t[t.PercentSign=3]="PercentSign",t[t.PlusSign=4]="PlusSign",t[t.MinusSign=5]="MinusSign",t[t.Exponential=6]="Exponential",t[t.SuperscriptingExponent=7]="SuperscriptingExponent",t[t.PerMille=8]="PerMille",t[t[1/0]=9]="Infinity",t[t.NaN=10]="NaN",t[t.TimeSeparator=11]="TimeSeparator",t[t.CurrencyDecimal=12]="CurrencyDecimal",t[t.CurrencyGroup=13]="CurrencyGroup",t}({});function mu(t,e){return _u(oa(t)[ca.DateFormat],e)}function yu(t,e){return _u(oa(t)[ca.TimeFormat],e)}function vu(t,e){return _u(oa(t)[ca.DateTimeFormat],e)}function bu(t,e){const n=oa(t),r=n[ca.NumberSymbols][e];if(void 0===r){if(e===gu.CurrencyDecimal)return n[ca.NumberSymbols][gu.Decimal];if(e===gu.CurrencyGroup)return n[ca.NumberSymbols][gu.Group]}return r}function Cu(t,e){return oa(t)[ca.NumberFormats][e]}function wu(t){if(!t[ca.ExtraData])throw new Error(`Missing extra locale data for the locale "${t[ca.LocaleId]}". Use "registerLocaleData" to load new data. See the "I18n guide" on angular.io to know more.`)}function _u(t,e){for(let n=e;n>-1;n--)if(void 0!==t[n])return t[n];throw new Error("Locale data API: locale data undefined")}function Du(t){const[e,n]=t.split(":");return{hours:+e,minutes:+n}}const Eu=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/,Su={},xu=/((?:[^BEGHLMOSWYZabcdhmswyz']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|Y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|c{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\s\S]*)/;var Au=function(t){return t[t.Short=0]="Short",t[t.ShortGMT=1]="ShortGMT",t[t.Long=2]="Long",t[t.Extended=3]="Extended",t}({}),Tu=function(t){return t[t.FullYear=0]="FullYear",t[t.Month=1]="Month",t[t.Date=2]="Date",t[t.Hours=3]="Hours",t[t.Minutes=4]="Minutes",t[t.Seconds=5]="Seconds",t[t.FractionalSeconds=6]="FractionalSeconds",t[t.Day=7]="Day",t}({}),ku=function(t){return t[t.DayPeriods=0]="DayPeriods",t[t.Days=1]="Days",t[t.Months=2]="Months",t[t.Eras=3]="Eras",t}({});function Fu(t,e,n,r){let s=function(t){if($u(t))return t;if("number"==typeof t&&!isNaN(t))return new Date(t);if("string"==typeof t){if(t=t.trim(),/^(\d{4}(-\d{1,2}(-\d{1,2})?)?)$/.test(t)){const[e,n=1,r=1]=t.split("-").map(t=>+t);return Iu(e,n-1,r)}const e=parseFloat(t);if(!isNaN(t-e))return new Date(e);let n;if(n=t.match(Eu))return function(t){const e=new Date(0);let n=0,r=0;const s=t[8]?e.setUTCFullYear:e.setFullYear,i=t[8]?e.setUTCHours:e.setHours;t[9]&&(n=Number(t[9]+t[10]),r=Number(t[9]+t[11])),s.call(e,Number(t[1]),Number(t[2])-1,Number(t[3]));const o=Number(t[4]||0)-n,a=Number(t[5]||0)-r,c=Number(t[6]||0),l=Math.floor(1e3*parseFloat("0."+(t[7]||0)));return i.call(e,o,a,c,l),e}(n)}const e=new Date(t);if(!$u(e))throw new Error(`Unable to convert "${t}" into a date`);return e}(t);e=Ou(n,e)||e;let i,o=[];for(;e;){if(i=xu.exec(e),!i){o.push(e);break}{o=o.concat(i.slice(1));const t=o.pop();if(!t)break;e=t}}let a=s.getTimezoneOffset();r&&(a=zu(r,a),s=function(t,e,n){const r=t.getTimezoneOffset();return function(t,e){return(t=new Date(t.getTime())).setMinutes(t.getMinutes()+e),t}(t,-1*(zu(e,r)-r))}(s,r));let c="";return o.forEach(t=>{const e=function(t){if(Vu[t])return Vu[t];let e;switch(t){case"G":case"GG":case"GGG":e=Bu(ku.Eras,pu.Abbreviated);break;case"GGGG":e=Bu(ku.Eras,pu.Wide);break;case"GGGGG":e=Bu(ku.Eras,pu.Narrow);break;case"y":e=Lu(Tu.FullYear,1,0,!1,!0);break;case"yy":e=Lu(Tu.FullYear,2,0,!0,!0);break;case"yyy":e=Lu(Tu.FullYear,3,0,!1,!0);break;case"yyyy":e=Lu(Tu.FullYear,4,0,!1,!0);break;case"Y":e=Hu(1);break;case"YY":e=Hu(2,!0);break;case"YYY":e=Hu(3);break;case"YYYY":e=Hu(4);break;case"M":case"L":e=Lu(Tu.Month,1,1);break;case"MM":case"LL":e=Lu(Tu.Month,2,1);break;case"MMM":e=Bu(ku.Months,pu.Abbreviated);break;case"MMMM":e=Bu(ku.Months,pu.Wide);break;case"MMMMM":e=Bu(ku.Months,pu.Narrow);break;case"LLL":e=Bu(ku.Months,pu.Abbreviated,du.Standalone);break;case"LLLL":e=Bu(ku.Months,pu.Wide,du.Standalone);break;case"LLLLL":e=Bu(ku.Months,pu.Narrow,du.Standalone);break;case"w":e=Nu(1);break;case"ww":e=Nu(2);break;case"W":e=Nu(1,!0);break;case"d":e=Lu(Tu.Date,1);break;case"dd":e=Lu(Tu.Date,2);break;case"c":case"cc":e=Lu(Tu.Day,1);break;case"ccc":e=Bu(ku.Days,pu.Abbreviated,du.Standalone);break;case"cccc":e=Bu(ku.Days,pu.Wide,du.Standalone);break;case"ccccc":e=Bu(ku.Days,pu.Narrow,du.Standalone);break;case"cccccc":e=Bu(ku.Days,pu.Short,du.Standalone);break;case"E":case"EE":case"EEE":e=Bu(ku.Days,pu.Abbreviated);break;case"EEEE":e=Bu(ku.Days,pu.Wide);break;case"EEEEE":e=Bu(ku.Days,pu.Narrow);break;case"EEEEEE":e=Bu(ku.Days,pu.Short);break;case"a":case"aa":case"aaa":e=Bu(ku.DayPeriods,pu.Abbreviated);break;case"aaaa":e=Bu(ku.DayPeriods,pu.Wide);break;case"aaaaa":e=Bu(ku.DayPeriods,pu.Narrow);break;case"b":case"bb":case"bbb":e=Bu(ku.DayPeriods,pu.Abbreviated,du.Standalone,!0);break;case"bbbb":e=Bu(ku.DayPeriods,pu.Wide,du.Standalone,!0);break;case"bbbbb":e=Bu(ku.DayPeriods,pu.Narrow,du.Standalone,!0);break;case"B":case"BB":case"BBB":e=Bu(ku.DayPeriods,pu.Abbreviated,du.Format,!0);break;case"BBBB":e=Bu(ku.DayPeriods,pu.Wide,du.Format,!0);break;case"BBBBB":e=Bu(ku.DayPeriods,pu.Narrow,du.Format,!0);break;case"h":e=Lu(Tu.Hours,1,-12);break;case"hh":e=Lu(Tu.Hours,2,-12);break;case"H":e=Lu(Tu.Hours,1);break;case"HH":e=Lu(Tu.Hours,2);break;case"m":e=Lu(Tu.Minutes,1);break;case"mm":e=Lu(Tu.Minutes,2);break;case"s":e=Lu(Tu.Seconds,1);break;case"ss":e=Lu(Tu.Seconds,2);break;case"S":e=Lu(Tu.FractionalSeconds,1);break;case"SS":e=Lu(Tu.FractionalSeconds,2);break;case"SSS":e=Lu(Tu.FractionalSeconds,3);break;case"Z":case"ZZ":case"ZZZ":e=ju(Au.Short);break;case"ZZZZZ":e=ju(Au.Extended);break;case"O":case"OO":case"OOO":case"z":case"zz":case"zzz":e=ju(Au.ShortGMT);break;case"OOOO":case"ZZZZ":case"zzzz":e=ju(Au.Long);break;default:return null}return Vu[t]=e,e}(t);c+=e?e(s,n,a):"''"===t?"'":t.replace(/(^'|'$)/g,"").replace(/''/g,"'")}),c}function Iu(t,e,n){const r=new Date(0);return r.setFullYear(t,e,n),r.setHours(0,0,0),r}function Ou(t,e){const n=function(t){return oa(t)[ca.LocaleId]}(t);if(Su[n]=Su[n]||{},Su[n][e])return Su[n][e];let r="";switch(e){case"shortDate":r=mu(t,fu.Short);break;case"mediumDate":r=mu(t,fu.Medium);break;case"longDate":r=mu(t,fu.Long);break;case"fullDate":r=mu(t,fu.Full);break;case"shortTime":r=yu(t,fu.Short);break;case"mediumTime":r=yu(t,fu.Medium);break;case"longTime":r=yu(t,fu.Long);break;case"fullTime":r=yu(t,fu.Full);break;case"short":const e=Ou(t,"shortTime"),n=Ou(t,"shortDate");r=Pu(vu(t,fu.Short),[e,n]);break;case"medium":const s=Ou(t,"mediumTime"),i=Ou(t,"mediumDate");r=Pu(vu(t,fu.Medium),[s,i]);break;case"long":const o=Ou(t,"longTime"),a=Ou(t,"longDate");r=Pu(vu(t,fu.Long),[o,a]);break;case"full":const c=Ou(t,"fullTime"),l=Ou(t,"fullDate");r=Pu(vu(t,fu.Full),[c,l])}return r&&(Su[n][e]=r),r}function Pu(t,e){return e&&(t=t.replace(/\{([^}]+)}/g,function(t,n){return null!=e&&n in e?e[n]:t})),t}function Ru(t,e,n="-",r,s){let i="";(t<0||s&&t<=0)&&(s?t=1-t:(t=-t,i=n));let o=String(t);for(;o.length<e;)o="0"+o;return r&&(o=o.substr(o.length-e)),i+o}function Lu(t,e,n=0,r=!1,s=!1){return function(i,o){let a=function(t,e){switch(t){case Tu.FullYear:return e.getFullYear();case Tu.Month:return e.getMonth();case Tu.Date:return e.getDate();case Tu.Hours:return e.getHours();case Tu.Minutes:return e.getMinutes();case Tu.Seconds:return e.getSeconds();case Tu.FractionalSeconds:return e.getMilliseconds();case Tu.Day:return e.getDay();default:throw new Error(`Unknown DateType value "${t}".`)}}(t,i);if((n>0||a>-n)&&(a+=n),t===Tu.Hours)0===a&&-12===n&&(a=12);else if(t===Tu.FractionalSeconds)return c=e,Ru(a,3).substr(0,c);var c;const l=bu(o,gu.MinusSign);return Ru(a,e,l,r,s)}}function Bu(t,e,n=du.Format,r=!1){return function(s,i){return function(t,e,n,r,s,i){switch(n){case ku.Months:return function(t,e,n){const r=oa(t),s=_u([r[ca.MonthsFormat],r[ca.MonthsStandalone]],e);return _u(s,n)}(e,s,r)[t.getMonth()];case ku.Days:return function(t,e,n){const r=oa(t),s=_u([r[ca.DaysFormat],r[ca.DaysStandalone]],e);return _u(s,n)}(e,s,r)[t.getDay()];case ku.DayPeriods:const o=t.getHours(),a=t.getMinutes();if(i){const t=function(t){const e=oa(t);return wu(e),(e[ca.ExtraData][2]||[]).map(t=>"string"==typeof t?Du(t):[Du(t[0]),Du(t[1])])}(e),n=function(t,e,n){const r=oa(t);wu(r);const s=_u([r[ca.ExtraData][0],r[ca.ExtraData][1]],e)||[];return _u(s,n)||[]}(e,s,r),i=t.findIndex(t=>{if(Array.isArray(t)){const[e,n]=t,r=o>=e.hours&&a>=e.minutes,s=o<n.hours||o===n.hours&&a<n.minutes;if(e.hours<n.hours){if(r&&s)return!0}else if(r||s)return!0}else if(t.hours===o&&t.minutes===a)return!0;return!1});if(-1!==i)return n[i]}return function(t,e,n){const r=oa(t),s=_u([r[ca.DayPeriodsFormat],r[ca.DayPeriodsStandalone]],e);return _u(s,n)}(e,s,r)[o<12?0:1];case ku.Eras:return function(t,e){return _u(oa(t)[ca.Eras],e)}(e,r)[t.getFullYear()<=0?0:1];default:throw new Error(`unexpected translation type ${n}`)}}(s,i,t,e,n,r)}}function ju(t){return function(e,n,r){const s=-1*r,i=bu(n,gu.MinusSign),o=s>0?Math.floor(s/60):Math.ceil(s/60);switch(t){case Au.Short:return(s>=0?"+":"")+Ru(o,2,i)+Ru(Math.abs(s%60),2,i);case Au.ShortGMT:return"GMT"+(s>=0?"+":"")+Ru(o,1,i);case Au.Long:return"GMT"+(s>=0?"+":"")+Ru(o,2,i)+":"+Ru(Math.abs(s%60),2,i);case Au.Extended:return 0===r?"Z":(s>=0?"+":"")+Ru(o,2,i)+":"+Ru(Math.abs(s%60),2,i);default:throw new Error(`Unknown zone width "${t}"`)}}}function Mu(t){return Iu(t.getFullYear(),t.getMonth(),t.getDate()+(4-t.getDay()))}function Nu(t,e=!1){return function(n,r){let s;if(e){const t=new Date(n.getFullYear(),n.getMonth(),1).getDay()-1,e=n.getDate();s=1+Math.floor((e+t)/7)}else{const t=Mu(n),e=function(t){const e=Iu(t,0,1).getDay();return Iu(t,0,1+(e<=4?4:11)-e)}(t.getFullYear()),r=t.getTime()-e.getTime();s=1+Math.round(r/6048e5)}return Ru(s,t,bu(r,gu.MinusSign))}}function Hu(t,e=!1){return function(n,r){return Ru(Mu(n).getFullYear(),t,bu(r,gu.MinusSign),e)}}const Vu={};function zu(t,e){t=t.replace(/:/g,"");const n=Date.parse("Jan 01, 1970 00:00:00 "+t)/6e4;return isNaN(n)?e:n}function $u(t){return t instanceof Date&&!isNaN(t.valueOf())}const Uu=/^(\d+)?\.((\d+)(-(\d+))?)?$/,Wu=".",Gu="0";function qu(t,e,n,r,s,i,o=!1){let a="",c=!1;if(isFinite(t)){let l=function(t){let e,n,r,s,i,o=Math.abs(t)+"",a=0;for((n=o.indexOf(Wu))>-1&&(o=o.replace(Wu,"")),(r=o.search(/e/i))>0?(n<0&&(n=r),n+=+o.slice(r+1),o=o.substring(0,r)):n<0&&(n=o.length),r=0;o.charAt(r)===Gu;r++);if(r===(i=o.length))e=[0],n=1;else{for(i--;o.charAt(i)===Gu;)i--;for(n-=r,e=[],s=0;r<=i;r++,s++)e[s]=Number(o.charAt(r))}return n>22&&(e=e.splice(0,21),a=n-1,n=1),{digits:e,exponent:a,integerLen:n}}(t);o&&(l=function(t){if(0===t.digits[0])return t;const e=t.digits.length-t.integerLen;return t.exponent?t.exponent+=2:(0===e?t.digits.push(0,0):1===e&&t.digits.push(0),t.integerLen+=2),t}(l));let u=e.minInt,h=e.minFrac,d=e.maxFrac;if(i){const t=i.match(Uu);if(null===t)throw new Error(`${i} is not a valid digit info`);const e=t[1],n=t[3],r=t[5];null!=e&&(u=Yu(e)),null!=n&&(h=Yu(n)),null!=r?d=Yu(r):null!=n&&h>d&&(d=h)}!function(t,e,n){if(e>n)throw new Error(`The minimum number of digits after fraction (${e}) is higher than the maximum (${n}).`);let r=t.digits,s=r.length-t.integerLen;const i=Math.min(Math.max(e,s),n);let o=i+t.integerLen,a=r[o];if(o>0){r.splice(Math.max(t.integerLen,o));for(let t=o;t<r.length;t++)r[t]=0}else{s=Math.max(0,s),t.integerLen=1,r.length=Math.max(1,o=i+1),r[0]=0;for(let t=1;t<o;t++)r[t]=0}if(a>=5)if(o-1<0){for(let e=0;e>o;e--)r.unshift(0),t.integerLen++;r.unshift(1),t.integerLen++}else r[o-1]++;for(;s<Math.max(0,i);s++)r.push(0);let c=0!==i;const l=e+t.integerLen,u=r.reduceRight(function(t,e,n,r){return r[n]=(e+=t)<10?e:e-10,c&&(0===r[n]&&n>=l?r.pop():c=!1),e>=10?1:0},0);u&&(r.unshift(u),t.integerLen++)}(l,h,d);let p=l.digits,f=l.integerLen;const g=l.exponent;let m=[];for(c=p.every(t=>!t);f<u;f++)p.unshift(0);for(;f<0;f++)p.unshift(0);f>0?m=p.splice(f,p.length):(m=p,p=[0]);const y=[];for(p.length>=e.lgSize&&y.unshift(p.splice(-e.lgSize,p.length).join(""));p.length>e.gSize;)y.unshift(p.splice(-e.gSize,p.length).join(""));p.length&&y.unshift(p.join("")),a=y.join(bu(n,r)),m.length&&(a+=bu(n,s)+m.join("")),g&&(a+=bu(n,gu.Exponential)+"+"+g)}else a=bu(n,gu.Infinity);return a=t<0&&!c?e.negPre+a+e.negSuf:e.posPre+a+e.posSuf,a}function Xu(t,e="-"){const n={minInt:1,minFrac:0,maxFrac:0,posPre:"",posSuf:"",negPre:"",negSuf:"",gSize:0,lgSize:0},r=t.split(";"),s=r[0],i=r[1],o=-1!==s.indexOf(Wu)?s.split(Wu):[s.substring(0,s.lastIndexOf(Gu)+1),s.substring(s.lastIndexOf(Gu)+1)],a=o[0],c=o[1]||"";n.posPre=a.substr(0,a.indexOf("#"));for(let u=0;u<c.length;u++){const t=c.charAt(u);t===Gu?n.minFrac=n.maxFrac=u+1:"#"===t?n.maxFrac=u+1:n.posSuf+=t}const l=a.split(",");if(n.gSize=l[1]?l[1].length:0,n.lgSize=l[2]||l[1]?(l[2]||l[1]).length:0,i){const t=s.length-n.posPre.length-n.posSuf.length,e=i.indexOf("#");n.negPre=i.substr(0,e).replace(/'/g,""),n.negSuf=i.substr(e+t).replace(/'/g,"")}else n.negPre=e+n.posPre,n.negSuf=n.posSuf;return n}function Yu(t){const e=parseInt(t);if(isNaN(e))throw new Error("Invalid integer literal when parsing "+t);return e}class Zu{}let Qu=(()=>{class t extends Zu{constructor(t){super(),this.locale=t}getPluralCategory(t,e){switch(function(t){return oa(t)[ca.PluralCase]}(e||this.locale)(t)){case hu.Zero:return"zero";case hu.One:return"one";case hu.Two:return"two";case hu.Few:return"few";case hu.Many:return"many";default:return"other"}}}return t.\u0275fac=function(e){return new(e||t)(ur(el))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function Ku(t,e){e=encodeURIComponent(e);for(const n of t.split(";")){const t=n.indexOf("="),[r,s]=-1==t?[n,""]:[n.slice(0,t),n.slice(t+1)];if(r.trim()===e)return decodeURIComponent(s)}return null}let Ju=(()=>{class t{constructor(t,e,n,r){this._iterableDiffers=t,this._keyValueDiffers=e,this._ngEl=n,this._renderer=r,this._iterableDiffer=null,this._keyValueDiffer=null,this._initialClasses=[],this._rawClass=null}set klass(t){this._removeClasses(this._initialClasses),this._initialClasses="string"==typeof t?t.split(/\s+/):[],this._applyClasses(this._initialClasses),this._applyClasses(this._rawClass)}set ngClass(t){this._removeClasses(this._rawClass),this._applyClasses(this._initialClasses),this._iterableDiffer=null,this._keyValueDiffer=null,this._rawClass="string"==typeof t?t.split(/\s+/):t,this._rawClass&&(ao(this._rawClass)?this._iterableDiffer=this._iterableDiffers.find(this._rawClass).create():this._keyValueDiffer=this._keyValueDiffers.find(this._rawClass).create())}ngDoCheck(){if(this._iterableDiffer){const t=this._iterableDiffer.diff(this._rawClass);t&&this._applyIterableChanges(t)}else if(this._keyValueDiffer){const t=this._keyValueDiffer.diff(this._rawClass);t&&this._applyKeyValueChanges(t)}}_applyKeyValueChanges(t){t.forEachAddedItem(t=>this._toggleClass(t.key,t.currentValue)),t.forEachChangedItem(t=>this._toggleClass(t.key,t.currentValue)),t.forEachRemovedItem(t=>{t.previousValue&&this._toggleClass(t.key,!1)})}_applyIterableChanges(t){t.forEachAddedItem(t=>{if("string"!=typeof t.item)throw new Error(`NgClass can only toggle CSS classes expressed as strings, got ${et(t.item)}`);this._toggleClass(t.item,!0)}),t.forEachRemovedItem(t=>this._toggleClass(t.item,!1))}_applyClasses(t){t&&(Array.isArray(t)||t instanceof Set?t.forEach(t=>this._toggleClass(t,!0)):Object.keys(t).forEach(e=>this._toggleClass(e,!!t[e])))}_removeClasses(t){t&&(Array.isArray(t)||t instanceof Set?t.forEach(t=>this._toggleClass(t,!1)):Object.keys(t).forEach(t=>this._toggleClass(t,!1)))}_toggleClass(t,e){(t=t.trim())&&t.split(/\s+/g).forEach(t=>{e?this._renderer.addClass(this._ngEl.nativeElement,t):this._renderer.removeClass(this._ngEl.nativeElement,t)})}}return t.\u0275fac=function(e){return new(e||t)(go(Wa),go(qa),go(xa),go(ka))},t.\u0275dir=Xt({type:t,selectors:[["","ngClass",""]],inputs:{klass:["class","klass"],ngClass:"ngClass"}}),t})();class th{constructor(t,e,n,r){this.$implicit=t,this.ngForOf=e,this.index=n,this.count=r}get first(){return 0===this.index}get last(){return this.index===this.count-1}get even(){return this.index%2==0}get odd(){return!this.even}}let eh=(()=>{class t{constructor(t,e,n){this._viewContainer=t,this._template=e,this._differs=n,this._ngForOf=null,this._ngForOfDirty=!0,this._differ=null}set ngForOf(t){this._ngForOf=t,this._ngForOfDirty=!0}set ngForTrackBy(t){this._trackByFn=t}get ngForTrackBy(){return this._trackByFn}set ngForTemplate(t){t&&(this._template=t)}ngDoCheck(){if(this._ngForOfDirty){this._ngForOfDirty=!1;const n=this._ngForOf;if(!this._differ&&n)try{this._differ=this._differs.find(n).create(this.ngForTrackBy)}catch(e){throw new Error(`Cannot find a differ supporting object '${n}' of type '${t=n,t.name||typeof t}'. NgFor only supports binding to Iterables such as Arrays.`)}}var t;if(this._differ){const t=this._differ.diff(this._ngForOf);t&&this._applyChanges(t)}}_applyChanges(t){const e=[];t.forEachOperation((t,n,r)=>{if(null==t.previousIndex){const n=this._viewContainer.createEmbeddedView(this._template,new th(null,this._ngForOf,-1,-1),null===r?void 0:r),s=new nh(t,n);e.push(s)}else if(null==r)this._viewContainer.remove(null===n?void 0:n);else if(null!==n){const s=this._viewContainer.get(n);this._viewContainer.move(s,r);const i=new nh(t,s);e.push(i)}});for(let n=0;n<e.length;n++)this._perViewChange(e[n].view,e[n].record);for(let n=0,r=this._viewContainer.length;n<r;n++){const t=this._viewContainer.get(n);t.context.index=n,t.context.count=r,t.context.ngForOf=this._ngForOf}t.forEachIdentityChange(t=>{this._viewContainer.get(t.currentIndex).context.$implicit=t.item})}_perViewChange(t,e){t.context.$implicit=e.item}static ngTemplateContextGuard(t,e){return!0}}return t.\u0275fac=function(e){return new(e||t)(go(uc),go(rc),go(Wa))},t.\u0275dir=Xt({type:t,selectors:[["","ngFor","","ngForOf",""]],inputs:{ngForOf:"ngForOf",ngForTrackBy:"ngForTrackBy",ngForTemplate:"ngForTemplate"}}),t})();class nh{constructor(t,e){this.record=t,this.view=e}}let rh=(()=>{class t{constructor(t,e){this._viewContainer=t,this._context=new sh,this._thenTemplateRef=null,this._elseTemplateRef=null,this._thenViewRef=null,this._elseViewRef=null,this._thenTemplateRef=e}set ngIf(t){this._context.$implicit=this._context.ngIf=t,this._updateView()}set ngIfThen(t){ih("ngIfThen",t),this._thenTemplateRef=t,this._thenViewRef=null,this._updateView()}set ngIfElse(t){ih("ngIfElse",t),this._elseTemplateRef=t,this._elseViewRef=null,this._updateView()}_updateView(){this._context.$implicit?this._thenViewRef||(this._viewContainer.clear(),this._elseViewRef=null,this._thenTemplateRef&&(this._thenViewRef=this._viewContainer.createEmbeddedView(this._thenTemplateRef,this._context))):this._elseViewRef||(this._viewContainer.clear(),this._thenViewRef=null,this._elseTemplateRef&&(this._elseViewRef=this._viewContainer.createEmbeddedView(this._elseTemplateRef,this._context)))}static ngTemplateContextGuard(t,e){return!0}}return t.\u0275fac=function(e){return new(e||t)(go(uc),go(rc))},t.\u0275dir=Xt({type:t,selectors:[["","ngIf",""]],inputs:{ngIf:"ngIf",ngIfThen:"ngIfThen",ngIfElse:"ngIfElse"}}),t})();class sh{constructor(){this.$implicit=null,this.ngIf=null}}function ih(t,e){if(e&&!e.createEmbeddedView)throw new Error(`${t} must be a TemplateRef, but received '${et(e)}'.`)}let oh=(()=>{class t{constructor(t,e,n){this._ngEl=t,this._differs=e,this._renderer=n,this._ngStyle=null,this._differ=null}set ngStyle(t){this._ngStyle=t,!this._differ&&t&&(this._differ=this._differs.find(t).create())}ngDoCheck(){if(this._differ){const t=this._differ.diff(this._ngStyle);t&&this._applyChanges(t)}}_setStyle(t,e){const[n,r]=t.split(".");null!=(e=null!=e&&r?`${e}${r}`:e)?this._renderer.setStyle(this._ngEl.nativeElement,n,e):this._renderer.removeStyle(this._ngEl.nativeElement,n)}_applyChanges(t){t.forEachRemovedItem(t=>this._setStyle(t.key,null)),t.forEachAddedItem(t=>this._setStyle(t.key,t.currentValue)),t.forEachChangedItem(t=>this._setStyle(t.key,t.currentValue))}}return t.\u0275fac=function(e){return new(e||t)(go(xa),go(qa),go(ka))},t.\u0275dir=Xt({type:t,selectors:[["","ngStyle",""]],inputs:{ngStyle:"ngStyle"}}),t})(),ah=(()=>{class t{constructor(t){this._viewContainerRef=t,this._viewRef=null,this.ngTemplateOutletContext=null,this.ngTemplateOutlet=null}ngOnChanges(t){if(t.ngTemplateOutlet){const t=this._viewContainerRef;this._viewRef&&t.remove(t.indexOf(this._viewRef)),this._viewRef=this.ngTemplateOutlet?t.createEmbeddedView(this.ngTemplateOutlet,this.ngTemplateOutletContext):null}else this._viewRef&&t.ngTemplateOutletContext&&this.ngTemplateOutletContext&&(this._viewRef.context=this.ngTemplateOutletContext)}}return t.\u0275fac=function(e){return new(e||t)(go(uc))},t.\u0275dir=Xt({type:t,selectors:[["","ngTemplateOutlet",""]],inputs:{ngTemplateOutletContext:"ngTemplateOutletContext",ngTemplateOutlet:"ngTemplateOutlet"},features:[ce]}),t})();function ch(t,e){return Error(`InvalidPipeArgument: '${e}' for pipe '${et(t)}'`)}class lh{createSubscription(t,e){return t.subscribe({next:e,error:t=>{throw t}})}dispose(t){t.unsubscribe()}onDestroy(t){t.unsubscribe()}}class uh{createSubscription(t,e){return t.then(e,t=>{throw t})}dispose(t){}onDestroy(t){}}const hh=new uh,dh=new lh;let ph=(()=>{class t{constructor(t){this._ref=t,this._latestValue=null,this._subscription=null,this._obj=null,this._strategy=null}ngOnDestroy(){this._subscription&&this._dispose()}transform(t){return this._obj?t!==this._obj?(this._dispose(),this.transform(t)):this._latestValue:(t&&this._subscribe(t),this._latestValue)}_subscribe(t){this._obj=t,this._strategy=this._selectStrategy(t),this._subscription=this._strategy.createSubscription(t,e=>this._updateLatestValue(t,e))}_selectStrategy(e){if(Do(e))return hh;if(Eo(e))return dh;throw ch(t,e)}_dispose(){this._strategy.dispose(this._subscription),this._latestValue=null,this._subscription=null,this._obj=null}_updateLatestValue(t,e){t===this._obj&&(this._latestValue=e,this._ref.markForCheck())}}return t.\u0275fac=function(e){return new(e||t)(go(Ka,16))},t.\u0275pipe=Yt({name:"async",type:t,pure:!1}),t})();const fh=/(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D])\S*/g;let gh=(()=>{class t{transform(e){if(null==e)return null;if("string"!=typeof e)throw ch(t,e);return e.replace(fh,t=>t[0].toUpperCase()+t.substr(1).toLowerCase())}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275pipe=Yt({name:"titlecase",type:t,pure:!0}),t})(),mh=(()=>{class t{constructor(t){this.locale=t}transform(e,n="mediumDate",r,s){if(null==e||""===e||e!=e)return null;try{return Fu(e,n,s||this.locale,r)}catch(i){throw ch(t,i.message)}}}return t.\u0275fac=function(e){return new(e||t)(go(el,16))},t.\u0275pipe=Yt({name:"date",type:t,pure:!0}),t})(),yh=(()=>{class t{constructor(t){this._locale=t}transform(e,n,r){if(!bh(e))return null;r=r||this._locale;try{return function(t,e,n){return qu(t,Xu(Cu(e,uu.Decimal),bu(e,gu.MinusSign)),e,gu.Group,gu.Decimal,n)}(Ch(e),r,n)}catch(s){throw ch(t,s.message)}}}return t.\u0275fac=function(e){return new(e||t)(go(el,16))},t.\u0275pipe=Yt({name:"number",type:t,pure:!0}),t})(),vh=(()=>{class t{constructor(t,e="USD"){this._locale=t,this._defaultCurrencyCode=e}transform(e,n=this._defaultCurrencyCode,r="symbol",s,i){if(!bh(e))return null;i=i||this._locale,"boolean"==typeof r&&(r=r?"symbol":"code");let o=n||this._defaultCurrencyCode;"code"!==r&&(o="symbol"===r||"symbol-narrow"===r?function(t,e,n="en"){const r=function(t){return oa(t)[ca.Currencies]}(n)[t]||lu[t]||[],s=r[1];return"narrow"===e&&"string"==typeof s?s:r[0]||t}(o,"symbol"===r?"wide":"narrow",i):r);try{return function(t,e,n,r,s){const i=Xu(Cu(e,uu.Currency),bu(e,gu.MinusSign));return i.minFrac=function(t){let e;const n=lu[t];return n&&(e=n[2]),"number"==typeof e?e:2}(r),i.maxFrac=i.minFrac,qu(t,i,e,gu.CurrencyGroup,gu.CurrencyDecimal,s).replace("\xa4",n).replace("\xa4","").trim()}(Ch(e),i,o,n,s)}catch(a){throw ch(t,a.message)}}}return t.\u0275fac=function(e){return new(e||t)(go(el,16),go(nl,16))},t.\u0275pipe=Yt({name:"currency",type:t,pure:!0}),t})();function bh(t){return!(null==t||""===t||t!=t)}function Ch(t){if("string"==typeof t&&!isNaN(Number(t)-parseFloat(t)))return Number(t);if("number"!=typeof t)throw new Error(`${t} is not a number`);return t}let wh=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[{provide:Zu,useClass:Qu}]}),t})(),_h=(()=>{class t{}return t.\u0275prov=ht({token:t,providedIn:"root",factory:()=>new Dh(ur(Wl),window)}),t})();class Dh{constructor(t,e){this.document=t,this.window=e,this.offset=()=>[0,0]}setOffset(t){this.offset=Array.isArray(t)?()=>t:t}getScrollPosition(){return this.supportsScrolling()?[this.window.pageXOffset,this.window.pageYOffset]:[0,0]}scrollToPosition(t){this.supportsScrolling()&&this.window.scrollTo(t[0],t[1])}scrollToAnchor(t){if(!this.supportsScrolling())return;const e=function(t,e){const n=t.getElementById(e)||t.getElementsByName(e)[0];if(n)return n;if("function"==typeof t.createTreeWalker&&t.body&&(t.body.createShadowRoot||t.body.attachShadow)){const n=t.createTreeWalker(t.body,NodeFilter.SHOW_ELEMENT);let r=n.currentNode;for(;r;){const t=r.shadowRoot;if(t){const n=t.getElementById(e)||t.querySelector(`[name="${e}"]`);if(n)return n}r=n.nextNode()}}return null}(this.document,t);e&&(this.scrollToElement(e),this.attemptFocus(e))}setHistoryScrollRestoration(t){if(this.supportScrollRestoration()){const e=this.window.history;e&&e.scrollRestoration&&(e.scrollRestoration=t)}}scrollToElement(t){const e=t.getBoundingClientRect(),n=e.left+this.window.pageXOffset,r=e.top+this.window.pageYOffset,s=this.offset();this.window.scrollTo(n-s[0],r-s[1])}attemptFocus(t){return t.focus(),this.document.activeElement===t}supportScrollRestoration(){try{if(!this.supportsScrolling())return!1;const t=Eh(this.window.history)||Eh(Object.getPrototypeOf(this.window.history));return!(!t||!t.writable&&!t.set)}catch(t){return!1}}supportsScrolling(){try{return!!this.window&&!!this.window.scrollTo&&"pageXOffset"in this.window}catch(t){return!1}}}function Eh(t){return Object.getOwnPropertyDescriptor(t,"scrollRestoration")}class Sh{}class xh extends class extends class{}{constructor(){super(...arguments),this.supportsDOMEvents=!0}}{static makeCurrent(){var t;t=new xh,$l||($l=t)}onAndCancel(t,e,n){return t.addEventListener(e,n,!1),()=>{t.removeEventListener(e,n,!1)}}dispatchEvent(t,e){t.dispatchEvent(e)}remove(t){t.parentNode&&t.parentNode.removeChild(t)}createElement(t,e){return(e=e||this.getDefaultDocument()).createElement(t)}createHtmlDocument(){return document.implementation.createHTMLDocument("fakeTitle")}getDefaultDocument(){return document}isElementNode(t){return t.nodeType===Node.ELEMENT_NODE}isShadowRoot(t){return t instanceof DocumentFragment}getGlobalEventTarget(t,e){return"window"===e?window:"document"===e?t:"body"===e?t.body:null}getBaseHref(t){const e=(Th=Th||document.querySelector("base"),Th?Th.getAttribute("href"):null);return null==e?null:function(t){Ah=Ah||document.createElement("a"),Ah.setAttribute("href",t);const e=Ah.pathname;return"/"===e.charAt(0)?e:`/${e}`}(e)}resetBaseElement(){Th=null}getUserAgent(){return window.navigator.userAgent}getCookie(t){return Ku(document.cookie,t)}}let Ah,Th=null;const kh=new Gn("TRANSITION_ID"),Fh=[{provide:Gc,useFactory:function(t,e,n){return()=>{n.get(qc).donePromise.then(()=>{const n=Ul();Array.prototype.slice.apply(e.querySelectorAll("style[ng-transition]")).filter(e=>e.getAttribute("ng-transition")===t).forEach(t=>n.remove(t))})}},deps:[kh,Wl,Qi],multi:!0}];class Ih{static init(){!function(t){El=t}(new Ih)}addToWindow(t){It.getAngularTestability=(e,n=!0)=>{const r=t.findTestabilityInTree(e,n);if(null==r)throw new Error("Could not find testability for element.");return r},It.getAllAngularTestabilities=()=>t.getAllTestabilities(),It.getAllAngularRootElements=()=>t.getAllRootElements(),It.frameworkStabilizers||(It.frameworkStabilizers=[]),It.frameworkStabilizers.push(t=>{const e=It.getAllAngularTestabilities();let n=e.length,r=!1;const s=function(e){r=r||e,n--,0==n&&t(r)};e.forEach(function(t){t.whenStable(s)})})}findTestabilityInTree(t,e,n){if(null==e)return null;const r=t.getTestability(e);return null!=r?r:n?Ul().isShadowRoot(e)?this.findTestabilityInTree(t,e.host,!0):this.findTestabilityInTree(t,e.parentElement,!0):null}}let Oh=(()=>{class t{build(){return new XMLHttpRequest}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const Ph=new Gn("EventManagerPlugins");let Rh=(()=>{class t{constructor(t,e){this._zone=e,this._eventNameToPlugin=new Map,t.forEach(t=>t.manager=this),this._plugins=t.slice().reverse()}addEventListener(t,e,n){return this._findPluginFor(e).addEventListener(t,e,n)}addGlobalEventListener(t,e,n){return this._findPluginFor(e).addGlobalEventListener(t,e,n)}getZone(){return this._zone}_findPluginFor(t){const e=this._eventNameToPlugin.get(t);if(e)return e;const n=this._plugins;for(let r=0;r<n.length;r++){const e=n[r];if(e.supports(t))return this._eventNameToPlugin.set(t,e),e}throw new Error(`No event manager plugin found for event ${t}`)}}return t.\u0275fac=function(e){return new(e||t)(ur(Ph),ur(pl))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();class Lh{constructor(t){this._doc=t}addGlobalEventListener(t,e,n){const r=Ul().getGlobalEventTarget(this._doc,t);if(!r)throw new Error(`Unsupported event target ${r} for event ${e}`);return this.addEventListener(r,e,n)}}let Bh=(()=>{class t{constructor(){this._stylesSet=new Set}addStyles(t){const e=new Set;t.forEach(t=>{this._stylesSet.has(t)||(this._stylesSet.add(t),e.add(t))}),this.onStylesAdded(e)}onStylesAdded(t){}getAllStyles(){return Array.from(this._stylesSet)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),jh=(()=>{class t extends Bh{constructor(t){super(),this._doc=t,this._hostNodes=new Map,this._hostNodes.set(t.head,[])}_addStylesToHost(t,e,n){t.forEach(t=>{const r=this._doc.createElement("style");r.textContent=t,n.push(e.appendChild(r))})}addHost(t){const e=[];this._addStylesToHost(this._stylesSet,t,e),this._hostNodes.set(t,e)}removeHost(t){const e=this._hostNodes.get(t);e&&e.forEach(Mh),this._hostNodes.delete(t)}onStylesAdded(t){this._hostNodes.forEach((e,n)=>{this._addStylesToHost(t,n,e)})}ngOnDestroy(){this._hostNodes.forEach(t=>t.forEach(Mh))}}return t.\u0275fac=function(e){return new(e||t)(ur(Wl))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function Mh(t){Ul().remove(t)}const Nh={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},Hh=/%COMP%/g;function Vh(t,e,n){for(let r=0;r<e.length;r++){let s=e[r];Array.isArray(s)?Vh(t,s,n):(s=s.replace(Hh,t),n.push(s))}return n}function zh(t){return e=>{if("__ngUnwrap__"===e)return t;!1===t(e)&&(e.preventDefault(),e.returnValue=!1)}}let $h=(()=>{class t{constructor(t,e,n){this.eventManager=t,this.sharedStylesHost=e,this.appId=n,this.rendererByCompId=new Map,this.defaultRenderer=new Uh(t)}createRenderer(t,e){if(!t||!e)return this.defaultRenderer;switch(e.encapsulation){case xt.Emulated:{let n=this.rendererByCompId.get(e.id);return n||(n=new Wh(this.eventManager,this.sharedStylesHost,e,this.appId),this.rendererByCompId.set(e.id,n)),n.applyToHost(t),n}case 1:case xt.ShadowDom:return new Gh(this.eventManager,this.sharedStylesHost,t,e);default:if(!this.rendererByCompId.has(e.id)){const t=Vh(e.id,e.styles,[]);this.sharedStylesHost.addStyles(t),this.rendererByCompId.set(e.id,this.defaultRenderer)}return this.defaultRenderer}}begin(){}end(){}}return t.\u0275fac=function(e){return new(e||t)(ur(Rh),ur(jh),ur(Xc))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();class Uh{constructor(t){this.eventManager=t,this.data=Object.create(null)}destroy(){}createElement(t,e){return e?document.createElementNS(Nh[e]||e,t):document.createElement(t)}createComment(t){return document.createComment(t)}createText(t){return document.createTextNode(t)}appendChild(t,e){t.appendChild(e)}insertBefore(t,e,n){t&&t.insertBefore(e,n)}removeChild(t,e){t&&t.removeChild(e)}selectRootElement(t,e){let n="string"==typeof t?document.querySelector(t):t;if(!n)throw new Error(`The selector "${t}" did not match any elements`);return e||(n.textContent=""),n}parentNode(t){return t.parentNode}nextSibling(t){return t.nextSibling}setAttribute(t,e,n,r){if(r){e=r+":"+e;const s=Nh[r];s?t.setAttributeNS(s,e,n):t.setAttribute(e,n)}else t.setAttribute(e,n)}removeAttribute(t,e,n){if(n){const r=Nh[n];r?t.removeAttributeNS(r,e):t.removeAttribute(`${n}:${e}`)}else t.removeAttribute(e)}addClass(t,e){t.classList.add(e)}removeClass(t,e){t.classList.remove(e)}setStyle(t,e,n,r){r&(es.DashCase|es.Important)?t.style.setProperty(e,n,r&es.Important?"important":""):t.style[e]=n}removeStyle(t,e,n){n&es.DashCase?t.style.removeProperty(e):t.style[e]=""}setProperty(t,e,n){t[e]=n}setValue(t,e){t.nodeValue=e}listen(t,e,n){return"string"==typeof t?this.eventManager.addGlobalEventListener(t,e,zh(n)):this.eventManager.addEventListener(t,e,zh(n))}}class Wh extends Uh{constructor(t,e,n,r){super(t),this.component=n;const s=Vh(r+"-"+n.id,n.styles,[]);e.addStyles(s),this.contentAttr="_ngcontent-%COMP%".replace(Hh,r+"-"+n.id),this.hostAttr="_nghost-%COMP%".replace(Hh,r+"-"+n.id)}applyToHost(t){super.setAttribute(t,this.hostAttr,"")}createElement(t,e){const n=super.createElement(t,e);return super.setAttribute(n,this.contentAttr,""),n}}class Gh extends Uh{constructor(t,e,n,r){super(t),this.sharedStylesHost=e,this.hostEl=n,this.shadowRoot=n.attachShadow({mode:"open"}),this.sharedStylesHost.addHost(this.shadowRoot);const s=Vh(r.id,r.styles,[]);for(let i=0;i<s.length;i++){const t=document.createElement("style");t.textContent=s[i],this.shadowRoot.appendChild(t)}}nodeOrShadowRoot(t){return t===this.hostEl?this.shadowRoot:t}destroy(){this.sharedStylesHost.removeHost(this.shadowRoot)}appendChild(t,e){return super.appendChild(this.nodeOrShadowRoot(t),e)}insertBefore(t,e,n){return super.insertBefore(this.nodeOrShadowRoot(t),e,n)}removeChild(t,e){return super.removeChild(this.nodeOrShadowRoot(t),e)}parentNode(t){return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(t)))}}let qh=(()=>{class t extends Lh{constructor(t){super(t)}supports(t){return!0}addEventListener(t,e,n){return t.addEventListener(e,n,!1),()=>this.removeEventListener(t,e,n)}removeEventListener(t,e,n){return t.removeEventListener(e,n)}}return t.\u0275fac=function(e){return new(e||t)(ur(Wl))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const Xh=["alt","control","meta","shift"],Yh={"\b":"Backspace","\t":"Tab","\x7f":"Delete","\x1b":"Escape",Del:"Delete",Esc:"Escape",Left:"ArrowLeft",Right:"ArrowRight",Up:"ArrowUp",Down:"ArrowDown",Menu:"ContextMenu",Scroll:"ScrollLock",Win:"OS"},Zh={A:"1",B:"2",C:"3",D:"4",E:"5",F:"6",G:"7",H:"8",I:"9",J:"*",K:"+",M:"-",N:".",O:"/","`":"0","\x90":"NumLock"},Qh={alt:t=>t.altKey,control:t=>t.ctrlKey,meta:t=>t.metaKey,shift:t=>t.shiftKey};let Kh=(()=>{class t extends Lh{constructor(t){super(t)}supports(e){return null!=t.parseEventName(e)}addEventListener(e,n,r){const s=t.parseEventName(n),i=t.eventCallback(s.fullKey,r,this.manager.getZone());return this.manager.getZone().runOutsideAngular(()=>Ul().onAndCancel(e,s.domEventName,i))}static parseEventName(e){const n=e.toLowerCase().split("."),r=n.shift();if(0===n.length||"keydown"!==r&&"keyup"!==r)return null;const s=t._normalizeKey(n.pop());let i="";if(Xh.forEach(t=>{const e=n.indexOf(t);e>-1&&(n.splice(e,1),i+=t+".")}),i+=s,0!=n.length||0===s.length)return null;const o={};return o.domEventName=r,o.fullKey=i,o}static getEventFullKey(t){let e="",n=function(t){let e=t.key;if(null==e){if(e=t.keyIdentifier,null==e)return"Unidentified";e.startsWith("U+")&&(e=String.fromCharCode(parseInt(e.substring(2),16)),3===t.location&&Zh.hasOwnProperty(e)&&(e=Zh[e]))}return Yh[e]||e}(t);return n=n.toLowerCase()," "===n?n="space":"."===n&&(n="dot"),Xh.forEach(r=>{r!=n&&(0,Qh[r])(t)&&(e+=r+".")}),e+=n,e}static eventCallback(e,n,r){return s=>{t.getEventFullKey(s)===e&&r.runGuarded(()=>n(s))}}static _normalizeKey(t){switch(t){case"esc":return"escape";default:return t}}}return t.\u0275fac=function(e){return new(e||t)(ur(Wl))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const Jh=kl(Hl,"browser",[{provide:Kc,useValue:"browser"},{provide:Qc,useValue:function(){xh.makeCurrent(),Ih.init()},multi:!0},{provide:Wl,useFactory:function(){return function(t){fe=t}(document),document},deps:[]}]),td=[[],{provide:Mi,useValue:"root"},{provide:Qr,useFactory:function(){return new Qr},deps:[]},{provide:Ph,useClass:qh,multi:!0,deps:[Wl,pl,Kc]},{provide:Ph,useClass:Kh,multi:!0,deps:[Wl]},[],{provide:$h,useClass:$h,deps:[Rh,jh,Xc]},{provide:Ta,useExisting:$h},{provide:Bh,useExisting:jh},{provide:jh,useClass:jh,deps:[Wl]},{provide:Cl,useClass:Cl,deps:[pl]},{provide:Rh,useClass:Rh,deps:[Ph,pl]},{provide:Sh,useClass:Oh,deps:[]},[]];let ed=(()=>{class t{constructor(t){if(t)throw new Error("BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.")}static withServerTransition(e){return{ngModule:t,providers:[{provide:Xc,useValue:e.appId},{provide:kh,useExisting:Xc},Fh]}}}return t.\u0275fac=function(e){return new(e||t)(ur(t,12))},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:td,imports:[wh,zl]}),t})();"undefined"!=typeof window&&window;class nd extends h{constructor(t,e){super()}schedule(t,e=0){return this}}class rd extends nd{constructor(t,e){super(t,e),this.scheduler=t,this.work=e,this.pending=!1}schedule(t,e=0){if(this.closed)return this;this.state=t;const n=this.id,r=this.scheduler;return null!=n&&(this.id=this.recycleAsyncId(r,n,e)),this.pending=!0,this.delay=e,this.id=this.id||this.requestAsyncId(r,this.id,e),this}requestAsyncId(t,e,n=0){return setInterval(t.flush.bind(t,this),n)}recycleAsyncId(t,e,n=0){if(null!==n&&this.delay===n&&!1===this.pending)return e;clearInterval(e)}execute(t,e){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;const n=this._execute(t,e);if(n)return n;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))}_execute(t,e){let n,r=!1;try{this.work(t)}catch(s){r=!0,n=!!s&&s||new Error(s)}if(r)return this.unsubscribe(),n}_unsubscribe(){const t=this.id,e=this.scheduler,n=e.actions,r=n.indexOf(this);this.work=null,this.state=null,this.pending=!1,this.scheduler=null,-1!==r&&n.splice(r,1),null!=t&&(this.id=this.recycleAsyncId(e,t,null)),this.delay=null}}class sd extends rd{constructor(t,e){super(t,e),this.scheduler=t,this.work=e}schedule(t,e=0){return e>0?super.schedule(t,e):(this.delay=e,this.state=t,this.scheduler.flush(this),this)}execute(t,e){return e>0||this.closed?super.execute(t,e):this._execute(t,e)}requestAsyncId(t,e,n=0){return null!==n&&n>0||null===n&&this.delay>0?super.requestAsyncId(t,e,n):t.flush(this)}}let id=(()=>{class t{constructor(e,n=t.now){this.SchedulerAction=e,this.now=n}schedule(t,e=0,n){return new this.SchedulerAction(this,t).schedule(n,e)}}return t.now=()=>Date.now(),t})();class od extends id{constructor(t,e=id.now){super(t,()=>od.delegate&&od.delegate!==this?od.delegate.now():e()),this.actions=[],this.active=!1,this.scheduled=void 0}schedule(t,e=0,n){return od.delegate&&od.delegate!==this?od.delegate.schedule(t,e,n):super.schedule(t,e,n)}flush(t){const{actions:e}=this;if(this.active)return void e.push(t);let n;this.active=!0;do{if(n=t.execute(t.state,t.delay))break}while(t=e.shift());if(this.active=!1,n){for(;t=e.shift();)t.unsubscribe();throw n}}}class ad extends od{}const cd=new ad(sd),ld=new v(t=>t.complete());function ud(t){return t?function(t){return new v(e=>t.schedule(()=>e.complete()))}(t):ld}function hd(...t){let e=t[t.length-1];return S(e)?(t.pop(),L(t,e)):U(t)}function dd(t,e){return new v(e?n=>e.schedule(pd,0,{error:t,subscriber:n}):e=>e.error(t))}function pd({error:t,subscriber:e}){e.error(t)}let fd=(()=>{class t{constructor(t,e,n){this.kind=t,this.value=e,this.error=n,this.hasValue="N"===t}observe(t){switch(this.kind){case"N":return t.next&&t.next(this.value);case"E":return t.error&&t.error(this.error);case"C":return t.complete&&t.complete()}}do(t,e,n){switch(this.kind){case"N":return t&&t(this.value);case"E":return e&&e(this.error);case"C":return n&&n()}}accept(t,e,n){return t&&"function"==typeof t.next?this.observe(t):this.do(t,e,n)}toObservable(){switch(this.kind){case"N":return hd(this.value);case"E":return dd(this.error);case"C":return ud()}throw new Error("unexpected notification kind value")}static createNext(e){return void 0!==e?new t("N",e):t.undefinedValueNotification}static createError(e){return new t("E",void 0,e)}static createComplete(){return t.completeNotification}}return t.completeNotification=new t("C"),t.undefinedValueNotification=new t("N",void 0),t})();class gd extends f{constructor(t,e,n=0){super(t),this.scheduler=e,this.delay=n}static dispatch(t){const{notification:e,destination:n}=t;e.observe(n),this.unsubscribe()}scheduleMessage(t){this.destination.add(this.scheduler.schedule(gd.dispatch,this.delay,new md(t,this.destination)))}_next(t){this.scheduleMessage(fd.createNext(t))}_error(t){this.scheduleMessage(fd.createError(t)),this.unsubscribe()}_complete(){this.scheduleMessage(fd.createComplete()),this.unsubscribe()}}class md{constructor(t,e){this.notification=t,this.destination=e}}class yd extends D{constructor(t=Number.POSITIVE_INFINITY,e=Number.POSITIVE_INFINITY,n){super(),this.scheduler=n,this._events=[],this._infiniteTimeWindow=!1,this._bufferSize=t<1?1:t,this._windowTime=e<1?1:e,e===Number.POSITIVE_INFINITY?(this._infiniteTimeWindow=!0,this.next=this.nextInfiniteTimeWindow):this.next=this.nextTimeWindow}nextInfiniteTimeWindow(t){if(!this.isStopped){const e=this._events;e.push(t),e.length>this._bufferSize&&e.shift()}super.next(t)}nextTimeWindow(t){this.isStopped||(this._events.push(new vd(this._getNow(),t)),this._trimBufferThenGetEvents()),super.next(t)}_subscribe(t){const e=this._infiniteTimeWindow,n=e?this._events:this._trimBufferThenGetEvents(),r=this.scheduler,s=n.length;let i;if(this.closed)throw new C;if(this.isStopped||this.hasError?i=h.EMPTY:(this.observers.push(t),i=new w(this,t)),r&&t.add(t=new gd(t,r)),e)for(let o=0;o<s&&!t.closed;o++)t.next(n[o]);else for(let o=0;o<s&&!t.closed;o++)t.next(n[o].value);return this.hasError?t.error(this.thrownError):this.isStopped&&t.complete(),i}_getNow(){return(this.scheduler||cd).now()}_trimBufferThenGetEvents(){const t=this._getNow(),e=this._bufferSize,n=this._windowTime,r=this._events,s=r.length;let i=0;for(;i<s&&!(t-r[i].time<n);)i++;return s>e&&(i=Math.max(i,s-e)),i>0&&r.splice(0,i),r}}class vd{constructor(t,e){this.time=t,this.value=e}}function bd(t,e){return"function"==typeof e?n=>n.pipe(bd((n,r)=>B(t(n,r)).pipe(x((t,s)=>e(n,t,r,s))))):e=>e.lift(new Cd(t))}class Cd{constructor(t){this.project=t}call(t,e){return e.subscribe(new wd(t,this.project))}}class wd extends M{constructor(t,e){super(t),this.project=e,this.index=0}_next(t){let e;const n=this.index++;try{e=this.project(t,n)}catch(r){return void this.destination.error(r)}this._innerSub(e)}_innerSub(t){const e=this.innerSubscription;e&&e.unsubscribe();const n=new j(this),r=this.destination;r.add(n),this.innerSubscription=N(t,n),this.innerSubscription!==n&&r.add(this.innerSubscription)}_complete(){const{innerSubscription:t}=this;t&&!t.closed||super._complete(),this.unsubscribe()}_unsubscribe(){this.innerSubscription=void 0}notifyComplete(){this.innerSubscription=void 0,this.isStopped&&super._complete()}notifyNext(t){this.destination.next(t)}}const _d={schedule(t,e){const n=setTimeout(t,e);return()=>clearTimeout(n)},scheduleBeforeRender(t){if("undefined"==typeof window)return _d.schedule(t,0);if(void 0===window.requestAnimationFrame)return _d.schedule(t,16);const e=window.requestAnimationFrame(t);return()=>window.cancelAnimationFrame(e)}};let Dd;function Ed(t,e,n){let r=n;return function(t){return!!t&&t.nodeType===Node.ELEMENT_NODE}(t)&&e.some((e,n)=>!("*"===e||!function(t,e){if(!Dd){const t=Element.prototype;Dd=t.matches||t.matchesSelector||t.mozMatchesSelector||t.msMatchesSelector||t.oMatchesSelector||t.webkitMatchesSelector}return t.nodeType===Node.ELEMENT_NODE&&Dd.call(t,e)}(t,e)||(r=n,0))),r}class Sd{constructor(t,e){this.componentFactory=e.get(_a).resolveComponentFactory(t)}create(t){return new xd(this.componentFactory,t)}}class xd{constructor(t,e){this.componentFactory=t,this.injector=e,this.eventEmitters=new yd(1),this.events=this.eventEmitters.pipe(bd(t=>W(...t))),this.componentRef=null,this.viewChangeDetectorRef=null,this.inputChanges=null,this.hasInputChanges=!1,this.implementsOnChanges=!1,this.scheduledChangeDetectionFn=null,this.scheduledDestroyFn=null,this.initialInputValues=new Map,this.unchangedInputs=new Set(this.componentFactory.inputs.map(({propName:t})=>t)),this.ngZone=this.injector.get(pl),this.elementZone="undefined"==typeof Zone?null:this.ngZone.run(()=>Zone.current)}connect(t){this.runInZone(()=>{if(null!==this.scheduledDestroyFn)return this.scheduledDestroyFn(),void(this.scheduledDestroyFn=null);null===this.componentRef&&this.initializeComponent(t)})}disconnect(){this.runInZone(()=>{null!==this.componentRef&&null===this.scheduledDestroyFn&&(this.scheduledDestroyFn=_d.schedule(()=>{null!==this.componentRef&&(this.componentRef.destroy(),this.componentRef=null,this.viewChangeDetectorRef=null)},10))})}getInputValue(t){return this.runInZone(()=>null===this.componentRef?this.initialInputValues.get(t):this.componentRef.instance[t])}setInputValue(t,e){this.runInZone(()=>{var n,r;null!==this.componentRef?((n=e)!==(r=this.getInputValue(t))&&(n==n||r==r)||void 0===e&&this.unchangedInputs.has(t))&&(this.recordInputChange(t,e),this.unchangedInputs.delete(t),this.hasInputChanges=!0,this.componentRef.instance[t]=e,this.scheduleDetectChanges()):this.initialInputValues.set(t,e)})}initializeComponent(t){const e=Qi.create({providers:[],parent:this.injector}),n=function(t,e){const n=t.childNodes,r=e.map(()=>[]);let s=-1;e.some((t,e)=>"*"===t&&(s=e,!0));for(let i=0,o=n.length;i<o;++i){const t=n[i],o=Ed(t,e,s);-1!==o&&r[o].push(t)}return r}(t,this.componentFactory.ngContentSelectors);this.componentRef=this.componentFactory.create(e,n,t),this.viewChangeDetectorRef=this.componentRef.injector.get(Ka),this.implementsOnChanges="function"==typeof this.componentRef.instance.ngOnChanges,this.initializeInputs(),this.initializeOutputs(this.componentRef),this.detectChanges(),this.injector.get(Pl).attachView(this.componentRef.hostView)}initializeInputs(){this.componentFactory.inputs.forEach(({propName:t})=>{this.initialInputValues.has(t)&&this.setInputValue(t,this.initialInputValues.get(t))}),this.initialInputValues.clear()}initializeOutputs(t){const e=this.componentFactory.outputs.map(({propName:e,templateName:n})=>t.instance[e].pipe(x(t=>({name:n,value:t}))));this.eventEmitters.next(e)}callNgOnChanges(t){if(!this.implementsOnChanges||null===this.inputChanges)return;const e=this.inputChanges;this.inputChanges=null,t.instance.ngOnChanges(e)}markViewForCheck(t){this.hasInputChanges&&(this.hasInputChanges=!1,t.markForCheck())}scheduleDetectChanges(){this.scheduledChangeDetectionFn||(this.scheduledChangeDetectionFn=_d.scheduleBeforeRender(()=>{this.scheduledChangeDetectionFn=null,this.detectChanges()}))}recordInputChange(t,e){if(!this.implementsOnChanges)return;null===this.inputChanges&&(this.inputChanges={});const n=this.inputChanges[t];if(n)return void(n.currentValue=e);const r=this.unchangedInputs.has(t),s=r?void 0:this.getInputValue(t);this.inputChanges[t]=new ae(s,e,r)}detectChanges(){null!==this.componentRef&&(this.callNgOnChanges(this.componentRef),this.markViewForCheck(this.viewChangeDetectorRef),this.componentRef.changeDetectorRef.detectChanges())}runInZone(t){return this.elementZone&&Zone.current!==this.elementZone?this.ngZone.run(t):t()}}class Ad extends HTMLElement{constructor(){super(...arguments),this.ngElementEventsSubscription=null}}function Td(t,e,n,s){return r(n)&&(s=n,n=void 0),s?Td(t,e,n).pipe(x(t=>c(t)?s(...t):s(t))):new v(r=>{kd(t,e,function(t){r.next(arguments.length>1?Array.prototype.slice.call(arguments):t)},r,n)})}function kd(t,e,n,r,s){let i;if(function(t){return t&&"function"==typeof t.addEventListener&&"function"==typeof t.removeEventListener}(t)){const r=t;t.addEventListener(e,n,s),i=()=>r.removeEventListener(e,n,s)}else if(function(t){return t&&"function"==typeof t.on&&"function"==typeof t.off}(t)){const r=t;t.on(e,n),i=()=>r.off(e,n)}else if(function(t){return t&&"function"==typeof t.addListener&&"function"==typeof t.removeListener}(t)){const r=t;t.addListener(e,n),i=()=>r.removeListener(e,n)}else{if(!t||!t.length)throw new TypeError("Invalid event target");for(let i=0,o=t.length;i<o;i++)kd(t[i],e,n,r,s)}r.add(i)}new Oa("12.0.5");const Fd=new od(rd);function Id(t){return!c(t)&&t-parseFloat(t)+1>=0}function Od(t=0,e,n){let r=-1;return Id(e)?r=Number(e)<1?1:Number(e):S(e)&&(n=e),S(n)||(n=Fd),new v(e=>{const s=Id(t)?t:+t-n.now();return n.schedule(Pd,s,{index:0,period:r,subscriber:e})})}function Pd(t){const{index:e,period:n,subscriber:r}=t;if(r.next(e),!r.closed){if(-1===n)return r.complete();t.index=e+1,this.schedule(t,n)}}function Rd(t,e=null){return{type:4,styles:e,timings:t}}function Ld(t){return{type:6,styles:t,offset:null}}function Bd(t,e,n=null){return{type:1,expr:t,animation:e,options:n}}class jd extends D{constructor(t){super(),this._value=t}get value(){return this.getValue()}_subscribe(t){const e=super._subscribe(t);return e&&!e.closed&&t.next(this._value),e}getValue(){if(this.hasError)throw this.thrownError;if(this.closed)throw new C;return this._value}next(t){super.next(this._value=t)}}class Md extends f{notifyNext(t,e,n,r,s){this.destination.next(e)}notifyError(t,e){this.destination.error(t)}notifyComplete(t){this.destination.complete()}}class Nd extends f{constructor(t,e,n){super(),this.parent=t,this.outerValue=e,this.outerIndex=n,this.index=0}_next(t){this.parent.notifyNext(this.outerValue,t,this.outerIndex,this.index++,this)}_error(t){this.parent.notifyError(t,this),this.unsubscribe()}_complete(){this.parent.notifyComplete(this),this.unsubscribe()}}function Hd(t,e,n,r,s=new Nd(t,n,r)){if(!s.closed)return e instanceof v?e.subscribe(s):R(e)(s)}const Vd={};class zd{constructor(t){this.resultSelector=t}call(t,e){return e.subscribe(new $d(t,this.resultSelector))}}class $d extends Md{constructor(t,e){super(t),this.resultSelector=e,this.active=0,this.values=[],this.observables=[]}_next(t){this.values.push(Vd),this.observables.push(t)}_complete(){const t=this.observables,e=t.length;if(0===e)this.destination.complete();else{this.active=e,this.toRespond=e;for(let n=0;n<e;n++)this.add(Hd(this,t[n],void 0,n))}}notifyComplete(t){0==(this.active-=1)&&this.destination.complete()}notifyNext(t,e,n){const r=this.values,s=this.toRespond?r[n]===Vd?--this.toRespond:this.toRespond:0;r[n]=e,0===s&&(this.resultSelector?this._tryResultSelector(r):this.destination.next(r.slice()))}_tryResultSelector(t){let e;try{e=this.resultSelector.apply(this,t)}catch(n){return void this.destination.error(n)}this.destination.next(e)}}const Ud=(()=>{function t(){return Error.call(this),this.message="no elements in sequence",this.name="EmptyError",this}return t.prototype=Object.create(Error.prototype),t})();function Wd(...t){return $(1)(hd(...t))}function Gd(t){return new v(e=>{let n;try{n=t()}catch(r){return void e.error(r)}return(n?B(n):ud()).subscribe(e)})}const qd=(()=>{function t(){return Error.call(this),this.message="argument out of range",this.name="ArgumentOutOfRangeError",this}return t.prototype=Object.create(Error.prototype),t})();function Xd(t){return e=>0===t?ud():e.lift(new Yd(t))}class Yd{constructor(t){if(this.total=t,this.total<0)throw new qd}call(t,e){return e.subscribe(new Zd(t,this.total))}}class Zd extends f{constructor(t,e){super(t),this.total=e,this.count=0}_next(t){const e=this.total,n=++this.count;n<=e&&(this.destination.next(t),n===e&&(this.destination.complete(),this.unsubscribe()))}}function Qd(t,e){let n=!1;return arguments.length>=2&&(n=!0),function(r){return r.lift(new Kd(t,e,n))}}class Kd{constructor(t,e,n=!1){this.accumulator=t,this.seed=e,this.hasSeed=n}call(t,e){return e.subscribe(new Jd(t,this.accumulator,this.seed,this.hasSeed))}}class Jd extends f{constructor(t,e,n,r){super(t),this.accumulator=e,this._seed=n,this.hasSeed=r,this.index=0}get seed(){return this._seed}set seed(t){this.hasSeed=!0,this._seed=t}_next(t){if(this.hasSeed)return this._tryNext(t);this.seed=t,this.destination.next(t)}_tryNext(t){const e=this.index++;let n;try{n=this.accumulator(this.seed,t,e)}catch(r){this.destination.error(r)}this.seed=n,this.destination.next(n)}}function tp(t,e){return function(n){return n.lift(new ep(t,e))}}class ep{constructor(t,e){this.predicate=t,this.thisArg=e}call(t,e){return e.subscribe(new np(t,this.predicate,this.thisArg))}}class np extends f{constructor(t,e,n){super(t),this.predicate=e,this.thisArg=n,this.count=0}_next(t){let e;try{e=this.predicate.call(this.thisArg,t,this.count++)}catch(n){return void this.destination.error(n)}e&&this.destination.next(t)}}function rp(t){return function(e){const n=new sp(t),r=e.lift(n);return n.caught=r}}class sp{constructor(t){this.selector=t}call(t,e){return e.subscribe(new ip(t,this.selector,this.caught))}}class ip extends M{constructor(t,e,n){super(t),this.selector=e,this.caught=n}error(t){if(!this.isStopped){let n;try{n=this.selector(t,this.caught)}catch(e){return void super.error(e)}this._unsubscribeAndRecycle();const r=new j(this);this.add(r);const s=N(n,r);s!==r&&this.add(s)}}}function op(t,e){return H(t,e,1)}function ap(t){return function(e){return 0===t?ud():e.lift(new cp(t))}}class cp{constructor(t){if(this.total=t,this.total<0)throw new qd}call(t,e){return e.subscribe(new lp(t,this.total))}}class lp extends f{constructor(t,e){super(t),this.total=e,this.ring=new Array,this.count=0}_next(t){const e=this.ring,n=this.total,r=this.count++;e.length<n?e.push(t):e[r%n]=t}_complete(){const t=this.destination;let e=this.count;if(e>0){const n=this.count>=this.total?this.total:this.count,r=this.ring;for(let s=0;s<n;s++){const s=e++%n;t.next(r[s])}}t.complete()}}function up(t=pp){return e=>e.lift(new hp(t))}class hp{constructor(t){this.errorFactory=t}call(t,e){return e.subscribe(new dp(t,this.errorFactory))}}class dp extends f{constructor(t,e){super(t),this.errorFactory=e,this.hasValue=!1}_next(t){this.hasValue=!0,this.destination.next(t)}_complete(){if(this.hasValue)return this.destination.complete();{let e;try{e=this.errorFactory()}catch(t){e=t}this.destination.error(e)}}}function pp(){return new Ud}function fp(t=null){return e=>e.lift(new gp(t))}class gp{constructor(t){this.defaultValue=t}call(t,e){return e.subscribe(new mp(t,this.defaultValue))}}class mp extends f{constructor(t,e){super(t),this.defaultValue=e,this.isEmpty=!0}_next(t){this.isEmpty=!1,this.destination.next(t)}_complete(){this.isEmpty&&this.destination.next(this.defaultValue),this.destination.complete()}}function yp(t,e){const n=arguments.length>=2;return r=>r.pipe(t?tp((e,n)=>t(e,n,r)):y,Xd(1),n?fp(e):up(()=>new Ud))}function vp(){}function bp(t,e,n){return function(r){return r.lift(new Cp(t,e,n))}}class Cp{constructor(t,e,n){this.nextOrObserver=t,this.error=e,this.complete=n}call(t,e){return e.subscribe(new wp(t,this.nextOrObserver,this.error,this.complete))}}class wp extends f{constructor(t,e,n,s){super(t),this._tapNext=vp,this._tapError=vp,this._tapComplete=vp,this._tapError=n||vp,this._tapComplete=s||vp,r(e)?(this._context=this,this._tapNext=e):e&&(this._context=e,this._tapNext=e.next||vp,this._tapError=e.error||vp,this._tapComplete=e.complete||vp)}_next(t){try{this._tapNext.call(this._context,t)}catch(e){return void this.destination.error(e)}this.destination.next(t)}_error(t){try{this._tapError.call(this._context,t)}catch(t){return void this.destination.error(t)}this.destination.error(t)}_complete(){try{this._tapComplete.call(this._context)}catch(t){return void this.destination.error(t)}return this.destination.complete()}}class _p{constructor(t){this.callback=t}call(t,e){return e.subscribe(new Dp(t,this.callback))}}class Dp extends f{constructor(t,e){super(t),this.add(new h(e))}}class Ep{constructor(t,e){this.id=t,this.url=e}}class Sp extends Ep{constructor(t,e,n="imperative",r=null){super(t,e),this.navigationTrigger=n,this.restoredState=r}toString(){return`NavigationStart(id: ${this.id}, url: '${this.url}')`}}class xp extends Ep{constructor(t,e,n){super(t,e),this.urlAfterRedirects=n}toString(){return`NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`}}class Ap extends Ep{constructor(t,e,n){super(t,e),this.reason=n}toString(){return`NavigationCancel(id: ${this.id}, url: '${this.url}')`}}class Tp extends Ep{constructor(t,e,n){super(t,e),this.error=n}toString(){return`NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`}}class kp extends Ep{constructor(t,e,n,r){super(t,e),this.urlAfterRedirects=n,this.state=r}toString(){return`RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class Fp extends Ep{constructor(t,e,n,r){super(t,e),this.urlAfterRedirects=n,this.state=r}toString(){return`GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class Ip extends Ep{constructor(t,e,n,r,s){super(t,e),this.urlAfterRedirects=n,this.state=r,this.shouldActivate=s}toString(){return`GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`}}class Op extends Ep{constructor(t,e,n,r){super(t,e),this.urlAfterRedirects=n,this.state=r}toString(){return`ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class Pp extends Ep{constructor(t,e,n,r){super(t,e),this.urlAfterRedirects=n,this.state=r}toString(){return`ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class Rp{constructor(t){this.route=t}toString(){return`RouteConfigLoadStart(path: ${this.route.path})`}}class Lp{constructor(t){this.route=t}toString(){return`RouteConfigLoadEnd(path: ${this.route.path})`}}class Bp{constructor(t){this.snapshot=t}toString(){return`ChildActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class jp{constructor(t){this.snapshot=t}toString(){return`ChildActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class Mp{constructor(t){this.snapshot=t}toString(){return`ActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class Np{constructor(t){this.snapshot=t}toString(){return`ActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class Hp{constructor(t,e,n){this.routerEvent=t,this.position=e,this.anchor=n}toString(){return`Scroll(anchor: '${this.anchor}', position: '${this.position?`${this.position[0]}, ${this.position[1]}`:null}')`}}const Vp="primary";class zp{constructor(t){this.params=t||{}}has(t){return Object.prototype.hasOwnProperty.call(this.params,t)}get(t){if(this.has(t)){const e=this.params[t];return Array.isArray(e)?e[0]:e}return null}getAll(t){if(this.has(t)){const e=this.params[t];return Array.isArray(e)?e:[e]}return[]}get keys(){return Object.keys(this.params)}}function $p(t){return new zp(t)}function Up(t){const e=Error("NavigationCancelingError: "+t);return e.ngNavigationCancelingError=!0,e}function Wp(t,e,n){const r=n.path.split("/");if(r.length>t.length)return null;if("full"===n.pathMatch&&(e.hasChildren()||r.length<t.length))return null;const s={};for(let i=0;i<r.length;i++){const e=r[i],n=t[i];if(e.startsWith(":"))s[e.substring(1)]=n;else if(e!==n.path)return null}return{consumed:t.slice(0,r.length),posParams:s}}function Gp(t,e){const n=t?Object.keys(t):void 0,r=e?Object.keys(e):void 0;if(!n||!r||n.length!=r.length)return!1;let s;for(let i=0;i<n.length;i++)if(s=n[i],!qp(t[s],e[s]))return!1;return!0}function qp(t,e){if(Array.isArray(t)&&Array.isArray(e)){if(t.length!==e.length)return!1;const n=[...t].sort(),r=[...e].sort();return n.every((t,e)=>r[e]===t)}return t===e}function Xp(t){return Array.prototype.concat.apply([],t)}function Yp(t){return t.length>0?t[t.length-1]:null}function Zp(t,e){for(const n in t)t.hasOwnProperty(n)&&e(t[n],n)}function Qp(t){return So(t)?t:Do(t)?B(Promise.resolve(t)):hd(t)}const Kp={exact:function t(e,n,r){if(!cf(e.segments,n.segments))return!1;if(!rf(e.segments,n.segments,r))return!1;if(e.numberOfChildren!==n.numberOfChildren)return!1;for(const s in n.children){if(!e.children[s])return!1;if(!t(e.children[s],n.children[s],r))return!1}return!0},subset:ef},Jp={exact:function(t,e){return Gp(t,e)},subset:function(t,e){return Object.keys(e).length<=Object.keys(t).length&&Object.keys(e).every(n=>qp(t[n],e[n]))},ignored:()=>!0};function tf(t,e,n){return Kp[n.paths](t.root,e.root,n.matrixParams)&&Jp[n.queryParams](t.queryParams,e.queryParams)&&!("exact"===n.fragment&&t.fragment!==e.fragment)}function ef(t,e,n){return nf(t,e,e.segments,n)}function nf(t,e,n,r){if(t.segments.length>n.length){const s=t.segments.slice(0,n.length);return!!cf(s,n)&&!e.hasChildren()&&!!rf(s,n,r)}if(t.segments.length===n.length){if(!cf(t.segments,n))return!1;if(!rf(t.segments,n,r))return!1;for(const n in e.children){if(!t.children[n])return!1;if(!ef(t.children[n],e.children[n],r))return!1}return!0}{const s=n.slice(0,t.segments.length),i=n.slice(t.segments.length);return!!cf(t.segments,s)&&!!rf(t.segments,s,r)&&!!t.children.primary&&nf(t.children.primary,e,i,r)}}function rf(t,e,n){return e.every((e,r)=>Jp[n](t[r].parameters,e.parameters))}class sf{constructor(t,e,n){this.root=t,this.queryParams=e,this.fragment=n}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=$p(this.queryParams)),this._queryParamMap}toString(){return hf.serialize(this)}}class of{constructor(t,e){this.segments=t,this.children=e,this.parent=null,Zp(e,(t,e)=>t.parent=this)}hasChildren(){return this.numberOfChildren>0}get numberOfChildren(){return Object.keys(this.children).length}toString(){return df(this)}}class af{constructor(t,e){this.path=t,this.parameters=e}get parameterMap(){return this._parameterMap||(this._parameterMap=$p(this.parameters)),this._parameterMap}toString(){return bf(this)}}function cf(t,e){return t.length===e.length&&t.every((t,n)=>t.path===e[n].path)}class lf{}class uf{parse(t){const e=new Ef(t);return new sf(e.parseRootSegment(),e.parseQueryParams(),e.parseFragment())}serialize(t){var e;return`/${pf(t.root,!0)}${function(t){const e=Object.keys(t).map(e=>{const n=t[e];return Array.isArray(n)?n.map(t=>`${gf(e)}=${gf(t)}`).join("&"):`${gf(e)}=${gf(n)}`}).filter(t=>!!t);return e.length?`?${e.join("&")}`:""}(t.queryParams)}${"string"==typeof t.fragment?`#${e=t.fragment,encodeURI(e)}`:""}`}}const hf=new uf;function df(t){return t.segments.map(t=>bf(t)).join("/")}function pf(t,e){if(!t.hasChildren())return df(t);if(e){const e=t.children.primary?pf(t.children.primary,!1):"",n=[];return Zp(t.children,(t,e)=>{e!==Vp&&n.push(`${e}:${pf(t,!1)}`)}),n.length>0?`${e}(${n.join("//")})`:e}{const e=function(t,e){let n=[];return Zp(t.children,(t,r)=>{r===Vp&&(n=n.concat(e(t,r)))}),Zp(t.children,(t,r)=>{r!==Vp&&(n=n.concat(e(t,r)))}),n}(t,(e,n)=>n===Vp?[pf(t.children.primary,!1)]:[`${n}:${pf(e,!1)}`]);return 1===Object.keys(t.children).length&&null!=t.children.primary?`${df(t)}/${e[0]}`:`${df(t)}/(${e.join("//")})`}}function ff(t){return encodeURIComponent(t).replace(/%40/g,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",")}function gf(t){return ff(t).replace(/%3B/gi,";")}function mf(t){return ff(t).replace(/\(/g,"%28").replace(/\)/g,"%29").replace(/%26/gi,"&")}function yf(t){return decodeURIComponent(t)}function vf(t){return yf(t.replace(/\+/g,"%20"))}function bf(t){return`${mf(t.path)}${e=t.parameters,Object.keys(e).map(t=>`;${mf(t)}=${mf(e[t])}`).join("")}`;var e}const Cf=/^[^\/()?;=#]+/;function wf(t){const e=t.match(Cf);return e?e[0]:""}const _f=/^[^=?&#]+/,Df=/^[^?&#]+/;class Ef{constructor(t){this.url=t,this.remaining=t}parseRootSegment(){return this.consumeOptional("/"),""===this.remaining||this.peekStartsWith("?")||this.peekStartsWith("#")?new of([],{}):new of([],this.parseChildren())}parseQueryParams(){const t={};if(this.consumeOptional("?"))do{this.parseQueryParam(t)}while(this.consumeOptional("&"));return t}parseFragment(){return this.consumeOptional("#")?decodeURIComponent(this.remaining):null}parseChildren(){if(""===this.remaining)return{};this.consumeOptional("/");const t=[];for(this.peekStartsWith("(")||t.push(this.parseSegment());this.peekStartsWith("/")&&!this.peekStartsWith("//")&&!this.peekStartsWith("/(");)this.capture("/"),t.push(this.parseSegment());let e={};this.peekStartsWith("/(")&&(this.capture("/"),e=this.parseParens(!0));let n={};return this.peekStartsWith("(")&&(n=this.parseParens(!1)),(t.length>0||Object.keys(e).length>0)&&(n.primary=new of(t,e)),n}parseSegment(){const t=wf(this.remaining);if(""===t&&this.peekStartsWith(";"))throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);return this.capture(t),new af(yf(t),this.parseMatrixParams())}parseMatrixParams(){const t={};for(;this.consumeOptional(";");)this.parseParam(t);return t}parseParam(t){const e=wf(this.remaining);if(!e)return;this.capture(e);let n="";if(this.consumeOptional("=")){const t=wf(this.remaining);t&&(n=t,this.capture(n))}t[yf(e)]=yf(n)}parseQueryParam(t){const e=function(t){const e=t.match(_f);return e?e[0]:""}(this.remaining);if(!e)return;this.capture(e);let n="";if(this.consumeOptional("=")){const t=function(t){const e=t.match(Df);return e?e[0]:""}(this.remaining);t&&(n=t,this.capture(n))}const r=vf(e),s=vf(n);if(t.hasOwnProperty(r)){let e=t[r];Array.isArray(e)||(e=[e],t[r]=e),e.push(s)}else t[r]=s}parseParens(t){const e={};for(this.capture("(");!this.consumeOptional(")")&&this.remaining.length>0;){const n=wf(this.remaining),r=this.remaining[n.length];if("/"!==r&&")"!==r&&";"!==r)throw new Error(`Cannot parse url '${this.url}'`);let s;n.indexOf(":")>-1?(s=n.substr(0,n.indexOf(":")),this.capture(s),this.capture(":")):t&&(s=Vp);const i=this.parseChildren();e[s]=1===Object.keys(i).length?i.primary:new of([],i),this.consumeOptional("//")}return e}peekStartsWith(t){return this.remaining.startsWith(t)}consumeOptional(t){return!!this.peekStartsWith(t)&&(this.remaining=this.remaining.substring(t.length),!0)}capture(t){if(!this.consumeOptional(t))throw new Error(`Expected "${t}".`)}}class Sf{constructor(t){this._root=t}get root(){return this._root.value}parent(t){const e=this.pathFromRoot(t);return e.length>1?e[e.length-2]:null}children(t){const e=xf(t,this._root);return e?e.children.map(t=>t.value):[]}firstChild(t){const e=xf(t,this._root);return e&&e.children.length>0?e.children[0].value:null}siblings(t){const e=Af(t,this._root);return e.length<2?[]:e[e.length-2].children.map(t=>t.value).filter(e=>e!==t)}pathFromRoot(t){return Af(t,this._root).map(t=>t.value)}}function xf(t,e){if(t===e.value)return e;for(const n of e.children){const e=xf(t,n);if(e)return e}return null}function Af(t,e){if(t===e.value)return[e];for(const n of e.children){const r=Af(t,n);if(r.length)return r.unshift(e),r}return[]}class Tf{constructor(t,e){this.value=t,this.children=e}toString(){return`TreeNode(${this.value})`}}function kf(t){const e={};return t&&t.children.forEach(t=>e[t.value.outlet]=t),e}class Ff extends Sf{constructor(t,e){super(t),this.snapshot=e,Bf(this,t)}toString(){return this.snapshot.toString()}}function If(t,e){const n=function(t,e){const n=new Rf([],{},{},"",{},Vp,e,null,t.root,-1,{});return new Lf("",new Tf(n,[]))}(t,e),r=new jd([new af("",{})]),s=new jd({}),i=new jd({}),o=new jd({}),a=new jd(""),c=new Of(r,s,o,a,i,Vp,e,n.root);return c.snapshot=n.root,new Ff(new Tf(c,[]),n)}class Of{constructor(t,e,n,r,s,i,o,a){this.url=t,this.params=e,this.queryParams=n,this.fragment=r,this.data=s,this.outlet=i,this.component=o,this._futureSnapshot=a}get routeConfig(){return this._futureSnapshot.routeConfig}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=this.params.pipe(x(t=>$p(t)))),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=this.queryParams.pipe(x(t=>$p(t)))),this._queryParamMap}toString(){return this.snapshot?this.snapshot.toString():`Future(${this._futureSnapshot})`}}function Pf(t,e="emptyOnly"){const n=t.pathFromRoot;let r=0;if("always"!==e)for(r=n.length-1;r>=1;){const t=n[r],e=n[r-1];if(t.routeConfig&&""===t.routeConfig.path)r--;else{if(e.component)break;r--}}return function(t){return t.reduce((t,e)=>({params:Object.assign(Object.assign({},t.params),e.params),data:Object.assign(Object.assign({},t.data),e.data),resolve:Object.assign(Object.assign({},t.resolve),e._resolvedData)}),{params:{},data:{},resolve:{}})}(n.slice(r))}class Rf{constructor(t,e,n,r,s,i,o,a,c,l,u){this.url=t,this.params=e,this.queryParams=n,this.fragment=r,this.data=s,this.outlet=i,this.component=o,this.routeConfig=a,this._urlSegment=c,this._lastPathIndex=l,this._resolve=u}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=$p(this.params)),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=$p(this.queryParams)),this._queryParamMap}toString(){return`Route(url:'${this.url.map(t=>t.toString()).join("/")}', path:'${this.routeConfig?this.routeConfig.path:""}')`}}class Lf extends Sf{constructor(t,e){super(e),this.url=t,Bf(this,e)}toString(){return jf(this._root)}}function Bf(t,e){e.value._routerState=t,e.children.forEach(e=>Bf(t,e))}function jf(t){const e=t.children.length>0?` { ${t.children.map(jf).join(", ")} } `:"";return`${t.value}${e}`}function Mf(t){if(t.snapshot){const e=t.snapshot,n=t._futureSnapshot;t.snapshot=n,Gp(e.queryParams,n.queryParams)||t.queryParams.next(n.queryParams),e.fragment!==n.fragment&&t.fragment.next(n.fragment),Gp(e.params,n.params)||t.params.next(n.params),function(t,e){if(t.length!==e.length)return!1;for(let n=0;n<t.length;++n)if(!Gp(t[n],e[n]))return!1;return!0}(e.url,n.url)||t.url.next(n.url),Gp(e.data,n.data)||t.data.next(n.data)}else t.snapshot=t._futureSnapshot,t.data.next(t._futureSnapshot.data)}function Nf(t,e){var n,r;return Gp(t.params,e.params)&&cf(n=t.url,r=e.url)&&n.every((t,e)=>Gp(t.parameters,r[e].parameters))&&!(!t.parent!=!e.parent)&&(!t.parent||Nf(t.parent,e.parent))}function Hf(t,e,n){if(n&&t.shouldReuseRoute(e.value,n.value.snapshot)){const r=n.value;r._futureSnapshot=e.value;const s=function(t,e,n){return e.children.map(e=>{for(const r of n.children)if(t.shouldReuseRoute(e.value,r.value.snapshot))return Hf(t,e,r);return Hf(t,e)})}(t,e,n);return new Tf(r,s)}{if(t.shouldAttach(e.value)){const n=t.retrieve(e.value);if(null!==n){const t=n.route;return Vf(e,t),t}}const n=new Of(new jd((r=e.value).url),new jd(r.params),new jd(r.queryParams),new jd(r.fragment),new jd(r.data),r.outlet,r.component,r),s=e.children.map(e=>Hf(t,e));return new Tf(n,s)}var r}function Vf(t,e){if(t.value.routeConfig!==e.value.routeConfig)throw new Error("Cannot reattach ActivatedRouteSnapshot created from a different route");if(t.children.length!==e.children.length)throw new Error("Cannot reattach ActivatedRouteSnapshot with a different number of children");e.value._futureSnapshot=t.value;for(let n=0;n<t.children.length;++n)Vf(t.children[n],e.children[n])}function zf(t){return"object"==typeof t&&null!=t&&!t.outlets&&!t.segmentPath}function $f(t){return"object"==typeof t&&null!=t&&t.outlets}function Uf(t,e,n,r,s){let i={};return r&&Zp(r,(t,e)=>{i[e]=Array.isArray(t)?t.map(t=>`${t}`):`${t}`}),new sf(n.root===t?e:Wf(n.root,t,e),i,s)}function Wf(t,e,n){const r={};return Zp(t.children,(t,s)=>{r[s]=t===e?n:Wf(t,e,n)}),new of(t.segments,r)}class Gf{constructor(t,e,n){if(this.isAbsolute=t,this.numberOfDoubleDots=e,this.commands=n,t&&n.length>0&&zf(n[0]))throw new Error("Root segment cannot have matrix parameters");const r=n.find($f);if(r&&r!==Yp(n))throw new Error("{outlets:{}} has to be the last command")}toRoot(){return this.isAbsolute&&1===this.commands.length&&"/"==this.commands[0]}}class qf{constructor(t,e,n){this.segmentGroup=t,this.processChildren=e,this.index=n}}function Xf(t,e,n){if(t||(t=new of([],{})),0===t.segments.length&&t.hasChildren())return Yf(t,e,n);const r=function(t,e,n){let r=0,s=e;const i={match:!1,pathIndex:0,commandIndex:0};for(;s<t.segments.length;){if(r>=n.length)return i;const e=t.segments[s],o=n[r];if($f(o))break;const a=`${o}`,c=r<n.length-1?n[r+1]:null;if(s>0&&void 0===a)break;if(a&&c&&"object"==typeof c&&void 0===c.outlets){if(!Jf(a,c,e))return i;r+=2}else{if(!Jf(a,{},e))return i;r++}s++}return{match:!0,pathIndex:s,commandIndex:r}}(t,e,n),s=n.slice(r.commandIndex);if(r.match&&r.pathIndex<t.segments.length){const e=new of(t.segments.slice(0,r.pathIndex),{});return e.children.primary=new of(t.segments.slice(r.pathIndex),t.children),Yf(e,0,s)}return r.match&&0===s.length?new of(t.segments,{}):r.match&&!t.hasChildren()?Zf(t,e,n):r.match?Yf(t,0,s):Zf(t,e,n)}function Yf(t,e,n){if(0===n.length)return new of(t.segments,{});{const r=function(t){return $f(t[0])?t[0].outlets:{[Vp]:t}}(n),s={};return Zp(r,(n,r)=>{"string"==typeof n&&(n=[n]),null!==n&&(s[r]=Xf(t.children[r],e,n))}),Zp(t.children,(t,e)=>{void 0===r[e]&&(s[e]=t)}),new of(t.segments,s)}}function Zf(t,e,n){const r=t.segments.slice(0,e);let s=0;for(;s<n.length;){const i=n[s];if($f(i)){const t=Qf(i.outlets);return new of(r,t)}if(0===s&&zf(n[0])){r.push(new af(t.segments[e].path,Kf(n[0]))),s++;continue}const o=$f(i)?i.outlets.primary:`${i}`,a=s<n.length-1?n[s+1]:null;o&&a&&zf(a)?(r.push(new af(o,Kf(a))),s+=2):(r.push(new af(o,{})),s++)}return new of(r,{})}function Qf(t){const e={};return Zp(t,(t,n)=>{"string"==typeof t&&(t=[t]),null!==t&&(e[n]=Zf(new of([],{}),0,t))}),e}function Kf(t){const e={};return Zp(t,(t,n)=>e[n]=`${t}`),e}function Jf(t,e,n){return t==n.path&&Gp(e,n.parameters)}class tg{constructor(t,e,n,r){this.routeReuseStrategy=t,this.futureState=e,this.currState=n,this.forwardEvent=r}activate(t){const e=this.futureState._root,n=this.currState?this.currState._root:null;this.deactivateChildRoutes(e,n,t),Mf(this.futureState.root),this.activateChildRoutes(e,n,t)}deactivateChildRoutes(t,e,n){const r=kf(e);t.children.forEach(t=>{const e=t.value.outlet;this.deactivateRoutes(t,r[e],n),delete r[e]}),Zp(r,(t,e)=>{this.deactivateRouteAndItsChildren(t,n)})}deactivateRoutes(t,e,n){const r=t.value,s=e?e.value:null;if(r===s)if(r.component){const s=n.getContext(r.outlet);s&&this.deactivateChildRoutes(t,e,s.children)}else this.deactivateChildRoutes(t,e,n);else s&&this.deactivateRouteAndItsChildren(e,n)}deactivateRouteAndItsChildren(t,e){this.routeReuseStrategy.shouldDetach(t.value.snapshot)?this.detachAndStoreRouteSubtree(t,e):this.deactivateRouteAndOutlet(t,e)}detachAndStoreRouteSubtree(t,e){const n=e.getContext(t.value.outlet);if(n&&n.outlet){const e=n.outlet.detach(),r=n.children.onOutletDeactivated();this.routeReuseStrategy.store(t.value.snapshot,{componentRef:e,route:t,contexts:r})}}deactivateRouteAndOutlet(t,e){const n=e.getContext(t.value.outlet),r=n&&t.value.component?n.children:e,s=kf(t);for(const i of Object.keys(s))this.deactivateRouteAndItsChildren(s[i],r);n&&n.outlet&&(n.outlet.deactivate(),n.children.onOutletDeactivated(),n.attachRef=null,n.resolver=null,n.route=null)}activateChildRoutes(t,e,n){const r=kf(e);t.children.forEach(t=>{this.activateRoutes(t,r[t.value.outlet],n),this.forwardEvent(new Np(t.value.snapshot))}),t.children.length&&this.forwardEvent(new jp(t.value.snapshot))}activateRoutes(t,e,n){const r=t.value,s=e?e.value:null;if(Mf(r),r===s)if(r.component){const s=n.getOrCreateContext(r.outlet);this.activateChildRoutes(t,e,s.children)}else this.activateChildRoutes(t,e,n);else if(r.component){const e=n.getOrCreateContext(r.outlet);if(this.routeReuseStrategy.shouldAttach(r.snapshot)){const t=this.routeReuseStrategy.retrieve(r.snapshot);this.routeReuseStrategy.store(r.snapshot,null),e.children.onOutletReAttached(t.contexts),e.attachRef=t.componentRef,e.route=t.route.value,e.outlet&&e.outlet.attach(t.componentRef,t.route.value),eg(t.route)}else{const n=function(t){for(let e=t.parent;e;e=e.parent){const t=e.routeConfig;if(t&&t._loadedConfig)return t._loadedConfig;if(t&&t.component)return null}return null}(r.snapshot),s=n?n.module.componentFactoryResolver:null;e.attachRef=null,e.route=r,e.resolver=s,e.outlet&&e.outlet.activateWith(r,s),this.activateChildRoutes(t,null,e.children)}}else this.activateChildRoutes(t,null,n)}}function eg(t){Mf(t.value),t.children.forEach(eg)}class ng{constructor(t,e){this.routes=t,this.module=e}}function rg(t){return"function"==typeof t}function sg(t){return t instanceof sf}const ig=Symbol("INITIAL_VALUE");function og(){return bd(t=>function(...t){let e,n;return S(t[t.length-1])&&(n=t.pop()),"function"==typeof t[t.length-1]&&(e=t.pop()),1===t.length&&c(t[0])&&(t=t[0]),U(t,n).lift(new zd(e))}(t.map(t=>t.pipe(Xd(1),function(...t){const e=t[t.length-1];return S(e)?(t.pop(),n=>Wd(t,n,e)):e=>Wd(t,e)}(ig)))).pipe(Qd((t,e)=>{let n=!1;return e.reduce((t,r,s)=>{if(t!==ig)return t;if(r===ig&&(n=!0),!n){if(!1===r)return r;if(s===e.length-1||sg(r))return r}return t},t)},ig),tp(t=>t!==ig),x(t=>sg(t)?t:!0===t),Xd(1)))}let ag=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=zt({type:t,selectors:[["ng-component"]],decls:1,vars:0,template:function(t,e){1&t&&Co(0,"router-outlet")},directives:function(){return[em]},encapsulation:2}),t})();function cg(t,e=""){for(let n=0;n<t.length;n++){const r=t[n];lg(r,ug(e,r))}}function lg(t,e){t.children&&cg(t.children,e)}function ug(t,e){return e?t||e.path?t&&!e.path?`${t}/`:!t&&e.path?e.path:`${t}/${e.path}`:"":t}function hg(t){const e=t.children&&t.children.map(hg),n=e?Object.assign(Object.assign({},t),{children:e}):Object.assign({},t);return!n.component&&(e||n.loadChildren)&&n.outlet&&n.outlet!==Vp&&(n.component=ag),n}function dg(t){return t.outlet||Vp}function pg(t,e){const n=t.filter(t=>dg(t)===e);return n.push(...t.filter(t=>dg(t)!==e)),n}const fg={matched:!1,consumedSegments:[],lastChild:0,parameters:{},positionalParamSegments:{}};function gg(t,e,n){var r;if(""===e.path)return"full"===e.pathMatch&&(t.hasChildren()||n.length>0)?Object.assign({},fg):{matched:!0,consumedSegments:[],lastChild:0,parameters:{},positionalParamSegments:{}};const s=(e.matcher||Wp)(n,t,e);if(!s)return Object.assign({},fg);const i={};Zp(s.posParams,(t,e)=>{i[e]=t.path});const o=s.consumed.length>0?Object.assign(Object.assign({},i),s.consumed[s.consumed.length-1].parameters):i;return{matched:!0,consumedSegments:s.consumed,lastChild:s.consumed.length,parameters:o,positionalParamSegments:null!==(r=s.posParams)&&void 0!==r?r:{}}}function mg(t,e,n,r,s="corrected"){if(n.length>0&&function(t,e,n){return n.some(n=>yg(t,e,n)&&dg(n)!==Vp)}(t,n,r)){const s=new of(e,function(t,e,n,r){const s={};s.primary=r,r._sourceSegment=t,r._segmentIndexShift=e.length;for(const i of n)if(""===i.path&&dg(i)!==Vp){const n=new of([],{});n._sourceSegment=t,n._segmentIndexShift=e.length,s[dg(i)]=n}return s}(t,e,r,new of(n,t.children)));return s._sourceSegment=t,s._segmentIndexShift=e.length,{segmentGroup:s,slicedSegments:[]}}if(0===n.length&&function(t,e,n){return n.some(n=>yg(t,e,n))}(t,n,r)){const i=new of(t.segments,function(t,e,n,r,s,i){const o={};for(const a of r)if(yg(t,n,a)&&!s[dg(a)]){const n=new of([],{});n._sourceSegment=t,n._segmentIndexShift="legacy"===i?t.segments.length:e.length,o[dg(a)]=n}return Object.assign(Object.assign({},s),o)}(t,e,n,r,t.children,s));return i._sourceSegment=t,i._segmentIndexShift=e.length,{segmentGroup:i,slicedSegments:n}}const i=new of(t.segments,t.children);return i._sourceSegment=t,i._segmentIndexShift=e.length,{segmentGroup:i,slicedSegments:n}}function yg(t,e,n){return(!(t.hasChildren()||e.length>0)||"full"!==n.pathMatch)&&""===n.path}function vg(t,e,n,r){return!!(dg(t)===r||r!==Vp&&yg(e,n,t))&&("**"===t.path||gg(e,t,n).matched)}function bg(t,e,n){return 0===e.length&&!t.children[n]}class Cg{constructor(t){this.segmentGroup=t||null}}class wg{constructor(t){this.urlTree=t}}function _g(t){return new v(e=>e.error(new Cg(t)))}function Dg(t){return new v(e=>e.error(new wg(t)))}function Eg(t){return new v(e=>e.error(new Error(`Only absolute redirects can have named outlets. redirectTo: '${t}'`)))}class Sg{constructor(t,e,n,r,s){this.configLoader=e,this.urlSerializer=n,this.urlTree=r,this.config=s,this.allowRedirects=!0,this.ngModule=t.get(ac)}apply(){const t=mg(this.urlTree.root,[],[],this.config).segmentGroup,e=new of(t.segments,t.children);return this.expandSegmentGroup(this.ngModule,this.config,e,Vp).pipe(x(t=>this.createUrlTree(xg(t),this.urlTree.queryParams,this.urlTree.fragment))).pipe(rp(t=>{if(t instanceof wg)return this.allowRedirects=!1,this.match(t.urlTree);if(t instanceof Cg)throw this.noMatchError(t);throw t}))}match(t){return this.expandSegmentGroup(this.ngModule,this.config,t.root,Vp).pipe(x(e=>this.createUrlTree(xg(e),t.queryParams,t.fragment))).pipe(rp(t=>{if(t instanceof Cg)throw this.noMatchError(t);throw t}))}noMatchError(t){return new Error(`Cannot match any routes. URL Segment: '${t.segmentGroup}'`)}createUrlTree(t,e,n){const r=t.segments.length>0?new of([],{[Vp]:t}):t;return new sf(r,e,n)}expandSegmentGroup(t,e,n,r){return 0===n.segments.length&&n.hasChildren()?this.expandChildren(t,e,n).pipe(x(t=>new of([],t))):this.expandSegment(t,n,e,n.segments,r,!0)}expandChildren(t,e,n){const r=[];for(const s of Object.keys(n.children))"primary"===s?r.unshift(s):r.push(s);return B(r).pipe(op(r=>{const s=n.children[r],i=pg(e,r);return this.expandSegmentGroup(t,i,s,r).pipe(x(t=>({segment:t,outlet:r})))}),Qd((t,e)=>(t[e.outlet]=e.segment,t),{}),function(t,e){const n=arguments.length>=2;return r=>r.pipe(t?tp((e,n)=>t(e,n,r)):y,ap(1),n?fp(e):up(()=>new Ud))}())}expandSegment(t,e,n,r,s,i){return B(n).pipe(op(o=>this.expandSegmentAgainstRoute(t,e,n,o,r,s,i).pipe(rp(t=>{if(t instanceof Cg)return hd(null);throw t}))),yp(t=>!!t),rp((t,n)=>{if(t instanceof Ud||"EmptyError"===t.name){if(bg(e,r,s))return hd(new of([],{}));throw new Cg(e)}throw t}))}expandSegmentAgainstRoute(t,e,n,r,s,i,o){return vg(r,e,s,i)?void 0===r.redirectTo?this.matchSegmentAgainstRoute(t,e,r,s,i):o&&this.allowRedirects?this.expandSegmentAgainstRouteUsingRedirect(t,e,n,r,s,i):_g(e):_g(e)}expandSegmentAgainstRouteUsingRedirect(t,e,n,r,s,i){return"**"===r.path?this.expandWildCardWithParamsAgainstRouteUsingRedirect(t,n,r,i):this.expandRegularSegmentAgainstRouteUsingRedirect(t,e,n,r,s,i)}expandWildCardWithParamsAgainstRouteUsingRedirect(t,e,n,r){const s=this.applyRedirectCommands([],n.redirectTo,{});return n.redirectTo.startsWith("/")?Dg(s):this.lineralizeSegments(n,s).pipe(H(n=>{const s=new of(n,{});return this.expandSegment(t,s,e,n,r,!1)}))}expandRegularSegmentAgainstRouteUsingRedirect(t,e,n,r,s,i){const{matched:o,consumedSegments:a,lastChild:c,positionalParamSegments:l}=gg(e,r,s);if(!o)return _g(e);const u=this.applyRedirectCommands(a,r.redirectTo,l);return r.redirectTo.startsWith("/")?Dg(u):this.lineralizeSegments(r,u).pipe(H(r=>this.expandSegment(t,e,n,r.concat(s.slice(c)),i,!1)))}matchSegmentAgainstRoute(t,e,n,r,s){if("**"===n.path)return n.loadChildren?(n._loadedConfig?hd(n._loadedConfig):this.configLoader.load(t.injector,n)).pipe(x(t=>(n._loadedConfig=t,new of(r,{})))):hd(new of(r,{}));const{matched:i,consumedSegments:o,lastChild:a}=gg(e,n,r);if(!i)return _g(e);const c=r.slice(a);return this.getChildConfig(t,n,r).pipe(H(t=>{const r=t.module,i=t.routes,{segmentGroup:a,slicedSegments:l}=mg(e,o,c,i),u=new of(a.segments,a.children);if(0===l.length&&u.hasChildren())return this.expandChildren(r,i,u).pipe(x(t=>new of(o,t)));if(0===i.length&&0===l.length)return hd(new of(o,{}));const h=dg(n)===s;return this.expandSegment(r,u,i,l,h?Vp:s,!0).pipe(x(t=>new of(o.concat(t.segments),t.children)))}))}getChildConfig(t,e,n){return e.children?hd(new ng(e.children,t)):e.loadChildren?void 0!==e._loadedConfig?hd(e._loadedConfig):this.runCanLoadGuards(t.injector,e,n).pipe(H(n=>n?this.configLoader.load(t.injector,e).pipe(x(t=>(e._loadedConfig=t,t))):function(t){return new v(e=>e.error(Up(`Cannot load children because the guard of the route "path: '${t.path}'" returned false`)))}(e))):hd(new ng([],t))}runCanLoadGuards(t,e,n){const r=e.canLoad;return r&&0!==r.length?hd(r.map(r=>{const s=t.get(r);let i;if(function(t){return t&&rg(t.canLoad)}(s))i=s.canLoad(e,n);else{if(!rg(s))throw new Error("Invalid CanLoad guard");i=s(e,n)}return Qp(i)})).pipe(og(),bp(t=>{if(!sg(t))return;const e=Up(`Redirecting to "${this.urlSerializer.serialize(t)}"`);throw e.url=t,e}),x(t=>!0===t)):hd(!0)}lineralizeSegments(t,e){let n=[],r=e.root;for(;;){if(n=n.concat(r.segments),0===r.numberOfChildren)return hd(n);if(r.numberOfChildren>1||!r.children.primary)return Eg(t.redirectTo);r=r.children.primary}}applyRedirectCommands(t,e,n){return this.applyRedirectCreatreUrlTree(e,this.urlSerializer.parse(e),t,n)}applyRedirectCreatreUrlTree(t,e,n,r){const s=this.createSegmentGroup(t,e.root,n,r);return new sf(s,this.createQueryParams(e.queryParams,this.urlTree.queryParams),e.fragment)}createQueryParams(t,e){const n={};return Zp(t,(t,r)=>{if("string"==typeof t&&t.startsWith(":")){const s=t.substring(1);n[r]=e[s]}else n[r]=t}),n}createSegmentGroup(t,e,n,r){const s=this.createSegments(t,e.segments,n,r);let i={};return Zp(e.children,(e,s)=>{i[s]=this.createSegmentGroup(t,e,n,r)}),new of(s,i)}createSegments(t,e,n,r){return e.map(e=>e.path.startsWith(":")?this.findPosParam(t,e,r):this.findOrReturn(e,n))}findPosParam(t,e,n){const r=n[e.path.substring(1)];if(!r)throw new Error(`Cannot redirect to '${t}'. Cannot find '${e.path}'.`);return r}findOrReturn(t,e){let n=0;for(const r of e){if(r.path===t.path)return e.splice(n),r;n++}return t}}function xg(t){const e={};for(const n of Object.keys(t.children)){const r=xg(t.children[n]);(r.segments.length>0||r.hasChildren())&&(e[n]=r)}return function(t){if(1===t.numberOfChildren&&t.children.primary){const e=t.children.primary;return new of(t.segments.concat(e.segments),e.children)}return t}(new of(t.segments,e))}class Ag{constructor(t){this.path=t,this.route=this.path[this.path.length-1]}}class Tg{constructor(t,e){this.component=t,this.route=e}}function kg(t,e,n){const r=t._root;return Ig(r,e?e._root:null,n,[r.value])}function Fg(t,e,n){const r=function(t){if(!t)return null;for(let e=t.parent;e;e=e.parent){const t=e.routeConfig;if(t&&t._loadedConfig)return t._loadedConfig}return null}(e);return(r?r.module.injector:n).get(t)}function Ig(t,e,n,r,s={canDeactivateChecks:[],canActivateChecks:[]}){const i=kf(e);return t.children.forEach(t=>{!function(t,e,n,r,s={canDeactivateChecks:[],canActivateChecks:[]}){const i=t.value,o=e?e.value:null,a=n?n.getContext(t.value.outlet):null;if(o&&i.routeConfig===o.routeConfig){const c=function(t,e,n){if("function"==typeof n)return n(t,e);switch(n){case"pathParamsChange":return!cf(t.url,e.url);case"pathParamsOrQueryParamsChange":return!cf(t.url,e.url)||!Gp(t.queryParams,e.queryParams);case"always":return!0;case"paramsOrQueryParamsChange":return!Nf(t,e)||!Gp(t.queryParams,e.queryParams);case"paramsChange":default:return!Nf(t,e)}}(o,i,i.routeConfig.runGuardsAndResolvers);c?s.canActivateChecks.push(new Ag(r)):(i.data=o.data,i._resolvedData=o._resolvedData),Ig(t,e,i.component?a?a.children:null:n,r,s),c&&a&&a.outlet&&a.outlet.isActivated&&s.canDeactivateChecks.push(new Tg(a.outlet.component,o))}else o&&Og(e,a,s),s.canActivateChecks.push(new Ag(r)),Ig(t,null,i.component?a?a.children:null:n,r,s)}(t,i[t.value.outlet],n,r.concat([t.value]),s),delete i[t.value.outlet]}),Zp(i,(t,e)=>Og(t,n.getContext(e),s)),s}function Og(t,e,n){const r=kf(t),s=t.value;Zp(r,(t,r)=>{Og(t,s.component?e?e.children.getContext(r):null:e,n)}),n.canDeactivateChecks.push(new Tg(s.component&&e&&e.outlet&&e.outlet.isActivated?e.outlet.component:null,s))}class Pg{}function Rg(t){return new v(e=>e.error(t))}class Lg{constructor(t,e,n,r,s,i){this.rootComponentType=t,this.config=e,this.urlTree=n,this.url=r,this.paramsInheritanceStrategy=s,this.relativeLinkResolution=i}recognize(){const t=mg(this.urlTree.root,[],[],this.config.filter(t=>void 0===t.redirectTo),this.relativeLinkResolution).segmentGroup,e=this.processSegmentGroup(this.config,t,Vp);if(null===e)return null;const n=new Rf([],Object.freeze({}),Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,{},Vp,this.rootComponentType,null,this.urlTree.root,-1,{}),r=new Tf(n,e),s=new Lf(this.url,r);return this.inheritParamsAndData(s._root),s}inheritParamsAndData(t){const e=t.value,n=Pf(e,this.paramsInheritanceStrategy);e.params=Object.freeze(n.params),e.data=Object.freeze(n.data),t.children.forEach(t=>this.inheritParamsAndData(t))}processSegmentGroup(t,e,n){return 0===e.segments.length&&e.hasChildren()?this.processChildren(t,e):this.processSegment(t,e,e.segments,n)}processChildren(t,e){const n=[];for(const s of Object.keys(e.children)){const r=e.children[s],i=pg(t,s),o=this.processSegmentGroup(i,r,s);if(null===o)return null;n.push(...o)}const r=jg(n);return r.sort((t,e)=>t.value.outlet===Vp?-1:e.value.outlet===Vp?1:t.value.outlet.localeCompare(e.value.outlet)),r}processSegment(t,e,n,r){for(const s of t){const t=this.processSegmentAgainstRoute(s,e,n,r);if(null!==t)return t}return bg(e,n,r)?[]:null}processSegmentAgainstRoute(t,e,n,r){if(t.redirectTo||!vg(t,e,n,r))return null;let s,i=[],o=[];if("**"===t.path){const r=n.length>0?Yp(n).parameters:{};s=new Rf(n,r,Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,Hg(t),dg(t),t.component,t,Mg(e),Ng(e)+n.length,Vg(t))}else{const r=gg(e,t,n);if(!r.matched)return null;i=r.consumedSegments,o=n.slice(r.lastChild),s=new Rf(i,r.parameters,Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,Hg(t),dg(t),t.component,t,Mg(e),Ng(e)+i.length,Vg(t))}const a=function(t){return t.children?t.children:t.loadChildren?t._loadedConfig.routes:[]}(t),{segmentGroup:c,slicedSegments:l}=mg(e,i,o,a.filter(t=>void 0===t.redirectTo),this.relativeLinkResolution);if(0===l.length&&c.hasChildren()){const t=this.processChildren(a,c);return null===t?null:[new Tf(s,t)]}if(0===a.length&&0===l.length)return[new Tf(s,[])];const u=dg(t)===r,h=this.processSegment(a,c,l,u?Vp:r);return null===h?null:[new Tf(s,h)]}}function Bg(t){const e=t.value.routeConfig;return e&&""===e.path&&void 0===e.redirectTo}function jg(t){const e=[],n=new Set;for(const r of t){if(!Bg(r)){e.push(r);continue}const t=e.find(t=>r.value.routeConfig===t.value.routeConfig);void 0!==t?(t.children.push(...r.children),n.add(t)):e.push(r)}for(const r of n){const t=jg(r.children);e.push(new Tf(r.value,t))}return e.filter(t=>!n.has(t))}function Mg(t){let e=t;for(;e._sourceSegment;)e=e._sourceSegment;return e}function Ng(t){let e=t,n=e._segmentIndexShift?e._segmentIndexShift:0;for(;e._sourceSegment;)e=e._sourceSegment,n+=e._segmentIndexShift?e._segmentIndexShift:0;return n-1}function Hg(t){return t.data||{}}function Vg(t){return t.resolve||{}}function zg(t){return bd(e=>{const n=t(e);return n?B(n).pipe(x(()=>e)):hd(e)})}class $g extends class{shouldDetach(t){return!1}store(t,e){}shouldAttach(t){return!1}retrieve(t){return null}shouldReuseRoute(t,e){return t.routeConfig===e.routeConfig}}{}const Ug=new Gn("ROUTES");class Wg{constructor(t,e,n,r){this.loader=t,this.compiler=e,this.onLoadStartListener=n,this.onLoadEndListener=r}load(t,e){if(e._loader$)return e._loader$;this.onLoadStartListener&&this.onLoadStartListener(e);const n=this.loadModuleFactory(e.loadChildren).pipe(x(n=>{this.onLoadEndListener&&this.onLoadEndListener(e);const r=n.create(t);return new ng(Xp(r.injector.get(Ug,void 0,Ct.Self|Ct.Optional)).map(hg),r)}),rp(t=>{throw e._loader$=void 0,t}));return e._loader$=new Y(n,()=>new D).pipe(G()),e._loader$}loadModuleFactory(t){return"string"==typeof t?B(this.loader.load(t)):Qp(t()).pipe(H(t=>t instanceof cc?hd(t):B(this.compiler.compileModuleAsync(t))))}}class Gg{constructor(){this.outlet=null,this.route=null,this.resolver=null,this.children=new qg,this.attachRef=null}}class qg{constructor(){this.contexts=new Map}onChildOutletCreated(t,e){const n=this.getOrCreateContext(t);n.outlet=e,this.contexts.set(t,n)}onChildOutletDestroyed(t){const e=this.getContext(t);e&&(e.outlet=null)}onOutletDeactivated(){const t=this.contexts;return this.contexts=new Map,t}onOutletReAttached(t){this.contexts=t}getOrCreateContext(t){let e=this.getContext(t);return e||(e=new Gg,this.contexts.set(t,e)),e}getContext(t){return this.contexts.get(t)||null}}class Xg{shouldProcessUrl(t){return!0}extract(t){return t}merge(t,e){return t}}function Yg(t){throw t}function Zg(t,e,n){return e.parse("/")}function Qg(t,e){return hd(null)}const Kg={paths:"exact",fragment:"ignored",matrixParams:"ignored",queryParams:"exact"},Jg={paths:"subset",fragment:"ignored",matrixParams:"ignored",queryParams:"subset"};let tm=(()=>{class t{constructor(t,e,n,r,s,i,o,a){this.rootComponentType=t,this.urlSerializer=e,this.rootContexts=n,this.location=r,this.config=a,this.lastSuccessfulNavigation=null,this.currentNavigation=null,this.disposed=!1,this.lastLocationChangeInfo=null,this.navigationId=0,this.currentPageId=0,this.isNgZoneEnabled=!1,this.events=new D,this.errorHandler=Yg,this.malformedUriErrorHandler=Zg,this.navigated=!1,this.lastSuccessfulId=-1,this.hooks={beforePreactivation:Qg,afterPreactivation:Qg},this.urlHandlingStrategy=new Xg,this.routeReuseStrategy=new $g,this.onSameUrlNavigation="ignore",this.paramsInheritanceStrategy="emptyOnly",this.urlUpdateStrategy="deferred",this.relativeLinkResolution="corrected",this.canceledNavigationResolution="replace",this.ngModule=s.get(ac),this.console=s.get(tl);const c=s.get(pl);this.isNgZoneEnabled=c instanceof pl&&pl.isInAngularZone(),this.resetConfig(a),this.currentUrlTree=new sf(new of([],{}),{},null),this.rawUrlTree=this.currentUrlTree,this.browserUrlTree=this.currentUrlTree,this.configLoader=new Wg(i,o,t=>this.triggerEvent(new Rp(t)),t=>this.triggerEvent(new Lp(t))),this.routerState=If(this.currentUrlTree,this.rootComponentType),this.transitions=new jd({id:0,targetPageId:0,currentUrlTree:this.currentUrlTree,currentRawUrl:this.currentUrlTree,extractedUrl:this.urlHandlingStrategy.extract(this.currentUrlTree),urlAfterRedirects:this.urlHandlingStrategy.extract(this.currentUrlTree),rawUrl:this.currentUrlTree,extras:{},resolve:null,reject:null,promise:Promise.resolve(!0),source:"imperative",restoredState:null,currentSnapshot:this.routerState.snapshot,targetSnapshot:null,currentRouterState:this.routerState,targetRouterState:null,guards:{canActivateChecks:[],canDeactivateChecks:[]},guardsResult:null}),this.navigations=this.setupNavigations(this.transitions),this.processNavigations()}setupNavigations(t){const e=this.events;return t.pipe(tp(t=>0!==t.id),x(t=>Object.assign(Object.assign({},t),{extractedUrl:this.urlHandlingStrategy.extract(t.rawUrl)})),bd(t=>{let n=!1,r=!1;return hd(t).pipe(bp(t=>{this.currentNavigation={id:t.id,initialUrl:t.currentRawUrl,extractedUrl:t.extractedUrl,trigger:t.source,extras:t.extras,previousNavigation:this.lastSuccessfulNavigation?Object.assign(Object.assign({},this.lastSuccessfulNavigation),{previousNavigation:null}):null}}),bd(t=>{const n=!this.navigated||t.extractedUrl.toString()!==this.browserUrlTree.toString();if(("reload"===this.onSameUrlNavigation||n)&&this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl))return hd(t).pipe(bd(t=>{const n=this.transitions.getValue();return e.next(new Sp(t.id,this.serializeUrl(t.extractedUrl),t.source,t.restoredState)),n!==this.transitions.getValue()?ld:Promise.resolve(t)}),function(t,e,n,r){return bd(s=>function(t,e,n,r,s){return new Sg(t,e,n,r,s).apply()}(t,e,n,s.extractedUrl,r).pipe(x(t=>Object.assign(Object.assign({},s),{urlAfterRedirects:t}))))}(this.ngModule.injector,this.configLoader,this.urlSerializer,this.config),bp(t=>{this.currentNavigation=Object.assign(Object.assign({},this.currentNavigation),{finalUrl:t.urlAfterRedirects})}),function(t,e,n,r,s){return H(i=>function(t,e,n,r,s="emptyOnly",i="legacy"){try{const o=new Lg(t,e,n,r,s,i).recognize();return null===o?Rg(new Pg):hd(o)}catch(o){return Rg(o)}}(t,e,i.urlAfterRedirects,n(i.urlAfterRedirects),r,s).pipe(x(t=>Object.assign(Object.assign({},i),{targetSnapshot:t}))))}(this.rootComponentType,this.config,t=>this.serializeUrl(t),this.paramsInheritanceStrategy,this.relativeLinkResolution),bp(t=>{"eager"===this.urlUpdateStrategy&&(t.extras.skipLocationChange||this.setBrowserUrl(t.urlAfterRedirects,t),this.browserUrlTree=t.urlAfterRedirects);const n=new kp(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);e.next(n)}));if(n&&this.rawUrlTree&&this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)){const{id:n,extractedUrl:r,source:s,restoredState:i,extras:o}=t,a=new Sp(n,this.serializeUrl(r),s,i);e.next(a);const c=If(r,this.rootComponentType).snapshot;return hd(Object.assign(Object.assign({},t),{targetSnapshot:c,urlAfterRedirects:r,extras:Object.assign(Object.assign({},o),{skipLocationChange:!1,replaceUrl:!1})}))}return this.rawUrlTree=t.rawUrl,this.browserUrlTree=t.urlAfterRedirects,t.resolve(null),ld}),zg(t=>{const{targetSnapshot:e,id:n,extractedUrl:r,rawUrl:s,extras:{skipLocationChange:i,replaceUrl:o}}=t;return this.hooks.beforePreactivation(e,{navigationId:n,appliedUrlTree:r,rawUrlTree:s,skipLocationChange:!!i,replaceUrl:!!o})}),bp(t=>{const e=new Fp(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);this.triggerEvent(e)}),x(t=>Object.assign(Object.assign({},t),{guards:kg(t.targetSnapshot,t.currentSnapshot,this.rootContexts)})),function(t,e){return H(n=>{const{targetSnapshot:r,currentSnapshot:s,guards:{canActivateChecks:i,canDeactivateChecks:o}}=n;return 0===o.length&&0===i.length?hd(Object.assign(Object.assign({},n),{guardsResult:!0})):function(t,e,n,r){return B(t).pipe(H(t=>function(t,e,n,r,s){const i=e&&e.routeConfig?e.routeConfig.canDeactivate:null;return i&&0!==i.length?hd(i.map(i=>{const o=Fg(i,e,s);let a;if(function(t){return t&&rg(t.canDeactivate)}(o))a=Qp(o.canDeactivate(t,e,n,r));else{if(!rg(o))throw new Error("Invalid CanDeactivate guard");a=Qp(o(t,e,n,r))}return a.pipe(yp())})).pipe(og()):hd(!0)}(t.component,t.route,n,e,r)),yp(t=>!0!==t,!0))}(o,r,s,t).pipe(H(n=>n&&"boolean"==typeof n?function(t,e,n,r){return B(e).pipe(op(e=>Wd(function(t,e){return null!==t&&e&&e(new Bp(t)),hd(!0)}(e.route.parent,r),function(t,e){return null!==t&&e&&e(new Mp(t)),hd(!0)}(e.route,r),function(t,e,n){const r=e[e.length-1],s=e.slice(0,e.length-1).reverse().map(t=>function(t){const e=t.routeConfig?t.routeConfig.canActivateChild:null;return e&&0!==e.length?{node:t,guards:e}:null}(t)).filter(t=>null!==t).map(e=>Gd(()=>hd(e.guards.map(s=>{const i=Fg(s,e.node,n);let o;if(function(t){return t&&rg(t.canActivateChild)}(i))o=Qp(i.canActivateChild(r,t));else{if(!rg(i))throw new Error("Invalid CanActivateChild guard");o=Qp(i(r,t))}return o.pipe(yp())})).pipe(og())));return hd(s).pipe(og())}(t,e.path,n),function(t,e,n){const r=e.routeConfig?e.routeConfig.canActivate:null;return r&&0!==r.length?hd(r.map(r=>Gd(()=>{const s=Fg(r,e,n);let i;if(function(t){return t&&rg(t.canActivate)}(s))i=Qp(s.canActivate(e,t));else{if(!rg(s))throw new Error("Invalid CanActivate guard");i=Qp(s(e,t))}return i.pipe(yp())}))).pipe(og()):hd(!0)}(t,e.route,n))),yp(t=>!0!==t,!0))}(r,i,t,e):hd(n)),x(t=>Object.assign(Object.assign({},n),{guardsResult:t})))})}(this.ngModule.injector,t=>this.triggerEvent(t)),bp(t=>{if(sg(t.guardsResult)){const e=Up(`Redirecting to "${this.serializeUrl(t.guardsResult)}"`);throw e.url=t.guardsResult,e}const e=new Ip(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot,!!t.guardsResult);this.triggerEvent(e)}),tp(t=>!!t.guardsResult||(this.cancelNavigationTransition(t,""),!1)),zg(t=>{if(t.guards.canActivateChecks.length)return hd(t).pipe(bp(t=>{const e=new Op(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);this.triggerEvent(e)}),bd(t=>{let e=!1;return hd(t).pipe((n=this.paramsInheritanceStrategy,r=this.ngModule.injector,H(t=>{const{targetSnapshot:e,guards:{canActivateChecks:s}}=t;if(!s.length)return hd(t);let i=0;return B(s).pipe(op(t=>function(t,e,n,r){return function(t,e,n,r){const s=Object.keys(t);if(0===s.length)return hd({});const i={};return B(s).pipe(H(s=>function(t,e,n,r){const s=Fg(t,e,r);return Qp(s.resolve?s.resolve(e,n):s(e,n))}(t[s],e,n,r).pipe(bp(t=>{i[s]=t}))),ap(1),H(()=>Object.keys(i).length===s.length?hd(i):ld))}(t._resolve,t,e,r).pipe(x(e=>(t._resolvedData=e,t.data=Object.assign(Object.assign({},t.data),Pf(t,n).resolve),null)))}(t.route,e,n,r)),bp(()=>i++),ap(1),H(e=>i===s.length?hd(t):ld))})),bp({next:()=>e=!0,complete:()=>{e||this.cancelNavigationTransition(t,"At least one route resolver didn't emit any value.")}}));var n,r}),bp(t=>{const e=new Pp(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(t.urlAfterRedirects),t.targetSnapshot);this.triggerEvent(e)}))}),zg(t=>{const{targetSnapshot:e,id:n,extractedUrl:r,rawUrl:s,extras:{skipLocationChange:i,replaceUrl:o}}=t;return this.hooks.afterPreactivation(e,{navigationId:n,appliedUrlTree:r,rawUrlTree:s,skipLocationChange:!!i,replaceUrl:!!o})}),x(t=>{const e=function(t,e,n){const r=Hf(t,e._root,n?n._root:void 0);return new Ff(r,e)}(this.routeReuseStrategy,t.targetSnapshot,t.currentRouterState);return Object.assign(Object.assign({},t),{targetRouterState:e})}),bp(t=>{this.currentUrlTree=t.urlAfterRedirects,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,t.rawUrl),this.routerState=t.targetRouterState,"deferred"===this.urlUpdateStrategy&&(t.extras.skipLocationChange||this.setBrowserUrl(this.rawUrlTree,t),this.browserUrlTree=t.urlAfterRedirects)}),(i=this.rootContexts,o=this.routeReuseStrategy,a=t=>this.triggerEvent(t),x(t=>(new tg(o,t.targetRouterState,t.currentRouterState,a).activate(i),t))),bp({next(){n=!0},complete(){n=!0}}),(s=()=>{n||r||this.cancelNavigationTransition(t,`Navigation ID ${t.id} is not equal to the current navigation id ${this.navigationId}`),this.currentNavigation=null},t=>t.lift(new _p(s))),rp(n=>{if(r=!0,(s=n)&&s.ngNavigationCancelingError){const r=sg(n.url);r||(this.navigated=!0,this.resetStateAndUrl(t.currentRouterState,t.currentUrlTree,t.rawUrl));const s=new Ap(t.id,this.serializeUrl(t.extractedUrl),n.message);e.next(s),r?setTimeout(()=>{const e=this.urlHandlingStrategy.merge(n.url,this.rawUrlTree);this.scheduleNavigation(e,"imperative",null,{skipLocationChange:t.extras.skipLocationChange,replaceUrl:"eager"===this.urlUpdateStrategy},{resolve:t.resolve,reject:t.reject,promise:t.promise})},0):t.resolve(!1)}else{this.resetStateAndUrl(t.currentRouterState,t.currentUrlTree,t.rawUrl);const r=new Tp(t.id,this.serializeUrl(t.extractedUrl),n);e.next(r);try{t.resolve(this.errorHandler(n))}catch(i){t.reject(i)}}var s;return ld}));var s,i,o,a}))}resetRootComponentType(t){this.rootComponentType=t,this.routerState.root.component=this.rootComponentType}getTransition(){const t=this.transitions.value;return t.urlAfterRedirects=this.browserUrlTree,t}setTransition(t){this.transitions.next(Object.assign(Object.assign({},this.getTransition()),t))}initialNavigation(){this.setUpLocationChangeListener(),0===this.navigationId&&this.navigateByUrl(this.location.path(!0),{replaceUrl:!0})}setUpLocationChangeListener(){this.locationSubscription||(this.locationSubscription=this.location.subscribe(t=>{const e=this.extractLocationChangeInfoFromEvent(t);this.shouldScheduleNavigation(this.lastLocationChangeInfo,e)&&setTimeout(()=>{const{source:t,state:n,urlTree:r}=e,s={replaceUrl:!0};if(n){const t=Object.assign({},n);delete t.navigationId,delete t.\u0275routerPageId,0!==Object.keys(t).length&&(s.state=t)}this.scheduleNavigation(r,t,n,s)},0),this.lastLocationChangeInfo=e}))}extractLocationChangeInfoFromEvent(t){var e;return{source:"popstate"===t.type?"popstate":"hashchange",urlTree:this.parseUrl(t.url),state:(null===(e=t.state)||void 0===e?void 0:e.navigationId)?t.state:null,transitionId:this.getTransition().id}}shouldScheduleNavigation(t,e){if(!t)return!0;const n=e.urlTree.toString()===t.urlTree.toString();return!(e.transitionId===t.transitionId&&n&&("hashchange"===e.source&&"popstate"===t.source||"popstate"===e.source&&"hashchange"===t.source))}get url(){return this.serializeUrl(this.currentUrlTree)}getCurrentNavigation(){return this.currentNavigation}triggerEvent(t){this.events.next(t)}resetConfig(t){cg(t),this.config=t.map(hg),this.navigated=!1,this.lastSuccessfulId=-1}ngOnDestroy(){this.dispose()}dispose(){this.transitions.complete(),this.locationSubscription&&(this.locationSubscription.unsubscribe(),this.locationSubscription=void 0),this.disposed=!0}createUrlTree(t,e={}){const{relativeTo:n,queryParams:r,fragment:s,queryParamsHandling:i,preserveFragment:o}=e,a=n||this.routerState.root,c=o?this.currentUrlTree.fragment:s;let l=null;switch(i){case"merge":l=Object.assign(Object.assign({},this.currentUrlTree.queryParams),r);break;case"preserve":l=this.currentUrlTree.queryParams;break;default:l=r||null}return null!==l&&(l=this.removeEmptyProps(l)),function(t,e,n,r,s){if(0===n.length)return Uf(e.root,e.root,e,r,s);const i=function(t){if("string"==typeof t[0]&&1===t.length&&"/"===t[0])return new Gf(!0,0,t);let e=0,n=!1;const r=t.reduce((t,r,s)=>{if("object"==typeof r&&null!=r){if(r.outlets){const e={};return Zp(r.outlets,(t,n)=>{e[n]="string"==typeof t?t.split("/"):t}),[...t,{outlets:e}]}if(r.segmentPath)return[...t,r.segmentPath]}return"string"!=typeof r?[...t,r]:0===s?(r.split("/").forEach((r,s)=>{0==s&&"."===r||(0==s&&""===r?n=!0:".."===r?e++:""!=r&&t.push(r))}),t):[...t,r]},[]);return new Gf(n,e,r)}(n);if(i.toRoot())return Uf(e.root,new of([],{}),e,r,s);const o=function(t,e,n){if(t.isAbsolute)return new qf(e.root,!0,0);if(-1===n.snapshot._lastPathIndex){const t=n.snapshot._urlSegment;return new qf(t,t===e.root,0)}const r=zf(t.commands[0])?0:1;return function(t,e,n){let r=t,s=e,i=n;for(;i>s;){if(i-=s,r=r.parent,!r)throw new Error("Invalid number of '../'");s=r.segments.length}return new qf(r,!1,s-i)}(n.snapshot._urlSegment,n.snapshot._lastPathIndex+r,t.numberOfDoubleDots)}(i,e,t),a=o.processChildren?Yf(o.segmentGroup,o.index,i.commands):Xf(o.segmentGroup,o.index,i.commands);return Uf(o.segmentGroup,a,e,r,s)}(a,this.currentUrlTree,t,l,null!=c?c:null)}navigateByUrl(t,e={skipLocationChange:!1}){const n=sg(t)?t:this.parseUrl(t),r=this.urlHandlingStrategy.merge(n,this.rawUrlTree);let s=null;return"computed"===this.canceledNavigationResolution&&(0===this.currentPageId||e.skipLocationChange||e.replaceUrl)&&(s=this.location.getState()),this.scheduleNavigation(r,"imperative",s,e)}navigate(t,e={skipLocationChange:!1}){return function(t){for(let e=0;e<t.length;e++){const n=t[e];if(null==n)throw new Error(`The requested path contains ${n} segment at index ${e}`)}}(t),this.navigateByUrl(this.createUrlTree(t,e),e)}serializeUrl(t){return this.urlSerializer.serialize(t)}parseUrl(t){let e;try{e=this.urlSerializer.parse(t)}catch(n){e=this.malformedUriErrorHandler(n,this.urlSerializer,t)}return e}isActive(t,e){let n;if(n=!0===e?Object.assign({},Kg):!1===e?Object.assign({},Jg):e,sg(t))return tf(this.currentUrlTree,t,n);const r=this.parseUrl(t);return tf(this.currentUrlTree,r,n)}removeEmptyProps(t){return Object.keys(t).reduce((e,n)=>{const r=t[n];return null!=r&&(e[n]=r),e},{})}processNavigations(){this.navigations.subscribe(t=>{this.navigated=!0,this.lastSuccessfulId=t.id,this.currentPageId=t.targetPageId,this.events.next(new xp(t.id,this.serializeUrl(t.extractedUrl),this.serializeUrl(this.currentUrlTree))),this.lastSuccessfulNavigation=this.currentNavigation,t.resolve(!0)},t=>{this.console.warn("Unhandled Navigation Error: ")})}scheduleNavigation(t,e,n,r,s){if(this.disposed)return Promise.resolve(!1);const i=this.getTransition(),o="imperative"!==e&&"imperative"===(null==i?void 0:i.source),a=(this.lastSuccessfulId===i.id||this.currentNavigation?i.rawUrl:i.urlAfterRedirects).toString()===t.toString();if(o&&a)return Promise.resolve(!0);let c,l,u;s?(c=s.resolve,l=s.reject,u=s.promise):u=new Promise((t,e)=>{c=t,l=e});const h=++this.navigationId;let d;return d="computed"===this.canceledNavigationResolution?n&&n.\u0275routerPageId?n.\u0275routerPageId:this.currentPageId+1:0,this.setTransition({id:h,targetPageId:d,source:e,restoredState:n,currentUrlTree:this.currentUrlTree,currentRawUrl:this.rawUrlTree,rawUrl:t,extras:r,resolve:c,reject:l,promise:u,currentSnapshot:this.routerState.snapshot,currentRouterState:this.routerState}),u.catch(t=>Promise.reject(t))}setBrowserUrl(t,e){const n=this.urlSerializer.serialize(t),r=Object.assign(Object.assign({},e.extras.state),this.generateNgRouterState(e.id,e.targetPageId));this.location.isCurrentPathEqualTo(n)||e.extras.replaceUrl?this.location.replaceState(n,"",r):this.location.go(n,"",r)}resetStateAndUrl(t,e,n){this.routerState=t,this.currentUrlTree=e,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,n),this.resetUrlToCurrentUrlTree()}resetUrlToCurrentUrlTree(){this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree),"",this.generateNgRouterState(this.lastSuccessfulId,this.currentPageId))}cancelNavigationTransition(t,e){"computed"===this.canceledNavigationResolution?"popstate"!==t.source&&"eager"!==this.urlUpdateStrategy||this.location.historyGo(this.currentPageId-t.targetPageId):this.resetUrlToCurrentUrlTree();const n=new Ap(t.id,this.serializeUrl(t.extractedUrl),e);this.triggerEvent(n),t.resolve(!1)}generateNgRouterState(t,e){return"computed"===this.canceledNavigationResolution?{navigationId:t,"\u0275routerPageId":e}:{navigationId:t}}}return t.\u0275fac=function(e){return new(e||t)(ur(Xn),ur(lf),ur(qg),ur(ou),ur(Qi),ur(Ll),ur(ul),ur(void 0))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),em=(()=>{class t{constructor(t,e,n,r,s){this.parentContexts=t,this.location=e,this.resolver=n,this.changeDetector=s,this.activated=null,this._activatedRoute=null,this.activateEvents=new Ac,this.deactivateEvents=new Ac,this.name=r||Vp,t.onChildOutletCreated(this.name,this)}ngOnDestroy(){this.parentContexts.onChildOutletDestroyed(this.name)}ngOnInit(){if(!this.activated){const t=this.parentContexts.getContext(this.name);t&&t.route&&(t.attachRef?this.attach(t.attachRef,t.route):this.activateWith(t.route,t.resolver||null))}}get isActivated(){return!!this.activated}get component(){if(!this.activated)throw new Error("Outlet is not activated");return this.activated.instance}get activatedRoute(){if(!this.activated)throw new Error("Outlet is not activated");return this._activatedRoute}get activatedRouteData(){return this._activatedRoute?this._activatedRoute.snapshot.data:{}}detach(){if(!this.activated)throw new Error("Outlet is not activated");this.location.detach();const t=this.activated;return this.activated=null,this._activatedRoute=null,t}attach(t,e){this.activated=t,this._activatedRoute=e,this.location.insert(t.hostView)}deactivate(){if(this.activated){const t=this.component;this.activated.destroy(),this.activated=null,this._activatedRoute=null,this.deactivateEvents.emit(t)}}activateWith(t,e){if(this.isActivated)throw new Error("Cannot activate an already activated outlet");this._activatedRoute=t;const n=(e=e||this.resolver).resolveComponentFactory(t._futureSnapshot.routeConfig.component),r=this.parentContexts.getOrCreateContext(this.name).children,s=new nm(t,r,this.location.injector);this.activated=this.location.createComponent(n,this.location.length,s),this.changeDetector.markForCheck(),this.activateEvents.emit(this.activated.instance)}}return t.\u0275fac=function(e){return new(e||t)(go(qg),go(uc),go(_a),("name",function(t,e){const n=t.attrs;if(n){const t=n.length;let r=0;for(;r<t;){const s=n[r];if(mn(s))break;if(0===s)r+=2;else if("number"==typeof s)for(r++;r<t&&"string"==typeof n[r];)r++;else{if(s===e)return n[r+1];r+=2}}}return null}(Re(),"name")),go(Ka))},t.\u0275dir=Xt({type:t,selectors:[["router-outlet"]],outputs:{activateEvents:"activate",deactivateEvents:"deactivate"},exportAs:["outlet"]}),t})();class nm{constructor(t,e,n){this.route=t,this.childContexts=e,this.parent=n}get(t,e){return t===Of?this.route:t===qg?this.childContexts:this.parent.get(t,e)}}class rm{}class sm{preload(t,e){return hd(null)}}let im=(()=>{class t{constructor(t,e,n,r,s){this.router=t,this.injector=r,this.preloadingStrategy=s,this.loader=new Wg(e,n,e=>t.triggerEvent(new Rp(e)),e=>t.triggerEvent(new Lp(e)))}setUpPreloading(){this.subscription=this.router.events.pipe(tp(t=>t instanceof xp),op(()=>this.preload())).subscribe(()=>{})}preload(){const t=this.injector.get(ac);return this.processRoutes(t,this.router.config)}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}processRoutes(t,e){const n=[];for(const r of e)if(r.loadChildren&&!r.canLoad&&r._loadedConfig){const t=r._loadedConfig;n.push(this.processRoutes(t.module,t.routes))}else r.loadChildren&&!r.canLoad?n.push(this.preloadConfig(t,r)):r.children&&n.push(this.processRoutes(t,r.children));return B(n).pipe($(),x(t=>{}))}preloadConfig(t,e){return this.preloadingStrategy.preload(e,()=>(e._loadedConfig?hd(e._loadedConfig):this.loader.load(t.injector,e)).pipe(H(t=>(e._loadedConfig=t,this.processRoutes(t.module,t.routes)))))}}return t.\u0275fac=function(e){return new(e||t)(ur(tm),ur(Ll),ur(ul),ur(Qi),ur(rm))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),om=(()=>{class t{constructor(t,e,n={}){this.router=t,this.viewportScroller=e,this.options=n,this.lastId=0,this.lastSource="imperative",this.restoredId=0,this.store={},n.scrollPositionRestoration=n.scrollPositionRestoration||"disabled",n.anchorScrolling=n.anchorScrolling||"disabled"}init(){"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.setHistoryScrollRestoration("manual"),this.routerEventsSubscription=this.createScrollEvents(),this.scrollEventsSubscription=this.consumeScrollEvents()}createScrollEvents(){return this.router.events.subscribe(t=>{t instanceof Sp?(this.store[this.lastId]=this.viewportScroller.getScrollPosition(),this.lastSource=t.navigationTrigger,this.restoredId=t.restoredState?t.restoredState.navigationId:0):t instanceof xp&&(this.lastId=t.id,this.scheduleScrollEvent(t,this.router.parseUrl(t.urlAfterRedirects).fragment))})}consumeScrollEvents(){return this.router.events.subscribe(t=>{t instanceof Hp&&(t.position?"top"===this.options.scrollPositionRestoration?this.viewportScroller.scrollToPosition([0,0]):"enabled"===this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition(t.position):t.anchor&&"enabled"===this.options.anchorScrolling?this.viewportScroller.scrollToAnchor(t.anchor):"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition([0,0]))})}scheduleScrollEvent(t,e){this.router.triggerEvent(new Hp(t,"popstate"===this.lastSource?this.store[this.restoredId]:null,e))}ngOnDestroy(){this.routerEventsSubscription&&this.routerEventsSubscription.unsubscribe(),this.scrollEventsSubscription&&this.scrollEventsSubscription.unsubscribe()}}return t.\u0275fac=function(e){return new(e||t)(ur(tm),ur(_h),ur(void 0))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const am=new Gn("ROUTER_CONFIGURATION"),cm=new Gn("ROUTER_FORROOT_GUARD"),lm=[ou,{provide:lf,useClass:uf},{provide:tm,useFactory:function(t,e,n,r,s,i,o,a={},c,l){const u=new tm(null,t,e,n,r,s,i,Xp(o));return c&&(u.urlHandlingStrategy=c),l&&(u.routeReuseStrategy=l),function(t,e){t.errorHandler&&(e.errorHandler=t.errorHandler),t.malformedUriErrorHandler&&(e.malformedUriErrorHandler=t.malformedUriErrorHandler),t.onSameUrlNavigation&&(e.onSameUrlNavigation=t.onSameUrlNavigation),t.paramsInheritanceStrategy&&(e.paramsInheritanceStrategy=t.paramsInheritanceStrategy),t.relativeLinkResolution&&(e.relativeLinkResolution=t.relativeLinkResolution),t.urlUpdateStrategy&&(e.urlUpdateStrategy=t.urlUpdateStrategy)}(a,u),a.enableTracing&&u.events.subscribe(t=>{var e,n;null===(e=console.group)||void 0===e||e.call(console,`Router Event: ${t.constructor.name}`),console.log(t.toString()),console.log(t),null===(n=console.groupEnd)||void 0===n||n.call(console)}),u},deps:[lf,qg,ou,Qi,Ll,ul,Ug,am,[class{},new fr],[class{},new fr]]},qg,{provide:Of,useFactory:function(t){return t.routerState.root},deps:[tm]},{provide:Ll,useClass:Ml},im,sm,class{preload(t,e){return e().pipe(rp(()=>hd(null)))}},{provide:am,useValue:{enableTracing:!1}}];function um(){return new Tl("Router",tm)}let hm=(()=>{class t{constructor(t,e){}static forRoot(e,n){return{ngModule:t,providers:[lm,gm(e),{provide:cm,useFactory:fm,deps:[[tm,new fr,new gr]]},{provide:am,useValue:n||{}},{provide:eu,useFactory:pm,deps:[Gl,[new pr(ru),new fr],am]},{provide:om,useFactory:dm,deps:[tm,_h,am]},{provide:rm,useExisting:n&&n.preloadingStrategy?n.preloadingStrategy:sm},{provide:Tl,multi:!0,useFactory:um},[mm,{provide:Gc,multi:!0,useFactory:ym,deps:[mm]},{provide:bm,useFactory:vm,deps:[mm]},{provide:Jc,multi:!0,useExisting:bm}]]}}static forChild(e){return{ngModule:t,providers:[gm(e)]}}}return t.\u0275fac=function(e){return new(e||t)(ur(cm,8),ur(tm,8))},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({}),t})();function dm(t,e,n){return n.scrollOffset&&e.setOffset(n.scrollOffset),new om(t,e,n)}function pm(t,e,n={}){return n.useHash?new iu(t,e):new su(t,e)}function fm(t){return"guarded"}function gm(t){return[{provide:qn,multi:!0,useValue:t},{provide:Ug,multi:!0,useValue:t}]}let mm=(()=>{class t{constructor(t){this.injector=t,this.initNavigation=!1,this.resultOfPreactivationDone=new D}appInitializer(){return this.injector.get(Xl,Promise.resolve(null)).then(()=>{let t=null;const e=new Promise(e=>t=e),n=this.injector.get(tm),r=this.injector.get(am);return"disabled"===r.initialNavigation?(n.setUpLocationChangeListener(),t(!0)):"enabled"===r.initialNavigation||"enabledBlocking"===r.initialNavigation?(n.hooks.afterPreactivation=()=>this.initNavigation?hd(null):(this.initNavigation=!0,t(!0),this.resultOfPreactivationDone),n.initialNavigation()):t(!0),e})}bootstrapListener(t){const e=this.injector.get(am),n=this.injector.get(im),r=this.injector.get(om),s=this.injector.get(tm),i=this.injector.get(Pl);t===i.components[0]&&("enabledNonBlocking"!==e.initialNavigation&&void 0!==e.initialNavigation||s.initialNavigation(),n.setUpPreloading(),r.init(),s.resetRootComponentType(i.componentTypes[0]),this.resultOfPreactivationDone.next(null),this.resultOfPreactivationDone.complete())}}return t.\u0275fac=function(e){return new(e||t)(ur(Qi))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();function ym(t){return t.appInitializer.bind(t)}function vm(t){return t.bootstrapListener.bind(t)}const bm=new Gn("Router Initializer");class Cm{}class wm{}class _m{constructor(t){this.normalizedNames=new Map,this.lazyUpdate=null,t?this.lazyInit="string"==typeof t?()=>{this.headers=new Map,t.split("\n").forEach(t=>{const e=t.indexOf(":");if(e>0){const n=t.slice(0,e),r=n.toLowerCase(),s=t.slice(e+1).trim();this.maybeSetNormalizedName(n,r),this.headers.has(r)?this.headers.get(r).push(s):this.headers.set(r,[s])}})}:()=>{this.headers=new Map,Object.keys(t).forEach(e=>{let n=t[e];const r=e.toLowerCase();"string"==typeof n&&(n=[n]),n.length>0&&(this.headers.set(r,n),this.maybeSetNormalizedName(e,r))})}:this.headers=new Map}has(t){return this.init(),this.headers.has(t.toLowerCase())}get(t){this.init();const e=this.headers.get(t.toLowerCase());return e&&e.length>0?e[0]:null}keys(){return this.init(),Array.from(this.normalizedNames.values())}getAll(t){return this.init(),this.headers.get(t.toLowerCase())||null}append(t,e){return this.clone({name:t,value:e,op:"a"})}set(t,e){return this.clone({name:t,value:e,op:"s"})}delete(t,e){return this.clone({name:t,value:e,op:"d"})}maybeSetNormalizedName(t,e){this.normalizedNames.has(e)||this.normalizedNames.set(e,t)}init(){this.lazyInit&&(this.lazyInit instanceof _m?this.copyFrom(this.lazyInit):this.lazyInit(),this.lazyInit=null,this.lazyUpdate&&(this.lazyUpdate.forEach(t=>this.applyUpdate(t)),this.lazyUpdate=null))}copyFrom(t){t.init(),Array.from(t.headers.keys()).forEach(e=>{this.headers.set(e,t.headers.get(e)),this.normalizedNames.set(e,t.normalizedNames.get(e))})}clone(t){const e=new _m;return e.lazyInit=this.lazyInit&&this.lazyInit instanceof _m?this.lazyInit:this,e.lazyUpdate=(this.lazyUpdate||[]).concat([t]),e}applyUpdate(t){const e=t.name.toLowerCase();switch(t.op){case"a":case"s":let n=t.value;if("string"==typeof n&&(n=[n]),0===n.length)return;this.maybeSetNormalizedName(t.name,e);const r=("a"===t.op?this.headers.get(e):void 0)||[];r.push(...n),this.headers.set(e,r);break;case"d":const s=t.value;if(s){let t=this.headers.get(e);if(!t)return;t=t.filter(t=>-1===s.indexOf(t)),0===t.length?(this.headers.delete(e),this.normalizedNames.delete(e)):this.headers.set(e,t)}else this.headers.delete(e),this.normalizedNames.delete(e)}}forEach(t){this.init(),Array.from(this.normalizedNames.keys()).forEach(e=>t(this.normalizedNames.get(e),this.headers.get(e)))}}class Dm{encodeKey(t){return Em(t)}encodeValue(t){return Em(t)}decodeKey(t){return decodeURIComponent(t)}decodeValue(t){return decodeURIComponent(t)}}function Em(t){return encodeURIComponent(t).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/gi,"$").replace(/%2C/gi,",").replace(/%3B/gi,";").replace(/%2B/gi,"+").replace(/%3D/gi,"=").replace(/%3F/gi,"?").replace(/%2F/gi,"/")}function Sm(t){return`${t}`}class xm{constructor(t={}){if(this.updates=null,this.cloneFrom=null,this.encoder=t.encoder||new Dm,t.fromString){if(t.fromObject)throw new Error("Cannot specify both fromString and fromObject.");this.map=function(t,e){const n=new Map;return t.length>0&&t.replace(/^\?/,"").split("&").forEach(t=>{const r=t.indexOf("="),[s,i]=-1==r?[e.decodeKey(t),""]:[e.decodeKey(t.slice(0,r)),e.decodeValue(t.slice(r+1))],o=n.get(s)||[];o.push(i),n.set(s,o)}),n}(t.fromString,this.encoder)}else t.fromObject?(this.map=new Map,Object.keys(t.fromObject).forEach(e=>{const n=t.fromObject[e];this.map.set(e,Array.isArray(n)?n:[n])})):this.map=null}has(t){return this.init(),this.map.has(t)}get(t){this.init();const e=this.map.get(t);return e?e[0]:null}getAll(t){return this.init(),this.map.get(t)||null}keys(){return this.init(),Array.from(this.map.keys())}append(t,e){return this.clone({param:t,value:e,op:"a"})}appendAll(t){const e=[];return Object.keys(t).forEach(n=>{const r=t[n];Array.isArray(r)?r.forEach(t=>{e.push({param:n,value:t,op:"a"})}):e.push({param:n,value:r,op:"a"})}),this.clone(e)}set(t,e){return this.clone({param:t,value:e,op:"s"})}delete(t,e){return this.clone({param:t,value:e,op:"d"})}toString(){return this.init(),this.keys().map(t=>{const e=this.encoder.encodeKey(t);return this.map.get(t).map(t=>e+"="+this.encoder.encodeValue(t)).join("&")}).filter(t=>""!==t).join("&")}clone(t){const e=new xm({encoder:this.encoder});return e.cloneFrom=this.cloneFrom||this,e.updates=(this.updates||[]).concat(t),e}init(){null===this.map&&(this.map=new Map),null!==this.cloneFrom&&(this.cloneFrom.init(),this.cloneFrom.keys().forEach(t=>this.map.set(t,this.cloneFrom.map.get(t))),this.updates.forEach(t=>{switch(t.op){case"a":case"s":const e=("a"===t.op?this.map.get(t.param):void 0)||[];e.push(Sm(t.value)),this.map.set(t.param,e);break;case"d":if(void 0===t.value){this.map.delete(t.param);break}{let e=this.map.get(t.param)||[];const n=e.indexOf(Sm(t.value));-1!==n&&e.splice(n,1),e.length>0?this.map.set(t.param,e):this.map.delete(t.param)}}}),this.cloneFrom=this.updates=null)}}class Am{constructor(){this.map=new Map}set(t,e){return this.map.set(t,e),this}get(t){return this.map.has(t)||this.map.set(t,t.defaultValue()),this.map.get(t)}delete(t){return this.map.delete(t),this}keys(){return this.map.keys()}}function Tm(t){return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer}function km(t){return"undefined"!=typeof Blob&&t instanceof Blob}function Fm(t){return"undefined"!=typeof FormData&&t instanceof FormData}class Im{constructor(t,e,n,r){let s;if(this.url=e,this.body=null,this.reportProgress=!1,this.withCredentials=!1,this.responseType="json",this.method=t.toUpperCase(),function(t){switch(t){case"DELETE":case"GET":case"HEAD":case"OPTIONS":case"JSONP":return!1;default:return!0}}(this.method)||r?(this.body=void 0!==n?n:null,s=r):s=n,s&&(this.reportProgress=!!s.reportProgress,this.withCredentials=!!s.withCredentials,s.responseType&&(this.responseType=s.responseType),s.headers&&(this.headers=s.headers),s.context&&(this.context=s.context),s.params&&(this.params=s.params)),this.headers||(this.headers=new _m),this.context||(this.context=new Am),this.params){const t=this.params.toString();if(0===t.length)this.urlWithParams=e;else{const n=e.indexOf("?");this.urlWithParams=e+(-1===n?"?":n<e.length-1?"&":"")+t}}else this.params=new xm,this.urlWithParams=e}serializeBody(){return null===this.body?null:Tm(this.body)||km(this.body)||Fm(this.body)||"string"==typeof this.body?this.body:this.body instanceof xm?this.body.toString():"object"==typeof this.body||"boolean"==typeof this.body||Array.isArray(this.body)?JSON.stringify(this.body):this.body.toString()}detectContentTypeHeader(){return null===this.body||Fm(this.body)?null:km(this.body)?this.body.type||null:Tm(this.body)?null:"string"==typeof this.body?"text/plain":this.body instanceof xm?"application/x-www-form-urlencoded;charset=UTF-8":"object"==typeof this.body||"number"==typeof this.body||"boolean"==typeof this.body?"application/json":null}clone(t={}){var e;const n=t.method||this.method,r=t.url||this.url,s=t.responseType||this.responseType,i=void 0!==t.body?t.body:this.body,o=void 0!==t.withCredentials?t.withCredentials:this.withCredentials,a=void 0!==t.reportProgress?t.reportProgress:this.reportProgress;let c=t.headers||this.headers,l=t.params||this.params;const u=null!==(e=t.context)&&void 0!==e?e:this.context;return void 0!==t.setHeaders&&(c=Object.keys(t.setHeaders).reduce((e,n)=>e.set(n,t.setHeaders[n]),c)),t.setParams&&(l=Object.keys(t.setParams).reduce((e,n)=>e.set(n,t.setParams[n]),l)),new Im(n,r,i,{params:l,headers:c,context:u,reportProgress:a,responseType:s,withCredentials:o})}}var Om=function(t){return t[t.Sent=0]="Sent",t[t.UploadProgress=1]="UploadProgress",t[t.ResponseHeader=2]="ResponseHeader",t[t.DownloadProgress=3]="DownloadProgress",t[t.Response=4]="Response",t[t.User=5]="User",t}({});class Pm{constructor(t,e=200,n="OK"){this.headers=t.headers||new _m,this.status=void 0!==t.status?t.status:e,this.statusText=t.statusText||n,this.url=t.url||null,this.ok=this.status>=200&&this.status<300}}class Rm extends Pm{constructor(t={}){super(t),this.type=Om.ResponseHeader}clone(t={}){return new Rm({headers:t.headers||this.headers,status:void 0!==t.status?t.status:this.status,statusText:t.statusText||this.statusText,url:t.url||this.url||void 0})}}class Lm extends Pm{constructor(t={}){super(t),this.type=Om.Response,this.body=void 0!==t.body?t.body:null}clone(t={}){return new Lm({body:void 0!==t.body?t.body:this.body,headers:t.headers||this.headers,status:void 0!==t.status?t.status:this.status,statusText:t.statusText||this.statusText,url:t.url||this.url||void 0})}}class Bm extends Pm{constructor(t){super(t,0,"Unknown Error"),this.name="HttpErrorResponse",this.ok=!1,this.message=this.status>=200&&this.status<300?`Http failure during parsing for ${t.url||"(unknown url)"}`:`Http failure response for ${t.url||"(unknown url)"}: ${t.status} ${t.statusText}`,this.error=t.error||null}}function jm(t,e){return{body:e,headers:t.headers,context:t.context,observe:t.observe,params:t.params,reportProgress:t.reportProgress,responseType:t.responseType,withCredentials:t.withCredentials}}let Mm=(()=>{class t{constructor(t){this.handler=t}request(t,e,n={}){let r;if(t instanceof Im)r=t;else{let s,i;s=n.headers instanceof _m?n.headers:new _m(n.headers),n.params&&(i=n.params instanceof xm?n.params:new xm({fromObject:n.params})),r=new Im(t,e,void 0!==n.body?n.body:null,{headers:s,context:n.context,params:i,reportProgress:n.reportProgress,responseType:n.responseType||"json",withCredentials:n.withCredentials})}const s=hd(r).pipe(op(t=>this.handler.handle(t)));if(t instanceof Im||"events"===n.observe)return s;const i=s.pipe(tp(t=>t instanceof Lm));switch(n.observe||"body"){case"body":switch(r.responseType){case"arraybuffer":return i.pipe(x(t=>{if(null!==t.body&&!(t.body instanceof ArrayBuffer))throw new Error("Response is not an ArrayBuffer.");return t.body}));case"blob":return i.pipe(x(t=>{if(null!==t.body&&!(t.body instanceof Blob))throw new Error("Response is not a Blob.");return t.body}));case"text":return i.pipe(x(t=>{if(null!==t.body&&"string"!=typeof t.body)throw new Error("Response is not a string.");return t.body}));case"json":default:return i.pipe(x(t=>t.body))}case"response":return i;default:throw new Error(`Unreachable: unhandled observe type ${n.observe}}`)}}delete(t,e={}){return this.request("DELETE",t,e)}get(t,e={}){return this.request("GET",t,e)}head(t,e={}){return this.request("HEAD",t,e)}jsonp(t,e){return this.request("JSONP",t,{params:(new xm).append(e,"JSONP_CALLBACK"),observe:"body",responseType:"json"})}options(t,e={}){return this.request("OPTIONS",t,e)}patch(t,e,n={}){return this.request("PATCH",t,jm(n,e))}post(t,e,n={}){return this.request("POST",t,jm(n,e))}put(t,e,n={}){return this.request("PUT",t,jm(n,e))}}return t.\u0275fac=function(e){return new(e||t)(ur(Cm))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();class Nm{constructor(t,e){this.next=t,this.interceptor=e}handle(t){return this.interceptor.intercept(t,this.next)}}const Hm=new Gn("HTTP_INTERCEPTORS");let Vm=(()=>{class t{intercept(t,e){return e.handle(t)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const zm=/^\)\]\}',?\n/;let $m=(()=>{class t{constructor(t){this.xhrFactory=t}handle(t){if("JSONP"===t.method)throw new Error("Attempted to construct Jsonp request without HttpClientJsonpModule installed.");return new v(e=>{const n=this.xhrFactory.build();if(n.open(t.method,t.urlWithParams),t.withCredentials&&(n.withCredentials=!0),t.headers.forEach((t,e)=>n.setRequestHeader(t,e.join(","))),t.headers.has("Accept")||n.setRequestHeader("Accept","application/json, text/plain, */*"),!t.headers.has("Content-Type")){const e=t.detectContentTypeHeader();null!==e&&n.setRequestHeader("Content-Type",e)}if(t.responseType){const e=t.responseType.toLowerCase();n.responseType="json"!==e?e:"text"}const r=t.serializeBody();let s=null;const i=()=>{if(null!==s)return s;const e=1223===n.status?204:n.status,r=n.statusText||"OK",i=new _m(n.getAllResponseHeaders()),o=function(t){return"responseURL"in t&&t.responseURL?t.responseURL:/^X-Request-URL:/m.test(t.getAllResponseHeaders())?t.getResponseHeader("X-Request-URL"):null}(n)||t.url;return s=new Rm({headers:i,status:e,statusText:r,url:o}),s},o=()=>{let{headers:r,status:s,statusText:o,url:a}=i(),c=null;204!==s&&(c=void 0===n.response?n.responseText:n.response),0===s&&(s=c?200:0);let l=s>=200&&s<300;if("json"===t.responseType&&"string"==typeof c){const t=c;c=c.replace(zm,"");try{c=""!==c?JSON.parse(c):null}catch(u){c=t,l&&(l=!1,c={error:u,text:c})}}l?(e.next(new Lm({body:c,headers:r,status:s,statusText:o,url:a||void 0})),e.complete()):e.error(new Bm({error:c,headers:r,status:s,statusText:o,url:a||void 0}))},a=t=>{const{url:r}=i(),s=new Bm({error:t,status:n.status||0,statusText:n.statusText||"Unknown Error",url:r||void 0});e.error(s)};let c=!1;const l=r=>{c||(e.next(i()),c=!0);let s={type:Om.DownloadProgress,loaded:r.loaded};r.lengthComputable&&(s.total=r.total),"text"===t.responseType&&n.responseText&&(s.partialText=n.responseText),e.next(s)},u=t=>{let n={type:Om.UploadProgress,loaded:t.loaded};t.lengthComputable&&(n.total=t.total),e.next(n)};return n.addEventListener("load",o),n.addEventListener("error",a),n.addEventListener("timeout",a),n.addEventListener("abort",a),t.reportProgress&&(n.addEventListener("progress",l),null!==r&&n.upload&&n.upload.addEventListener("progress",u)),n.send(r),e.next({type:Om.Sent}),()=>{n.removeEventListener("error",a),n.removeEventListener("abort",a),n.removeEventListener("load",o),n.removeEventListener("timeout",a),t.reportProgress&&(n.removeEventListener("progress",l),null!==r&&n.upload&&n.upload.removeEventListener("progress",u)),n.readyState!==n.DONE&&n.abort()}})}}return t.\u0275fac=function(e){return new(e||t)(ur(Sh))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const Um=new Gn("XSRF_COOKIE_NAME"),Wm=new Gn("XSRF_HEADER_NAME");class Gm{}let qm=(()=>{class t{constructor(t,e,n){this.doc=t,this.platform=e,this.cookieName=n,this.lastCookieString="",this.lastToken=null,this.parseCount=0}getToken(){if("server"===this.platform)return null;const t=this.doc.cookie||"";return t!==this.lastCookieString&&(this.parseCount++,this.lastToken=Ku(t,this.cookieName),this.lastCookieString=t),this.lastToken}}return t.\u0275fac=function(e){return new(e||t)(ur(Wl),ur(Kc),ur(Um))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Xm=(()=>{class t{constructor(t,e){this.tokenService=t,this.headerName=e}intercept(t,e){const n=t.url.toLowerCase();if("GET"===t.method||"HEAD"===t.method||n.startsWith("http://")||n.startsWith("https://"))return e.handle(t);const r=this.tokenService.getToken();return null===r||t.headers.has(this.headerName)||(t=t.clone({headers:t.headers.set(this.headerName,r)})),e.handle(t)}}return t.\u0275fac=function(e){return new(e||t)(ur(Gm),ur(Wm))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Ym=(()=>{class t{constructor(t,e){this.backend=t,this.injector=e,this.chain=null}handle(t){if(null===this.chain){const t=this.injector.get(Hm,[]);this.chain=t.reduceRight((t,e)=>new Nm(t,e),this.backend)}return this.chain.handle(t)}}return t.\u0275fac=function(e){return new(e||t)(ur(wm),ur(Qi))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Zm=(()=>{class t{static disable(){return{ngModule:t,providers:[{provide:Xm,useClass:Vm}]}}static withOptions(e={}){return{ngModule:t,providers:[e.cookieName?{provide:Um,useValue:e.cookieName}:[],e.headerName?{provide:Wm,useValue:e.headerName}:[]]}}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[Xm,{provide:Hm,useExisting:Xm,multi:!0},{provide:Gm,useClass:qm},{provide:Um,useValue:"XSRF-TOKEN"},{provide:Wm,useValue:"X-XSRF-TOKEN"}]}),t})(),Qm=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[Mm,{provide:Cm,useClass:Ym},$m,{provide:wm,useExisting:$m}],imports:[[Zm.withOptions({cookieName:"XSRF-TOKEN",headerName:"X-XSRF-TOKEN"})]]}),t})();function Km(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]])}return n}function Jm(t,e,n,r){var s,i=arguments.length,o=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,n,r);else for(var a=t.length-1;a>=0;a--)(s=t[a])&&(o=(i<3?s(o):i>3?s(e,n,o):s(e,n))||o);return i>3&&o&&Object.defineProperty(e,n,o),o}let ty=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({}),t})(),ey=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[ty]]}),t})(),ny=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[ey]}),t})();function ry(t,e=Fd){return n=>n.lift(new sy(t,e))}class sy{constructor(t,e){this.dueTime=t,this.scheduler=e}call(t,e){return e.subscribe(new iy(t,this.dueTime,this.scheduler))}}class iy extends f{constructor(t,e,n){super(t),this.dueTime=e,this.scheduler=n,this.debouncedSubscription=null,this.lastValue=null,this.hasValue=!1}_next(t){this.clearDebounce(),this.lastValue=t,this.hasValue=!0,this.add(this.debouncedSubscription=this.scheduler.schedule(oy,this.dueTime,this))}_complete(){this.debouncedNext(),this.destination.complete()}debouncedNext(){if(this.clearDebounce(),this.hasValue){const{lastValue:t}=this;this.lastValue=null,this.hasValue=!1,this.destination.next(t)}}clearDebounce(){const t=this.debouncedSubscription;null!==t&&(this.remove(t),t.unsubscribe(),this.debouncedSubscription=null)}}function oy(t){t.debouncedNext()}class ay{constructor(t){this.value=t}call(t,e){return e.subscribe(new cy(t,this.value))}}class cy extends f{constructor(t,e){super(t),this.value=e}_next(t){this.destination.next(this.value)}}class ly{constructor(t,e){this.predicate=t,this.inclusive=e}call(t,e){return e.subscribe(new uy(t,this.predicate,this.inclusive))}}class uy extends f{constructor(t,e,n){super(t),this.predicate=e,this.inclusive=n,this.index=0}_next(t){const e=this.destination;let n;try{n=this.predicate(t,this.index++)}catch(r){return void e.error(r)}this.nextOrComplete(t,n)}nextOrComplete(t,e){const n=this.destination;Boolean(e)?n.next(t):(this.inclusive&&n.next(t),n.complete())}}function hy(t,e){1&t&&Oo(0)}const dy=["*"];function py(t,e){1&t&&wo(0)}function fy(t,e){if(1&t){const t=_o();vo(0,"section",2),vo(1,"po-accordion-item-header",3),xo("p-toggle",function(e){const n=Pe(t).$implicit;return ko().headerToggle(e,n)}),bo(),vo(2,"po-accordion-item-body",4),po(3,py,1,0,"ng-container",5),bo(),bo()}if(2&t){const t=e.$implicit;Ho("po-accordion-item-active",t.expanded),zs(1),mo("p-expanded",t.expanded)("p-label",t.label),zs(1),mo("p-expanded",t.expanded),zs(1),mo("ngTemplateOutlet",t.templateRef)}}function gy(t,e){1&t&&(vo(0,"div",1),vo(1,"div",2),Oo(2),bo(),bo()),2&t&&mo("@toggleBody",void 0)}function my(t,e){1&t&&wo(0)}function yy(t,e){1&t&&Co(0,"i",2),2&t&&Vo(ko().class)}function vy(t,e){if(1&t&&(vo(0,"span",2),Jo(1),bo()),2&t){const t=ko();zs(1),ta(t.text)}}const by=["button"];function Cy(t,e){1&t&&(vo(0,"div",5),Co(1,"po-loading-icon",6),bo())}function wy(t,e){1&t&&Co(0,"po-icon",7),2&t&&mo("p-icon",ko().icon)}function _y(t,e){if(1&t&&(vo(0,"span",8),Jo(1),bo()),2&t){const t=ko();zs(1),ta(t.label)}}const Dy=["chartLine"],Ey=["po-chart-area",""];function Sy(t,e){if(1&t){const t=_o();on(),vo(0,"g",2),xo("mouseenter",function(){const e=Pe(t).index;return ko().onEnter(e)})("mouseleave",function(){const e=Pe(t).index;return ko().onLeave(e)}),Co(1,"g",3),vo(2,"g",4),xo("p-point-click",function(e){return Pe(t),ko().onSeriePointClick(e)})("p-point-hover",function(e){return Pe(t),ko().onSeriePointHover(e)}),bo(),bo()}if(2&t){const t=e.$implicit,n=e.index,r=ko();Vo("po-chart-line-path-group-"+n),zs(1),mo("p-chart-line","line"===r.chartType)("p-animate",r.animate)("p-color",t.color)("p-coordinates",null==t?null:t.coordinates)("p-is-active",t.isActive),uo("key","po-chart-line-path-"+n),zs(1),mo("p-animate",r.animate)("p-chart-line","line"===r.chartType)("p-color",t.color)("p-coordinates",r.seriesPointsCoordinates[n])("p-is-active",r.activeTooltip)("p-relative-to","po-chart-line-path-group-"+n),uo("key","po-chart-line-path-points-group-"+n)}}const xy=["po-chart-axis",""],Ay=["po-chart-axis-path",""];function Ty(t,e){1&t&&(on(),Co(0,"path",1)),2&t&&uo("d",e.$implicit.coordinates)}function ky(t,e){1&t&&(on(),Co(0,"path",1)),2&t&&uo("d",e.$implicit.coordinates)}const Fy=["po-chart-axis-label",""];function Iy(t,e){if(1&t&&(on(),vo(0,"text",2),Jo(1),bo()),2&t){const t=e.$implicit;uo("x",t.xCoordinate)("y",t.yCoordinate),zs(1),ea(" ",t.label," ")}}function Oy(t,e){if(1&t&&(on(),vo(0,"text",3),Jo(1),bo()),2&t){const t=e.$implicit;Ho("po-chart-centered-label",!ko().alignByTheCorners),uo("x",t.xCoordinate)("y",t.yCoordinate),zs(1),ea(" ",t.label," ")}}const Py=["po-chart-bar",""];function Ry(t,e){if(1&t){const t=_o();on(),vo(0,"g"),vo(1,"g",1),xo("p-bar-click",function(e){return Pe(t),ko().onSerieBarClick(e)})("p-bar-hover",function(e){return Pe(t),ko().onSerieBarHover(e)}),bo(),bo()}if(2&t){const t=e.$implicit,n=e.index,r=ko();Vo("po-chart-bar-group-"+n),zs(1),mo("p-color",null==t[0]?null:t[0].color)("p-coordinates",t)("p-tooltip-position",r.tooltipPosition),uo("key","po-chart-bar-path-"+n)}}const Ly=["po-chart-column",""];function By(t,e){if(1&t){const t=_o();on(),vo(0,"g"),vo(1,"g",1),xo("p-bar-click",function(e){return Pe(t),ko().onSerieBarClick(e)})("p-bar-hover",function(e){return Pe(t),ko().onSerieBarHover(e)}),bo(),bo()}if(2&t){const t=e.$implicit,n=e.index,r=ko();Vo("po-chart-bar-group-"+n),zs(1),mo("p-color",null==t[0]?null:t[0].color)("p-coordinates",t)("p-tooltip-position",r.tooltipPosition),uo("key","po-chart-bar-path-"+n)}}const jy=["chartBody"],My=["svgContainer"],Ny=["description"];function Hy(t,e){if(1&t&&(vo(0,"p",4,5),Jo(2),bo()),2&t){const t=ko(2);mo("p-tooltip",t.tooltip),zs(2),ea(" ",null==t.serie?null:t.serie.description," ")}}function Vy(t,e){if(1&t&&(vo(0,"div",1),vo(1,"p",2),Jo(2),bo(),po(3,Hy,3,2,"p",3),bo()),2&t){const t=ko();mo("ngStyle",t.maxDescriptionWidth),zs(2),ta(t.serieValueConverted),zs(1),mo("ngIf",t.hasSerieDescription)}}function zy(t,e){if(1&t&&(vo(0,"div",5,6),Co(2,"div",7),vo(3,"div",8),Jo(4),bo(),bo()),2&t){const t=ko();zs(4),ta(t.tooltipText)}}const $y=["chartContainer"],Uy=["chartHeader"],Wy=["chartLegend"],Gy=["chartWrapper"];function qy(t,e){if(1&t){const t=_o();vo(0,"po-chart-container",9),xo("p-serie-click",function(e){return Pe(t),ko().onSeriesClick(e)})("p-serie-hover",function(e){return Pe(t),ko().onSeriesHover(e)}),bo()}if(2&t){const t=ko();mo("p-options",t.options)("p-type",t.chartType)("p-series",t.chartSeries)("p-categories",t.categories)("p-container-size",t.svgContainerSize)}}function Xy(t,e){}function Yy(t,e){1&t&&wo(0)}function Zy(t,e){if(1&t&&(vo(0,"div"),po(1,Yy,1,0,"ng-container",10),bo()),2&t){ko();const t=fo(11);zs(1),mo("ngTemplateOutlet",t)}}function Qy(t,e){if(1&t&&Co(0,"po-chart-legend",11,12),2&t){const t=ko();mo("p-series",t.chartSeries)("p-type",t.type)}}const Ky=["svgELement"];function Jy(t,e){if(1&t){const t=_o();on(),vo(0,"g",9),xo("p-categories-coordinates",function(e){return Pe(t),ko().getCategoriesCoordinates(e)}),bo()}if(2&t){const t=ko();mo("p-align-by-the-corners",t.alignByTheCorners)("p-range",t.range)("p-type",t.type)("p-series",t.series)("p-container-size",t.containerSize)("p-options",t.axisOptions)("p-categories",t.categories)}}function tv(t,e){if(1&t){const t=_o();on(),vo(0,"g",10),xo("p-bar-hover",function(e){return Pe(t),ko().onSerieHover(e)})("p-bar-click",function(e){return Pe(t),ko().onSerieClick(e)}),bo()}if(2&t){const t=ko();mo("p-align-by-the-corners",t.alignByTheCorners)("p-svg-space",t.svgSpace)("p-categories",t.categories)("p-categories-coordinates",t.categoriesCoordinates)("p-range",t.range)("p-series",t.seriesByType.area)("p-container-size",t.containerSize)}}function ev(t,e){if(1&t){const t=_o();on(),vo(0,"g",11),xo("p-bar-hover",function(e){return Pe(t),ko().onSerieHover(e)})("p-bar-click",function(e){return Pe(t),ko().onSerieClick(e)}),bo()}if(2&t){const t=ko();mo("p-categories",t.categories)("p-range",t.range)("p-series",t.seriesByType.column)("p-container-size",t.containerSize)}}function nv(t,e){if(1&t){const t=_o();on(),vo(0,"g",12),xo("p-point-hover",function(e){return Pe(t),ko().onSerieHover(e)})("p-point-click",function(e){return Pe(t),ko().onSerieClick(e)}),bo()}if(2&t){const t=ko();mo("p-categories",t.categories)("p-range",t.range)("p-series",t.seriesByType.line)("p-container-size",t.containerSize)}}function rv(t,e){if(1&t){const t=_o();on(),vo(0,"g",13),xo("p-bar-hover",function(e){return Pe(t),ko().onSerieHover(e)})("p-bar-click",function(e){return Pe(t),ko().onSerieClick(e)}),bo()}if(2&t){const t=ko();mo("p-categories",t.categories)("p-range",t.range)("p-series",t.seriesByType.bar)("p-container-size",t.containerSize)}}function sv(t,e){if(1&t){const t=_o();on(),vo(0,"g",14),xo("p-circular-hover",function(e){return Pe(t),ko().onSerieHover(e)})("p-circular-click",function(e){return Pe(t),ko().onSerieClick(e)}),bo()}if(2&t){const t=ko();mo("p-series",t.seriesByType.pie)("p-container-size",t.containerSize)}}function iv(t,e){if(1&t){const t=_o();on(),vo(0,"g",15),xo("p-circular-hover",function(e){return Pe(t),ko().onSerieHover(e)})("p-circular-click",function(e){return Pe(t),ko().onSerieClick(e)}),bo()}if(2&t){const t=ko();mo("p-options",t.options)("p-series",t.seriesByType.donut)("p-container-size",t.containerSize)}}function ov(t,e){if(1&t&&(vo(0,"div",3),Co(1,"div",4),vo(2,"span",5),Jo(3),bo(),bo()),2&t){const t=e.$implicit;zs(1),Vo(null!=t.color&&t.color.includes("po-color")?t.color:""),No("background",t.color),zs(2),ta(t.label||t.category)}}const av=["po-chart-line",""];function cv(t,e){if(1&t){const t=_o();on(),vo(0,"g",2),xo("mouseenter",function(){const e=Pe(t).index;return ko().onEnter(e)})("mouseleave",function(){const e=Pe(t).index;return ko().onLeave(e)}),Co(1,"g",3),vo(2,"g",4),xo("p-point-click",function(e){return Pe(t),ko().onSeriePointClick(e)})("p-point-hover",function(e){return Pe(t),ko().onSeriePointHover(e)}),bo(),bo()}if(2&t){const t=e.$implicit,n=e.index,r=ko();Vo("po-chart-line-path-group-"+n),zs(1),mo("p-chart-line","line"===r.chartType)("p-animate",r.animate)("p-color",t.color)("p-coordinates",null==t?null:t.coordinates)("p-is-active",t.isActive),uo("key","po-chart-line-path-"+n),zs(1),mo("p-animate",r.animate)("p-chart-line","line"===r.chartType)("p-color",t.color)("p-coordinates",r.seriesPointsCoordinates[n])("p-is-active",r.activeTooltip)("p-relative-to","po-chart-line-path-group-"+n),uo("key","po-chart-line-path-points-group-"+n)}}const lv=["po-chart-bar-path",""];function uv(t,e){if(1&t){const t=_o();on(),vo(0,"path",1),xo("mouseenter",function(){const e=Pe(t).$implicit;return ko().onMouseEnter(e)})("click",function(){const e=Pe(t).$implicit;return ko().onClick(e)}),bo()}if(2&t){const t=e.$implicit,n=ko();Vo(null!=n.color&&n.color.includes("po-color")?n.color:""),mo("p-tooltip",t.tooltipLabel)("p-tooltip-position",n.tooltipPosition)("p-append-in-body",!0),uo("fill",n.color)("d",t.coordinates)}}const hv=["chartPath"],dv=["po-chart-path",""],pv=["po-chart-series-point",""];function fv(t,e){if(1&t){const t=_o();on(),vo(0,"circle",1),xo("click",function(){const e=Pe(t).$implicit;return ko().onClick(e)})("mouseenter",function(e){const n=Pe(t).$implicit;return ko().onMouseEnter(e,n)})("mouseleave",function(e){return Pe(t),ko().onMouseLeave(e)}),bo()}if(2&t){const t=e.$implicit,n=ko();Vo(null!=n.strokeColor&&n.strokeColor.includes("po-border-color")?n.strokeColor:""),Ho("po-chart-active-point",t.isActive),mo("p-tooltip",t.tooltipLabel)("p-append-in-body",!0)("p-display-tooltip",!n.chartLine&&t.isActive),uo("cx",t.xCoordinate)("cy",t.yCoordinate)("r",n.radius)("stroke",n.strokeColor)}}const gv=["svgPaths"],mv=["svgLabels"],yv=["po-chart-pie",""];function vv(t,e){if(1&t){const t=_o();on(),vo(0,"g"),vo(1,"g",2,3),xo("p-on-click",function(e){return Pe(t),ko().onSerieClick(e)})("p-on-hover",function(e){return Pe(t),ko().onSerieHover(e)}),bo(),bo()}if(2&t){const t=e.$implicit,n=e.index;zs(1),mo("p-serie",t),uo("key","po-chart-circular-path-"+n)}}function bv(t,e){if(1&t&&(on(),vo(0,"g"),Co(1,"g",4,5),bo()),2&t){const t=e.$implicit,n=e.index,r=ko(2);zs(1),mo("p-serie",t)("p-show-label",r.showLabels),uo("key","po-chart-circular-label-"+n)}}function Cv(t,e){if(1&t&&(on(),vo(0,"g"),po(1,bv,3,3,"g",0),bo()),2&t){const t=ko();zs(1),mo("ngForOf",t.seriesLabels)}}const wv=["po-chart-donut",""];function _v(t,e){if(1&t){const t=_o();on(),vo(0,"g"),vo(1,"g",2,3),xo("p-on-click",function(e){return Pe(t),ko().onSerieClick(e)})("p-on-hover",function(e){return Pe(t),ko().onSerieHover(e)}),bo(),bo()}if(2&t){const t=e.$implicit,n=e.index;zs(1),mo("p-serie",t),uo("key","po-chart-circular-path-"+n)}}function Dv(t,e){if(1&t&&(on(),vo(0,"g"),Co(1,"g",4,5),bo()),2&t){const t=e.$implicit,n=e.index,r=ko(2);zs(1),mo("p-serie",t)("p-show-label",r.showLabels),uo("key","po-chart-circular-label-"+n)}}function Ev(t,e){if(1&t&&(on(),vo(0,"g"),po(1,Dv,3,3,"g",0),bo()),2&t){const t=ko();zs(1),mo("ngForOf",t.seriesLabels)}}const Sv=["svgLabel"],xv=["po-chart-circular-label",""],Av=["svgPath"],Tv=["po-chart-circular-path",""],kv=["modalContent"];function Fv(t,e){if(1&t){const t=_o();vo(0,"a",14),xo("click",function(){return Pe(t),ko(2).close(!0)}),Co(1,"span",15),bo()}}function Iv(t,e){if(1&t){const t=_o();vo(0,"po-button",16),xo("p-click",function(){return Pe(t),ko(2).secondaryAction.action()}),bo()}if(2&t){const t=ko(2);mo("p-disabled",t.secondaryAction.disabled)("p-label",t.secondaryAction.label)("p-loading",t.secondaryAction.loading)("p-type",t.getSecondaryActionButtonType())}}function Ov(t,e){if(1&t){const t=_o();vo(0,"div",1),xo("keydown.esc",function(e){return Pe(t),ko().closeModalOnEscapeKey(e)}),vo(1,"div",2),vo(2,"div",3),xo("mousedown",function(e){return Pe(t),ko().onClickOut(e)}),vo(3,"div",4),vo(4,"div",5,6),vo(6,"div",7),vo(7,"div",8),Jo(8),bo(),po(9,Fv,2,0,"a",9),bo(),vo(10,"div",10),Oo(11),bo(),vo(12,"div",11),po(13,Iv,1,4,"po-button",12),vo(14,"po-button",13),xo("p-click",function(){return Pe(t),ko().primaryAction.action()}),bo(),bo(),bo(),bo(),bo(),bo(),bo()}if(2&t){const t=ko();zs(4),na("po-modal-content po-modal-",t.size,""),zs(4),ea(" ",t.title," "),zs(1),mo("ngIf",!t.hideClose),zs(4),mo("ngIf",t.secondaryAction),zs(1),mo("p-disabled",t.primaryAction.disabled)("p-label",t.primaryAction.label)("p-loading",t.primaryAction.loading)("p-type",t.getPrimaryActionButtonType())}}const Pv=["toaster"];function Rv(t,e){if(1&t){const t=_o();vo(0,"div",7),xo("click",function(e){return Pe(t),ko().poToasterAction(e)}),Jo(1),bo()}if(2&t){const t=ko();zs(1),ea(" ",t.actionLabel," ")}}function Lv(t,e){if(1&t&&(vo(0,"div",6),vo(1,"span",7),Jo(2),bo(),bo()),2&t){const t=ko();zs(2),ta(t.tagOrientation?t.label+":":t.label)}}function Bv(t,e){if(1&t&&Co(0,"po-icon",8),2&t){const t=ko();mo("p-icon",t.type?t.iconFromType:t.icon)}}function jv(t,e){if(1&t&&(vo(0,"div",6),Co(1,"po-tag",7),bo()),2&t){const t=ko().$implicit,e=ko();zs(1),mo("p-color",e.typeColor(t.type))("p-value",e.typeValue(t.type))}}function Mv(t,e){if(1&t&&(vo(0,"po-accordion-item",4),po(1,jv,2,2,"div",5),vo(2,"div",1),vo(3,"p"),Jo(4),bo(),bo(),bo()),2&t){const t=e.$implicit;mo("p-label",ko().formatDetailItemTitle(t)),zs(1),mo("ngIf",t.type),zs(3),ta(t.detailedMessage)}}let Nv=(()=>{class t{constructor(){this.subjectChild=new D}receiveFromChildAccordionClicked(){return this.subjectChild.asObservable()}sendToParentAccordionItemClicked(t){this.subjectChild.next(t)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Hv=(()=>{class t{constructor(t){this.accordionService=t}collapse(){this.expanded=!1,this.accordionService.sendToParentAccordionItemClicked(this)}expand(){this.expanded=!0,this.accordionService.sendToParentAccordionItemClicked(this)}}return t.\u0275fac=function(e){return new(e||t)(go(Nv))},t.\u0275cmp=zt({type:t,selectors:[["po-accordion-item"]],viewQuery:function(t,e){if(1&t&&Hc(rc,7),2&t){let t;Nc(t=Vc())&&(e.templateRef=t.first)}},inputs:{label:["p-label","label"]},ngContentSelectors:dy,decls:1,vars:0,template:function(t,e){1&t&&(Io(),po(0,hy,1,0,"ng-template"))},encapsulation:2}),t})(),Vv=(()=>{class t extends class{}{constructor(t){super(),this.accordionService=t,this.receiveFromChildAccordionSubscription()}ngOnDestroy(){this.accordionServiceSubscription.unsubscribe()}headerToggle(t,e){e.expanded=t,this.toggle(e)}receiveFromChildAccordionSubscription(){this.accordionServiceSubscription=this.accordionService.receiveFromChildAccordionClicked().subscribe(t=>this.toggle(t))}toggle(t){t.expanded?(this.expandedActiveAccordionItem&&this.expandedActiveAccordionItem.collapse(),this.expandedActiveAccordionItem=t):this.expandedActiveAccordionItem=null}}return t.\u0275fac=function(e){return new(e||t)(go(Nv))},t.\u0275cmp=zt({type:t,selectors:[["po-accordion"]],contentQueries:function(t,e,n){if(1&t&&function(t,e,n,r){const s=Oe();if(s.firstCreatePass){const n=Re();$c(s,new Oc(e,4,void 0),n.index),function(t,e){const n=t.contentQueries||(t.contentQueries=[]);e!==(n.length?n[n.length-1]:-1)&&n.push(t.queries.length-1,e)}(s,t)}zc(s,Ie(),4)}(n,Hv),2&t){let t;Nc(t=Vc())&&(e.poAccordionItems=t)}},features:[ba([Nv]),Ji],decls:2,vars:1,consts:[[1,"po-accordion","po-container","po-container-no-padding"],["class","po-accordion-item",3,"po-accordion-item-active",4,"ngFor","ngForOf"],[1,"po-accordion-item"],[3,"p-expanded","p-label","p-toggle"],[3,"p-expanded"],[4,"ngTemplateOutlet"]],template:function(t,e){1&t&&(vo(0,"div",0),po(1,fy,4,6,"section",1),bo()),2&t&&(zs(1),mo("ngForOf",e.poAccordionItems))},directives:function(){return[eh,$v,zv,ah]},encapsulation:2}),t})(),zv=(()=>{class t{constructor(){this.expanded=!1}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=zt({type:t,selectors:[["po-accordion-item-body"]],inputs:{expanded:["p-expanded","expanded"]},ngContentSelectors:dy,decls:1,vars:1,consts:[["class","po-accordion-item-body",4,"ngIf"],[1,"po-accordion-item-body"],[1,"po-accordion-item-body-content"]],template:function(t,e){1&t&&(Io(),po(0,gy,3,1,"div",0)),2&t&&mo("ngIf",e.expanded)},directives:[rh],encapsulation:2,data:{animation:[("toggleBody",e=[Bd("* => void",[Ld({height:"*"}),Rd(200,Ld({height:0}))]),Bd("void => *",[Ld({height:"0"}),Rd(200,Ld({height:"*"}))])],{type:7,name:"toggleBody",definitions:e,options:{}})]}}),t;var e})(),$v=(()=>{class t{constructor(){this.expanded=!1,this.toggle=new Ac}onClick(){this.expanded=!this.expanded,this.toggle.emit(this.expanded)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=zt({type:t,selectors:[["po-accordion-item-header"]],inputs:{expanded:["p-expanded","expanded"],label:["p-label","label"]},outputs:{toggle:"p-toggle"},decls:6,vars:1,consts:[[1,"po-accordion-item-header"],[1,"po-accordion-item-header-button","po-clickable",3,"click"],[1,"po-text-ellipsis","po-accordion-item-header-title"],[1,"po-icon","po-accordion-item-header-icon","po-icon-arrow-down"],["icon",""]],template:function(t,e){1&t&&(vo(0,"header",0),vo(1,"button",1),xo("click",function(){return e.onClick()}),vo(2,"div",2),Jo(3),bo(),Co(4,"span",3,4),bo(),bo()),2&t&&(zs(3),ta(e.label))},encapsulation:2,changeDetection:0}),t})(),Uv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh]]}),t})(),Wv=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh]]}),t})();const Gv=[{description:"English",language:"en"},{description:"Espa\xf1ol",language:"es"},{description:"Portugu\xeas",language:"pt"},{description:"P\u0443\u0441\u0441\u043a\u0438\u0439",language:"ru"}].map(t=>t.language),qv="pt",Xv=[{separator:".",language:"en"},{separator:",",language:"es"},{separator:",",language:"pt"},{separator:",",language:"ru"}],Yv=[{separator:",",language:"en"},{separator:".",language:"es"},{separator:".",language:"pt"},{separator:" ",language:"ru"}];function Zv(t){return(t||qv).toLowerCase().substring(0,2)}function Qv(t){return new RegExp("^[a-z]{2}(-[a-z]{2})?$","i").test(t)}function Kv(t){return"string"==typeof t?"true"===(t=t.toLowerCase().trim())||"on"===t||""===t:"number"==typeof t?1===t:!!t}function Jv(t,e){return typeof t===e}function tb(){const t=window.navigator.userAgent;return/msie\s|trident/i.test(t)}function eb(t,e){const n=!t&&0!==t||isNaN(t)?void 0:parseFloat(t);try{return parseFloat(n.toFixed(e))}catch(r){return n}}const nb="PO_DEFAULT_LANGUAGE",rb="PO_USER_LOCALE";let sb=(()=>{class t{constructor(){}set languageDefault(t){t&&Qv(t)&&localStorage.setItem(nb,t)}get languageDefault(){return localStorage.getItem(nb)}getLanguage(){const t=localStorage.getItem(rb)||this.languageDefault||function(){const t=navigator.language||navigator.userLanguage,e=Zv(t);return Gv.includes(e)?t:qv}();return t&&t.toLowerCase()}getLanguageDefault(){return this.languageDefault}getShortLanguage(){const t=Zv(this.getLanguage());return Gv.includes(t)?t:qv}setLanguage(t){Qv(t)&&localStorage.setItem(rb,t.toLowerCase())}setLanguageDefault(t){this.languageDefault=t}getNumberSeparators(t){var e,n,r,s;t=t||this.getShortLanguage();const i=null!==(e=Xv.find(e=>e.language===t))&&void 0!==e?e:{},o=null!==(n=Yv.find(e=>e.language===t))&&void 0!==n?n:{};return{decimalSeparator:null!==(r=i.separator)&&void 0!==r?r:",",thousandSeparator:null!==(s=o.separator)&&void 0!==s?s:"."}}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:function(){return new t},token:t,providedIn:"root"}),t})(),ib=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh,hm]]}),t})(),ob=(()=>{class t{constructor(){}set icon(t){"string"==typeof t?this.addClasses(t):t instanceof rc&&(this._icon=t)}get icon(){return this._icon}addClasses(t){this.class=this.class=t.startsWith("po-icon-")?`po-icon ${t}`:`po-fonts-icon ${t}`}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=zt({type:t,selectors:[["po-icon"]],inputs:{icon:["p-icon","icon"]},decls:3,vars:3,consts:[[4,"ngIf","ngIfThen","ngIfElse"],["fontTemplate",""],["aria-hidden","true"]],template:function(t,e){if(1&t&&(po(0,my,1,0,"ng-container",0),po(1,yy,1,2,"ng-template",null,1,Wc)),2&t){const t=fo(2);mo("ngIf",e.class)("ngIfThen",t)("ngIfElse",e.icon)}},directives:[rh],encapsulation:2,changeDetection:0}),t})(),ab=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh]]}),t})();const cb={en:{loading:"Loading"},es:{loading:"Cargando"},pt:{loading:"Carregando"},ru:{loading:"\u043f\u043e\u0433\u0440\u0443\u0437\u043a\u0430"}};let lb=(()=>{class t{constructor(t){this.languageService=t,this._screenLock=!1,this.text=this.getTextDefault()}set screenLock(t){this._screenLock=Kv(t)}get screenLock(){return this._screenLock}set text(t){this._text=t||this.getTextDefault()}get text(){return this._text}getTextDefault(){const t=this.languageService.getShortLanguage();return cb[t].loading}}return t.\u0275fac=function(e){return new(e||t)(go(sb))},t.\u0275dir=Xt({type:t,inputs:{text:["p-text","text"],screenLock:["p-screen-lock","screenLock"]}}),t})(),ub=(()=>{class t extends lb{constructor(t,e){super(e),this.changeDetector=t}}return t.\u0275fac=function(e){return new(e||t)(go(Ka),go(sb))},t.\u0275cmp=zt({type:t,selectors:[["po-loading-overlay"]],features:[Ji],decls:2,vars:5,consts:[[1,"po-loading-overlay-content",3,"p-text"]],template:function(t,e){1&t&&(vo(0,"div"),Co(1,"po-loading",0),bo()),2&t&&(Ho("po-overlay-absolute",!e.screenLock)("po-overlay-fixed",e.screenLock),zs(1),mo("p-text",e.text))},directives:function(){return[pb]},encapsulation:2}),t})(),hb=(()=>{class t{set neutralColor(t){this._neutralColor=Kv(t)}get neutralColor(){return this._neutralColor}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=zt({type:t,selectors:[["po-loading-icon"]],inputs:{neutralColor:["p-neutral-color","neutralColor"]},decls:9,vars:2,consts:[[1,"po-loading-icon"],[1,"po-loading-icon-bar","po-loading-icon-bar-1"],[1,"po-loading-icon-bar","po-loading-icon-bar-2"],[1,"po-loading-icon-bar","po-loading-icon-bar-3"],[1,"po-loading-icon-bar","po-loading-icon-bar-4"],[1,"po-loading-icon-bar","po-loading-icon-bar-5"],[1,"po-loading-icon-bar","po-loading-icon-bar-6"],[1,"po-loading-icon-bar","po-loading-icon-bar-7"],[1,"po-loading-icon-bar","po-loading-icon-bar-8"]],template:function(t,e){1&t&&(vo(0,"div",0),Co(1,"span",1),Co(2,"span",2),Co(3,"span",3),Co(4,"span",4),Co(5,"span",5),Co(6,"span",6),Co(7,"span",7),Co(8,"span",8),bo()),2&t&&Ho("po-loading-icon-neutral-color",e.neutralColor)},encapsulation:2}),t})(),db=(()=>{class t{constructor(){this.text="Carregando"}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Xt({type:t,inputs:{text:["p-text","text"]}}),t})(),pb=(()=>{class t extends db{}return t.\u0275fac=function(){let e;return function(n){return(e||(e=zn(t)))(n||t)}}(),t.\u0275cmp=zt({type:t,selectors:[["po-loading"]],features:[Ji],decls:3,vars:1,consts:[[1,"po-loading"],["class","po-loading-label po-text-ellipsis",4,"ngIf"],[1,"po-loading-label","po-text-ellipsis"]],template:function(t,e){1&t&&(vo(0,"div",0),Co(1,"po-loading-icon"),po(2,vy,2,1,"span",1),bo()),2&t&&(zs(2),mo("ngIf",e.text))},directives:[hb,rh],encapsulation:2}),t})(),fb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[sb]}),t})(),gb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh,fb]]}),t})();function mb(t,e,n){return function(r){t&&t.set&&t.set.bind(this)(e(r)),this[n]=e(r)}}function yb(t,e){return function(){return t&&t.get?t.get.bind(this)():this[e]}}function vb(){return function(t,e,n){return function(t,e,n){const{target:r,property:s,originalDescriptor:i}=t,o=function(t,e,n){const r=`$$__${e}`;return Object.prototype.hasOwnProperty.call(t,r)&&console.warn(`The prop "${r}" is already exist, it will be overrided by InputBoolean decorator.`),Object.defineProperty(t,r,{configurable:!0,writable:!0}),r}(r,s);return{get:yb(i,o),set:mb(i,n,o)}}({target:t,property:e,originalDescriptor:n},0,Kv)}}const bb=["default","primary","danger","link"];let Cb=(()=>{class t{constructor(){this.autoFocus=!1,this.click=new Ac,this._disabled=!1,this._loading=!1,this._small=!1,this._type="default"}set loading(t){this._loading=Kv(t)}get loading(){return this._loading}set small(t){this._small=""===t||Kv(t)}get small(){return this._small}set type(t){this._type=bb.includes(t)?t:"default"}get type(){return this._type}set disabled(t){this._disabled=""===t||Kv(t)}get disabled(){return this._disabled}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Xt({type:t,inputs:{autoFocus:["p-auto-focus","autoFocus"],loading:["p-loading","loading"],small:["p-small","small"],type:["p-type","type"],disabled:["p-disabled","disabled"],label:["p-label","label"],icon:["p-icon","icon"]},outputs:{click:"p-click"}}),Jm([vb()],t.prototype,"autoFocus",void 0),t})(),wb=(()=>{class t extends Cb{ngAfterViewInit(){this.autoFocus&&this.focus()}focus(){this.disabled||this.buttonElement.nativeElement.focus()}onClick(){this.click.emit(null)}}return t.\u0275fac=function(){let e;return function(n){return(e||(e=zn(t)))(n||t)}}(),t.\u0275cmp=zt({type:t,selectors:[["po-button"]],viewQuery:function(t,e){if(1&t&&Hc(by,7),2&t){let t;Nc(t=Vc())&&(e.buttonElement=t.first)}},features:[Ji],decls:5,vars:14,consts:[["type","button",1,"po-button","po-text-ellipsis",3,"disabled","click"],["button",""],["class","po-button-loading-icon",4,"ngIf"],["class","po-button-icon",3,"p-icon",4,"ngIf"],["class","po-button-label",4,"ngIf"],[1,"po-button-loading-icon"],["p-neutral-color",""],[1,"po-button-icon",3,"p-icon"],[1,"po-button-label"]],template:function(t,e){1&t&&(vo(0,"button",0,1),xo("click",function(){return e.onClick()}),po(2,Cy,2,0,"div",2),po(3,wy,1,1,"po-icon",3),po(4,_y,2,1,"span",4),bo()),2&t&&(Ho("po-button-danger","danger"===e.type)("po-button-link","link"===e.type)("po-button-primary","primary"===e.type)("po-button-sm",e.small)("po-clickable","link"===e.type),mo("disabled",e.disabled||e.loading),zs(2),mo("ngIf",e.loading),zs(1),mo("ngIf",e.icon),zs(1),mo("ngIf",e.label))},directives:[rh,hb,ob],encapsulation:2,changeDetection:0}),t})(),_b=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh,gb,ab]]}),t})();const Db=["right","right-top","right-bottom","top","top-left","top-right","left","left-top","left-bottom","bottom","bottom-left","bottom-right"];let Eb=(()=>{class t{constructor(){this.appendInBody=!1,this._tooltipPosition="bottom",this._displayTooltip=!1,this._tooltip=""}set tooltip(t){this._tooltip=t&&t.length>140?t.substring(0,140):t}get tooltip(){return this._tooltip}set tooltipPosition(t){this._tooltipPosition=Db.includes(t)?t:"bottom"}get tooltipPosition(){return this._tooltipPosition}set displayTooltip(t){this._displayTooltip=t,this._displayTooltip?this.addTooltipAction():this.removeTooltipAction()}get displayTooltip(){return this._displayTooltip}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Xt({type:t,inputs:{appendInBody:["p-append-in-body","appendInBody"],tooltip:["p-tooltip","tooltip"],tooltipPosition:["p-tooltip-position","tooltipPosition"],displayTooltip:["p-display-tooltip","displayTooltip"]}}),Jm([vb()],t.prototype,"appendInBody",void 0),Jm([vb()],t.prototype,"displayTooltip",null),t})();const Sb=["bottom","bottom-left","bottom-right","left","left-top","left-bottom","top","top-right","top-left","right","right-bottom","right-top"];let xb=(()=>{class t{constructor(){this.differenceDiagonalToWidthArrow=3,this.isSetElementWidth=!1,this.offsetArrow=12}adjustPosition(t){const e=t||"bottom";this.elementPosition(e),this.customPositions&&this.customPositions.length?this.adjustCustomPosition(e):this.adjustDefaultPosition(e)}getArrowDirection(){return this.arrowDirection}setElements(t,e,n,r,s=!1,i=!1){this.element=t instanceof xa?t.nativeElement:t,this.targetElement=n instanceof xa?n.nativeElement:n,this.elementOffset=e,this.customPositions=r,this.isSetElementWidth=s,this.isCornerAligned=i}adjustCustomPosition(t){const e=this.customPositions.length;let n=0;for(;n++<e;)this.overflowAllSides(t)&&(t=this.nextPosition(t,this.customPositions),this.elementPosition(t))}adjustDefaultPosition(t){const e=this.getMainPositions(),n=e.length;let r=0;for(;r++<n;){const n=this.getMainPosition(t);if(this.elementPosition(t),!this.overflowMain(n))return this.overflowAllSides(t)?void this.verifySubPositions(t):void 0;t=this.nextPosition(n,e)}}elementPosition(t){this.isCornerAligned?this.setAlignedElementPosition(t):this.setElementPosition(t)}getMainPosition(t){return t.indexOf("-")>-1?t.substring(0,t.indexOf("-")):t}getMainPositions(){return this.customPositions&&this.customPositions.length?this.getMainPositionsByCustomPositions(this.customPositions):["top","right","bottom","left"]}getMainPositionsByCustomPositions(t){const e=[],n=t.length;for(let r=0;r<n;r++){const n=this.getMainPosition(t[r]);e.includes(n)||e.push(n)}return e}getOverflows(){const t=this.getSizesAndPositions();return{right:t.element.right>t.window.innerWidth,top:t.element.top<=0,left:t.element.left<=0,bottom:t.element.bottom>t.window.innerHeight}}getSizesAndPositions(){return{window:{scrollY:window.scrollY,scrollX:window.scrollX,innerWidth:window.innerWidth,innerHeight:window.innerHeight},element:this.element.getBoundingClientRect(),target:this.targetElement?this.targetElement.getBoundingClientRect():{top:0,bottom:0,right:0,left:0}}}nextPosition(t,e=[]){const n=e.indexOf(t),r=n+1;return n>-1&&r<e.length?e[r]:e[0]}overflowAllSides(t){const e=this.getOverflows();switch(t){case"top":case"top-right":return e.top||e.right||e.left;case"top-left":return e.top||e.left||e.right;case"right":return e.right||e.top||e.bottom;case"right-top":return e.right||e.top;case"right-bottom":return e.right||e.bottom;case"bottom":case"bottom-right":return e.bottom||e.right||e.left;case"bottom-left":return e.bottom||e.left||e.right;case"left":return e.left||e.top||e.bottom;case"left-top":return e.left||e.top;case"left-bottom":return e.left||e.bottom}}overflowMain(t){const e=this.getOverflows();switch(t){case"top":return e.top;case"right":return e.right;case"bottom":return e.bottom;case"left":return e.left}}setAlignedArrowDirection(t){switch(t){case"top-left":return"bottom-left";case"top-right":return"bottom-right";case"bottom-right":return"top-right";case"bottom-left":return"top-left"}}setAlignedBottomPositions(t,e){this.element.style.top=e.target.bottom+this.elementOffset+"px",this.element.style.left=e.target.left-t+"px"}setAlignedElementPosition(t){this.setElementWidth();const e=this.getSizesAndPositions();switch(t){case"bottom-left":this.setAlignedBottomPositions(0,e);break;case"bottom-right":this.setAlignedBottomPositions(e.element.width-e.target.width,e);break;case"top-left":this.setAlignedTopPositions(0,e);break;case"top-right":this.setAlignedTopPositions(e.element.width-e.target.width,e)}this.arrowDirection=this.setAlignedArrowDirection(t)}setAlignedTopPositions(t,e){this.element.style.top=e.target.top-e.element.height-this.elementOffset+"px",this.element.style.left=e.target.left-t+"px"}setArrowDirection(t){switch(t){case"top":return"bottom";case"top-left":return"bottom-right";case"top-right":return"bottom-left";case"right":return"left";case"right-top":return"left-bottom";case"right-bottom":return"left-top";case"bottom":return"top";case"bottom-right":return"top-left";case"bottom-left":return"top-right";case"left":return"right";case"left-bottom":return"right-top";case"left-top":return"right-bottom"}}setBottomPositions(t,e){this.element.style.top=e.target.bottom+this.elementOffset+"px",this.element.style.left=e.target.left+e.target.width/2-t+"px"}setElementPosition(t){this.setElementWidth();const e=this.getSizesAndPositions();switch(t){case"top":this.setTopPositions(e.element.width/2,e);break;case"top-left":this.setTopPositions(e.element.width-this.offsetArrow-this.differenceDiagonalToWidthArrow,e);break;case"top-right":this.setTopPositions(this.offsetArrow+this.differenceDiagonalToWidthArrow,e);break;case"right":this.setRightPositions(e.element.height/2,e);break;case"right-top":this.setRightPositions(e.element.height-this.offsetArrow-this.differenceDiagonalToWidthArrow,e);break;case"right-bottom":this.setRightPositions(this.offsetArrow,e);break;case"bottom":this.setBottomPositions(e.element.width/2,e);break;case"bottom-right":this.setBottomPositions(this.offsetArrow+this.differenceDiagonalToWidthArrow,e);break;case"bottom-left":this.setBottomPositions(e.element.width-this.offsetArrow-this.differenceDiagonalToWidthArrow,e);break;case"left":this.setLeftPositions(e.element.height/2,e);break;case"left-bottom":this.setLeftPositions(this.offsetArrow,e);break;case"left-top":this.setLeftPositions(e.element.height-this.offsetArrow,e)}this.arrowDirection=this.setArrowDirection(t)}setElementWidth(){this.isSetElementWidth&&this.targetElement&&(this.element.style.width=`${this.targetElement.clientWidth}px`)}setLeftPositions(t,e){this.element.style.top=e.target.top-t+e.target.height/2+"px",this.element.style.left=e.target.left-e.element.width-this.elementOffset+"px"}setRightPositions(t,e){this.element.style.top=e.target.top-t+e.target.height/2+"px",this.element.style.left=e.target.right+this.elementOffset+"px"}setTopPositions(t,e){this.element.style.top=e.target.top-e.element.height-this.elementOffset+"px",this.element.style.left=e.target.left+e.target.width/2-t+"px"}verifySubPositions(t){t.indexOf("-")>-1&&(t=t.substring(0,t.indexOf("-")),this.elementPosition(t));let e=0;for(;e++<3;){if(!this.overflowAllSides(t))return null;t=this.nextPosition(t,Sb),this.elementPosition(t)}}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Ab=(()=>{class t extends xb{}return t.\u0275fac=function(){let e;return function(n){return(e||(e=zn(t)))(n||t)}}(),t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Tb=(()=>{class t extends Eb{constructor(t,e,n){super(),this.elementRef=t,this.renderer=e,this.poControlPosition=n,this.tooltipOffset=8}onMouseEnter(){this.displayTooltip||this.addTooltipAction()}onMouseLeave(){this.displayTooltip||this.removeTooltipAction()}ngOnInit(){this.initScrollEventListenerFunction()}addTooltipAction(){setTimeout(()=>{this.tooltip&&(this.tooltipContent?this.showTooltip():this.createTooltip(),this.removeArrow(this.arrowDirection),this.poControlPosition.adjustPosition(this.tooltipPosition),this.arrowDirection=this.poControlPosition.getArrowDirection(),this.addArrow(this.arrowDirection),this.lastTooltipText=this.tooltip)})}removeTooltipAction(){setTimeout(()=>{this.appendInBody&&this.tooltipContent?(this.renderer.removeChild(document.body,this.tooltipContent),this.tooltipContent=void 0):this.hideTooltip()})}addArrow(t){this.renderer.addClass(this.divArrow,`po-arrow-${t}`)}addScrollEventListener(){window.addEventListener("scroll",this.eventListenerFunction,!0)}createTooltip(){this.tooltipContent=this.renderer.createElement("div"),this.renderer.addClass(this.tooltipContent,"po-tooltip"),this.divArrow=this.renderer.createElement("div"),this.renderer.addClass(this.divArrow,"po-tooltip-arrow"),this.divContent=this.renderer.createElement("div"),this.renderer.addClass(this.divContent,"po-tooltip-content"),this.textContent=this.renderer.createText(this.tooltip),this.renderer.appendChild(this.divContent,this.textContent),this.renderer.appendChild(this.tooltipContent,this.divArrow),this.renderer.appendChild(this.tooltipContent,this.divContent);const t=this.appendInBody?document.body:this.elementRef.nativeElement;this.renderer.appendChild(t,this.tooltipContent),this.poControlPosition.setElements(this.tooltipContent,this.tooltipOffset,this.elementRef),this.addScrollEventListener()}initScrollEventListenerFunction(){this.eventListenerFunction=()=>{this.isHidden||setTimeout(()=>{this.poControlPosition.adjustPosition(this.tooltipPosition)})}}hideTooltip(){this.tooltipContent&&(this.renderer.addClass(this.tooltipContent,"po-invisible"),this.isHidden=!0,this.removeScrollEventListener())}removeArrow(t){this.elementRef.nativeElement.querySelector(`.po-arrow-${t}`)&&this.renderer.removeClass(this.divArrow,`po-arrow-${t}`)}removeScrollEventListener(){window.removeEventListener("scroll",this.eventListenerFunction,!0)}showTooltip(){this.renderer.removeClass(this.tooltipContent,"po-invisible"),this.updateTextContent(),this.isHidden=!1,this.addScrollEventListener()}updateTextContent(){this.lastTooltipText!==this.tooltip&&(this.renderer.removeChild(this.divContent,this.textContent),this.textContent=this.renderer.createText(this.tooltip),this.renderer.appendChild(this.divContent,this.textContent))}}return t.\u0275fac=function(e){return new(e||t)(go(xa),go(ka),go(Ab))},t.\u0275dir=Xt({type:t,selectors:[["","p-tooltip",""]],hostBindings:function(t,e){1&t&&xo("mouseenter",function(){return e.onMouseEnter()})("mouseleave",function(){return e.onMouseLeave()})},features:[ba([Ab]),Ji]}),t})(),kb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh]]}),t})(),Fb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh,_b,kb]]}),t})(),Ib=(()=>{class t{constructor(){this.dateRegex=new RegExp("^(?:[0-9])\\d{1}(?:[0-9])\\d{1}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12]\\d|3[01])$"),this.isoRegex=new RegExp("^(?:[0-9])\\d{1}(?:[0-9])\\d{1}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12]\\d|3[01])T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:Z|-0[1-9]|-1\\d|-2[0-3]|-00:?(?:0[1-9]|[0-5]\\d)|\\+[01]\\d|\\+2[0-3])(?:|:?[0-5]\\d)$")}convertIsoToDate(t,e,n){if(t){const{year:r,month:s,day:i}=this.getDateFromIso(t);if(e){const t=new Date(r,s-1,i,0,0,0);return this.setYearFrom0To100(t,r),t}if(n){const t=new Date(r,s-1,i,23,59,59);return this.setYearFrom0To100(t,r),t}{const e=Date.parse(t),n=6e4*(new Date).getTimezoneOffset();return new Date(e+n)}}}convertDateToISO(t){if(t){const e=t.getFullYear(),n=t.getMonth()+1,r=t.getDate()<10?"0"+t.getDate():t.getDate(),s=n<10?"0"+n:n;return this.formatYear(e)+"-"+s+"-"+r}return null}formatYear(t){return t>999?t.toString():t>99&&t<1e3?`0${t}`:t>9&&t<100?`00${t}`:t>=0&&t<10?`000${t}`:void 0}getDateFromIso(t){const e=parseInt(t.substring(8,10),10),n=parseInt(t.substring(5,7),10);return{year:parseInt(t.substring(0,4),10),month:n,day:e}}getDateForDateRange(t,e){const n=e?[0,0,0]:[23,59,59];if(t instanceof Date){const{year:e,month:r,day:s}=this.splitDate(t),i=new Date(e,r,s,...n);return this.setYearFrom0To100(i,e),i}if(this.isValidIso(t))return this.convertIsoToDate(t,e,!e)}isDateRangeValid(t="",e=""){const n=t.split("-").map(t=>parseInt(t,10)),r=e.split("-").map(t=>parseInt(t,10));for(let s=0;s<=n.length;s++){if(n[s]>r[s])return!0;if(n[s]<r[s])return!1}return!0}isValidIso(t){return this.dateRegex.test(t)||this.isoRegex.test(t)}setYearFrom0To100(t,e){e>=0&&e<100&&t.setFullYear(e)}splitDate(t){return{year:t.getFullYear(),month:t.getMonth(),day:t.getDate()}}validateDateRange(t,e,n){return e&&n?t>=e&&t<=n:e&&!n?t>=e:!(!e&&n)||t<=n}validateDate(t){const e=t instanceof Date?this.convertDateToISO(t):t;return this.isValidIso(e)?e:void 0}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:function(){return new t},token:t,providedIn:"root"}),t})(),Ob=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[Ib]}),t})(),Pb=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh]]}),t})();var Rb=function(t){return t.Area="area",t.Donut="donut",t.Gauge="gauge",t.Pie="pie",t.Line="line",t.Column="column",t.Bar="bar",t}({});const Lb=-Math.PI/2,Bb=1e-4,jb=2*Math.PI/Math.floor(25);let Mb=(()=>{class t{calculateMinAndMaxValues(t,e=!0){const n=this.getDomain(t,"min"),r=this.getDomain(t,"max");return{minValue:!e&&n<0?0:n,maxValue:e&&r<0?0:r}}getLongestDataValue(t=[],e,n){return e===Rb.Bar?this.getLongestData(t):this.getAxisXLabelLongestValue(t,this.amountOfGridLines(null==n?void 0:n.axis))}seriesGreaterLength(t){return t.reduce((t,e)=>t>e.data.length?t:e.data.length,0)}getSeriePercentage(t,e){const{minValue:n,maxValue:r}=t,s=(e-n)/(r-n);return isNaN(s)?0:s}range(t,e=5){const{minValue:n,maxValue:r}=t,s=[],i=this.getGridLineArea(t,e);for(let o=n;o<=r;o=(10*o+10*i)/10)s.push(o);return s}verifyIfFloatOrInteger(t){const e="boolean"!=typeof t,n=t!==1/0,r=Number(t)===t&&t%1==0&&n,s=Number(t)===t&&t%1!=0&&n;return e&&r||e&&s}amountOfGridLines(t){var e;const n=null!==(e=null==t?void 0:t.gridLines)&&void 0!==e?e:5;return n&&n>=2&&n<=10?n:5}getAxisXLabelLongestValue(t,e){const n=t.every(t=>t.type===Rb.Line),r=this.calculateMinAndMaxValues(t,n),s=this.range(r,e);return this.getLongestData(s)}getGridLineArea(t,e){const n=this.getFractionFromInt(e-1),{minValue:r,maxValue:s}=t,i=n*(s-r)/100;return 0===i?1:i}getDomain(t,e){const n=Math[e](...t.map(t=>{if(Array.isArray(t.data))return Math[e](...t.data)}));return isNaN(n)?0:n}getFractionFromInt(t){return 1/t*100}getLongestData(t){return[...t].sort((t,e)=>e.toString().length-t.toString().length)[0]}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:function(){return new t},token:t,providedIn:"root"}),t})(),Nb=(()=>{class t{constructor(t,e,n){this.mathsService=t,this.renderer=e,this.elementRef=n,this.alignByTheCorners=!1,this.pointClick=new Ac,this.pointHover=new Ac,this.animate=!0,this.seriesPointsCoordinates=[],this._containerSize={},this._range={},this._series=[]}set range(t){t instanceof Object&&!(t instanceof Array)&&(this._range=t,this.seriePathPointsDefinition(this.containerSize,this._series,this._range))}get range(){return this._range}set containerSize(t){this._containerSize=t,this.seriePathPointsDefinition(this._containerSize,this.series,this.range)}get containerSize(){return this._containerSize}set series(t){const e=t.filter(t=>Array.isArray(t.data));e.length?(this._series=e,this.animate=!0,this.seriesLength=this.mathsService.seriesGreaterLength(this.series),this.chartType=this._series[0].type,this.seriePathPointsDefinition(this.containerSize,e,this.range)):this._series=[]}get series(){return this._series}onSeriePointClick(t){this.pointClick.emit(t)}trackBy(t){return t}getTooltipLabel(t,e,n){const r=e?`${e}: `:"",s=t.toString();return n||`${r}${s}`}svgPathCommand(){const t=this.firstValidItemFromSerieArray?"M":"L";return this.firstValidItemFromSerieArray=!1,t}xCoordinate(t,e){const n=this.alignByTheCorners?0:(e.svgWidth-e.axisXLabelWidth)/this.seriesLength/2,r=t/(this.alignByTheCorners?this.seriesLength-1:this.seriesLength),s=isNaN(r)?0:r;return Math.floor(e.axisXLabelWidth+n+(e.svgWidth-e.axisXLabelWidth)*s)}serieCategory(t,e=[]){var n;return null!==(n=e[t])&&void 0!==n?n:void 0}seriePathPointsDefinition(t,e,n){this.seriesPointsCoordinates=[],this.seriesPathsCoordinates=e.map(e=>{if(Array.isArray(e.data)){let r="",s=[];const i=e.color;return this.firstValidItemFromSerieArray=!0,e.data.forEach((o,a)=>{if(this.mathsService.verifyIfFloatOrInteger(o)){const c=this.svgPathCommand(),l=this.xCoordinate(a,t),u=this.yCoordinate(n,o,t),h=this.serieCategory(a,this.categories),d=e.label,p=this.getTooltipLabel(o,d,e.tooltip),f=this.chartType===Rb.Line;s=[...s,{category:h,label:d,tooltipLabel:p,data:o,xCoordinate:l,yCoordinate:u,color:i,isActive:f}],r+=` ${c}${l} ${u}`}}),r=this.verifyIfClosePath(r,e.data.length-1,n,0,t),this.seriesPointsCoordinates=[...this.seriesPointsCoordinates,s],{coordinates:r,color:i,isActive:!0}}})}verifyIfClosePath(t,e,n,r,s){const{axisXLabelWidth:i,svgWidth:o}=s;if(this.chartType===Rb.Area){const a=this.xCoordinate(e,s),c=this.yCoordinate(n,r,s);return`${t} ${a} ${c} L${Math.floor(this.alignByTheCorners?i:i+(o-i)/this.seriesLength/2)} ${c} Z`}return t}yCoordinate(t,e,n){const r=this.mathsService.getSeriePercentage(t,e);return Math.floor(n.svgPlottingAreaHeight-n.svgPlottingAreaHeight*r+8)}}return t.\u0275fac=function(e){return new(e||t)(go(Mb),go(ka),go(xa))},t.\u0275dir=Xt({type:t,viewQuery:function(t,e){if(1&t&&Hc(Dy,5),2&t){let t;Nc(t=Vc())&&(e.chartLine=t.first)}},inputs:{alignByTheCorners:["p-align-by-the-corners","alignByTheCorners"],range:["p-range","range"],containerSize:["p-container-size","containerSize"],series:["p-series","series"],categories:["p-categories","categories"],categoriesCoordinates:["p-categories-coordinates","categoriesCoordinates"],svgSpace:["p-svg-space","svgSpace"]},outputs:{pointClick:"p-point-click",pointHover:"p-point-hover"}}),t})(),Hb=(()=>{class t extends Nb{constructor(t,e,n){super(t,e,n),this.mathsService=t,this.renderer=e,this.elementRef=n}onEnter(t){this.applyActiveItem(this.seriesPathsCoordinates,t),this.initializeListener(t),this.activeTooltip=!0}onLeave(t){this.removeListener(),this.applyActiveItem(this.seriesPathsCoordinates),this.applyActiveItem(this.seriesPointsCoordinates[t],null)}onSeriePointHover(t){const e=Km(t,["relativeTo"]);this.pointHover.emit(e)}applyActiveItem(t,e){t.forEach((t,n)=>{t.isActive=void 0===e||e===n})}getMouseCoordinates(t){t.preventDefault();const{svgDomMatrix:e,svgPoint:n}=this.svgSpace;return n.x=t.clientX,n.y=t.clientY,n.matrixTransform(e)}initializeListener(t){let e;this.previousActiveSerieIndex=void 0,this.mouseMoveSubscription$=Td(this.elementRef.nativeElement,"mousemove").pipe(ry(10),bp(t=>e=this.getMouseCoordinates(t)),bd(()=>hd(this.verifyActiveArea(e)))).subscribe(e=>{void 0!==e&&this.applyActiveItem(this.seriesPointsCoordinates[t],e)})}removeListener(){this.mouseMoveSubscription$.unsubscribe()}verifyActiveArea(t){const{x:e}=t;if(this.currentActiveSerieIndex=this.categoriesCoordinates.findIndex((t,n)=>e>=t&&n===this.categoriesCoordinates.length-1||e>=t&&e<=this.categoriesCoordinates[n+1]),this.currentActiveSerieIndex>=0&&this.currentActiveSerieIndex!==this.previousActiveSerieIndex)return this.previousActiveSerieIndex=this.currentActiveSerieIndex,this.currentActiveSerieIndex}}return t.\u0275fac=function(e){return new(e||t)(go(Mb),go(ka),go(xa))},t.\u0275cmp=zt({type:t,selectors:[["","po-chart-area",""]],features:[Ji],attrs:Ey,decls:3,vars:2,consts:[["chartLine",""],[3,"class","mouseenter","mouseleave",4,"ngFor","ngForOf","ngForTrackBy"],[3,"mouseenter","mouseleave"],["po-chart-path","",3,"p-chart-line","p-animate","p-color","p-coordinates","p-is-active"],["po-chart-series-point","",3,"p-animate","p-chart-line","p-color","p-coordinates","p-is-active","p-relative-to","p-point-click","p-point-hover"]],template:function(t,e){1&t&&(on(),vo(0,"g",null,0),po(2,Sy,3,15,"g",1),bo()),2&t&&(zs(2),mo("ngForOf",e.seriesPathsCoordinates)("ngForTrackBy",e.trackBy))},directives:function(){return[eh,pC,fC]},encapsulation:2}),t})(),Vb=(()=>{class t{constructor(t){this.mathsService=t,this.alignByTheCorners=!1,this.categoriesCoordinates=new Ac,this.axisXLabels=[],this.axisYLabels=[],this.gridLines=5,this.seriesLength=0,this._categories=[],this._containerSize={},this._series=[]}set series(t){const e=t.filter(t=>Array.isArray(t.data));e.length?(this._series=e,this.seriesLength=this.mathsService.seriesGreaterLength(this.series),this.checkAxisOptions(this.axisOptions),this.setAxisXCoordinates(this.gridLines,this.seriesLength,this.containerSize,this.range,this.type),this.setAxisYCoordinates(this.gridLines,this.seriesLength,this.containerSize,this.range,this.type)):(this._series=[],this.cleanUpCoordinates())}get series(){return this._series}set categories(t){this._categories=t,this.type===Rb.Bar?this.setAxisXCoordinates(this.gridLines,this.seriesLength,this.containerSize,this.range,this.type):this.setAxisYCoordinates(this.gridLines,this.seriesLength,this.containerSize,this.range,this.type)}get categories(){return this._categories}set containerSize(t){this._containerSize=t,this.checkAxisOptions(this.axisOptions),this.setAxisXCoordinates(this.gridLines,this.seriesLength,this._containerSize,this.range,this.type),this.setAxisYCoordinates(this.gridLines,this.seriesLength,this._containerSize,this.range,this.type)}get containerSize(){return this._containerSize}set axisOptions(t){this._axisOptions=t,this.checkAxisOptions(this._axisOptions),this.type===Rb.Bar?this.setAxisYCoordinates(this.gridLines,this.seriesLength,this.containerSize,this.range,this.type):this.setAxisXCoordinates(this.gridLines,this.seriesLength,this.containerSize,this.range,this.type)}get axisOptions(){return this._axisOptions}setAxisXCoordinates(t,e,n,r,s){e&&this.calculateAxisXLabelCoordinates(s===Rb.Bar?e:t,n,r,s);const i=this.amountOfAxisXLines(e,t,s);this.calculateAxisXCoordinates(i,n,r)}amountOfAxisXLines(t,e,n){return n===Rb.Bar?t<=1?2:t+1:0===e?1:e}setAxisYCoordinates(t,e,n,r,s){const i=s===Rb.Bar?t:e;e&&this.calculateAxisYLabelCoordinates(i,n,r,s),s===Rb.Area&&this.getCategoriesRangeForMouseMove(i,n),this.calculateAxisYCoordinates(i,n,s,r)}calculateAxisXCoordinates(t,e,n){const r=e.axisXLabelWidth,s=e.svgWidth;let i,o=[...Array(t)].map((n,i)=>{const o=this.calculateAxisXCoordinateY(t,e,i);return{coordinates:`M${r} ${o} L${s}, ${o}`}});this.type!==Rb.Bar&&n.minValue<0&&!this.axisXLabels.includes("0")&&(i=this.getCoordinatesRelatedToZero(e,n,r,s),o=[...o,i]),this.axisXCoordinates=o}getCoordinatesRelatedToZero(t,e,n,r,s=!1){const i=s?Rb.Bar:Rb.Column,o=this.axisCoordinatesForValueZero(e,0,t,s),a={column:{startX:n,endX:r,startY:o,endY:o},bar:{startX:o,endX:o,startY:n,endY:r}};return{coordinates:`M${a[i].startX} ${a[i].startY} L${a[i].endX} ${a[i].endY}`}}axisCoordinatesForValueZero(t,e,n,r){const{axisXLabelWidth:s,svgWidth:i,svgPlottingAreaHeight:o}=n,a=this.mathsService.getSeriePercentage(t,e);return Math.floor(r?s+(i-s)*a:o-o*a+8)}calculateAxisXLabelCoordinates(t,e,n,r){this.axisXLabels=this.getAxisXLabels(r,n,t),this.axisXLabelCoordinates=[...Array(t)].map((n,s)=>({label:this.axisXLabels[s],xCoordinate:this.calculateAxisXLabelXCoordinate(e.axisXLabelWidth),yCoordinate:this.calculateAxisXLabelYCoordinate(t,e,r,s)}))}calculateAxisYCoordinates(t,e,n,r){const s=e.svgPlottingAreaHeight+8;let i,o=[...Array(0===t||n===Rb.Bar?t:t+1)].map((n,r)=>{const i=this.calculateAxisYCoordinateX(e,t,r);return{coordinates:`M${i} 8 L${i}, ${s}`}});n===Rb.Bar&&r.minValue<0&&!this.axisYLabels.includes("0")&&(i=this.getCoordinatesRelatedToZero(e,r,8,s,!0),o=[...o,i]),this.axisYCoordinates=[...o]}calculateAxisYLabelCoordinates(t,e,n,r){this.axisYLabels=this.getAxisYLabels(r,n,t),this.axisYLabelCoordinates=[...Array(t)].map((n,s)=>({label:this.axisYLabels[s],xCoordinate:this.getAxisXCoordinates(e,t,r,s),yCoordinate:this.calculateAxisYLabelYCoordinate(e)}))}calculateAxisXLabelXCoordinate(t){return t-8}calculateAxisXLabelYCoordinate(t,e,n,r){const s=r/(n===Rb.Bar?t:t-1);return n!==Rb.Bar?e.svgPlottingAreaHeight-e.svgPlottingAreaHeight*s+8:e.svgPlottingAreaHeight-e.svgPlottingAreaHeight/t/2-e.svgPlottingAreaHeight*s+8}calculateAxisXCoordinateY(t,e,n){return e.svgPlottingAreaHeight-e.svgPlottingAreaHeight*(n/(t-1))+8}calculateAxisYLabelYCoordinate(t){return t.svgHeight-8}centeredInCategoryArea(t,e,n,r){const s=r/(n===Rb.Bar?e-1:e);return n===Rb.Bar?Math.round(t.axisXLabelWidth+(t.svgWidth-t.axisXLabelWidth)*s):Math.round(t.axisXLabelWidth+(t.svgWidth-t.axisXLabelWidth)/e/2+(t.svgWidth-t.axisXLabelWidth)*s)}calculateAxisYCoordinateX(t,e,n,r=!1){const s=n/(this.alignByTheCorners?e-1:e);return Math.round(t.axisXLabelWidth+(t.svgWidth-t.axisXLabelWidth)*(s===1/0?0:s)-(this.alignByTheCorners&&r?(t.svgWidth-t.axisXLabelWidth)/(e-1)/2:0))}checkAxisOptions(t={}){this.gridLines=t.gridLines&&this.isValidGridLinesLengthOption(t.gridLines)?t.gridLines:5}cleanUpCoordinates(){this.axisXCoordinates=[],this.axisYCoordinates=[],this.axisXLabelCoordinates=[],this.axisYLabelCoordinates=[],this.seriesLength=0}getAxisXCoordinates(t,e,n,r){return this.alignByTheCorners?this.calculateAxisYCoordinateX(t,e,r):this.centeredInCategoryArea(t,e,n,r)}getCategoriesRangeForMouseMove(t,e){const n=[...Array(t)].map((n,r)=>this.calculateAxisYCoordinateX(e,t,r,!0));this.categoriesCoordinates.emit(n)}isValidGridLinesLengthOption(t){return t>=2&&t<=10}getAxisXLabels(t,e,n){return t===Rb.Bar?this.formatCategoriesLabels(n,this.categories).reverse():this.generateAverageOfLabels(e,n)}getAxisYLabels(t,e,n){return t===Rb.Bar?this.generateAverageOfLabels(e,n):this.formatCategoriesLabels(n,this.categories)}formatCategoriesLabels(t,e=[]){return[...Array(t)].map((t,n)=>{var r;return null!==(r=e[n])&&void 0!==r?r:"-"})}generateAverageOfLabels(t,e){return this.mathsService.range(t,e).map(t=>t.toFixed(t%1&&2).replace(/\.00$/,"").replace(/\-0$/,0).toString())}}return t.\u0275fac=function(e){return new(e||t)(go(Mb))},t.\u0275cmp=zt({type:t,selectors:[["","po-chart-axis",""]],inputs:{alignByTheCorners:["p-align-by-the-corners","alignByTheCorners"],series:["p-series","series"],categories:["p-categories","categories"],containerSize:["p-container-size","containerSize"],axisOptions:["p-options","axisOptions"],type:["p-type","type"],range:["p-range","range"]},outputs:{categoriesCoordinates:"p-categories-coordinates"},attrs:xy,decls:2,vars:6,consts:[["po-chart-axis-path","",3,"p-axis-x-coordinates","p-axis-y-coordinates"],["po-chart-axis-label","",3,"p-align-by-the-corners","p-axis-x-label-coordinates","p-axis-y-label-coordinates","p-type"]],template:function(t,e){1&t&&(on(),Co(0,"g",0),Co(1,"g",1)),2&t&&(mo("p-axis-x-coordinates",e.axisXCoordinates)("p-axis-y-coordinates",e.axisYCoordinates),zs(1),mo("p-align-by-the-corners",e.alignByTheCorners)("p-axis-x-label-coordinates",e.axisXLabelCoordinates)("p-axis-y-label-coordinates",e.axisYLabelCoordinates)("p-type",e.type))},directives:function(){return[zb,$b]},encapsulation:2}),t})(),zb=(()=>{class t{constructor(){}trackBy(t){return t}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=zt({type:t,selectors:[["","po-chart-axis-path",""]],inputs:{axisXCoordinates:["p-axis-x-coordinates","axisXCoordinates"],axisYCoordinates:["p-axis-y-coordinates","axisYCoordinates"]},attrs:Ay,decls:4,vars:4,consts:[["class","po-chart-axis-path",4,"ngFor","ngForOf","ngForTrackBy"],[1,"po-chart-axis-path"]],template:function(t,e){1&t&&(on(),vo(0,"g"),po(1,Ty,1,1,"path",0),bo(),vo(2,"g"),po(3,ky,1,1,"path",0),bo()),2&t&&(zs(1),mo("ngForOf",e.axisXCoordinates)("ngForTrackBy",e.trackBy),zs(2),mo("ngForOf",e.axisYCoordinates)("ngForTrackBy",e.trackBy))},directives:[eh],encapsulation:2}),t})(),$b=(()=>{class t{constructor(){this.alignByTheCorners=!1}trackBy(t){return t}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=zt({type:t,selectors:[["","po-chart-axis-label",""]],inputs:{alignByTheCorners:["p-align-by-the-corners","alignByTheCorners"],axisXLabelCoordinates:["p-axis-x-label-coordinates","axisXLabelCoordinates"],axisYLabelCoordinates:["p-axis-y-label-coordinates","axisYLabelCoordinates"],type:["p-type","type"]},attrs:Fy,decls:4,vars:4,consts:[["class","po-chart-axis-x-label","dominant-baseline","middle",4,"ngFor","ngForOf","ngForTrackBy"],["class","po-chart-axis-y-label",3,"po-chart-centered-label",4,"ngFor","ngForOf","ngForTrackBy"],["dominant-baseline","middle",1,"po-chart-axis-x-label"],[1,"po-chart-axis-y-label"]],template:function(t,e){1&t&&(on(),vo(0,"g"),po(1,Iy,2,3,"text",0),bo(),vo(2,"g"),po(3,Oy,2,5,"text",1),bo()),2&t&&(zs(1),mo("ngForOf",e.axisXLabelCoordinates)("ngForTrackBy",e.trackBy),zs(2),mo("ngForOf",e.axisYLabelCoordinates)("ngForTrackBy",e.trackBy))},directives:[eh],encapsulation:2}),t})(),Ub=(()=>{class t{constructor(t){this.mathsService=t,this.barClick=new Ac,this.barHover=new Ac,this._containerSize={},this._range={},this._series=[]}set range(t){t instanceof Object&&!(t instanceof Array)&&(this._range=t,this.calculateSeriesPathsCoordinates(this.containerSize,this._series,this._range))}get range(){return this._range}set containerSize(t){this._containerSize=t,this.calculateSeriesPathsCoordinates(this._containerSize,this.series,this.range)}get containerSize(){return this._containerSize}set series(t){const e=t.filter(t=>Array.isArray(t.data));e.length?(this._series=e,this.seriesGreaterLength=this.mathsService.seriesGreaterLength(this.series),this.calculateSeriesPathsCoordinates(this.containerSize,e,this.range)):this._series=[]}get series(){return this._series}onSerieBarClick(t){this.barClick.emit(t)}onSerieBarHover(t){this.barHover.emit(t)}trackBy(t){return t}calculateSeriesPathsCoordinates(t,e,n){this.seriesPathsCoordinates=e.map((e,r)=>{if(Array.isArray(e.data)){let s=[];return e.data.forEach((i,o)=>{if(this.mathsService.verifyIfFloatOrInteger(i)){const a=this.barCoordinates(r,o,t,n,i),c=this.serieCategory(o,this.categories),l=e.label,u=e.color,h=this.getTooltipLabel(i,l,e.tooltip);s=[...s,{category:c,color:u,label:l,tooltipLabel:h,data:i,coordinates:a}]}}),s}})}getTooltipLabel(t,e,n){const r=e?`${e}: `:"",s=t.toString();return n||`${r}${s}`}serieCategory(t,e=[]){var n;return null!==(n=e[t])&&void 0!==n?n:void 0}}return t.\u0275fac=function(e){return new(e||t)(go(Mb))},t.\u0275dir=Xt({type:t,inputs:{range:["p-range","range"],containerSize:["p-container-size","containerSize"],series:["p-series","series"],categories:["p-categories","categories"]},outputs:{barClick:"p-bar-click",barHover:"p-bar-hover"}}),t})(),Wb=(()=>{class t extends Ub{constructor(t){super(t),this.mathsService=t,this.tooltipPosition="right"}barCoordinates(t,e,n,r,s){const{svgPlottingAreaWidth:i,barHeight:o,spaceBetweenBars:a}=this.calculateElementsMeasurements(n),{x1:c,x2:l}=this.xCoordinates(r,i,n.axisXLabelWidth,n.svgWidth,s),{y1:u,y2:h}=this.yCoordinates(t,e,n.svgPlottingAreaHeight,o,a);return["M",c,h,"L",l,h,"L",l,u,"L",c,u,"z"].join(" ")}calculateElementsMeasurements(t){const{svgWidth:e,svgPlottingAreaHeight:n,axisXLabelWidth:r}=t,s=n/this.seriesGreaterLength/(this.series.length+2),i=this.series.length>1?s/(this.series.length+2):0;return{svgPlottingAreaWidth:e-r,barHeight:s-i*(this.series.length-1)/(this.series.length+2),spaceBetweenBars:i}}xCoordinates(t,e,n,r,s){const{minValue:i}=t,o=n+(r-n)*this.mathsService.getSeriePercentage(t,i<0?0:i),a=this.mathsService.getSeriePercentage(t,s);return{x1:o,x2:Math.round(e*a+n)}}yCoordinates(t,e,n,r,s){const i=Math.round(8+n*(e/this.seriesGreaterLength)+r+r*t+s*t);return{y1:i,y2:Math.round(i+r)}}}return t.\u0275fac=function(e){return new(e||t)(go(Mb))},t.\u0275cmp=zt({type:t,selectors:[["","po-chart-bar",""]],features:[Ji],attrs:Py,decls:2,vars:2,consts:[[3,"class",4,"ngFor","ngForOf","ngForTrackBy"],["po-chart-bar-path","",3,"p-color","p-coordinates","p-tooltip-position","p-bar-click","p-bar-hover"]],template:function(t,e){1&t&&(on(),vo(0,"g"),po(1,Ry,2,6,"g",0),bo()),2&t&&(zs(1),mo("ngForOf",e.seriesPathsCoordinates)("ngForTrackBy",e.trackBy))},directives:function(){return[eh,dC]},encapsulation:2}),t})(),Gb=(()=>{class t extends Ub{constructor(t){super(t),this.mathsService=t,this.tooltipPosition="top"}barCoordinates(t,e,n,r,s){const{svgWidth:i,axisXLabelWidth:o,svgPlottingAreaHeight:a}=n,{chartBarPlotArea:c,barWidth:l,spaceBetweenBars:u}=this.calculateElementsMeasurements(i,o),{x1:h,x2:d}=this.xCoordinates(t,e,c,l,u,o),{y1:p,y2:f}=this.yCoordinates(r,a,s);return["M",h,f,"L",d,f,"L",d,p,"L",h,p,"z"].join(" ")}calculateElementsMeasurements(t,e){const n=t-e,r=n/this.seriesGreaterLength/(this.series.length+2),s=this.series.length>1?r/(this.series.length+2):0;return{chartBarPlotArea:n,barWidth:r-s*(this.series.length-1)/(this.series.length+2),spaceBetweenBars:s}}xCoordinates(t,e,n,r,s,i){const o=Math.round(i+n*(e/this.seriesGreaterLength)+r+r*t+s*t);return{x1:o,x2:Math.round(o+r)}}yCoordinates(t,e,n){const{minValue:r}=t,s=this.mathsService.getSeriePercentage(t,r<0?0:r),i=Math.round(e-e*s+8),o=this.mathsService.getSeriePercentage(t,n);return{y1:i,y2:Math.round(e-e*o+8)}}}return t.\u0275fac=function(e){return new(e||t)(go(Mb))},t.\u0275cmp=zt({type:t,selectors:[["","po-chart-column",""]],features:[Ji],attrs:Ly,decls:2,vars:2,consts:[[3,"class",4,"ngFor","ngForOf","ngForTrackBy"],["po-chart-bar-path","",3,"p-color","p-coordinates","p-tooltip-position","p-bar-click","p-bar-hover"]],template:function(t,e){1&t&&(on(),vo(0,"g"),po(1,By,2,6,"g",0),bo()),2&t&&(zs(1),mo("ngForOf",e.seriesPathsCoordinates)("ngForTrackBy",e.trackBy))},directives:function(){return[eh,dC]},encapsulation:2}),t})();const qb=[["#29B6C5"],["#0C6C94","#29B6C5"],["#0C6C94","#29B6C5","#C9ECF0"],["#0C6C94","#0B92B4","#29B6C5","#94DAE2"],["#0C6C94","#0B92B4","#29B6C5","#94DAE2","#C9ECF0"],["#0C6C94","#00A5C5","#0082A8","#31628D","#364473","#32285C"],["#0C6C94","#00AACB","#018DAE","#277099","#325783","#35426E","#32285D"],["#0C6C94","#00AFCE","#0194B6","#117FA2","#0088AC","#23789F","#2B6992","#32285C"],["#0C6C94","#00BAD5","#00A7C7","#0197B8","#0088AC","#23789F","#2B6992","#315C87","#32285C"],["#0C6C94","#00BAD5","#00A7C7","#0197B8","#0088AC","#23789F","#2B6992","#315C87","#364E7C","#32285C"],["#0C6C94","#00BAD5","#00A7C7","#0197B8","#0088AC","#23789F","#2B6992","#315C87","#364E7C","#36436F","#32285C"],["#0C6C94","#00BAD5","#00A7C7","#0197B8","#0088AC","#23789F","#2B6992","#315C87","#364E7C","#36436F","#333565","#32285C"]],Xb=["#94DAE2","#C9ECF0"];var Yb=function(t){return t.Color01="color-01",t.Color02="color-02",t.Color03="color-03",t.Color04="color-04",t.Color05="color-05",t.Color06="color-06",t.Color07="color-07",t.Color08="color-08",t.Color09="color-09",t.Color10="color-10",t.Color11="color-11",t.Color12="color-12",t}({});const Zb=Object.values(Yb);let Qb=(()=>{class t{constructor(){this.defaultColors=[]}getColors(t){return this.verifyIfHasColorProperty(t),t.map((t,e)=>{if(t.color)return t.color=this.verifyIfIsPoColorPalette(t.color),t;const n=this.defaultColors[e];return Object.assign(Object.assign({},t),{color:n})})}verifyIfHasColorProperty(t){t.every(t=>{var e;return t.hasOwnProperty("color")&&(null===(e=t.color)||void 0===e?void 0:e.length)>0})||(this.defaultColors=this.getDefaultColors(t.length))}verifyIfIsPoColorPalette(t){return Zb.includes(t)?`po-${t}`:t}getDefaultColors(t){if(1===t)return qb[0];const e=qb.length;if(t>e){const n=t/e;let r=qb[e-1];for(let t=0;t<=n;t++)r=r.concat(qb[e]);return r}return qb[t-1]}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:function(){return new t},token:t,providedIn:"root"}),t})(),Kb=(()=>{class t{constructor(t){this.colorService=t,this.seriesClick=new Ac,this.seriesHover=new Ac,this.chartSeries=[]}set height(t){const e=function(t,e){const n=parseInt(t,10),r=parseInt(void 0,10);return n||0===n?n:r||0===r?r:void 0}(t);let n;n=Jv(t,"number")?e<=200?200:e:this.setDefaultHeight(),this._height=n,this.getSvgContainerSize(),this.rebuildComponentRef()}get height(){return this._height||this.setDefaultHeight()}set type(t){this._type=Object.values(Rb).includes(t)?t:void 0,this.rebuildComponentRef()}get type(){return this._type}set series(t){this._series=t||[],Array.isArray(this._series)&&this._series.length?this.setTypeDefault(this._series[0]):(this.transformObjectToArrayObject(this.series),this.rebuildComponentRef())}get series(){return this._series}set categories(t){Array.isArray(t)&&(this._categories=t)}get categories(){return this._categories}set options(t){t instanceof Object&&!(t instanceof Array)&&(this._options=t,this._options.hasOwnProperty("legend")&&"boolean"==typeof this._options.legend&&this.getSvgContainerSize())}get options(){return this._options}get isTypeCircular(){return this.defaultType===Rb.Pie||this.defaultType===Rb.Donut}ngOnChanges(t){const e=Array.isArray(this.series)&&this.series.length>0;(t.series&&e||t.type&&e||t.categories&&e)&&this.validateSerieAndAddType(this.series),(t.type&&!this.isTypeCircular||t.categories&&!this.isTypeCircular)&&(this.svgContainerSize=Object.assign(Object.assign({},this.svgContainerSize),{axisXLabelWidth:this.calculateAxisXLabelArea()}))}onSeriesClick(t){this.seriesClick.emit(t)}onSeriesHover(t){this.seriesHover.emit(t)}setDefaultHeight(){return this.type===Rb.Gauge?200:400}transformObjectToArrayObject(t){this.chartSeries="object"==typeof t&&Object.keys(t).length?[Object.assign({},t)]:[]}setTypeDefault(t){var e;const n=null!==(e=t.data)&&void 0!==e?e:t.value,r=Object.values(Rb).includes(t.type)?t.type:void 0;this.defaultType=r||(Array.isArray(n)?Rb.Column:Rb.Pie)}validateSerieAndAddType(t){const e=t.filter(t=>this.isTypeCircular?"number"==typeof t.data||"number"==typeof t.value:Array.isArray(t.data));this.chartSeries=this.appendType(this.appendColors(e))}appendColors(t){return this.colorService.getColors(t)}appendType(t){return t.map((t,e)=>(0===e&&(this.chartType=Object.values(Rb).includes(t.type)?t.type:this.type||this.defaultType),Object.assign(Object.assign({},t),{type:t.type||this.chartType})))}}return t.\u0275fac=function(e){return new(e||t)(go(Qb))},t.\u0275dir=Xt({type:t,inputs:{height:["p-height","height"],type:["p-type","type"],series:["p-series","series"],categories:["p-categories","categories"],options:["p-options","options"],title:["p-title","title"]},outputs:{seriesClick:"p-series-click",seriesHover:"p-series-hover"},features:[ce]}),t})(),Jb=(()=>{class t{constructor(){}calculateSVGContainerMeasurements(t=0,e=0,n=0,r=0){const s=this.svgWidth(e),i=this.center(e),o=this.svgHeight(t,n,r);return{svgWidth:s,svgHeight:o,centerX:i,centerY:this.center(o),svgPlottingAreaHeight:this.svgPlottingAreaHeight(o)}}svgWidth(t){const e=t-48;return e>0?e:0}center(t){return t/2}svgHeight(t,e,n){const r=t-e-n-48;return r<=0?0:r}svgPlottingAreaHeight(t){return t-24-8}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:function(){return new t},token:t,providedIn:"root"}),t})();const tC=2*Math.PI/Math.floor(25),eC=-Math.PI,nC=-Math.PI/2,rC=.06;let sC=(()=>{class t{constructor(){this.innerRadius=0,this.onSerieClick=new D,this.onSerieHover=new D,this._series=[]}get isChartGaugeType(){return this.type===Rb.Gauge}calculateSVGContainerDimensions(t,e,n){const r=this.height-e-n-48;this.svgHeight=r<=0?0:r,this.centerX=t/2}calculateTotalValue(){this.totalValue=this.type===Rb.Gauge?100:this.series.reduce((t,e)=>t+(e.data?e.data:e.value),0)}set series(t){this._series=this.getSeriesWithValue(t)}get series(){return this._series}getSeriesWithValue(t){return t}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Xt({type:t,viewQuery:function(t,e){if(1&t&&(Hc(jy,7),Hc(My,7)),2&t){let t;Nc(t=Vc())&&(e.chartBody=t.first),Nc(t=Vc())&&(e.svgContainer=t.first)}}}),t})(),iC=(()=>{class t extends sC{constructor(t,e,n){super(),this.el=t,this.ngZone=e,this.renderer=n,this.chartItemStartAngle=nC,this.windowResizeEmitter=new D,this.chartItemsEndAngleList=[],this.svgPathElementsList=[],this.svgTextElementsList=[]}ngOnDestroy(){this.removeWindowResizeListener(),this.removeWindowScrollListener(),this.animationRunning=!1}ngOnInit(){this.chartInitSetup(),this.setEventListeners()}removeTooltip(){this.tooltipElement&&this.renderer.addClass(this.tooltipElement,"po-invisible")}drawPath(t,e,n){const r=Math.sin(e),s=Math.cos(e),i=Math.sin(n),o=Math.cos(n),a=this.centerX+s*this.centerX,c=this.centerX+r*this.centerX,l=["M",a,c,"A",this.centerX,this.centerX,0,"0,1",this.centerX+o*this.centerX,this.centerX+i*this.centerX,"A",1,1,0,"0,1",this.centerX+o*this.innerRadius,this.centerX+i*this.innerRadius,"A",this.innerRadius,this.innerRadius,0,"0,0",this.centerX+s*this.innerRadius,this.centerX+r*this.innerRadius,"A",1,1,0,"0,1",a,c,"Z"].join(" ");return t.setAttribute("d",l)}getSeriesWithValue(t){const e=[];return t.forEach((t,n)=>{var r;(null!==(r=t.data)&&void 0!==r?r:t.value)>0&&e.push(Object.assign(Object.assign({},t),{color:this.colors[n]}))}),e}animationSetup(){this.chartItemEndAngle=this.chartItemsEndAngleList[0],this.animationRunning=!0,this.drawPathInit()}appendGaugeBackgroundPathElement(t){const e=this.renderer.createElement("svg:path","svg");this.renderer.setAttribute(e,"class","po-chart-gauge-base-path"),t.appendChild(e),this.renderer.appendChild(this.svgElement,t)}calculateAngleRadians(){this.series.forEach((t,e)=>{var n;const r=null!==(n=t.data)&&void 0!==n?n:t.value;this.chartItemsEndAngleList[e]=this.calculateEndAngle(r,this.totalValue)})}calculateCurrentEndAngle(t){return this.chartItemStartAngle+t>this.chartItemStartAngle+this.chartItemEndAngle?this.chartItemStartAngle+this.chartItemEndAngle-1e-4:this.chartItemStartAngle+t}calculateEndAngle(t,e){const n=t/e*(2*Math.PI);return this.isChartGaugeType?n/2:n}calculateSVGDimensions(){this.calculateSVGContainerDimensions(this.chartWrapper,this.chartHeader,this.chartLegend),this.innerRadius=this.setInnerRadius(this.type)}changeTooltipPosition(t){this.tooltipElement&&this.tooltipElement.classList.contains("po-invisible")&&this.showTooltip();const e=this.setTooltipPositions(t);this.renderer.setStyle(this.tooltipElement,"left",`${e.left}px`),this.renderer.setStyle(this.tooltipElement,"top",`${e.top}px`)}chartInitSetup(){this.calculateSVGDimensions(),this.calculateTotalValue(),this.calculateAngleRadians(),this.createSVGElements(),this.animationSetup()}checkingIfScrollsWithPoPage(){const t=document.getElementsByClassName("po-page-content");return t.length?t[0]:window}createPath(t,e){const n=this.renderer.createElement("svg:path","svg");this.renderer.setAttribute(n,"class","po-path-item"),this.renderer.setAttribute(n,"fill",t.color),this.setElementAttributes(n,t),e.appendChild(n),this.renderer.appendChild(this.svgElement,e),this.svgPathElementsList.push(n)}createPaths(){const t=this.renderer.createElement("svg:g","svg");this.isChartGaugeType&&(this.appendGaugeBackgroundPathElement(t),this.isSerieValueEqualZero())||this.series.forEach(e=>this.createPath(e,t))}createText(t){const e=t.value,n=this.renderer.createElement("svg:g","svg"),r=this.renderer.createElement("svg:text","svg"),s=this.getFontSize(),i=this.getTextColor(t.color);r.textContent=this.getPercentValue(e,this.totalValue)+"%",this.renderer.setAttribute(r,"class","po-path-item"),this.renderer.setAttribute(r,"fill",i),this.renderer.setAttribute(r,"font-size",s),this.renderer.setAttribute(r,"fill-opacity","0"),this.setElementAttributes(r,t),this.renderer.appendChild(n,r),this.renderer.appendChild(this.svgElement,n),this.svgTextElementsList.push(r)}createTexts(){this.type===Rb.Donut&&this.series.forEach(t=>this.createText(t))}createSVGElements(){const t=this.isChartGaugeType?this.centerX+this.centerX*rC:this.chartWrapper,e=this.isChartGaugeType?"xMidYMax":"xMidYMin";this.svgElement=this.renderer.createElement("svg:svg","svg"),this.renderer.setAttribute(this.svgElement,"viewBox",`0 0 ${this.chartWrapper} ${t}`),this.renderer.setAttribute(this.svgElement,"preserveAspectRatio",`${e} meet`),this.renderer.setAttribute(this.svgElement,"class","po-chart-svg-element"),this.renderer.setAttribute(this.svgElement,"width",`${this.centerX}`),this.renderer.setAttribute(this.svgElement,"height",`${this.svgHeight}`),this.svgContainer.nativeElement.appendChild(this.svgElement),this.createPaths(),this.createTexts()}drawPathInit(){this.animationRunning&&this.ngZone.runOutsideAngular(()=>this.drawSeries())}drawSeries(t=0,e=0){t===this.svgPathElementsList.length||(e>this.chartItemEndAngle?(this.chartItemStartAngle=this.chartItemStartAngle+this.chartItemEndAngle,t++,this.chartItemEndAngle=this.chartItemsEndAngleList[t],e=0):(this.drawPath(this.svgPathElementsList[t],this.chartItemStartAngle,this.calculateCurrentEndAngle(e+=tC)),this.setTextProperties(this.svgTextElementsList[t],this.chartItemStartAngle,this.calculateCurrentEndAngle(e))),window.requestAnimationFrame(this.drawSeries.bind(this,t,e)))}emitEventOnEnter(t){this.onSerieHover.next(t)}getFontSize(){return`${(.04*this.chartWrapper).toFixed(0)}px`}getPercentValue(t,e){const n=eb(t/e*100,2);return String(n).replace(".",",")}getTextColor(t){return Xb.includes(t)?"#000000":"#ffffff"}getTooltipValue(t){return this.type===Rb.Pie?t.toString():this.getPercentValue(t,this.totalValue)+"%"}isSerieValueEqualZero(){return this.series.length&&0===this.series[0].value}onMouseClick(){let t;t=Km(this.series[0],["color"]),this.onSerieClick.next(t)}onMouseEnter(t){let e;const n=Km(this.series[0],["color"]);this.chartElementDescription=t.target.getAttributeNS(null,"data-tooltip-category"),e=n,this.emitEventOnEnter(e)}onWindowResize(){this.calculateSVGDimensions(),this.renderer.setAttribute(this.svgElement,"width",`${this.centerX}`),this.renderer.setAttribute(this.svgElement,"height",`${this.svgHeight}`),this.windowResizeEmitter.next()}removeWindowResizeListener(){this.windowResizeListener&&this.windowResizeListener()}removeWindowScrollListener(){this.windowScrollListener&&this.windowScrollListener()}setEventListeners(){let t=this.el.nativeElement.querySelectorAll(".po-path-item");t=Array.from(t),t.forEach(t=>{this.renderer.listen(t,"click",this.onMouseClick.bind(this)),this.renderer.listen(t,"mouseenter",this.onMouseEnter.bind(this)),this.isChartGaugeType||(this.renderer.listen(t,"mousemove",this.changeTooltipPosition.bind(this)),this.renderer.listen(t,"mouseleave",this.removeTooltip.bind(this)))}),this.windowResizeListener=this.renderer.listen(window,"resize",this.onWindowResize.bind(this)),this.windowScrollListener=this.renderer.listen(this.checkingIfScrollsWithPoPage(),"scroll",this.removeTooltip.bind(this))}setInnerRadius(t){let e;switch(t){case Rb.Donut:e=.27;break;case Rb.Gauge:e=rC;break;case Rb.Pie:return 0}return this.centerX-this.centerX*e}setTextProperties(t,e,n){if(this.type===Rb.Donut&&t.getClientRects().length){const r=(e+n)/2,s=t.getBBox(),i=s.width/2,o=s.height/2,a=this.innerRadius+(this.centerX-this.innerRadius)/2,c=a*Math.cos(r)+this.centerX-i,l=a*Math.sin(r)+this.centerX+o/2;t.setAttribute("x",c),t.setAttribute("y",l),t.setAttribute("fill-opacity","1")}}setTooltipPositions(t){return{left:t.clientX-this.tooltipElement.offsetWidth/2,top:t.clientY-this.tooltipElement.offsetHeight-8}}setElementAttributes(t,e){var n,r;const{tooltip:s}=e,i=null!==(n=e.data)&&void 0!==n?n:e.value,o=null!==(r=e.label)&&void 0!==r?r:e.description||e.category;if(this.renderer.setAttribute(t,"data-tooltip-value",`${i}`),this.isChartGaugeType)this.renderer.setAttribute(t,"data-tooltip-description",o);else{const e=this.getTooltipValue(i);this.renderer.setAttribute(t,"data-tooltip-category",o),this.renderer.setAttribute(t,"data-tooltip-text",s||`${o}: ${e}`)}}showTooltip(){this.renderer.removeClass(this.tooltipElement,"po-invisible")}}return t.\u0275fac=function(e){return new(e||t)(go(xa),go(pl),go(ka))},t.\u0275dir=Xt({type:t,features:[Ji]}),t})(),oC=(()=>{class t{constructor(t){this.changeDetection=t}set gaugeWidth(t){this._gaugeWidth=t,this.checkTextDescriptionSize()}get gaugeWidth(){return this._gaugeWidth}set serie(t){t?(this.serieValueConverted=this.convertValueInPercentFormat(t.value),this._serie=Object.assign({},t)):this._serie=void 0}get serie(){return this._serie}get hasSerieDescription(){return this.serie&&this.serie.description}get hasSerieValue(){return this.serie&&this.serie.value>=0}get maxDescriptionWidth(){return{"max-width":this.gaugeWidth-this.gaugeWidth*rC*2*2+"px"}}ngAfterViewInit(){this.checkTextDescriptionSize()}checkTextDescriptionSize(){this.descriptionElement&&(setTimeout(()=>{this.tooltip=this.isEllipsisActive()}),this.changeDetection.detectChanges())}convertValueInPercentFormat(t){return`${String(eb(t,1)).replace(".",",")}%`}isEllipsisActive(){return this.descriptionElement.nativeElement.offsetWidth<this.descriptionElement.nativeElement.scrollWidth?this.serie.description:void 0}}return t.\u0275fac=function(e){return new(e||t)(go(Ka))},t.\u0275cmp=zt({type:t,selectors:[["po-chart-gauge-text-content"]],viewQuery:function(t,e){if(1&t&&Hc(Ny,5,xa),2&t){let t;Nc(t=Vc())&&(e.descriptionElement=t.first)}},inputs:{gaugeWidth:["p-gauge-width","gaugeWidth"],serie:["p-serie","serie"]},decls:1,vars:1,consts:[["class","po-chart-gauge-text-content","tabindex","0",3,"ngStyle",4,"ngIf"],["tabindex","0",1,"po-chart-gauge-text-content",3,"ngStyle"],[1,"po-chart-gauge-text-value"],["class","po-chart-gauge-text-description",3,"p-tooltip",4,"ngIf"],[1,"po-chart-gauge-text-description",3,"p-tooltip"],["description",""]],template:function(t,e){1&t&&po(0,Vy,4,3,"div",0),2&t&&mo("ngIf",e.hasSerieValue)},directives:[rh,oh,Tb],encapsulation:2,changeDetection:0}),t})(),aC=(()=>{class t extends iC{constructor(t,e,n,r,s){super(n,r,s),this.changeDetection=t,this.componentFactoryResolver=e,this.chartItemStartAngle=eC,this._series=[]}set series(t){this._series=this.getGaugeSerie(t)}get series(){return this._series}ngAfterViewInit(){this.drawBasePath(),this.createComponent()}createComponent(){const t=this.componentFactoryResolver.resolveComponentFactory(oC),e=this.svgContainerRef.createComponent(t).instance;e.serie=this.series.length&&this.series[0],e.gaugeWidth=this.getGaugeBaseWidth(),this.resizeListenerSubscription(e)}checkGaugeValueLimits(t){return t<=0?0:t>=100?100:t}drawBasePath(){const t=this.el.nativeElement.querySelector(".po-chart-gauge-base-path");this.drawPath(t,this.chartItemStartAngle,0)}getGaugeBaseWidth(){const t=this.el.nativeElement.querySelector(".po-chart-gauge-base-path");if(t)return t.getBoundingClientRect().width}getGaugeSerie(t=[]){const[e]=t;return e&&"object"==typeof e?[Object.assign(Object.assign({},e),{color:this.colors[0],value:this.checkGaugeValueLimits(e.value)})]:[]}resizeListenerSubscription(t){this.windowResizeEmitter.subscribe(()=>{t.gaugeWidth=this.getGaugeBaseWidth(),this.changeDetection.detectChanges()})}}return t.\u0275fac=function(e){return new(e||t)(go(Ka),go(_a),go(xa),go(pl),go(ka))},t.\u0275cmp=zt({type:t,selectors:[["po-chart-gauge"]],viewQuery:function(t,e){if(1&t&&Hc(My,7,uc),2&t){let t;Nc(t=Vc())&&(e.svgContainerRef=t.first)}},features:[Ji],decls:5,vars:1,consts:[[1,"po-chart-body"],["chartBody",""],[1,"po-chart-svg-container"],["svgContainer",""],["class","po-chart-tooltip po-tooltip po-invisible",4,"ngIf"],[1,"po-chart-tooltip","po-tooltip","po-invisible"],["tooltipElement",""],[1,"po-tooltip-arrow","po-arrow-bottom"],[1,"po-tooltip-content"]],template:function(t,e){1&t&&(vo(0,"div",0,1),Co(2,"div",2,3),po(4,zy,5,1,"div",4),bo()),2&t&&(zs(4),mo("ngIf",!e.isChartGaugeType))},directives:[rh],encapsulation:2}),t})(),cC=(()=>{class t extends Kb{constructor(t,e,n,r,s,i,o){super(t),this.colorService=t,this.changeDetector=e,this.containerService=n,this.componentFactoryResolver=r,this.elementRef=s,this.mathsService=i,this.renderer=o,this.calculatedComponentRefElement=!1,this.calculatedSvgContainerElement=!1,this.initialized=!1,this.windowResizeListener=new D,this.subscription=new h,this.mappings={[Rb.Gauge]:aC},this.onResize=()=>{this.getSvgContainerSize(),this.windowResizeListener.next()}}get isChartGaugeType(){return this.type===Rb.Gauge}ngAfterViewInit(){this.initialized=!0,this.getSvgContainerSize()}ngDoCheck(){const t=this.chartWrapper.nativeElement.offsetWidth,e=this.getComponentType(this.type);t&&this.initialized&&(e||this.calculatedSvgContainerElement?e&&!this.calculatedComponentRefElement&&(this.dynamicComponentSetting(),this.calculatedComponentRefElement=!0):(this.getSvgContainerSize(),this.calculatedSvgContainerElement=!0))}ngOnDestroy(){this.subscription.unsubscribe(),this.removeWindowResizeListener()}resizeAction(){this.getSvgContainerSize(),this.windowResizeListener.next(),this.changeDetector.detectChanges()}ngOnInit(){this.getSvgContainerSize()}rebuildComponentRef(){this.componentRef&&(this.componentRef.destroy(),this.isChartGaugeType&&this.dynamicComponentSetting())}calculateAxisXLabelArea(){return this.getAxisXLabelArea(this.mathsService.getLongestDataValue(this.chartType===Rb.Bar?this.categories:this.chartSeries,this.chartType,this.options))}getSvgContainerSize(){let t;const{chartHeaderHeight:e,chartLegendHeight:n,chartWrapperWidth:r}=this.getChartMeasurements();this.isTypeCircular||(t=this.calculateAxisXLabelArea()),this.svgContainerSize=Object.assign(Object.assign({},this.containerService.calculateSVGContainerMeasurements(this.height,r,e,n)),{axisXLabelWidth:t})}chartLegendHeight(t){return t?t.nativeElement.offsetHeight:0}createComponent(){const t=this.getComponentType(this.type),e=this.componentFactoryResolver.resolveComponentFactory(t);this.componentRef=this.chartContainer.createComponent(e);const n=this.componentRef.instance;return this.setComponentRefProperties(n),n}dynamicComponentSetting(){const t=this.createComponent();this.setResizeListenerSubscribe(t),this.changeDetector.detectChanges(),this.setClickSubscribe(t),this.setHoverSubscribe(t)}getAxisXLabelArea(t){const e=this.renderer.createElement("span");this.renderer.addClass(e,"po-chart-axis-x-label"),e.innerHTML=t,this.renderer.appendChild(this.elementRef.nativeElement,e);const n=Math.ceil(e.offsetWidth)+8;return this.renderer.removeChild(this.elementRef.nativeElement,e),n>56?n:56}getComponentType(t){return this.mappings[t]}getChartMeasurements(){return{chartWrapperWidth:this.chartWrapper.nativeElement.offsetWidth,chartHeaderHeight:this.chartHeader.nativeElement.offsetHeight,chartLegendHeight:this.chartLegendHeight(this.chartLegend)}}removeWindowResizeListener(){this.onResize&&(this.onResize=()=>{})}setComponentRefProperties(t){const{chartHeaderHeight:e,chartLegendHeight:n,chartWrapperWidth:r}=this.getChartMeasurements();t.chartHeader=e,t.chartLegend=n,t.chartWrapper=r,t.colors=qb[0],t.height=this.height,t.type=this.type,t.series=this.chartSeries||[]}setClickSubscribe(t){this.subscription.add(t.onSerieClick.subscribe(t=>{this.onSeriesClick(t)}))}setHoverSubscribe(t){this.subscription.add(t.onSerieHover.subscribe(t=>{this.onSeriesHover(t)}))}setResizeListenerSubscribe(t){this.subscription.add(this.windowResizeListener.subscribe(()=>{const e=this.getChartMeasurements();t.chartWrapper=e.chartWrapperWidth,t.chartHeader=e.chartHeaderHeight,t.chartLegend=e.chartLegendHeight}))}}return t.\u0275fac=function(e){return new(e||t)(go(Qb),go(Ka),go(Jb),go(_a),go(xa),go(Mb),go(ka))},t.\u0275cmp=zt({type:t,selectors:[["po-chart"]],viewQuery:function(t,e){if(1&t&&(Hc($y,7,uc),Hc(Uy,7),Hc(Wy,5,xa),Hc(Gy,7)),2&t){let t;Nc(t=Vc())&&(e.chartContainer=t.first),Nc(t=Vc())&&(e.chartHeader=t.first),Nc(t=Vc())&&(e.chartLegend=t.first),Nc(t=Vc())&&(e.chartWrapper=t.first)}},hostBindings:function(t,e){1&t&&xo("resize",function(){return e.onResize()},!1,Jr)},features:[Ji],decls:12,vars:3,consts:[[1,"po-chart-wrapper",3,"p-resize-observer"],["chartWrapper",""],[1,"po-chart-header"],["chartHeader",""],[1,"po-chart-title"],[3,"p-options","p-type","p-series","p-categories","p-container-size","p-serie-click","p-serie-hover",4,"ngIf"],["chartContainer",""],[4,"ngIf"],["chartLegendGroup",""],[3,"p-options","p-type","p-series","p-categories","p-container-size","p-serie-click","p-serie-hover"],[4,"ngTemplateOutlet"],[3,"p-series","p-type"],["chartLegend",""]],template:function(t,e){1&t&&(vo(0,"div",0,1),xo("p-resize-observer",function(){return e.resizeAction()}),vo(2,"div",2,3),vo(4,"div",4),Jo(5),bo(),bo(),po(6,qy,1,5,"po-chart-container",5),po(7,Xy,0,0,"ng-template",null,6,Wc),po(9,Zy,2,1,"div",7),bo(),po(10,Qy,2,2,"ng-template",null,8,Wc)),2&t&&(zs(5),ta(e.title),zs(1),mo("ngIf",!e.isChartGaugeType),zs(3),mo("ngIf",!e.isChartGaugeType&&!1!==(null==e.options?null:e.options.legend)))},directives:function(){return[wC,rh,lC,ah,uC]},encapsulation:2}),t})(),lC=(()=>{class t{constructor(t){this.mathsService=t,this.serieClick=new Ac,this.serieHover=new Ac,this._series=[]}set options(t){t instanceof Object&&!(t instanceof Array)&&(this._options=t,this.verifyAxisOptions(this._options))}get options(){return this._options}set series(t){this._series=t,this.setAlignByTheCorners(this._series),this.setSeriesByType(this._series),this.setRange(this._series,this.options)}get series(){return this._series}get isTypeCircular(){return this.type===Rb.Pie||this.type===Rb.Donut}ngOnChanges(t){(t.type||t.containerSize)&&(this.setViewBox(),this.setSvgSpace())}getCategoriesCoordinates(t){this.categoriesCoordinates=t}onSerieClick(t){this.serieClick.emit(t)}onSerieHover(t){this.serieHover.emit(t)}getRange(t,e={}){var n,r,s;const i=this.mathsService.calculateMinAndMaxValues(t),o={minValue:!(null===(n=e.axis)||void 0===n?void 0:n.minRange)&&i.minValue>0?0:(null===(r=e.axis)||void 0===r?void 0:r.minRange)<i.minValue?e.axis.minRange:i.minValue,maxValue:(null===(s=e.axis)||void 0===s?void 0:s.maxRange)>i.maxValue?e.axis.maxRange:i.maxValue};return Object.assign(Object.assign({},i),o)}setSvgSpace(){var t;const e=this.svgELement.nativeElement.createSVGPoint(),n=null===(t=this.svgELement.nativeElement.getScreenCTM())||void 0===t?void 0:t.inverse();this.svgSpace={svgPoint:e,svgDomMatrix:n}}setAlignByTheCorners(t){this.alignByTheCorners=t.every(t=>t.type===Rb.Area||t.type===Rb.Bar)}setRange(t,e={}){this.isTypeCircular||(this.range=this.getRange(t,e))}setSeriesByType(t){this.seriesByType={[Rb.Area]:t.filter(t=>t.type===Rb.Area),[Rb.Column]:t.filter(t=>t.type===Rb.Column),[Rb.Bar]:t.filter(t=>t.type===Rb.Bar),[Rb.Line]:t.filter(t=>t.type===Rb.Line),[Rb.Donut]:t.filter(t=>t.type===Rb.Donut),[Rb.Pie]:t.filter(t=>t.type===Rb.Pie)}}setViewBox(){const{svgWidth:t,svgHeight:e}=this.containerSize;this.viewBox=`1 -1 ${this.isTypeCircular?e:t} ${this.containerSize.svgHeight}`}verifyAxisOptions(t){!this.isTypeCircular&&t.hasOwnProperty("axis")&&(this.range=this.getRange(this.series,this.options),this.axisOptions=Object.assign(Object.assign({},this.axisOptions),t.axis))}}return t.\u0275fac=function(e){return new(e||t)(go(Mb))},t.\u0275cmp=zt({type:t,selectors:[["po-chart-container"]],viewQuery:function(t,e){if(1&t&&Hc(Ky,7),2&t){let t;Nc(t=Vc())&&(e.svgELement=t.first)}},inputs:{options:["p-options","options"],series:["p-series","series"],categories:["p-categories","categories"],type:["p-type","type"],containerSize:["p-container-size","containerSize"]},outputs:{serieClick:"p-serie-click",serieHover:"p-serie-hover"},features:[ce],decls:9,vars:10,consts:[["preserveAspectRatio","xMidYMin meet",1,"po-chart-svg-element"],["svgELement",""],["po-chart-axis","",3,"p-align-by-the-corners","p-range","p-type","p-series","p-container-size","p-options","p-categories","p-categories-coordinates",4,"ngIf"],["po-chart-area","",3,"p-align-by-the-corners","p-svg-space","p-categories","p-categories-coordinates","p-range","p-series","p-container-size","p-bar-hover","p-bar-click",4,"ngIf"],["po-chart-column","",3,"p-categories","p-range","p-series","p-container-size","p-bar-hover","p-bar-click",4,"ngIf"],["po-chart-line","",3,"p-categories","p-range","p-series","p-container-size","p-point-hover","p-point-click",4,"ngIf"],["po-chart-bar","",3,"p-categories","p-range","p-series","p-container-size","p-bar-hover","p-bar-click",4,"ngIf"],["po-chart-pie","",3,"p-series","p-container-size","p-circular-hover","p-circular-click",4,"ngIf"],["po-chart-donut","",3,"p-options","p-series","p-container-size","p-circular-hover","p-circular-click",4,"ngIf"],["po-chart-axis","",3,"p-align-by-the-corners","p-range","p-type","p-series","p-container-size","p-options","p-categories","p-categories-coordinates"],["po-chart-area","",3,"p-align-by-the-corners","p-svg-space","p-categories","p-categories-coordinates","p-range","p-series","p-container-size","p-bar-hover","p-bar-click"],["po-chart-column","",3,"p-categories","p-range","p-series","p-container-size","p-bar-hover","p-bar-click"],["po-chart-line","",3,"p-categories","p-range","p-series","p-container-size","p-point-hover","p-point-click"],["po-chart-bar","",3,"p-categories","p-range","p-series","p-container-size","p-bar-hover","p-bar-click"],["po-chart-pie","",3,"p-series","p-container-size","p-circular-hover","p-circular-click"],["po-chart-donut","",3,"p-options","p-series","p-container-size","p-circular-hover","p-circular-click"]],template:function(t,e){1&t&&(on(),vo(0,"svg",0,1),po(2,Jy,1,7,"g",2),po(3,tv,1,7,"g",3),po(4,ev,1,4,"g",4),po(5,nv,1,4,"g",5),po(6,rv,1,4,"g",6),po(7,sv,1,2,"g",7),po(8,iv,1,3,"g",8),bo()),2&t&&(uo("viewBox",e.viewBox)("width",e.containerSize.svgWidth)("height",e.containerSize.svgHeight),zs(2),mo("ngIf",!e.isTypeCircular),zs(1),mo("ngIf",("area"===e.type||"line"===e.type||"column"===e.type)&&e.seriesByType.area.length),zs(1),mo("ngIf",("area"===e.type||"line"===e.type||"column"===e.type)&&e.seriesByType.column.length),zs(1),mo("ngIf",("area"===e.type||"line"===e.type||"column"===e.type)&&e.seriesByType.line.length),zs(1),mo("ngIf","bar"===e.type),zs(1),mo("ngIf","pie"===e.type),zs(1),mo("ngIf","donut"===e.type))},directives:function(){return[rh,Vb,Hb,Gb,hC,Wb,mC,yC]},encapsulation:2}),t})(),uC=(()=>{class t{set series(t){this._series=t}get series(){return this._series}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=zt({type:t,selectors:[["po-chart-legend"]],inputs:{series:["p-series","series"],type:["p-type","type"]},decls:3,vars:1,consts:[[1,"po-chart-legend"],[1,"po-chart-legend-container"],["class","po-chart-legend-item",4,"ngFor","ngForOf"],[1,"po-chart-legend-item"],[1,"po-chart-legend-square"],[1,"po-chart-legend-text"]],template:function(t,e){1&t&&(vo(0,"div",0),vo(1,"div",1),po(2,ov,4,5,"div",2),bo(),bo()),2&t&&(zs(2),mo("ngForOf",e.series))},directives:[eh],encapsulation:2,changeDetection:0}),t})(),hC=(()=>{class t extends Nb{constructor(t,e,n){super(t,e,n),this.mathsService=t,this.renderer=e,this.elementRef=n}onEnter(t){return null}onLeave(t){return null}onSeriePointHover(t){const{relativeTo:e}=t,n=Km(t,["relativeTo"]);this.reorderSVGGroup(e),this.pointHover.emit(n)}reorderSVGGroup(t){const e=this.elementRef.nativeElement.querySelectorAll(`.${t}`);this.animate=!1,this.renderer.appendChild(this.chartLine.nativeElement,e[0])}}return t.\u0275fac=function(e){return new(e||t)(go(Mb),go(ka),go(xa))},t.\u0275cmp=zt({type:t,selectors:[["","po-chart-line",""]],features:[Ji],attrs:av,decls:3,vars:2,consts:[["chartLine",""],[3,"class","mouseenter","mouseleave",4,"ngFor","ngForOf","ngForTrackBy"],[3,"mouseenter","mouseleave"],["po-chart-path","",3,"p-chart-line","p-animate","p-color","p-coordinates","p-is-active"],["po-chart-series-point","",3,"p-animate","p-chart-line","p-color","p-coordinates","p-is-active","p-relative-to","p-point-click","p-point-hover"]],template:function(t,e){1&t&&(on(),vo(0,"g",null,0),po(2,cv,3,15,"g",1),bo()),2&t&&(zs(2),mo("ngForOf",e.seriesPathsCoordinates)("ngForTrackBy",e.trackBy))},directives:function(){return[eh,pC,fC]},encapsulation:2}),t})(),dC=(()=>{class t{constructor(){this.barClick=new Ac,this.barHover=new Ac}trackBy(t){return t}onClick(t){this.barClick.emit({label:t.label,data:t.data,category:t.category})}onMouseEnter(t){this.barHover.emit({label:t.label,data:t.data,category:t.category})}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=zt({type:t,selectors:[["","po-chart-bar-path",""]],inputs:{color:["p-color","color"],coordinates:["p-coordinates","coordinates"],tooltipPosition:["p-tooltip-position","tooltipPosition"]},outputs:{barClick:"p-bar-click",barHover:"p-bar-hover"},attrs:lv,decls:1,vars:2,consts:[["class","po-chart-bar-path",3,"p-tooltip","p-tooltip-position","p-append-in-body","class","mouseenter","click",4,"ngFor","ngForOf","ngForTrackBy"],[1,"po-chart-bar-path",3,"p-tooltip","p-tooltip-position","p-append-in-body","mouseenter","click"]],template:function(t,e){1&t&&po(0,uv,1,7,"path",0),2&t&&mo("ngForOf",e.coordinates)("ngForTrackBy",e.trackBy)},directives:[eh,Tb],encapsulation:2}),t})(),pC=(()=>{class t{constructor(t){this.changeDetector=t,this.isActive=!0,this.chartLine=!1}set color(t){this._color=t.includes("po-color")&&this.chartLine?t.replace("po-color","po-border-color"):t}get color(){return this._color}set animate(t){this._animate=t,this.animate||(this.pathWidth=0)}get animate(){return this._animate}ngAfterViewInit(){tb()||this.pathAnimation()}pathAnimation(){this.pathWidth=this.chartPath.nativeElement.getTotalLength(),this.changeDetector.detectChanges(),setTimeout(this.preventsAnimatingAgain.bind(this),700)}preventsAnimatingAgain(){this.pathWidth=0}}return t.\u0275fac=function(e){return new(e||t)(go(Ka))},t.\u0275cmp=zt({type:t,selectors:[["","po-chart-path",""]],viewQuery:function(t,e){if(1&t&&Hc(hv,7),2&t){let t;Nc(t=Vc())&&(e.chartPath=t.first)}},inputs:{isActive:["p-is-active","isActive"],chartLine:["p-chart-line","chartLine"],color:["p-color","color"],animate:["p-animate","animate"],coordinates:["p-coordinates","coordinates"]},attrs:dv,decls:2,vars:11,consts:[[1,"po-chart-path"],["chartPath",""]],template:function(t,e){1&t&&(on(),Co(0,"path",0,1)),2&t&&(Vo(null!=e.color&&e.color.includes("po-border-color")||null!=e.color&&e.color.includes("po-color")?e.color:""),Ho("po-chart-active-path",e.isActive)("po-chart-line-path",e.chartLine),uo("fill",e.chartLine?"none":e.color)("stroke-dasharray",e.pathWidth)("stroke-dashoffset",e.pathWidth)("stroke",e.chartLine?e.color:"")("d",e.coordinates))},encapsulation:2}),Jm([vb()],t.prototype,"isActive",void 0),Jm([vb()],t.prototype,"chartLine",void 0),t})(),fC=(()=>{class t{constructor(t,e){this.renderer=t,this.elementRef=e,this.chartLine=!1,this.pointClick=new Ac,this.pointHover=new Ac,this.radius=5,this._coordinates=[],this.animationState=!0}set color(t){this.strokeColor=t.includes("po-color")?t.replace("po-color","po-border-color"):t,this._color=t}get color(){return this._color}set coordinates(t){this._coordinates=t,this.coordinates$=this.displayPointsWithDelay(this._coordinates)}get coordinates(){return this._coordinates}trackBy(t){return t}onClick(t){this.pointClick.emit({label:t.label,data:t.data,category:t.category})}onMouseEnter(t,e){this.setPointAttribute(t.target,!0),this.pointHover.emit(Object.assign({relativeTo:this.relativeTo},{label:e.label,data:e.data,category:e.category}))}onMouseLeave(t){this.setPointAttribute(t.target,!1)}displayPointsWithDelay(t){if(this.animationState&&!tb()){const e=700/t.length;return B(t).pipe(op((t,n)=>{return Od(0!==n&&this.animate?e:0).pipe((r=t,t=>t.lift(new ay(r))));var r}),Qd((t,e)=>t.concat(e),[]),bp(()=>this.animationState=!1))}return B([t])}setPointAttribute(t,e){this.renderer.setAttribute(t,"r",e?10..toString():5..toString()),this.color.includes("po-color")?this.renderer.setAttribute(t,"class",e?`${this.strokeColor} ${this.color}`:`po-chart-line-point po-chart-active-point ${this.strokeColor}`):this.renderer[e?"setStyle":"removeStyle"](t,"fill",e?this.color:void 0)}}return t.\u0275fac=function(e){return new(e||t)(go(ka),go(xa))},t.\u0275cmp=zt({type:t,selectors:[["","po-chart-series-point",""]],inputs:{chartLine:["p-chart-line","chartLine"],color:["p-color","color"],coordinates:["p-coordinates","coordinates"],animate:["p-animate","animate"],isActive:["p-is-active","isActive"],relativeTo:["p-relative-to","relativeTo"]},outputs:{pointClick:"p-point-click",pointHover:"p-point-hover"},attrs:pv,decls:2,vars:4,consts:[["p-tooltip-position","top","class","po-chart-line-point",3,"p-tooltip","p-append-in-body","p-display-tooltip","class","po-chart-active-point","click","mouseenter","mouseleave",4,"ngFor","ngForOf","ngForTrackBy"],["p-tooltip-position","top",1,"po-chart-line-point",3,"p-tooltip","p-append-in-body","p-display-tooltip","click","mouseenter","mouseleave"]],template:function(t,e){1&t&&(po(0,fv,1,11,"circle",0),function(t,e){const n=Oe();let r;n.firstCreatePass?(r=function(t,e){if(e)for(let n=e.length-1;n>=0;n--){const r=e[n];if(t===r.name)return r}throw new at("302","The pipe 'async' could not be found!")}("async",n.pipeRegistry),n.data[21]=r,r.onDestroy&&(n.destroyHooks||(n.destroyHooks=[])).push(21,r.onDestroy)):r=n.data[21];const s=r.factory||(r.factory=oe(r.type)),i=_t(go);try{const t=En(!1),e=s();En(t),function(t,e,n,r){21>=t.data.length&&(t.data[21]=null,t.blueprint[21]=null),e[21]=r}(n,Ie(),0,e)}finally{_t(i)}}()),2&t&&mo("ngForOf",Sc(1,2,e.coordinates$))("ngForTrackBy",e.trackBy)},directives:[eh,Tb],pipes:[ph],encapsulation:2}),Jm([vb()],t.prototype,"isActive",void 0),Jm([vb()],t.prototype,"chartLine",void 0),t})(),gC=(()=>{class t{constructor(t,e){this.ngZone=t,this.changeDetector=e,this.circularClick=new Ac,this.circularHover=new Ac,this.canDisplayLabels=!1,this.seriesLabels=[],this.showLabels=!1}set options(t){isNaN(null==t?void 0:t.innerRadius)||(this._options=t,this.innerRadius=Math.min(Math.max(this._options.innerRadius,0),100))}get options(){return this._options}set series(t){this._series=t,this.animate=!0}get series(){return this._series}onSerieClick(t){this.circularClick.emit(t)}onSerieHover(t){this.circularHover.emit(t)}calculateAngle(t,e){return t/e*(2*Math.PI)}drawSeries(t=[],e){this.seriesList=[],this.showLabels=!1,this.totalValue=this.calculateTotalValue(t),this.totalValue&&this.totalValue>0&&(this.seriesList=this.validateSeries(t),this.changeDetector.detectChanges(),this.seriesList.length&&this.svgPaths&&this.initDrawPaths(this.seriesList,this.totalValue,e))}calculateTotalValue(t){return t.reduce((t,e)=>{const n=e.data?e.data:e.value;return t+(n>0?n:0)},0)}calculateSerieCoordinates(t,e,n){let r,s=Lb;t.forEach((t,i)=>{r=s,s=r+this.calculateAngle(t.data,e)-Bb;const o=this.calculateCoordinates(n,r,s);this.svgPaths.toArray()[i].applyCoordinates(o),this.showLabels=this.canDisplayLabels})}calculateCoordinatesWithAnimation(t,e,n,r,s,i=0,o=0){const a=i>s;if(o===t.length)this.animate=!1;else{if(a)this.setSerieLabelCoordinates(o),i=0,r+=s,s=++o<t.length?this.calculateAngle(t[o].data,e):void 0;else{const t=this.calculateCurrentEndAngle(i+=jb,r,s),e=this.calculateCoordinates(n,r,t);this.svgPaths.toArray()[o].applyCoordinates(e)}window.requestAnimationFrame(this.calculateCoordinatesWithAnimation.bind(this,t,e,n,r,s,i,o))}}calculateCurrentEndAngle(t,e,n){return e+t>e+n?e+n-Bb:e+t}initDrawPaths(t,e,n){if(this.animate){const r=Lb,s=this.calculateAngle(t[0].data,e);this.ngZone.runOutsideAngular(()=>this.calculateCoordinatesWithAnimation(t,e,n,r,s))}else this.calculateSerieCoordinates(t,e,n)}setSerieLabelCoordinates(t){this.svgLabels.toArray().length&&this.svgLabels.toArray()[t].applyCoordinates(this.seriesLabels[t])}validateSeries(t){return t.reduce((t,e)=>{var n;const r=null!==(n=e.data)&&void 0!==n?n:e.value;if(r&&r>0){const n=e.color,s=e.label,i=this.getTooltipLabel(r,s,e.tooltip);t=[...t,{data:r,color:n,label:s,tooltipLabel:i}]}return t},[])}}return t.\u0275fac=function(e){return new(e||t)(go(pl),go(Ka))},t.\u0275dir=Xt({type:t,viewQuery:function(t,e){if(1&t&&(Hc(gv,5),Hc(mv,5)),2&t){let t;Nc(t=Vc())&&(e.svgPaths=t),Nc(t=Vc())&&(e.svgLabels=t)}},inputs:{options:["p-options","options"],series:["p-series","series"],containerSize:["p-container-size","containerSize"]},outputs:{circularClick:"p-circular-click",circularHover:"p-circular-hover"}}),t})(),mC=(()=>{class t extends gC{constructor(t,e){super(t,e)}ngOnChanges(t){(t.series||t.containerSize)&&this.drawSeries(this.series,this.containerSize.svgHeight)}calculateCoordinates(t,e,n){const r=t/2,s=Math.sin(e),i=Math.cos(e),o=Math.sin(n),a=Math.cos(n);return["M",r+i*r,r+s*r,"A",r,r,0,n-e>Math.PI?"1,1":"0,1",r+a*r,r+o*r,"L",r,r,"Z"].join(" ")}getTooltipLabel(t,e,n){const r=e?`${e}: `:"",s=t.toString();return n||`${r}${s}`}}return t.\u0275fac=function(e){return new(e||t)(go(pl),go(Ka))},t.\u0275cmp=zt({type:t,selectors:[["","po-chart-pie",""]],features:[Ji,ce],attrs:yv,decls:3,vars:2,consts:[[4,"ngFor","ngForOf"],[4,"ngIf"],["po-chart-circular-path","",3,"p-serie","p-on-click","p-on-hover"],["svgPaths",""],["po-chart-circular-label","",3,"p-serie","p-show-label"],["svgLabels",""]],template:function(t,e){1&t&&(on(),vo(0,"g"),po(1,vv,3,2,"g",0),po(2,Cv,2,1,"g",1),bo()),2&t&&(zs(1),mo("ngForOf",e.seriesList),zs(1),mo("ngIf",e.canDisplayLabels))},directives:function(){return[eh,rh,bC,vC]},encapsulation:2}),t})(),yC=(()=>{class t extends gC{constructor(t,e){super(t,e),this.poChartBlackColor="#000000",this.poChartWhiteColor="#ffffff"}ngOnChanges(t){(t.series||t.containerSize||t.options)&&(this.drawSeries(this.series,this.containerSize.svgHeight),this.applySeriesLabels(this.seriesList,this.containerSize.svgHeight))}calculateCoordinates(t,e,n){const r=t/2,s=this.getInnerRadius(r),i=Math.sin(e),o=Math.cos(e),a=Math.sin(n),c=Math.cos(n),l=r+o*r,u=r+i*r,h=r+c*r,d=r+a*r,p=r+o*s,f=r+i*s,g=r+c*s,m=r+a*s,y=n-e>Math.PI;return this.verifyDisplayLabels(r,s),["M",l,u,"A",r,r,0,y?"1,1":"0,1",h,d,"L",g,m,"A",s,s,0,y?"1,0":"0,0",p,f,"Z"].join(" ")}getTooltipLabel(t,e,n){const r=e?`${e}: `:"",s=this.getPercentValue(t,this.totalValue)+"%";return n||`${r}${s}`}applySeriesLabels(t,e){let n=Lb,r=Lb;this.seriesLabels=t.map(t=>{n=r,r=n+this.calculateAngle(t.data,this.totalValue);const s=this.getPercentValue(t.data,this.totalValue)+"% ",i=this.getTextColor(t.color),o=this.calculateLabelCoordinates(e,n,r);return Object.assign(Object.assign({},o),{label:s,color:i})})}calculateLabelCoordinates(t,e,n){const r=t/2,s=this.getInnerRadius(r),i=(e+n)/2,o=s+(r-s)/2;return{xCoordinate:o*Math.cos(i)+r,yCoordinate:o*Math.sin(i)+r}}getInnerRadius(t){return this.innerRadius>=0?this.innerRadius/100*t:t-40}getPercentValue(t,e){const n=eb(t/e*100,2);return String(n).replace(".",",")}getTextColor(t){return Xb.includes(t)?this.poChartBlackColor:this.poChartWhiteColor}verifyDisplayLabels(t,e){this.canDisplayLabels=t-e>=t-(t-40)}}return t.\u0275fac=function(e){return new(e||t)(go(pl),go(Ka))},t.\u0275cmp=zt({type:t,selectors:[["","po-chart-donut",""]],features:[Ji,ce],attrs:wv,decls:3,vars:2,consts:[[4,"ngFor","ngForOf"],[4,"ngIf"],["po-chart-circular-path","",3,"p-serie","p-on-click","p-on-hover"],["svgPaths",""],["po-chart-circular-label","",3,"p-serie","p-show-label"],["svgLabels",""]],template:function(t,e){1&t&&(on(),vo(0,"g"),po(1,_v,3,2,"g",0),po(2,Ev,2,1,"g",1),bo()),2&t&&(zs(1),mo("ngForOf",e.seriesList),zs(1),mo("ngIf",e.canDisplayLabels))},directives:function(){return[eh,rh,bC,vC]},encapsulation:2}),t})(),vC=(()=>{class t{constructor(t,e){this.changeDetection=t,this.renderer=e}applyCoordinates(t){this.renderer.setAttribute(this.svgLabel.nativeElement,"x",t.xCoordinate.toString()),this.renderer.setAttribute(this.svgLabel.nativeElement,"y",t.yCoordinate.toString()),this.showLabel=!0,this.changeDetection.detectChanges()}}return t.\u0275fac=function(e){return new(e||t)(go(Ka),go(ka))},t.\u0275cmp=zt({type:t,selectors:[["","po-chart-circular-label",""]],viewQuery:function(t,e){if(1&t&&Hc(Sv,5,xa),2&t){let t;Nc(t=Vc())&&(e.svgLabel=t.first)}},inputs:{showLabel:["p-show-label","showLabel"],serie:["p-serie","serie"]},attrs:xv,decls:3,vars:6,consts:[["dominant-baseline","middle",1,"po-chart-label"],["svgLabel",""]],template:function(t,e){1&t&&(on(),vo(0,"text",0,1),Jo(2),bo()),2&t&&(Ho("po-invisible",!e.showLabel),uo("fill",null==e.serie?null:e.serie.color)("x",null==e.serie?null:e.serie.xCoordinate)("y",null==e.serie?null:e.serie.yCoordinate),zs(2),ea(" ",null==e.serie?null:e.serie.label,"\n"))},encapsulation:2}),t})(),bC=(()=>{class t{constructor(t){this.renderer=t,this.onClick=new Ac,this.onHover=new Ac}applyCoordinates(t){this.renderer.setAttribute(this.svgPath.nativeElement,"d",t)}onMouseClick(){const{label:t,data:e}=this.serie;this.onClick.emit({label:t,data:e})}onMouseEnter(){const{label:t,data:e}=this.serie;this.onHover.emit({label:t,data:e})}}return t.\u0275fac=function(e){return new(e||t)(go(ka))},t.\u0275cmp=zt({type:t,selectors:[["","po-chart-circular-path",""]],viewQuery:function(t,e){if(1&t&&Hc(Av,5,xa),2&t){let t;Nc(t=Vc())&&(e.svgPath=t.first)}},inputs:{serie:["p-serie","serie"]},outputs:{onClick:"p-on-click",onHover:"p-on-hover"},attrs:Tv,decls:2,vars:4,consts:[[1,"po-path-item",3,"p-chart-tooltip","click","mouseenter"],["svgPath",""]],template:function(t,e){1&t&&(on(),vo(0,"path",0,1),xo("click",function(){return e.onMouseClick()})("mouseenter",function(){return e.onMouseEnter()}),bo()),2&t&&(Vo(null!=e.serie&&e.serie.color.includes("po-color")?e.serie.color:""),mo("p-chart-tooltip",null==e.serie?null:e.serie.tooltipLabel),uo("fill",null==e.serie?null:e.serie.color))},directives:function(){return[CC]},encapsulation:2}),t})(),CC=(()=>{class t{constructor(t,e){this.elementRef=t,this.renderer=e}onMouseEnter(t){this.tooltipElement?this.showTooltip():this.createTooltip(),this.tooltipPosition(t),this.lastTooltipText=this.tooltip}onMouseLeave(){this.hideTooltip()}onMouseMove(t){this.tooltipPosition(t)}calculateTooltipPosition(t){return{left:t.clientX-this.tooltipElement.offsetWidth/2,top:t.clientY-this.tooltipElement.offsetHeight-12}}createTooltip(){const t=this.elementRef.nativeElement.closest(".po-chart-wrapper");this.tooltipElement=this.renderer.createElement("div"),this.renderer.addClass(this.tooltipElement,"po-chart-tooltip"),this.renderer.addClass(this.tooltipElement,"po-tooltip");const e=this.renderer.createElement("div");this.renderer.addClass(e,"po-tooltip-arrow"),this.renderer.addClass(e,"po-arrow-bottom"),this.tooltipText=this.renderer.createElement("p"),this.renderer.addClass(this.tooltipText,"po-tooltip-content"),this.tooltipTextContent=this.renderer.createText(this.tooltip),this.renderer.appendChild(this.tooltipText,this.tooltipTextContent),this.renderer.appendChild(this.tooltipElement,e),this.renderer.appendChild(this.tooltipElement,this.tooltipText),this.renderer.appendChild(t,this.tooltipElement)}hideTooltip(){this.renderer.addClass(this.tooltipElement,"po-invisible")}showTooltip(){this.renderer.removeClass(this.tooltipElement,"po-invisible"),this.updatetooltipTextContent()}tooltipPosition(t){const e=this.calculateTooltipPosition(t);this.renderer.setStyle(this.tooltipElement,"left",`${e.left}px`),this.renderer.setStyle(this.tooltipElement,"top",`${e.top}px`)}updatetooltipTextContent(){this.lastTooltipText!==this.tooltip&&(this.renderer.removeChild(this.tooltipText,this.tooltipTextContent),this.tooltipTextContent=this.renderer.createText(this.tooltip),this.renderer.appendChild(this.tooltipText,this.tooltipTextContent))}}return t.\u0275fac=function(e){return new(e||t)(go(xa),go(ka))},t.\u0275dir=Xt({type:t,selectors:[["","p-chart-tooltip",""]],hostBindings:function(t,e){1&t&&xo("mouseenter",function(t){return e.onMouseEnter(t)})("mouseleave",function(){return e.onMouseLeave()})("mousemove",function(t){return e.onMouseMove(t)})},inputs:{tooltip:["p-chart-tooltip","tooltip"]}}),t})(),wC=(()=>{class t{constructor(t){this.elementRef=t,this.resize=new Ac,this.subscription=new h,this.chartWidthResize$=new D}ngOnDestroy(){this.isResizeObserverSupported&&(this.observer.unobserve(this.elementRef.nativeElement),this.subscription.unsubscribe())}ngOnInit(){this.isResizeObserverSupported&&(this.observer=new window.ResizeObserver(()=>{this.chartWidthResize$.next()}),this.observer.observe(this.elementRef.nativeElement),this.subscription.add(this.chartWidthResize$.pipe(ry(20)).subscribe(t=>{this.resize.emit()})))}get isResizeObserverSupported(){return"function"==typeof window.ResizeObserver}}return t.\u0275fac=function(e){return new(e||t)(go(xa))},t.\u0275dir=Xt({type:t,selectors:[["","p-resize-observer",""]],outputs:{resize:"p-resize-observer"}}),t})(),_C=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh,kb]]}),t})(),DC=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh]]}),t})(),EC=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh]]}),t})(),SC=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh,EC]]}),t})(),xC=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh]]}),t})(),AC=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[],imports:[[wh,ab]]}),t})(),TC=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh,AC]]}),t})(),kC=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh]]}),t})(),FC=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh,ny,kC]]}),t})(),IC=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh]]}),t})(),OC=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh,ny,kC,IC,Pb]]}),t})();const PC={en:{close:"Close"},es:{close:"Cerrar"},pt:{close:"Fechar"},ru:{close:"\u0431\u043b\u0438\u0437\u043a\u043e"}};let RC=(()=>{class t{constructor(t){this.isHidden=!0,this.onXClosed=new Ac,this._hideClose=!1,this._size="md",this.clickOut=!1,this.language=t.getShortLanguage(),this.literals=Object.assign({},PC[this.language])}set size(t){this._size=["sm","md","lg","xl","auto"].indexOf(t)>-1?t:"md"}get size(){return this._size}set setClickOut(t){this.clickOut=""!==t&&Kv(t)}set hideClose(t){this._hideClose=Kv(t)}get hideClose(){return this._hideClose}close(t=!1){this.isHidden=!0,t&&this.onXClosed.emit(t)}open(){this.validPrimaryAction(),this.isHidden=!1}validPrimaryAction(){this.primaryAction||(this.primaryAction={action:()=>this.close(),label:this.literals.close}),this.primaryAction.action||(this.primaryAction.action=()=>this.close()),this.primaryAction.label||(this.primaryAction.label=this.literals.close)}}return t.\u0275fac=function(e){return new(e||t)(go(sb))},t.\u0275dir=Xt({type:t,inputs:{size:["p-size","size"],setClickOut:["p-click-out","setClickOut"],hideClose:["p-hide-close","hideClose"],primaryAction:["p-primary-action","primaryAction"],title:["p-title","title"],secondaryAction:["p-secondary-action","secondaryAction"]}}),t})(),LC=(()=>{class t{constructor(){this.activeOverlay=[]}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({factory:function(){return new t},token:t,providedIn:"root"}),t})(),BC=(()=>{class t extends RC{constructor(t,e){super(e),this.poActiveOverlayService=t,this.focusableElements="input, select, textarea, button:not([disabled]), a",this.id=function(){function t(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return t()+t()+"-"+t()+"-"+t()+"-"+t()+"-"+t()+t()+t()}()}close(t=!1){this.poActiveOverlayService.activeOverlay.pop(),super.close(t),this.removeEventListeners(),this.sourceElement&&this.sourceElement.focus()}closeModalOnEscapeKey(t){this.hideClose||(t.preventDefault(),t.stopPropagation(),this.close())}getPrimaryActionButtonType(){return this.primaryAction.danger?"danger":"primary"}getSecondaryActionButtonType(){return this.secondaryAction&&this.secondaryAction.danger&&!this.primaryAction.danger?"danger":"default"}onClickOut(t){this.clickOut&&!this.modalContent.nativeElement.contains(t.target)&&this.close()}open(){this.sourceElement=document.activeElement,super.open(),this.handleFocus()}handleFocus(){this.poActiveOverlayService.activeOverlay.push(this.id),setTimeout(()=>{this.modalContent&&(this.initFocus(),document.addEventListener("focus",this.focusFunction,!0))})}initFocus(){this.focusFunction=t=>{this.modalContent.nativeElement.contains(t.target)||this.poActiveOverlayService.activeOverlay[this.poActiveOverlayService.activeOverlay.length-1]!==this.id||(t.stopPropagation(),this.firstElement.focus())},this.setFirstElement(),this.hideClose?this.firstElement.focus():(this.modalContent.nativeElement.querySelectorAll(this.focusableElements)[1]||this.modalContent.nativeElement).focus()}removeEventListeners(){document.removeEventListener("focus",this.focusFunction,!0)}setFirstElement(){this.firstElement=this.modalContent.nativeElement.querySelector(this.focusableElements)||this.modalContent.nativeElement}}return t.\u0275fac=function(e){return new(e||t)(go(LC),go(sb))},t.\u0275cmp=zt({type:t,selectors:[["po-modal"]],viewQuery:function(t,e){if(1&t&&Hc(kv,5,xa),2&t){let t;Nc(t=Vc())&&(e.modalContent=t.first)}},features:[Ji],ngContentSelectors:dy,decls:1,vars:1,consts:[["class","po-modal","tabindex","0",3,"keydown.esc",4,"ngIf"],["tabindex","0",1,"po-modal",3,"keydown.esc"],[1,"po-modal-overlay"],[1,"po-modal-container","po-pb-2","po-pt-2",3,"mousedown"],[1,"po-modal-vertical-align"],["tabindex","-1"],["modalContent",""],[1,"po-modal-header"],[1,"po-modal-title","po-text-ellipsis"],["class","po-modal-header-close-button","tabindex","0",3,"click",4,"ngIf"],[1,"po-modal-body"],[1,"po-modal-footer"],[3,"p-disabled","p-label","p-loading","p-type","p-click",4,"ngIf"],[1,"po-button-modal-first-action",3,"p-disabled","p-label","p-loading","p-type","p-click"],["tabindex","0",1,"po-modal-header-close-button",3,"click"],[1,"po-icon","po-icon-close"],[3,"p-disabled","p-label","p-loading","p-type","p-click"]],template:function(t,e){1&t&&(Io(),po(0,Ov,15,10,"div",0)),2&t&&mo("ngIf",!e.isHidden)},directives:[rh,wb],encapsulation:2}),t})(),jC=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh,_b]]}),t})(),MC=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh]]}),t})(),NC=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[LC]}),t})(),HC=(()=>{class t{getColor(t){return Object.values(Yb).includes(t.color)?t.color:this.getColorFromType(t.type||t.color)}getColorFromType(t){switch(t){case"danger":return Yb.Color07;case"success":return Yb.Color11;case"warning":return Yb.Color08;default:return Yb.Color01}}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),VC=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[HC]}),t})(),zC=(()=>{class t{constructor(t,e,n){this.componentResolver=t,this.applicationRef=e,this.injector=n}createComponentInApplication(t){const e=this.componentResolver.resolveComponentFactory(t).create(this.injector);return this.applicationRef.attachView(e.hostView),document.body.appendChild(e.hostView.rootNodes[0]),e}destroyComponentInApplication(t){this.applicationRef.detachView(t.hostView),t.destroy()}}return t.\u0275fac=function(e){return new(e||t)(ur(_a),ur(Pl),ur(Qi))},t.\u0275prov=ht({factory:function(){return new t(ur(_a),ur(Pl),ur(Bi))},token:t,providedIn:"root"}),t})(),$C=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[zC],imports:[[]]}),t})(),UC=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[xb]}),t})();var WC=function(t){return t[t.Alert=0]="Alert",t[t.Confirm=1]="Confirm",t}({});const GC={en:{ok:"Ok"},es:{ok:"Ok"},pt:{ok:"Ok"},ru:{ok:"\u041e\u043a"}},qC={en:{cancel:"Cancel",confirm:"Confirm"},es:{cancel:"Cancelar",confirm:"Confirmar"},pt:{cancel:"Cancelar",confirm:"Confirmar"},ru:{cancel:"\u043e\u0442\u043c\u0435\u043d\u0438\u0442\u044c",confirm:"\u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c"}};let XC=(()=>{class t{constructor(t){this.primaryAction={label:"ok",action:()=>{}},this.language=t.getShortLanguage()}ngOnDestroy(){this.closeSubscription.unsubscribe()}ngOnInit(){this.closeSubscription=this.poModal.onXClosed.subscribe(t=>this.close(!0))}close(t=!1){t&&this.closeAction&&this.closeAction(),this.poModal.close(),this.destroy()}destroy(){this.componentRef&&this.componentRef.destroy()}configDialog(t,e,n,r,s){this.primaryAction={label:t,action:()=>{e&&e(),this.close()}},n&&(this.secondaryAction={label:n,action:()=>{r&&r(),this.close()}}),this.closeAction=s}open(t,e,n){switch(this.title=t.title,this.message=t.message,this.componentRef=n,this.setDialogLiterals(t,e),e){case WC.Confirm:this.configDialog(this.literalsConfirm.confirm,t.confirm,this.literalsConfirm.cancel,t.cancel,t.close);break;case WC.Alert:this.configDialog(this.literalsAlert.ok,t.ok)}this.poModal.open()}setDialogLiterals(t,e){const n=GC,r=qC,s=t.literals;e===WC.Alert?this.literalsAlert=Object.assign(Object.assign(Object.assign({},n.pt),n[this.language]),s):this.literalsConfirm=Object.assign(Object.assign(Object.assign({},r.pt),r[this.language]),s)}}return t.\u0275fac=function(e){return new(e||t)(go(sb))},t.\u0275cmp=zt({type:t,selectors:[["ng-component"]],viewQuery:function(t,e){if(1&t&&Hc(BC,7),2&t){let t;Nc(t=Vc())&&(e.poModal=t.first)}},decls:2,vars:4,consts:[[3,"p-title","p-primary-action","p-secondary-action"],[3,"innerHtml"]],template:function(t,e){1&t&&(vo(0,"po-modal",0),Co(1,"div",1),bo()),2&t&&(mo("p-title",e.title)("p-primary-action",e.primaryAction)("p-secondary-action",e.secondaryAction),zs(1),mo("innerHtml",e.message,Wr))},directives:[BC],encapsulation:2}),t})(),YC=(()=>{class t extends class{confirm(t){this.openDialog(WC.Confirm,t)}alert(t){this.openDialog(WC.Alert,t)}}{constructor(t){super(),this.poComponentInjector=t}openDialog(t,e){const n=this.poComponentInjector.createComponentInApplication(XC);n.changeDetectorRef.detectChanges(),n.instance.open(e,t,n)}}return t.\u0275fac=function(e){return new(e||t)(ur(zC))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),ZC=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[YC],imports:[[jC]]}),t})();var QC=function(t){return t[t.Bottom=0]="Bottom",t[t.Top=1]="Top",t}({}),KC=function(t){return t[t.Error=0]="Error",t[t.Information=1]="Information",t[t.Success=2]="Success",t[t.Warning=3]="Warning",t}({});let JC=(()=>{class t extends class{constructor(){this.orientation=QC.Bottom}}{constructor(t,e,n,r){super(),this.changeDetector=e,this.elementeRef=n,this.renderer=r,this.alive=!0,this.margin=20,this.observableOnClose=new D,this.toasterPosition="po-toaster-bottom"}ngOnDestroy(){this.alive=!1}ngAfterViewInit(){setTimeout(()=>this.renderer.addClass(this.toaster.nativeElement,"po-toaster-visible"))}changePosition(t){this.elementeRef.nativeElement.style.display="table",this.margin=6+44*t+6*t,this.orientation===QC.Top?this.toaster.nativeElement.style.top=this.margin+"px":this.toaster.nativeElement.style.bottom=this.margin+"px"}close(){this.observableOnClose.next(!0)}setFadeOut(){this.renderer.removeClass(this.toaster.nativeElement,"po-toaster-visible"),this.renderer.addClass(this.toaster.nativeElement,"po-toaster-invisible")}configToaster(t){switch(this.type=t.type,this.message=t.message,this.orientation=t.orientation,this.position=t.position,this.action=t.action,this.actionLabel=t.actionLabel,this.componentRef=t.componentRef,this.orientation===QC.Top&&(this.toasterPosition="po-toaster-top"),this.changePosition(this.position),this.type){case KC.Error:this.toasterType="po-toaster-error",this.icon="po-icon-warning";break;case KC.Information:this.toasterType="po-toaster-info",this.icon="po-icon-info";break;case KC.Success:this.toasterType="po-toaster-success",this.icon="po-icon-ok";break;case KC.Warning:this.toasterType="po-toaster-warning",this.icon="po-icon-warning"}this.changeDetector.detectChanges()}getIcon(){return this.icon}getToasterPosition(){return this.toasterPosition}getToasterType(){return this.toasterType}onButtonClose(t){t.preventDefault(),t.stopPropagation(),this.action&&!this.actionLabel?this.poToasterAction(t):this.close()}poToasterAction(t){t.preventDefault(),t.stopPropagation(),this.action(this)}}return t.\u0275fac=function(e){return new(e||t)(go(sb),go(Ka),go(xa),go(ka))},t.\u0275cmp=zt({type:t,selectors:[["po-toaster"]],viewQuery:function(t,e){if(1&t&&Hc(Pv,5),2&t){let t;Nc(t=Vc())&&(e.toaster=t.first)}},features:[Ji],decls:9,vars:9,consts:[[3,"click"],["toaster",""],[1,"po-toaster-icon"],[1,"po-toaster-message"],["class","po-toaster-action",3,"click",4,"ngIf"],[1,"po-toaster-close",3,"click"],[1,"po-icon","po-icon-close"],[1,"po-toaster-action",3,"click"]],template:function(t,e){var n,r;1&t&&(vo(0,"div",0,1),xo("click",function(){return e.close()}),vo(2,"div",2),Co(3,"span"),bo(),vo(4,"div",3),Jo(5),bo(),po(6,Rv,2,1,"div",4),vo(7,"button",5),xo("click",function(t){return e.onButtonClose(t)}),Co(8,"span",6),bo(),bo()),2&t&&("po-toaster ",n=e.getToasterType()," ",r=e.getToasterPosition()," po-clickable",Uo(tr,zo,function(t,e,n,r,s,i){const o=function(t,e,n,r){const s=lo(t,e,n);return lo(t,e+1,r)||s}(t,Ve(),n,s);return $e(2),o?e+ct(n)+r+ct(s)+i:Vs}(Ie(),"po-toaster ",n," ",r," po-clickable"),!0),zs(3),na("po-icon ",e.getIcon(),""),zs(2),ta(e.message),zs(1),mo("ngIf",e.action&&e.actionLabel))},directives:[rh],encapsulation:2}),t})(),tw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[],imports:[[wh]]}),t})(),ew=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[],imports:[[NC,VC,$C,UC,Ob,ZC,fb,tw],NC,VC,$C,UC,Ob,ZC,tw]}),t})(),nw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh]]}),t})(),rw=(()=>{class t{transform(t,e){if(Jv(t,"string")&&/^(([0-1][0-9])|(2[0-3])):[0-5][0-9]:[0-5][0-9][\.]?([0-9]{1,6})?$/g.test(t)){const n=e?e.lastIndexOf("f")-e.indexOf("f")+1:0,r=this.addDotMiliseconds(t.substring(9,9+n),n),s=this.getFormatMiliseconds(n);return this.formatValue(t,e,s,r)}return null}addDotMiliseconds(t,e){return t&&e&&(t="."+t),t}formatValue(t,e,n,r){if(t&&e){const s=t.substring(0,2),i=t.substring(3,5),o=t.substring(6,8);return(e=(e=(e=e.replace("HH",s)).replace("mm",i)).replace("ss",o)).replace(`.${n}`,r)}return t}getFormatMiliseconds(t){let e="";for(let n=0;n<t;n++)e+="f";return e}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275pipe=Yt({name:"po_time",type:t,pure:!0}),t})(),sw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[],imports:[[]]}),t})(),iw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[yh],imports:[[wh,ny,hm,_b,FC,DC,gb,jC,nw,AC,sw,kb,ab]]}),t})();class ow{constructor(t){this.http=t}execute(t,e){return"string"==typeof t?this.post(t,e):hd(t(e))}post(t,e){return this.http.post(t,e)}setFormDefaultIfEmpty(t){return t||{value:{},fields:[],focus:void 0}}}let aw=(()=>{class t extends ow{constructor(t){super(t)}createAndUpdateFieldsForm(t=[],e=[]){return[...t].reduce((t,n)=>{const r=t.findIndex(t=>t.property===n.property);return r>=0?t[r]=Object.assign(Object.assign({},e[r]),n):t.push(n),t},[...e])}executeLoad(t,e){return this.execute(t,e).pipe(x(t=>this.setFormDefaultIfEmpty(t)))}}return t.\u0275fac=function(e){return new(e||t)(ur(Mm))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),cw=(()=>{class t extends ow{constructor(t){super(t)}sendFieldChange(t,e){return this.execute(t.validate,{property:t.property,value:e}).pipe(x(t=>this.setFieldDefaultIfEmpty(t)))}sendFormChange(t,e,n){return this.execute(t,{property:e.property,value:n}).pipe(x(t=>this.setFormDefaultIfEmpty(t)))}updateFieldsForm(t=[],e=[]){return[...t].reduce((t,n)=>{const r=t.findIndex(t=>t.property===n.property);return r>=0&&(t[r]=Object.assign(Object.assign({},e[r]),n)),t},[...e])}setFieldDefaultIfEmpty(t){return t||{field:{}}}}return t.\u0275fac=function(e){return new(e||t)(ur(Mm))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),lw=(()=>{class t extends class{constructor(){this.stackTop=[],this.stackBottom=[],this.defaultDuration=1e4}success(t){this.createToaster(this.buildToaster(t,KC.Success))}warning(t){this.createToaster(this.buildToaster(t,KC.Warning))}error(t){this.createToaster(this.buildToaster(t,KC.Error))}information(t){this.createToaster(this.buildToaster(t,KC.Information))}setDefaultDuration(t){this.defaultDuration=t}buildToaster(t,e){let n,r=0;void 0===t.orientation||t.orientation===QC.Bottom?(r=this.stackBottom.length,n=QC.Bottom):(r=this.stackTop.length,n=QC.Top);const s={componentRef:void 0,message:t.message||t,type:e,orientation:n,action:t.action,actionLabel:t.actionLabel,position:r,duration:t.duration||this.defaultDuration};return t.action&&(s.action=e=>{t.action(),this.destroyToaster(e.componentRef)}),s}}{constructor(t){super(),this.poComponentInjector=t}createToaster(t){const e=this.poComponentInjector.createComponentInApplication(JC);t.componentRef=e,e.changeDetectorRef.detectChanges(),e.instance.configToaster(t);const n=t.orientation===QC.Top?this.stackTop:this.stackBottom;n.push(e),this.verifyLimitToaster(n),this.observableOnClose(e),t.action&&t.actionLabel||Od(t.duration).pipe(function(t,e=!1){return n=>n.lift(new ly(t,e))}(()=>e.instance.alive)).subscribe(()=>{this.destroyToaster(e)})}destroyToaster(t){let e;e=t.instance.orientation===QC.Top?this.stackTop:this.stackBottom,t.instance.setFadeOut();const n=e.indexOf(t);e.splice(n,1),setTimeout(()=>{this.poComponentInjector.destroyComponentInApplication(t);for(let t=0;t<e.length;t++)e[t].instance.changePosition(t)},200)}observableOnClose(t){t.instance.observableOnClose.subscribe(()=>{this.destroyToaster(t)})}verifyLimitToaster(t){t.length>5&&this.destroyToaster(t[0])}}return t.\u0275fac=function(e){return new(e||t)(ur(zC))},t.\u0275prov=ht({factory:function(){return new t(ur(zC))},token:t,providedIn:"root"}),t})(),uw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[],imports:[[wh,ny,Qm,Fb,_b,IC,Pb,FC,DC,OC,SC,EC,kC,gb,jC,MC,ew,iw,kb,ab],FC,IC,OC,kC]}),t})(),hw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[],imports:[[wh,hm]]}),t})();var dw=function(t){return t.Horizontal="horizontal",t.Vertical="vertical",t}({}),pw=function(t){return t.Danger="danger",t.Info="info",t.Success="success",t.Warning="warning",t}({});const fw=Object.values(Yb),gw=dw.Vertical;let mw=(()=>{class t{constructor(){this.click=new Ac,this.poTagOrientation=dw,this._orientation=gw}set color(t){this._color=fw.includes(t)?t:void 0}get color(){return this._color}set icon(t){this._icon=this.type?Kv(t):t}get icon(){return this._icon}set inverse(t){this._inverse=Kv(t)}get inverse(){return this._inverse}set orientation(t){this._orientation=Object.values(dw).includes(t)?t:gw}get orientation(){return this._orientation}set type(t){this._type=Object.values(pw).includes(t)?t:void 0}get type(){return this._type}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275dir=Xt({type:t,inputs:{color:["p-color","color"],icon:["p-icon","icon"],inverse:["p-inverse","inverse"],orientation:["p-orientation","orientation"],type:["p-type","type"],label:["p-label","label"],value:["p-value","value"]},outputs:{click:"p-click"}}),t})();var yw=function(t){return t.Danger="po-icon-close",t.Info="po-icon-info",t.Success="po-icon-ok",t.Warning="po-icon-warning",t}({});const vw="po-tag-"+pw.Info;let bw=(()=>{class t extends mw{ngOnInit(){this.isClickable=this.click.observers.length>0}get iconFromType(){switch(this.type){case pw.Danger:return yw.Danger;case pw.Info:return yw.Info;case pw.Success:return yw.Success;case pw.Warning:return yw.Warning}}get tagColor(){return this.type?this.inverse?`po-tag-${this.type}-inverse`:`po-tag-${this.type}`:this.color?this.inverse?`po-text-${this.color}`:`po-${this.color}`:this.inverse?`${vw}-inverse`:vw}get tagOrientation(){return this.orientation===this.poTagOrientation.Horizontal}onClick(){this.click.emit({value:this.value,type:this.type})}onKeyPressed(t){t.preventDefault(),t.stopPropagation(),this.onClick()}}return t.\u0275fac=function(){let e;return function(n){return(e||(e=zn(t)))(n||t)}}(),t.\u0275cmp=zt({type:t,selectors:[["po-tag"]],features:[Ji],decls:7,vars:10,consts:[[1,"po-tag-container"],["class","po-tag-title po-text-nowrap",4,"ngIf"],[1,"po-tag-sub-container"],["tabindex","0",1,"po-tag",3,"ngClass","click","keydown.enter","keydown.space","keyup.space"],["class","po-tag-icon",3,"p-icon",4,"ngIf"],[1,"po-tag-value"],[1,"po-tag-title","po-text-nowrap"],[1,"po-tag-label"],[1,"po-tag-icon",3,"p-icon"]],template:function(t,e){1&t&&(vo(0,"div",0),po(1,Lv,3,1,"div",1),vo(2,"div",2),vo(3,"div",3),xo("click",function(){return e.onClick()})("keydown.enter",function(t){return e.onKeyPressed(t)})("keydown.space",function(t){return t.preventDefault()})("keyup.space",function(t){return e.onKeyPressed(t)}),po(4,Bv,1,1,"po-icon",4),vo(5,"span",5),Jo(6),bo(),bo(),bo(),bo()),2&t&&(Ho("po-tag-container-horizontal",e.tagOrientation),zs(1),mo("ngIf",e.label),zs(2),Ho("po-clickable",e.isClickable)("po-tag-inverse",e.inverse),mo("ngClass",e.tagColor),zs(1),mo("ngIf",e.icon),zs(2),ta(e.value))},directives:[rh,Ju,ob],encapsulation:2,changeDetection:0}),t})(),Cw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[],imports:[[wh,ab]]}),t})(),ww=(()=>{class t{constructor(t){this.http=t}onLoad(t,e){return this.http.post(t,e).toPromise()}}return t.\u0275fac=function(e){return new(e||t)(ur(Mm))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),_w=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[vh,mh,yh,rw,gh,aw,cw,ww],imports:[[wh,ny,xC,hw,uw,Cw,sw]]}),t})();Math;let Dw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh,kb]]}),t})(),Ew=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh,ny,uw]]}),t})(),Sw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[],imports:[[wh,hm,_b,AC]]}),t})(),xw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh]]}),t})(),Aw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh,hm,xw,uw,gb,ab]]}),t})(),Tw=(()=>{class t{constructor(){this.subjectChild=new D,this.subjectParent=new D}receiveFromChildMenuClicked(){return this.subjectChild.asObservable()}receiveFromParentMenuClicked(){return this.subjectParent.asObservable()}sendToParentMenuClicked(t){this.subjectChild.next(t)}sendToChildMenuClicked(t){this.subjectParent.next(t)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),kw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[Tw],imports:[[wh,hm,uw,kb]]}),t})(),Fw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh,AC,kb,ab]]}),t})(),Iw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh,hm]]}),t})(),Ow=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh,hm]]}),t})(),Pw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh,Fw,Iw,Ow,Aw,ab]]}),t})(),Rw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh,ny,hm,ib,_b,SC,TC,uw,fb,jC]]}),t})(),Lw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[],imports:[[wh,hm,DC]]}),t})(),Bw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh]]}),t})(),jw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh,nw]]}),t})(),Mw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[],imports:[[wh,Wv,AC,ab]]}),t})(),Nw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh,ny,DC,uw]]}),t})(),Hw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({imports:[[wh,DC]]}),t})(),Vw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[],imports:[[Uv,Wv,ib,_b,Fb,Pb,_C,DC,SC,EC,xC,TC,_w,uw,Dw,Ew,ab,hw,Sw,gb,Aw,kw,jC,Pw,Rw,nw,AC,MC,Lw,Bw,iw,jw,Cw,Mw,Nw,Hw],Uv,Wv,ib,_b,Fb,Pb,_C,DC,SC,EC,xC,TC,_w,uw,Dw,Ew,ab,hw,Sw,gb,Aw,kw,jC,Pw,Rw,nw,AC,MC,Lw,Bw,iw,jw,Cw,Mw,Nw,Hw]}),t})(),zw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[],imports:[[kb],kb]}),t})(),$w=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[],imports:[[]]}),t})();const Uw={en:{closeButton:"Close",details:"Details",detail:"Detail",error:"Error",warning:"Warning",information:"Information",success:"Success"},es:{closeButton:"Cerrar",details:"Detalles",detail:"Detalle",error:"Error",warning:"Advertencia",information:"Informacion",success:"\xc9xito"},pt:{closeButton:"Fechar",details:"Detalhes",detail:"Detalhe",error:"Erro",warning:"Aviso",information:"Informa\xe7\xe3o",success:"Sucesso"},ru:{closeButton:"\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0442\u044c",details:"\u0414\u0435\u0442\u0430\u043b\u0438",detail:"\u0414\u0435\u0442\u0430\u043b\u044c",error:"\u041e\u0448\u0438\u0431\u043a\u0430",warning:"\u041f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435",information:"\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f",success:"Y\u0441\u043f\u0435\u0445"}},Ww={success:"color-11",error:"color-07",warning:"color-08",info:""};let Gw=(()=>{class t{constructor(t){this.languageService=t,this.closed=new Ac,this.details=[],this.language=this.languageService.getShortLanguage(),this.literals=Uw[this.language],this.primaryAction={action:()=>this.close(),label:this.literals.closeButton}}set detail(t){t&&t.length&&(this.details=this.filterByValidDetails(t)),this.title=this.formatTitle(this.details)}close(){this.modal.close(),this.closed.emit()}formatDetailItemTitle(t){return t.code?`${t.code} - ${t.message}`:t.message}open(){this.modal.open()}typeColor(t){return Ww[t]}typeValue(t){return Uw[this.language][t]||t}addValidDetail(t,e){return e.message?t.concat(this.getValidDetailProperties(e)):t}getValidDetailProperties({code:t,message:e,detailedMessage:n,type:r}){return{code:t,message:e,detailedMessage:n,type:r}}filterByValidDetails(t){return t.reduce((t,e)=>this.addValidDetail(t,e),[])}formatTitle(t){return t.length>1?`${this.literals.details} (${t.length})`:this.literals.detail}}return t.\u0275fac=function(e){return new(e||t)(go(sb))},t.\u0275cmp=zt({type:t,selectors:[["po-http-interceptor-detail"]],viewQuery:function(t,e){if(1&t&&Hc(BC,7),2&t){let t;Nc(t=Vc())&&(e.modal=t.first)}},decls:4,vars:3,consts:[["p-hide-close","","p-size","lg",3,"p-primary-action","p-title"],[1,"po-row"],[1,"po-md-12","po-mt-1","po-mb-1"],[3,"p-label",4,"ngFor","ngForOf"],[3,"p-label"],["class","po-row po-mb-1",4,"ngIf"],[1,"po-row","po-mb-1"],[3,"p-color","p-value"]],template:function(t,e){1&t&&(vo(0,"po-modal",0),vo(1,"div",1),vo(2,"po-accordion",2),po(3,Mv,5,3,"po-accordion-item",3),bo(),bo(),bo()),2&t&&(mo("p-primary-action",e.primaryAction)("p-title",e.title),zs(3),mo("ngForOf",e.details))},directives:[BC,Vv,eh,Hv,rh,bw],encapsulation:2}),t})();const qw={pt:{help:"Ajuda",details:"Detalhes",serverNotResponse:"Servidor n\xe3o est\xe1 respondendo"},en:{help:"Help",details:"Details",serverNotResponse:"Server is not responding"},es:{help:"Ayuda",details:"Detalles",serverNotResponse:"El servidor no est\xe1 respondiendo"},ru:{help:"\u041f\u043e\u043c\u043e\u0433\u0438\u0442\u0435",details:"\u0414\u0435\u0442\u0430\u043b\u0438",serverNotResponse:"\u0421\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442"}},Xw="X-PO-No-Error",Yw="X-PO-No-Message";let Zw=(()=>{class t extends class{constructor(t,e,n){this.componentInjector=t,this.notification=e,this.languageService=n,this.notificationTypes=["success","warning","error","information"],this.literals=qw[this.languageService.getShortLanguage()],this.httpInterceptorDetailComponent=void 0}intercept(t,e){const n=t.clone();return t=t&&this.hasParameters(t)?this.cloneRequestWithoutParameters(t):t,e.handle(t).pipe(bp(t=>{t instanceof Lm&&this.processResponse(t,n)},t=>{this.processErrorResponse(t,n)}))}processResponse(t,e){if(!this.hasNoMessageParam(e)&&t.body&&t.body._messages){const e=t.body._messages;e instanceof Array?e.forEach(t=>{this.showNotification(t)}):this.showNotification(e)}}processErrorResponse(t,e){const n=0!==t.status?t.error:{code:0,message:this.literals.serverNotResponse,detailedMessage:t.message},r=this.hasNoErrorParam(e),s=this.hasNoMessageParam(e),i=this.notificationTypes.slice(1);n&&n.message&&!r&&!s&&this.showNotification(Object.assign(Object.assign({},n),{type:i.includes(n.type)?n.type:"error"}))}cloneRequestWithoutParameters(t){const e=t.headers.delete(Xw).delete(Yw);return t.clone({headers:e})}createModal(t){const e=t.details?[t,...t.details]:[t];this.httpInterceptorDetailComponent=this.componentInjector.createComponentInApplication(Gw),this.httpInterceptorDetailComponent.instance.detail=e,this.httpInterceptorDetailComponent.instance.closed.subscribe(()=>this.destroyModal()),this.httpInterceptorDetailComponent.instance.open()}destroyModal(){this.httpInterceptorDetailComponent&&(this.componentInjector.destroyComponentInApplication(this.httpInterceptorDetailComponent),this.httpInterceptorDetailComponent=void 0)}hasMessage(t){return t&&t.message}hasNoErrorParam(t){const e=t&&t.headers.get(Xw);return e&&"true"===e.toString().toLocaleLowerCase()}hasNoMessageParam(t){const e=t&&t.headers.get(Yw);return e&&"true"===e.toString().toLocaleLowerCase()}hasParameters(t){return t.headers.has(Xw)||t.headers.has(Yw)}showNotification(t){if(!this.hasMessage(t))return;const e=this.notificationTypes.includes(t.type)?t.type:"information",n=this.generateNotificationAction(t);this.notification[e]({message:t.message,actionLabel:n.label,action:n.action})}generateDetailModal(t){return()=>{this.httpInterceptorDetailComponent||this.createModal(t)}}generateNotificationAction(t){let e,n;return!t.helpUrl||t.detailedMessage||t.details?(t.detailedMessage||t.details)&&(n=this.literals.details,e=this.generateDetailModal(t)):(n=this.literals.help,e=this.generateUrlHelpFunction(t.helpUrl)),{label:n,action:e}}generateUrlHelpFunction(t){return()=>{window.open(t,"_blank")}}}{constructor(t,e,n){super(e,t,n)}}return t.\u0275fac=function(e){return new(e||t)(ur(lw),ur(zC),ur(sb))},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})(),Qw=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[Zw,lw,{provide:Hm,useClass:Zw,multi:!0}],imports:[[wh,Uv,jC,tw,Cw]]}),t})(),Kw=(()=>{class t{constructor(){this.controlHttpRequest=new D}getControlHttpRequest(){return this.controlHttpRequest.asObservable()}send(t=0){this.controlHttpRequest.next(t)}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275prov=ht({token:t,factory:t.\u0275fac}),t})();const Jw="X-PO-No-Count-Pending-Requests",t_="X-PO-Screen-Lock";let e_=(()=>{class t{constructor(t,e){this.controlHttpRequest=t,this.poComponentInjector=e,this.loadingOverlayComponent=void 0,this.pendingRequests=0,this.overlayRequests=0}intercept(t,e){const n=t.clone();return t=this.requestCloneWithoutHeaderParam([Jw,t_],t),this.setCountPendingRequests(!0,n),this.setCountOverlayRequests(!0,n),e.handle(t).pipe(bp(t=>{t instanceof Lm&&(this.setCountPendingRequests(!1,n),this.setCountOverlayRequests(!1,n))}),rp(t=>(this.setCountPendingRequests(!1,n),this.setCountOverlayRequests(!1,n),dd(t))))}getCountPendingRequests(){return this.controlHttpRequest.getControlHttpRequest()}buildLoading(){this.loadingOverlayComponent||(this.loadingOverlayComponent=this.poComponentInjector.createComponentInApplication(ub),this.loadingOverlayComponent.instance.screenLock=!0,this.loadingOverlayComponent.instance.changeDetector.detectChanges())}destroyLoading(){this.loadingOverlayComponent&&(this.poComponentInjector.destroyComponentInApplication(this.loadingOverlayComponent),this.loadingOverlayComponent=void 0)}requestCloneWithoutHeaderParam(t,e){let n=!1;return t.forEach(t=>{e.headers.has(t)&&(e.headers.delete(t),n=!0)}),n?e.clone({headers:e.headers}):e}setCountPendingRequests(t,e){const n=e.headers.has(Jw),r=e.headers.get(Jw);n&&"true"===r.toString().toLowerCase()||(this.pendingRequests+=t?1:-1,this.controlHttpRequest.send(this.pendingRequests))}setCountOverlayRequests(t,e){if(e.headers.has(t_)){if("false"===e.headers.get(t_).toString().toLowerCase())return;this.overlayRequests+=t?1:-1,this.overlayRequests>0?this.buildLoading():this.destroyLoading()}}}return t.\u0275fac=function(e){return new(e||t)(ur(Kw),ur(zC))},t.\u0275prov=ht({factory:function(){return new t(ur(Kw),ur(zC))},token:t,providedIn:"root"}),t})(),n_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[Kw,e_,zC,{provide:Hm,useClass:e_,multi:!0}],imports:[[gb]]}),t})(),r_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[],imports:[[Qw,n_],Qw,n_]}),t})(),s_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[],imports:[[sw],sw]}),t})(),i_=(()=>{class t{}return t.\u0275fac=function(e){return new(e||t)},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[lw],imports:[[Vw,zw,$w,r_,s_,ew],Vw,zw,r_,$w,s_,ew]}),t})();new Gn("I18N_CONFIG");let o_=(()=>{class t{constructor(){this.title="chart",this.series=[{label:"Angular",data:100},{label:"React",data:10}]}notify(t,e){const{chart:n}=t,{teste:r}=e;console.log(n,r),this.series=n}}return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=zt({type:t,selectors:[["chart-root"]],decls:1,vars:1,consts:[[3,"p-series"]],template:function(t,e){1&t&&Co(0,"po-chart",0),2&t&&mo("p-series",e.series)},directives:[cC],encapsulation:2}),t})(),a_=(()=>{class t{constructor(t){const e=function(t,e){const n=function(t,e){return e.get(_a).resolveComponentFactory(t).inputs}(t,e.injector),r=e.strategyFactory||new Sd(t,e.injector),s=function(t){const e={};return t.forEach(({propName:t,templateName:n})=>{var r;e[(r=n,r.replace(/[A-Z]/g,t=>`-${t.toLowerCase()}`))]=t}),e}(n);class i extends Ad{constructor(t){super(),this.injector=t}get ngElementStrategy(){if(!this._ngElementStrategy){const t=this._ngElementStrategy=r.create(this.injector||e.injector);n.forEach(({propName:e})=>{if(!this.hasOwnProperty(e))return;const n=this[e];delete this[e],t.setInputValue(e,n)})}return this._ngElementStrategy}attributeChangedCallback(t,e,n,r){this.ngElementStrategy.setInputValue(s[t],n)}connectedCallback(){let t=!1;this.ngElementStrategy.events&&(this.subscribeToEvents(),t=!0),this.ngElementStrategy.connect(this),t||this.subscribeToEvents()}disconnectedCallback(){this._ngElementStrategy&&this._ngElementStrategy.disconnect(),this.ngElementEventsSubscription&&(this.ngElementEventsSubscription.unsubscribe(),this.ngElementEventsSubscription=null)}subscribeToEvents(){this.ngElementEventsSubscription=this.ngElementStrategy.events.subscribe(t=>{const e=function(t,e,n){if("function"!=typeof CustomEvent){const r=t.createEvent("CustomEvent");return r.initCustomEvent(e,!1,!1,n),r}return new CustomEvent(e,{bubbles:!1,cancelable:!1,detail:n})}(this.ownerDocument,t.name,t.value);this.dispatchEvent(e)})}}return i.observedAttributes=Object.keys(s),n.forEach(({propName:t})=>{Object.defineProperty(i.prototype,t,{get(){return this.ngElementStrategy.getInputValue(t)},set(e){this.ngElementStrategy.setInputValue(t,e)},configurable:!0,enumerable:!0})}),i}(o_,{injector:t});customElements.define("chart-root",e)}ngDoBootstrap(){}}return t.\u0275fac=function(e){return new(e||t)(ur(Qi))},t.\u0275mod=Gt({type:t}),t.\u0275inj=dt({providers:[],imports:[[ed,i_,_C]]}),t})();(function(){if(xl)throw new Error("Cannot enable prod mode after platform setup.");Sl=!1})(),Jh().bootstrapModule(a_).catch(t=>console.error(t))},621:t=>{function e(t){return Promise.resolve().then(()=>{var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e})}e.keys=()=>[],e.resolve=e,e.id=621,t.exports=e}},t=>{"use strict";t(t.s=120)}]);';